<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: lib/smux.h Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('smux_8h.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">lib/smux.h</div>  </div>
</div>
<div class="contents">
<a href="smux_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* SNMP support</span>
<a name="l00002"></a>00002 <span class="comment"> * Copyright (C) 1999 Kunihiro Ishiguro &lt;kunihiro@zebra.org&gt;</span>
<a name="l00003"></a>00003 <span class="comment"> *</span>
<a name="l00004"></a>00004 <span class="comment"> * This file is part of GNU Zebra.</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * GNU Zebra is free software; you can redistribute it and/or modify it</span>
<a name="l00007"></a>00007 <span class="comment"> * under the terms of the GNU General Public License as published by the</span>
<a name="l00008"></a>00008 <span class="comment"> * Free Software Foundation; either version 2, or (at your option) any</span>
<a name="l00009"></a>00009 <span class="comment"> * later version.</span>
<a name="l00010"></a>00010 <span class="comment"> *</span>
<a name="l00011"></a>00011 <span class="comment"> * GNU Zebra is distributed in the hope that it will be useful, but</span>
<a name="l00012"></a>00012 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00014"></a>00014 <span class="comment"> * General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment"> * along with GNU Zebra; see the file COPYING.  If not, write to the Free</span>
<a name="l00018"></a>00018 <span class="comment"> * Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA</span>
<a name="l00019"></a>00019 <span class="comment"> * 02111-1307, USA.  </span>
<a name="l00020"></a>00020 <span class="comment"> */</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="preprocessor">#ifndef _ZEBRA_SNMP_H</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span><span class="preprocessor">#define _ZEBRA_SNMP_H</span>
<a name="l00024"></a>00024 <span class="preprocessor"></span>
<a name="l00025"></a><a class="code" href="smux_8h.html#aec5d1e05d6436a42862090e96b9a3b6c">00025</a> <span class="preprocessor">#define SMUX_PORT_DEFAULT 199</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span>
<a name="l00027"></a><a class="code" href="smux_8h.html#a707d09e8fed039733a47dffa3d12005e">00027</a> <span class="preprocessor">#define SMUXMAXPKTSIZE    1500</span>
<a name="l00028"></a><a class="code" href="smux_8h.html#a7ede887b14b4edc36c731fffbdaad217">00028</a> <span class="preprocessor"></span><span class="preprocessor">#define SMUXMAXSTRLEN      256</span>
<a name="l00029"></a>00029 <span class="preprocessor"></span>
<a name="l00030"></a><a class="code" href="smux_8h.html#a607b65e9a3f2f48e94805032feeb38a3">00030</a> <span class="preprocessor">#define SMUX_OPEN       (ASN_APPLICATION | ASN_CONSTRUCTOR | 0)</span>
<a name="l00031"></a><a class="code" href="smux_8h.html#a1fbaaf6943410d741ff83c15b53189fe">00031</a> <span class="preprocessor"></span><span class="preprocessor">#define SMUX_CLOSE      (ASN_APPLICATION | ASN_PRIMITIVE | 1)</span>
<a name="l00032"></a><a class="code" href="smux_8h.html#a83f33d4f3f6efa0cbf00b047e4c47118">00032</a> <span class="preprocessor"></span><span class="preprocessor">#define SMUX_RREQ       (ASN_APPLICATION | ASN_CONSTRUCTOR | 2)</span>
<a name="l00033"></a><a class="code" href="smux_8h.html#aa5ba2fe760022fc01e9b9c599d68deb0">00033</a> <span class="preprocessor"></span><span class="preprocessor">#define SMUX_RRSP       (ASN_APPLICATION | ASN_PRIMITIVE | 3)</span>
<a name="l00034"></a><a class="code" href="smux_8h.html#ae665fc243be21089a912722f508db11e">00034</a> <span class="preprocessor"></span><span class="preprocessor">#define SMUX_SOUT       (ASN_APPLICATION | ASN_PRIMITIVE | 4)</span>
<a name="l00035"></a>00035 <span class="preprocessor"></span>
<a name="l00036"></a><a class="code" href="smux_8h.html#aead4fcbcd3905fb4154bf433c81f28d0">00036</a> <span class="preprocessor">#define SMUX_GET        (ASN_CONTEXT | ASN_CONSTRUCTOR | 0)</span>
<a name="l00037"></a><a class="code" href="smux_8h.html#ac7eaee22c71c1b8d79d6c51d77b110cb">00037</a> <span class="preprocessor"></span><span class="preprocessor">#define SMUX_GETNEXT    (ASN_CONTEXT | ASN_CONSTRUCTOR | 1)</span>
<a name="l00038"></a><a class="code" href="smux_8h.html#ac76127c2e19d5a74acc1cca651099770">00038</a> <span class="preprocessor"></span><span class="preprocessor">#define SMUX_GETRSP     (ASN_CONTEXT | ASN_CONSTRUCTOR | 2)</span>
<a name="l00039"></a><a class="code" href="smux_8h.html#a925664a956d0fb6b2341714814613d7c">00039</a> <span class="preprocessor"></span><span class="preprocessor">#define SMUX_SET    (ASN_CONTEXT | ASN_CONSTRUCTOR | 3)</span>
<a name="l00040"></a><a class="code" href="smux_8h.html#a2eb8f285c189490e31cb5a4a0cebe14a">00040</a> <span class="preprocessor"></span><span class="preprocessor">#define SMUX_TRAP   (ASN_CONTEXT | ASN_CONSTRUCTOR | 4)</span>
<a name="l00041"></a>00041 <span class="preprocessor"></span>
<a name="l00042"></a><a class="code" href="smux_8h.html#a4b43fe23d77aa4e3550bf2c2864a41d6">00042</a> <span class="preprocessor">#define SMUX_MAX_FAILURE 3</span>
<a name="l00043"></a>00043 <span class="preprocessor"></span>
<a name="l00044"></a>00044 <span class="comment">/* Structures here are mostly compatible with UCD SNMP 4.1.1 */</span>
<a name="l00045"></a><a class="code" href="smux_8h.html#ac8ad57fb87ae8e10684a7b910e92bba6">00045</a> <span class="preprocessor">#define MATCH_FAILED     (-1)</span>
<a name="l00046"></a><a class="code" href="smux_8h.html#a17594c2d9c7cd3a685dd94b190d00cf5">00046</a> <span class="preprocessor"></span><span class="preprocessor">#define MATCH_SUCCEEDED  0</span>
<a name="l00047"></a>00047 <span class="preprocessor"></span>
<a name="l00048"></a>00048 <span class="comment">/* SYNTAX TruthValue from SNMPv2-TC. */</span>
<a name="l00049"></a><a class="code" href="smux_8h.html#a6925b6a4277252cfa3875f8bd263ed04">00049</a> <span class="preprocessor">#define SNMP_TRUE  1</span>
<a name="l00050"></a><a class="code" href="smux_8h.html#a16a2f057eddb78f6b796be1f926406db">00050</a> <span class="preprocessor"></span><span class="preprocessor">#define SNMP_FALSE 2</span>
<a name="l00051"></a>00051 <span class="preprocessor"></span>
<a name="l00052"></a>00052 <span class="comment">/* SYNTAX RowStatus from SNMPv2-TC. */</span>
<a name="l00053"></a><a class="code" href="smux_8h.html#acd99cb4c6b560616ca4cec0043d7aa16">00053</a> <span class="preprocessor">#define SNMP_VALID  1</span>
<a name="l00054"></a><a class="code" href="smux_8h.html#a897a86c6fac3bf311f48ce048a0036de">00054</a> <span class="preprocessor"></span><span class="preprocessor">#define SNMP_INVALID 2</span>
<a name="l00055"></a>00055 <span class="preprocessor"></span>
<a name="l00056"></a><a class="code" href="smux_8h.html#a046c11781e182edbfc70aae1bba67876">00056</a> <span class="preprocessor">#define IN_ADDR_SIZE sizeof(struct in_addr)</span>
<a name="l00057"></a>00057 <span class="preprocessor"></span>
<a name="l00058"></a>00058 <span class="keyword">struct </span><a class="code" href="structvariable.html">variable</a>;
<a name="l00059"></a>00059 
<a name="l00060"></a><a class="code" href="smux_8h.html#a41b4afdce9bd47a5d68ba0b0b966c8b0">00060</a> <span class="preprocessor">#define REGISTER_MIB(descr, var, vartype, theoid)       \</span>
<a name="l00061"></a>00061 <span class="preprocessor">    smux_register_mib(descr, (struct variable *)var, sizeof(struct vartype), \</span>
<a name="l00062"></a>00062 <span class="preprocessor">    sizeof(var)/sizeof(struct vartype),         \</span>
<a name="l00063"></a>00063 <span class="preprocessor">    theoid, sizeof(theoid)/sizeof(oid))</span>
<a name="l00064"></a>00064 <span class="preprocessor"></span>
<a name="l00065"></a><a class="code" href="smux_8h.html#ace14719892f7615b0228ad97d4cc8040">00065</a> <span class="keyword">typedef</span> int (<a class="code" href="smux_8h.html#ace14719892f7615b0228ad97d4cc8040">WriteMethod</a>)(<span class="keywordtype">int</span> action,
<a name="l00066"></a>00066               u_char  *var_val,
<a name="l00067"></a>00067               u_char   var_val_type,
<a name="l00068"></a>00068               <span class="keywordtype">size_t</span>   var_val_len,
<a name="l00069"></a>00069               u_char  *statP,
<a name="l00070"></a>00070               oid     *<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>,
<a name="l00071"></a>00071               <span class="keywordtype">size_t</span>   <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>,
<a name="l00072"></a>00072               <span class="keyword">struct </span><a class="code" href="structvariable.html">variable</a> *v);
<a name="l00073"></a>00073 
<a name="l00074"></a><a class="code" href="smux_8h.html#a94fd22b3e8ddf3429749fb3635dbadc6">00074</a> <span class="keyword">typedef</span> u_char *(<a class="code" href="smux_8h.html#a94fd22b3e8ddf3429749fb3635dbadc6">FindVarMethod</a>)(<span class="keyword">struct</span> <a class="code" href="structvariable.html">variable</a> *v,
<a name="l00075"></a>00075                 oid     *<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>,
<a name="l00076"></a>00076                 <span class="keywordtype">size_t</span>  *<a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>,
<a name="l00077"></a>00077                 <span class="keywordtype">int</span>      exact,
<a name="l00078"></a>00078                 <span class="keywordtype">size_t</span>  *var_len,
<a name="l00079"></a>00079                 <a class="code" href="smux_8h.html#ace14719892f7615b0228ad97d4cc8040">WriteMethod</a>   **write_method);
<a name="l00080"></a>00080 
<a name="l00081"></a>00081 <span class="comment">/* SNMP variable */</span>
<a name="l00082"></a><a class="code" href="structvariable.html">00082</a> <span class="keyword">struct </span><a class="code" href="structvariable.html">variable</a>
<a name="l00083"></a>00083 {
<a name="l00084"></a>00084   <span class="comment">/* Index of the MIB.*/</span>
<a name="l00085"></a><a class="code" href="structvariable.html#ade92e000ca0d35650cc43fc3e54e6350">00085</a>   u_char <a class="code" href="structvariable.html#ade92e000ca0d35650cc43fc3e54e6350">magic</a>;
<a name="l00086"></a>00086 
<a name="l00087"></a>00087   <span class="comment">/* Type of variable. */</span>
<a name="l00088"></a><a class="code" href="structvariable.html#a15c7fb1149c6f79a658d147b59c7e0f1">00088</a>   <span class="keywordtype">char</span> <a class="code" href="structvariable.html#a15c7fb1149c6f79a658d147b59c7e0f1">type</a>;
<a name="l00089"></a>00089 
<a name="l00090"></a>00090   <span class="comment">/* Access control list. */</span>
<a name="l00091"></a><a class="code" href="structvariable.html#a8e9168a7d05792575ba6d46317a70e00">00091</a>   u_short <a class="code" href="structvariable.html#a8e9168a7d05792575ba6d46317a70e00">acl</a>;
<a name="l00092"></a>00092 
<a name="l00093"></a>00093   <span class="comment">/* Callback function. */</span>
<a name="l00094"></a><a class="code" href="structvariable.html#a07015108b94dcb492041abddf5ad1a96">00094</a>   <a class="code" href="smux_8h.html#a94fd22b3e8ddf3429749fb3635dbadc6">FindVarMethod</a> *<a class="code" href="structvariable.html#a07015108b94dcb492041abddf5ad1a96">findVar</a>;
<a name="l00095"></a>00095 
<a name="l00096"></a>00096   <span class="comment">/* Suffix of the MIB. */</span>
<a name="l00097"></a><a class="code" href="structvariable.html#a1f0065dda83058eaf89301e319ec4cf7">00097</a>   <span class="keywordtype">int</span> <a class="code" href="structvariable.html#a1f0065dda83058eaf89301e319ec4cf7">namelen</a>;
<a name="l00098"></a><a class="code" href="structvariable.html#a70620f86886694dc8b76914cc7356b0c">00098</a>   oid <a class="code" href="structvariable.html#a70620f86886694dc8b76914cc7356b0c">name</a>[MAX_OID_LEN];
<a name="l00099"></a>00099 };
<a name="l00100"></a>00100 
<a name="l00101"></a>00101 <span class="comment">/* SNMP tree. */</span>
<a name="l00102"></a><a class="code" href="structsubtree.html">00102</a> <span class="keyword">struct </span><a class="code" href="structsubtree.html">subtree</a>
<a name="l00103"></a>00103 {
<a name="l00104"></a>00104   <span class="comment">/* Tree&#39;s oid. */</span>
<a name="l00105"></a><a class="code" href="structsubtree.html#a2b3a4f956f8590ac0a6ecfc5464dc5a4">00105</a>   oid <a class="code" href="structsubtree.html#a2b3a4f956f8590ac0a6ecfc5464dc5a4">name</a>[MAX_OID_LEN];
<a name="l00106"></a><a class="code" href="structsubtree.html#a8ad47ea4490834918f0eafc70d155f98">00106</a>   u_char <a class="code" href="structsubtree.html#a8ad47ea4490834918f0eafc70d155f98">name_len</a>;
<a name="l00107"></a>00107 
<a name="l00108"></a>00108   <span class="comment">/* List of the variables. */</span>
<a name="l00109"></a><a class="code" href="structsubtree.html#a1e898c550cd66724d73232cc711a1acd">00109</a>   <span class="keyword">struct </span><a class="code" href="structvariable.html">variable</a> *<a class="code" href="structsubtree.html#a1e898c550cd66724d73232cc711a1acd">variables</a>;
<a name="l00110"></a>00110 
<a name="l00111"></a>00111   <span class="comment">/* Length of the variables list. */</span>
<a name="l00112"></a><a class="code" href="structsubtree.html#a6e0325f8040b61d79985546cf3e06d8d">00112</a>   <span class="keywordtype">int</span> <a class="code" href="structsubtree.html#a6e0325f8040b61d79985546cf3e06d8d">variables_num</a>;
<a name="l00113"></a>00113 
<a name="l00114"></a>00114   <span class="comment">/* Width of the variables list. */</span>
<a name="l00115"></a><a class="code" href="structsubtree.html#a12d12b5af32f940926949adf74bf7826">00115</a>   <span class="keywordtype">int</span> <a class="code" href="structsubtree.html#a12d12b5af32f940926949adf74bf7826">variables_width</a>;
<a name="l00116"></a>00116 
<a name="l00117"></a>00117   <span class="comment">/* Registered flag. */</span>
<a name="l00118"></a><a class="code" href="structsubtree.html#a1078b0833dae6c9e911a4d5dd9cff7a1">00118</a>   <span class="keywordtype">int</span> <a class="code" href="structsubtree.html#a1078b0833dae6c9e911a4d5dd9cff7a1">registered</a>;
<a name="l00119"></a>00119 };
<a name="l00120"></a>00120 
<a name="l00121"></a><a class="code" href="structtrap__object.html">00121</a> <span class="keyword">struct </span><a class="code" href="structtrap__object.html">trap_object</a>
<a name="l00122"></a>00122 {
<a name="l00123"></a><a class="code" href="structtrap__object.html#a063ce73c46c148f4d6dee7ac48992637">00123</a>   <a class="code" href="smux_8h.html#a94fd22b3e8ddf3429749fb3635dbadc6">FindVarMethod</a> *<a class="code" href="structtrap__object.html#a063ce73c46c148f4d6dee7ac48992637">findVar</a>;
<a name="l00124"></a><a class="code" href="structtrap__object.html#a2df68fbafa5b7cd921204104a2cb4fd1">00124</a>   <span class="keywordtype">int</span> <a class="code" href="structtrap__object.html#a2df68fbafa5b7cd921204104a2cb4fd1">namelen</a>;
<a name="l00125"></a><a class="code" href="structtrap__object.html#ab41ce8fae9b76cced1f509db3847d59a">00125</a>   oid <a class="code" href="structtrap__object.html#ab41ce8fae9b76cced1f509db3847d59a">name</a>[MAX_OID_LEN];
<a name="l00126"></a>00126 };
<a name="l00127"></a>00127 
<a name="l00128"></a>00128 <span class="comment">/* Declare SMUX return value. */</span>
<a name="l00129"></a><a class="code" href="smux_8h.html#af4d69d4f09e2b7bedf8a6c9f8b704471">00129</a> <span class="preprocessor">#define SNMP_LOCAL_VARIABLES \</span>
<a name="l00130"></a>00130 <span class="preprocessor">  static long snmp_int_val; \</span>
<a name="l00131"></a>00131 <span class="preprocessor">  static struct in_addr snmp_in_addr_val;</span>
<a name="l00132"></a>00132 <span class="preprocessor"></span>
<a name="l00133"></a><a class="code" href="smux_8h.html#a70470f9a0f3e693ede2b6d10bf3f591c">00133</a> <span class="preprocessor">#define SNMP_INTEGER(V) \</span>
<a name="l00134"></a>00134 <span class="preprocessor">  ( \</span>
<a name="l00135"></a>00135 <span class="preprocessor">    *var_len = sizeof (snmp_int_val), \</span>
<a name="l00136"></a>00136 <span class="preprocessor">    snmp_int_val = V, \</span>
<a name="l00137"></a>00137 <span class="preprocessor">    (u_char *) &amp;snmp_int_val \</span>
<a name="l00138"></a>00138 <span class="preprocessor">  )</span>
<a name="l00139"></a>00139 <span class="preprocessor"></span>
<a name="l00140"></a><a class="code" href="smux_8h.html#a8745a86f37751629f4c280c33b06646c">00140</a> <span class="preprocessor">#define SNMP_IPADDRESS(V) \</span>
<a name="l00141"></a>00141 <span class="preprocessor">  ( \</span>
<a name="l00142"></a>00142 <span class="preprocessor">    *var_len = sizeof (struct in_addr), \</span>
<a name="l00143"></a>00143 <span class="preprocessor">    snmp_in_addr_val = V, \</span>
<a name="l00144"></a>00144 <span class="preprocessor">    (u_char *) &amp;snmp_in_addr_val \</span>
<a name="l00145"></a>00145 <span class="preprocessor">  )</span>
<a name="l00146"></a>00146 <span class="preprocessor"></span>
<a name="l00147"></a>00147 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="smux_8h.html#a430d09d1e58132210a142a580cb8e6a8">smux_init</a> (<span class="keyword">struct</span> <a class="code" href="structthread__master.html">thread_master</a> *tm);
<a name="l00148"></a>00148 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="smux_8h.html#a747d2884a651e04c5fee368bf3ae8d5d">smux_start</a> (<span class="keywordtype">void</span>);
<a name="l00149"></a>00149 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="smux_8h.html#a4c4ff4a87abad2d7969e852c7d055d3a">smux_register_mib</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *, <span class="keyword">struct</span> <a class="code" href="structvariable.html">variable</a> *, 
<a name="l00150"></a>00150                               <span class="keywordtype">size_t</span>, <span class="keywordtype">int</span>, oid [], <span class="keywordtype">size_t</span>);
<a name="l00151"></a>00151 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="smux_8h.html#a15cc4f7bbc1b70b7fc5179e939073238">smux_header_generic</a> (<span class="keyword">struct</span> <a class="code" href="structvariable.html">variable</a> *, oid [], <span class="keywordtype">size_t</span> *, 
<a name="l00152"></a>00152                                 <span class="keywordtype">int</span>, <span class="keywordtype">size_t</span> *, <a class="code" href="smux_8h.html#ace14719892f7615b0228ad97d4cc8040">WriteMethod</a> **);
<a name="l00153"></a>00153 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="smux_8h.html#aaf0b9cc33d65afe3c172191a78c87985">smux_trap</a> (<span class="keyword">const</span> oid *, <span class="keywordtype">size_t</span>, <span class="keyword">const</span> oid *, <span class="keywordtype">size_t</span>, 
<a name="l00154"></a>00154               <span class="keyword">const</span> <span class="keyword">struct</span> <a class="code" href="structtrap__object.html">trap_object</a> *, 
<a name="l00155"></a>00155                       <span class="keywordtype">size_t</span>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>, u_char);
<a name="l00156"></a>00156 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="smux_8h.html#a4800c2461a103b3b5b777f4fa5317154">oid_compare</a> (oid *, <span class="keywordtype">int</span>, oid *, <span class="keywordtype">int</span>);
<a name="l00157"></a>00157 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="smux_8h.html#a849e1a9c24025af6be77cd10ec1fb798">oid2in_addr</a> (oid [], <span class="keywordtype">int</span>, <span class="keyword">struct</span> in_addr *);
<a name="l00158"></a>00158 <span class="keyword">extern</span> <span class="keywordtype">void</span> *<a class="code" href="smux_8h.html#a1c6d0e7fe12d52b93120d282a92e0288">oid_copy</a> (<span class="keywordtype">void</span> *, <span class="keyword">const</span> <span class="keywordtype">void</span> *, <span class="keywordtype">size_t</span>);
<a name="l00159"></a>00159 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="smux_8h.html#add26a84014415e99f576c71009174dc3">oid_copy_addr</a> (oid [], <span class="keyword">struct</span> in_addr *, <span class="keywordtype">int</span>);
<a name="l00160"></a>00160 
<a name="l00161"></a>00161 <span class="preprocessor">#endif </span><span class="comment">/* _ZEBRA_SNMP_H */</span>
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="smux_8h.html">smux.h</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:06 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
