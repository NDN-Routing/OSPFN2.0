<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: ospfd/ospfd.c File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('ospfd_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#define-members">Defines</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">ospfd/ospfd.c File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="zebra_8h_source.html">zebra.h</a>&gt;</code><br/>
<code>#include &quot;<a class="el" href="thread_8h_source.html">thread.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="vty_8h_source.html">vty.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="command_8h_source.html">command.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="linklist_8h_source.html">linklist.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="prefix_8h_source.html">prefix.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="table_8h_source.html">table.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="if_8h_source.html">if.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="memory_8h_source.html">memory.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="stream_8h_source.html">stream.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="log_8h_source.html">log.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="sockunion_8h_source.html">sockunion.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="zclient_8h_source.html">zclient.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="plist_8h_source.html">plist.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="sockopt_8h_source.html">sockopt.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospfd_8h_source.html">ospfd/ospfd.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__network_8h_source.html">ospfd/ospf_network.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__interface_8h_source.html">ospfd/ospf_interface.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__ism_8h_source.html">ospfd/ospf_ism.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__asbr_8h_source.html">ospfd/ospf_asbr.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__lsa_8h_source.html">ospfd/ospf_lsa.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__lsdb_8h_source.html">ospfd/ospf_lsdb.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__neighbor_8h_source.html">ospfd/ospf_neighbor.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__nsm_8h_source.html">ospfd/ospf_nsm.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__spf_8h_source.html">ospfd/ospf_spf.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__packet_8h_source.html">ospfd/ospf_packet.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__dump_8h_source.html">ospfd/ospf_dump.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__zebra_8h_source.html">ospfd/ospf_zebra.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__abr_8h_source.html">ospfd/ospf_abr.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__flood_8h_source.html">ospfd/ospf_flood.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__route_8h_source.html">ospfd/ospf_route.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__ase_8h_source.html">ospfd/ospf_ase.h</a>&quot;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for ospfd.c:</div>
<div class="dyncontent">
<div class="center"><img src="ospfd_8c__incl.png" border="0" usemap="#ospfd_2ospfd_8c" alt=""/></div>
<map name="ospfd_2ospfd_8c" id="ospfd_2ospfd_8c">
<area shape="rect" id="node3" href="zebra_8h.html" title="zebra.h" alt="" coords="805,155,872,181"/><area shape="rect" id="node39" href="thread_8h.html" title="thread.h" alt="" coords="1701,229,1773,256"/><area shape="rect" id="node41" href="vty_8h.html" title="vty.h" alt="" coords="1579,155,1631,181"/><area shape="rect" id="node44" href="log_8h.html" title="log.h" alt="" coords="1579,229,1631,256"/><area shape="rect" id="node47" href="command_8h.html" title="command.h" alt="" coords="1489,80,1580,107"/><area shape="rect" id="node50" href="linklist_8h.html" title="linklist.h" alt="" coords="1826,229,1896,256"/><area shape="rect" id="node52" href="prefix_8h.html" title="prefix.h" alt="" coords="2094,229,2161,256"/><area shape="rect" id="node54" href="sockunion_8h.html" title="sockunion.h" alt="" coords="2081,304,2175,331"/><area shape="rect" id="node56" href="table_8h.html" title="table.h" alt="" coords="2365,80,2429,107"/><area shape="rect" id="node58" href="if_8h.html" title="if.h" alt="" coords="1869,155,1909,181"/><area shape="rect" id="node61" href="memory_8h.html" title="memory.h" alt="" coords="2453,80,2536,107"/><area shape="rect" id="node63" href="stream_8h.html" title="stream.h" alt="" coords="2117,155,2192,181"/><area shape="rect" id="node68" href="zclient_8h.html" title="zclient.h" alt="" coords="1920,80,1992,107"/><area shape="rect" id="node71" href="plist_8h.html" title="plist.h" alt="" coords="2560,80,2619,107"/><area shape="rect" id="node73" href="sockopt_8h.html" title="sockopt.h" alt="" coords="2251,155,2333,181"/><area shape="rect" id="node76" href="ospfd_8h.html" title="ospfd/ospfd.h" alt="" coords="1256,80,1363,107"/><area shape="rect" id="node80" href="ospf__network_8h.html" title="ospfd/ospf_network.h" alt="" coords="2643,80,2797,107"/><area shape="rect" id="node82" href="ospf__interface_8h.html" title="ospfd/ospf_interface.h" alt="" coords="3055,80,3213,107"/><area shape="rect" id="node84" href="ospf__packet_8h.html" title="ospfd/ospf_packet.h" alt="" coords="2879,155,3025,181"/><area shape="rect" id="node86" href="ospf__spf_8h.html" title="ospfd/ospf_spf.h" alt="" coords="3131,155,3255,181"/><area shape="rect" id="node88" href="ospf__ism_8h.html" title="ospfd/ospf_ism.h" alt="" coords="3290,80,3416,107"/><area shape="rect" id="node90" href="ospf__asbr_8h.html" title="ospfd/ospf_asbr.h" alt="" coords="3441,80,3572,107"/><area shape="rect" id="node92" href="ospf__lsa_8h.html" title="ospfd/ospf_lsa.h" alt="" coords="2168,80,2291,107"/><area shape="rect" id="node95" href="ospf__lsdb_8h.html" title="ospfd/ospf_lsdb.h" alt="" coords="3596,80,3727,107"/><area shape="rect" id="node97" href="ospf__neighbor_8h.html" title="ospfd/ospf_neighbor.h" alt="" coords="2873,80,3031,107"/><area shape="rect" id="node100" href="ospf__nsm_8h.html" title="ospfd/ospf_nsm.h" alt="" coords="3751,80,3881,107"/><area shape="rect" id="node104" href="ospf__dump_8h.html" title="ospfd/ospf_dump.h" alt="" coords="3905,80,4044,107"/><area shape="rect" id="node106" href="ospf__zebra_8h.html" title="ospfd/ospf_zebra.h" alt="" coords="1605,80,1744,107"/><area shape="rect" id="node109" href="ospf__abr_8h.html" title="ospfd/ospf_abr.h" alt="" coords="4069,80,4192,107"/><area shape="rect" id="node111" href="ospf__flood_8h.html" title="ospfd/ospf_flood.h" alt="" coords="4217,80,4353,107"/><area shape="rect" id="node113" href="ospf__route_8h.html" title="ospfd/ospf_route.h" alt="" coords="4378,80,4515,107"/><area shape="rect" id="node115" href="ospf__ase_8h.html" title="ospfd/ospf_ase.h" alt="" coords="4539,80,4665,107"/></map>
</div>
</div>
<p><a href="ospfd_8c_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a3a6a94df5a2cf791d4c26bc0b1334df8">OSPF_EXTERNAL_LSA_ORIGINATE_DELAY</a>&#160;&#160;&#160;1</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a18ae69cd8ada47780d2abe5cf46aef7c">ospf_remove_vls_through_area</a> (struct <a class="el" href="structospf.html">ospf</a> *, struct <a class="el" href="structospf__area.html">ospf_area</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a187d0469588c7386421e07eb4f65e344">ospf_network_free</a> (struct <a class="el" href="structospf.html">ospf</a> *, struct <a class="el" href="structospf__network.html">ospf_network</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a764d9b44ff909f4260cf83bf516b8d0e">ospf_area_free</a> (struct <a class="el" href="structospf__area.html">ospf_area</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a9ff9167ef11494a725578e5705632d84">ospf_network_run</a> (struct <a class="el" href="structprefix.html">prefix</a> *, struct <a class="el" href="structospf__area.html">ospf_area</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a7818e64451ad531aed1fa0aeb35ec4c6">ospf_network_run_interface</a> (struct <a class="el" href="structprefix.html">prefix</a> *, struct <a class="el" href="structospf__area.html">ospf_area</a> *, struct <a class="el" href="structinterface.html">interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#ae8c350ba65c0ae238fa093a24a67bfa0">ospf_network_match_iface</a> (const struct <a class="el" href="structconnected.html">connected</a> *, const struct <a class="el" href="structprefix.html">prefix</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a3246e8a54ca10359cd606959b7b29622">ospf_finish_final</a> (struct <a class="el" href="structospf.html">ospf</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a0d1cbe02041ecd44cfc37a94718ca69a">ospf_router_id_update</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a6d4e4f9edd42c089df786b0df096cfbc">ospf_area_id_cmp</a> (struct <a class="el" href="structospf__area.html">ospf_area</a> *a1, struct <a class="el" href="structospf__area.html">ospf_area</a> *a2)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structospf.html">ospf</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a61a47474abcb16fd62d9ad0dc0bb08c0">ospf_new</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a8ea0c935a4862c1469bc962e93fee74b">ospf_lookup</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a0e0d305f56ff1fe9eaa0c06d56dcf7fa">ospf_add</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#add2572d0e80de2650e7f4ddef690e83e">ospf_delete</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a92d1f67d0a83fc48c3bcc4947ba0c913">ospf_get</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#aa8a8ca3d37c7c3b883edca23fff8dc67">ospf_deferred_shutdown_finish</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a38fe1169fcf0756b509a8b12ada985cf">ospf_deferred_shutdown_timer</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a3566d58661efb2cb9ee85ffa44daa06a">ospf_deferred_shutdown_check</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a56662db258350b91cceee8e4ce3ed8c4">ospf_terminate</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a71bfe0c0306143ad66bef9bb28c36462">ospf_finish</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a5732953cc118f11638c13222c1c92f11">ospf_area_new</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct in_addr area_id)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#aa12d53d797f5400a252c49e4fe12428d">ospf_area_check_free</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct in_addr area_id)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#aa215da7694f647944fed0fad86df18c8">ospf_area_get</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct in_addr area_id, int format)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a24d6ed2a6a05e4856e6dbf5eea74f6ef">ospf_area_lookup_by_area_id</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct in_addr area_id)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#ab5f82e15e585aa9de10f7f426e445872">ospf_area_add_if</a> (struct <a class="el" href="structospf__area.html">ospf_area</a> *area, struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a4f7456bdd0cb1c23c19a62b960cebda0">ospf_area_del_if</a> (struct <a class="el" href="structospf__area.html">ospf_area</a> *area, struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structospf__network.html">ospf_network</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a2d9e8b20aedcec6b5bafda7806c70aaf">ospf_network_new</a> (struct in_addr area_id, int format)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#ac39b4e35ee81faab9f177f9c4f57a9b2">ospf_network_set</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct <a class="el" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="el" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, struct in_addr area_id)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a9cebab0f946b58720dafc3221f4d2f09">ospf_network_unset</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct <a class="el" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="el" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, struct in_addr area_id)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a057b2c243b1406f27f8de8ddc5a48ade">ospf_ls_upd_queue_empty</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a9d40c9fe8a5fd9ec7add909556c5bd3f">ospf_if_update</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct <a class="el" href="structinterface.html">interface</a> *ifp)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#aaf9a429fd587798097e37fea1b83b665">ospf_area_type_set</a> (struct <a class="el" href="structospf__area.html">ospf_area</a> *area, int <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#ad167c0a42889e93f29f5f64a3ab2ddb3">ospf_area_shortcut_set</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct <a class="el" href="structospf__area.html">ospf_area</a> *area, int <a class="el" href="bgp__open_8h.html#af4324da5e10e48f7970f2bc5b611e367">mode</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a3ce0d51b534307c118644c4ac26b2738">ospf_area_shortcut_unset</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct <a class="el" href="structospf__area.html">ospf_area</a> *area)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a2ca34a3919b52cf2c97ae7183e0afdb0">ospf_area_vlink_count</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct <a class="el" href="structospf__area.html">ospf_area</a> *area)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a7d74d7fa4790235c9ca733dc8092ce2c">ospf_area_stub_set</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct in_addr area_id)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#ad38a90ef491934c5dc4c3cb6dbf4c636">ospf_area_stub_unset</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct in_addr area_id)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a1838ae19091d12e8e5b499b499da165c">ospf_area_no_summary_set</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct in_addr area_id)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a6daabcb5f3e9730123f1cd8c190a7b8c">ospf_area_no_summary_unset</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct in_addr area_id)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a78cd3687cd0064fb0f9346302f78481f">ospf_area_nssa_set</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct in_addr area_id)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a476165e655fbafcacbeeac92e367b210">ospf_area_nssa_unset</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct in_addr area_id)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#ac63a090c29ecb1dae5c52afebb3e36c1">ospf_area_nssa_translator_role_set</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct in_addr area_id, int role)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#aaae198d1283c318ee0b0ea29028dd592">ospf_area_nssa_translator_role_unset</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct in_addr area_id)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a80a09d7b78b29d2a96e25dcb5ff34237">ospf_area_export_list_set</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct <a class="el" href="structospf__area.html">ospf_area</a> *area, const char *list_name)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a30ca506cd3dc07e2e67aebbc64571eea">ospf_area_export_list_unset</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct <a class="el" href="structospf__area.html">ospf_area</a> *area)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a749e2c33ebb3d846c8ba674303699e26">ospf_area_import_list_set</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct <a class="el" href="structospf__area.html">ospf_area</a> *area, const char *<a class="el" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a37dd160fa610a5ad3222a273744c1e7f">ospf_area_import_list_unset</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct <a class="el" href="structospf__area.html">ospf_area</a> *area)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a2b5dac7af38c281e1e0cccbf0ae23d5a">ospf_timers_refresh_set</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, int interval)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a92885283cd0ebf3b388ea7ac1d40af46">ospf_timers_refresh_unset</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#ab1ae8ab343ebf73396c0d0d475cbccee">ospf_nbr_nbma_new</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a61cd9b22f0bce1e670289baa7e941378">ospf_nbr_nbma_free</a> (struct <a class="el" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a625f9f237c3f7a17051faac3724d651f">ospf_nbr_nbma_delete</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct <a class="el" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#ac7ea157858e0fc0113dbcfe4c34cc101">ospf_nbr_nbma_down</a> (struct <a class="el" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a125985470ee6de834824ac909454204a">ospf_nbr_nbma_add</a> (struct <a class="el" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma, struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a053c1c99419abc1738ed63cc58a910d1">ospf_nbr_nbma_if_update</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a5ef294b92140e69feec21601a4893b53">ospf_nbr_nbma_lookup</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct in_addr nbr_addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#af6d7c7ae754f459750fd607f1713bc3f">ospf_nbr_nbma_lookup_next</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct in_addr *addr, int first)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#adcbe4108b4b4e19a517ce1a5a0cec71b">ospf_nbr_nbma_set</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct in_addr nbr_addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#af9c8a93e2314bc7beda655a50cce82e6">ospf_nbr_nbma_unset</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct in_addr nbr_addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a3603dae65cc70ae2535765d6db428392">ospf_nbr_nbma_priority_set</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct in_addr nbr_addr, u_char priority)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a2fd5b5358363b213696d5d0c7a9975ca">ospf_nbr_nbma_priority_unset</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct in_addr nbr_addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a13f5275e4e117d48fda7da4f92e8e462">ospf_nbr_nbma_poll_interval_set</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct in_addr nbr_addr, unsigned int interval)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a7aa840262239aee6a4689d97661bf7fb">ospf_nbr_nbma_poll_interval_unset</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct in_addr addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#ab8024808f30d57a232e72613e0df89c3">ospf_master_init</a> ()</td></tr>
<tr><td colspan="2"><h2><a name="var-members"></a>
Variables</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structospf__master.html">ospf_master</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a33a7fa52c2e4612ed7c43602d9520db1">ospf_master</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__master.html">ospf_master</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a00fd6054739908ab616f0bacdc6d0f64">om</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structzclient.html">zclient</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#abe1502972ba9aa40adc080e419c496bf">zclient</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct in_addr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a5ff73fe88ce576fe7fc3877984367add">router_id_zebra</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structmessage.html">message</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a1d53da7b1d301ee11b1c599196fdaf47">ospf_area_type_msg</a> []</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfd_8c.html#a7de4d698a82bc8b7f1c5b37b26a24ea2">ospf_area_type_msg_max</a> = OSPF_AREA_TYPE_MAX</td></tr>
</table>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="a3a6a94df5a2cf791d4c26bc0b1334df8"></a><!-- doxytag: member="ospfd.c::OSPF_EXTERNAL_LSA_ORIGINATE_DELAY" ref="a3a6a94df5a2cf791d4c26bc0b1334df8" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_EXTERNAL_LSA_ORIGINATE_DELAY&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00078">78</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a0e0d305f56ff1fe9eaa0c06d56dcf7fa"></a><!-- doxytag: member="ospfd.c::ospf_add" ref="a0e0d305f56ff1fe9eaa0c06d56dcf7fa" args="(struct ospf *ospf)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ospf_add </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00248">248</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (<a class="code" href="ospfd_8c.html#a00fd6054739908ab616f0bacdc6d0f64">om</a>-&gt;<a class="code" href="structospf__master.html#a2f5e0a5ef79f97d68abef8515b41a740">ospf</a>, ospf);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab5f82e15e585aa9de10f7f426e445872"></a><!-- doxytag: member="ospfd.c::ospf_area_add_if" ref="ab5f82e15e585aa9de10f7f426e445872" args="(struct ospf_area *area, struct ospf_interface *oi)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_area_add_if </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00699">699</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (area-&gt;<a class="code" href="structospf__area.html#aec49fceeb655dde5648208d29dfc66a4">oiflist</a>, oi);
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa12d53d797f5400a252c49e4fe12428d"></a><!-- doxytag: member="ospfd.c::ospf_area_check_free" ref="aa12d53d797f5400a252c49e4fe12428d" args="(struct ospf *ospf, struct in_addr area_id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_area_check_free </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>area_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00647">647</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;

  area = <a class="code" href="ospfd_8c.html#a24d6ed2a6a05e4856e6dbf5eea74f6ef">ospf_area_lookup_by_area_id</a> (ospf, <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>);
  <span class="keywordflow">if</span> (area &amp;&amp;
      <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (area-&gt;<a class="code" href="structospf__area.html#aec49fceeb655dde5648208d29dfc66a4">oiflist</a>) == 0 &amp;&amp;
      area-&gt;<a class="code" href="structospf__area.html#ae4d5f7877962eb3e477299a8f93dbfff">ranges</a>-&gt;<a class="code" href="structroute__table.html#a4d58458d9c18192cecaea1b98775f529">top</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp;
      area-&gt;<a class="code" href="structospf__area.html#ac5b177716c810e517f0aacbdbe68a6e4">shortcut_configured</a> == <a class="code" href="ospfd_8h.html#a830dd703d89739f72962f5d4ccd8929d">OSPF_SHORTCUT_DEFAULT</a> &amp;&amp;
      area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a> == <a class="code" href="ospfd_8h.html#a43f84c8e8584ccc8b82990d251abec4d">OSPF_AREA_DEFAULT</a> &amp;&amp;
      area-&gt;<a class="code" href="structospf__area.html#a2a2b5634d8424e1a939836254700a8d0">no_summary</a> == 0 &amp;&amp;
      area-&gt;<a class="code" href="structospf__area.html#a8276632b8bab54988029593bb3ebc502">default_cost</a> == 1 &amp;&amp;
      <a class="code" href="ospf6__area_8h.html#a4b149526dcc0d9c5de7086d581336dcb">EXPORT_NAME</a> (area) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp;
      <a class="code" href="ospf6__area_8h.html#a8f03536971036c0537f7bda3fb525b14">IMPORT_NAME</a> (area) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp;
      area-&gt;<a class="code" href="structospf__area.html#af738a86bf7f84034a1e4d1b288a70b22">auth_type</a> == <a class="code" href="ospfd_8h.html#a7fed6737ae4236d1f4ac7c977844b128">OSPF_AUTH_NULL</a>)
    {
      <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, area);
      <a class="code" href="ospfd_8c.html#a764d9b44ff909f4260cf83bf516b8d0e">ospf_area_free</a> (area);
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4f7456bdd0cb1c23c19a62b960cebda0"></a><!-- doxytag: member="ospfd.c::ospf_area_del_if" ref="a4f7456bdd0cb1c23c19a62b960cebda0" args="(struct ospf_area *area, struct ospf_interface *oi)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_area_del_if </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00705">705</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (area-&gt;<a class="code" href="structospf__area.html#aec49fceeb655dde5648208d29dfc66a4">oiflist</a>, oi);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a80a09d7b78b29d2a96e25dcb5ff34237"></a><!-- doxytag: member="ospfd.c::ospf_area_export_list_set" ref="a80a09d7b78b29d2a96e25dcb5ff34237" args="(struct ospf *ospf, struct ospf_area *area, const char *list_name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_area_export_list_set </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>list_name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01227">1227</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structaccess__list.html">access_list</a> *<a class="code" href="structlist.html">list</a>;
  list = <a class="code" href="filter_8c.html#a8cb65cd01015f6673c632cb5b8714b3e">access_list_lookup</a> (<a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>, list_name);

  <a class="code" href="ospf6__area_8h.html#a3b1e86d59d3641da3b6b9281a97c7927">EXPORT_LIST</a> (area) = list;

  <span class="keywordflow">if</span> (<a class="code" href="ospf6__area_8h.html#a4b149526dcc0d9c5de7086d581336dcb">EXPORT_NAME</a> (area))
    free (<a class="code" href="ospf6__area_8h.html#a4b149526dcc0d9c5de7086d581336dcb">EXPORT_NAME</a> (area));

  <a class="code" href="ospf6__area_8h.html#a4b149526dcc0d9c5de7086d581336dcb">EXPORT_NAME</a> (area) = strdup (list_name);
  <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (ospf);

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a30ca506cd3dc07e2e67aebbc64571eea"></a><!-- doxytag: member="ospfd.c::ospf_area_export_list_unset" ref="a30ca506cd3dc07e2e67aebbc64571eea" args="(struct ospf *ospf, struct ospf_area *area)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_area_export_list_unset </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01245">1245</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{

  <a class="code" href="ospf6__area_8h.html#a3b1e86d59d3641da3b6b9281a97c7927">EXPORT_LIST</a> (area) = 0;

  <span class="keywordflow">if</span> (<a class="code" href="ospf6__area_8h.html#a4b149526dcc0d9c5de7086d581336dcb">EXPORT_NAME</a> (area))
    free (<a class="code" href="ospf6__area_8h.html#a4b149526dcc0d9c5de7086d581336dcb">EXPORT_NAME</a> (area));

  <a class="code" href="ospf6__area_8h.html#a4b149526dcc0d9c5de7086d581336dcb">EXPORT_NAME</a> (area) = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <a class="code" href="ospfd_8c.html#aa12d53d797f5400a252c49e4fe12428d">ospf_area_check_free</a> (ospf, area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>);
  
  <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (ospf);

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a764d9b44ff909f4260cf83bf516b8d0e"></a><!-- doxytag: member="ospfd.c::ospf_area_free" ref="a764d9b44ff909f4260cf83bf516b8d0e" args="(struct ospf_area *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ospf_area_free </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td>
          <td class="paramname"><em>area</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00595">595</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa;

  <span class="comment">/* Free LSDBs. */</span>
  <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#a9b953d2ac1c54862e897adada93cb8a4">ROUTER_LSDB</a> (area), rn, lsa)
    <a class="code" href="ospf__lsa_8c.html#ad6d5a002c1a2e4d50dfed4a627ea42a8">ospf_discard_from_db</a> (area-&gt;<a class="code" href="structospf.html">ospf</a>, area-&gt;<a class="code" href="structospf__lsa.html#acba2998d58a36757e13007afd1e6a224">lsdb</a>, lsa);
  <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#a73230fbde5946c52a9905d9d56f5eb0d">NETWORK_LSDB</a> (area), rn, lsa)
    <a class="code" href="ospf__lsa_8c.html#ad6d5a002c1a2e4d50dfed4a627ea42a8">ospf_discard_from_db</a> (area-&gt;ospf, area-&gt;lsdb, lsa);
  <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#a58ae6df59f7476d7784e19f7ca19db1f">SUMMARY_LSDB</a> (area), rn, lsa)
    <a class="code" href="ospf__lsa_8c.html#ad6d5a002c1a2e4d50dfed4a627ea42a8">ospf_discard_from_db</a> (area-&gt;ospf, area-&gt;lsdb, lsa);
  <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#a145a10afd0c8a801d2e84b26c0becbfd">ASBR_SUMMARY_LSDB</a> (area), rn, lsa)
    <a class="code" href="ospf__lsa_8c.html#ad6d5a002c1a2e4d50dfed4a627ea42a8">ospf_discard_from_db</a> (area-&gt;ospf, area-&gt;lsdb, lsa);

  <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#aa704d331d2ac4e4034faca5c0f177364">NSSA_LSDB</a> (area), rn, lsa)
    <a class="code" href="ospf__lsa_8c.html#ad6d5a002c1a2e4d50dfed4a627ea42a8">ospf_discard_from_db</a> (area-&gt;ospf, area-&gt;lsdb, lsa);
<span class="preprocessor">#ifdef HAVE_OPAQUE_LSA</span>
<span class="preprocessor"></span>  <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#aec3918874489142043aedd1ac5855f57">OPAQUE_AREA_LSDB</a> (area), rn, lsa)
    <a class="code" href="ospf__lsa_8c.html#ad6d5a002c1a2e4d50dfed4a627ea42a8">ospf_discard_from_db</a> (area-&gt;ospf, area-&gt;lsdb, lsa);
  <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#a7b6d75a56662bb4e124777b376bb84da">OPAQUE_LINK_LSDB</a> (area), rn, lsa)
    <a class="code" href="ospf__lsa_8c.html#ad6d5a002c1a2e4d50dfed4a627ea42a8">ospf_discard_from_db</a> (area-&gt;ospf, area-&gt;lsdb, lsa);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_OPAQUE_LSA */</span>

  <a class="code" href="ospf__lsdb_8c.html#aac04ea2aea1f1895b940fe30fa531a5f">ospf_lsdb_delete_all</a> (area-&gt;lsdb);
  <a class="code" href="ospf__lsdb_8c.html#ac2cd09a4c0bd7f62bc5312dc71ffde57">ospf_lsdb_free</a> (area-&gt;lsdb);

  <a class="code" href="ospf__lsa_8c.html#a268fc5c6673caf7ee94c0eaaa88455b8">ospf_lsa_unlock</a> (&amp;area-&gt;router_lsa_self);
  
  <a class="code" href="table_8c.html#adc5ff276f1698f5bef7bb74289e3b26e">route_table_finish</a> (area-&gt;ranges);
  <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (area-&gt;oiflist);

  <span class="keywordflow">if</span> (<a class="code" href="ospf6__area_8h.html#a4b149526dcc0d9c5de7086d581336dcb">EXPORT_NAME</a> (area))
    free (<a class="code" href="ospf6__area_8h.html#a4b149526dcc0d9c5de7086d581336dcb">EXPORT_NAME</a> (area));

  <span class="keywordflow">if</span> (<a class="code" href="ospf6__area_8h.html#a8f03536971036c0537f7bda3fb525b14">IMPORT_NAME</a> (area))
    free (<a class="code" href="ospf6__area_8h.html#a8f03536971036c0537f7bda3fb525b14">IMPORT_NAME</a> (area));

  <span class="comment">/* Cancel timer. */</span>
  <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (area-&gt;t_router_lsa_self);
  <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (area-&gt;t_stub_router);
<span class="preprocessor">#ifdef HAVE_OPAQUE_LSA</span>
<span class="preprocessor"></span>  <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (area-&gt;t_opaque_lsa_self);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_OPAQUE_LSA */</span>
  
  <span class="keywordflow">if</span> (<a class="code" href="ospfd_8h.html#a62518cec4ea9ee2a4db410d3c42b23f7">OSPF_IS_AREA_BACKBONE</a> (area))
    area-&gt;ospf-&gt;backbone = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167bad6044d4348a34b266dbb18252531c7e9">MTYPE_OSPF_AREA</a>, area);
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa215da7694f647944fed0fad86df18c8"></a><!-- doxytag: member="ospfd.c::ospf_area_get" ref="aa215da7694f647944fed0fad86df18c8" args="(struct ospf *ospf, struct in_addr area_id, int format)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__area.html">ospf_area</a>* ospf_area_get </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>area_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>format</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00669">669</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
  
  area = <a class="code" href="ospfd_8c.html#a24d6ed2a6a05e4856e6dbf5eea74f6ef">ospf_area_lookup_by_area_id</a> (ospf, <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>);
  <span class="keywordflow">if</span> (!area)
    {
      area = <a class="code" href="ospfd_8c.html#a5732953cc118f11638c13222c1c92f11">ospf_area_new</a> (ospf, <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>);
      area-&gt;<a class="code" href="structospf__area.html#a83fcfc9add37df9fa90e4cb142ff5b5a">format</a> = <a class="code" href="structospf__area.html#a83fcfc9add37df9fa90e4cb142ff5b5a">format</a>;
      <a class="code" href="linklist_8c.html#abfe4a1419e46dc9e1235dcbe6b52a022">listnode_add_sort</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, area);
      <a class="code" href="ospf__abr_8c.html#aae7756099eb070db13009f36bfd7736f">ospf_check_abr_status</a> (ospf);  
    }

  <span class="keywordflow">return</span> <a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6d4e4f9edd42c089df786b0df096cfbc"></a><!-- doxytag: member="ospfd.c::ospf_area_id_cmp" ref="a6d4e4f9edd42c089df786b0df096cfbc" args="(struct ospf_area *a1, struct ospf_area *a2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int ospf_area_id_cmp </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td>
          <td class="paramname"><em>a1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td>
          <td class="paramname"><em>a2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00145">145</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (ntohl (a1-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>.s_addr) &gt; ntohl (a2-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>.s_addr))
    <span class="keywordflow">return</span> 1;
  <span class="keywordflow">if</span> (ntohl (a1-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>.s_addr) &lt; ntohl (a2-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>.s_addr))
    <span class="keywordflow">return</span> -1;
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a749e2c33ebb3d846c8ba674303699e26"></a><!-- doxytag: member="ospfd.c::ospf_area_import_list_set" ref="a749e2c33ebb3d846c8ba674303699e26" args="(struct ospf *ospf, struct ospf_area *area, const char *name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_area_import_list_set </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01263">1263</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structaccess__list.html">access_list</a> *<a class="code" href="structlist.html">list</a>;
  list = <a class="code" href="filter_8c.html#a8cb65cd01015f6673c632cb5b8714b3e">access_list_lookup</a> (<a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>, <a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>);

  <a class="code" href="ospf6__area_8h.html#a8bb9cd837b1e23c12864c27e469c9575">IMPORT_LIST</a> (area) = list;

  <span class="keywordflow">if</span> (<a class="code" href="ospf6__area_8h.html#a8f03536971036c0537f7bda3fb525b14">IMPORT_NAME</a> (area))
    free (<a class="code" href="ospf6__area_8h.html#a8f03536971036c0537f7bda3fb525b14">IMPORT_NAME</a> (area));

  <a class="code" href="ospf6__area_8h.html#a8f03536971036c0537f7bda3fb525b14">IMPORT_NAME</a> (area) = strdup (<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>);
  <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (ospf);

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a37dd160fa610a5ad3222a273744c1e7f"></a><!-- doxytag: member="ospfd.c::ospf_area_import_list_unset" ref="a37dd160fa610a5ad3222a273744c1e7f" args="(struct ospf *ospf, struct ospf_area *area)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_area_import_list_unset </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01281">1281</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="ospf6__area_8h.html#a8bb9cd837b1e23c12864c27e469c9575">IMPORT_LIST</a> (area) = 0;

  <span class="keywordflow">if</span> (<a class="code" href="ospf6__area_8h.html#a8f03536971036c0537f7bda3fb525b14">IMPORT_NAME</a> (area))
    free (<a class="code" href="ospf6__area_8h.html#a8f03536971036c0537f7bda3fb525b14">IMPORT_NAME</a> (area));

  <a class="code" href="ospf6__area_8h.html#a8f03536971036c0537f7bda3fb525b14">IMPORT_NAME</a> (area) = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <a class="code" href="ospfd_8c.html#aa12d53d797f5400a252c49e4fe12428d">ospf_area_check_free</a> (ospf, area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>);

  <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (ospf);

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a24d6ed2a6a05e4856e6dbf5eea74f6ef"></a><!-- doxytag: member="ospfd.c::ospf_area_lookup_by_area_id" ref="a24d6ed2a6a05e4856e6dbf5eea74f6ef" args="(struct ospf *ospf, struct in_addr area_id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__area.html">ospf_area</a>* ospf_area_lookup_by_area_id </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>area_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00686">686</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, node, area))
    <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>, &amp;area_id))
      <span class="keywordflow">return</span> <a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;

  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5732953cc118f11638c13222c1c92f11"></a><!-- doxytag: member="ospfd.c::ospf_area_new" ref="a5732953cc118f11638c13222c1c92f11" args="(struct ospf *ospf, struct in_addr area_id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static struct <a class="el" href="structospf__area.html">ospf_area</a>* ospf_area_new </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>area_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static, read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00560">560</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<span class="keyword">new</span>;

  <span class="comment">/* Allocate new config_network. */</span>
  <span class="keyword">new</span> = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167bad6044d4348a34b266dbb18252531c7e9">MTYPE_OSPF_AREA</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a>));

  <span class="keyword">new</span>-&gt;ospf = <a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>;

  <span class="keyword">new</span>-&gt;area_id = <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>;

  <span class="keyword">new</span>-&gt;external_routing = <a class="code" href="ospfd_8h.html#a43f84c8e8584ccc8b82990d251abec4d">OSPF_AREA_DEFAULT</a>;
  <span class="keyword">new</span>-&gt;default_cost = 1;
  <span class="keyword">new</span>-&gt;auth_type = <a class="code" href="ospfd_8h.html#a7fed6737ae4236d1f4ac7c977844b128">OSPF_AUTH_NULL</a>;
  
  <span class="comment">/* New LSDB init. */</span>
  <span class="keyword">new</span>-&gt;lsdb = <a class="code" href="ospf__lsdb_8c.html#a897e69e3ce0ff001f40e3cd8ed4e0cdf">ospf_lsdb_new</a> ();

  <span class="comment">/* Self-originated LSAs initialize. */</span>
  <span class="keyword">new</span>-&gt;router_lsa_self = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

<span class="preprocessor">#ifdef HAVE_OPAQUE_LSA</span>
<span class="preprocessor"></span>  <a class="code" href="ospf__opaque_8h.html#a6817ba7e55ba931f75b13f719da847b0">ospf_opaque_type10_lsa_init</a> (<span class="keyword">new</span>);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_OPAQUE_LSA */</span>

  <span class="keyword">new</span>-&gt;oiflist = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
  <span class="keyword">new</span>-&gt;ranges = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();

  <span class="keywordflow">if</span> (<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>.s_addr == <a class="code" href="ospfd_8h.html#a1f0c659cdd89cdac0e14ea0fdec8b7f7">OSPF_AREA_BACKBONE</a>)
    ospf-&gt;<a class="code" href="structospf.html#af16c64964298aad9859d5b04503228bd">backbone</a> = <span class="keyword">new</span>;

  <span class="keywordflow">return</span> <span class="keyword">new</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a1838ae19091d12e8e5b499b499da165c"></a><!-- doxytag: member="ospfd.c::ospf_area_no_summary_set" ref="a1838ae19091d12e8e5b499b499da165c" args="(struct ospf *ospf, struct in_addr area_id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_area_no_summary_set </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>area_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01122">1122</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
  <span class="keywordtype">int</span> <a class="code" href="structospf__area.html#a83fcfc9add37df9fa90e4cb142ff5b5a">format</a> = <a class="code" href="ospfd_8h.html#a4693ac54d402184ececda946d167d1ef">OSPF_AREA_ID_FORMAT_ADDRESS</a>;

  area = <a class="code" href="ospfd_8c.html#aa215da7694f647944fed0fad86df18c8">ospf_area_get</a> (ospf, <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>, format);
  area-&gt;<a class="code" href="structospf__area.html#a2a2b5634d8424e1a939836254700a8d0">no_summary</a> = 1;

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6daabcb5f3e9730123f1cd8c190a7b8c"></a><!-- doxytag: member="ospfd.c::ospf_area_no_summary_unset" ref="a6daabcb5f3e9730123f1cd8c190a7b8c" args="(struct ospf *ospf, struct in_addr area_id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_area_no_summary_unset </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>area_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01134">1134</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;

  area = <a class="code" href="ospfd_8c.html#a24d6ed2a6a05e4856e6dbf5eea74f6ef">ospf_area_lookup_by_area_id</a> (ospf, <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>);
  <span class="keywordflow">if</span> (area == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> 0;

  area-&gt;<a class="code" href="structospf__area.html#a2a2b5634d8424e1a939836254700a8d0">no_summary</a> = 0;
  <a class="code" href="ospfd_8c.html#aa12d53d797f5400a252c49e4fe12428d">ospf_area_check_free</a> (ospf, <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>);

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a78cd3687cd0064fb0f9346302f78481f"></a><!-- doxytag: member="ospfd.c::ospf_area_nssa_set" ref="a78cd3687cd0064fb0f9346302f78481f" args="(struct ospf *ospf, struct in_addr area_id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_area_nssa_set </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>area_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01149">1149</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
  <span class="keywordtype">int</span> <a class="code" href="structospf__area.html#a83fcfc9add37df9fa90e4cb142ff5b5a">format</a> = <a class="code" href="ospfd_8h.html#a4693ac54d402184ececda946d167d1ef">OSPF_AREA_ID_FORMAT_ADDRESS</a>;

  area = <a class="code" href="ospfd_8c.html#aa215da7694f647944fed0fad86df18c8">ospf_area_get</a> (ospf, <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>, format);
  <span class="keywordflow">if</span> (<a class="code" href="ospfd_8c.html#a2ca34a3919b52cf2c97ae7183e0afdb0">ospf_area_vlink_count</a> (ospf, area))
    <span class="keywordflow">return</span> 0;

  <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a> != <a class="code" href="ospfd_8h.html#a871478d6ecced0907ee1f67c5dbacf99">OSPF_AREA_NSSA</a>)
    {
      <a class="code" href="ospfd_8c.html#aaf9a429fd587798097e37fea1b83b665">ospf_area_type_set</a> (area, <a class="code" href="ospfd_8h.html#a871478d6ecced0907ee1f67c5dbacf99">OSPF_AREA_NSSA</a>);
      ospf-&gt;<a class="code" href="structospf.html#ad20715ef15a9c610284474aa9f1df3bc">anyNSSA</a>++;
    }

  <span class="comment">/* set NSSA area defaults */</span>
  area-&gt;<a class="code" href="structospf__area.html#a2a2b5634d8424e1a939836254700a8d0">no_summary</a> = 0;
  area-&gt;<a class="code" href="structospf__area.html#a42f4ce1b9291935fc71a30d93049d588">NSSATranslatorRole</a> = <a class="code" href="ospfd_8h.html#a6421313c3b9108552cecefe06304ae1e">OSPF_NSSA_ROLE_CANDIDATE</a>;
  area-&gt;<a class="code" href="structospf__area.html#a3956cb7dd73ce5563ae652947e12d08e">NSSATranslatorState</a> = <a class="code" href="ospfd_8h.html#a35683a93ec45417ffe36e59f8af39d4d">OSPF_NSSA_TRANSLATE_DISABLED</a>;
  area-&gt;<a class="code" href="structospf__area.html#a16f92f69d0f498cb98f81851eb24a62b">NSSATranslatorStabilityInterval</a> = <a class="code" href="ospfd_8h.html#a3732542a0779e8f063ac02e429f26a13">OSPF_NSSA_TRANS_STABLE_DEFAULT</a>;

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac63a090c29ecb1dae5c52afebb3e36c1"></a><!-- doxytag: member="ospfd.c::ospf_area_nssa_translator_role_set" ref="ac63a090c29ecb1dae5c52afebb3e36c1" args="(struct ospf *ospf, struct in_addr area_id, int role)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_area_nssa_translator_role_set </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>area_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>role</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01194">1194</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;

  area = <a class="code" href="ospfd_8c.html#a24d6ed2a6a05e4856e6dbf5eea74f6ef">ospf_area_lookup_by_area_id</a> (ospf, <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>);
  <span class="keywordflow">if</span> (area == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> 0;

  area-&gt;<a class="code" href="structospf__area.html#a42f4ce1b9291935fc71a30d93049d588">NSSATranslatorRole</a> = role;

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aaae198d1283c318ee0b0ea29028dd592"></a><!-- doxytag: member="ospfd.c::ospf_area_nssa_translator_role_unset" ref="aaae198d1283c318ee0b0ea29028dd592" args="(struct ospf *ospf, struct in_addr area_id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int ospf_area_nssa_translator_role_unset </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>area_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01210">1210</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;

  area = <a class="code" href="ospfd_8c.html#a24d6ed2a6a05e4856e6dbf5eea74f6ef">ospf_area_lookup_by_area_id</a> (ospf, <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>);
  <span class="keywordflow">if</span> (area == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> 0;

  area-&gt;<a class="code" href="structospf__area.html#a42f4ce1b9291935fc71a30d93049d588">NSSATranslatorRole</a> = <a class="code" href="ospfd_8h.html#a6421313c3b9108552cecefe06304ae1e">OSPF_NSSA_ROLE_CANDIDATE</a>;

  <a class="code" href="ospfd_8c.html#aa12d53d797f5400a252c49e4fe12428d">ospf_area_check_free</a> (ospf, <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>);

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a476165e655fbafcacbeeac92e367b210"></a><!-- doxytag: member="ospfd.c::ospf_area_nssa_unset" ref="a476165e655fbafcacbeeac92e367b210" args="(struct ospf *ospf, struct in_addr area_id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_area_nssa_unset </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>area_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01174">1174</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;

  area = <a class="code" href="ospfd_8c.html#a24d6ed2a6a05e4856e6dbf5eea74f6ef">ospf_area_lookup_by_area_id</a> (ospf, <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>);
  <span class="keywordflow">if</span> (area == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> 0;

  <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a> == <a class="code" href="ospfd_8h.html#a871478d6ecced0907ee1f67c5dbacf99">OSPF_AREA_NSSA</a>)
    {
      ospf-&gt;<a class="code" href="structospf.html#ad20715ef15a9c610284474aa9f1df3bc">anyNSSA</a>--;
      <a class="code" href="ospfd_8c.html#aaf9a429fd587798097e37fea1b83b665">ospf_area_type_set</a> (area, <a class="code" href="ospfd_8h.html#a43f84c8e8584ccc8b82990d251abec4d">OSPF_AREA_DEFAULT</a>);
    }

  <a class="code" href="ospfd_8c.html#aa12d53d797f5400a252c49e4fe12428d">ospf_area_check_free</a> (ospf, <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>);

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad167c0a42889e93f29f5f64a3ab2ddb3"></a><!-- doxytag: member="ospfd.c::ospf_area_shortcut_set" ref="ad167c0a42889e93f29f5f64a3ab2ddb3" args="(struct ospf *ospf, struct ospf_area *area, int mode)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_area_shortcut_set </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>mode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01049">1049</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structospf__area.html#ac5b177716c810e517f0aacbdbe68a6e4">shortcut_configured</a> == <a class="code" href="bgp__open_8h.html#af4324da5e10e48f7970f2bc5b611e367">mode</a>)
    <span class="keywordflow">return</span> 0;

  area-&gt;<a class="code" href="structospf__area.html#ac5b177716c810e517f0aacbdbe68a6e4">shortcut_configured</a> = <a class="code" href="bgp__open_8h.html#af4324da5e10e48f7970f2bc5b611e367">mode</a>;
  <a class="code" href="ospf__lsa_8c.html#a66ad8a1fd151b43b11d7ec9650a644bf">ospf_router_lsa_timer_add</a> (area);
  <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (ospf);

  <a class="code" href="ospfd_8c.html#aa12d53d797f5400a252c49e4fe12428d">ospf_area_check_free</a> (ospf, area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>);

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3ce0d51b534307c118644c4ac26b2738"></a><!-- doxytag: member="ospfd.c::ospf_area_shortcut_unset" ref="a3ce0d51b534307c118644c4ac26b2738" args="(struct ospf *ospf, struct ospf_area *area)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_area_shortcut_unset </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01064">1064</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  area-&gt;<a class="code" href="structospf__area.html#ac5b177716c810e517f0aacbdbe68a6e4">shortcut_configured</a> = <a class="code" href="ospfd_8h.html#a830dd703d89739f72962f5d4ccd8929d">OSPF_SHORTCUT_DEFAULT</a>;
  <a class="code" href="ospf__lsa_8c.html#a66ad8a1fd151b43b11d7ec9650a644bf">ospf_router_lsa_timer_add</a> (area);
  <a class="code" href="ospfd_8c.html#aa12d53d797f5400a252c49e4fe12428d">ospf_area_check_free</a> (ospf, area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>);
  <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (ospf);

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a7d74d7fa4790235c9ca733dc8092ce2c"></a><!-- doxytag: member="ospfd.c::ospf_area_stub_set" ref="a7d74d7fa4790235c9ca733dc8092ce2c" args="(struct ospf *ospf, struct in_addr area_id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_area_stub_set </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>area_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01089">1089</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
  <span class="keywordtype">int</span> <a class="code" href="structospf__area.html#a83fcfc9add37df9fa90e4cb142ff5b5a">format</a> = <a class="code" href="ospfd_8h.html#a4693ac54d402184ececda946d167d1ef">OSPF_AREA_ID_FORMAT_ADDRESS</a>;

  area = <a class="code" href="ospfd_8c.html#aa215da7694f647944fed0fad86df18c8">ospf_area_get</a> (ospf, <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>, format);
  <span class="keywordflow">if</span> (<a class="code" href="ospfd_8c.html#a2ca34a3919b52cf2c97ae7183e0afdb0">ospf_area_vlink_count</a> (ospf, area))
    <span class="keywordflow">return</span> 0;

  <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a> != <a class="code" href="ospfd_8h.html#a34e738eee2ef9dfcea3d7f31d36de08c">OSPF_AREA_STUB</a>)
    <a class="code" href="ospfd_8c.html#aaf9a429fd587798097e37fea1b83b665">ospf_area_type_set</a> (area, <a class="code" href="ospfd_8h.html#a34e738eee2ef9dfcea3d7f31d36de08c">OSPF_AREA_STUB</a>);

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad38a90ef491934c5dc4c3cb6dbf4c636"></a><!-- doxytag: member="ospfd.c::ospf_area_stub_unset" ref="ad38a90ef491934c5dc4c3cb6dbf4c636" args="(struct ospf *ospf, struct in_addr area_id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_area_stub_unset </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>area_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01105">1105</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;

  area = <a class="code" href="ospfd_8c.html#a24d6ed2a6a05e4856e6dbf5eea74f6ef">ospf_area_lookup_by_area_id</a> (ospf, <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>);
  <span class="keywordflow">if</span> (area == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> 1;

  <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a> == <a class="code" href="ospfd_8h.html#a34e738eee2ef9dfcea3d7f31d36de08c">OSPF_AREA_STUB</a>)
    <a class="code" href="ospfd_8c.html#aaf9a429fd587798097e37fea1b83b665">ospf_area_type_set</a> (area, <a class="code" href="ospfd_8h.html#a43f84c8e8584ccc8b82990d251abec4d">OSPF_AREA_DEFAULT</a>);

  <a class="code" href="ospfd_8c.html#aa12d53d797f5400a252c49e4fe12428d">ospf_area_check_free</a> (ospf, <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>);

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aaf9a429fd587798097e37fea1b83b665"></a><!-- doxytag: member="ospfd.c::ospf_area_type_set" ref="aaf9a429fd587798097e37fea1b83b665" args="(struct ospf_area *area, int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ospf_area_type_set </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00988">988</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;

  <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a> == <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>)
    {
      <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Area[%s]: Types are the same, ignored.&quot;</span>,
           inet_ntoa (area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>));
      <span class="keywordflow">return</span>;
    }

  area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a> = <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>;

  <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Area[%s]: Configured as %s&quot;</span>, inet_ntoa (area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>),
           <a class="code" href="log_8h.html#a3a4b1cad85aa6752f39580944e24a868">LOOKUP</a> (<a class="code" href="ospfd_8c.html#a1d53da7b1d301ee11b1c599196fdaf47">ospf_area_type_msg</a>, <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>));

  <span class="keywordflow">switch</span> (area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a>)
    {
    <span class="keywordflow">case</span> <a class="code" href="ospfd_8h.html#a43f84c8e8584ccc8b82990d251abec4d">OSPF_AREA_DEFAULT</a>:
      <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (area-&gt;<a class="code" href="structospf__area.html#aec49fceeb655dde5648208d29dfc66a4">oiflist</a>, node, oi))
        <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
          {
        <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#aefbbf7455ee0d73ae283d9ab8edab4f6">options</a>, <a class="code" href="ospfd_8h.html#af9739335948debe99dd1e5e62d87c00c">OSPF_OPTION_NP</a>);
        <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#aefbbf7455ee0d73ae283d9ab8edab4f6">options</a>, <a class="code" href="ospfd_8h.html#a0cb690faccaae5c2692a2f2c1b273720">OSPF_OPTION_E</a>);
          }
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="ospfd_8h.html#a34e738eee2ef9dfcea3d7f31d36de08c">OSPF_AREA_STUB</a>:
      <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (area-&gt;<a class="code" href="structospf__area.html#aec49fceeb655dde5648208d29dfc66a4">oiflist</a>, node, oi))
        <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
          {
            <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
              <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;setting options on %s accordingly&quot;</span>, <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (oi));
            <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#aefbbf7455ee0d73ae283d9ab8edab4f6">options</a>, <a class="code" href="ospfd_8h.html#af9739335948debe99dd1e5e62d87c00c">OSPF_OPTION_NP</a>);
            <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#aefbbf7455ee0d73ae283d9ab8edab4f6">options</a>, <a class="code" href="ospfd_8h.html#a0cb690faccaae5c2692a2f2c1b273720">OSPF_OPTION_E</a>);
            <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
              <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;options set on %s: %x&quot;</span>,
                         <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (oi), <a class="code" href="ospf__interface_8h.html#af4be2fbb5f97ac9946d943e9e4f4dec8">OPTIONS</a> (oi));
          }
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="ospfd_8h.html#a871478d6ecced0907ee1f67c5dbacf99">OSPF_AREA_NSSA</a>:
      <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (area-&gt;<a class="code" href="structospf__area.html#aec49fceeb655dde5648208d29dfc66a4">oiflist</a>, node, oi))
        <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
          {
            <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;setting nssa options on %s accordingly&quot;</span>, <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (oi));
            <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#aefbbf7455ee0d73ae283d9ab8edab4f6">options</a>, <a class="code" href="ospfd_8h.html#a0cb690faccaae5c2692a2f2c1b273720">OSPF_OPTION_E</a>);
            <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#aefbbf7455ee0d73ae283d9ab8edab4f6">options</a>, <a class="code" href="ospfd_8h.html#af9739335948debe99dd1e5e62d87c00c">OSPF_OPTION_NP</a>);
            <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;options set on %s: %x&quot;</span>, <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (oi), <a class="code" href="ospf__interface_8h.html#af4be2fbb5f97ac9946d943e9e4f4dec8">OPTIONS</a> (oi));
          }
      <span class="keywordflow">break</span>;
    <span class="keywordflow">default</span>:
      <span class="keywordflow">break</span>;
    }

  <a class="code" href="ospf__lsa_8c.html#a66ad8a1fd151b43b11d7ec9650a644bf">ospf_router_lsa_timer_add</a> (area);
  <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a2ca34a3919b52cf2c97ae7183e0afdb0"></a><!-- doxytag: member="ospfd.c::ospf_area_vlink_count" ref="a2ca34a3919b52cf2c97ae7183e0afdb0" args="(struct ospf *ospf, struct ospf_area *area)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int ospf_area_vlink_count </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01075">1075</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__vl__data.html">ospf_vl_data</a> *vl;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a66e3fedede6aa372e5196e55e5e8d5c1">count</a> = 0;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#acdf23576e62fa9370cc57b2384acf143">vlinks</a>, node, vl))
    <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;vl-&gt;<a class="code" href="structospf__vl__data.html#a7d89fa86fa918d94b7b4474f93569cd9">vl_area_id</a>, &amp;area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>))
      count++;

  <span class="keywordflow">return</span> <a class="code" href="spgrid_8c.html#a66e3fedede6aa372e5196e55e5e8d5c1">count</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3566d58661efb2cb9ee85ffa44daa06a"></a><!-- doxytag: member="ospfd.c::ospf_deferred_shutdown_check" ref="a3566d58661efb2cb9ee85ffa44daa06a" args="(struct ospf *ospf)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ospf_deferred_shutdown_check </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00322">322</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> timeout;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *ln;
  <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
  
  <span class="comment">/* deferred shutdown already running? */</span>
  <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#a11155cdc2e464fc222e65446124e26ac">t_deferred_shutdown</a>)
    <span class="keywordflow">return</span>;
  
  <span class="comment">/* Should we try push out max-metric LSAs? */</span>
  <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#a38422722427e7d694d547cec27735ab0">stub_router_shutdown_time</a> != <a class="code" href="ospfd_8h.html#a4a68456603adc72536dfd42656a45bce">OSPF_STUB_ROUTER_UNCONFIGURED</a>)
    {
      <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, ln, area))
        {
          <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (area-&gt;<a class="code" href="structospf__area.html#a867d739fef4ebeba5904af241dbcf88f">stub_router_state</a>, <a class="code" href="ospfd_8h.html#ab939bce5a7f69489b162a0304569c36e">OSPF_AREA_ADMIN_STUB_ROUTED</a>);
          
          <span class="keywordflow">if</span> (!<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (area-&gt;<a class="code" href="structospf__area.html#a867d739fef4ebeba5904af241dbcf88f">stub_router_state</a>, <a class="code" href="ospfd_8h.html#a11d7f12dfe50bd7cc95c7e76615cb8bc">OSPF_AREA_IS_STUB_ROUTED</a>))
              <a class="code" href="ospf__lsa_8c.html#a66ad8a1fd151b43b11d7ec9650a644bf">ospf_router_lsa_timer_add</a> (area);
        }
      timeout = ospf-&gt;<a class="code" href="structospf.html#a38422722427e7d694d547cec27735ab0">stub_router_shutdown_time</a>;
    }
  <span class="keywordflow">else</span>
    {
      <span class="comment">/* No timer needed */</span>
      <a class="code" href="ospfd_8c.html#aa8a8ca3d37c7c3b883edca23fff8dc67">ospf_deferred_shutdown_finish</a> (ospf);
      <span class="keywordflow">return</span>;
    }
  
  <a class="code" href="ospfd_8h.html#af55bc6c498265fffa9294d0f1b952267">OSPF_TIMER_ON</a> (ospf-&gt;<a class="code" href="structospf.html#a11155cdc2e464fc222e65446124e26ac">t_deferred_shutdown</a>, <a class="code" href="ospfd_8c.html#a38fe1169fcf0756b509a8b12ada985cf">ospf_deferred_shutdown_timer</a>,
                 timeout);
  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa8a8ca3d37c7c3b883edca23fff8dc67"></a><!-- doxytag: member="ospfd.c::ospf_deferred_shutdown_finish" ref="aa8a8ca3d37c7c3b883edca23fff8dc67" args="(struct ospf *ospf)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ospf_deferred_shutdown_finish </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00290">290</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  ospf-&gt;<a class="code" href="structospf.html#a38422722427e7d694d547cec27735ab0">stub_router_shutdown_time</a> = <a class="code" href="ospfd_8h.html#a4a68456603adc72536dfd42656a45bce">OSPF_STUB_ROUTER_UNCONFIGURED</a>;  
  <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#a11155cdc2e464fc222e65446124e26ac">t_deferred_shutdown</a>);
  
  <a class="code" href="ospfd_8c.html#a3246e8a54ca10359cd606959b7b29622">ospf_finish_final</a> (ospf);
  
  <span class="comment">/* *ospf is now invalid */</span>
  
  <span class="comment">/* ospfd being shut-down? If so, was this the last ospf instance? */</span>
  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (<a class="code" href="ospfd_8c.html#a00fd6054739908ab616f0bacdc6d0f64">om</a>-&gt;<a class="code" href="structospf__master.html#ae3feffaf85b6def6d6432d6e845d6610">options</a>, <a class="code" href="ospfd_8h.html#a9ad316e02e4cb4288126c9e88cb4730a">OSPF_MASTER_SHUTDOWN</a>)
      &amp;&amp; (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (<a class="code" href="ospfd_8c.html#a00fd6054739908ab616f0bacdc6d0f64">om</a>-&gt;<a class="code" href="structospf__master.html#a2f5e0a5ef79f97d68abef8515b41a740">ospf</a>) == 0))
    <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a> (0);

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a38fe1169fcf0756b509a8b12ada985cf"></a><!-- doxytag: member="ospfd.c::ospf_deferred_shutdown_timer" ref="a38fe1169fcf0756b509a8b12ada985cf" args="(struct thread *t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int ospf_deferred_shutdown_timer </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>t</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00309">309</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a> = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a>(t);
  
  <a class="code" href="ospfd_8c.html#aa8a8ca3d37c7c3b883edca23fff8dc67">ospf_deferred_shutdown_finish</a> (ospf);
  
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="add2572d0e80de2650e7f4ddef690e83e"></a><!-- doxytag: member="ospfd.c::ospf_delete" ref="add2572d0e80de2650e7f4ddef690e83e" args="(struct ospf *ospf)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ospf_delete </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00254">254</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (<a class="code" href="ospfd_8c.html#a00fd6054739908ab616f0bacdc6d0f64">om</a>-&gt;<a class="code" href="structospf__master.html#a2f5e0a5ef79f97d68abef8515b41a740">ospf</a>, ospf);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a71bfe0c0306143ad66bef9bb28c36462"></a><!-- doxytag: member="ospfd.c::ospf_finish" ref="a71bfe0c0306143ad66bef9bb28c36462" args="(struct ospf *ospf)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_finish </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00383">383</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="comment">/* let deferred shutdown decide */</span>
  <a class="code" href="ospfd_8c.html#a3566d58661efb2cb9ee85ffa44daa06a">ospf_deferred_shutdown_check</a> (ospf);
      
  <span class="comment">/* if ospf_deferred_shutdown returns, then ospf_finish_final is</span>
<span class="comment">   * deferred to expiry of G-S timer thread. Return back up, hopefully</span>
<span class="comment">   * to thread scheduler.</span>
<span class="comment">   */</span>
  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3246e8a54ca10359cd606959b7b29622"></a><!-- doxytag: member="ospfd.c::ospf_finish_final" ref="a3246e8a54ca10359cd606959b7b29622" args="(struct ospf *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ospf_finish_final </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00397">397</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma;
  <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa;
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
  <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
  <span class="keyword">struct </span><a class="code" href="structospf__vl__data.html">ospf_vl_data</a> *vl_data;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

<span class="preprocessor">#ifdef HAVE_OPAQUE_LSA</span>
<span class="preprocessor"></span>  <a class="code" href="ospf__opaque_8h.html#a585b78ae190eca243a024d1288611592">ospf_opaque_type11_lsa_term</a> (ospf);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_OPAQUE_LSA */</span>
  
  <span class="comment">/* be nice if this worked, but it doesn&#39;t */</span>
  <span class="comment">/*ospf_flush_self_originated_lsas_now (ospf);*/</span>
  
  <span class="comment">/* Unregister redistribution */</span>
  <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="zebra_8h.html#aec97442680d773fd62f9af5c9426b842">ZEBRA_ROUTE_MAX</a>; i++)
    <a class="code" href="ospf__zebra_8c.html#ad4e2f81ba398e7d54e102e7f8b8715be">ospf_redistribute_unset</a> (ospf, i);
  <a class="code" href="ospf__zebra_8c.html#aed80a1c3db7d07002fce735375188fb5">ospf_redistribute_default_unset</a> (ospf);

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, node, nnode, area))
    <a class="code" href="ospfd_8c.html#a18ae69cd8ada47780d2abe5cf46aef7c">ospf_remove_vls_through_area</a> (ospf, area);
  
  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (ospf-&gt;<a class="code" href="structospf.html#acdf23576e62fa9370cc57b2384acf143">vlinks</a>, node, nnode, vl_data))
    <a class="code" href="ospf__interface_8c.html#a9feb69dbfbf6c28344a5920b2e21e5ff">ospf_vl_delete</a> (ospf, vl_data);
  
  <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (ospf-&gt;<a class="code" href="structospf.html#acdf23576e62fa9370cc57b2384acf143">vlinks</a>);

  <span class="comment">/* Reset interface. */</span>
  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (ospf-&gt;<a class="code" href="structospf.html#a977d3608343fe5db7900ec646880cb6a">oiflist</a>, node, nnode, oi))
    <a class="code" href="ospf__interface_8c.html#aa06699fd3d9034f239d51f2ea6098b3b">ospf_if_free</a> (oi);

  <span class="comment">/* Clear static neighbors */</span>
  <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (ospf-&gt;<a class="code" href="structospf.html#a89b824e82146fd2494b2bf596934ab57">nbr_nbma</a>); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
    <span class="keywordflow">if</span> ((nbr_nbma = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>))
      {
    <a class="code" href="ospfd_8h.html#a00739e4ae75021e7e134dc6b292a9f2b">OSPF_POLL_TIMER_OFF</a> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a9aa6dd806f5903f6a4ded3ee4ca26e29">t_poll</a>);

    <span class="keywordflow">if</span> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a>)
      {
        nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a>-&gt;<a class="code" href="structospf__neighbor.html#a68b82493dd68fd0a271db2e168c36617">nbr_nbma</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
        nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
      }

    <span class="keywordflow">if</span> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a501752990df8f83d0efae32fbb9dead9">oi</a>)
      {
        <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a501752990df8f83d0efae32fbb9dead9">oi</a>-&gt;<a class="code" href="structospf__interface.html#a5711c57336783fe2d490c7760a4a18ed">nbr_nbma</a>, nbr_nbma);
        nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a501752990df8f83d0efae32fbb9dead9">oi</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
      }

    <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba3168b63f70b138c38a19ae6d743b77ed">MTYPE_OSPF_NEIGHBOR_STATIC</a>, nbr_nbma);
      }

  <a class="code" href="table_8c.html#adc5ff276f1698f5bef7bb74289e3b26e">route_table_finish</a> (ospf-&gt;<a class="code" href="structospf.html#a89b824e82146fd2494b2bf596934ab57">nbr_nbma</a>);

  <span class="comment">/* Clear networks and Areas. */</span>
  <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (ospf-&gt;<a class="code" href="structospf.html#a4f2d79a18b8a5eb9973c277282ed1b90">networks</a>); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
    {
      <span class="keyword">struct </span><a class="code" href="structospf__network.html">ospf_network</a> *<a class="code" href="command_8c.html#acec200f241e2d8f6b38bc83616c4c468">network</a>;

      <span class="keywordflow">if</span> ((network = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <a class="code" href="ospfd_8c.html#a187d0469588c7386421e07eb4f65e344">ospf_network_free</a> (ospf, network);
      rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
      <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
    }
    }

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, node, nnode, area))
    {
      <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, area);
      <a class="code" href="ospfd_8c.html#a764d9b44ff909f4260cf83bf516b8d0e">ospf_area_free</a> (area);
    }

  <span class="comment">/* Cancel all timers. */</span>
  <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#ad5e7d717716a67c3b2198f40c2bf2598">t_external_lsa</a>);
  <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#a94a369b811b335e1d05e1dab77096606">t_router_lsa_update</a>);
  <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#a7275a30b5634c98437fad833eee61a48">t_spf_calc</a>);
  <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#ac589f939b5118b77086d3af51633ed3c">t_ase_calc</a>);
  <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#ab8f18d70bc4436f4f060a328ebea77b1">t_maxage</a>);
  <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#afc0d99523632821dde306d634e1c5ad1">t_maxage_walker</a>);
  <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#adcdb64a50cde7f209f8c55df581d8bae">t_abr_task</a>);
  <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#ad1f3e7eafbdb94f7c602f89f2b55450c">t_asbr_check</a>);
  <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#abfa4d7a08ec475ecaa88449f363acd23">t_distribute_update</a>);
  <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#a3f56b5850d9efb087ddb6d2eb79dd291">t_lsa_refresher</a>);
  <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#ace995e4406c0eab0fcbe9353107e06f6">t_read</a>);
  <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#a58c6957a24a39205e5a9f7aeab10e42b">t_write</a>);
<span class="preprocessor">#ifdef HAVE_OPAQUE_LSA</span>
<span class="preprocessor"></span>  <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;t_opaque_lsa_self);
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>
  close (ospf-&gt;<a class="code" href="structospf.html#a13100b27c547a3ba3572908aa24259c5">fd</a>);
  <a class="code" href="stream_8c.html#ac25ca0f9b32a76b4ea34ecb3c9d62481">stream_free</a>(ospf-&gt;<a class="code" href="structospf.html#a43a02c52efc45fdd5a775688aed3d66b">ibuf</a>);
   
<span class="preprocessor">#ifdef HAVE_OPAQUE_LSA</span>
<span class="preprocessor"></span>  <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#ac7a1aa21490d2bd86999d2e494cde6d0">OPAQUE_AS_LSDB</a> (ospf), rn, lsa)
    <a class="code" href="ospf__lsa_8c.html#ad6d5a002c1a2e4d50dfed4a627ea42a8">ospf_discard_from_db</a> (ospf, ospf-&gt;lsdb, lsa);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_OPAQUE_LSA */</span>
  <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#ae56a8a7b638bd22caf86ea3d810fdbd9">EXTERNAL_LSDB</a> (ospf), rn, lsa)
    <a class="code" href="ospf__lsa_8c.html#ad6d5a002c1a2e4d50dfed4a627ea42a8">ospf_discard_from_db</a> (ospf, ospf-&gt;lsdb, lsa);

  <a class="code" href="ospf__lsdb_8c.html#aac04ea2aea1f1895b940fe30fa531a5f">ospf_lsdb_delete_all</a> (ospf-&gt;lsdb);
  <a class="code" href="ospf__lsdb_8c.html#ac2cd09a4c0bd7f62bc5312dc71ffde57">ospf_lsdb_free</a> (ospf-&gt;lsdb);

  for (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (ospf-&gt;maxage_lsa, node, nnode, lsa))
    <a class="code" href="ospf__lsa_8c.html#a268fc5c6673caf7ee94c0eaaa88455b8">ospf_lsa_unlock</a> (&amp;lsa); <span class="comment">/* maxage_lsa */</span>

  <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (ospf-&gt;maxage_lsa);

  if (ospf-&gt;old_table)
    <a class="code" href="ospf__route_8c.html#a1af9a7462973d18c31f1f610ff70e338">ospf_route_table_free</a> (ospf-&gt;old_table);
  if (ospf-&gt;new_table)
    {
      <a class="code" href="ospf__route_8c.html#aa7c274fb5c9182db7291a1e03aadf4c4">ospf_route_delete</a> (ospf-&gt;new_table);
      <a class="code" href="ospf__route_8c.html#a1af9a7462973d18c31f1f610ff70e338">ospf_route_table_free</a> (ospf-&gt;new_table);
    }
  <span class="keywordflow">if</span> (ospf-&gt;old_rtrs)
    <a class="code" href="ospf__spf_8c.html#a5861f43a374234df3d96fc31e6697387">ospf_rtrs_free</a> (ospf-&gt;old_rtrs);
  <span class="keywordflow">if</span> (ospf-&gt;new_rtrs)
    <a class="code" href="ospf__spf_8c.html#a5861f43a374234df3d96fc31e6697387">ospf_rtrs_free</a> (ospf-&gt;new_rtrs);
  <span class="keywordflow">if</span> (ospf-&gt;new_external_route)
    {
      <a class="code" href="ospf__route_8c.html#aa7c274fb5c9182db7291a1e03aadf4c4">ospf_route_delete</a> (ospf-&gt;new_external_route);
      <a class="code" href="ospf__route_8c.html#a1af9a7462973d18c31f1f610ff70e338">ospf_route_table_free</a> (ospf-&gt;new_external_route);
    }
  <span class="keywordflow">if</span> (ospf-&gt;old_external_route)
    {
      <a class="code" href="ospf__route_8c.html#aa7c274fb5c9182db7291a1e03aadf4c4">ospf_route_delete</a> (ospf-&gt;old_external_route);
      <a class="code" href="ospf__route_8c.html#a1af9a7462973d18c31f1f610ff70e338">ospf_route_table_free</a> (ospf-&gt;old_external_route);
    }
  <span class="keywordflow">if</span> (ospf-&gt;external_lsas)
    {
      <a class="code" href="ospf__ase_8c.html#a42bf210bf76365af43a100923da36329">ospf_ase_external_lsas_finish</a> (ospf-&gt;external_lsas);
    }

  <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (ospf-&gt;areas);
  
  <span class="keywordflow">for</span> (i = <a class="code" href="zebra_8h.html#a650967617adbd419d14e5e05d9548108">ZEBRA_ROUTE_SYSTEM</a>; i &lt;= <a class="code" href="zebra_8h.html#aec97442680d773fd62f9af5c9426b842">ZEBRA_ROUTE_MAX</a>; i++)
    <span class="keywordflow">if</span> (<a class="code" href="ospfd_8h.html#a9fa5e60f9244cb3ea41a0a96d3c9b85c">EXTERNAL_INFO</a> (i) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
      <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (<a class="code" href="ospfd_8h.html#a9fa5e60f9244cb3ea41a0a96d3c9b85c">EXTERNAL_INFO</a> (i)); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
    {
      <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
        <span class="keywordflow">continue</span>;
      
      <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba7c6beef4557d59d431c035b612b64a83">MTYPE_OSPF_EXTERNAL_INFO</a>, rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>);
      rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
      <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
    }

  <a class="code" href="ospf__zebra_8c.html#ae662051107e9412269a5868e5c1085d7">ospf_distance_reset</a> (ospf);
  <a class="code" href="table_8c.html#adc5ff276f1698f5bef7bb74289e3b26e">route_table_finish</a> (ospf-&gt;distance_table);

  <a class="code" href="ospfd_8c.html#add2572d0e80de2650e7f4ddef690e83e">ospf_delete</a> (ospf);

  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba0ad9117251a05de9c1c0e34cb4b08914">MTYPE_OSPF_TOP</a>, ospf);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a92d1f67d0a83fc48c3bcc4947ba0c913"></a><!-- doxytag: member="ospfd.c::ospf_get" ref="a92d1f67d0a83fc48c3bcc4947ba0c913" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf.html">ospf</a>* ospf_get </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00260">260</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>;

  ospf = <a class="code" href="ospfd_8c.html#a8ea0c935a4862c1469bc962e93fee74b">ospf_lookup</a> ();
  <span class="keywordflow">if</span> (ospf == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      ospf = <a class="code" href="ospfd_8c.html#a61a47474abcb16fd62d9ad0dc0bb08c0">ospf_new</a> ();
      <a class="code" href="ospfd_8c.html#a0e0d305f56ff1fe9eaa0c06d56dcf7fa">ospf_add</a> (ospf);

      <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#a442dcdca0018ce74dfaf7b81d1b6878a">router_id_static</a>.s_addr == 0)
    <a class="code" href="ospfd_8c.html#a0d1cbe02041ecd44cfc37a94718ca69a">ospf_router_id_update</a> (ospf);

<span class="preprocessor">#ifdef HAVE_OPAQUE_LSA</span>
<span class="preprocessor"></span>      <a class="code" href="ospf__opaque_8h.html#ab36bbe167f6dfaefff8cc6562088d5e8">ospf_opaque_type11_lsa_init</a> (ospf);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_OPAQUE_LSA */</span>
    }

  <span class="keywordflow">return</span> ospf;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9d40c9fe8a5fd9ec7add909556c5bd3f"></a><!-- doxytag: member="ospfd.c::ospf_if_update" ref="a9d40c9fe8a5fd9ec7add909556c5bd3f" args="(struct ospf *ospf, struct interface *ifp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_if_update </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"><em>ifp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00944">944</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keyword">struct </span><a class="code" href="structospf__network.html">ospf_network</a> *<a class="code" href="command_8c.html#acec200f241e2d8f6b38bc83616c4c468">network</a>;
  <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
  
  <span class="keywordflow">if</span> (!ospf)
    ospf = <a class="code" href="ospfd_8c.html#a8ea0c935a4862c1469bc962e93fee74b">ospf_lookup</a> ();

  <span class="comment">/* OSPF must be on and Router-ID must be configured. */</span>
  <span class="keywordflow">if</span> (!ospf || ospf-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>.s_addr == 0)
    <span class="keywordflow">return</span>;
  
  <span class="comment">/* Run each netowrk for this interface. */</span>
  <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (ospf-&gt;<a class="code" href="structospf.html#a4f2d79a18b8a5eb9973c277282ed1b90">networks</a>); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
    <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
      {
        network = (<span class="keyword">struct </span><a class="code" href="structospf__network.html">ospf_network</a> *) rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
        area = <a class="code" href="ospfd_8c.html#aa215da7694f647944fed0fad86df18c8">ospf_area_get</a> (ospf, network-&gt;<a class="code" href="structospf__network.html#a9a98fa52b566fda4f48f4cd8a4b77e54">area_id</a>, network-&gt;<a class="code" href="structospf__network.html#a92a758a904ba2595a41f83d14ea80b96">format</a>);
        <a class="code" href="ospfd_8c.html#a7818e64451ad531aed1fa0aeb35ec4c6">ospf_network_run_interface</a> (&amp;rn-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>, area, ifp);
      }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a8ea0c935a4862c1469bc962e93fee74b"></a><!-- doxytag: member="ospfd.c::ospf_lookup" ref="a8ea0c935a4862c1469bc962e93fee74b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf.html">ospf</a>* ospf_lookup </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00239">239</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (<a class="code" href="ospfd_8c.html#a00fd6054739908ab616f0bacdc6d0f64">om</a>-&gt;<a class="code" href="structospf__master.html#a2f5e0a5ef79f97d68abef8515b41a740">ospf</a>) == 0)
    <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="keywordflow">return</span> <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (<a class="code" href="linklist_8h.html#a3d4492ca03b023aeecd4d6b0cdaa16fb">listhead</a> (<a class="code" href="ospfd_8c.html#a00fd6054739908ab616f0bacdc6d0f64">om</a>-&gt;<a class="code" href="structospf__master.html#a2f5e0a5ef79f97d68abef8515b41a740">ospf</a>));
}
</pre></div>
</div>
</div>
<a class="anchor" id="a057b2c243b1406f27f8de8ddc5a48ade"></a><!-- doxytag: member="ospfd.c::ospf_ls_upd_queue_empty" ref="a057b2c243b1406f27f8de8ddc5a48ade" args="(struct ospf_interface *oi)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_ls_upd_queue_empty </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00917">917</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
  <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *lst;
  <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa;

  <span class="comment">/* empty ls update queue */</span>
  <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (oi-&gt;<a class="code" href="structospf__interface.html#a7f9d43bd1c8bf02254ac9b17be826615">ls_upd_queue</a>); rn;
       rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
    <span class="keywordflow">if</span> ((lst = (<span class="keyword">struct</span> <a class="code" href="structlist.html">list</a> *) rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>))
      {
    <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (lst, node, nnode, lsa))
          <a class="code" href="ospf__lsa_8c.html#a268fc5c6673caf7ee94c0eaaa88455b8">ospf_lsa_unlock</a> (&amp;lsa); <span class="comment">/* oi-&gt;ls_upd_queue */</span>
    <a class="code" href="linklist_8c.html#a15aa9f8cf8424489adf1efd4d075aac6">list_free</a> (lst);
    rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
      }
  
  <span class="comment">/* remove update event */</span>
  <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#a29691bed1e0be212206bff3f4d0fc8dd">t_ls_upd_event</a>)
    {
      <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (oi-&gt;<a class="code" href="structospf__interface.html#a29691bed1e0be212206bff3f4d0fc8dd">t_ls_upd_event</a>);
      oi-&gt;<a class="code" href="structospf__interface.html#a29691bed1e0be212206bff3f4d0fc8dd">t_ls_upd_event</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab8024808f30d57a232e72613e0df89c3"></a><!-- doxytag: member="ospfd.c::ospf_master_init" ref="ab8024808f30d57a232e72613e0df89c3" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_master_init </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01637">1637</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  memset (&amp;<a class="code" href="structospf__master.html">ospf_master</a>, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structospf__master.html">ospf_master</a>));

  <a class="code" href="ospfd_8c.html#a00fd6054739908ab616f0bacdc6d0f64">om</a> = &amp;<a class="code" href="ospfd_8c.html#a33a7fa52c2e4612ed7c43602d9520db1">ospf_master</a>;
  <a class="code" href="ospfd_8c.html#a00fd6054739908ab616f0bacdc6d0f64">om</a>-&gt;<a class="code" href="structospf__master.html#a2f5e0a5ef79f97d68abef8515b41a740">ospf</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
  <a class="code" href="ospfd_8c.html#a00fd6054739908ab616f0bacdc6d0f64">om</a>-&gt;<a class="code" href="structospf__master.html#a39e64176c2082c5f5e5e3c324c1c5725">master</a> = <a class="code" href="thread_8c.html#a6d9de673f4874d0c6b7f6a84b2e0e9cf">thread_master_create</a> ();
  <a class="code" href="ospfd_8c.html#a00fd6054739908ab616f0bacdc6d0f64">om</a>-&gt;<a class="code" href="structospf__master.html#aa00f5c7e4383a1787886fc2c1aefa94c">start_time</a> = <a class="code" href="thread_8c.html#acbaf2206b84f93fbe18f33483bf101d2">quagga_time</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a125985470ee6de834824ac909454204a"></a><!-- doxytag: member="ospfd.c::ospf_nbr_nbma_add" ref="a125985470ee6de834824ac909454204a" args="(struct ospf_nbr_nbma *nbr_nbma, struct ospf_interface *oi)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ospf_nbr_nbma_add </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *&#160;</td>
          <td class="paramname"><em>nbr_nbma</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01396">1396</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr;
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;

  <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> != <a class="code" href="ospf__interface_8h.html#abf2c650e64355936c071432d92dd5ecb">OSPF_IFTYPE_NBMA</a>)
    <span class="keywordflow">return</span>;

  <span class="keywordflow">if</span> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span>;

  <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#a4be3cd4b416bc267a4e3b35b9e2b1102">address</a>.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>, &amp;nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a5fc2a7f849288ef91acc9c055a934fe8">addr</a>))
    <span class="keywordflow">return</span>;
      
  nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a501752990df8f83d0efae32fbb9dead9">oi</a> = oi;
  <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (oi-&gt;<a class="code" href="structospf__interface.html#a5711c57336783fe2d490c7760a4a18ed">nbr_nbma</a>, nbr_nbma);

  <span class="comment">/* Get neighbor information from table. */</span>
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.family = AF_INET;
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.u.prefix4 = nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a5fc2a7f849288ef91acc9c055a934fe8">addr</a>;

  rn = <a class="code" href="table_8c.html#ac91fdff1a0b8dc3d60ebaf152caa0f80">route_node_get</a> (oi-&gt;<a class="code" href="structospf__interface.html#aeb2e2f33698c499957bb55bfc80835d9">nbrs</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)&amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>);
  <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
    {
      nbr = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
      nbr-&gt;<a class="code" href="structospf__neighbor.html#a68b82493dd68fd0a271db2e168c36617">nbr_nbma</a> = nbr_nbma;
      nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a> = nbr;

      <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
    }
  <span class="keywordflow">else</span>
    {
      nbr = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="ospf__neighbor_8c.html#a77d8efb26eb88abdd8a3c0de59b1d12a">ospf_nbr_new</a> (oi);
      nbr-&gt;<a class="code" href="structospf__neighbor.html#a07061a68f4e15effd12479e1047120c7">state</a> = <a class="code" href="ospf__nsm_8h.html#a4bdf4e7631050dcf28cbe7959f0675ce">NSM_Down</a>;
      nbr-&gt;<a class="code" href="structospf__neighbor.html#a959c002cab5b6328120fcac7ba25fbee">src</a> = nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a5fc2a7f849288ef91acc9c055a934fe8">addr</a>;
      nbr-&gt;<a class="code" href="structospf__neighbor.html#a68b82493dd68fd0a271db2e168c36617">nbr_nbma</a> = nbr_nbma;
      nbr-&gt;<a class="code" href="structospf__neighbor.html#ade51baa719592185df1db62d13e9cf63">priority</a> = nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a3d452f4f0a3396d1ee21e58e9635e228">priority</a>;
      nbr-&gt;<a class="code" href="structospf__neighbor.html#a4be3cd4b416bc267a4e3b35b9e2b1102">address</a> = <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;

      nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a> = nbr;

      <a class="code" href="ospf__nsm_8h.html#a9f4ca1bd42134b3f3c90fc8b7b4327b5">OSPF_NSM_EVENT_EXECUTE</a> (nbr, <a class="code" href="ospf__nsm_8h.html#a77085480eb043970064579598496be21">NSM_Start</a>);
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a625f9f237c3f7a17051faac3724d651f"></a><!-- doxytag: member="ospfd.c::ospf_nbr_nbma_delete" ref="a625f9f237c3f7a17051faac3724d651f" args="(struct ospf *ospf, struct ospf_nbr_nbma *nbr_nbma)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ospf_nbr_nbma_delete </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *&#160;</td>
          <td class="paramname"><em>nbr_nbma</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01361">1361</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;

  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.family = AF_INET;
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix = nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a5fc2a7f849288ef91acc9c055a934fe8">addr</a>;
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;

  rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (ospf-&gt;<a class="code" href="structospf.html#a89b824e82146fd2494b2bf596934ab57">nbr_nbma</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)&amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>);
  <span class="keywordflow">if</span> (rn)
    {
      <a class="code" href="ospfd_8c.html#a61cd9b22f0bce1e670289baa7e941378">ospf_nbr_nbma_free</a> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>);
      rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
      <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
      <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac7ea157858e0fc0113dbcfe4c34cc101"></a><!-- doxytag: member="ospfd.c::ospf_nbr_nbma_down" ref="ac7ea157858e0fc0113dbcfe4c34cc101" args="(struct ospf_nbr_nbma *nbr_nbma)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ospf_nbr_nbma_down </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *&#160;</td>
          <td class="paramname"><em>nbr_nbma</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01381">1381</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a9aa6dd806f5903f6a4ded3ee4ca26e29">t_poll</a>);

  <span class="keywordflow">if</span> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a>)
    {
      nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a>-&gt;<a class="code" href="structospf__neighbor.html#a68b82493dd68fd0a271db2e168c36617">nbr_nbma</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
      <a class="code" href="ospf__nsm_8h.html#a9f4ca1bd42134b3f3c90fc8b7b4327b5">OSPF_NSM_EVENT_EXECUTE</a> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a>, <a class="code" href="ospf__nsm_8h.html#a4b7fc48119800998da7fa068062edb40">NSM_KillNbr</a>);
    }

  <span class="keywordflow">if</span> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a501752990df8f83d0efae32fbb9dead9">oi</a>)
    <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a501752990df8f83d0efae32fbb9dead9">oi</a>-&gt;<a class="code" href="structospf__interface.html#a5711c57336783fe2d490c7760a4a18ed">nbr_nbma</a>, nbr_nbma);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a61cd9b22f0bce1e670289baa7e941378"></a><!-- doxytag: member="ospfd.c::ospf_nbr_nbma_free" ref="a61cd9b22f0bce1e670289baa7e941378" args="(struct ospf_nbr_nbma *nbr_nbma)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ospf_nbr_nbma_free </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *&#160;</td>
          <td class="paramname"><em>nbr_nbma</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01355">1355</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba3168b63f70b138c38a19ae6d743b77ed">MTYPE_OSPF_NEIGHBOR_STATIC</a>, nbr_nbma);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a053c1c99419abc1738ed63cc58a910d1"></a><!-- doxytag: member="ospfd.c::ospf_nbr_nbma_if_update" ref="a053c1c99419abc1738ed63cc58a910d1" args="(struct ospf *ospf, struct ospf_interface *oi)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_nbr_nbma_if_update </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01445">1445</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma;
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;

  <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> != <a class="code" href="ospf__interface_8h.html#abf2c650e64355936c071432d92dd5ecb">OSPF_IFTYPE_NBMA</a>)
    <span class="keywordflow">return</span>;

  <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (ospf-&gt;<a class="code" href="structospf.html#a89b824e82146fd2494b2bf596934ab57">nbr_nbma</a>); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
    <span class="keywordflow">if</span> ((nbr_nbma = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>))
      <span class="keywordflow">if</span> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a501752990df8f83d0efae32fbb9dead9">oi</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.family = AF_INET;
      <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix = nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a5fc2a7f849288ef91acc9c055a934fe8">addr</a>;
      <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;

      <span class="keywordflow">if</span> (<a class="code" href="prefix_8c.html#a8c5d68665a4b036a361330bee254318e">prefix_match</a> (oi-&gt;<a class="code" href="structospf__interface.html#a43493bc2b5d951e3e38ace850332eca1">address</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)&amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>))
        <a class="code" href="ospfd_8c.html#a125985470ee6de834824ac909454204a">ospf_nbr_nbma_add</a> (nbr_nbma, oi);
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5ef294b92140e69feec21601a4893b53"></a><!-- doxytag: member="ospfd.c::ospf_nbr_nbma_lookup" ref="a5ef294b92140e69feec21601a4893b53" args="(struct ospf *ospf, struct in_addr nbr_addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a>* ospf_nbr_nbma_lookup </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>nbr_addr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01468">1468</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;

  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.family = AF_INET;
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix = nbr_addr;
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;

  rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (ospf-&gt;<a class="code" href="structospf.html#a89b824e82146fd2494b2bf596934ab57">nbr_nbma</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)&amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>);
  <span class="keywordflow">if</span> (rn)
    {
      <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
      <span class="keywordflow">return</span> rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
    }
  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af6d7c7ae754f459750fd607f1713bc3f"></a><!-- doxytag: member="ospfd.c::ospf_nbr_nbma_lookup_next" ref="af6d7c7ae754f459750fd607f1713bc3f" args="(struct ospf *ospf, struct in_addr *addr, int first)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a>* ospf_nbr_nbma_lookup_next </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr *&#160;</td>
          <td class="paramname"><em>addr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>first</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01487">1487</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
<span class="preprocessor">#if 0</span>
<span class="preprocessor"></span>  <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>
  <span class="keywordflow">if</span> (ospf == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

<span class="preprocessor">#if 0</span>
<span class="preprocessor"></span>  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a89b824e82146fd2494b2bf596934ab57">nbr_nbma</a>, node, nbr_nbma))
    {
      <span class="keywordflow">if</span> (first)
    {
      *addr = nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a5fc2a7f849288ef91acc9c055a934fe8">addr</a>;
      <span class="keywordflow">return</span> nbr_nbma;
    }
      <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ntohl (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a5fc2a7f849288ef91acc9c055a934fe8">addr</a>.s_addr) &gt; ntohl (addr-&gt;s_addr))
    {
      *addr = nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a5fc2a7f849288ef91acc9c055a934fe8">addr</a>;
      <span class="keywordflow">return</span> nbr_nbma;
    }
    }
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab1ae8ab343ebf73396c0d0d475cbccee"></a><!-- doxytag: member="ospfd.c::ospf_nbr_nbma_new" ref="ab1ae8ab343ebf73396c0d0d475cbccee" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static struct <a class="el" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a>* ospf_nbr_nbma_new </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [static, read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01341">1341</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma;

  nbr_nbma = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba3168b63f70b138c38a19ae6d743b77ed">MTYPE_OSPF_NEIGHBOR_STATIC</a>,
              <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a>));

  nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a3d452f4f0a3396d1ee21e58e9635e228">priority</a> = <a class="code" href="ospfd_8h.html#aa3181c3eedf2acddb4d5d6e820d6d710">OSPF_NEIGHBOR_PRIORITY_DEFAULT</a>;
  nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#ac2f40d497fd994774eaa662ba7a45f9d">v_poll</a> = <a class="code" href="ospfd_8h.html#aa863216ebc7bf12bf8d0434cf9bb90d0">OSPF_POLL_INTERVAL_DEFAULT</a>;

  <span class="keywordflow">return</span> nbr_nbma;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a13f5275e4e117d48fda7da4f92e8e462"></a><!-- doxytag: member="ospfd.c::ospf_nbr_nbma_poll_interval_set" ref="a13f5275e4e117d48fda7da4f92e8e462" args="(struct ospf *ospf, struct in_addr nbr_addr, unsigned int interval)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_nbr_nbma_poll_interval_set </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>nbr_addr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>interval</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01598">1598</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma;

  nbr_nbma = <a class="code" href="ospfd_8c.html#a5ef294b92140e69feec21601a4893b53">ospf_nbr_nbma_lookup</a> (ospf, nbr_addr);
  <span class="keywordflow">if</span> (nbr_nbma == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> 0;

  <span class="keywordflow">if</span> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#ac2f40d497fd994774eaa662ba7a45f9d">v_poll</a> != <a class="code" href="isis__circuit_8c.html#a900b5f9651c07bafd5d81cc876b93885">interval</a>)
    {
      nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#ac2f40d497fd994774eaa662ba7a45f9d">v_poll</a> = <a class="code" href="isis__circuit_8c.html#a900b5f9651c07bafd5d81cc876b93885">interval</a>;
      <span class="keywordflow">if</span> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a501752990df8f83d0efae32fbb9dead9">oi</a> &amp;&amp; <a class="code" href="ospf__interface_8c.html#ad3b316be3796bf94c8d30efea994e7ad">ospf_if_is_up</a> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a501752990df8f83d0efae32fbb9dead9">oi</a>))
    {
      <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a9aa6dd806f5903f6a4ded3ee4ca26e29">t_poll</a>);
      <a class="code" href="ospfd_8h.html#ac2416fe7bfb9581d7d9c05b7326be6c1">OSPF_POLL_TIMER_ON</a> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a9aa6dd806f5903f6a4ded3ee4ca26e29">t_poll</a>, <a class="code" href="ospf__packet_8c.html#a2232cdce5e30b12f8f9d29a49952b8f8">ospf_poll_timer</a>,
                  nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#ac2f40d497fd994774eaa662ba7a45f9d">v_poll</a>);
    }
    }

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a7aa840262239aee6a4689d97661bf7fb"></a><!-- doxytag: member="ospfd.c::ospf_nbr_nbma_poll_interval_unset" ref="a7aa840262239aee6a4689d97661bf7fb" args="(struct ospf *ospf, struct in_addr addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_nbr_nbma_poll_interval_unset </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>addr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01622">1622</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma;

  nbr_nbma = <a class="code" href="ospfd_8c.html#a5ef294b92140e69feec21601a4893b53">ospf_nbr_nbma_lookup</a> (ospf, <a class="code" href="structospf__nbr__nbma.html#a5fc2a7f849288ef91acc9c055a934fe8">addr</a>);
  <span class="keywordflow">if</span> (nbr_nbma == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> 0;

  <span class="keywordflow">if</span> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#ac2f40d497fd994774eaa662ba7a45f9d">v_poll</a> != <a class="code" href="ospfd_8h.html#aa863216ebc7bf12bf8d0434cf9bb90d0">OSPF_POLL_INTERVAL_DEFAULT</a>)
    nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#ac2f40d497fd994774eaa662ba7a45f9d">v_poll</a> = <a class="code" href="ospfd_8h.html#aa863216ebc7bf12bf8d0434cf9bb90d0">OSPF_POLL_INTERVAL_DEFAULT</a>;

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3603dae65cc70ae2535765d6db428392"></a><!-- doxytag: member="ospfd.c::ospf_nbr_nbma_priority_set" ref="a3603dae65cc70ae2535765d6db428392" args="(struct ospf *ospf, struct in_addr nbr_addr, u_char priority)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_nbr_nbma_priority_set </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>nbr_addr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_char&#160;</td>
          <td class="paramname"><em>priority</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01567">1567</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma;

  nbr_nbma = <a class="code" href="ospfd_8c.html#a5ef294b92140e69feec21601a4893b53">ospf_nbr_nbma_lookup</a> (ospf, nbr_addr);
  <span class="keywordflow">if</span> (nbr_nbma == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> 0;

  <span class="keywordflow">if</span> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a3d452f4f0a3396d1ee21e58e9635e228">priority</a> != <a class="code" href="structospf__nbr__nbma.html#a3d452f4f0a3396d1ee21e58e9635e228">priority</a>)
    nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a3d452f4f0a3396d1ee21e58e9635e228">priority</a> = <a class="code" href="structospf__nbr__nbma.html#a3d452f4f0a3396d1ee21e58e9635e228">priority</a>;

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a2fd5b5358363b213696d5d0c7a9975ca"></a><!-- doxytag: member="ospfd.c::ospf_nbr_nbma_priority_unset" ref="a2fd5b5358363b213696d5d0c7a9975ca" args="(struct ospf *ospf, struct in_addr nbr_addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_nbr_nbma_priority_unset </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>nbr_addr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01583">1583</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma;

  nbr_nbma = <a class="code" href="ospfd_8c.html#a5ef294b92140e69feec21601a4893b53">ospf_nbr_nbma_lookup</a> (ospf, nbr_addr);
  <span class="keywordflow">if</span> (nbr_nbma == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> 0;

  <span class="keywordflow">if</span> (nbr_nbma != <a class="code" href="ospfd_8h.html#aa3181c3eedf2acddb4d5d6e820d6d710">OSPF_NEIGHBOR_PRIORITY_DEFAULT</a>)
    nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a3d452f4f0a3396d1ee21e58e9635e228">priority</a> = <a class="code" href="ospfd_8h.html#aa3181c3eedf2acddb4d5d6e820d6d710">OSPF_NEIGHBOR_PRIORITY_DEFAULT</a>;

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="adcbe4108b4b4e19a517ce1a5a0cec71b"></a><!-- doxytag: member="ospfd.c::ospf_nbr_nbma_set" ref="adcbe4108b4b4e19a517ce1a5a0cec71b" args="(struct ospf *ospf, struct in_addr nbr_addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_nbr_nbma_set </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>nbr_addr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01516">1516</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma;
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
  <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;

  nbr_nbma = <a class="code" href="ospfd_8c.html#a5ef294b92140e69feec21601a4893b53">ospf_nbr_nbma_lookup</a> (ospf, nbr_addr);
  <span class="keywordflow">if</span> (nbr_nbma)
    <span class="keywordflow">return</span> 0;

  nbr_nbma = <a class="code" href="ospfd_8c.html#ab1ae8ab343ebf73396c0d0d475cbccee">ospf_nbr_nbma_new</a> ();
  nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a5fc2a7f849288ef91acc9c055a934fe8">addr</a> = nbr_addr;

  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.family = AF_INET;
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix = nbr_addr;
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;

  rn = <a class="code" href="table_8c.html#ac91fdff1a0b8dc3d60ebaf152caa0f80">route_node_get</a> (ospf-&gt;<a class="code" href="structospf.html#a89b824e82146fd2494b2bf596934ab57">nbr_nbma</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)&amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>);
  rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = nbr_nbma;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a977d3608343fe5db7900ec646880cb6a">oiflist</a>, node, oi))
    {
      <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#abf2c650e64355936c071432d92dd5ecb">OSPF_IFTYPE_NBMA</a>)
    <span class="keywordflow">if</span> (<a class="code" href="prefix_8c.html#a8c5d68665a4b036a361330bee254318e">prefix_match</a> (oi-&gt;<a class="code" href="structospf__interface.html#a43493bc2b5d951e3e38ace850332eca1">address</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)&amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>))
      {
        <a class="code" href="ospfd_8c.html#a125985470ee6de834824ac909454204a">ospf_nbr_nbma_add</a> (nbr_nbma, oi);
        <span class="keywordflow">break</span>;
      }
    }

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af9c8a93e2314bc7beda655a50cce82e6"></a><!-- doxytag: member="ospfd.c::ospf_nbr_nbma_unset" ref="af9c8a93e2314bc7beda655a50cce82e6" args="(struct ospf *ospf, struct in_addr nbr_addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_nbr_nbma_unset </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>nbr_addr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01552">1552</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma;

  nbr_nbma = <a class="code" href="ospfd_8c.html#a5ef294b92140e69feec21601a4893b53">ospf_nbr_nbma_lookup</a> (ospf, nbr_addr);
  <span class="keywordflow">if</span> (nbr_nbma == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> 0;

  <a class="code" href="ospfd_8c.html#ac7ea157858e0fc0113dbcfe4c34cc101">ospf_nbr_nbma_down</a> (nbr_nbma);
  <a class="code" href="ospfd_8c.html#a625f9f237c3f7a17051faac3724d651f">ospf_nbr_nbma_delete</a> (ospf, nbr_nbma);

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a187d0469588c7386421e07eb4f65e344"></a><!-- doxytag: member="ospfd.c::ospf_network_free" ref="a187d0469588c7386421e07eb4f65e344" args="(struct ospf *, struct ospf_network *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ospf_network_free </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__network.html">ospf_network</a> *&#160;</td>
          <td class="paramname"><em>network</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00725">725</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="ospfd_8c.html#aa12d53d797f5400a252c49e4fe12428d">ospf_area_check_free</a> (ospf, network-&gt;<a class="code" href="structospf__network.html#a9a98fa52b566fda4f48f4cd8a4b77e54">area_id</a>);
  <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (ospf);
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba01eb351c954ac7848f468b04a57eccb0">MTYPE_OSPF_NETWORK</a>, network);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae8c350ba65c0ae238fa093a24a67bfa0"></a><!-- doxytag: member="ospfd.c::ospf_network_match_iface" ref="ae8c350ba65c0ae238fa093a24a67bfa0" args="(const struct connected *, const struct prefix *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int ospf_network_match_iface </td>
          <td>(</td>
          <td class="paramtype">const struct <a class="el" href="structconnected.html">connected</a> *&#160;</td>
          <td class="paramname"><em>co</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const struct <a class="el" href="structprefix.html">prefix</a> *&#160;</td>
          <td class="paramname"><em>net</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00838">838</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="comment">/* new approach: more elegant and conceptually clean */</span>
  <span class="keywordflow">return</span> <a class="code" href="prefix_8c.html#a8c5d68665a4b036a361330bee254318e">prefix_match</a>(net, <a class="code" href="if_8h.html#aab0146ae87d1ab7ec3235003ad8ae4ff">CONNECTED_PREFIX</a>(co));
}
</pre></div>
</div>
</div>
<a class="anchor" id="a2d9e8b20aedcec6b5bafda7806c70aaf"></a><!-- doxytag: member="ospfd.c::ospf_network_new" ref="a2d9e8b20aedcec6b5bafda7806c70aaf" args="(struct in_addr area_id, int format)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static struct <a class="el" href="structospf__network.html">ospf_network</a>* ospf_network_new </td>
          <td>(</td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>area_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>format</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static, read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00713">713</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__network.html">ospf_network</a> *<span class="keyword">new</span>;
  <span class="keyword">new</span> = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba01eb351c954ac7848f468b04a57eccb0">MTYPE_OSPF_NETWORK</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structospf__network.html">ospf_network</a>));

  <span class="keyword">new</span>-&gt;area_id = <a class="code" href="structospf__network.html#a9a98fa52b566fda4f48f4cd8a4b77e54">area_id</a>;
  <span class="keyword">new</span>-&gt;format = <a class="code" href="structospf__network.html#a92a758a904ba2595a41f83d14ea80b96">format</a>;
  
  <span class="keywordflow">return</span> <span class="keyword">new</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9ff9167ef11494a725578e5705632d84"></a><!-- doxytag: member="ospfd.c::ospf_network_run" ref="a9ff9167ef11494a725578e5705632d84" args="(struct prefix *, struct ospf_area *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ospf_network_run </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structprefix.html">prefix</a> *&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00902">902</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;

  <span class="comment">/* Schedule Router ID Update. */</span>
  <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>.s_addr == 0)
    <a class="code" href="ospfd_8c.html#a0d1cbe02041ecd44cfc37a94718ca69a">ospf_router_id_update</a> (area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>);
  
  <span class="comment">/* Get target interface. */</span>
  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="ospfd_8c.html#a00fd6054739908ab616f0bacdc6d0f64">om</a>-&gt;<a class="code" href="structospf__master.html#a03ff051ede9d089f9ca6cfc6262a5634">iflist</a>, node, ifp))
    <a class="code" href="ospfd_8c.html#a7818e64451ad531aed1fa0aeb35ec4c6">ospf_network_run_interface</a> (p, area, ifp);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a7818e64451ad531aed1fa0aeb35ec4c6"></a><!-- doxytag: member="ospfd.c::ospf_network_run_interface" ref="a7818e64451ad531aed1fa0aeb35ec4c6" args="(struct prefix *, struct ospf_area *, struct interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ospf_network_run_interface </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structprefix.html">prefix</a> *&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"><em>ifp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00845">845</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *cnode;
  <span class="keyword">struct </span><a class="code" href="structconnected.html">connected</a> *co;
  
  <span class="keywordflow">if</span> (<a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, <span class="stringliteral">&quot;VLINK&quot;</span>, 5) == 0)
    <span class="keywordflow">return</span>;
  
  <span class="comment">/* if interface prefix is match specified prefix,</span>
<span class="comment">     then create socket and join multicast group. */</span>
  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ifp-&gt;<a class="code" href="structinterface.html#ac7c47b5cc1df81e51bf1ecea97b4d4b3">connected</a>, cnode, co))
    {

      <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a>(co-&gt;<a class="code" href="structconnected.html#a5928e0378e95d422553fdd37c3d66519">flags</a>,<a class="code" href="if_8h.html#a87a060af9e9971eefeb1584beaceecf6">ZEBRA_IFA_SECONDARY</a>))
        <span class="keywordflow">continue</span>;

      <span class="keywordflow">if</span> (p-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == co-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> 
      &amp;&amp; ! <a class="code" href="ospf__interface_8c.html#ae53618182688ad96bfa2fa6813617d57">ospf_if_table_lookup</a>(ifp, co-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>)
          &amp;&amp; <a class="code" href="ospfd_8c.html#ae8c350ba65c0ae238fa093a24a67bfa0">ospf_network_match_iface</a>(co,p))
        {
           <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
            
            oi = <a class="code" href="ospf__interface_8c.html#af4a1a23e75bb79a0feaa1c26b0b989e5">ospf_if_new</a> (area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>, ifp, co-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>);
            oi-&gt;<a class="code" href="structospf__interface.html#a3032c9001447ca661e19323b6c59aca6">connected</a> = co;
            
            oi-&gt;<a class="code" href="structospf__interface.html#a7a0df59739f1ffa31ab75ff4b9bbcd95">area</a> = <a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;

            oi-&gt;<a class="code" href="structospf__interface.html#abe19d62cc037130ba97d644980a90e58">params</a> = <a class="code" href="ospf__interface_8c.html#aa68e0e7a3491e05febe18ed5a1e3d8c6">ospf_lookup_if_params</a> (ifp, oi-&gt;<a class="code" href="structospf__interface.html#a43493bc2b5d951e3e38ace850332eca1">address</a>-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>);
            oi-&gt;<a class="code" href="structospf__interface.html#a9e3d295cb23b60bbcda26b11553a2d03">output_cost</a> = <a class="code" href="ospf__interface_8c.html#a0f57568dea03dc11f50fdb7bc9bf02f4">ospf_if_get_output_cost</a> (oi);
            
            <span class="comment">/* Add pseudo neighbor. */</span>
            <a class="code" href="ospf__neighbor_8c.html#a4260a90c3eb41e2af0d60b4d2ecb3d85">ospf_nbr_add_self</a> (oi);

            <span class="comment">/* Relate ospf interface to ospf instance. */</span>
            oi-&gt;<a class="code" href="structospf__interface.html#a159ae1c542016fc78f68c3e39a1b132e">ospf</a> = area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>;

            <span class="comment">/* update network type as interface flag */</span>
            <span class="comment">/* If network type is specified previously,</span>
<span class="comment">               skip network type setting. */</span>
            oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> = <a class="code" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a> (ifp)-&gt;type;
            
            <a class="code" href="ospfd_8c.html#ab5f82e15e585aa9de10f7f426e445872">ospf_area_add_if</a> (oi-&gt;<a class="code" href="structospf__interface.html#a7a0df59739f1ffa31ab75ff4b9bbcd95">area</a>, oi);
            
            <span class="comment">/* if router_id is not configured, dont bring up</span>
<span class="comment">             * interfaces.</span>
<span class="comment">             * ospf_router_id_update() will call ospf_if_update</span>
<span class="comment">             * whenever r-id is configured instead.</span>
<span class="comment">             */</span>
            <span class="keywordflow">if</span> ((area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>.s_addr != 0)
                &amp;&amp; <a class="code" href="if_8c.html#a96741fba2059f7591f57d18325664b7b">if_is_operative</a> (ifp)) 
              <a class="code" href="ospf__interface_8c.html#a5a63d5d3af1629d69c380eb09f3e8b7b">ospf_if_up</a> (oi);
          }
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac39b4e35ee81faab9f177f9c4f57a9b2"></a><!-- doxytag: member="ospfd.c::ospf_network_set" ref="ac39b4e35ee81faab9f177f9c4f57a9b2" args="(struct ospf *ospf, struct prefix_ipv4 *p, struct in_addr area_id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_network_set </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structprefix__ipv4.html">prefix_ipv4</a> *&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>area_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00733">733</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__network.html">ospf_network</a> *<a class="code" href="command_8c.html#acec200f241e2d8f6b38bc83616c4c468">network</a>;
  <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keyword">struct </span><a class="code" href="structexternal__info.html">external_info</a> *ei;
  <span class="keywordtype">int</span> ret = <a class="code" href="ospfd_8h.html#a4693ac54d402184ececda946d167d1ef">OSPF_AREA_ID_FORMAT_ADDRESS</a>;

  rn = <a class="code" href="table_8c.html#ac91fdff1a0b8dc3d60ebaf152caa0f80">route_node_get</a> (ospf-&gt;<a class="code" href="structospf.html#a4f2d79a18b8a5eb9973c277282ed1b90">networks</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)p);
  <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
    {
      <span class="comment">/* There is already same network statement. */</span>
      <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
      <span class="keywordflow">return</span> 0;
    }

  rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = network = <a class="code" href="ospfd_8c.html#a2d9e8b20aedcec6b5bafda7806c70aaf">ospf_network_new</a> (area_id, ret);
  area = <a class="code" href="ospfd_8c.html#aa215da7694f647944fed0fad86df18c8">ospf_area_get</a> (ospf, area_id, ret);

  <span class="comment">/* Run network config now. */</span>
  <a class="code" href="ospfd_8c.html#a9ff9167ef11494a725578e5705632d84">ospf_network_run</a> ((<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)p, area);

  <span class="comment">/* Update connected redistribute. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="ospf__zebra_8c.html#a0b61d95e6baf19bdd9d8a7705788a226">ospf_is_type_redistributed</a> (<a class="code" href="zebra_8h.html#aee45d53cdac2bd7fe4b2ce021c9d1b30">ZEBRA_ROUTE_CONNECT</a>))
    <span class="keywordflow">if</span> (<a class="code" href="ospfd_8h.html#a9fa5e60f9244cb3ea41a0a96d3c9b85c">EXTERNAL_INFO</a> (<a class="code" href="zebra_8h.html#aee45d53cdac2bd7fe4b2ce021c9d1b30">ZEBRA_ROUTE_CONNECT</a>))
      <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (<a class="code" href="ospfd_8h.html#a9fa5e60f9244cb3ea41a0a96d3c9b85c">EXTERNAL_INFO</a> (<a class="code" href="zebra_8h.html#aee45d53cdac2bd7fe4b2ce021c9d1b30">ZEBRA_ROUTE_CONNECT</a>));
       rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
    <span class="keywordflow">if</span> ((ei = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
      <span class="keywordflow">if</span> (<a class="code" href="ospf__asbr_8c.html#ad45c036a67747a7f65338b7ec6ff748d">ospf_external_info_find_lsa</a> (ospf, &amp;ei-&gt;<a class="code" href="structexternal__info.html#a15eb7ea975a1090a107d7d54b798822c">p</a>))
        <span class="keywordflow">if</span> (!<a class="code" href="ospf__zebra_8c.html#a92dcc57e677b842ee7ce321d7cbae5e3">ospf_distribute_check_connected</a> (ospf, ei))
          <a class="code" href="ospf__lsa_8c.html#ae6fd27bc0a44fb71638c23c3ea829905">ospf_external_lsa_flush</a> (ospf, ei-&gt;<a class="code" href="structexternal__info.html#ad815e4322555ec84d18056c00745008f">type</a>, &amp;ei-&gt;<a class="code" href="structexternal__info.html#a15eb7ea975a1090a107d7d54b798822c">p</a>,
                       ei-&gt;<a class="code" href="structexternal__info.html#aa44606ec20e4cd877211173bceaac116">ifindex</a> <span class="comment">/*, ei-&gt;nexthop */</span>);

  <a class="code" href="ospfd_8c.html#aa12d53d797f5400a252c49e4fe12428d">ospf_area_check_free</a> (ospf, area_id);

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9cebab0f946b58720dafc3221f4d2f09"></a><!-- doxytag: member="ospfd.c::ospf_network_unset" ref="a9cebab0f946b58720dafc3221f4d2f09" args="(struct ospf *ospf, struct prefix_ipv4 *p, struct in_addr area_id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_network_unset </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structprefix__ipv4.html">prefix_ipv4</a> *&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>area_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00773">773</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keyword">struct </span><a class="code" href="structospf__network.html">ospf_network</a> *<a class="code" href="command_8c.html#acec200f241e2d8f6b38bc83616c4c468">network</a>;
  <span class="keyword">struct </span><a class="code" href="structexternal__info.html">external_info</a> *ei;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;

  rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (ospf-&gt;<a class="code" href="structospf.html#a4f2d79a18b8a5eb9973c277282ed1b90">networks</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)p);
  <span class="keywordflow">if</span> (rn == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> 0;

  network = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
  <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
  <span class="keywordflow">if</span> (!<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;area_id, &amp;network-&gt;<a class="code" href="structospf__network.html#a9a98fa52b566fda4f48f4cd8a4b77e54">area_id</a>))
    <span class="keywordflow">return</span> 0;

  <a class="code" href="ospfd_8c.html#a187d0469588c7386421e07eb4f65e344">ospf_network_free</a> (ospf, rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>);
  rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);   <span class="comment">/* initial reference */</span>

  <span class="comment">/* Find interfaces that not configured already.  */</span>
  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (ospf-&gt;<a class="code" href="structospf.html#a977d3608343fe5db7900ec646880cb6a">oiflist</a>, node, nnode, oi))
    {
      <span class="keywordtype">int</span> found = 0;
      <span class="keyword">struct </span><a class="code" href="structconnected.html">connected</a> *co = oi-&gt;<a class="code" href="structospf__interface.html#a3032c9001447ca661e19323b6c59aca6">connected</a>;
      
      <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#a45798a2a8b566abd1907f7ae8bc0a2be">OSPF_IFTYPE_VIRTUALLINK</a>)
        <span class="keywordflow">continue</span>;
      
      <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (ospf-&gt;<a class="code" href="structospf.html#a4f2d79a18b8a5eb9973c277282ed1b90">networks</a>); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
        {
          <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
            <span class="keywordflow">continue</span>;
          
          <span class="keywordflow">if</span> (<a class="code" href="ospfd_8c.html#ae8c350ba65c0ae238fa093a24a67bfa0">ospf_network_match_iface</a>(co,&amp;rn-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>))
            {
              found = 1;
              <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
              <span class="keywordflow">break</span>;
            }
        }

      <span class="keywordflow">if</span> (found == 0)
        <a class="code" href="ospf__interface_8c.html#aa06699fd3d9034f239d51f2ea6098b3b">ospf_if_free</a> (oi);
    }
  
  <span class="comment">/* Update connected redistribute. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="ospf__zebra_8c.html#a0b61d95e6baf19bdd9d8a7705788a226">ospf_is_type_redistributed</a> (<a class="code" href="zebra_8h.html#aee45d53cdac2bd7fe4b2ce021c9d1b30">ZEBRA_ROUTE_CONNECT</a>))
    <span class="keywordflow">if</span> (<a class="code" href="ospfd_8h.html#a9fa5e60f9244cb3ea41a0a96d3c9b85c">EXTERNAL_INFO</a> (<a class="code" href="zebra_8h.html#aee45d53cdac2bd7fe4b2ce021c9d1b30">ZEBRA_ROUTE_CONNECT</a>))
      <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (<a class="code" href="ospfd_8h.html#a9fa5e60f9244cb3ea41a0a96d3c9b85c">EXTERNAL_INFO</a> (<a class="code" href="zebra_8h.html#aee45d53cdac2bd7fe4b2ce021c9d1b30">ZEBRA_ROUTE_CONNECT</a>));
       rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
    <span class="keywordflow">if</span> ((ei = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
      <span class="keywordflow">if</span> (!<a class="code" href="ospf__asbr_8c.html#ad45c036a67747a7f65338b7ec6ff748d">ospf_external_info_find_lsa</a> (ospf, &amp;ei-&gt;<a class="code" href="structexternal__info.html#a15eb7ea975a1090a107d7d54b798822c">p</a>))
        <span class="keywordflow">if</span> (<a class="code" href="ospf__zebra_8c.html#a92dcc57e677b842ee7ce321d7cbae5e3">ospf_distribute_check_connected</a> (ospf, ei))
          <a class="code" href="ospf__lsa_8c.html#a96d24d54ba0ac3adc1ff557621ff2911">ospf_external_lsa_originate</a> (ospf, ei);

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a61a47474abcb16fd62d9ad0dc0bb08c0"></a><!-- doxytag: member="ospfd.c::ospf_new" ref="a61a47474abcb16fd62d9ad0dc0bb08c0" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static struct <a class="el" href="structospf.html">ospf</a>* ospf_new </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [static, read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00156">156</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

  <span class="keyword">struct </span><a class="code" href="structospf.html">ospf</a> *<span class="keyword">new</span> = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba0ad9117251a05de9c1c0e34cb4b08914">MTYPE_OSPF_TOP</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a>));

  <span class="keyword">new</span>-&gt;router_id.s_addr = htonl (0);
  <span class="keyword">new</span>-&gt;router_id_static.s_addr = htonl (0);

  <span class="keyword">new</span>-&gt;abr_type = <a class="code" href="ospfd_8h.html#a1d46d0a6078d76cbba23dd6c61d2cea7">OSPF_ABR_DEFAULT</a>;
  <span class="keyword">new</span>-&gt;oiflist = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
  <span class="keyword">new</span>-&gt;vlinks = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
  <span class="keyword">new</span>-&gt;areas = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
  <span class="keyword">new</span>-&gt;areas-&gt;cmp = (int (*)(<span class="keywordtype">void</span> *, <span class="keywordtype">void</span> *)) <a class="code" href="ospfd_8c.html#a6d4e4f9edd42c089df786b0df096cfbc">ospf_area_id_cmp</a>;
  <span class="keyword">new</span>-&gt;networks = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();
  <span class="keyword">new</span>-&gt;nbr_nbma = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();

  <span class="keyword">new</span>-&gt;lsdb = <a class="code" href="ospf__lsdb_8c.html#a897e69e3ce0ff001f40e3cd8ed4e0cdf">ospf_lsdb_new</a> ();

  <span class="keyword">new</span>-&gt;default_originate = <a class="code" href="ospfd_8h.html#a2cb5991aff286dfe8d5b67d9730e0c81">DEFAULT_ORIGINATE_NONE</a>;

  <span class="keyword">new</span>-&gt;passive_interface_default = <a class="code" href="ospf__interface_8h.html#aa8ac4964fabc3508563c253b72158fad">OSPF_IF_ACTIVE</a>;
  
  <span class="keyword">new</span>-&gt;new_external_route = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();
  <span class="keyword">new</span>-&gt;old_external_route = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();
  <span class="keyword">new</span>-&gt;external_lsas = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();
  
  <span class="keyword">new</span>-&gt;stub_router_startup_time = <a class="code" href="ospfd_8h.html#a4a68456603adc72536dfd42656a45bce">OSPF_STUB_ROUTER_UNCONFIGURED</a>;
  <span class="keyword">new</span>-&gt;stub_router_shutdown_time = <a class="code" href="ospfd_8h.html#a4a68456603adc72536dfd42656a45bce">OSPF_STUB_ROUTER_UNCONFIGURED</a>;
  
  <span class="comment">/* Distribute parameter init. */</span>
  <span class="keywordflow">for</span> (i = 0; i &lt;= <a class="code" href="zebra_8h.html#aec97442680d773fd62f9af5c9426b842">ZEBRA_ROUTE_MAX</a>; i++)
    {
      <span class="keyword">new</span>-&gt;dmetric[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].type = -1;
      <span class="keyword">new</span>-&gt;dmetric[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].value = -1;
    }
  <span class="keyword">new</span>-&gt;default_metric = -1;
  <span class="keyword">new</span>-&gt;ref_bandwidth = <a class="code" href="ospfd_8h.html#a56009c5c20deb6a5237f6b857c6bc668">OSPF_DEFAULT_REF_BANDWIDTH</a>;

  <span class="comment">/* SPF timer value init. */</span>
  <span class="keyword">new</span>-&gt;spf_delay = <a class="code" href="ospfd_8h.html#a526b860b84f7ae9952acf311162eb104">OSPF_SPF_DELAY_DEFAULT</a>;
  <span class="keyword">new</span>-&gt;spf_holdtime = <a class="code" href="ospfd_8h.html#add7b22e7946b05c1aa37a570db429736">OSPF_SPF_HOLDTIME_DEFAULT</a>;
  <span class="keyword">new</span>-&gt;spf_max_holdtime = <a class="code" href="ospfd_8h.html#a57b95380bd44139d2d717d583ce33362">OSPF_SPF_MAX_HOLDTIME_DEFAULT</a>;
  <span class="keyword">new</span>-&gt;spf_hold_multiplier = 1;

  <span class="comment">/* MaxAge init. */</span>
  <span class="keyword">new</span>-&gt;maxage_lsa = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
  <span class="keyword">new</span>-&gt;t_maxage_walker =
    <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf__lsa_8c.html#a4069275df453331e7b1c742d1aa7e2e1">ospf_lsa_maxage_walker</a>,
                      <span class="keyword">new</span>, <a class="code" href="ospfd_8h.html#a5344576f6e042edd999d545d7b530aa3">OSPF_LSA_MAXAGE_CHECK_INTERVAL</a>);

  <span class="comment">/* Distance table init. */</span>
  <span class="keyword">new</span>-&gt;distance_table = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();

  <span class="keyword">new</span>-&gt;lsa_refresh_queue.index = 0;
  <span class="keyword">new</span>-&gt;lsa_refresh_interval = <a class="code" href="ospfd_8h.html#ad8b9f18664f98ee8d1c70e483e738469">OSPF_LSA_REFRESH_INTERVAL_DEFAULT</a>;
  <span class="keyword">new</span>-&gt;t_lsa_refresher = <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf__lsa_8c.html#aba5248867f4c5f9ca904d27b89482c20">ospf_lsa_refresh_walker</a>,
                       <span class="keyword">new</span>, new-&gt;lsa_refresh_interval);
  <span class="keyword">new</span>-&gt;lsa_refresher_started = <a class="code" href="thread_8c.html#acbaf2206b84f93fbe18f33483bf101d2">quagga_time</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);

  <span class="keywordflow">if</span> ((new-&gt;fd = <a class="code" href="ospf__network_8c.html#a738c77f48af1d1af2c0e616ba9710bc2">ospf_sock_init</a>()) &lt; 0)
    {
      <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a>(<span class="stringliteral">&quot;ospf_new: fatal error: ospf_sock_init was unable to open &quot;</span>
           <span class="stringliteral">&quot;a socket&quot;</span>);
      <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a>(1);
    }
  <span class="keyword">new</span>-&gt;maxsndbuflen = <a class="code" href="sockopt_8c.html#aae8ed164606b3d56b05af0e09730a554">getsockopt_so_sendbuf</a> (new-&gt;fd);
  <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (<a class="code" href="bgp__debug_8c.html#aacd09dfe4b60fac4ec1c5e2895066f07">zebra</a>, ZEBRA_INTERFACE))
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s: starting with OSPF send buffer size %d&quot;</span>,
      __func__, new-&gt;maxsndbuflen);
  <span class="keywordflow">if</span> ((new-&gt;ibuf = <a class="code" href="stream_8c.html#a7117cdad9fa5e5ae633e0cf08d047459">stream_new</a>(<a class="code" href="ospf__packet_8h.html#a931e4cc5c8888b6cf1d91636fd4340a6">OSPF_MAX_PACKET_SIZE</a>+1)) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a>(<span class="stringliteral">&quot;ospf_new: fatal error: stream_new(%u) failed allocating ibuf&quot;</span>,
           <a class="code" href="ospf__packet_8h.html#a931e4cc5c8888b6cf1d91636fd4340a6">OSPF_MAX_PACKET_SIZE</a>+1);
      <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a>(1);
    }
  <span class="keyword">new</span>-&gt;t_read = <a class="code" href="thread_8h.html#abd1714f11834a150c84b040c0c69b620">thread_add_read</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf__packet_8c.html#a6327e5b8ab0bf00617153a9e6225ec2b">ospf_read</a>, <span class="keyword">new</span>, new-&gt;fd);
  <span class="keyword">new</span>-&gt;oi_write_q = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
  
  <span class="keywordflow">return</span> <span class="keyword">new</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a18ae69cd8ada47780d2abe5cf46aef7c"></a><!-- doxytag: member="ospfd.c::ospf_remove_vls_through_area" ref="a18ae69cd8ada47780d2abe5cf46aef7c" args="(struct ospf *, struct ospf_area *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_remove_vls_through_area </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00968">968</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
  <span class="keyword">struct </span><a class="code" href="structospf__vl__data.html">ospf_vl_data</a> *vl_data;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (ospf-&gt;<a class="code" href="structospf.html#acdf23576e62fa9370cc57b2384acf143">vlinks</a>, node, nnode, vl_data))
    <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;vl_data-&gt;<a class="code" href="structospf__vl__data.html#a7d89fa86fa918d94b7b4474f93569cd9">vl_area_id</a>, &amp;area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>))
      <a class="code" href="ospf__interface_8c.html#a9feb69dbfbf6c28344a5920b2e21e5ff">ospf_vl_delete</a> (ospf, vl_data);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a0d1cbe02041ecd44cfc37a94718ca69a"></a><!-- doxytag: member="ospfd.c::ospf_router_id_update" ref="a0d1cbe02041ecd44cfc37a94718ca69a" args="(struct ospf *ospf)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_router_id_update </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00081">81</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span>in_addr router_id, router_id_old;
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;

  <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Router-ID[OLD:%s]: Update&quot;</span>, inet_ntoa (ospf-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>));

  router_id_old = ospf-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>;

  <span class="comment">/* Select the router ID based on these priorities:</span>
<span class="comment">       1. Statically assigned router ID is always the first choice.</span>
<span class="comment">       2. If there is no statically assigned router ID, then try to stick</span>
<span class="comment">          with the most recent value, since changing router ID&#39;s is very</span>
<span class="comment">      disruptive.</span>
<span class="comment">       3. Last choice: just go with whatever the zebra daemon recommends.</span>
<span class="comment">  */</span>
  <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#a442dcdca0018ce74dfaf7b81d1b6878a">router_id_static</a>.s_addr != 0)
    router_id = ospf-&gt;<a class="code" href="structospf.html#a442dcdca0018ce74dfaf7b81d1b6878a">router_id_static</a>;
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>.s_addr != 0)
    router_id = ospf-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>;
  <span class="keywordflow">else</span>
    router_id = <a class="code" href="bgp__vty_8c.html#a5ff73fe88ce576fe7fc3877984367add">router_id_zebra</a>;

  ospf-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a> = router_id;
  
  <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Router-ID[NEW:%s]: Update&quot;</span>, inet_ntoa (ospf-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>));

  <span class="keywordflow">if</span> (!<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;router_id_old, &amp;router_id))
    {
      <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a977d3608343fe5db7900ec646880cb6a">oiflist</a>, node, oi))
        <span class="comment">/* Update self-neighbor&#39;s router_id. */</span>
        oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#a2257238c9040a76e9de9a78cf95bae0d">router_id</a> = router_id;

      <span class="comment">/* If AS-external-LSA is queued, then flush those LSAs. */</span>
      <span class="keywordflow">if</span> (router_id_old.s_addr == 0 &amp;&amp; ospf-&gt;<a class="code" href="structospf.html#a4e2d4fb95c750aeddee77669b7073e86">external_origin</a>)
    {
      <span class="keywordtype">int</span> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>;
      <span class="comment">/* Originate each redistributed external route. */</span>
      <span class="keywordflow">for</span> (type = 0; type &lt; <a class="code" href="zebra_8h.html#aec97442680d773fd62f9af5c9426b842">ZEBRA_ROUTE_MAX</a>; type++)
        <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#a4e2d4fb95c750aeddee77669b7073e86">external_origin</a> &amp; (1 &lt;&lt; type))
          <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf__lsa_8c.html#a3e9dc40b309b42e40bf32b5ec06fd3f8">ospf_external_lsa_originate_timer</a>,
                ospf, type);
      <span class="comment">/* Originate Deafult. */</span>
      <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#a4e2d4fb95c750aeddee77669b7073e86">external_origin</a> &amp; (1 &lt;&lt; ZEBRA_ROUTE_MAX))
        <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf__lsa_8c.html#ab2bcb8bca8aa169076de0505e3ddad72">ospf_default_originate_timer</a>, ospf, 0);

      ospf-&gt;<a class="code" href="structospf.html#a4e2d4fb95c750aeddee77669b7073e86">external_origin</a> = 0;
    }

      <a class="code" href="ospfd_8h.html#af55bc6c498265fffa9294d0f1b952267">OSPF_TIMER_ON</a> (ospf-&gt;<a class="code" href="structospf.html#a94a369b811b335e1d05e1dab77096606">t_router_lsa_update</a>,
             <a class="code" href="ospf__lsa_8c.html#a4db40452defbd5304d698f8d0cc855d1">ospf_router_lsa_update_timer</a>, <a class="code" href="ospf__lsa_8h.html#a40abe6153ff06321e030f48daccf4966">OSPF_LSA_UPDATE_DELAY</a>);
      
      <span class="comment">/* update ospf_interface&#39;s */</span>
      <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="ospfd_8c.html#a00fd6054739908ab616f0bacdc6d0f64">om</a>-&gt;<a class="code" href="structospf__master.html#a03ff051ede9d089f9ca6cfc6262a5634">iflist</a>, node, ifp))
        <a class="code" href="ospfd_8c.html#a9d40c9fe8a5fd9ec7add909556c5bd3f">ospf_if_update</a> (ospf, ifp);
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a56662db258350b91cceee8e4ce3ed8c4"></a><!-- doxytag: member="ospfd.c::ospf_terminate" ref="a56662db258350b91cceee8e4ce3ed8c4" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_terminate </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00358">358</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
  
  <span class="comment">/* shutdown already in progress */</span>
  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (<a class="code" href="ospfd_8c.html#a00fd6054739908ab616f0bacdc6d0f64">om</a>-&gt;<a class="code" href="structospf__master.html#ae3feffaf85b6def6d6432d6e845d6610">options</a>, <a class="code" href="ospfd_8h.html#a9ad316e02e4cb4288126c9e88cb4730a">OSPF_MASTER_SHUTDOWN</a>))
    <span class="keywordflow">return</span>;
  
  <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (<a class="code" href="ospfd_8c.html#a00fd6054739908ab616f0bacdc6d0f64">om</a>-&gt;<a class="code" href="structospf__master.html#ae3feffaf85b6def6d6432d6e845d6610">options</a>, <a class="code" href="ospfd_8h.html#a9ad316e02e4cb4288126c9e88cb4730a">OSPF_MASTER_SHUTDOWN</a>);

  <span class="comment">/* exit immediately if OSPF not actually running */</span>
  <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a>(<a class="code" href="ospfd_8c.html#a00fd6054739908ab616f0bacdc6d0f64">om</a>-&gt;<a class="code" href="structospf__master.html#a2f5e0a5ef79f97d68abef8515b41a740">ospf</a>) == 0)
    <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a>(0);

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (<a class="code" href="ospfd_8c.html#a00fd6054739908ab616f0bacdc6d0f64">om</a>-&gt;<a class="code" href="structospf__master.html#a2f5e0a5ef79f97d68abef8515b41a740">ospf</a>, node, nnode, ospf))
    <a class="code" href="ospfd_8c.html#a71bfe0c0306143ad66bef9bb28c36462">ospf_finish</a> (ospf);

  <span class="comment">/* Deliberately go back up, hopefully to thread scheduler, as</span>
<span class="comment">   * One or more ospf_finish()&#39;s may have deferred shutdown to a timer</span>
<span class="comment">   * thread</span>
<span class="comment">   */</span>
}
</pre></div>
</div>
</div>
<a class="anchor" id="a2b5dac7af38c281e1e0cccbf0ae23d5a"></a><!-- doxytag: member="ospfd.c::ospf_timers_refresh_set" ref="a2b5dac7af38c281e1e0cccbf0ae23d5a" args="(struct ospf *ospf, int interval)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_timers_refresh_set </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>interval</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01297">1297</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> time_left;

  <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#acbe4f365624a63f3ec08e10e296050a3">lsa_refresh_interval</a> == <a class="code" href="isis__circuit_8c.html#a900b5f9651c07bafd5d81cc876b93885">interval</a>)
    <span class="keywordflow">return</span> 1;

  time_left = ospf-&gt;<a class="code" href="structospf.html#acbe4f365624a63f3ec08e10e296050a3">lsa_refresh_interval</a> -
    (<a class="code" href="thread_8c.html#acbaf2206b84f93fbe18f33483bf101d2">quagga_time</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) - ospf-&gt;<a class="code" href="structospf.html#ab5d0a648175f600f62a12444c237dd8f">lsa_refresher_started</a>);
  
  <span class="keywordflow">if</span> (time_left &gt; <a class="code" href="isis__circuit_8c.html#a900b5f9651c07bafd5d81cc876b93885">interval</a>)
    {
      <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#a3f56b5850d9efb087ddb6d2eb79dd291">t_lsa_refresher</a>);
      ospf-&gt;<a class="code" href="structospf.html#a3f56b5850d9efb087ddb6d2eb79dd291">t_lsa_refresher</a> =
    <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf__lsa_8c.html#aba5248867f4c5f9ca904d27b89482c20">ospf_lsa_refresh_walker</a>, ospf, <a class="code" href="isis__circuit_8c.html#a900b5f9651c07bafd5d81cc876b93885">interval</a>);
    }
  ospf-&gt;<a class="code" href="structospf.html#acbe4f365624a63f3ec08e10e296050a3">lsa_refresh_interval</a> = <a class="code" href="isis__circuit_8c.html#a900b5f9651c07bafd5d81cc876b93885">interval</a>;

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a92885283cd0ebf3b388ea7ac1d40af46"></a><!-- doxytag: member="ospfd.c::ospf_timers_refresh_unset" ref="a92885283cd0ebf3b388ea7ac1d40af46" args="(struct ospf *ospf)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_timers_refresh_unset </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l01319">1319</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> time_left;

  time_left = ospf-&gt;<a class="code" href="structospf.html#acbe4f365624a63f3ec08e10e296050a3">lsa_refresh_interval</a> -
    (<a class="code" href="thread_8c.html#acbaf2206b84f93fbe18f33483bf101d2">quagga_time</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) - ospf-&gt;<a class="code" href="structospf.html#ab5d0a648175f600f62a12444c237dd8f">lsa_refresher_started</a>);

  <span class="keywordflow">if</span> (time_left &gt; <a class="code" href="ospfd_8h.html#ad8b9f18664f98ee8d1c70e483e738469">OSPF_LSA_REFRESH_INTERVAL_DEFAULT</a>)
    {
      <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#a3f56b5850d9efb087ddb6d2eb79dd291">t_lsa_refresher</a>);
      ospf-&gt;<a class="code" href="structospf.html#a3f56b5850d9efb087ddb6d2eb79dd291">t_lsa_refresher</a> =
    <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf__lsa_8c.html#aba5248867f4c5f9ca904d27b89482c20">ospf_lsa_refresh_walker</a>, ospf,
              <a class="code" href="ospfd_8h.html#ad8b9f18664f98ee8d1c70e483e738469">OSPF_LSA_REFRESH_INTERVAL_DEFAULT</a>);
    }

  ospf-&gt;<a class="code" href="structospf.html#acbe4f365624a63f3ec08e10e296050a3">lsa_refresh_interval</a> = <a class="code" href="ospfd_8h.html#ad8b9f18664f98ee8d1c70e483e738469">OSPF_LSA_REFRESH_INTERVAL_DEFAULT</a>;

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<hr/><h2>Variable Documentation</h2>
<a class="anchor" id="a00fd6054739908ab616f0bacdc6d0f64"></a><!-- doxytag: member="ospfd.c::om" ref="a00fd6054739908ab616f0bacdc6d0f64" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__master.html">ospf_master</a>* <a class="el" href="ospfd_8h.html#a00fd6054739908ab616f0bacdc6d0f64">om</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00062">62</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>

</div>
</div>
<a class="anchor" id="a1d53da7b1d301ee11b1c599196fdaf47"></a><!-- doxytag: member="ospfd.c::ospf_area_type_msg" ref="a1d53da7b1d301ee11b1c599196fdaf47" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structmessage.html">message</a> <a class="el" href="ospfd_8c.html#a1d53da7b1d301ee11b1c599196fdaf47">ospf_area_type_msg</a>[]<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment">
{
  { <a class="code" href="ospfd_8h.html#a43f84c8e8584ccc8b82990d251abec4d">OSPF_AREA_DEFAULT</a>,  <span class="stringliteral">&quot;Default&quot;</span> },
  { <a class="code" href="ospfd_8h.html#a34e738eee2ef9dfcea3d7f31d36de08c">OSPF_AREA_STUB</a>,     <span class="stringliteral">&quot;Stub&quot;</span> },
  { <a class="code" href="ospfd_8h.html#a871478d6ecced0907ee1f67c5dbacf99">OSPF_AREA_NSSA</a>,     <span class="stringliteral">&quot;NSSA&quot;</span> },
}
</pre></div>
<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00979">979</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>

</div>
</div>
<a class="anchor" id="a7de4d698a82bc8b7f1c5b37b26a24ea2"></a><!-- doxytag: member="ospfd.c::ospf_area_type_msg_max" ref="a7de4d698a82bc8b7f1c5b37b26a24ea2" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const int <a class="el" href="ospfd_8c.html#a7de4d698a82bc8b7f1c5b37b26a24ea2">ospf_area_type_msg_max</a> = OSPF_AREA_TYPE_MAX<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00985">985</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>

</div>
</div>
<a class="anchor" id="a33a7fa52c2e4612ed7c43602d9520db1"></a><!-- doxytag: member="ospfd.c::ospf_master" ref="a33a7fa52c2e4612ed7c43602d9520db1" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__master.html">ospf_master</a> <a class="el" href="structospf__master.html">ospf_master</a><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfd_8c_source.html#l00059">59</a> of file <a class="el" href="ospfd_8c_source.html">ospfd.c</a>.</p>

</div>
</div>
<a class="anchor" id="a5ff73fe88ce576fe7fc3877984367add"></a><!-- doxytag: member="ospfd.c::router_id_zebra" ref="a5ff73fe88ce576fe7fc3877984367add" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct in_addr <a class="el" href="ospfd_8c.html#a5ff73fe88ce576fe7fc3877984367add">router_id_zebra</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__zebra_8c_source.html#l00043">43</a> of file <a class="el" href="bgp__zebra_8c_source.html">bgp_zebra.c</a>.</p>

</div>
</div>
<a class="anchor" id="abe1502972ba9aa40adc080e419c496bf"></a><!-- doxytag: member="ospfd.c::zclient" ref="abe1502972ba9aa40adc080e419c496bf" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structzclient.html">zclient</a>* <a class="el" href="structzclient.html">zclient</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__zebra_8c_source.html#l00042">42</a> of file <a class="el" href="bgp__zebra_8c_source.html">bgp_zebra.c</a>.</p>

</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="ospfd_8c.html">ospfd.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:33 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
