<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: ripngd/ripng_zebra.c File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('ripng__zebra_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">ripngd/ripng_zebra.c File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="zebra_8h_source.html">zebra.h</a>&gt;</code><br/>
<code>#include &quot;<a class="el" href="command_8h_source.html">command.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="prefix_8h_source.html">prefix.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="stream_8h_source.html">stream.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="routemap_8h_source.html">routemap.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="zclient_8h_source.html">zclient.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="log_8h_source.html">log.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ripngd_8h_source.html">ripngd/ripngd.h</a>&quot;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for ripng_zebra.c:</div>
<div class="dyncontent">
<div class="center"><img src="ripng__zebra_8c__incl.png" border="0" usemap="#ripngd_2ripng__zebra_8c" alt=""/></div>
<map name="ripngd_2ripng__zebra_8c" id="ripngd_2ripng__zebra_8c">
<area shape="rect" id="node3" href="zebra_8h.html" title="zebra.h" alt="" coords="1345,80,1412,107"/><area shape="rect" id="node61" href="command_8h.html" title="command.h" alt="" coords="2945,80,3036,107"/><area shape="rect" id="node69" href="log_8h.html" title="log.h" alt="" coords="2786,229,2837,256"/><area shape="rect" id="node74" href="prefix_8h.html" title="prefix.h" alt="" coords="3285,155,3352,181"/><area shape="rect" id="node78" href="stream_8h.html" title="stream.h" alt="" coords="3299,80,3373,107"/><area shape="rect" id="node81" href="routemap_8h.html" title="routemap.h" alt="" coords="3397,80,3488,107"/><area shape="rect" id="node83" href="zclient_8h.html" title="zclient.h" alt="" coords="3173,155,3245,181"/><area shape="rect" id="node90" href="ripngd_8h.html" title="ripngd/ripngd.h" alt="" coords="3061,80,3173,107"/><area shape="rect" id="node57" href="zassert_8h.html" title="zassert.h" alt="" coords="2623,155,2700,181"/><area shape="rect" id="node59" href="str_8h.html" title="str.h" alt="" coords="2725,155,2773,181"/><area shape="rect" id="node63" href="vector_8h.html" title="vector.h" alt="" coords="2849,155,2921,181"/><area shape="rect" id="node65" href="vty_8h.html" title="vty.h" alt="" coords="3094,155,3145,181"/><area shape="rect" id="node72" href="route__types_8h.html" title="lib/route_types.h" alt="" coords="2946,155,3069,181"/><area shape="rect" id="node67" href="thread_8h.html" title="thread.h" alt="" coords="3084,229,3156,256"/><area shape="rect" id="node76" href="sockunion_8h.html" title="sockunion.h" alt="" coords="3272,229,3365,256"/><area shape="rect" id="node85" href="if_8h.html" title="if.h" alt="" coords="3189,229,3229,256"/><area shape="rect" id="node87" href="linklist_8h.html" title="linklist.h" alt="" coords="3174,304,3244,331"/></map>
</div>
</div>
<p><a href="ripng__zebra_8c_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#ac65933ff6de7c931749c1beeb6f7aad5">ripng_interface_up</a> (int, struct <a class="el" href="structzclient.html">zclient</a> *, <a class="el" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#a07baec678aa485694d0bc260fe7cbe33">ripng_interface_down</a> (int, struct <a class="el" href="structzclient.html">zclient</a> *, <a class="el" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#acb28e8f88d7cb407342d545a026ae1b2">ripng_interface_add</a> (int, struct <a class="el" href="structzclient.html">zclient</a> *, <a class="el" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#a18ce9e338c6dff2e94b842c3acee0eeb">ripng_interface_delete</a> (int, struct <a class="el" href="structzclient.html">zclient</a> *, <a class="el" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#a2257d781388b85fe06e38c25839f6f12">ripng_interface_address_add</a> (int, struct <a class="el" href="structzclient.html">zclient</a> *, <a class="el" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#a1141c636e4bc8684cc58bed2bd74448d">ripng_interface_address_delete</a> (int, struct <a class="el" href="structzclient.html">zclient</a> *, <a class="el" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#a4c92f013a554c244708fb25a0e4bd51e">ripng_zebra_ipv6_add</a> (struct prefix_ipv6 *<a class="el" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, struct in6_addr *<a class="el" href="structnexthop.html">nexthop</a>, unsigned int ifindex, u_char <a class="el" href="structmetric.html">metric</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#a8c975a52ab3f2a4e4593d75232185382">ripng_zebra_ipv6_delete</a> (struct prefix_ipv6 *<a class="el" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, struct in6_addr *<a class="el" href="structnexthop.html">nexthop</a>, unsigned int ifindex)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#a7e9988e480c239ce0e4dc5841f34b99d">ripng_zebra_read_ipv6</a> (int command, struct <a class="el" href="structzclient.html">zclient</a> *<a class="el" href="structzclient.html">zclient</a>, <a class="el" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a> <a class="el" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#a6dadcd39849b0d7cf80c18c5dfe121bf">ripng_zclient_reset</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#a20f62f75cddee9e189e1ad8c8f10dec9">ripng_redistribute_unset</a> (int <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#a8b9cd48049875b909264b611555e8596">ripng_redistribute_check</a> (int <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#ae6d79864cb3af7f8e57a855aab181e95">ripng_redistribute_metric_set</a> (int <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a>, int <a class="el" href="structmetric.html">metric</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#aecc4fb5bc982c5aad986ebfa77509a97">ripng_redistribute_metric_unset</a> (int <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#a9808f9af1b6a690eccd01e82f066bc54">ripng_redistribute_routemap_set</a> (int <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a>, const char *<a class="el" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#a68bdc02ca46b1ba31e83ff6ddd7d31fa">ripng_redistribute_routemap_unset</a> (int <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#ad6b24bf9a6c9e7aab0645f0c122c76cb">ripng_redistribute_clean</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#a7416b744aaac2eb65e774170baa811ea">DEFUN</a> (router_zebra, router_zebra_cmd,&quot;router <a class="el" href="bgp__debug_8c.html#aacd09dfe4b60fac4ec1c5e2895066f07">zebra</a>&quot;,&quot;Enable a routing process\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Make connection to <a class="el" href="bgp__debug_8c.html#aacd09dfe4b60fac4ec1c5e2895066f07">zebra</a> <a class="el" href="structdaemon.html">daemon</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#a29d8e041e16aec5c2eb016f3be86a430">DEFUN</a> (no_router_zebra, no_router_zebra_cmd,&quot;no router <a class="el" href="bgp__debug_8c.html#aacd09dfe4b60fac4ec1c5e2895066f07">zebra</a>&quot;, NO_STR&quot;Disable a routing process\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Stop connection to <a class="el" href="bgp__debug_8c.html#aacd09dfe4b60fac4ec1c5e2895066f07">zebra</a> <a class="el" href="structdaemon.html">daemon</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#a563df47fbebc0c09980fa95622153afe">DEFUN</a> (ripng_redistribute_ripng, ripng_redistribute_ripng_cmd,&quot;redistribute <a class="el" href="structripng.html">ripng</a>&quot;,&quot;Redistribute information from another routing protocol\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;RIPng route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#aa86ac2efe0dbcfd41c853f9baeb3ef23">DEFUN</a> (no_ripng_redistribute_ripng, no_ripng_redistribute_ripng_cmd,&quot;no redistribute <a class="el" href="structripng.html">ripng</a>&quot;, NO_STR&quot;Redistribute information from another routing protocol\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;RIPng route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#aa8c4830815aebf607ffceeb3ac4fba46">DEFUN</a> (ripng_redistribute_type, ripng_redistribute_type_cmd,&quot;redistribute (kernel|<a class="el" href="structconnected.html">connected</a>|static|<a class="el" href="structospf6.html">ospf6</a>|<a class="el" href="structbgp.html">bgp</a>)&quot;,&quot;Redistribute information from another routing protocol\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Kernel routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Connected\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Static routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Open Shortest Path First (OSPFv3)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Border Gateway Protocol (BGP)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#a794fe4b5895d7471bad285afb8f1a5d4">DEFUN</a> (no_ripng_redistribute_type, no_ripng_redistribute_type_cmd,&quot;no redistribute (kernel|<a class="el" href="structconnected.html">connected</a>|static|<a class="el" href="structospf6.html">ospf6</a>|<a class="el" href="structbgp.html">bgp</a>)&quot;, NO_STR&quot;Redistribute information from another routing protocol\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Kernel routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Connected\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Static routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Open Shortest Path First (OSPFv3)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Border Gateway Protocol (BGP)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#ad0013103d3c0908cc935b552eb45be0a">DEFUN</a> (ripng_redistribute_type_metric, ripng_redistribute_type_metric_cmd,&quot;redistribute (kernel|<a class="el" href="structconnected.html">connected</a>|static|<a class="el" href="structospf6.html">ospf6</a>|<a class="el" href="structbgp.html">bgp</a>) <a class="el" href="structmetric.html">metric</a> &lt;0-16&gt;&quot;,&quot;Redistribute information from another routing protocol\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Kernel routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Connected\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Static routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Open Shortest Path First (OSPFv3)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Border Gateway Protocol (BGP)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Metric\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Metric value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#abe3641e44598ac5363b922b1c5444a50">ALIAS</a> (no_ripng_redistribute_type, no_ripng_redistribute_type_metric_cmd,&quot;no redistribute (kernel|<a class="el" href="structconnected.html">connected</a>|static|<a class="el" href="structospf6.html">ospf6</a>|<a class="el" href="structbgp.html">bgp</a>) <a class="el" href="structmetric.html">metric</a> &lt;0-16&gt;&quot;, NO_STR&quot;Redistribute information from another routing protocol\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Kernel routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Connected\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Static routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Open Shortest Path First (OSPFv3)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Border Gateway Protocol (BGP)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Metric\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Metric value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#a526b9e4173d0078e0df5c65c9fea022e">ALIAS</a> (no_ripng_redistribute_type, no_ripng_redistribute_type_routemap_cmd,&quot;no redistribute (kernel|<a class="el" href="structconnected.html">connected</a>|static|<a class="el" href="structospf6.html">ospf6</a>|<a class="el" href="structbgp.html">bgp</a>) route-map <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;, NO_STR&quot;Redistribute information from another routing protocol\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Kernel routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Connected\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Static routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Open Shortest Path First (OSPFv3)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Border Gateway Protocol (BGP)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Route map reference\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Pointer to route-map entries\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#a201ef6cb948c25c7e309740397b80ca9">ALIAS</a> (no_ripng_redistribute_type, no_ripng_redistribute_type_metric_routemap_cmd,&quot;no redistribute (kernel|<a class="el" href="structconnected.html">connected</a>|static|<a class="el" href="structospf6.html">ospf6</a>|<a class="el" href="structbgp.html">bgp</a>) <a class="el" href="structmetric.html">metric</a> &lt;0-16&gt; route-map <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;, NO_STR&quot;Redistribute information from another routing protocol\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Kernel routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Connected\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Static routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Open Shortest Path First (OSPFv3)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Border Gateway Protocol (BGP)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Route map reference\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Pointer to route-map entries\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#a8fb6e54f70f927612f3459fa3b8543ad">zebra_config_write</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#a36cf186903c5fc5362f57be64955055a">zebra_init</a> ()</td></tr>
<tr><td colspan="2"><h2><a name="var-members"></a>
Variables</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structzclient.html">zclient</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#abe1502972ba9aa40adc080e419c496bf">zclient</a> = NULL</td></tr>
<tr><td class="memItemLeft" >struct {</td></tr>
<tr><td class="memItemLeft" >&#160;&#160;&#160;int&#160;&#160;&#160;<a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a></td></tr>
<tr><td class="memItemLeft" >&#160;&#160;&#160;int&#160;&#160;&#160;<a class="el" href="ripng__zebra_8c.html#ab9048f4db5a930cf7650cfe16e1f7c4d">str_min_len</a></td></tr>
<tr><td class="memItemLeft" >&#160;&#160;&#160;const char *&#160;&#160;&#160;<a class="el" href="ripng__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a></td></tr>
<tr><td class="memItemLeft" valign="top">}&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a> []</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structcmd__node.html">cmd_node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ripng__zebra_8c.html#a6683c482f9e771c44b2279e90606739e">zebra_node</a></td></tr>
</table>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="abe3641e44598ac5363b922b1c5444a50"></a><!-- doxytag: member="ripng_zebra.c::ALIAS" ref="abe3641e44598ac5363b922b1c5444a50" args="(no_ripng_redistribute_type, no_ripng_redistribute_type_metric_cmd,&quot;no redistribute (kernel|connected|static|ospf6|bgp) metric &lt;0&#45;16&gt;&quot;, NO_STR&quot;Redistribute information from another routing protocol\n&quot;&quot;Kernel routes\n&quot;&quot;Connected\n&quot;&quot;Static routes\n&quot;&quot;Open Shortest Path First (OSPFv3)\n&quot;&quot;Border Gateway Protocol (BGP)\n&quot;&quot;Metric\n&quot;&quot;Metric value\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ALIAS </td>
          <td>(</td>
          <td class="paramtype">no_ripng_redistribute_type&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_ripng_redistribute_type_metric_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no redistribute (kernel|<a class="el" href="structconnected.html">connected</a>|static|<a class="el" href="structospf6.html">ospf6</a>|<a class="el" href="structbgp.html">bgp</a>) <a class="el" href="structmetric.html">metric</a> &lt;0-16&gt;&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;Redistribute information from another routing protocol\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Kernel routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Connected\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Static routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Open Shortest Path First (OSPFv3)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Border Gateway Protocol (BGP)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Metric\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Metric value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00380">380</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

  <span class="keywordflow">for</span> (i = 0; <a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].str; i++) {
    <span class="keywordflow">if</span> (strncmp(<a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, argv[0],
        <a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#ab9048f4db5a930cf7650cfe16e1f7c4d">str_min_len</a>) == 0) 
      {
    <a class="code" href="ripng__zebra_8c.html#a9808f9af1b6a690eccd01e82f066bc54">ripng_redistribute_routemap_set</a> (<a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, argv[1]);
    <a class="code" href="zclient_8c.html#a4381afa78256a1211fe7881394d7e666">zclient_redistribute</a> (<a class="code" href="zebra_8h.html#aaf00306d6060095dd258463ee7cb0cc1">ZEBRA_REDISTRIBUTE_ADD</a>, <a class="code" href="structzclient.html">zclient</a>, <a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>);
    <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
      }
  }

  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a>(<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Invalid type %s%s&quot;</span>, argv[0],
      <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a526b9e4173d0078e0df5c65c9fea022e"></a><!-- doxytag: member="ripng_zebra.c::ALIAS" ref="a526b9e4173d0078e0df5c65c9fea022e" args="(no_ripng_redistribute_type, no_ripng_redistribute_type_routemap_cmd,&quot;no redistribute (kernel|connected|static|ospf6|bgp) route&#45;map WORD&quot;, NO_STR&quot;Redistribute information from another routing protocol\n&quot;&quot;Kernel routes\n&quot;&quot;Connected\n&quot;&quot;Static routes\n&quot;&quot;Open Shortest Path First (OSPFv3)\n&quot;&quot;Border Gateway Protocol (BGP)\n&quot;&quot;Route map reference\n&quot;&quot;Pointer to route&#45;map entries\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ALIAS </td>
          <td>(</td>
          <td class="paramtype">no_ripng_redistribute_type&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_ripng_redistribute_type_routemap_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no redistribute (kernel|<a class="el" href="structconnected.html">connected</a>|static|<a class="el" href="structospf6.html">ospf6</a>|<a class="el" href="structbgp.html">bgp</a>) route-map <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;Redistribute information from another routing protocol\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Kernel routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Connected\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Static routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Open Shortest Path First (OSPFv3)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Border Gateway Protocol (BGP)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Route map reference\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Pointer to route-map entries\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00423">423</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
  <span class="keywordtype">int</span> <a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a>;

  metric = atoi (argv[1]);

  <span class="keywordflow">for</span> (i = 0; <a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].str; i++) {
    <span class="keywordflow">if</span> (strncmp(<a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, argv[0],
        <a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#ab9048f4db5a930cf7650cfe16e1f7c4d">str_min_len</a>) == 0) 
      {
    <a class="code" href="ripng__zebra_8c.html#ae6d79864cb3af7f8e57a855aab181e95">ripng_redistribute_metric_set</a> (<a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, metric);
    <a class="code" href="ripng__zebra_8c.html#a9808f9af1b6a690eccd01e82f066bc54">ripng_redistribute_routemap_set</a> (<a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, argv[2]);
    <a class="code" href="zclient_8c.html#a4381afa78256a1211fe7881394d7e666">zclient_redistribute</a> (<a class="code" href="zebra_8h.html#aaf00306d6060095dd258463ee7cb0cc1">ZEBRA_REDISTRIBUTE_ADD</a>, <a class="code" href="structzclient.html">zclient</a>, <a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>);
    <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
      }
  }

  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a>(<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Invalid type %s%s&quot;</span>, argv[0],
      <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a201ef6cb948c25c7e309740397b80ca9"></a><!-- doxytag: member="ripng_zebra.c::ALIAS" ref="a201ef6cb948c25c7e309740397b80ca9" args="(no_ripng_redistribute_type, no_ripng_redistribute_type_metric_routemap_cmd,&quot;no redistribute (kernel|connected|static|ospf6|bgp) metric &lt;0&#45;16&gt; route&#45;map WORD&quot;, NO_STR&quot;Redistribute information from another routing protocol\n&quot;&quot;Kernel routes\n&quot;&quot;Connected\n&quot;&quot;Static routes\n&quot;&quot;Open Shortest Path First (OSPFv3)\n&quot;&quot;Border Gateway Protocol (BGP)\n&quot;&quot;Route map reference\n&quot;&quot;Pointer to route&#45;map entries\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ALIAS </td>
          <td>(</td>
          <td class="paramtype">no_ripng_redistribute_type&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_ripng_redistribute_type_metric_routemap_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no redistribute (kernel|<a class="el" href="structconnected.html">connected</a>|static|<a class="el" href="structospf6.html">ospf6</a>|<a class="el" href="structbgp.html">bgp</a>) <a class="el" href="structmetric.html">metric</a> &lt;0-16&gt; route-map <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;Redistribute information from another routing protocol\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Kernel routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Connected\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Static routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Open Shortest Path First (OSPFv3)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Border Gateway Protocol (BGP)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Route map reference\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Pointer to route-map entries\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00472">472</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

  <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="zebra_8h.html#aec97442680d773fd62f9af5c9426b842">ZEBRA_ROUTE_MAX</a>; i++)
    <span class="keywordflow">if</span> (i != <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c2ac97dd71c8f3a0db036c6c0216208">redist_default</a> &amp;&amp; <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[i])
      {
      <span class="keywordflow">if</span> (config_mode)
    {
      <span class="keywordflow">if</span> (<a class="code" href="structripng.html">ripng</a>-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[i].<a class="code" href="structripng.html#afe23934beb3ecee523a32f3aa13ec45a">metric_config</a>)
        {
          <span class="keywordflow">if</span> (<a class="code" href="structripng.html">ripng</a>-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[i].<a class="code" href="structripng.html#ac5d479513619aac458e3ae04c0814632">name</a>)
        <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot; redistribute %s metric %d route-map %s%s&quot;</span>,
             <a class="code" href="log_8c.html#ae87aa85b5b05b120d376956ce5d13444">zebra_route_string</a>(i), <a class="code" href="structripng.html">ripng</a>-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[i].<a class="code" href="structripng.html#a88741fa8a6afd1aef3936449d7e4709f">metric</a>,
            <a class="code" href="structripng.html">ripng</a>-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[i].<a class="code" href="structripng.html#ac5d479513619aac458e3ae04c0814632">name</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
          <span class="keywordflow">else</span>
        <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot; redistribute %s metric %d%s&quot;</span>,
            <a class="code" href="log_8c.html#ae87aa85b5b05b120d376956ce5d13444">zebra_route_string</a>(i), <a class="code" href="structripng.html">ripng</a>-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[i].<a class="code" href="structripng.html#a88741fa8a6afd1aef3936449d7e4709f">metric</a>,
            <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
        }
      <span class="keywordflow">else</span>
        {
          <span class="keywordflow">if</span> (<a class="code" href="structripng.html">ripng</a>-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[i].<a class="code" href="structripng.html#ac5d479513619aac458e3ae04c0814632">name</a>)
        <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot; redistribute %s route-map %s%s&quot;</span>,
             <a class="code" href="log_8c.html#ae87aa85b5b05b120d376956ce5d13444">zebra_route_string</a>(i), <a class="code" href="structripng.html">ripng</a>-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[i].<a class="code" href="structripng.html#ac5d479513619aac458e3ae04c0814632">name</a>,
             <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
          <span class="keywordflow">else</span>
        <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot; redistribute %s%s&quot;</span>, <a class="code" href="log_8c.html#ae87aa85b5b05b120d376956ce5d13444">zebra_route_string</a>(i),
             <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
        }
    }
      <span class="keywordflow">else</span>
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;    %s&quot;</span>, <a class="code" href="log_8c.html#ae87aa85b5b05b120d376956ce5d13444">zebra_route_string</a>(i));
      }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a7416b744aaac2eb65e774170baa811ea"></a><!-- doxytag: member="ripng_zebra.c::DEFUN" ref="a7416b744aaac2eb65e774170baa811ea" args="(router_zebra, router_zebra_cmd,&quot;router zebra&quot;,&quot;Enable a routing process\n&quot;&quot;Make connection to zebra daemon\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">router_zebra&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">router_zebra_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;router <a class="el" href="bgp__debug_8c.html#aacd09dfe4b60fac4ec1c5e2895066f07">zebra</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;Enable a routing process\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Make connection to <a class="el" href="bgp__debug_8c.html#aacd09dfe4b60fac4ec1c5e2895066f07">zebra</a> <a class="el" href="structdaemon.html">daemon</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00243">243</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682af7fc20f627618eee254477289b890df3">ZEBRA_NODE</a>;
  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7867dfbcd3b504d2edd22f70ef4277b6">enable</a> = 1;
  <a class="code" href="zclient_8c.html#a9c8f7389bb01919b00e7f95403a3c112">zclient_start</a> (<a class="code" href="structzclient.html">zclient</a>);
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a29d8e041e16aec5c2eb016f3be86a430"></a><!-- doxytag: member="ripng_zebra.c::DEFUN" ref="a29d8e041e16aec5c2eb016f3be86a430" args="(no_router_zebra, no_router_zebra_cmd,&quot;no router zebra&quot;, NO_STR&quot;Disable a routing process\n&quot;&quot;Stop connection to zebra daemon\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_router_zebra&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_router_zebra_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no router <a class="el" href="bgp__debug_8c.html#aacd09dfe4b60fac4ec1c5e2895066f07">zebra</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;Disable a routing process\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Stop connection to <a class="el" href="bgp__debug_8c.html#aacd09dfe4b60fac4ec1c5e2895066f07">zebra</a> <a class="el" href="structdaemon.html">daemon</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00255">255</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7867dfbcd3b504d2edd22f70ef4277b6">enable</a> = 0;
  <a class="code" href="zclient_8c.html#a380163204583292d5924050e26a8989d">zclient_stop</a> (<a class="code" href="structzclient.html">zclient</a>);
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a563df47fbebc0c09980fa95622153afe"></a><!-- doxytag: member="ripng_zebra.c::DEFUN" ref="a563df47fbebc0c09980fa95622153afe" args="(ripng_redistribute_ripng, ripng_redistribute_ripng_cmd,&quot;redistribute ripng&quot;,&quot;Redistribute information from another routing protocol\n&quot;&quot;RIPng route\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">ripng_redistribute_ripng&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ripng_redistribute_ripng_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;redistribute <a class="el" href="structripng.html">ripng</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;Redistribute information from another routing protocol\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;RIPng route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00267">267</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>] = 1;
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa86ac2efe0dbcfd41c853f9baeb3ef23"></a><!-- doxytag: member="ripng_zebra.c::DEFUN" ref="aa86ac2efe0dbcfd41c853f9baeb3ef23" args="(no_ripng_redistribute_ripng, no_ripng_redistribute_ripng_cmd,&quot;no redistribute ripng&quot;, NO_STR&quot;Redistribute information from another routing protocol\n&quot;&quot;RIPng route\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_ripng_redistribute_ripng&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_ripng_redistribute_ripng_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no redistribute <a class="el" href="structripng.html">ripng</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;Redistribute information from another routing protocol\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;RIPng route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00277">277</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>] = 0;
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa8c4830815aebf607ffceeb3ac4fba46"></a><!-- doxytag: member="ripng_zebra.c::DEFUN" ref="aa8c4830815aebf607ffceeb3ac4fba46" args="(ripng_redistribute_type, ripng_redistribute_type_cmd,&quot;redistribute (kernel|connected|static|ospf6|bgp)&quot;,&quot;Redistribute information from another routing protocol\n&quot;&quot;Kernel routes\n&quot;&quot;Connected\n&quot;&quot;Static routes\n&quot;&quot;Open Shortest Path First (OSPFv3)\n&quot;&quot;Border Gateway Protocol (BGP)\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">ripng_redistribute_type&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ripng_redistribute_type_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;redistribute (kernel|<a class="el" href="structconnected.html">connected</a>|static|<a class="el" href="structospf6.html">ospf6</a>|<a class="el" href="structbgp.html">bgp</a>)&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;Redistribute information from another routing protocol\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Kernel routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Connected\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Static routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Open Shortest Path First (OSPFv3)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Border Gateway Protocol (BGP)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00288">288</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

  <span class="keywordflow">for</span>(i = 0; <a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].str; i++) 
    {
      <span class="keywordflow">if</span> (strncmp (<a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, argv[0], 
           <a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#ab9048f4db5a930cf7650cfe16e1f7c4d">str_min_len</a>) == 0) 
    {
      <a class="code" href="zclient_8c.html#a4381afa78256a1211fe7881394d7e666">zclient_redistribute</a> (<a class="code" href="zebra_8h.html#aaf00306d6060095dd258463ee7cb0cc1">ZEBRA_REDISTRIBUTE_ADD</a>, <a class="code" href="structzclient.html">zclient</a>, <a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>);
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
    }
    }

  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a>(<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Invalid type %s%s&quot;</span>, argv[0],
      <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a794fe4b5895d7471bad285afb8f1a5d4"></a><!-- doxytag: member="ripng_zebra.c::DEFUN" ref="a794fe4b5895d7471bad285afb8f1a5d4" args="(no_ripng_redistribute_type, no_ripng_redistribute_type_cmd,&quot;no redistribute (kernel|connected|static|ospf6|bgp)&quot;, NO_STR&quot;Redistribute information from another routing protocol\n&quot;&quot;Kernel routes\n&quot;&quot;Connected\n&quot;&quot;Static routes\n&quot;&quot;Open Shortest Path First (OSPFv3)\n&quot;&quot;Border Gateway Protocol (BGP)\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_ripng_redistribute_type&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_ripng_redistribute_type_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no redistribute (kernel|<a class="el" href="structconnected.html">connected</a>|static|<a class="el" href="structospf6.html">ospf6</a>|<a class="el" href="structbgp.html">bgp</a>)&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;Redistribute information from another routing protocol\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Kernel routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Connected\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Static routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Open Shortest Path First (OSPFv3)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Border Gateway Protocol (BGP)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00316">316</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

  <span class="keywordflow">for</span> (i = 0; <a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].str; i++) 
    {
      <span class="keywordflow">if</span> (strncmp(<a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, argv[0], 
          <a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#ab9048f4db5a930cf7650cfe16e1f7c4d">str_min_len</a>) == 0) 
    {
      <a class="code" href="ripng__zebra_8c.html#aecc4fb5bc982c5aad986ebfa77509a97">ripng_redistribute_metric_unset</a> (<a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>);
      <a class="code" href="ripng__zebra_8c.html#a68bdc02ca46b1ba31e83ff6ddd7d31fa">ripng_redistribute_routemap_unset</a> (<a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>);
      <span class="keywordflow">return</span> <a class="code" href="ripng__zebra_8c.html#a20f62f75cddee9e189e1ad8c8f10dec9">ripng_redistribute_unset</a> (<a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>);
        }
    }

  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a>(<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Invalid type %s%s&quot;</span>, argv[0],
      <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad0013103d3c0908cc935b552eb45be0a"></a><!-- doxytag: member="ripng_zebra.c::DEFUN" ref="ad0013103d3c0908cc935b552eb45be0a" args="(ripng_redistribute_type_metric, ripng_redistribute_type_metric_cmd,&quot;redistribute (kernel|connected|static|ospf6|bgp) metric &lt;0&#45;16&gt;&quot;,&quot;Redistribute information from another routing protocol\n&quot;&quot;Kernel routes\n&quot;&quot;Connected\n&quot;&quot;Static routes\n&quot;&quot;Open Shortest Path First (OSPFv3)\n&quot;&quot;Border Gateway Protocol (BGP)\n&quot;&quot;Metric\n&quot;&quot;Metric value\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">ripng_redistribute_type_metric&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ripng_redistribute_type_metric_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;redistribute (kernel|<a class="el" href="structconnected.html">connected</a>|static|<a class="el" href="structospf6.html">ospf6</a>|<a class="el" href="structbgp.html">bgp</a>) <a class="el" href="structmetric.html">metric</a> &lt;0-16&gt;&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;Redistribute information from another routing protocol\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Kernel routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Connected\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Static routes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Open Shortest Path First (OSPFv3)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Border Gateway Protocol (BGP)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Metric\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Metric value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00347">347</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
  <span class="keywordtype">int</span> <a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a>;

  metric = atoi (argv[1]);

  <span class="keywordflow">for</span> (i = 0; <a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].str; i++) {
    <span class="keywordflow">if</span> (strncmp(<a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, argv[0],
        <a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#ab9048f4db5a930cf7650cfe16e1f7c4d">str_min_len</a>) == 0) 
      {
    <a class="code" href="ripng__zebra_8c.html#ae6d79864cb3af7f8e57a855aab181e95">ripng_redistribute_metric_set</a> (<a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, metric);
    <a class="code" href="zclient_8c.html#a4381afa78256a1211fe7881394d7e666">zclient_redistribute</a> (<a class="code" href="zebra_8h.html#aaf00306d6060095dd258463ee7cb0cc1">ZEBRA_REDISTRIBUTE_ADD</a>, <a class="code" href="structzclient.html">zclient</a>, <a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>);
    <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
      }
  }

  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a>(<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Invalid type %s%s&quot;</span>, argv[0],
      <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="acb28e8f88d7cb407342d545a026ae1b2"></a><!-- doxytag: member="ripng_zebra.c::ripng_interface_add" ref="acb28e8f88d7cb407342d545a026ae1b2" args="(int, struct zclient *, zebra_size_t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ripng_interface_add </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structzclient.html">zclient</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__interface_8c_source.html#l00273">273</a> of file <a class="el" href="ripng__interface_8c_source.html">ripng_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;

  ifp = <a class="code" href="zclient_8c.html#af2dbed49848c57eaae1185751ec18648">zebra_interface_add_read</a> (<a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a1b9d2a1e869c1008c2bc70d14ce2bf49">ibuf</a>);

  <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#aa9d3258f6a6008ec57708403f6abec53">IS_RIPNG_DEBUG_ZEBRA</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;RIPng interface add %s index %d flags %#llx metric %d mtu %d&quot;</span>,
        ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>, (<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>) ifp-&gt;<a class="code" href="structinterface.html#a09ed96b900f31d769a76a32b67217c8f">flags</a>,
        ifp-&gt;<a class="code" href="structinterface.html#adbb7ad89b817a388e9442e85f1e72cc8">metric</a>, ifp-&gt;<a class="code" href="structinterface.html#a75a892a4df0f60191a13ca07b6625cb1">mtu6</a>);

  <span class="comment">/* Check is this interface is RIP enabled or not.*/</span>
  <a class="code" href="ripng__interface_8c.html#a0d87c3cbfc55d03143dde531c7361e81">ripng_enable_apply</a> (ifp);

  <span class="comment">/* Apply distribute list to the interface. */</span>
  <a class="code" href="ripngd_8c.html#a732ca94fe365ac13ca404cb061e3e6dd">ripng_distribute_update_interface</a> (ifp);

  <span class="comment">/* Check interface routemap. */</span>
  <a class="code" href="ripngd_8c.html#a7809da60dce4d4755e2a2a8faecd26da">ripng_if_rmap_update_interface</a> (ifp);

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a2257d781388b85fe06e38c25839f6f12"></a><!-- doxytag: member="ripng_zebra.c::ripng_interface_address_add" ref="a2257d781388b85fe06e38c25839f6f12" args="(int, struct zclient *, zebra_size_t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ripng_interface_address_add </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structzclient.html">zclient</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__interface_8c_source.html#l00411">411</a> of file <a class="el" href="ripng__interface_8c_source.html">ripng_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structconnected.html">connected</a> *c;
  <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;

  c = <a class="code" href="zclient_8c.html#a361d54ec3dad267afc3335fe155367a2">zebra_interface_address_read</a> (<a class="code" href="zebra_8h.html#aea532f1b7734390e98af1be9c18b0964">ZEBRA_INTERFACE_ADDRESS_ADD</a>, 
                                    <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a1b9d2a1e869c1008c2bc70d14ce2bf49">ibuf</a>);

  <span class="keywordflow">if</span> (c == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> 0;

  p = c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>;

  <span class="keywordflow">if</span> (p-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == AF_INET6)
    {
      <span class="keyword">struct </span><a class="code" href="structripng__interface.html">ripng_interface</a> *ri = c-&gt;<a class="code" href="structconnected.html#a93c575385a71507f8c29ec26344d09d3">ifp</a>-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
      
      <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#aa9d3258f6a6008ec57708403f6abec53">IS_RIPNG_DEBUG_ZEBRA</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;RIPng connected address %s/%d add&quot;</span>,
           inet6_ntoa(p-&gt;u.prefix6),
           p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
      
      <span class="comment">/* Check is this prefix needs to be redistributed. */</span>
      <a class="code" href="ripng__interface_8c.html#aad814725904054229bf8913b76b8457b">ripng_apply_address_add</a>(c);

      <span class="comment">/* Let&#39;s try once again whether the interface could be activated */</span>
      <span class="keywordflow">if</span> (!ri-&gt;<a class="code" href="structripng__interface.html#abd30652e25c22eca7261479d51734961">running</a>) {
        <span class="comment">/* Check if this interface is RIP enabled or not.*/</span>
        <a class="code" href="ripng__interface_8c.html#a0d87c3cbfc55d03143dde531c7361e81">ripng_enable_apply</a> (c-&gt;<a class="code" href="structconnected.html#a93c575385a71507f8c29ec26344d09d3">ifp</a>);

        <span class="comment">/* Apply distribute list to the interface. */</span>
        <a class="code" href="ripngd_8c.html#a732ca94fe365ac13ca404cb061e3e6dd">ripng_distribute_update_interface</a> (c-&gt;<a class="code" href="structconnected.html#a93c575385a71507f8c29ec26344d09d3">ifp</a>);

        <span class="comment">/* Check interface routemap. */</span>
        <a class="code" href="ripngd_8c.html#a7809da60dce4d4755e2a2a8faecd26da">ripng_if_rmap_update_interface</a> (c-&gt;<a class="code" href="structconnected.html#a93c575385a71507f8c29ec26344d09d3">ifp</a>);
      }

    }

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a1141c636e4bc8684cc58bed2bd74448d"></a><!-- doxytag: member="ripng_zebra.c::ripng_interface_address_delete" ref="a1141c636e4bc8684cc58bed2bd74448d" args="(int, struct zclient *, zebra_size_t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ripng_interface_address_delete </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structzclient.html">zclient</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__interface_8c_source.html#l00478">478</a> of file <a class="el" href="ripng__interface_8c_source.html">ripng_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structconnected.html">connected</a> *ifc;
  <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
  <span class="keywordtype">char</span> buf[<a class="code" href="prefix_8h.html#af776b22a727aae7c9f4d869d50df47e8">INET6_ADDRSTRLEN</a>];

  ifc = <a class="code" href="zclient_8c.html#a361d54ec3dad267afc3335fe155367a2">zebra_interface_address_read</a> (<a class="code" href="zebra_8h.html#a8965100a302cd587b7afa842473c8be2">ZEBRA_INTERFACE_ADDRESS_DELETE</a>, 
                                      <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a1b9d2a1e869c1008c2bc70d14ce2bf49">ibuf</a>);
  
  <span class="keywordflow">if</span> (ifc)
    {
      p = ifc-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>;

      <span class="keywordflow">if</span> (p-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == AF_INET6)
    {
      <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#aa9d3258f6a6008ec57708403f6abec53">IS_RIPNG_DEBUG_ZEBRA</a>)
        <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;RIPng connected address %s/%d delete&quot;</span>,
               <a class="code" href="sockunion_8c.html#a5bfb767e8fa3f9ff5d2a1e19d71791f4">inet_ntop</a> (AF_INET6, &amp;p-&gt;u.prefix6, buf,
                  <a class="code" href="prefix_8h.html#af776b22a727aae7c9f4d869d50df47e8">INET6_ADDRSTRLEN</a>),
               p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);

      <span class="comment">/* Check wether this prefix needs to be removed. */</span>
      <a class="code" href="ripng__interface_8c.html#ab2f9140b5b73eb52b8d3c7dc7d5804e1">ripng_apply_address_del</a>(ifc);
    }
      <a class="code" href="if_8c.html#aefcfc40d0358af75f26135eb0a33903d">connected_free</a> (ifc);
    }

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a18ce9e338c6dff2e94b842c3acee0eeb"></a><!-- doxytag: member="ripng_zebra.c::ripng_interface_delete" ref="a18ce9e338c6dff2e94b842c3acee0eeb" args="(int, struct zclient *, zebra_size_t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ripng_interface_delete </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structzclient.html">zclient</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__interface_8c_source.html#l00297">297</a> of file <a class="el" href="ripng__interface_8c_source.html">ripng_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
  <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>;

  s = <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a1b9d2a1e869c1008c2bc70d14ce2bf49">ibuf</a>;
  <span class="comment">/*  zebra_interface_state_read() updates interface structure in iflist */</span>
  ifp = <a class="code" href="zclient_8c.html#a989f3e044d41b4e18463027a94b846e7">zebra_interface_state_read</a>(s);

  <span class="keywordflow">if</span> (ifp == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> 0;

  <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#ade77fc67f30030f539906dad43c239ab">if_is_up</a> (ifp)) {
    <a class="code" href="ripng__interface_8c.html#a69709190fe31d263c3cf571eb47543b5">ripng_if_down</a>(ifp);
  }

  <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a>(<span class="stringliteral">&quot;interface delete %s index %d flags %#llx metric %d mtu %d&quot;</span>,
            ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>, (<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>) ifp-&gt;<a class="code" href="structinterface.html#a09ed96b900f31d769a76a32b67217c8f">flags</a>,
        ifp-&gt;<a class="code" href="structinterface.html#adbb7ad89b817a388e9442e85f1e72cc8">metric</a>, ifp-&gt;<a class="code" href="structinterface.html#a75a892a4df0f60191a13ca07b6625cb1">mtu6</a>);

  <span class="comment">/* To support pseudo interface do not free interface structure.  */</span>
  <span class="comment">/* if_delete(ifp); */</span>
  ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a> = <a class="code" href="if_8h.html#a18949aeeb4a8fbe7e3be43e6bbe86527">IFINDEX_INTERNAL</a>;

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a07baec678aa485694d0bc260fe7cbe33"></a><!-- doxytag: member="ripng_zebra.c::ripng_interface_down" ref="a07baec678aa485694d0bc260fe7cbe33" args="(int, struct zclient *, zebra_size_t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ripng_interface_down </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structzclient.html">zclient</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__interface_8c_source.html#l00248">248</a> of file <a class="el" href="ripng__interface_8c_source.html">ripng_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;

  <span class="comment">/* zebra_interface_state_read() updates interface structure in iflist. */</span>
  s = <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a1b9d2a1e869c1008c2bc70d14ce2bf49">ibuf</a>;
  ifp = <a class="code" href="zclient_8c.html#a989f3e044d41b4e18463027a94b846e7">zebra_interface_state_read</a> (s);

  <span class="keywordflow">if</span> (ifp == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> 0;

  <a class="code" href="ripng__interface_8c.html#a69709190fe31d263c3cf571eb47543b5">ripng_if_down</a> (ifp);

  <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#aa9d3258f6a6008ec57708403f6abec53">IS_RIPNG_DEBUG_ZEBRA</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;interface down %s index %d flags %#llx metric %d mtu %d&quot;</span>,
        ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>,
        (<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>) ifp-&gt;<a class="code" href="structinterface.html#a09ed96b900f31d769a76a32b67217c8f">flags</a>, ifp-&gt;<a class="code" href="structinterface.html#adbb7ad89b817a388e9442e85f1e72cc8">metric</a>, ifp-&gt;<a class="code" href="structinterface.html#a75a892a4df0f60191a13ca07b6625cb1">mtu6</a>);

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac65933ff6de7c931749c1beeb6f7aad5"></a><!-- doxytag: member="ripng_zebra.c::ripng_interface_up" ref="ac65933ff6de7c931749c1beeb6f7aad5" args="(int, struct zclient *, zebra_size_t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ripng_interface_up </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structzclient.html">zclient</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__interface_8c_source.html#l00217">217</a> of file <a class="el" href="ripng__interface_8c_source.html">ripng_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;

  <span class="comment">/* zebra_interface_state_read() updates interface structure in iflist. */</span>
  s = <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a1b9d2a1e869c1008c2bc70d14ce2bf49">ibuf</a>;
  ifp = <a class="code" href="zclient_8c.html#a989f3e044d41b4e18463027a94b846e7">zebra_interface_state_read</a> (s);

  <span class="keywordflow">if</span> (ifp == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> 0;

  <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#aa9d3258f6a6008ec57708403f6abec53">IS_RIPNG_DEBUG_ZEBRA</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;interface up %s index %d flags %llx metric %d mtu %d&quot;</span>,
           ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>, (<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>)ifp-&gt;<a class="code" href="structinterface.html#a09ed96b900f31d769a76a32b67217c8f">flags</a>,
           ifp-&gt;<a class="code" href="structinterface.html#adbb7ad89b817a388e9442e85f1e72cc8">metric</a>, ifp-&gt;<a class="code" href="structinterface.html#a75a892a4df0f60191a13ca07b6625cb1">mtu6</a>);

  <span class="comment">/* Check if this interface is RIPng enabled or not. */</span>
  <a class="code" href="ripng__interface_8c.html#a0d87c3cbfc55d03143dde531c7361e81">ripng_enable_apply</a> (ifp);

  <span class="comment">/* Check for a passive interface. */</span>
  <a class="code" href="ripng__interface_8c.html#a03052c47c840e3ed76634c90a2ba3a73">ripng_passive_interface_apply</a> (ifp);

  <span class="comment">/* Apply distribute list to the all interface. */</span>
  <a class="code" href="ripngd_8c.html#a732ca94fe365ac13ca404cb061e3e6dd">ripng_distribute_update_interface</a> (ifp);

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a8b9cd48049875b909264b611555e8596"></a><!-- doxytag: member="ripng_zebra.c::ripng_redistribute_check" ref="a8b9cd48049875b909264b611555e8596" args="(int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ripng_redistribute_check </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00168">168</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> (<a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>]);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad6b24bf9a6c9e7aab0645f0c122c76cb"></a><!-- doxytag: member="ripng_zebra.c::ripng_redistribute_clean" ref="ad6b24bf9a6c9e7aab0645f0c122c76cb" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ripng_redistribute_clean </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00223">223</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

  <span class="keywordflow">for</span> (i = 0; <a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].str; i++)
    {
      <span class="keywordflow">if</span> (<a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].type])
        {
          <span class="keywordflow">if</span> (<a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a53dfb4d4cfc1331edf8a62d04d99f08f">sock</a> &gt; 0)
            <a class="code" href="zclient_8c.html#a0ed1704cde688d0575a1394a34f6fc82">zebra_redistribute_send</a> (<a class="code" href="zebra_8h.html#a1dce1941aae01a8a16dace7591398a0d">ZEBRA_REDISTRIBUTE_DELETE</a>,
                                     <a class="code" href="structzclient.html">zclient</a>, <a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>);

          <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].type] = 0;

          <span class="comment">/* Remove the routes from RIPng table. */</span>
          <a class="code" href="ripngd_8c.html#a7b2f5bb07a049125bd2981a13054cb68">ripng_redistribute_withdraw</a> (<a class="code" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>);
        }
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae6d79864cb3af7f8e57a855aab181e95"></a><!-- doxytag: member="ripng_zebra.c::ripng_redistribute_metric_set" ref="ae6d79864cb3af7f8e57a855aab181e95" args="(int type, int metric)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ripng_redistribute_metric_set </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>metric</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00174">174</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structripng.html">ripng</a>-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structripng.html#afe23934beb3ecee523a32f3aa13ec45a">metric_config</a> = 1;
  <a class="code" href="structripng.html">ripng</a>-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structripng.html#a88741fa8a6afd1aef3936449d7e4709f">metric</a> = <a class="code" href="structinterface.html#adbb7ad89b817a388e9442e85f1e72cc8">metric</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aecc4fb5bc982c5aad986ebfa77509a97"></a><!-- doxytag: member="ripng_zebra.c::ripng_redistribute_metric_unset" ref="aecc4fb5bc982c5aad986ebfa77509a97" args="(int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int ripng_redistribute_metric_unset </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00181">181</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structripng.html">ripng</a>-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structripng.html#afe23934beb3ecee523a32f3aa13ec45a">metric_config</a> = 0;
  <a class="code" href="structripng.html">ripng</a>-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structripng.html#a88741fa8a6afd1aef3936449d7e4709f">metric</a> = 0;
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9808f9af1b6a690eccd01e82f066bc54"></a><!-- doxytag: member="ripng_zebra.c::ripng_redistribute_routemap_set" ref="a9808f9af1b6a690eccd01e82f066bc54" args="(int type, const char *name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ripng_redistribute_routemap_set </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00189">189</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structripng.html">ripng</a>-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structripng.html#ac5d479513619aac458e3ae04c0814632">name</a>)
    free (<a class="code" href="structripng.html">ripng</a>-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structripng.html#ac5d479513619aac458e3ae04c0814632">name</a>);

  <a class="code" href="structripng.html">ripng</a>-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structripng.html#ac5d479513619aac458e3ae04c0814632">name</a> = strdup (<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>);
  <a class="code" href="structripng.html">ripng</a>-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structripng.html#a98512a1190c2b92964d03d0ef0935766">map</a> = <a class="code" href="routemap_8c.html#a52006340e589dda4244d35cafc9f6f10">route_map_lookup_by_name</a> (<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a68bdc02ca46b1ba31e83ff6ddd7d31fa"></a><!-- doxytag: member="ripng_zebra.c::ripng_redistribute_routemap_unset" ref="a68bdc02ca46b1ba31e83ff6ddd7d31fa" args="(int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ripng_redistribute_routemap_unset </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00199">199</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structripng.html">ripng</a>-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structripng.html#ac5d479513619aac458e3ae04c0814632">name</a>)
    free (<a class="code" href="structripng.html">ripng</a>-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structripng.html#ac5d479513619aac458e3ae04c0814632">name</a>);

  <a class="code" href="structripng.html">ripng</a>-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structripng.html#ac5d479513619aac458e3ae04c0814632">name</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <a class="code" href="structripng.html">ripng</a>-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structripng.html#a98512a1190c2b92964d03d0ef0935766">map</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a20f62f75cddee9e189e1ad8c8f10dec9"></a><!-- doxytag: member="ripng_zebra.c::ripng_redistribute_unset" ref="a20f62f75cddee9e189e1ad8c8f10dec9" args="(int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int ripng_redistribute_unset </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00152">152</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (! <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>])
    <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;

  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>] = 0;

  <span class="keywordflow">if</span> (<a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a53dfb4d4cfc1331edf8a62d04d99f08f">sock</a> &gt; 0)
    <a class="code" href="zclient_8c.html#a0ed1704cde688d0575a1394a34f6fc82">zebra_redistribute_send</a> (<a class="code" href="zebra_8h.html#a1dce1941aae01a8a16dace7591398a0d">ZEBRA_REDISTRIBUTE_DELETE</a>, <a class="code" href="structzclient.html">zclient</a>, <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>);

  <a class="code" href="ripngd_8c.html#a7b2f5bb07a049125bd2981a13054cb68">ripng_redistribute_withdraw</a> (<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>);
  
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6dadcd39849b0d7cf80c18c5dfe121bf"></a><!-- doxytag: member="ripng_zebra.c::ripng_zclient_reset" ref="a6dadcd39849b0d7cf80c18c5dfe121bf" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ripng_zclient_reset </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00146">146</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="zclient_8c.html#ad002f3a9a797ab41ed60505ed5007ae7">zclient_reset</a> (<a class="code" href="structzclient.html">zclient</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4c92f013a554c244708fb25a0e4bd51e"></a><!-- doxytag: member="ripng_zebra.c::ripng_zebra_ipv6_add" ref="a4c92f013a554c244708fb25a0e4bd51e" args="(struct prefix_ipv6 *p, struct in6_addr *nexthop, unsigned int ifindex, u_char metric)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ripng_zebra_ipv6_add </td>
          <td>(</td>
          <td class="paramtype">struct prefix_ipv6 *&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in6_addr *&#160;</td>
          <td class="paramname"><em>nexthop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>ifindex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_char&#160;</td>
          <td class="paramname"><em>metric</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00046">46</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span>zapi_ipv6 api;

  <span class="keywordflow">if</span> (<a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>])
    {
      api.type = <a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>;
      api.flags = 0;
      api.message = 0;
      <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#a321bbeaddad8bc9bffaf57f7ac6cf8fd">ZAPI_MESSAGE_NEXTHOP</a>);
      api.nexthop_num = 1;
      api.nexthop = &amp;<a class="code" href="structnexthop.html">nexthop</a>;
      <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#ae8d1e48f6c2858ecda1c3aee4219a0e6">ZAPI_MESSAGE_IFINDEX</a>);
      api.ifindex_num = 1;
      api.ifindex = &amp;ifindex;
      <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#a4a5d60df1ef02f794476ea1daa6ba024">ZAPI_MESSAGE_METRIC</a>);
      api.metric = <a class="code" href="structmetric.html">metric</a>;
      
      zapi_ipv6_route (<a class="code" href="zebra_8h.html#a2d0f19502bde040501c7ad64bc955739">ZEBRA_IPV6_ROUTE_ADD</a>, <a class="code" href="structzclient.html">zclient</a>, <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, &amp;api);
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a8c975a52ab3f2a4e4593d75232185382"></a><!-- doxytag: member="ripng_zebra.c::ripng_zebra_ipv6_delete" ref="a8c975a52ab3f2a4e4593d75232185382" args="(struct prefix_ipv6 *p, struct in6_addr *nexthop, unsigned int ifindex)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ripng_zebra_ipv6_delete </td>
          <td>(</td>
          <td class="paramtype">struct prefix_ipv6 *&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in6_addr *&#160;</td>
          <td class="paramname"><em>nexthop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>ifindex</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00070">70</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span>zapi_ipv6 api;

  <span class="keywordflow">if</span> (<a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>])
    {
      api.type = <a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>;
      api.flags = 0;
      api.message = 0;
      <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#a321bbeaddad8bc9bffaf57f7ac6cf8fd">ZAPI_MESSAGE_NEXTHOP</a>);
      api.nexthop_num = 1;
      api.nexthop = &amp;<a class="code" href="structnexthop.html">nexthop</a>;
      <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#ae8d1e48f6c2858ecda1c3aee4219a0e6">ZAPI_MESSAGE_IFINDEX</a>);
      api.ifindex_num = 1;
      api.ifindex = &amp;ifindex;

      zapi_ipv6_route (<a class="code" href="zebra_8h.html#ad98414d027f7107e91cb040a329ad48a">ZEBRA_IPV6_ROUTE_DELETE</a>, <a class="code" href="structzclient.html">zclient</a>, <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, &amp;api);
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a7e9988e480c239ce0e4dc5841f34b99d"></a><!-- doxytag: member="ripng_zebra.c::ripng_zebra_read_ipv6" ref="a7e9988e480c239ce0e4dc5841f34b99d" args="(int command, struct zclient *zclient, zebra_size_t length)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int ripng_zebra_read_ipv6 </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>command</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structzclient.html">zclient</a> *&#160;</td>
          <td class="paramname"><em>zclient</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a>&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00093">93</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>;
  <span class="keyword">struct </span>zapi_ipv6 api;
  <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> ifindex;
  <span class="keyword">struct </span>in6_addr <a class="code" href="structnexthop.html">nexthop</a>;
  <span class="keyword">struct </span>prefix_ipv6 <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;

  s = zclient-&gt;<a class="code" href="structzclient.html#a1b9d2a1e869c1008c2bc70d14ce2bf49">ibuf</a>;
  ifindex = 0;
  memset (&amp;<a class="code" href="structnexthop.html">nexthop</a>, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> in6_addr));

  <span class="comment">/* Type, flags, message. */</span>
  api.type = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);
  api.flags = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);
  api.message = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);

  <span class="comment">/* IPv6 prefix. */</span>
  memset (&amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> prefix_ipv6));
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.family = AF_INET6;
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);
  <a class="code" href="stream_8c.html#ab7101e57ef0d9dc1a33e7f7e30c91b9a">stream_get</a> (&amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix, s, <a class="code" href="bgpd_8h.html#a472145011d944606a257487e80cc3ace">PSIZE</a> (<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen));

  <span class="comment">/* Nexthop, ifindex, distance, metric. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#a321bbeaddad8bc9bffaf57f7ac6cf8fd">ZAPI_MESSAGE_NEXTHOP</a>))
    {
      api.nexthop_num = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);
      <a class="code" href="stream_8c.html#ab7101e57ef0d9dc1a33e7f7e30c91b9a">stream_get</a> (&amp;<a class="code" href="structnexthop.html">nexthop</a>, s, 16);
    }
  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#ae8d1e48f6c2858ecda1c3aee4219a0e6">ZAPI_MESSAGE_IFINDEX</a>))
    {
      api.ifindex_num = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);
      ifindex = <a class="code" href="stream_8c.html#af857bfab0cbe7d5681e9108b58f939f2">stream_getl</a> (s);
    }
  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#abe498bb81bfbda17757173ef23e25179">ZAPI_MESSAGE_DISTANCE</a>))
    api.distance = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);
  <span class="keywordflow">else</span>
    api.distance = 0;
  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#a4a5d60df1ef02f794476ea1daa6ba024">ZAPI_MESSAGE_METRIC</a>))
    api.metric = <a class="code" href="stream_8c.html#af857bfab0cbe7d5681e9108b58f939f2">stream_getl</a> (s);
  <span class="keywordflow">else</span>
    api.metric = 0;

  <span class="keywordflow">if</span> (command == <a class="code" href="zebra_8h.html#a2d0f19502bde040501c7ad64bc955739">ZEBRA_IPV6_ROUTE_ADD</a>)
    <a class="code" href="ripngd_8c.html#a8c632303768357a09888dd8081c4c15e">ripng_redistribute_add</a> (api.type, <a class="code" href="ripngd_8h.html#ac5127dcb031038eab87f42097d5b72e4">RIPNG_ROUTE_REDISTRIBUTE</a>, &amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, ifindex, &amp;<a class="code" href="structnexthop.html">nexthop</a>);
  <span class="keywordflow">else</span>
    <a class="code" href="ripngd_8c.html#afb915914d0dc2e8129f63bccd8dd53a3">ripng_redistribute_delete</a> (api.type, <a class="code" href="ripngd_8h.html#ac5127dcb031038eab87f42097d5b72e4">RIPNG_ROUTE_REDISTRIBUTE</a>, &amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, ifindex);

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a8fb6e54f70f927612f3459fa3b8543ad"></a><!-- doxytag: member="ripng_zebra.c::zebra_config_write" ref="a8fb6e54f70f927612f3459fa3b8543ad" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int zebra_config_write </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00524">524</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (! <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7867dfbcd3b504d2edd22f70ef4277b6">enable</a>)
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;no router zebra%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">return</span> 1;
    }
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (! <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>])
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;router zebra%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; no redistribute ripng%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">return</span> 1;
    }
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a36cf186903c5fc5362f57be64955055a"></a><!-- doxytag: member="ripng_zebra.c::zebra_init" ref="a36cf186903c5fc5362f57be64955055a" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void zebra_init </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00549">549</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="comment">/* Allocate zebra structure. */</span>
  <a class="code" href="structzclient.html">zclient</a> = <a class="code" href="zclient_8c.html#aa521f2a71596b1dc50f76fcb57dff30b">zclient_new</a> ();
  <a class="code" href="zclient_8c.html#ac649a246f405850a3ade72de002745e3">zclient_init</a> (<a class="code" href="structzclient.html">zclient</a>, <a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>);

  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a45465702e655472187e9efc3c1734daa">interface_up</a> = <a class="code" href="ripng__interface_8c.html#a2a30426a653c03bd458a32de0db22105">ripng_interface_up</a>;
  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a426b5e0ec3b5ad8843eb42deaa4fe335">interface_down</a> = <a class="code" href="ripng__interface_8c.html#a5c1ea425bf51e65e0cb711f1eaff0b40">ripng_interface_down</a>;
  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a42e63c358fc87552ca16a1eea8b69c4f">interface_add</a> = <a class="code" href="ripng__interface_8c.html#a98b3d58f237ec80d68b42f19ee9dc22b">ripng_interface_add</a>;
  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a59d608db28363c236285c6323d5697ab">interface_delete</a> = <a class="code" href="ripng__interface_8c.html#a4c44b4032fe5057adfe136260014d838">ripng_interface_delete</a>;
  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a75ee908bb229653f271356b982fa76e7">interface_address_add</a> = <a class="code" href="ripng__interface_8c.html#a02657a507a4a59611bdffecc2442d5b4">ripng_interface_address_add</a>;
  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a3494b722f85fe14ff8c99ddae54bad94">interface_address_delete</a> = <a class="code" href="ripng__interface_8c.html#a87fc55ef22c1388e257f0faf9c00cfa7">ripng_interface_address_delete</a>;
  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a9d185464cca684ac3d024ec4be7b9881">ipv6_route_add</a> = <a class="code" href="ripng__zebra_8c.html#a7e9988e480c239ce0e4dc5841f34b99d">ripng_zebra_read_ipv6</a>;
  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a86d1ece8718111eee4bdd79ca320e8ea">ipv6_route_delete</a> = <a class="code" href="ripng__zebra_8c.html#a7e9988e480c239ce0e4dc5841f34b99d">ripng_zebra_read_ipv6</a>;
  
  <span class="comment">/* Install zebra node. */</span>
  <a class="code" href="command_8c.html#a7ee8a7c258e1e5a6e3ff6173dd1658e3">install_node</a> (&amp;<a class="code" href="ripng__zebra_8c.html#a6683c482f9e771c44b2279e90606739e">zebra_node</a>, <a class="code" href="ripng__zebra_8c.html#a8fb6e54f70f927612f3459fa3b8543ad">zebra_config_write</a>);

  <span class="comment">/* Install command element for zebra node. */</span> 
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;router_zebra_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;no_router_zebra_cmd);
  <a class="code" href="command_8h.html#affb2f399c88b8a225b2719bbe928e4de">install_default</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682af7fc20f627618eee254477289b890df3">ZEBRA_NODE</a>);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682af7fc20f627618eee254477289b890df3">ZEBRA_NODE</a>, &amp;ripng_redistribute_ripng_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682af7fc20f627618eee254477289b890df3">ZEBRA_NODE</a>, &amp;no_ripng_redistribute_ripng_cmd);

  <span class="comment">/* Install command elements to ripng node */</span>
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;ripng_redistribute_type_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;ripng_redistribute_type_routemap_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;ripng_redistribute_type_metric_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;ripng_redistribute_type_metric_routemap_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;no_ripng_redistribute_type_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;no_ripng_redistribute_type_routemap_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;no_ripng_redistribute_type_metric_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;no_ripng_redistribute_type_metric_routemap_cmd);
}
</pre></div>
</div>
</div>
<hr/><h2>Variable Documentation</h2>
<a class="anchor" id="ae816b22ec090ba15c2688646b7bf6335"></a><!-- doxytag: member="ripng_zebra.c::redist_type" ref="ae816b22ec090ba15c2688646b7bf6335" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct { ... }   <a class="el" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[]<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="af25d6dc49269fa2003ac7c7fa6f13915"></a><!-- doxytag: member="ripng_zebra.c::str" ref="af25d6dc49269fa2003ac7c7fa6f13915" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* <a class="el" href="ripng__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00212">212</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>

</div>
</div>
<a class="anchor" id="ab9048f4db5a930cf7650cfe16e1f7c4d"></a><!-- doxytag: member="ripng_zebra.c::str_min_len" ref="ab9048f4db5a930cf7650cfe16e1f7c4d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="ripng__zebra_8c.html#ab9048f4db5a930cf7650cfe16e1f7c4d">str_min_len</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00211">211</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>

</div>
</div>
<a class="anchor" id="ac765329451135abec74c45e1897abf26"></a><!-- doxytag: member="ripng_zebra.c::type" ref="ac765329451135abec74c45e1897abf26" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00210">210</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>

</div>
</div>
<a class="anchor" id="abe1502972ba9aa40adc080e419c496bf"></a><!-- doxytag: member="ripng_zebra.c::zclient" ref="abe1502972ba9aa40adc080e419c496bf" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structzclient.html">zclient</a>* <a class="el" href="structzclient.html">zclient</a> = NULL</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00035">35</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>

</div>
</div>
<a class="anchor" id="a6683c482f9e771c44b2279e90606739e"></a><!-- doxytag: member="ripng_zebra.c::zebra_node" ref="a6683c482f9e771c44b2279e90606739e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structcmd__node.html">cmd_node</a> <a class="el" href="vtysh_8c.html#a6683c482f9e771c44b2279e90606739e">zebra_node</a><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment">
{
  <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682af7fc20f627618eee254477289b890df3">ZEBRA_NODE</a>,
  <span class="stringliteral">&quot;%s(config-router)# &quot;</span>,
}
</pre></div>
<p>Definition at line <a class="el" href="ripng__zebra_8c_source.html#l00541">541</a> of file <a class="el" href="ripng__zebra_8c_source.html">ripng_zebra.c</a>.</p>

</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="ripng__zebra_8c.html">ripng_zebra.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:36 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
