<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: lib/if.h File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('if_8h.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Defines</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">lib/if.h File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="linklist_8h_source.html">linklist.h</a>&quot;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for if.h:</div>
<div class="dyncontent">
<div class="center"><img src="if_8h__incl.png" border="0" usemap="#lib_2if_8h" alt=""/></div>
<map name="lib_2if_8h" id="lib_2if_8h">
<area shape="rect" id="node3" href="linklist_8h.html" title="linklist.h" alt="" coords="5,80,75,107"/></map>
</div>
</div>
<p><a href="if_8h_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structinterface.html">interface</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structconnected.html">connected</a></td></tr>
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#ab819b6f1f4d393be3e866af97297b9cb">INTERFACE_NAMSIZ</a>&#160;&#160;&#160;20</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#ab832c2d3db56c12ab8e78f275ebc0c94">INTERFACE_HWADDR_MAX</a>&#160;&#160;&#160;20</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a18949aeeb4a8fbe7e3be43e6bbe86527">IFINDEX_INTERNAL</a>&#160;&#160;&#160;0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a977548125c39a6ba021b2d0fde8f5a52">ZEBRA_INTERFACE_ACTIVE</a>&#160;&#160;&#160;(1 &lt;&lt; 0)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a5d71f799d30585759656ac1dc387a9c2">ZEBRA_INTERFACE_SUB</a>&#160;&#160;&#160;(1 &lt;&lt; 1)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#aa9e7c65b5cb18f24bd6f3e0e0d37181d">ZEBRA_INTERFACE_LINKDETECTION</a>&#160;&#160;&#160;(1 &lt;&lt; 2)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a56abda52e44cc999ccddf7b63bc14eca">ZEBRA_IFC_REAL</a>&#160;&#160;&#160;(1 &lt;&lt; 0)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a4c3561e2d67366e175998d69dbc87874">ZEBRA_IFC_CONFIGURED</a>&#160;&#160;&#160;(1 &lt;&lt; 1)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a87a060af9e9971eefeb1584beaceecf6">ZEBRA_IFA_SECONDARY</a>&#160;&#160;&#160;(1 &lt;&lt; 0)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#aa84309c25e4cee681e361d14404618e9">ZEBRA_IFA_PEER</a>&#160;&#160;&#160;(1 &lt;&lt; 1)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a2443297a4d8f44cc5d2ce38fcbf345f2">CONNECTED_PEER</a>(C)&#160;&#160;&#160;CHECK_FLAG((C)-&gt;<a class="el" href="structflags.html">flags</a>, ZEBRA_IFA_PEER)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#aab0146ae87d1ab7ec3235003ad8ae4ff">CONNECTED_PREFIX</a>(C)&#160;&#160;&#160;(CONNECTED_PEER(C) ? (C)-&gt;destination : (C)-&gt;address)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#ad5c7865cf89efe7aef6ae2c7919ac92b">CONNECTED_ID</a>(C)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a4185c142d0c9619a6cab25061dfd50f3">IF_NEW_HOOK</a>&#160;&#160;&#160;0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#afa0a12fa62fd3fd8b5fb9a1b917f3afa">IF_DELETE_HOOK</a>&#160;&#160;&#160;1</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a64f791f858692052c2a780d76102ab0d">IFF_NOTRAILERS</a>&#160;&#160;&#160;0x0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a293b646a578873cb1f32782dff7f0c69">IFF_OACTIVE</a>&#160;&#160;&#160;0x0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a91db9a080607f18baefeabd64d944c96">IFF_SIMPLEX</a>&#160;&#160;&#160;0x0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a278f2e3a5ac6116900b559f54a074c19">IFF_LINK0</a>&#160;&#160;&#160;0x0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#af887b51ca0fbf010dcca80a6453f21bd">IFF_LINK1</a>&#160;&#160;&#160;0x0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#aebfd59be70fb92ad8fee2c61518f9cbb">IFF_LINK2</a>&#160;&#160;&#160;0x0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a618b82c91d363cdd3479ab18618315c0">IFF_NOXMIT</a>&#160;&#160;&#160;0x0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#aca9a7d69c855815a3598393630f02b71">IFF_NORTEXCH</a>&#160;&#160;&#160;0x0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a0e1cfe137faa1f83088d136373e22041">IFF_IPV4</a>&#160;&#160;&#160;0x0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#aea8814a8036af8b308ad5ea6d32eac4b">IFF_IPV6</a>&#160;&#160;&#160;0x0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#acaaa02017e5735b2d94b78191b2d1e31">IFF_VIRTUAL</a>&#160;&#160;&#160;0x0</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#aa3525806ee9d27724fadf4f79951476f">if_cmp_func</a> (struct <a class="el" href="structinterface.html">interface</a> *, struct <a class="el" href="structinterface.html">interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a5a7398837ed51febeaea57200f118fd5">if_create</a> (const char *<a class="el" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, int namelen)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a7df780be25639ee94def7d576aff6a93">if_lookup_by_index</a> (unsigned int)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a7ce6b536f68fcdf203a3d9e9440126b1">if_lookup_exact_address</a> (struct in_addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a5e03f06e60287150ae73beca7123dde0">if_lookup_address</a> (struct in_addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a4c51129ec4b6f1e1e43d565617305b1f">if_lookup_by_name</a> (const char *ifname)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a97685517a538f4b33a84bea507fa4388">if_get_by_name</a> (const char *ifname)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a3521ba803e3550c2d53958caf80f4923">if_lookup_by_name_len</a> (const char *ifname, size_t namelen)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a7048a1dd39bb7a130e692c500c8b5a03">if_get_by_name_len</a> (const char *ifname, size_t namelen)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a25148858d43707d57e942c1977ac1f2d">if_delete_retain</a> (struct <a class="el" href="structinterface.html">interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#abd2d53541b9e9c9c2f92a5af06cc085f">if_delete</a> (struct <a class="el" href="structinterface.html">interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a400a9ba3d56a5350d9649b81e7faa403">if_is_up</a> (struct <a class="el" href="structinterface.html">interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#ad4e8aa716de0cf06dcd68228de80db33">if_is_running</a> (struct <a class="el" href="structinterface.html">interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#ae2041cc0b979cd9b85cfcc69801e4795">if_is_operative</a> (struct <a class="el" href="structinterface.html">interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a0443faea3ab1b0f0c27b976a3d8ea585">if_is_loopback</a> (struct <a class="el" href="structinterface.html">interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#adc3cd2325d7eec22ffeecd2ab22cbd1e">if_is_broadcast</a> (struct <a class="el" href="structinterface.html">interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a4f322ad81482a600efcf6cdd995669e9">if_is_pointopoint</a> (struct <a class="el" href="structinterface.html">interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a2f5778a1add1a190d9d70f661fd548a5">if_is_multicast</a> (struct <a class="el" href="structinterface.html">interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a5f82f924459eaf3f6e67b43ef8752756">if_add_hook</a> (int, int(*)(struct <a class="el" href="structinterface.html">interface</a> *))</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#ac78cad8082fa880e50b2c945f8a3c33d">if_init</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#ab43357666e54f725d36b708b260f83f6">if_dump_all</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#ab68b54757a5be35833b9e0830e0fc399">if_flag_dump</a> (unsigned long)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a50961bcebdf81b2e716fb893d21f356f">ifindex2ifname</a> (unsigned int)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#ad46dfb8eaac63d952090223cce396b12">ifname2ifindex</a> (const char *ifname)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structconnected.html">connected</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a3f0f3d92c824863a40af915d7f540cc5">connected_new</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a9bcb8ce4d9a8f6efbdbcdcd2792ce474">connected_free</a> (struct <a class="el" href="structconnected.html">connected</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a226042f73bcb2ea3690686cb17baa8f8">connected_add</a> (struct <a class="el" href="structinterface.html">interface</a> *, struct <a class="el" href="structconnected.html">connected</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structconnected.html">connected</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#abea5f66dccb43c9d38c843d3124205fe">connected_add_by_prefix</a> (struct <a class="el" href="structinterface.html">interface</a> *, struct <a class="el" href="structprefix.html">prefix</a> *, struct <a class="el" href="structprefix.html">prefix</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structconnected.html">connected</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#ab96e9000f436410220d5a28fb476da2d">connected_delete_by_prefix</a> (struct <a class="el" href="structinterface.html">interface</a> *, struct <a class="el" href="structprefix.html">prefix</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structconnected.html">connected</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#af38898f2a336dae8d5aa8010b8398511">connected_lookup_address</a> (struct <a class="el" href="structinterface.html">interface</a> *, struct in_addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a18bc744caaba3d337f984f0cad85522e">if_nametoindex</a> (const char *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#afb50310ad2d4ecc285edfa112563c206">if_indextoname</a> (unsigned int, char *)</td></tr>
<tr><td colspan="2"><h2><a name="var-members"></a>
Variables</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structlist.html">list</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structcmd__element.html">cmd_element</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a51777a76e1c996fcf81ab577db829158">interface_desc_cmd</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structcmd__element.html">cmd_element</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#aee31b677aae5a7d464c06d1aabc3f87a">no_interface_desc_cmd</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structcmd__element.html">cmd_element</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#ab6e8f13999936ceba12d9a8e36484c49">interface_cmd</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structcmd__element.html">cmd_element</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a990fb34f428b4c81d006a48ae14f6084">no_interface_cmd</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structcmd__element.html">cmd_element</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#ab5081a8a2bbf7ff58d5ec4b6e76b7981">interface_pseudo_cmd</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structcmd__element.html">cmd_element</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a8ef313e1f391c1050a94791c20086aee">no_interface_pseudo_cmd</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structcmd__element.html">cmd_element</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if_8h.html#a3c70e0d1c13baf8f55bb7ed45742b3b5">show_address_cmd</a></td></tr>
</table>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="ad5c7865cf89efe7aef6ae2c7919ac92b"></a><!-- doxytag: member="if.h::CONNECTED_ID" ref="ad5c7865cf89efe7aef6ae2c7919ac92b" args="(C)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CONNECTED_ID</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">C</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment">((<a class="code" href="if_8h.html#a2443297a4d8f44cc5d2ce38fcbf345f2">CONNECTED_PEER</a>(C) &amp;&amp; !<a class="code" href="prefix_8c.html#a8c5d68665a4b036a361330bee254318e">prefix_match</a>((C)-&gt;destination, (C)-&gt;address)) ?\
     (C)-&gt;destination : (C)-&gt;address)
</pre></div>
<p>Definition at line <a class="el" href="if_8h_source.html#l00186">186</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="a2443297a4d8f44cc5d2ce38fcbf345f2"></a><!-- doxytag: member="if.h::CONNECTED_PEER" ref="a2443297a4d8f44cc5d2ce38fcbf345f2" args="(C)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CONNECTED_PEER</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">C</td><td>)</td>
          <td>&#160;&#160;&#160;CHECK_FLAG((C)-&gt;<a class="el" href="structflags.html">flags</a>, ZEBRA_IFA_PEER)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00178">178</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="aab0146ae87d1ab7ec3235003ad8ae4ff"></a><!-- doxytag: member="if.h::CONNECTED_PREFIX" ref="aab0146ae87d1ab7ec3235003ad8ae4ff" args="(C)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CONNECTED_PREFIX</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">C</td><td>)</td>
          <td>&#160;&#160;&#160;(CONNECTED_PEER(C) ? (C)-&gt;destination : (C)-&gt;address)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00181">181</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="afa0a12fa62fd3fd8b5fb9a1b917f3afa"></a><!-- doxytag: member="if.h::IF_DELETE_HOOK" ref="afa0a12fa62fd3fd8b5fb9a1b917f3afa" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IF_DELETE_HOOK&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00192">192</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="a4185c142d0c9619a6cab25061dfd50f3"></a><!-- doxytag: member="if.h::IF_NEW_HOOK" ref="a4185c142d0c9619a6cab25061dfd50f3" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IF_NEW_HOOK&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00191">191</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="a0e1cfe137faa1f83088d136373e22041"></a><!-- doxytag: member="if.h::IFF_IPV4" ref="a0e1cfe137faa1f83088d136373e22041" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IFF_IPV4&#160;&#160;&#160;0x0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00222">222</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="aea8814a8036af8b308ad5ea6d32eac4b"></a><!-- doxytag: member="if.h::IFF_IPV6" ref="aea8814a8036af8b308ad5ea6d32eac4b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IFF_IPV6&#160;&#160;&#160;0x0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00225">225</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="a278f2e3a5ac6116900b559f54a074c19"></a><!-- doxytag: member="if.h::IFF_LINK0" ref="a278f2e3a5ac6116900b559f54a074c19" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IFF_LINK0&#160;&#160;&#160;0x0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00207">207</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="af887b51ca0fbf010dcca80a6453f21bd"></a><!-- doxytag: member="if.h::IFF_LINK1" ref="af887b51ca0fbf010dcca80a6453f21bd" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IFF_LINK1&#160;&#160;&#160;0x0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00210">210</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="aebfd59be70fb92ad8fee2c61518f9cbb"></a><!-- doxytag: member="if.h::IFF_LINK2" ref="aebfd59be70fb92ad8fee2c61518f9cbb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IFF_LINK2&#160;&#160;&#160;0x0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00213">213</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="aca9a7d69c855815a3598393630f02b71"></a><!-- doxytag: member="if.h::IFF_NORTEXCH" ref="aca9a7d69c855815a3598393630f02b71" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IFF_NORTEXCH&#160;&#160;&#160;0x0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00219">219</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="a64f791f858692052c2a780d76102ab0d"></a><!-- doxytag: member="if.h::IFF_NOTRAILERS" ref="a64f791f858692052c2a780d76102ab0d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IFF_NOTRAILERS&#160;&#160;&#160;0x0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00198">198</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="a618b82c91d363cdd3479ab18618315c0"></a><!-- doxytag: member="if.h::IFF_NOXMIT" ref="a618b82c91d363cdd3479ab18618315c0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IFF_NOXMIT&#160;&#160;&#160;0x0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00216">216</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="a293b646a578873cb1f32782dff7f0c69"></a><!-- doxytag: member="if.h::IFF_OACTIVE" ref="a293b646a578873cb1f32782dff7f0c69" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IFF_OACTIVE&#160;&#160;&#160;0x0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00201">201</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="a91db9a080607f18baefeabd64d944c96"></a><!-- doxytag: member="if.h::IFF_SIMPLEX" ref="a91db9a080607f18baefeabd64d944c96" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IFF_SIMPLEX&#160;&#160;&#160;0x0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00204">204</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="acaaa02017e5735b2d94b78191b2d1e31"></a><!-- doxytag: member="if.h::IFF_VIRTUAL" ref="acaaa02017e5735b2d94b78191b2d1e31" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IFF_VIRTUAL&#160;&#160;&#160;0x0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00228">228</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="a18949aeeb4a8fbe7e3be43e6bbe86527"></a><!-- doxytag: member="if.h::IFINDEX_INTERNAL" ref="a18949aeeb4a8fbe7e3be43e6bbe86527" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IFINDEX_INTERNAL&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00086">86</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab832c2d3db56c12ab8e78f275ebc0c94"></a><!-- doxytag: member="if.h::INTERFACE_HWADDR_MAX" ref="ab832c2d3db56c12ab8e78f275ebc0c94" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define INTERFACE_HWADDR_MAX&#160;&#160;&#160;20</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00037">37</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab819b6f1f4d393be3e866af97297b9cb"></a><!-- doxytag: member="if.h::INTERFACE_NAMSIZ" ref="ab819b6f1f4d393be3e866af97297b9cb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define INTERFACE_NAMSIZ&#160;&#160;&#160;20</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00036">36</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa84309c25e4cee681e361d14404618e9"></a><!-- doxytag: member="if.h::ZEBRA_IFA_PEER" ref="aa84309c25e4cee681e361d14404618e9" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ZEBRA_IFA_PEER&#160;&#160;&#160;(1 &lt;&lt; 1)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00158">158</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="a87a060af9e9971eefeb1584beaceecf6"></a><!-- doxytag: member="if.h::ZEBRA_IFA_SECONDARY" ref="a87a060af9e9971eefeb1584beaceecf6" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ZEBRA_IFA_SECONDARY&#160;&#160;&#160;(1 &lt;&lt; 0)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00157">157</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="a4c3561e2d67366e175998d69dbc87874"></a><!-- doxytag: member="if.h::ZEBRA_IFC_CONFIGURED" ref="a4c3561e2d67366e175998d69dbc87874" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ZEBRA_IFC_CONFIGURED&#160;&#160;&#160;(1 &lt;&lt; 1)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00147">147</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="a56abda52e44cc999ccddf7b63bc14eca"></a><!-- doxytag: member="if.h::ZEBRA_IFC_REAL" ref="a56abda52e44cc999ccddf7b63bc14eca" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ZEBRA_IFC_REAL&#160;&#160;&#160;(1 &lt;&lt; 0)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00146">146</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="a977548125c39a6ba021b2d0fde8f5a52"></a><!-- doxytag: member="if.h::ZEBRA_INTERFACE_ACTIVE" ref="a977548125c39a6ba021b2d0fde8f5a52" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ZEBRA_INTERFACE_ACTIVE&#160;&#160;&#160;(1 &lt;&lt; 0)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00090">90</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa9e7c65b5cb18f24bd6f3e0e0d37181d"></a><!-- doxytag: member="if.h::ZEBRA_INTERFACE_LINKDETECTION" ref="aa9e7c65b5cb18f24bd6f3e0e0d37181d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ZEBRA_INTERFACE_LINKDETECTION&#160;&#160;&#160;(1 &lt;&lt; 2)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00092">92</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<a class="anchor" id="a5d71f799d30585759656ac1dc387a9c2"></a><!-- doxytag: member="if.h::ZEBRA_INTERFACE_SUB" ref="a5d71f799d30585759656ac1dc387a9c2" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ZEBRA_INTERFACE_SUB&#160;&#160;&#160;(1 &lt;&lt; 1)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8h_source.html#l00091">91</a> of file <a class="el" href="if_8h_source.html">if.h</a>.</p>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a226042f73bcb2ea3690686cb17baa8f8"></a><!-- doxytag: member="if.h::connected_add" ref="a226042f73bcb2ea3690686cb17baa8f8" args="(struct interface *, struct connected *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void connected_add </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structconnected.html">connected</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="abea5f66dccb43c9d38c843d3124205fe"></a><!-- doxytag: member="if.h::connected_add_by_prefix" ref="abea5f66dccb43c9d38c843d3124205fe" args="(struct interface *, struct prefix *, struct prefix *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structconnected.html">connected</a>* connected_add_by_prefix </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structprefix.html">prefix</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structprefix.html">prefix</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00737">737</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structconnected.html">connected</a> *ifc;

  <span class="comment">/* Allocate new connected address. */</span>
  ifc = <a class="code" href="if_8c.html#a3f0f3d92c824863a40af915d7f540cc5">connected_new</a> ();
  ifc-&gt;<a class="code" href="structconnected.html#a93c575385a71507f8c29ec26344d09d3">ifp</a> = <a class="code" href="structconnected.html#a93c575385a71507f8c29ec26344d09d3">ifp</a>;

  <span class="comment">/* Fetch interface address */</span>
  ifc-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a> = <a class="code" href="prefix_8c.html#a334dfe0b68e0de68379895a8ff3057e7">prefix_new</a>();
  <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (ifc-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>, <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a>));

  <span class="comment">/* Fetch dest address */</span>
  <span class="keywordflow">if</span> (<a class="code" href="structconnected.html#ad13a382a19c45aaa4e5670e1422245ff">destination</a>)
    {
      ifc-&gt;<a class="code" href="structconnected.html#ad13a382a19c45aaa4e5670e1422245ff">destination</a> = <a class="code" href="prefix_8c.html#a334dfe0b68e0de68379895a8ff3057e7">prefix_new</a>();
      <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (ifc-&gt;<a class="code" href="structconnected.html#ad13a382a19c45aaa4e5670e1422245ff">destination</a>, <a class="code" href="structconnected.html#ad13a382a19c45aaa4e5670e1422245ff">destination</a>, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a>));
    }

  <span class="comment">/* Add connected address to the interface. */</span>
  <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (<a class="code" href="structconnected.html#a93c575385a71507f8c29ec26344d09d3">ifp</a>-&gt;<a class="code" href="structinterface.html#ac7c47b5cc1df81e51bf1ecea97b4d4b3">connected</a>, ifc);
  <span class="keywordflow">return</span> ifc;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab96e9000f436410220d5a28fb476da2d"></a><!-- doxytag: member="if.h::connected_delete_by_prefix" ref="ab96e9000f436410220d5a28fb476da2d" args="(struct interface *, struct prefix *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structconnected.html">connected</a>* connected_delete_by_prefix </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structprefix.html">prefix</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00689">689</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
  <span class="keyword">struct </span><a class="code" href="structconnected.html">connected</a> *ifc;

  <span class="comment">/* In case of same prefix come, replace it with new one. */</span>
  <span class="keywordflow">for</span> (node = <a class="code" href="linklist_8h.html#a3d4492ca03b023aeecd4d6b0cdaa16fb">listhead</a> (<a class="code" href="structconnected.html#a93c575385a71507f8c29ec26344d09d3">ifp</a>-&gt;<a class="code" href="structinterface.html#ac7c47b5cc1df81e51bf1ecea97b4d4b3">connected</a>); node; node = next)
    {
      ifc = <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (node);
      next = node-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;

      <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a104032a1785f3695ab2b03e6d4e17001">connected_same_prefix</a> (ifc-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>, <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>))
    {
      <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (<a class="code" href="structconnected.html#a93c575385a71507f8c29ec26344d09d3">ifp</a>-&gt;<a class="code" href="structinterface.html#ac7c47b5cc1df81e51bf1ecea97b4d4b3">connected</a>, ifc);
      <span class="keywordflow">return</span> ifc;
    }
    }
  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9bcb8ce4d9a8f6efbdbcdcd2792ce474"></a><!-- doxytag: member="if.h::connected_free" ref="a9bcb8ce4d9a8f6efbdbcdcd2792ce474" args="(struct connected *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void connected_free </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structconnected.html">connected</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00630">630</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structconnected.html">connected</a>-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>)
    <a class="code" href="prefix_8c.html#a5d8a68bc25fb973c471e61aaeb76a015">prefix_free</a> (<a class="code" href="structconnected.html">connected</a>-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>);

  <span class="keywordflow">if</span> (<a class="code" href="structconnected.html">connected</a>-&gt;<a class="code" href="structconnected.html#ad13a382a19c45aaa4e5670e1422245ff">destination</a>)
    <a class="code" href="prefix_8c.html#a5d8a68bc25fb973c471e61aaeb76a015">prefix_free</a> (<a class="code" href="structconnected.html">connected</a>-&gt;<a class="code" href="structconnected.html#ad13a382a19c45aaa4e5670e1422245ff">destination</a>);

  <span class="keywordflow">if</span> (<a class="code" href="structconnected.html">connected</a>-&gt;<a class="code" href="structconnected.html#abf60adc50689971ec30b6161150ffd2c">label</a>)
    <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167bac8ad972fdcb4d318c2a41f564e0ee1de">MTYPE_CONNECTED_LABEL</a>, <a class="code" href="structconnected.html">connected</a>-&gt;<a class="code" href="structconnected.html#abf60adc50689971ec30b6161150ffd2c">label</a>);

  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167bade071d57fa599fdb19dbef491312aed2">MTYPE_CONNECTED</a>, <a class="code" href="structconnected.html">connected</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="af38898f2a336dae8d5aa8010b8398511"></a><!-- doxytag: member="if.h::connected_lookup_address" ref="af38898f2a336dae8d5aa8010b8398511" args="(struct interface *, struct in_addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structconnected.html">connected</a>* connected_lookup_address </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00713">713</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> addr;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *cnode;
  <span class="keyword">struct </span><a class="code" href="structconnected.html">connected</a> *c;
  <span class="keyword">struct </span><a class="code" href="structconnected.html">connected</a> *match;

  addr.family = AF_INET;
  addr.u.prefix4 = dst;
  addr.prefixlen = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;

  match = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="structconnected.html#a93c575385a71507f8c29ec26344d09d3">ifp</a>-&gt;<a class="code" href="structinterface.html#ac7c47b5cc1df81e51bf1ecea97b4d4b3">connected</a>, cnode, c))
    {
      <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a> &amp;&amp; (c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == AF_INET) &amp;&amp;
      <a class="code" href="prefix_8c.html#a8c5d68665a4b036a361330bee254318e">prefix_match</a>(<a class="code" href="if_8h.html#aab0146ae87d1ab7ec3235003ad8ae4ff">CONNECTED_PREFIX</a>(c), &amp;addr) &amp;&amp;
      (!match || (c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> &gt; match-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>)))
    match = c;
    }
  <span class="keywordflow">return</span> match;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3f0f3d92c824863a40af915d7f540cc5"></a><!-- doxytag: member="if.h::connected_new" ref="a3f0f3d92c824863a40af915d7f540cc5" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structconnected.html">connected</a>* connected_new </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00623">623</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167bade071d57fa599fdb19dbef491312aed2">MTYPE_CONNECTED</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structconnected.html">connected</a>));
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5f82f924459eaf3f6e67b43ef8752756"></a><!-- doxytag: member="if.h::if_add_hook" ref="a5f82f924459eaf3f6e67b43ef8752756" args="(int, int(*)(struct interface *))" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void if_add_hook </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int(*)(struct <a class="el" href="structinterface.html">interface</a> *)&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="aa3525806ee9d27724fadf4f79951476f"></a><!-- doxytag: member="if.h::if_cmp_func" ref="aa3525806ee9d27724fadf4f79951476f" args="(struct interface *, struct interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int if_cmp_func </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00058">58</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> l1, l2;
  <span class="keywordtype">long</span> <span class="keywordtype">int</span> x1, x2;
  <span class="keywordtype">char</span> *p1, *p2;
  <span class="keywordtype">int</span> res;

  p1 = ifp1-&gt;name;
  p2 = ifp2-&gt;name;

  <span class="keywordflow">while</span> (*p1 &amp;&amp; *p2) {
    <span class="comment">/* look up to any number */</span>
    l1 = strcspn(p1, <span class="stringliteral">&quot;0123456789&quot;</span>);
    l2 = strcspn(p2, <span class="stringliteral">&quot;0123456789&quot;</span>);

    <span class="comment">/* name lengths are different -&gt; compare names */</span>
    <span class="keywordflow">if</span> (l1 != l2)
      <span class="keywordflow">return</span> (strcmp(p1, p2));

    <span class="comment">/* Note that this relies on all numbers being less than all letters, so</span>
<span class="comment">     * that de0 &lt; del0.</span>
<span class="comment">     */</span>
    res = strncmp(p1, p2, l1);

    <span class="comment">/* names are different -&gt; compare them */</span>
    <span class="keywordflow">if</span> (res)
      <span class="keywordflow">return</span> res;

    <span class="comment">/* with identical name part, go to numeric part */</span>
    p1 += l1;
    p2 += l1;

    <span class="keywordflow">if</span> (!*p1) 
      <span class="keywordflow">return</span> -1;
    <span class="keywordflow">if</span> (!*p2) 
      <span class="keywordflow">return</span> 1;

    x1 = strtol(p1, &amp;p1, 10);
    x2 = strtol(p2, &amp;p2, 10);

    <span class="comment">/* let&#39;s compare numbers now */</span>
    <span class="keywordflow">if</span> (x1 &lt; x2)
      <span class="keywordflow">return</span> -1;
    <span class="keywordflow">if</span> (x1 &gt; x2)
      <span class="keywordflow">return</span> 1;

    <span class="comment">/* numbers were equal, lets do it again..</span>
<span class="comment">    (it happens with name like &quot;eth123.456:789&quot;) */</span>
  }
  <span class="keywordflow">if</span> (*p1)
    <span class="keywordflow">return</span> 1;
  <span class="keywordflow">if</span> (*p2)
    <span class="keywordflow">return</span> -1;
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5a7398837ed51febeaea57200f118fd5"></a><!-- doxytag: member="if.h::if_create" ref="a5a7398837ed51febeaea57200f118fd5" args="(const char *name, int namelen)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structinterface.html">interface</a>* if_create </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>namelen</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00116">116</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;

  ifp = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba62cc2aae4edfd4f0daa216644001a616">MTYPE_IF</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a>));
  ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a> = <a class="code" href="if_8h.html#a18949aeeb4a8fbe7e3be43e6bbe86527">IFINDEX_INTERNAL</a>;
  
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>);
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (namelen &lt;= <a class="code" href="if_8h.html#ab819b6f1f4d393be3e866af97297b9cb">INTERFACE_NAMSIZ</a>); <span class="comment">/* Need space for &#39;\0&#39; at end. */</span>
  strncpy (ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, <a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, namelen);
  ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>[namelen] = <span class="charliteral">&#39;\0&#39;</span>;
  <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#ac124a74c213f25a0417e3a8d338606f4">if_lookup_by_name</a>(ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <a class="code" href="linklist_8c.html#abfe4a1419e46dc9e1235dcbe6b52a022">listnode_add_sort</a> (<a class="code" href="if_8c.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a>, ifp);
  <span class="keywordflow">else</span>
    <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a>(<span class="stringliteral">&quot;if_create(%s): corruption detected -- interface with this &quot;</span>
         <span class="stringliteral">&quot;name exists already!&quot;</span>, ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
  ifp-&gt;<a class="code" href="structinterface.html#ac7c47b5cc1df81e51bf1ecea97b4d4b3">connected</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
  ifp-&gt;<a class="code" href="structinterface.html#ac7c47b5cc1df81e51bf1ecea97b4d4b3">connected</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = (void (*) (<span class="keywordtype">void</span> *)) <a class="code" href="if_8c.html#aefcfc40d0358af75f26135eb0a33903d">connected_free</a>;

  <span class="keywordflow">if</span> (<a class="code" href="structif__master.html">if_master</a>.<a class="code" href="structif__master.html#ae78cdb3b73c12c7c5bcee0f7f8ea7c25">if_new_hook</a>)
    (*<a class="code" href="structif__master.html">if_master</a>.<a class="code" href="structif__master.html#ae78cdb3b73c12c7c5bcee0f7f8ea7c25">if_new_hook</a>) (ifp);

  <span class="keywordflow">return</span> ifp;
}
</pre></div>
</div>
</div>
<a class="anchor" id="abd2d53541b9e9c9c2f92a5af06cc085f"></a><!-- doxytag: member="if.h::if_delete" ref="abd2d53541b9e9c9c2f92a5af06cc085f" args="(struct interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void if_delete </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00154">154</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (<a class="code" href="if_8c.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a>, ifp);

  <a class="code" href="if_8c.html#a439fd4917061b73dbeef59aac5a0bd5e">if_delete_retain</a>(ifp);

  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba62cc2aae4edfd4f0daa216644001a616">MTYPE_IF</a>, ifp);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a25148858d43707d57e942c1977ac1f2d"></a><!-- doxytag: member="if.h::if_delete_retain" ref="a25148858d43707d57e942c1977ac1f2d" args="(struct interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void if_delete_retain </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00143">143</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structif__master.html">if_master</a>.<a class="code" href="structif__master.html#ab39273a647f4465353cc9ee6946bb626">if_delete_hook</a>)
    (*<a class="code" href="structif__master.html">if_master</a>.<a class="code" href="structif__master.html#ab39273a647f4465353cc9ee6946bb626">if_delete_hook</a>) (ifp);

  <span class="comment">/* Free connected address list */</span>
  <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (ifp-&gt;connected);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab43357666e54f725d36b708b260f83f6"></a><!-- doxytag: member="if.h::if_dump_all" ref="ab43357666e54f725d36b708b260f83f6" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void if_dump_all </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00449">449</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keywordtype">void</span> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="if_8c.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a>, node, p))
    <a class="code" href="if_8c.html#af4a44ae6c69ae02bcd68be451a653a89">if_dump</a> (p);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab68b54757a5be35833b9e0830e0fc399"></a><!-- doxytag: member="if.h::if_flag_dump" ref="ab68b54757a5be35833b9e0830e0fc399" args="(unsigned long)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* if_flag_dump </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>long</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00381">381</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> separator = 0;
  <span class="keyword">static</span> <span class="keywordtype">char</span> logbuf[BUFSIZ];

<span class="preprocessor">#define IFF_OUT_LOG(X,STR) \</span>
<span class="preprocessor">  if (flag &amp; (X)) \</span>
<span class="preprocessor">    { \</span>
<span class="preprocessor">      if (separator) \</span>
<span class="preprocessor">    strlcat (logbuf, &quot;,&quot;, BUFSIZ); \</span>
<span class="preprocessor">      else \</span>
<span class="preprocessor">    separator = 1; \</span>
<span class="preprocessor">      strlcat (logbuf, STR, BUFSIZ); \</span>
<span class="preprocessor">    }</span>
<span class="preprocessor"></span>
  <a class="code" href="str_8c.html#ad9303b16b58d176b8d7da43eec1b99c6" title="Like strncpy but does not 0 fill the buffer and always null terminates.">strlcpy</a> (logbuf, <span class="stringliteral">&quot;&lt;&quot;</span>, BUFSIZ);
  <a class="code" href="if_8c.html#a9a27d3c7cef0fe6fb8315dec5f5324a2">IFF_OUT_LOG</a> (IFF_UP, <span class="stringliteral">&quot;UP&quot;</span>);
  <a class="code" href="if_8c.html#a9a27d3c7cef0fe6fb8315dec5f5324a2">IFF_OUT_LOG</a> (IFF_BROADCAST, <span class="stringliteral">&quot;BROADCAST&quot;</span>);
  <a class="code" href="if_8c.html#a9a27d3c7cef0fe6fb8315dec5f5324a2">IFF_OUT_LOG</a> (IFF_DEBUG, <span class="stringliteral">&quot;DEBUG&quot;</span>);
  <a class="code" href="if_8c.html#a9a27d3c7cef0fe6fb8315dec5f5324a2">IFF_OUT_LOG</a> (IFF_LOOPBACK, <span class="stringliteral">&quot;LOOPBACK&quot;</span>);
  <a class="code" href="if_8c.html#a9a27d3c7cef0fe6fb8315dec5f5324a2">IFF_OUT_LOG</a> (IFF_POINTOPOINT, <span class="stringliteral">&quot;POINTOPOINT&quot;</span>);
  <a class="code" href="if_8c.html#a9a27d3c7cef0fe6fb8315dec5f5324a2">IFF_OUT_LOG</a> (<a class="code" href="if_8h.html#a64f791f858692052c2a780d76102ab0d">IFF_NOTRAILERS</a>, <span class="stringliteral">&quot;NOTRAILERS&quot;</span>);
  <a class="code" href="if_8c.html#a9a27d3c7cef0fe6fb8315dec5f5324a2">IFF_OUT_LOG</a> (IFF_RUNNING, <span class="stringliteral">&quot;RUNNING&quot;</span>);
  <a class="code" href="if_8c.html#a9a27d3c7cef0fe6fb8315dec5f5324a2">IFF_OUT_LOG</a> (IFF_NOARP, <span class="stringliteral">&quot;NOARP&quot;</span>);
  <a class="code" href="if_8c.html#a9a27d3c7cef0fe6fb8315dec5f5324a2">IFF_OUT_LOG</a> (IFF_PROMISC, <span class="stringliteral">&quot;PROMISC&quot;</span>);
  <a class="code" href="if_8c.html#a9a27d3c7cef0fe6fb8315dec5f5324a2">IFF_OUT_LOG</a> (IFF_ALLMULTI, <span class="stringliteral">&quot;ALLMULTI&quot;</span>);
  <a class="code" href="if_8c.html#a9a27d3c7cef0fe6fb8315dec5f5324a2">IFF_OUT_LOG</a> (<a class="code" href="if_8h.html#a293b646a578873cb1f32782dff7f0c69">IFF_OACTIVE</a>, <span class="stringliteral">&quot;OACTIVE&quot;</span>);
  <a class="code" href="if_8c.html#a9a27d3c7cef0fe6fb8315dec5f5324a2">IFF_OUT_LOG</a> (<a class="code" href="if_8h.html#a91db9a080607f18baefeabd64d944c96">IFF_SIMPLEX</a>, <span class="stringliteral">&quot;SIMPLEX&quot;</span>);
  <a class="code" href="if_8c.html#a9a27d3c7cef0fe6fb8315dec5f5324a2">IFF_OUT_LOG</a> (<a class="code" href="if_8h.html#a278f2e3a5ac6116900b559f54a074c19">IFF_LINK0</a>, <span class="stringliteral">&quot;LINK0&quot;</span>);
  <a class="code" href="if_8c.html#a9a27d3c7cef0fe6fb8315dec5f5324a2">IFF_OUT_LOG</a> (<a class="code" href="if_8h.html#af887b51ca0fbf010dcca80a6453f21bd">IFF_LINK1</a>, <span class="stringliteral">&quot;LINK1&quot;</span>);
  <a class="code" href="if_8c.html#a9a27d3c7cef0fe6fb8315dec5f5324a2">IFF_OUT_LOG</a> (<a class="code" href="if_8h.html#aebfd59be70fb92ad8fee2c61518f9cbb">IFF_LINK2</a>, <span class="stringliteral">&quot;LINK2&quot;</span>);
  <a class="code" href="if_8c.html#a9a27d3c7cef0fe6fb8315dec5f5324a2">IFF_OUT_LOG</a> (IFF_MULTICAST, <span class="stringliteral">&quot;MULTICAST&quot;</span>);
  <a class="code" href="if_8c.html#a9a27d3c7cef0fe6fb8315dec5f5324a2">IFF_OUT_LOG</a> (<a class="code" href="if_8h.html#a618b82c91d363cdd3479ab18618315c0">IFF_NOXMIT</a>, <span class="stringliteral">&quot;NOXMIT&quot;</span>);
  <a class="code" href="if_8c.html#a9a27d3c7cef0fe6fb8315dec5f5324a2">IFF_OUT_LOG</a> (<a class="code" href="if_8h.html#aca9a7d69c855815a3598393630f02b71">IFF_NORTEXCH</a>, <span class="stringliteral">&quot;NORTEXCH&quot;</span>);
  <a class="code" href="if_8c.html#a9a27d3c7cef0fe6fb8315dec5f5324a2">IFF_OUT_LOG</a> (<a class="code" href="if_8h.html#acaaa02017e5735b2d94b78191b2d1e31">IFF_VIRTUAL</a>, <span class="stringliteral">&quot;VIRTUAL&quot;</span>);
  <a class="code" href="if_8c.html#a9a27d3c7cef0fe6fb8315dec5f5324a2">IFF_OUT_LOG</a> (<a class="code" href="if_8h.html#a0e1cfe137faa1f83088d136373e22041">IFF_IPV4</a>, <span class="stringliteral">&quot;IPv4&quot;</span>);
  <a class="code" href="if_8c.html#a9a27d3c7cef0fe6fb8315dec5f5324a2">IFF_OUT_LOG</a> (<a class="code" href="if_8h.html#aea8814a8036af8b308ad5ea6d32eac4b">IFF_IPV6</a>, <span class="stringliteral">&quot;IPv6&quot;</span>);

  <a class="code" href="str_8c.html#aaba2fbb66c47f200e8279e7a11bbfe07" title="Like strncat() but does not 0 fill the buffer and always null terminates.">strlcat</a> (logbuf, <span class="stringliteral">&quot;&gt;&quot;</span>, BUFSIZ);

  <span class="keywordflow">return</span> logbuf;
<span class="preprocessor">#undef IFF_OUT_LOG</span>
<span class="preprocessor"></span>}
</pre></div>
</div>
</div>
<a class="anchor" id="a97685517a538f4b33a84bea507fa4388"></a><!-- doxytag: member="if.h::if_get_by_name" ref="a97685517a538f4b33a84bea507fa4388" args="(const char *ifname)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structinterface.html">interface</a>* if_get_by_name </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>ifname</em></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00308">308</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;

  <span class="keywordflow">return</span> ((ifp = <a class="code" href="if_8c.html#ac124a74c213f25a0417e3a8d338606f4">if_lookup_by_name</a>(<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>)) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) ? ifp :
     <a class="code" href="if_8c.html#a5a7398837ed51febeaea57200f118fd5">if_create</a>(<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, strlen(<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>));
}
</pre></div>
</div>
</div>
<a class="anchor" id="a7048a1dd39bb7a130e692c500c8b5a03"></a><!-- doxytag: member="if.h::if_get_by_name_len" ref="a7048a1dd39bb7a130e692c500c8b5a03" args="(const char *ifname, size_t namelen)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structinterface.html">interface</a>* if_get_by_name_len </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>ifname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>namelen</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00317">317</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;

  <span class="keywordflow">return</span> ((ifp = <a class="code" href="if_8c.html#a8ae0929167c87a44b1933994a0254d29">if_lookup_by_name_len</a>(<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, namelen)) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) ? ifp :
     <a class="code" href="if_8c.html#a5a7398837ed51febeaea57200f118fd5">if_create</a>(<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, namelen);
}
</pre></div>
</div>
</div>
<a class="anchor" id="afb50310ad2d4ecc285edfa112563c206"></a><!-- doxytag: member="if.h::if_indextoname" ref="afb50310ad2d4ecc285edfa112563c206" args="(unsigned int, char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* if_indextoname </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>int</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00775">775</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;

  <span class="keywordflow">if</span> (!(ifp = <a class="code" href="if_8c.html#a424dd1e971aee548383cca2b770e2859">if_lookup_by_index</a>(<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>)))
    <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  strncpy (<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, IFNAMSIZ);
  <span class="keywordflow">return</span> ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac78cad8082fa880e50b2c945f8a3c33d"></a><!-- doxytag: member="if.h::if_init" ref="ac78cad8082fa880e50b2c945f8a3c33d" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void if_init </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00867">867</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="if_8c.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<span class="preprocessor">#if 0</span>
<span class="preprocessor"></span>  ifaddr_ipv4_table = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();
<span class="preprocessor">#endif </span><span class="comment">/* ifaddr_ipv4_table */</span>

  <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a>) {
    <a class="code" href="if_8c.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a>-&gt;<a class="code" href="structlist.html#af19c9d07985ca8f95f0098bb0ef98f66">cmp</a> = (int (*)(<span class="keywordtype">void</span> *, <span class="keywordtype">void</span> *))<a class="code" href="if_8c.html#a108649aca79b02d34a138e7123df9b77">if_cmp_func</a>;
    <span class="keywordflow">return</span>;
  }

  memset (&amp;<a class="code" href="structif__master.html">if_master</a>, 0, <span class="keyword">sizeof</span> <a class="code" href="structif__master.html">if_master</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="adc3cd2325d7eec22ffeecd2ab22cbd1e"></a><!-- doxytag: member="if.h::if_is_broadcast" ref="adc3cd2325d7eec22ffeecd2ab22cbd1e" args="(struct interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int if_is_broadcast </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00360">360</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> ifp-&gt;flags &amp; IFF_BROADCAST;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a0443faea3ab1b0f0c27b976a3d8ea585"></a><!-- doxytag: member="if.h::if_is_loopback" ref="a0443faea3ab1b0f0c27b976a3d8ea585" args="(struct interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int if_is_loopback </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00350">350</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="comment">/* XXX: Do this better, eg what if IFF_WHATEVER means X on platform M</span>
<span class="comment">   * but Y on platform N?</span>
<span class="comment">   */</span>
  <span class="keywordflow">return</span> (ifp-&gt;flags &amp; (IFF_LOOPBACK|<a class="code" href="if_8h.html#a618b82c91d363cdd3479ab18618315c0">IFF_NOXMIT</a>|<a class="code" href="if_8h.html#acaaa02017e5735b2d94b78191b2d1e31">IFF_VIRTUAL</a>));
}
</pre></div>
</div>
</div>
<a class="anchor" id="a2f5778a1add1a190d9d70f661fd548a5"></a><!-- doxytag: member="if.h::if_is_multicast" ref="a2f5778a1add1a190d9d70f661fd548a5" args="(struct interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int if_is_multicast </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00374">374</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> ifp-&gt;flags &amp; IFF_MULTICAST;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae2041cc0b979cd9b85cfcc69801e4795"></a><!-- doxytag: member="if.h::if_is_operative" ref="ae2041cc0b979cd9b85cfcc69801e4795" args="(struct interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int if_is_operative </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00342">342</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> ((ifp-&gt;flags &amp; IFF_UP) &amp;&amp;
      (ifp-&gt;flags &amp; IFF_RUNNING || !<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a>(ifp-&gt;status, <a class="code" href="if_8h.html#aa9e7c65b5cb18f24bd6f3e0e0d37181d">ZEBRA_INTERFACE_LINKDETECTION</a>)));
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4f322ad81482a600efcf6cdd995669e9"></a><!-- doxytag: member="if.h::if_is_pointopoint" ref="a4f322ad81482a600efcf6cdd995669e9" args="(struct interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int if_is_pointopoint </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00367">367</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> ifp-&gt;flags &amp; IFF_POINTOPOINT;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad4e8aa716de0cf06dcd68228de80db33"></a><!-- doxytag: member="if.h::if_is_running" ref="ad4e8aa716de0cf06dcd68228de80db33" args="(struct interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int if_is_running </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00334">334</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> ifp-&gt;flags &amp; IFF_RUNNING;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a400a9ba3d56a5350d9649b81e7faa403"></a><!-- doxytag: member="if.h::if_is_up" ref="a400a9ba3d56a5350d9649b81e7faa403" args="(struct interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int if_is_up </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00327">327</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> ifp-&gt;flags &amp; IFF_UP;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5e03f06e60287150ae73beca7123dde0"></a><!-- doxytag: member="if.h::if_lookup_address" ref="a5e03f06e60287150ae73beca7123dde0" args="(struct in_addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structinterface.html">interface</a>* if_lookup_address </td>
          <td>(</td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00273">273</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> addr;
  <span class="keywordtype">int</span> bestlen = 0;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *cnode;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
  <span class="keyword">struct </span><a class="code" href="structconnected.html">connected</a> *c;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *match;

  addr.family = AF_INET;
  addr.u.prefix4 = src;
  addr.prefixlen = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;

  match = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="if_8c.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a>, node, ifp))
    {
      <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ifp-&gt;<a class="code" href="structinterface.html#ac7c47b5cc1df81e51bf1ecea97b4d4b3">connected</a>, cnode, c))
    {
      <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a> &amp;&amp; (c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == AF_INET) &amp;&amp;
          <a class="code" href="prefix_8c.html#a8c5d68665a4b036a361330bee254318e">prefix_match</a>(<a class="code" href="if_8h.html#aab0146ae87d1ab7ec3235003ad8ae4ff">CONNECTED_PREFIX</a>(c), &amp;addr) &amp;&amp;
          (c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> &gt; bestlen))
        {
          bestlen = c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>;
          match = ifp;
        }
    }
    }
  <span class="keywordflow">return</span> match;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a7df780be25639ee94def7d576aff6a93"></a><!-- doxytag: member="if.h::if_lookup_by_index" ref="a7df780be25639ee94def7d576aff6a93" args="(unsigned int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structinterface.html">interface</a>* if_lookup_by_index </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>int</em></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00181">181</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a>(<a class="code" href="if_8c.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a>, node, ifp))
    {
      <span class="keywordflow">if</span> (ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a> == index)
    <span class="keywordflow">return</span> ifp;
    }
  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4c51129ec4b6f1e1e43d565617305b1f"></a><!-- doxytag: member="if.h::if_lookup_by_name" ref="a4c51129ec4b6f1e1e43d565617305b1f" args="(const char *ifname)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structinterface.html">interface</a>* if_lookup_by_name </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>ifname</em></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00214">214</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
  
  <span class="keywordflow">if</span> (<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>)
    <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="if_8c.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a>, node, ifp))
      {
        <span class="keywordflow">if</span> (strcmp(<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>) == 0)
          <span class="keywordflow">return</span> ifp;
      }
  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3521ba803e3550c2d53958caf80f4923"></a><!-- doxytag: member="if.h::if_lookup_by_name_len" ref="a3521ba803e3550c2d53958caf80f4923" args="(const char *ifname, size_t namelen)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structinterface.html">interface</a>* if_lookup_by_name_len </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>ifname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>namelen</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00229">229</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;

  <span class="keywordflow">if</span> (namelen &gt; <a class="code" href="if_8h.html#ab819b6f1f4d393be3e866af97297b9cb">INTERFACE_NAMSIZ</a>)
    <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="if_8c.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a>, node, ifp))
    {
      <span class="keywordflow">if</span> (!<a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a>(<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, namelen) &amp;&amp; (ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>[namelen] == <span class="charliteral">&#39;\0&#39;</span>))
    <span class="keywordflow">return</span> ifp;
    }
  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a7ce6b536f68fcdf203a3d9e9440126b1"></a><!-- doxytag: member="if.h::if_lookup_exact_address" ref="a7ce6b536f68fcdf203a3d9e9440126b1" args="(struct in_addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structinterface.html">interface</a>* if_lookup_exact_address </td>
          <td>(</td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00247">247</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *cnode;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
  <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
  <span class="keyword">struct </span><a class="code" href="structconnected.html">connected</a> *c;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="if_8c.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a>, node, ifp))
    {
      <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ifp-&gt;<a class="code" href="structinterface.html#ac7c47b5cc1df81e51bf1ecea97b4d4b3">connected</a>, cnode, c))
    {
      p = c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>;

      <span class="keywordflow">if</span> (p &amp;&amp; p-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == AF_INET)
        {
          <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;p-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>, &amp;src))
        <span class="keywordflow">return</span> <a class="code" href="structconnected.html#a93c575385a71507f8c29ec26344d09d3">ifp</a>;
        }         
    }
    }
  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a18bc744caaba3d337f984f0cad85522e"></a><!-- doxytag: member="if.h::if_nametoindex" ref="a18bc744caaba3d337f984f0cad85522e" args="(const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int if_nametoindex </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00764">764</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;

  <span class="keywordflow">return</span> ((ifp = <a class="code" href="if_8c.html#a8ae0929167c87a44b1933994a0254d29">if_lookup_by_name_len</a>(<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, <a class="code" href="str_8c.html#afc92d2231e45d19988c7894aa2a07f0c">strnlen</a>(<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, IFNAMSIZ))) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
     ? ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a> : 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a50961bcebdf81b2e716fb893d21f356f"></a><!-- doxytag: member="if.h::ifindex2ifname" ref="a50961bcebdf81b2e716fb893d21f356f" args="(unsigned int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* ifindex2ifname </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>int</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00195">195</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;

  <span class="keywordflow">return</span> ((ifp = <a class="code" href="if_8c.html#a424dd1e971aee548383cca2b770e2859">if_lookup_by_index</a>(index)) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) ?
     ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a> : <span class="stringliteral">&quot;unknown&quot;</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad46dfb8eaac63d952090223cce396b12"></a><!-- doxytag: member="if.h::ifname2ifindex" ref="ad46dfb8eaac63d952090223cce396b12" args="(const char *ifname)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int ifname2ifindex </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>ifname</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00204">204</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;

  <span class="keywordflow">return</span> ((ifp = <a class="code" href="if_8c.html#ac124a74c213f25a0417e3a8d338606f4">if_lookup_by_name</a>(<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>)) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) ? ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>
                                                   : <a class="code" href="if_8h.html#a18949aeeb4a8fbe7e3be43e6bbe86527">IFINDEX_INTERNAL</a>;
}
</pre></div>
</div>
</div>
<hr/><h2>Variable Documentation</h2>
<a class="anchor" id="a45ef98e2f5776142773b95ec60bc294f"></a><!-- doxytag: member="if.h::iflist" ref="a45ef98e2f5776142773b95ec60bc294f" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structlist.html">list</a>* <a class="el" href="if_8h.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if_8c_source.html#l00040">40</a> of file <a class="el" href="if_8c_source.html">if.c</a>.</p>

</div>
</div>
<a class="anchor" id="ab6e8f13999936ceba12d9a8e36484c49"></a><!-- doxytag: member="if.h::interface_cmd" ref="ab6e8f13999936ceba12d9a8e36484c49" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structcmd__element.html">cmd_element</a> <a class="el" href="if_8h.html#ab6e8f13999936ceba12d9a8e36484c49">interface_cmd</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a51777a76e1c996fcf81ab577db829158"></a><!-- doxytag: member="if.h::interface_desc_cmd" ref="a51777a76e1c996fcf81ab577db829158" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structcmd__element.html">cmd_element</a> <a class="el" href="vtysh_8c.html#ae2f0416c40f9983574f271e085342078">interface_desc_cmd</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vtysh_8c_source.html#l01302">1302</a> of file <a class="el" href="vtysh_8c_source.html">vtysh.c</a>.</p>

</div>
</div>
<a class="anchor" id="ab5081a8a2bbf7ff58d5ec4b6e76b7981"></a><!-- doxytag: member="if.h::interface_pseudo_cmd" ref="ab5081a8a2bbf7ff58d5ec4b6e76b7981" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structcmd__element.html">cmd_element</a> <a class="el" href="if_8h.html#ab5081a8a2bbf7ff58d5ec4b6e76b7981">interface_pseudo_cmd</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a990fb34f428b4c81d006a48ae14f6084"></a><!-- doxytag: member="if.h::no_interface_cmd" ref="a990fb34f428b4c81d006a48ae14f6084" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structcmd__element.html">cmd_element</a> <a class="el" href="if_8h.html#a990fb34f428b4c81d006a48ae14f6084">no_interface_cmd</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="aee31b677aae5a7d464c06d1aabc3f87a"></a><!-- doxytag: member="if.h::no_interface_desc_cmd" ref="aee31b677aae5a7d464c06d1aabc3f87a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structcmd__element.html">cmd_element</a> <a class="el" href="if_8h.html#aee31b677aae5a7d464c06d1aabc3f87a">no_interface_desc_cmd</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a8ef313e1f391c1050a94791c20086aee"></a><!-- doxytag: member="if.h::no_interface_pseudo_cmd" ref="a8ef313e1f391c1050a94791c20086aee" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structcmd__element.html">cmd_element</a> <a class="el" href="if_8h.html#a8ef313e1f391c1050a94791c20086aee">no_interface_pseudo_cmd</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a3c70e0d1c13baf8f55bb7ed45742b3b5"></a><!-- doxytag: member="if.h::show_address_cmd" ref="a3c70e0d1c13baf8f55bb7ed45742b3b5" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structcmd__element.html">cmd_element</a> <a class="el" href="if_8h.html#a3c70e0d1c13baf8f55bb7ed45742b3b5">show_address_cmd</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="if_8h.html">if.h</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:22 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
