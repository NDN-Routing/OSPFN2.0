<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: bgpd/bgp_damp.h File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('bgp__damp_8h.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Defines</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">bgpd/bgp_damp.h File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><img src="bgp__damp_8h__dep__incl.png" border="0" usemap="#bgpd_2bgp__damp_8hdep" alt=""/></div>
<map name="bgpd_2bgp__damp_8hdep" id="bgpd_2bgp__damp_8hdep">
<area shape="rect" id="node3" href="bgp__damp_8c.html" title="bgpd/bgp_damp.c" alt="" coords="5,80,139,107"/><area shape="rect" id="node5" href="bgp__nexthop_8c.html" title="bgpd/bgp_nexthop.c" alt="" coords="163,80,313,107"/><area shape="rect" id="node7" href="bgp__route_8c.html" title="bgpd/bgp_route.c" alt="" coords="339,80,469,107"/><area shape="rect" id="node9" href="bgp__vty_8c.html" title="bgpd/bgp_vty.c" alt="" coords="494,80,612,107"/><area shape="rect" id="node11" href="bgpd_8c.html" title="bgpd/bgpd.c" alt="" coords="637,80,736,107"/></map>
</div>
</div>
<p><a href="bgp__damp_8h_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structbgp__damp__info.html">bgp_damp_info</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structbgp__damp__config.html">bgp_damp_config</a></td></tr>
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#a311f4eb102141807a3a95b5f0a55726a">BGP_RECORD_UPDATE</a>&#160;&#160;&#160;1U</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#aeb2d15f73eff91038418b5c8596a8308">BGP_RECORD_WITHDRAW</a>&#160;&#160;&#160;2U</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#a37278c4b7ba961f33645a14067033faa">BGP_DAMP_NONE</a>&#160;&#160;&#160;0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#aa51e39b231ea1edb713d9549a42d00a0">BGP_DAMP_USED</a>&#160;&#160;&#160;1</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#a0f58b7873622a8c3d2e28d38e30719e4">BGP_DAMP_SUPPRESSED</a>&#160;&#160;&#160;2</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#a0ab730b90f217aaee332a4c77360dfca">DELTA_REUSE</a>&#160;&#160;&#160;10</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#a5400b1f2028d38732e4377be4f32b255">DELTA_T</a>&#160;&#160;&#160;5</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#acb4faa4de0633c71f02c70db3c1ab2a6">DEFAULT_PENALTY</a>&#160;&#160;&#160;1000</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#a099e218170293741c73cc9dbfff822f8">DEFAULT_HALF_LIFE</a>&#160;&#160;&#160;15</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#a3bf1dcbb80b956851a56ad50639e2acd">DEFAULT_REUSE</a>&#160;&#160;&#160;750</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#a94af1812833b72e6cc01e6d2c253fdd7">DEFAULT_SUPPRESS</a>&#160;&#160;&#160;2000</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#a9d1055d6abdc192383615cb45d163fba">REUSE_LIST_SIZE</a>&#160;&#160;&#160;256</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#a8b34f88efd4ed74a463e46260f850e8e">REUSE_ARRAY_SIZE</a>&#160;&#160;&#160;1024</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#a29aef1bd162d03693ce3ef1aad6eb03b">bgp_damp_enable</a> (struct <a class="el" href="structbgp.html">bgp</a> *, <a class="el" href="zebra_8h.html#a0a34f9bd6bbc49876614d274005c6ff1">afi_t</a>, <a class="el" href="zebra_8h.html#a195af4129e055b63a1b67529674bb998">safi_t</a>, time_t, unsigned int, unsigned int, time_t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#a09e30ef3ca688a764ce567f7b8dbff62">bgp_damp_disable</a> (struct <a class="el" href="structbgp.html">bgp</a> *, <a class="el" href="zebra_8h.html#a0a34f9bd6bbc49876614d274005c6ff1">afi_t</a>, <a class="el" href="zebra_8h.html#a195af4129e055b63a1b67529674bb998">safi_t</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#af74c86ddf55e7219e875e319fd5b9754">bgp_damp_withdraw</a> (struct <a class="el" href="structbgp__info.html">bgp_info</a> *, struct <a class="el" href="structbgp__node.html">bgp_node</a> *, <a class="el" href="zebra_8h.html#a0a34f9bd6bbc49876614d274005c6ff1">afi_t</a>, <a class="el" href="zebra_8h.html#a195af4129e055b63a1b67529674bb998">safi_t</a>, int)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#abcc2f743317efced3d9f633e38d649eb">bgp_damp_update</a> (struct <a class="el" href="structbgp__info.html">bgp_info</a> *, struct <a class="el" href="structbgp__node.html">bgp_node</a> *, <a class="el" href="zebra_8h.html#a0a34f9bd6bbc49876614d274005c6ff1">afi_t</a>, <a class="el" href="zebra_8h.html#a195af4129e055b63a1b67529674bb998">safi_t</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#a177487cf8dc8e80e62c55debe7ede7d5">bgp_damp_scan</a> (struct <a class="el" href="structbgp__info.html">bgp_info</a> *, <a class="el" href="zebra_8h.html#a0a34f9bd6bbc49876614d274005c6ff1">afi_t</a>, <a class="el" href="zebra_8h.html#a195af4129e055b63a1b67529674bb998">safi_t</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#afec4152cae969d5c6b34a87d62382489">bgp_damp_info_free</a> (struct <a class="el" href="structbgp__damp__info.html">bgp_damp_info</a> *, int)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#a87eff85caf5992e70da951242cccc565">bgp_damp_info_clean</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#af2e18f03d9db700f1e80e89f2b354c52">bgp_damp_decay</a> (time_t, int)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#ac3b0d63e8478beac52a88f8ea6833c86">bgp_config_write_damp</a> (struct <a class="el" href="structvty.html">vty</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#a3b79a1f824e26a030900a8485bf6da80">bgp_damp_info_vty</a> (struct <a class="el" href="structvty.html">vty</a> *, struct <a class="el" href="structbgp__info.html">bgp_info</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__damp_8h.html#af37d7ea0c77db015306574f981114493">bgp_damp_reuse_time_vty</a> (struct <a class="el" href="structvty.html">vty</a> *, struct <a class="el" href="structbgp__info.html">bgp_info</a> *, char *, size_t)</td></tr>
</table>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="a37278c4b7ba961f33645a14067033faa"></a><!-- doxytag: member="bgp_damp.h::BGP_DAMP_NONE" ref="a37278c4b7ba961f33645a14067033faa" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BGP_DAMP_NONE&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8h_source.html#l00113">113</a> of file <a class="el" href="bgp__damp_8h_source.html">bgp_damp.h</a>.</p>

</div>
</div>
<a class="anchor" id="a0f58b7873622a8c3d2e28d38e30719e4"></a><!-- doxytag: member="bgp_damp.h::BGP_DAMP_SUPPRESSED" ref="a0f58b7873622a8c3d2e28d38e30719e4" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BGP_DAMP_SUPPRESSED&#160;&#160;&#160;2</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8h_source.html#l00115">115</a> of file <a class="el" href="bgp__damp_8h_source.html">bgp_damp.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa51e39b231ea1edb713d9549a42d00a0"></a><!-- doxytag: member="bgp_damp.h::BGP_DAMP_USED" ref="aa51e39b231ea1edb713d9549a42d00a0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BGP_DAMP_USED&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8h_source.html#l00114">114</a> of file <a class="el" href="bgp__damp_8h_source.html">bgp_damp.h</a>.</p>

</div>
</div>
<a class="anchor" id="a311f4eb102141807a3a95b5f0a55726a"></a><!-- doxytag: member="bgp_damp.h::BGP_RECORD_UPDATE" ref="a311f4eb102141807a3a95b5f0a55726a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BGP_RECORD_UPDATE&#160;&#160;&#160;1U</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8h_source.html#l00058">58</a> of file <a class="el" href="bgp__damp_8h_source.html">bgp_damp.h</a>.</p>

</div>
</div>
<a class="anchor" id="aeb2d15f73eff91038418b5c8596a8308"></a><!-- doxytag: member="bgp_damp.h::BGP_RECORD_WITHDRAW" ref="aeb2d15f73eff91038418b5c8596a8308" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BGP_RECORD_WITHDRAW&#160;&#160;&#160;2U</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8h_source.html#l00059">59</a> of file <a class="el" href="bgp__damp_8h_source.html">bgp_damp.h</a>.</p>

</div>
</div>
<a class="anchor" id="a099e218170293741c73cc9dbfff822f8"></a><!-- doxytag: member="bgp_damp.h::DEFAULT_HALF_LIFE" ref="a099e218170293741c73cc9dbfff822f8" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DEFAULT_HALF_LIFE&#160;&#160;&#160;15</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8h_source.html#l00125">125</a> of file <a class="el" href="bgp__damp_8h_source.html">bgp_damp.h</a>.</p>

</div>
</div>
<a class="anchor" id="acb4faa4de0633c71f02c70db3c1ab2a6"></a><!-- doxytag: member="bgp_damp.h::DEFAULT_PENALTY" ref="acb4faa4de0633c71f02c70db3c1ab2a6" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DEFAULT_PENALTY&#160;&#160;&#160;1000</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8h_source.html#l00123">123</a> of file <a class="el" href="bgp__damp_8h_source.html">bgp_damp.h</a>.</p>

</div>
</div>
<a class="anchor" id="a3bf1dcbb80b956851a56ad50639e2acd"></a><!-- doxytag: member="bgp_damp.h::DEFAULT_REUSE" ref="a3bf1dcbb80b956851a56ad50639e2acd" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DEFAULT_REUSE&#160;&#160;&#160;750</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8h_source.html#l00126">126</a> of file <a class="el" href="bgp__damp_8h_source.html">bgp_damp.h</a>.</p>

</div>
</div>
<a class="anchor" id="a94af1812833b72e6cc01e6d2c253fdd7"></a><!-- doxytag: member="bgp_damp.h::DEFAULT_SUPPRESS" ref="a94af1812833b72e6cc01e6d2c253fdd7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DEFAULT_SUPPRESS&#160;&#160;&#160;2000</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8h_source.html#l00127">127</a> of file <a class="el" href="bgp__damp_8h_source.html">bgp_damp.h</a>.</p>

</div>
</div>
<a class="anchor" id="a0ab730b90f217aaee332a4c77360dfca"></a><!-- doxytag: member="bgp_damp.h::DELTA_REUSE" ref="a0ab730b90f217aaee332a4c77360dfca" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DELTA_REUSE&#160;&#160;&#160;10</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8h_source.html#l00118">118</a> of file <a class="el" href="bgp__damp_8h_source.html">bgp_damp.h</a>.</p>

</div>
</div>
<a class="anchor" id="a5400b1f2028d38732e4377be4f32b255"></a><!-- doxytag: member="bgp_damp.h::DELTA_T" ref="a5400b1f2028d38732e4377be4f32b255" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DELTA_T&#160;&#160;&#160;5</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8h_source.html#l00121">121</a> of file <a class="el" href="bgp__damp_8h_source.html">bgp_damp.h</a>.</p>

</div>
</div>
<a class="anchor" id="a8b34f88efd4ed74a463e46260f850e8e"></a><!-- doxytag: member="bgp_damp.h::REUSE_ARRAY_SIZE" ref="a8b34f88efd4ed74a463e46260f850e8e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define REUSE_ARRAY_SIZE&#160;&#160;&#160;1024</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8h_source.html#l00130">130</a> of file <a class="el" href="bgp__damp_8h_source.html">bgp_damp.h</a>.</p>

</div>
</div>
<a class="anchor" id="a9d1055d6abdc192383615cb45d163fba"></a><!-- doxytag: member="bgp_damp.h::REUSE_LIST_SIZE" ref="a9d1055d6abdc192383615cb45d163fba" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define REUSE_LIST_SIZE&#160;&#160;&#160;256</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8h_source.html#l00129">129</a> of file <a class="el" href="bgp__damp_8h_source.html">bgp_damp.h</a>.</p>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ac3b0d63e8478beac52a88f8ea6833c86"></a><!-- doxytag: member="bgp_damp.h::bgp_config_write_damp" ref="ac3b0d63e8478beac52a88f8ea6833c86" args="(struct vty *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bgp_config_write_damp </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8c_source.html#l00521">521</a> of file <a class="el" href="bgp__damp_8c_source.html">bgp_damp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="bgp__damp_8c.html#ad3adefbd53055fecb5eea7e002c2c638">bgp_damp_cfg</a>.<a class="code" href="structbgp__damp__config.html#a7055c68200a901c92d87d6aa79acece7">half_life</a> == <a class="code" href="bgp__damp_8h.html#a099e218170293741c73cc9dbfff822f8">DEFAULT_HALF_LIFE</a>*60
      &amp;&amp; <a class="code" href="bgp__damp_8c.html#ad3adefbd53055fecb5eea7e002c2c638">bgp_damp_cfg</a>.<a class="code" href="structbgp__damp__config.html#aec889c6882eb02a28dc81d58f8321d3c">reuse_limit</a> == <a class="code" href="bgp__damp_8h.html#a3bf1dcbb80b956851a56ad50639e2acd">DEFAULT_REUSE</a>
      &amp;&amp; <a class="code" href="bgp__damp_8c.html#ad3adefbd53055fecb5eea7e002c2c638">bgp_damp_cfg</a>.<a class="code" href="structbgp__damp__config.html#a61e0e7bdc6964b808d6796fe1019edbd">suppress_value</a> == <a class="code" href="bgp__damp_8h.html#a94af1812833b72e6cc01e6d2c253fdd7">DEFAULT_SUPPRESS</a>
      &amp;&amp; <a class="code" href="bgp__damp_8c.html#ad3adefbd53055fecb5eea7e002c2c638">bgp_damp_cfg</a>.<a class="code" href="structbgp__damp__config.html#a94f99fef7621bac5fab20490f889dca4">max_suppress_time</a> == <a class="code" href="bgp__damp_8c.html#ad3adefbd53055fecb5eea7e002c2c638">bgp_damp_cfg</a>.<a class="code" href="structbgp__damp__config.html#a7055c68200a901c92d87d6aa79acece7">half_life</a>*4)
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot; bgp dampening%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="bgp__damp_8c.html#ad3adefbd53055fecb5eea7e002c2c638">bgp_damp_cfg</a>.<a class="code" href="structbgp__damp__config.html#a7055c68200a901c92d87d6aa79acece7">half_life</a> != <a class="code" href="bgp__damp_8h.html#a099e218170293741c73cc9dbfff822f8">DEFAULT_HALF_LIFE</a>*60
       &amp;&amp; <a class="code" href="bgp__damp_8c.html#ad3adefbd53055fecb5eea7e002c2c638">bgp_damp_cfg</a>.<a class="code" href="structbgp__damp__config.html#aec889c6882eb02a28dc81d58f8321d3c">reuse_limit</a> == <a class="code" href="bgp__damp_8h.html#a3bf1dcbb80b956851a56ad50639e2acd">DEFAULT_REUSE</a>
       &amp;&amp; <a class="code" href="bgp__damp_8c.html#ad3adefbd53055fecb5eea7e002c2c638">bgp_damp_cfg</a>.<a class="code" href="structbgp__damp__config.html#a61e0e7bdc6964b808d6796fe1019edbd">suppress_value</a> == <a class="code" href="bgp__damp_8h.html#a94af1812833b72e6cc01e6d2c253fdd7">DEFAULT_SUPPRESS</a>
       &amp;&amp; <a class="code" href="bgp__damp_8c.html#ad3adefbd53055fecb5eea7e002c2c638">bgp_damp_cfg</a>.<a class="code" href="structbgp__damp__config.html#a94f99fef7621bac5fab20490f889dca4">max_suppress_time</a> == <a class="code" href="bgp__damp_8c.html#ad3adefbd53055fecb5eea7e002c2c638">bgp_damp_cfg</a>.<a class="code" href="structbgp__damp__config.html#a7055c68200a901c92d87d6aa79acece7">half_life</a>*4)
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot; bgp dampening %ld%s&quot;</span>,
         <a class="code" href="bgp__damp_8c.html#ad3adefbd53055fecb5eea7e002c2c638">bgp_damp_cfg</a>.<a class="code" href="structbgp__damp__config.html#a7055c68200a901c92d87d6aa79acece7">half_life</a>/60,
         <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
  <span class="keywordflow">else</span>
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot; bgp dampening %ld %d %d %ld%s&quot;</span>,
         <a class="code" href="bgp__damp_8c.html#ad3adefbd53055fecb5eea7e002c2c638">bgp_damp_cfg</a>.<a class="code" href="structbgp__damp__config.html#a7055c68200a901c92d87d6aa79acece7">half_life</a>/60,
         <a class="code" href="bgp__damp_8c.html#ad3adefbd53055fecb5eea7e002c2c638">bgp_damp_cfg</a>.<a class="code" href="structbgp__damp__config.html#aec889c6882eb02a28dc81d58f8321d3c">reuse_limit</a>,
         <a class="code" href="bgp__damp_8c.html#ad3adefbd53055fecb5eea7e002c2c638">bgp_damp_cfg</a>.<a class="code" href="structbgp__damp__config.html#a61e0e7bdc6964b808d6796fe1019edbd">suppress_value</a>,
         <a class="code" href="bgp__damp_8c.html#ad3adefbd53055fecb5eea7e002c2c638">bgp_damp_cfg</a>.<a class="code" href="structbgp__damp__config.html#a94f99fef7621bac5fab20490f889dca4">max_suppress_time</a>/60,
         <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="af2e18f03d9db700f1e80e89f2b354c52"></a><!-- doxytag: member="bgp_damp.h::bgp_damp_decay" ref="af2e18f03d9db700f1e80e89f2b354c52" args="(time_t, int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int bgp_damp_decay </td>
          <td>(</td>
          <td class="paramtype">time_t&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8c_source.html#l00092">92</a> of file <a class="el" href="bgp__damp_8c_source.html">bgp_damp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

  i = (int) ((<span class="keywordtype">double</span>) tdiff / <a class="code" href="bgp__damp_8h.html#a5400b1f2028d38732e4377be4f32b255">DELTA_T</a>);

  <span class="keywordflow">if</span> (i == 0)
    <span class="keywordflow">return</span> penalty; 
  
  <span class="keywordflow">if</span> (i &gt;= <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#a8a14f82a5f992a698f6be233a21afce9">decay_array_size</a>)
    <span class="keywordflow">return</span> 0;

  <span class="keywordflow">return</span> (<span class="keywordtype">int</span>) (penalty * <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#ad35b88c80cde9e6c1b6dd5f73d79c599">decay_array</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>]);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a09e30ef3ca688a764ce567f7b8dbff62"></a><!-- doxytag: member="bgp_damp.h::bgp_damp_disable" ref="a09e30ef3ca688a764ce567f7b8dbff62" args="(struct bgp *, afi_t, safi_t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int bgp_damp_disable </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structbgp.html">bgp</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="zebra_8h.html#a0a34f9bd6bbc49876614d274005c6ff1">afi_t</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="zebra_8h.html#a195af4129e055b63a1b67529674bb998">safi_t</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8c_source.html#l00503">503</a> of file <a class="el" href="bgp__damp_8c_source.html">bgp_damp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="comment">/* Cancel reuse thread. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#a917075d1961998bb01d7cb2043a4aa80">t_reuse</a> )
    <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (<a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#a917075d1961998bb01d7cb2043a4aa80">t_reuse</a>);
  <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#a917075d1961998bb01d7cb2043a4aa80">t_reuse</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="comment">/* Clean BGP dampening information.  */</span>
  <a class="code" href="bgp__damp_8c.html#a87eff85caf5992e70da951242cccc565">bgp_damp_info_clean</a> ();

  <span class="comment">/* Clear configuration */</span>
  <a class="code" href="bgp__damp_8c.html#ae83c7c3e15db5d6fb697f7321c1c6f4b">bgp_damp_config_clean</a> (&amp;<a class="code" href="bgp__damp_8c.html#ad3adefbd53055fecb5eea7e002c2c638">bgp_damp_cfg</a>);

  <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (<a class="code" href="structbgp.html">bgp</a>-&gt;<a class="code" href="structbgp.html#a30da262ef5f391dae5c93ed04cf243c4">af_flags</a>[afi][safi], <a class="code" href="bgpd_8h.html#a1f74f91741ac0799c3348ce5f9e82992">BGP_CONFIG_DAMPENING</a>);
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a29aef1bd162d03693ce3ef1aad6eb03b"></a><!-- doxytag: member="bgp_damp.h::bgp_damp_enable" ref="a29aef1bd162d03693ce3ef1aad6eb03b" args="(struct bgp *, afi_t, safi_t, time_t, unsigned int, unsigned int, time_t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int bgp_damp_enable </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structbgp.html">bgp</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="zebra_8h.html#a0a34f9bd6bbc49876614d274005c6ff1">afi_t</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="zebra_8h.html#a195af4129e055b63a1b67529674bb998">safi_t</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">time_t&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>int</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>int</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">time_t&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8c_source.html#l00435">435</a> of file <a class="el" href="bgp__damp_8c_source.html">bgp_damp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (<a class="code" href="structbgp.html">bgp</a>-&gt;<a class="code" href="structbgp.html#a30da262ef5f391dae5c93ed04cf243c4">af_flags</a>[afi][safi], <a class="code" href="bgpd_8h.html#a1f74f91741ac0799c3348ce5f9e82992">BGP_CONFIG_DAMPENING</a>))
    {
      <span class="keywordflow">if</span> (<a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#a7055c68200a901c92d87d6aa79acece7">half_life</a> == half
      &amp;&amp; <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#aec889c6882eb02a28dc81d58f8321d3c">reuse_limit</a> == reuse
      &amp;&amp; <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#a61e0e7bdc6964b808d6796fe1019edbd">suppress_value</a> == suppress
      &amp;&amp; <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#a94f99fef7621bac5fab20490f889dca4">max_suppress_time</a> == max)
    <span class="keywordflow">return</span> 0;
      <a class="code" href="bgp__damp_8c.html#a12aae1fce37ad880818236997eb67e51">bgp_damp_disable</a> (<a class="code" href="structbgp.html">bgp</a>, afi, safi);
    }

  <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (<a class="code" href="structbgp.html">bgp</a>-&gt;<a class="code" href="structbgp.html#a30da262ef5f391dae5c93ed04cf243c4">af_flags</a>[afi][safi], <a class="code" href="bgpd_8h.html#a1f74f91741ac0799c3348ce5f9e82992">BGP_CONFIG_DAMPENING</a>);
  <a class="code" href="bgp__damp_8c.html#ada34675b0114f7719991dae8fb21defe">bgp_damp_parameter_set</a> (half, reuse, suppress, max);

  <span class="comment">/* Register reuse timer.  */</span>
  <span class="keywordflow">if</span> (! <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#a917075d1961998bb01d7cb2043a4aa80">t_reuse</a>)
    <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#a917075d1961998bb01d7cb2043a4aa80">t_reuse</a> = 
      <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="bgp__damp_8c.html#a1eb38f534f8bbb214584a2dbacb649a0">bgp_reuse_timer</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <a class="code" href="bgp__damp_8h.html#a0ab730b90f217aaee332a4c77360dfca">DELTA_REUSE</a>);

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a87eff85caf5992e70da951242cccc565"></a><!-- doxytag: member="bgp_damp.h::bgp_damp_info_clean" ref="a87eff85caf5992e70da951242cccc565" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bgp_damp_info_clean </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8c_source.html#l00474">474</a> of file <a class="el" href="bgp__damp_8c_source.html">bgp_damp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
  <span class="keyword">struct </span><a class="code" href="structbgp__damp__info.html">bgp_damp_info</a> *bdi, *<a class="code" href="structbgp__damp__info.html#aaab72d4a62904dfd1c1c317936d7ffea">next</a>;

  <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#a9043492faf6e46560ab22c0e408d2b86">reuse_offset</a> = 0;

  <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#ad82b645f7ca7c7debdb3c54943d86771">reuse_list_size</a>; i++)
    {
      <span class="keywordflow">if</span> (! <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#a31e11b75924cfb22e0a563e532849fd4">reuse_list</a>[i])
    <span class="keywordflow">continue</span>;

      <span class="keywordflow">for</span> (bdi = <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#a31e11b75924cfb22e0a563e532849fd4">reuse_list</a>[i]; bdi; bdi = next)
    {
      next = bdi-&gt;<a class="code" href="structbgp__damp__info.html#aaab72d4a62904dfd1c1c317936d7ffea">next</a>;
      <a class="code" href="bgp__damp_8c.html#a0c4f46bfbd9a397b8ba5d830d48cc5ca">bgp_damp_info_free</a> (bdi, 1);
    }
      <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#a31e11b75924cfb22e0a563e532849fd4">reuse_list</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }

  <span class="keywordflow">for</span> (bdi = <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#aaa7d72e2afdf80f29bd4c71fdeb100bd">no_reuse_list</a>; bdi; bdi = next)
    {
      next = bdi-&gt;<a class="code" href="structbgp__damp__info.html#aaab72d4a62904dfd1c1c317936d7ffea">next</a>;
      <a class="code" href="bgp__damp_8c.html#a0c4f46bfbd9a397b8ba5d830d48cc5ca">bgp_damp_info_free</a> (bdi, 1);
    }
  <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#aaa7d72e2afdf80f29bd4c71fdeb100bd">no_reuse_list</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="afec4152cae969d5c6b34a87d62382489"></a><!-- doxytag: member="bgp_damp.h::bgp_damp_info_free" ref="afec4152cae969d5c6b34a87d62382489" args="(struct bgp_damp_info *, int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bgp_damp_info_free </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structbgp__damp__info.html">bgp_damp_info</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8c_source.html#l00350">350</a> of file <a class="el" href="bgp__damp_8c_source.html">bgp_damp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *binfo;

  <span class="keywordflow">if</span> (! bdi)
    <span class="keywordflow">return</span>;

  binfo = bdi-&gt;binfo;
  binfo-&gt;<a class="code" href="structbgp__info.html#ae6a0a53b7a3f457c0f479f635c20ec76">extra</a>-&gt;<a class="code" href="structbgp__info__extra.html#a7ff3f44362518bf22b13989ec6924986">damp_info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (binfo-&gt;<a class="code" href="structbgp__info.html#a7ae2579adaf8f2fae14dc9d5fc23e976">flags</a>, <a class="code" href="bgp__route_8h.html#a8ef9b384054b6b52e7d0af4021a3cc05">BGP_INFO_DAMPED</a>))
    <a class="code" href="bgp__damp_8c.html#a38fa0292f82b418960810ceb8c2d2309">bgp_reuse_list_delete</a> (bdi);
  <span class="keywordflow">else</span>
    <a class="code" href="bgp__damp_8c.html#af9283a47419c1af6dab5a1f220f3fa69">BGP_DAMP_LIST_DEL</a> (<a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>, bdi);

  <a class="code" href="bgp__route_8c.html#a818f5df3bcb251b38f290b27a95baca3">bgp_info_unset_flag</a> (bdi-&gt;rn, binfo, <a class="code" href="bgp__route_8h.html#a57adf9fc517cc65fb9f4bcbf8ff796f2">BGP_INFO_HISTORY</a>|<a class="code" href="bgp__route_8h.html#a8ef9b384054b6b52e7d0af4021a3cc05">BGP_INFO_DAMPED</a>);

  <span class="keywordflow">if</span> (bdi-&gt;lastrecord == <a class="code" href="bgp__damp_8h.html#aeb2d15f73eff91038418b5c8596a8308">BGP_RECORD_WITHDRAW</a> &amp;&amp; withdraw)
    <a class="code" href="bgp__route_8c.html#abfe260239e1b72a286e9c45a5aa1afbd">bgp_info_delete</a> (bdi-&gt;rn, binfo);
  
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba0469230ad2a9a5121c508a98d7d279c2">MTYPE_BGP_DAMP_INFO</a>, bdi);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3b79a1f824e26a030900a8485bf6da80"></a><!-- doxytag: member="bgp_damp.h::bgp_damp_info_vty" ref="a3b79a1f824e26a030900a8485bf6da80" args="(struct vty *, struct bgp_info *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bgp_damp_info_vty </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structbgp__info.html">bgp_info</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8c_source.html#l00581">581</a> of file <a class="el" href="bgp__damp_8c_source.html">bgp_damp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structbgp__damp__info.html">bgp_damp_info</a> *bdi;
  time_t t_now, t_diff;
  <span class="keywordtype">char</span> timebuf[<a class="code" href="bgpd_8h.html#a4c420c0c5e00f67ebf9850015b7efd27">BGP_UPTIME_LEN</a>];
  <span class="keywordtype">int</span> <a class="code" href="structbgp__damp__info.html#a64957844448af43a55f25e72ffe419a6">penalty</a>;

  <span class="keywordflow">if</span> (!<a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>-&gt;<a class="code" href="structbgp__info.html#ae6a0a53b7a3f457c0f479f635c20ec76">extra</a>)
    <span class="keywordflow">return</span>;
  
  <span class="comment">/* BGP dampening information.  */</span>
  bdi = <a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>-&gt;<a class="code" href="structbgp__info.html#ae6a0a53b7a3f457c0f479f635c20ec76">extra</a>-&gt;<a class="code" href="structbgp__info__extra.html#a7ff3f44362518bf22b13989ec6924986">damp_info</a>;

  <span class="comment">/* If dampening is not enabled or there is no dampening information,</span>
<span class="comment">     return immediately.  */</span>
  <span class="keywordflow">if</span> (! <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a> || ! bdi)
    <span class="keywordflow">return</span>;

  <span class="comment">/* Calculate new penalty.  */</span>
  t_now = <a class="code" href="bgpd_8c.html#a57400e51b671bd48e19b86df877be1e9">bgp_clock</a> ();
  t_diff = t_now - bdi-&gt;<a class="code" href="structbgp__damp__info.html#a3d0c950f70317aedfd15a0b28feceae1">t_updated</a>;
  penalty = <a class="code" href="bgp__damp_8c.html#a04742fc672b86175444b4b94161c9a81">bgp_damp_decay</a> (t_diff, bdi-&gt;<a class="code" href="structbgp__damp__info.html#a64957844448af43a55f25e72ffe419a6">penalty</a>);

  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;      Dampinfo: penalty %d, flapped %d times in %s&quot;</span>,
           penalty, bdi-&gt;<a class="code" href="structbgp__damp__info.html#ab12ae05f133ded91a152d8b42c33336a">flap</a>,
       <a class="code" href="bgpd_8c.html#acf827381bb67155dd3f9ec490bc453ff">peer_uptime</a> (bdi-&gt;<a class="code" href="structbgp__damp__info.html#a79b767b81bcc0f2015c6da5651dfa149">start_time</a>, timebuf, <a class="code" href="bgpd_8h.html#a4c420c0c5e00f67ebf9850015b7efd27">BGP_UPTIME_LEN</a>));

  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (<a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>-&gt;<a class="code" href="structbgp__info.html#a7ae2579adaf8f2fae14dc9d5fc23e976">flags</a>, <a class="code" href="bgp__route_8h.html#a8ef9b384054b6b52e7d0af4021a3cc05">BGP_INFO_DAMPED</a>)
      &amp;&amp; ! <a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (<a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>-&gt;<a class="code" href="structbgp__info.html#a7ae2579adaf8f2fae14dc9d5fc23e976">flags</a>, <a class="code" href="bgp__route_8h.html#a57adf9fc517cc65fb9f4bcbf8ff796f2">BGP_INFO_HISTORY</a>))
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;, reuse in %s&quot;</span>,
         <a class="code" href="bgp__damp_8c.html#a09df51c0fccbc11c1818a00e06be28da">bgp_get_reuse_time</a> (penalty, timebuf, <a class="code" href="bgpd_8h.html#a4c420c0c5e00f67ebf9850015b7efd27">BGP_UPTIME_LEN</a>));

  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="af37d7ea0c77db015306574f981114493"></a><!-- doxytag: member="bgp_damp.h::bgp_damp_reuse_time_vty" ref="af37d7ea0c77db015306574f981114493" args="(struct vty *, struct bgp_info *, char *, size_t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* bgp_damp_reuse_time_vty </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structbgp__info.html">bgp_info</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8c_source.html#l00617">617</a> of file <a class="el" href="bgp__damp_8c_source.html">bgp_damp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structbgp__damp__info.html">bgp_damp_info</a> *bdi;
  time_t t_now, t_diff;
  <span class="keywordtype">int</span> <a class="code" href="structbgp__damp__info.html#a64957844448af43a55f25e72ffe419a6">penalty</a>;
  
  <span class="keywordflow">if</span> (!<a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>-&gt;<a class="code" href="structbgp__info.html#ae6a0a53b7a3f457c0f479f635c20ec76">extra</a>)
    <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  
  <span class="comment">/* BGP dampening information.  */</span>
  bdi = <a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>-&gt;<a class="code" href="structbgp__info.html#ae6a0a53b7a3f457c0f479f635c20ec76">extra</a>-&gt;<a class="code" href="structbgp__info__extra.html#a7ff3f44362518bf22b13989ec6924986">damp_info</a>;

  <span class="comment">/* If dampening is not enabled or there is no dampening information,</span>
<span class="comment">     return immediately.  */</span>
  <span class="keywordflow">if</span> (! <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a> || ! bdi)
    <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="comment">/* Calculate new penalty.  */</span>
  t_now = <a class="code" href="bgpd_8c.html#a57400e51b671bd48e19b86df877be1e9">bgp_clock</a> ();
  t_diff = t_now - bdi-&gt;<a class="code" href="structbgp__damp__info.html#a3d0c950f70317aedfd15a0b28feceae1">t_updated</a>;
  penalty = <a class="code" href="bgp__damp_8c.html#a04742fc672b86175444b4b94161c9a81">bgp_damp_decay</a> (t_diff, bdi-&gt;<a class="code" href="structbgp__damp__info.html#a64957844448af43a55f25e72ffe419a6">penalty</a>);

  <span class="keywordflow">return</span>  <a class="code" href="bgp__damp_8c.html#a09df51c0fccbc11c1818a00e06be28da">bgp_get_reuse_time</a> (penalty, timebuf, len);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a177487cf8dc8e80e62c55debe7ede7d5"></a><!-- doxytag: member="bgp_damp.h::bgp_damp_scan" ref="a177487cf8dc8e80e62c55debe7ede7d5" args="(struct bgp_info *, afi_t, safi_t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int bgp_damp_scan </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structbgp__info.html">bgp_info</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="zebra_8h.html#a0a34f9bd6bbc49876614d274005c6ff1">afi_t</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="zebra_8h.html#a195af4129e055b63a1b67529674bb998">safi_t</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8c_source.html#l00302">302</a> of file <a class="el" href="bgp__damp_8c_source.html">bgp_damp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  time_t t_now, t_diff;
  <span class="keyword">struct </span><a class="code" href="structbgp__damp__info.html">bgp_damp_info</a> *bdi;
  
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>-&gt;<a class="code" href="structbgp__info.html#ae6a0a53b7a3f457c0f479f635c20ec76">extra</a> &amp;&amp; <a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>-&gt;<a class="code" href="structbgp__info.html#ae6a0a53b7a3f457c0f479f635c20ec76">extra</a>-&gt;<a class="code" href="structbgp__info__extra.html#a7ff3f44362518bf22b13989ec6924986">damp_info</a>);
  
  t_now = <a class="code" href="bgpd_8c.html#a57400e51b671bd48e19b86df877be1e9">bgp_clock</a> ();
  bdi = <a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>-&gt;<a class="code" href="structbgp__info.html#ae6a0a53b7a3f457c0f479f635c20ec76">extra</a>-&gt;<a class="code" href="structbgp__info__extra.html#a7ff3f44362518bf22b13989ec6924986">damp_info</a>;
 
  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (<a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>-&gt;<a class="code" href="structbgp__info.html#a7ae2579adaf8f2fae14dc9d5fc23e976">flags</a>, <a class="code" href="bgp__route_8h.html#a8ef9b384054b6b52e7d0af4021a3cc05">BGP_INFO_DAMPED</a>))
    {
      t_diff = t_now - bdi-&gt;<a class="code" href="structbgp__damp__info.html#ad4151e652c9e1583cc8ff0ccde2dd72f">suppress_time</a>;

      <span class="keywordflow">if</span> (t_diff &gt;= <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#a94f99fef7621bac5fab20490f889dca4">max_suppress_time</a>)
        {
          <a class="code" href="bgp__route_8c.html#a818f5df3bcb251b38f290b27a95baca3">bgp_info_unset_flag</a> (bdi-&gt;<a class="code" href="structbgp__damp__info.html#a506a36cf4f20e2069a1623933c18d6fb">rn</a>, <a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>, <a class="code" href="bgp__route_8h.html#a8ef9b384054b6b52e7d0af4021a3cc05">BGP_INFO_DAMPED</a>);
          <a class="code" href="bgp__damp_8c.html#a38fa0292f82b418960810ceb8c2d2309">bgp_reuse_list_delete</a> (bdi);
      <a class="code" href="bgp__damp_8c.html#a9adb7c9da2bfb12c80b3c0602bdda527">BGP_DAMP_LIST_ADD</a> (<a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>, bdi);
          bdi-&gt;<a class="code" href="structbgp__damp__info.html#a64957844448af43a55f25e72ffe419a6">penalty</a> = <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#aec889c6882eb02a28dc81d58f8321d3c">reuse_limit</a>;
          bdi-&gt;<a class="code" href="structbgp__damp__info.html#ad4151e652c9e1583cc8ff0ccde2dd72f">suppress_time</a> = 0;
          bdi-&gt;<a class="code" href="structbgp__damp__info.html#a3d0c950f70317aedfd15a0b28feceae1">t_updated</a> = t_now;
          
          <span class="comment">/* Need to announce UPDATE once this binfo is usable again. */</span>
          <span class="keywordflow">if</span> (bdi-&gt;<a class="code" href="structbgp__damp__info.html#acdc7e308a11230cd73c90b0dcf7a3cdf">lastrecord</a> == <a class="code" href="bgp__damp_8h.html#a311f4eb102141807a3a95b5f0a55726a">BGP_RECORD_UPDATE</a>)
            <span class="keywordflow">return</span> 1;
          <span class="keywordflow">else</span>
            <span class="keywordflow">return</span> 0;
        }
    }
  <span class="keywordflow">else</span>
    {
      t_diff = t_now - bdi-&gt;<a class="code" href="structbgp__damp__info.html#a3d0c950f70317aedfd15a0b28feceae1">t_updated</a>;
      bdi-&gt;<a class="code" href="structbgp__damp__info.html#a64957844448af43a55f25e72ffe419a6">penalty</a> = <a class="code" href="bgp__damp_8c.html#a04742fc672b86175444b4b94161c9a81">bgp_damp_decay</a> (t_diff, bdi-&gt;<a class="code" href="structbgp__damp__info.html#a64957844448af43a55f25e72ffe419a6">penalty</a>);

      <span class="keywordflow">if</span> (bdi-&gt;<a class="code" href="structbgp__damp__info.html#a64957844448af43a55f25e72ffe419a6">penalty</a> &lt;= <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#aec889c6882eb02a28dc81d58f8321d3c">reuse_limit</a> / 2.0)
        {
          <span class="comment">/* release the bdi, bdi-&gt;binfo. */</span>  
          <a class="code" href="bgp__damp_8c.html#a0c4f46bfbd9a397b8ba5d830d48cc5ca">bgp_damp_info_free</a> (bdi, 1);
          <span class="keywordflow">return</span> 0;
        }            
      <span class="keywordflow">else</span>
        bdi-&gt;<a class="code" href="structbgp__damp__info.html#a3d0c950f70317aedfd15a0b28feceae1">t_updated</a> = t_now;
    }       
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="abcc2f743317efced3d9f633e38d649eb"></a><!-- doxytag: member="bgp_damp.h::bgp_damp_update" ref="abcc2f743317efced3d9f633e38d649eb" args="(struct bgp_info *, struct bgp_node *, afi_t, safi_t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int bgp_damp_update </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structbgp__info.html">bgp_info</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structbgp__node.html">bgp_node</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="zebra_8h.html#a0a34f9bd6bbc49876614d274005c6ff1">afi_t</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="zebra_8h.html#a195af4129e055b63a1b67529674bb998">safi_t</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8c_source.html#l00261">261</a> of file <a class="el" href="bgp__damp_8c_source.html">bgp_damp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  time_t t_now;
  <span class="keyword">struct </span><a class="code" href="structbgp__damp__info.html">bgp_damp_info</a> *bdi;
  <span class="keywordtype">int</span> status;

  <span class="keywordflow">if</span> (!<a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>-&gt;<a class="code" href="structbgp__info.html#ae6a0a53b7a3f457c0f479f635c20ec76">extra</a> || !((bdi = <a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>-&gt;<a class="code" href="structbgp__info.html#ae6a0a53b7a3f457c0f479f635c20ec76">extra</a>-&gt;<a class="code" href="structbgp__info__extra.html#a7ff3f44362518bf22b13989ec6924986">damp_info</a>)))
    <span class="keywordflow">return</span> <a class="code" href="bgp__damp_8h.html#aa51e39b231ea1edb713d9549a42d00a0">BGP_DAMP_USED</a>;

  t_now = <a class="code" href="bgpd_8c.html#a57400e51b671bd48e19b86df877be1e9">bgp_clock</a> ();
  <a class="code" href="bgp__route_8c.html#a818f5df3bcb251b38f290b27a95baca3">bgp_info_unset_flag</a> (<a class="code" href="structbgp__damp__info.html#a506a36cf4f20e2069a1623933c18d6fb">rn</a>, <a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>, <a class="code" href="bgp__route_8h.html#a57adf9fc517cc65fb9f4bcbf8ff796f2">BGP_INFO_HISTORY</a>);

  bdi-&gt;<a class="code" href="structbgp__damp__info.html#acdc7e308a11230cd73c90b0dcf7a3cdf">lastrecord</a> = <a class="code" href="bgp__damp_8h.html#a311f4eb102141807a3a95b5f0a55726a">BGP_RECORD_UPDATE</a>;
  bdi-&gt;<a class="code" href="structbgp__damp__info.html#a64957844448af43a55f25e72ffe419a6">penalty</a> = <a class="code" href="bgp__damp_8c.html#a04742fc672b86175444b4b94161c9a81">bgp_damp_decay</a> (t_now - bdi-&gt;<a class="code" href="structbgp__damp__info.html#a3d0c950f70317aedfd15a0b28feceae1">t_updated</a>, bdi-&gt;<a class="code" href="structbgp__damp__info.html#a64957844448af43a55f25e72ffe419a6">penalty</a>);

  <span class="keywordflow">if</span> (! <a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (bdi-&gt;<a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>-&gt;<a class="code" href="structbgp__info.html#a7ae2579adaf8f2fae14dc9d5fc23e976">flags</a>, <a class="code" href="bgp__route_8h.html#a8ef9b384054b6b52e7d0af4021a3cc05">BGP_INFO_DAMPED</a>)
      &amp;&amp; (bdi-&gt;<a class="code" href="structbgp__damp__info.html#a64957844448af43a55f25e72ffe419a6">penalty</a> &lt; <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#a61e0e7bdc6964b808d6796fe1019edbd">suppress_value</a>))
    status = <a class="code" href="bgp__damp_8h.html#aa51e39b231ea1edb713d9549a42d00a0">BGP_DAMP_USED</a>;
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (bdi-&gt;<a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>-&gt;<a class="code" href="structbgp__info.html#a7ae2579adaf8f2fae14dc9d5fc23e976">flags</a>, <a class="code" href="bgp__route_8h.html#a8ef9b384054b6b52e7d0af4021a3cc05">BGP_INFO_DAMPED</a>)
       &amp;&amp; (bdi-&gt;<a class="code" href="structbgp__damp__info.html#a64957844448af43a55f25e72ffe419a6">penalty</a> &lt; <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#aec889c6882eb02a28dc81d58f8321d3c">reuse_limit</a>) )
    {
      <a class="code" href="bgp__route_8c.html#a818f5df3bcb251b38f290b27a95baca3">bgp_info_unset_flag</a> (<a class="code" href="structbgp__damp__info.html#a506a36cf4f20e2069a1623933c18d6fb">rn</a>, <a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>, <a class="code" href="bgp__route_8h.html#a8ef9b384054b6b52e7d0af4021a3cc05">BGP_INFO_DAMPED</a>);
      <a class="code" href="bgp__damp_8c.html#a38fa0292f82b418960810ceb8c2d2309">bgp_reuse_list_delete</a> (bdi);
      <a class="code" href="bgp__damp_8c.html#a9adb7c9da2bfb12c80b3c0602bdda527">BGP_DAMP_LIST_ADD</a> (<a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>, bdi);
      bdi-&gt;<a class="code" href="structbgp__damp__info.html#ad4151e652c9e1583cc8ff0ccde2dd72f">suppress_time</a> = 0;
      status = <a class="code" href="bgp__damp_8h.html#aa51e39b231ea1edb713d9549a42d00a0">BGP_DAMP_USED</a>;
    }
  <span class="keywordflow">else</span>
    status = <a class="code" href="bgp__damp_8h.html#a0f58b7873622a8c3d2e28d38e30719e4">BGP_DAMP_SUPPRESSED</a>;  

  <span class="keywordflow">if</span> (bdi-&gt;<a class="code" href="structbgp__damp__info.html#a64957844448af43a55f25e72ffe419a6">penalty</a> &gt; <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#aec889c6882eb02a28dc81d58f8321d3c">reuse_limit</a> / 2.0)
    bdi-&gt;<a class="code" href="structbgp__damp__info.html#a3d0c950f70317aedfd15a0b28feceae1">t_updated</a> = t_now;
  <span class="keywordflow">else</span>
    <a class="code" href="bgp__damp_8c.html#a0c4f46bfbd9a397b8ba5d830d48cc5ca">bgp_damp_info_free</a> (bdi, 0);
    
  <span class="keywordflow">return</span> status;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af74c86ddf55e7219e875e319fd5b9754"></a><!-- doxytag: member="bgp_damp.h::bgp_damp_withdraw" ref="af74c86ddf55e7219e875e319fd5b9754" args="(struct bgp_info *, struct bgp_node *, afi_t, safi_t, int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int bgp_damp_withdraw </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structbgp__info.html">bgp_info</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structbgp__node.html">bgp_node</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="zebra_8h.html#a0a34f9bd6bbc49876614d274005c6ff1">afi_t</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="zebra_8h.html#a195af4129e055b63a1b67529674bb998">safi_t</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__damp_8c_source.html#l00177">177</a> of file <a class="el" href="bgp__damp_8c_source.html">bgp_damp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  time_t t_now;
  <span class="keyword">struct </span><a class="code" href="structbgp__damp__info.html">bgp_damp_info</a> *bdi = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keywordtype">double</span> last_penalty = 0;
  
  t_now = <a class="code" href="bgpd_8c.html#a57400e51b671bd48e19b86df877be1e9">bgp_clock</a> ();

  <span class="comment">/* Processing Unreachable Messages.  */</span>
  <span class="keywordflow">if</span> (<a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>-&gt;<a class="code" href="structbgp__info.html#ae6a0a53b7a3f457c0f479f635c20ec76">extra</a>)
    bdi = <a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>-&gt;<a class="code" href="structbgp__info.html#ae6a0a53b7a3f457c0f479f635c20ec76">extra</a>-&gt;<a class="code" href="structbgp__info__extra.html#a7ff3f44362518bf22b13989ec6924986">damp_info</a>;
  
  <span class="keywordflow">if</span> (bdi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <span class="comment">/* If there is no previous stability history. */</span>

      <span class="comment">/* RFC2439 said:</span>
<span class="comment">     1. allocate a damping structure.</span>
<span class="comment">         2. set figure-of-merit = 1.</span>
<span class="comment">         3. withdraw the route.  */</span>

      bdi =  <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba0469230ad2a9a5121c508a98d7d279c2">MTYPE_BGP_DAMP_INFO</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structbgp__damp__info.html">bgp_damp_info</a>));
      bdi-&gt;<a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a> = <a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>;
      bdi-&gt;<a class="code" href="structbgp__damp__info.html#a506a36cf4f20e2069a1623933c18d6fb">rn</a> = <a class="code" href="structbgp__damp__info.html#a506a36cf4f20e2069a1623933c18d6fb">rn</a>;
      bdi-&gt;<a class="code" href="structbgp__damp__info.html#a64957844448af43a55f25e72ffe419a6">penalty</a> = (attr_change ? <a class="code" href="bgp__damp_8h.html#acb4faa4de0633c71f02c70db3c1ab2a6">DEFAULT_PENALTY</a> / 2 : <a class="code" href="bgp__damp_8h.html#acb4faa4de0633c71f02c70db3c1ab2a6">DEFAULT_PENALTY</a>);
      bdi-&gt;<a class="code" href="structbgp__damp__info.html#ab12ae05f133ded91a152d8b42c33336a">flap</a> = 1;
      bdi-&gt;<a class="code" href="structbgp__damp__info.html#a79b767b81bcc0f2015c6da5651dfa149">start_time</a> = t_now;
      bdi-&gt;<a class="code" href="structbgp__damp__info.html#ad4151e652c9e1583cc8ff0ccde2dd72f">suppress_time</a> = 0;
      bdi-&gt;<a class="code" href="structbgp__damp__info.html#a212900332ed4c50d247893983896e937">index</a> = -1;
      bdi-&gt;<a class="code" href="structbgp__damp__info.html#a14549e505c1698c5d8473351caaa2d7f">afi</a> = <a class="code" href="structbgp__damp__info.html#a14549e505c1698c5d8473351caaa2d7f">afi</a>;
      bdi-&gt;<a class="code" href="structbgp__damp__info.html#a47ce9fc92a7ad8fd67a9c768d3f9fc00">safi</a> = <a class="code" href="structbgp__damp__info.html#a47ce9fc92a7ad8fd67a9c768d3f9fc00">safi</a>;
      (<a class="code" href="bgp__route_8c.html#a3afeebe128032bb8a486915820234af9">bgp_info_extra_get</a> (<a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>))-&gt;damp_info = bdi;
      <a class="code" href="bgp__damp_8c.html#a9adb7c9da2bfb12c80b3c0602bdda527">BGP_DAMP_LIST_ADD</a> (<a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>, bdi);
    }
  <span class="keywordflow">else</span>
    {
      last_penalty = bdi-&gt;<a class="code" href="structbgp__damp__info.html#a64957844448af43a55f25e72ffe419a6">penalty</a>;

      <span class="comment">/* 1. Set t-diff = t-now - t-updated.  */</span>
      bdi-&gt;<a class="code" href="structbgp__damp__info.html#a64957844448af43a55f25e72ffe419a6">penalty</a> = 
    (<a class="code" href="bgp__damp_8c.html#a04742fc672b86175444b4b94161c9a81">bgp_damp_decay</a> (t_now - bdi-&gt;<a class="code" href="structbgp__damp__info.html#a3d0c950f70317aedfd15a0b28feceae1">t_updated</a>, bdi-&gt;<a class="code" href="structbgp__damp__info.html#a64957844448af43a55f25e72ffe419a6">penalty</a>) 
     + (attr_change ? <a class="code" href="bgp__damp_8h.html#acb4faa4de0633c71f02c70db3c1ab2a6">DEFAULT_PENALTY</a> / 2 : <a class="code" href="bgp__damp_8h.html#acb4faa4de0633c71f02c70db3c1ab2a6">DEFAULT_PENALTY</a>));

      <span class="keywordflow">if</span> (bdi-&gt;<a class="code" href="structbgp__damp__info.html#a64957844448af43a55f25e72ffe419a6">penalty</a> &gt; <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#a46ab465397181f1fc58383f268e30885">ceiling</a>)
    bdi-&gt;<a class="code" href="structbgp__damp__info.html#a64957844448af43a55f25e72ffe419a6">penalty</a> = <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#a46ab465397181f1fc58383f268e30885">ceiling</a>;

      bdi-&gt;<a class="code" href="structbgp__damp__info.html#ab12ae05f133ded91a152d8b42c33336a">flap</a>++;
    }
  
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> ((<a class="code" href="structbgp__damp__info.html#a506a36cf4f20e2069a1623933c18d6fb">rn</a> == bdi-&gt;<a class="code" href="structbgp__damp__info.html#a506a36cf4f20e2069a1623933c18d6fb">rn</a>) &amp;&amp; (<a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a> == bdi-&gt;<a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>));
  
  bdi-&gt;<a class="code" href="structbgp__damp__info.html#acdc7e308a11230cd73c90b0dcf7a3cdf">lastrecord</a> = <a class="code" href="bgp__damp_8h.html#aeb2d15f73eff91038418b5c8596a8308">BGP_RECORD_WITHDRAW</a>;
  bdi-&gt;<a class="code" href="structbgp__damp__info.html#a3d0c950f70317aedfd15a0b28feceae1">t_updated</a> = t_now;

  <span class="comment">/* Make this route as historical status.  */</span>
  <a class="code" href="bgp__route_8c.html#a44f265aae5a483d9cef00d766759584a">bgp_info_set_flag</a> (<a class="code" href="structbgp__damp__info.html#a506a36cf4f20e2069a1623933c18d6fb">rn</a>, <a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>, <a class="code" href="bgp__route_8h.html#a57adf9fc517cc65fb9f4bcbf8ff796f2">BGP_INFO_HISTORY</a>);

  <span class="comment">/* Remove the route from a reuse list if it is on one.  */</span>
  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (bdi-&gt;<a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>-&gt;<a class="code" href="structbgp__info.html#a7ae2579adaf8f2fae14dc9d5fc23e976">flags</a>, <a class="code" href="bgp__route_8h.html#a8ef9b384054b6b52e7d0af4021a3cc05">BGP_INFO_DAMPED</a>))
    {
      <span class="comment">/* If decay rate isn&#39;t equal to 0, reinsert brn. */</span>  
      <span class="keywordflow">if</span> (bdi-&gt;<a class="code" href="structbgp__damp__info.html#a64957844448af43a55f25e72ffe419a6">penalty</a> != last_penalty)
    {
      <a class="code" href="bgp__damp_8c.html#a38fa0292f82b418960810ceb8c2d2309">bgp_reuse_list_delete</a> (bdi);
      <a class="code" href="bgp__damp_8c.html#a65aabd892cd32d8abc34163aa4c61582">bgp_reuse_list_add</a> (bdi);  
    }
      <span class="keywordflow">return</span> <a class="code" href="bgp__damp_8h.html#a0f58b7873622a8c3d2e28d38e30719e4">BGP_DAMP_SUPPRESSED</a>; 
    }

  <span class="comment">/* If not suppressed before, do annonunce this withdraw and</span>
<span class="comment">     insert into reuse_list.  */</span>
  <span class="keywordflow">if</span> (bdi-&gt;<a class="code" href="structbgp__damp__info.html#a64957844448af43a55f25e72ffe419a6">penalty</a> &gt;= <a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>-&gt;<a class="code" href="structbgp__damp__config.html#a61e0e7bdc6964b808d6796fe1019edbd">suppress_value</a>)
    {
      <a class="code" href="bgp__route_8c.html#a44f265aae5a483d9cef00d766759584a">bgp_info_set_flag</a> (<a class="code" href="structbgp__damp__info.html#a506a36cf4f20e2069a1623933c18d6fb">rn</a>, <a class="code" href="structbgp__damp__info.html#af37fca6e0e158d27ae0558caedbb6379">binfo</a>, <a class="code" href="bgp__route_8h.html#a8ef9b384054b6b52e7d0af4021a3cc05">BGP_INFO_DAMPED</a>);
      bdi-&gt;<a class="code" href="structbgp__damp__info.html#ad4151e652c9e1583cc8ff0ccde2dd72f">suppress_time</a> = t_now;
      <a class="code" href="bgp__damp_8c.html#af9283a47419c1af6dab5a1f220f3fa69">BGP_DAMP_LIST_DEL</a> (<a class="code" href="bgp__damp_8c.html#a3a204141fb82f4db060f07b20f6d34fc">damp</a>, bdi);
      <a class="code" href="bgp__damp_8c.html#a65aabd892cd32d8abc34163aa4c61582">bgp_reuse_list_add</a> (bdi);
    }

  <span class="keywordflow">return</span> <a class="code" href="bgp__damp_8h.html#aa51e39b231ea1edb713d9549a42d00a0">BGP_DAMP_USED</a>;
}
</pre></div>
</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="bgp__damp_8h.html">bgp_damp.h</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:11 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
