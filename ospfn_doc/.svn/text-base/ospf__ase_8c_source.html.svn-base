<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: ospfd/ospf_ase.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('ospf__ase_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">ospfd/ospf_ase.c</div>  </div>
</div>
<div class="contents">
<a href="ospf__ase_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * OSPF AS external route calculation.</span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 1999, 2000 Alex Zinin, Toshiaki Takada</span>
<a name="l00004"></a>00004 <span class="comment"> *</span>
<a name="l00005"></a>00005 <span class="comment"> * This file is part of GNU Zebra.</span>
<a name="l00006"></a>00006 <span class="comment"> *</span>
<a name="l00007"></a>00007 <span class="comment"> * GNU Zebra is free software; you can redistribute it and/or modify it</span>
<a name="l00008"></a>00008 <span class="comment"> * under the terms of the GNU General Public License as published by the</span>
<a name="l00009"></a>00009 <span class="comment"> * Free Software Foundation; either version 2, or (at your option) any</span>
<a name="l00010"></a>00010 <span class="comment"> * later version.</span>
<a name="l00011"></a>00011 <span class="comment"> *</span>
<a name="l00012"></a>00012 <span class="comment"> * GNU Zebra is distributed in the hope that it will be useful, but</span>
<a name="l00013"></a>00013 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00014"></a>00014 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00015"></a>00015 <span class="comment"> * General Public License for more details.</span>
<a name="l00016"></a>00016 <span class="comment"> *</span>
<a name="l00017"></a>00017 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00018"></a>00018 <span class="comment"> * along with GNU Zebra; see the file COPYING.  If not, write to the Free</span>
<a name="l00019"></a>00019 <span class="comment"> * Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA</span>
<a name="l00020"></a>00020 <span class="comment"> * 02111-1307, USA.</span>
<a name="l00021"></a>00021 <span class="comment"> */</span>
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;<a class="code" href="zebra_8h.html">zebra.h</a>&gt;</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="thread_8h.html">thread.h</a>&quot;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="memory_8h.html">memory.h</a>&quot;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="hash_8h.html">hash.h</a>&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="linklist_8h.html">linklist.h</a>&quot;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="prefix_8h.html">prefix.h</a>&quot;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="if_8h.html">if.h</a>&quot;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &quot;<a class="code" href="table_8h.html">table.h</a>&quot;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="vty_8h.html">vty.h</a>&quot;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &quot;<a class="code" href="log_8h.html">log.h</a>&quot;</span>
<a name="l00034"></a>00034 
<a name="l00035"></a>00035 <span class="preprocessor">#include &quot;<a class="code" href="ospfd_8h.html">ospfd/ospfd.h</a>&quot;</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include &quot;<a class="code" href="ospf__interface_8h.html">ospfd/ospf_interface.h</a>&quot;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#include &quot;<a class="code" href="ospf__ism_8h.html">ospfd/ospf_ism.h</a>&quot;</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include &quot;<a class="code" href="ospf__asbr_8h.html">ospfd/ospf_asbr.h</a>&quot;</span>
<a name="l00039"></a>00039 <span class="preprocessor">#include &quot;<a class="code" href="ospf__lsa_8h.html">ospfd/ospf_lsa.h</a>&quot;</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include &quot;<a class="code" href="ospf__lsdb_8h.html">ospfd/ospf_lsdb.h</a>&quot;</span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &quot;<a class="code" href="ospf__neighbor_8h.html">ospfd/ospf_neighbor.h</a>&quot;</span>
<a name="l00042"></a>00042 <span class="preprocessor">#include &quot;<a class="code" href="ospf__nsm_8h.html">ospfd/ospf_nsm.h</a>&quot;</span>
<a name="l00043"></a>00043 <span class="preprocessor">#include &quot;<a class="code" href="ospf__spf_8h.html">ospfd/ospf_spf.h</a>&quot;</span>
<a name="l00044"></a>00044 <span class="preprocessor">#include &quot;<a class="code" href="ospf__route_8h.html">ospfd/ospf_route.h</a>&quot;</span>
<a name="l00045"></a>00045 <span class="preprocessor">#include &quot;<a class="code" href="ospf__ase_8h.html">ospfd/ospf_ase.h</a>&quot;</span>
<a name="l00046"></a>00046 <span class="preprocessor">#include &quot;<a class="code" href="ospf__zebra_8h.html">ospfd/ospf_zebra.h</a>&quot;</span>
<a name="l00047"></a>00047 <span class="preprocessor">#include &quot;<a class="code" href="ospf__dump_8h.html">ospfd/ospf_dump.h</a>&quot;</span>
<a name="l00048"></a>00048 
<a name="l00049"></a>00049 <span class="keyword">struct </span><a class="code" href="structospf__route.html">ospf_route</a> *
<a name="l00050"></a><a class="code" href="ospf__ase_8h.html#a7106f03ac42a622e936dfe2b714f3566">00050</a> <a class="code" href="ospf__ase_8c.html#a5e8bc396fd6aac3eba792e511f2ae56b">ospf_find_asbr_route</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>,
<a name="l00051"></a>00051               <span class="keyword">struct</span> <a class="code" href="structroute__table.html">route_table</a> *rtrs, <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *asbr)
<a name="l00052"></a>00052 {
<a name="l00053"></a>00053   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00054"></a>00054   <span class="keyword">struct </span><a class="code" href="structospf__route.html">ospf_route</a> *or, *best = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00055"></a>00055   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00056"></a>00056   <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *chosen;
<a name="l00057"></a>00057 
<a name="l00058"></a>00058   <span class="comment">/* Sanity check. */</span>
<a name="l00059"></a>00059   <span class="keywordflow">if</span> (rtrs == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00060"></a>00060     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00061"></a>00061 
<a name="l00062"></a>00062   rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (rtrs, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) asbr);
<a name="l00063"></a>00063   <span class="keywordflow">if</span> (! rn)
<a name="l00064"></a>00064     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00065"></a>00065 
<a name="l00066"></a>00066   <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00067"></a>00067 
<a name="l00068"></a>00068   chosen = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l00069"></a>00069 
<a name="l00070"></a>00070   <span class="comment">/* First try to find intra-area non-bb paths. */</span>
<a name="l00071"></a>00071   <span class="keywordflow">if</span> (!<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (ospf-&gt;<a class="code" href="structospf.html#adef61932fdc53ba8c61df0343606337f">config</a>, <a class="code" href="ospfd_8h.html#a7a46ad36d9ae6d67014a0ae4f1e8c95a">OSPF_RFC1583_COMPATIBLE</a>))
<a name="l00072"></a>00072     <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> ((<span class="keyword">struct</span> <a class="code" href="structlist.html">list</a> *) rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>, node, or))
<a name="l00073"></a>00073       <span class="keywordflow">if</span> (or-&gt;<a class="code" href="structospf__route.html#a78ed87939e621a405c66aeb71fa1944d">cost</a> &lt; <a class="code" href="ospfd_8h.html#ac490c9aeaac791b5e779097813b5298e">OSPF_LS_INFINITY</a>)
<a name="l00074"></a>00074         <span class="keywordflow">if</span> (!<a class="code" href="ospfd_8h.html#a3c9df8914219b5ad5aa165ecc3428ae0">OSPF_IS_AREA_ID_BACKBONE</a> (or-&gt;<a class="code" href="structospf__route.html#ab37ba617082e6dec95c8f67eb9b66d7a">u</a>.<a class="code" href="structospf__route.html#a8b1951ef3f626e1c61e30309c36084a3">std</a>.<a class="code" href="structroute__standard.html#adb68650a53fa9189d6af5d484c01f690">area_id</a>) &amp;&amp;
<a name="l00075"></a>00075             or-&gt;<a class="code" href="structospf__route.html#a599273b0e8bc1a908cbedd22dcd78bbd">path_type</a> == <a class="code" href="ospf__route_8h.html#abc7a6177d1cdfac4e8a93ddd4235b08c">OSPF_PATH_INTRA_AREA</a>)
<a name="l00076"></a>00076           <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (chosen, or);
<a name="l00077"></a>00077 
<a name="l00078"></a>00078   <span class="comment">/* If none is found -- look through all. */</span>
<a name="l00079"></a>00079   <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (chosen) == 0)
<a name="l00080"></a>00080     {
<a name="l00081"></a>00081       <a class="code" href="linklist_8c.html#a15aa9f8cf8424489adf1efd4d075aac6">list_free</a> (chosen);
<a name="l00082"></a>00082       chosen = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l00083"></a>00083     }
<a name="l00084"></a>00084 
<a name="l00085"></a>00085   <span class="comment">/* Now find the route with least cost. */</span>
<a name="l00086"></a>00086   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (chosen, node, or))
<a name="l00087"></a>00087     <span class="keywordflow">if</span> (or-&gt;<a class="code" href="structospf__route.html#a78ed87939e621a405c66aeb71fa1944d">cost</a> &lt; <a class="code" href="ospfd_8h.html#ac490c9aeaac791b5e779097813b5298e">OSPF_LS_INFINITY</a>)
<a name="l00088"></a>00088       {
<a name="l00089"></a>00089         <span class="keywordflow">if</span> (best == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00090"></a>00090           best = or;
<a name="l00091"></a>00091         <span class="keywordflow">else</span> <span class="keywordflow">if</span> (best-&gt;<a class="code" href="structospf__route.html#a78ed87939e621a405c66aeb71fa1944d">cost</a> &gt; or-&gt;<a class="code" href="structospf__route.html#a78ed87939e621a405c66aeb71fa1944d">cost</a>)
<a name="l00092"></a>00092           best = or;
<a name="l00093"></a>00093         <span class="keywordflow">else</span> <span class="keywordflow">if</span> (best-&gt;<a class="code" href="structospf__route.html#a78ed87939e621a405c66aeb71fa1944d">cost</a> == or-&gt;<a class="code" href="structospf__route.html#a78ed87939e621a405c66aeb71fa1944d">cost</a> &amp;&amp;
<a name="l00094"></a>00094                  <a class="code" href="prefix_8h.html#aed79e5e7f07f40fd10b39c04fbb24fc8">IPV4_ADDR_CMP</a> (&amp;best-&gt;<a class="code" href="structospf__route.html#ab37ba617082e6dec95c8f67eb9b66d7a">u</a>.<a class="code" href="structospf__route.html#a8b1951ef3f626e1c61e30309c36084a3">std</a>.<a class="code" href="structroute__standard.html#adb68650a53fa9189d6af5d484c01f690">area_id</a>,
<a name="l00095"></a>00095                                 &amp;or-&gt;<a class="code" href="structospf__route.html#ab37ba617082e6dec95c8f67eb9b66d7a">u</a>.<a class="code" href="structospf__route.html#a8b1951ef3f626e1c61e30309c36084a3">std</a>.<a class="code" href="structroute__standard.html#adb68650a53fa9189d6af5d484c01f690">area_id</a>) &lt; 0)
<a name="l00096"></a>00096           best = or;
<a name="l00097"></a>00097       }
<a name="l00098"></a>00098 
<a name="l00099"></a>00099   <span class="keywordflow">if</span> (chosen != rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
<a name="l00100"></a>00100     <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (chosen);
<a name="l00101"></a>00101 
<a name="l00102"></a>00102   <span class="keywordflow">return</span> best;
<a name="l00103"></a>00103 }
<a name="l00104"></a>00104 
<a name="l00105"></a>00105 <span class="keyword">struct </span><a class="code" href="structospf__route.html">ospf_route</a> * 
<a name="l00106"></a><a class="code" href="ospf__ase_8h.html#a9f4a9699a17d3351b210c3c43ee1ed30">00106</a> <a class="code" href="ospf__ase_8c.html#ab2cf385d9e91bd4283b6ae5db56e639e">ospf_find_asbr_route_through_area</a> (<span class="keyword">struct</span> <a class="code" href="structroute__table.html">route_table</a> *rtrs, 
<a name="l00107"></a>00107                    <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *asbr, 
<a name="l00108"></a>00108                    <span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l00109"></a>00109 {
<a name="l00110"></a>00110   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00111"></a>00111 
<a name="l00112"></a>00112   <span class="comment">/* Sanity check. */</span>
<a name="l00113"></a>00113   <span class="keywordflow">if</span> (rtrs == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00114"></a>00114     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00115"></a>00115 
<a name="l00116"></a>00116   rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (rtrs, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) asbr);
<a name="l00117"></a>00117  
<a name="l00118"></a>00118   <span class="keywordflow">if</span> (rn)
<a name="l00119"></a>00119     {
<a name="l00120"></a>00120       <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00121"></a>00121       <span class="keyword">struct </span><a class="code" href="structospf__route.html">ospf_route</a> *or;
<a name="l00122"></a>00122 
<a name="l00123"></a>00123       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00124"></a>00124 
<a name="l00125"></a>00125       <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> ((<span class="keyword">struct</span> <a class="code" href="structlist.html">list</a> *) rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>, node, or))
<a name="l00126"></a>00126         <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;or-&gt;<a class="code" href="structospf__route.html#ab37ba617082e6dec95c8f67eb9b66d7a">u</a>.<a class="code" href="structospf__route.html#a8b1951ef3f626e1c61e30309c36084a3">std</a>.<a class="code" href="structroute__standard.html#adb68650a53fa9189d6af5d484c01f690">area_id</a>, &amp;area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>))
<a name="l00127"></a>00127           <span class="keywordflow">return</span> or;
<a name="l00128"></a>00128     }
<a name="l00129"></a>00129 
<a name="l00130"></a>00130   <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00131"></a>00131 }
<a name="l00132"></a>00132 
<a name="l00133"></a>00133 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00134"></a><a class="code" href="ospf__ase_8c.html#a043e3e1035e8574fb053fb967e97870f">00134</a> <a class="code" href="ospf__ase_8c.html#a043e3e1035e8574fb053fb967e97870f">ospf_ase_complete_direct_routes</a> (<span class="keyword">struct</span> <a class="code" href="structospf__route.html">ospf_route</a> *ro, <span class="keyword">struct</span> in_addr <a class="code" href="structnexthop.html">nexthop</a>)
<a name="l00135"></a>00135 {
<a name="l00136"></a>00136   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00137"></a>00137   <span class="keyword">struct </span><a class="code" href="structospf__path.html">ospf_path</a> *op;
<a name="l00138"></a>00138   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l00139"></a>00139 
<a name="l00140"></a>00140   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ro-&gt;<a class="code" href="structospf__route.html#af687c07f0e39d7c3a29813777032b075">paths</a>, node, op))
<a name="l00141"></a>00141     <span class="keywordflow">if</span> (op-&gt;<a class="code" href="structospf__path.html#a01fa8433844b50cd272e6e082114c257">nexthop</a>.s_addr == 0)
<a name="l00142"></a>00142       op-&gt;<a class="code" href="structospf__path.html#a01fa8433844b50cd272e6e082114c257">nexthop</a>.s_addr = nexthop.s_addr;
<a name="l00143"></a>00143 }
<a name="l00144"></a>00144 
<a name="l00145"></a>00145 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00146"></a><a class="code" href="ospf__ase_8c.html#ae90a71096e4e9e4933ca2fcfcfc2fa9a">00146</a> <a class="code" href="ospf__ase_8c.html#ae90a71096e4e9e4933ca2fcfcfc2fa9a">ospf_ase_forward_address_check</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr fwd_addr)
<a name="l00147"></a>00147 {
<a name="l00148"></a>00148   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *ifn;
<a name="l00149"></a>00149   <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
<a name="l00150"></a>00150 
<a name="l00151"></a>00151   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a977d3608343fe5db7900ec646880cb6a">oiflist</a>, ifn, oi))
<a name="l00152"></a>00152     <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a96741fba2059f7591f57d18325664b7b">if_is_operative</a> (oi-&gt;<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>))
<a name="l00153"></a>00153       <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> != <a class="code" href="ospf__interface_8h.html#a45798a2a8b566abd1907f7ae8bc0a2be">OSPF_IFTYPE_VIRTUALLINK</a>)
<a name="l00154"></a>00154         <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;oi-&gt;<a class="code" href="structospf__interface.html#a43493bc2b5d951e3e38ace850332eca1">address</a>-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>, &amp;fwd_addr))
<a name="l00155"></a>00155           <span class="keywordflow">return</span> 0;
<a name="l00156"></a>00156   
<a name="l00157"></a>00157   <span class="keywordflow">return</span> 1;
<a name="l00158"></a>00158 }
<a name="l00159"></a>00159 
<a name="l00160"></a>00160 <span class="preprocessor">#if 0</span>
<a name="l00161"></a>00161 <span class="preprocessor"></span><span class="comment">/* Calculate ASBR route. */</span>
<a name="l00162"></a>00162 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structospf__route.html">ospf_route</a> *
<a name="l00163"></a>00163 ospf_ase_calculate_asbr_route (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>,
<a name="l00164"></a>00164                    <span class="keyword">struct</span> <a class="code" href="structroute__table.html">route_table</a> *rt_network,
<a name="l00165"></a>00165                    <span class="keyword">struct</span> <a class="code" href="structroute__table.html">route_table</a> *rt_router,
<a name="l00166"></a>00166                    <span class="keyword">struct</span> <a class="code" href="structas__external__lsa.html">as_external_lsa</a> *<a class="code" href="spgrid_8c.html#a7c4593313d1839d57c28594a69357bab">al</a>)
<a name="l00167"></a>00167 {
<a name="l00168"></a>00168   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> asbr;
<a name="l00169"></a>00169   <span class="keyword">struct </span><a class="code" href="structospf__route.html">ospf_route</a> *asbr_route;
<a name="l00170"></a>00170   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00171"></a>00171 
<a name="l00172"></a>00172   <span class="comment">/* Find ASBR route from Router routing table. */</span>
<a name="l00173"></a>00173   asbr.family = AF_INET;
<a name="l00174"></a>00174   asbr.prefix = al-&gt;<a class="code" href="structas__external__lsa.html#afcdf76cb8210eac6c3708d4e100e45db">header</a>.<a class="code" href="structlsa__header.html#a14cecc24f7274d590fc9666f9c62fdd4">adv_router</a>;
<a name="l00175"></a>00175   asbr.prefixlen = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;
<a name="l00176"></a>00176   <a class="code" href="prefix_8c.html#a24093dc2a781bf7f05d8a410899de5c0">apply_mask_ipv4</a> (&amp;asbr);
<a name="l00177"></a>00177 
<a name="l00178"></a>00178   asbr_route = <a class="code" href="ospf__ase_8c.html#a5e8bc396fd6aac3eba792e511f2ae56b">ospf_find_asbr_route</a> (ospf, rt_router, &amp;asbr);
<a name="l00179"></a>00179 
<a name="l00180"></a>00180   <span class="keywordflow">if</span> (asbr_route == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00181"></a>00181     {
<a name="l00182"></a>00182       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (lsa, LSA))
<a name="l00183"></a>00183     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_ase_calculate(): Route to ASBR %s not found&quot;</span>,
<a name="l00184"></a>00184             inet_ntoa (asbr.prefix));
<a name="l00185"></a>00185       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00186"></a>00186     }
<a name="l00187"></a>00187 
<a name="l00188"></a>00188   <span class="keywordflow">if</span> (!(asbr_route-&gt;<a class="code" href="structospf__route.html#ab37ba617082e6dec95c8f67eb9b66d7a">u</a>.<a class="code" href="structospf__route.html#a8b1951ef3f626e1c61e30309c36084a3">std</a>.<a class="code" href="structroute__standard.html#abd1fb7a470e51e2dc894282f5c1a637b">flags</a> &amp; <a class="code" href="ospf__lsa_8h.html#a050470d5439fd96299124e0debe3444f">ROUTER_LSA_EXTERNAL</a>))
<a name="l00189"></a>00189     {
<a name="l00190"></a>00190       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (lsa, LSA))
<a name="l00191"></a>00191     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_ase_calculate(): Originating router is not an ASBR&quot;</span>);
<a name="l00192"></a>00192       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00193"></a>00193     }
<a name="l00194"></a>00194    
<a name="l00195"></a>00195   <span class="keywordflow">if</span> (al-&gt;<a class="code" href="structas__external__lsa.html#a51c29f7223123224ae18468efee20ee0">e</a>[0].<a class="code" href="structas__external__lsa.html#a5817fa032c9f6c8f23d975ec1c5dfa20">fwd_addr</a>.s_addr != 0)
<a name="l00196"></a>00196     {
<a name="l00197"></a>00197       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (lsa, LSA))
<a name="l00198"></a>00198     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_ase_calculate(): &quot;</span>
<a name="l00199"></a>00199             <span class="stringliteral">&quot;Forwarding address is not 0.0.0.0.&quot;</span>);
<a name="l00200"></a>00200 
<a name="l00201"></a>00201       <span class="keywordflow">if</span> (! <a class="code" href="ospf__ase_8c.html#ae90a71096e4e9e4933ca2fcfcfc2fa9a">ospf_ase_forward_address_check</a> (ospf, al-&gt;<a class="code" href="structas__external__lsa.html#a51c29f7223123224ae18468efee20ee0">e</a>[0].<a class="code" href="structas__external__lsa.html#a5817fa032c9f6c8f23d975ec1c5dfa20">fwd_addr</a>))
<a name="l00202"></a>00202     {
<a name="l00203"></a>00203       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (lsa, LSA))
<a name="l00204"></a>00204         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_ase_calculate(): &quot;</span>
<a name="l00205"></a>00205             <span class="stringliteral">&quot;Forwarding address is one of our addresses, Ignore.&quot;</span>);
<a name="l00206"></a>00206       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00207"></a>00207         }
<a name="l00208"></a>00208 
<a name="l00209"></a>00209       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (lsa, LSA))
<a name="l00210"></a>00210     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_ase_calculate(): &quot;</span>
<a name="l00211"></a>00211             <span class="stringliteral">&quot;Looking up in the Network Routing Table.&quot;</span>);
<a name="l00212"></a>00212 
<a name="l00213"></a>00213       <span class="comment">/* Looking up the path to the fwd_addr from Network route. */</span>
<a name="l00214"></a>00214       asbr.family = AF_INET;
<a name="l00215"></a>00215       asbr.prefix = al-&gt;<a class="code" href="structas__external__lsa.html#a51c29f7223123224ae18468efee20ee0">e</a>[0].<a class="code" href="structas__external__lsa.html#a5817fa032c9f6c8f23d975ec1c5dfa20">fwd_addr</a>;
<a name="l00216"></a>00216       asbr.prefixlen = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;
<a name="l00217"></a>00217 
<a name="l00218"></a>00218       rn = <a class="code" href="table_8c.html#a948f4335026cd8417c7424e85156ae55">route_node_match</a> (rt_network, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;asbr);
<a name="l00219"></a>00219    
<a name="l00220"></a>00220       <span class="keywordflow">if</span> (rn == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00221"></a>00221     {
<a name="l00222"></a>00222       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (lsa, LSA))
<a name="l00223"></a>00223         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_ase_calculate(): &quot;</span>
<a name="l00224"></a>00224             <span class="stringliteral">&quot;Couldn&#39;t find a route to the forwarding address.&quot;</span>);
<a name="l00225"></a>00225       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00226"></a>00226     }
<a name="l00227"></a>00227 
<a name="l00228"></a>00228       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00229"></a>00229 
<a name="l00230"></a>00230       <span class="keywordflow">if</span> ((asbr_route = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00231"></a>00231     {
<a name="l00232"></a>00232       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (lsa, LSA))
<a name="l00233"></a>00233         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_ase_calculate(): &quot;</span>
<a name="l00234"></a>00234             <span class="stringliteral">&quot;Somehow OSPF route to ASBR is lost&quot;</span>);
<a name="l00235"></a>00235       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00236"></a>00236     }
<a name="l00237"></a>00237     }
<a name="l00238"></a>00238 
<a name="l00239"></a>00239   <span class="keywordflow">return</span> asbr_route;
<a name="l00240"></a>00240 }
<a name="l00241"></a>00241 <span class="preprocessor">#endif</span>
<a name="l00242"></a>00242 <span class="preprocessor"></span>
<a name="l00243"></a>00243 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structospf__route.html">ospf_route</a> *
<a name="l00244"></a><a class="code" href="ospf__ase_8c.html#a75ddb7279bd188d92cac5f28d6381d21">00244</a> <a class="code" href="ospf__ase_8c.html#a75ddb7279bd188d92cac5f28d6381d21">ospf_ase_calculate_new_route</a> (<span class="keyword">struct</span> <a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa,
<a name="l00245"></a>00245                   <span class="keyword">struct</span> <a class="code" href="structospf__route.html">ospf_route</a> *asbr_route, u_int32_t <a class="code" href="structmetric.html">metric</a>)
<a name="l00246"></a>00246 {
<a name="l00247"></a>00247   <span class="keyword">struct </span><a class="code" href="structas__external__lsa.html">as_external_lsa</a> *<a class="code" href="spgrid_8c.html#a7c4593313d1839d57c28594a69357bab">al</a>;
<a name="l00248"></a>00248   <span class="keyword">struct </span><a class="code" href="structospf__route.html">ospf_route</a> *<span class="keyword">new</span>;
<a name="l00249"></a>00249 
<a name="l00250"></a>00250   al = (<span class="keyword">struct </span><a class="code" href="structas__external__lsa.html">as_external_lsa</a> *) lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>;
<a name="l00251"></a>00251 
<a name="l00252"></a>00252   <span class="keyword">new</span> = <a class="code" href="ospf__route_8c.html#a953988fffb9c0a44d09450c4201944d0">ospf_route_new</a> ();
<a name="l00253"></a>00253 
<a name="l00254"></a>00254   <span class="comment">/* Set redistributed type -- does make sense? */</span>
<a name="l00255"></a>00255   <span class="comment">/* new-&gt;type = type; */</span>
<a name="l00256"></a>00256   <span class="keyword">new</span>-&gt;<a class="code" href="structospf__route.html#aa8332d802bc4429aed889042d5c6be6e">id</a> = al-&gt;<a class="code" href="structas__external__lsa.html#afcdf76cb8210eac6c3708d4e100e45db">header</a>.<a class="code" href="structlsa__header.html#a8f4602786c2de855a418b553a4555683">id</a>;
<a name="l00257"></a>00257   <span class="keyword">new</span>-&gt;mask = al-&gt;<a class="code" href="structas__external__lsa.html#aa860fac77968c497496d16df6d325651">mask</a>;
<a name="l00258"></a>00258 
<a name="l00259"></a>00259   <span class="keywordflow">if</span> (!<a class="code" href="ospf__lsa_8h.html#a57c9f704846d60fce6698705135004ca">IS_EXTERNAL_METRIC</a> (al-&gt;<a class="code" href="structas__external__lsa.html#a51c29f7223123224ae18468efee20ee0">e</a>[0].<a class="code" href="structas__external__lsa.html#ae0866e78e3123cc6a8d5c870b89dc0bd">tos</a>))
<a name="l00260"></a>00260     {
<a name="l00261"></a>00261       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (lsa, LSA))
<a name="l00262"></a>00262     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Route[External]: type-1 created.&quot;</span>);
<a name="l00263"></a>00263       <span class="keyword">new</span>-&gt;path_type = <a class="code" href="ospf__route_8h.html#a15dab014460164847059902ea4535834">OSPF_PATH_TYPE1_EXTERNAL</a>;
<a name="l00264"></a>00264       <span class="keyword">new</span>-&gt;cost = asbr_route-&gt;<a class="code" href="structospf__route.html#a78ed87939e621a405c66aeb71fa1944d">cost</a> + <a class="code" href="structas__external__lsa.html#a583a3356d3e3d921a39af23d884de7b8">metric</a>;        <span class="comment">/* X + Y */</span>
<a name="l00265"></a>00265     }
<a name="l00266"></a>00266   <span class="keywordflow">else</span>
<a name="l00267"></a>00267     {
<a name="l00268"></a>00268       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (lsa, LSA))
<a name="l00269"></a>00269     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Route[External]: type-2 created.&quot;</span>);
<a name="l00270"></a>00270       <span class="keyword">new</span>-&gt;path_type = <a class="code" href="ospf__route_8h.html#aa9752c4570157da8a3258dc4cdf23ce5">OSPF_PATH_TYPE2_EXTERNAL</a>;
<a name="l00271"></a>00271       <span class="keyword">new</span>-&gt;cost = asbr_route-&gt;<a class="code" href="structospf__route.html#a78ed87939e621a405c66aeb71fa1944d">cost</a>;         <span class="comment">/* X */</span>
<a name="l00272"></a>00272       <span class="keyword">new</span>-&gt;u.ext.type2_cost = <a class="code" href="structas__external__lsa.html#a583a3356d3e3d921a39af23d884de7b8">metric</a>;           <span class="comment">/* Y */</span>
<a name="l00273"></a>00273     }
<a name="l00274"></a>00274 
<a name="l00275"></a>00275   <span class="keyword">new</span>-&gt;type = <a class="code" href="ospf__route_8h.html#a7f5d4a2b626b300ae96a502438de0615">OSPF_DESTINATION_NETWORK</a>;
<a name="l00276"></a>00276   <span class="keyword">new</span>-&gt;u.ext.origin = lsa;
<a name="l00277"></a>00277   <span class="keyword">new</span>-&gt;u.ext.tag = ntohl (al-&gt;<a class="code" href="structas__external__lsa.html#a51c29f7223123224ae18468efee20ee0">e</a>[0].<a class="code" href="structas__external__lsa.html#a6d3446651375dc471db4366afe6ae3ea">route_tag</a>);
<a name="l00278"></a>00278   <span class="keyword">new</span>-&gt;u.ext.asbr = asbr_route;
<a name="l00279"></a>00279 
<a name="l00280"></a>00280   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<span class="keyword">new</span> != asbr_route);
<a name="l00281"></a>00281 
<a name="l00282"></a>00282   <span class="keywordflow">return</span> <span class="keyword">new</span>;
<a name="l00283"></a>00283 }
<a name="l00284"></a>00284 
<a name="l00285"></a><a class="code" href="ospf__ase_8c.html#adabf761265a505e8e16c1f021f32c10c">00285</a> <span class="preprocessor">#define OSPF_ASE_CALC_INTERVAL 1</span>
<a name="l00286"></a>00286 <span class="preprocessor"></span>
<a name="l00287"></a>00287 <span class="keywordtype">int</span>
<a name="l00288"></a><a class="code" href="ospf__ase_8h.html#a848de1412c756ba2ae58882d10264a5b">00288</a> <a class="code" href="ospf__ase_8c.html#aabe2473abaca8a62db05574a61c7a233">ospf_ase_calculate_route</a> (<span class="keyword">struct</span> ospf *ospf, <span class="keyword">struct</span> <a class="code" href="structospf__lsa.html">ospf_lsa</a> * lsa)
<a name="l00289"></a>00289 {
<a name="l00290"></a>00290   u_int32_t <a class="code" href="structas__external__lsa.html#a583a3356d3e3d921a39af23d884de7b8">metric</a>;
<a name="l00291"></a>00291   <span class="keyword">struct </span><a class="code" href="structas__external__lsa.html">as_external_lsa</a> *<a class="code" href="spgrid_8c.html#a7c4593313d1839d57c28594a69357bab">al</a>;
<a name="l00292"></a>00292   <span class="keyword">struct </span><a class="code" href="structospf__route.html">ospf_route</a> *asbr_route;
<a name="l00293"></a>00293   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> asbr, p;
<a name="l00294"></a>00294   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00295"></a>00295   <span class="keyword">struct </span><a class="code" href="structospf__route.html">ospf_route</a> *<span class="keyword">new</span>, *or;
<a name="l00296"></a>00296   <span class="keywordtype">int</span> ret;
<a name="l00297"></a>00297   
<a name="l00298"></a>00298   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (lsa);
<a name="l00299"></a>00299   al = (<span class="keyword">struct </span><a class="code" href="structas__external__lsa.html">as_external_lsa</a> *) lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>;
<a name="l00300"></a>00300 
<a name="l00301"></a>00301   if (lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>-&gt;<a class="code" href="structlsa__header.html#a609df537f85c14e7146107e0cb67eae7">type</a> == <a class="code" href="ospf__lsa_8h.html#adc97c8397af1195230a4a98bf67e5a9d">OSPF_AS_NSSA_LSA</a>)
<a name="l00302"></a>00302     <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l00303"></a>00303       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_ase_calc(): Processing Type-7&quot;</span>);
<a name="l00304"></a>00304 
<a name="l00305"></a>00305   <span class="comment">/* Stay away from any Local Translated Type-7 LSAs */</span>
<a name="l00306"></a>00306   <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (lsa-&gt;<a class="code" href="structospf__lsa.html#aa8c833176affd799afeb8db16cdb2602">flags</a>, <a class="code" href="ospf__lsa_8h.html#a20f98f1fb4931335ddf4dd15d8fe9040">OSPF_LSA_LOCAL_XLT</a>))
<a name="l00307"></a>00307     {
<a name="l00308"></a>00308       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l00309"></a>00309     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_ase_calc(): Rejecting Local Xlt&#39;d&quot;</span>);
<a name="l00310"></a>00310       <span class="keywordflow">return</span> 0;
<a name="l00311"></a>00311     }
<a name="l00312"></a>00312 
<a name="l00313"></a>00313   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (lsa, LSA))
<a name="l00314"></a>00314     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Route[External]: Calculate AS-external-LSA to %s/%d&quot;</span>,
<a name="l00315"></a>00315         inet_ntoa (al-&gt;<a class="code" href="structas__external__lsa.html#afcdf76cb8210eac6c3708d4e100e45db">header</a>.<a class="code" href="structlsa__header.html#a8f4602786c2de855a418b553a4555683">id</a>), <a class="code" href="prefix_8c.html#ab83ffad6b766ddd0ef87e4da228c322d">ip_masklen</a> (al-&gt;<a class="code" href="structas__external__lsa.html#aa860fac77968c497496d16df6d325651">mask</a>));
<a name="l00316"></a>00316   <span class="comment">/* (1) If the cost specified by the LSA is LSInfinity, or if the</span>
<a name="l00317"></a>00317 <span class="comment">         LSA&#39;s LS age is equal to MaxAge, then examine the next LSA. */</span>
<a name="l00318"></a>00318   <span class="keywordflow">if</span> ((metric = <a class="code" href="ospf__lsa_8h.html#af484b7995c962cc7558d5fc385b835fc">GET_METRIC</a> (al-&gt;<a class="code" href="structas__external__lsa.html#a51c29f7223123224ae18468efee20ee0">e</a>[0].<a class="code" href="structas__external__lsa.html#a583a3356d3e3d921a39af23d884de7b8">metric</a>)) &gt;= <a class="code" href="ospfd_8h.html#ac490c9aeaac791b5e779097813b5298e">OSPF_LS_INFINITY</a>)
<a name="l00319"></a>00319     {
<a name="l00320"></a>00320       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (lsa, LSA))
<a name="l00321"></a>00321     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Route[External]: Metric is OSPF_LS_INFINITY&quot;</span>);
<a name="l00322"></a>00322       <span class="keywordflow">return</span> 0;
<a name="l00323"></a>00323     }
<a name="l00324"></a>00324   <span class="keywordflow">if</span> (<a class="code" href="ospf__lsa_8h.html#a29c1c83c9c5e24d75e33d7efd0d12b88">IS_LSA_MAXAGE</a> (lsa))
<a name="l00325"></a>00325     {
<a name="l00326"></a>00326       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (lsa, LSA))
<a name="l00327"></a>00327     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Route[External]: AS-external-LSA is MAXAGE&quot;</span>);
<a name="l00328"></a>00328       <span class="keywordflow">return</span> 0;
<a name="l00329"></a>00329     }
<a name="l00330"></a>00330   
<a name="l00331"></a>00331   <span class="comment">/* (2) If the LSA was originated by the calculating router itself,</span>
<a name="l00332"></a>00332 <span class="comment">     examine the next LSA. */</span>
<a name="l00333"></a>00333   <span class="keywordflow">if</span> (<a class="code" href="ospf__lsa_8h.html#aba06df657f75f729003128da649322f8">IS_LSA_SELF</a> (lsa))
<a name="l00334"></a>00334     {
<a name="l00335"></a>00335       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (lsa, LSA))
<a name="l00336"></a>00336     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Route[External]: AS-external-LSA is self originated&quot;</span>);
<a name="l00337"></a>00337       <span class="keywordflow">return</span> 0;
<a name="l00338"></a>00338     }
<a name="l00339"></a>00339 
<a name="l00340"></a>00340   <span class="comment">/* (3) Call the destination described by the LSA N.  N&#39;s address is</span>
<a name="l00341"></a>00341 <span class="comment">         obtained by masking the LSA&#39;s Link State ID with the</span>
<a name="l00342"></a>00342 <span class="comment">     network/subnet mask contained in the body of the LSA.  Look</span>
<a name="l00343"></a>00343 <span class="comment">     up the routing table entries (potentially one per attached</span>
<a name="l00344"></a>00344 <span class="comment">     area) for the AS boundary router (ASBR) that originated the</span>
<a name="l00345"></a>00345 <span class="comment">     LSA. If no entries exist for router ASBR (i.e., ASBR is</span>
<a name="l00346"></a>00346 <span class="comment">     unreachable), do nothing with this LSA and consider the next</span>
<a name="l00347"></a>00347 <span class="comment">     in the list. */</span>
<a name="l00348"></a>00348   
<a name="l00349"></a>00349   asbr.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
<a name="l00350"></a>00350   asbr.prefix = al-&gt;<a class="code" href="structas__external__lsa.html#afcdf76cb8210eac6c3708d4e100e45db">header</a>.<a class="code" href="structlsa__header.html#a14cecc24f7274d590fc9666f9c62fdd4">adv_router</a>;
<a name="l00351"></a>00351   asbr.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;
<a name="l00352"></a>00352   <a class="code" href="prefix_8c.html#a24093dc2a781bf7f05d8a410899de5c0">apply_mask_ipv4</a> (&amp;asbr);
<a name="l00353"></a>00353   
<a name="l00354"></a>00354   asbr_route = <a class="code" href="ospf__ase_8c.html#a5e8bc396fd6aac3eba792e511f2ae56b">ospf_find_asbr_route</a> (ospf, ospf-&gt;<a class="code" href="structospf.html#a0c2e7f55defc0862ed00e1230cd53bd4">new_rtrs</a>, &amp;asbr);
<a name="l00355"></a>00355   <span class="keywordflow">if</span> (asbr_route == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00356"></a>00356     {
<a name="l00357"></a>00357       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (lsa, LSA))
<a name="l00358"></a>00358     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Route[External]: Can&#39;t find originating ASBR route&quot;</span>);
<a name="l00359"></a>00359       <span class="keywordflow">return</span> 0;
<a name="l00360"></a>00360     }
<a name="l00361"></a>00361   <span class="keywordflow">if</span> (!(asbr_route-&gt;<a class="code" href="structospf__route.html#ab37ba617082e6dec95c8f67eb9b66d7a">u</a>.<a class="code" href="structospf__route.html#a8b1951ef3f626e1c61e30309c36084a3">std</a>.<a class="code" href="structroute__standard.html#abd1fb7a470e51e2dc894282f5c1a637b">flags</a> &amp; <a class="code" href="ospf__lsa_8h.html#a050470d5439fd96299124e0debe3444f">ROUTER_LSA_EXTERNAL</a>))
<a name="l00362"></a>00362     {
<a name="l00363"></a>00363       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (lsa, LSA))
<a name="l00364"></a>00364     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Route[External]: Originating router is not an ASBR&quot;</span>);
<a name="l00365"></a>00365       <span class="keywordflow">return</span> 0;
<a name="l00366"></a>00366     }
<a name="l00367"></a>00367   
<a name="l00368"></a>00368   <span class="comment">/*     Else, this LSA describes an AS external path to destination</span>
<a name="l00369"></a>00369 <span class="comment">     N.  Examine the forwarding address specified in the AS-</span>
<a name="l00370"></a>00370 <span class="comment">     external-LSA.  This indicates the IP address to which</span>
<a name="l00371"></a>00371 <span class="comment">     packets for the destination should be forwarded. */</span>
<a name="l00372"></a>00372   
<a name="l00373"></a>00373   <span class="keywordflow">if</span> (al-&gt;<a class="code" href="structas__external__lsa.html#a51c29f7223123224ae18468efee20ee0">e</a>[0].<a class="code" href="structas__external__lsa.html#a5817fa032c9f6c8f23d975ec1c5dfa20">fwd_addr</a>.s_addr == 0)
<a name="l00374"></a>00374     {
<a name="l00375"></a>00375       <span class="comment">/* If the forwarding address is set to 0.0.0.0, packets should</span>
<a name="l00376"></a>00376 <span class="comment">     be sent to the ASBR itself. Among the multiple routing table</span>
<a name="l00377"></a>00377 <span class="comment">     entries for the ASBR, select the preferred entry as follows.</span>
<a name="l00378"></a>00378 <span class="comment">     If RFC1583Compatibility is set to &quot;disabled&quot;, prune the set</span>
<a name="l00379"></a>00379 <span class="comment">     of routing table entries for the ASBR as described in</span>
<a name="l00380"></a>00380 <span class="comment">     Section 16.4.1. In any case, among the remaining routing</span>
<a name="l00381"></a>00381 <span class="comment">     table entries, select the routing table entry with the least</span>
<a name="l00382"></a>00382 <span class="comment">     cost; when there are multiple least cost routing table</span>
<a name="l00383"></a>00383 <span class="comment">     entries the entry whose associated area has the largest OSPF</span>
<a name="l00384"></a>00384 <span class="comment">     Area ID (when considered as an unsigned 32-bit integer) is</span>
<a name="l00385"></a>00385 <span class="comment">     chosen. */</span>
<a name="l00386"></a>00386 
<a name="l00387"></a>00387       <span class="comment">/* asbr_route already contains the requested route */</span>
<a name="l00388"></a>00388     }
<a name="l00389"></a>00389   <span class="keywordflow">else</span>
<a name="l00390"></a>00390     {
<a name="l00391"></a>00391       <span class="comment">/* If the forwarding address is non-zero, look up the</span>
<a name="l00392"></a>00392 <span class="comment">     forwarding address in the routing table.[24] The matching</span>
<a name="l00393"></a>00393 <span class="comment">     routing table entry must specify an intra-area or inter-area</span>
<a name="l00394"></a>00394 <span class="comment">     path; if no such path exists, do nothing with the LSA and</span>
<a name="l00395"></a>00395 <span class="comment">     consider the next in the list. */</span>
<a name="l00396"></a>00396       <span class="keywordflow">if</span> (! <a class="code" href="ospf__ase_8c.html#ae90a71096e4e9e4933ca2fcfcfc2fa9a">ospf_ase_forward_address_check</a> (ospf, al-&gt;<a class="code" href="structas__external__lsa.html#a51c29f7223123224ae18468efee20ee0">e</a>[0].<a class="code" href="structas__external__lsa.html#a5817fa032c9f6c8f23d975ec1c5dfa20">fwd_addr</a>))
<a name="l00397"></a>00397     {
<a name="l00398"></a>00398       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (lsa, LSA))
<a name="l00399"></a>00399         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Route[External]: Forwarding address is our router &quot;</span>
<a name="l00400"></a>00400             <span class="stringliteral">&quot;address&quot;</span>);
<a name="l00401"></a>00401       <span class="keywordflow">return</span> 0;
<a name="l00402"></a>00402     }
<a name="l00403"></a>00403       
<a name="l00404"></a>00404       asbr.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
<a name="l00405"></a>00405       asbr.prefix = al-&gt;<a class="code" href="structas__external__lsa.html#a51c29f7223123224ae18468efee20ee0">e</a>[0].<a class="code" href="structas__external__lsa.html#a5817fa032c9f6c8f23d975ec1c5dfa20">fwd_addr</a>;
<a name="l00406"></a>00406       asbr.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;
<a name="l00407"></a>00407 
<a name="l00408"></a>00408       rn = <a class="code" href="table_8c.html#a948f4335026cd8417c7424e85156ae55">route_node_match</a> (ospf-&gt;<a class="code" href="structospf.html#a1fd3dcac2e3c565e23fce6884ffb097f">new_table</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;asbr);
<a name="l00409"></a>00409       
<a name="l00410"></a>00410       <span class="keywordflow">if</span> (rn == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> || (asbr_route = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00411"></a>00411     {
<a name="l00412"></a>00412       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (lsa, LSA))
<a name="l00413"></a>00413         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Route[External]: Can&#39;t find route to forwarding &quot;</span>
<a name="l00414"></a>00414             <span class="stringliteral">&quot;address&quot;</span>);
<a name="l00415"></a>00415       <span class="keywordflow">if</span> (rn)
<a name="l00416"></a>00416         <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00417"></a>00417       <span class="keywordflow">return</span> 0;
<a name="l00418"></a>00418     }
<a name="l00419"></a>00419 
<a name="l00420"></a>00420       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00421"></a>00421     }
<a name="l00422"></a>00422 
<a name="l00423"></a>00423   <span class="comment">/* (4) Let X be the cost specified by the preferred routing table</span>
<a name="l00424"></a>00424 <span class="comment">         entry for the ASBR/forwarding address, and Y the cost</span>
<a name="l00425"></a>00425 <span class="comment">     specified in the LSA.  X is in terms of the link state</span>
<a name="l00426"></a>00426 <span class="comment">     metric, and Y is a type 1 or 2 external metric. */</span>
<a name="l00427"></a>00427              
<a name="l00428"></a>00428 
<a name="l00429"></a>00429   <span class="comment">/* (5) Look up the routing table entry for the destination N.  If</span>
<a name="l00430"></a>00430 <span class="comment">         no entry exists for N, install the AS external path to N,</span>
<a name="l00431"></a>00431 <span class="comment">     with next hop equal to the list of next hops to the</span>
<a name="l00432"></a>00432 <span class="comment">     forwarding address, and advertising router equal to ASBR.</span>
<a name="l00433"></a>00433 <span class="comment">     If the external metric type is 1, then the path-type is set</span>
<a name="l00434"></a>00434 <span class="comment">     to type 1 external and the cost is equal to X+Y.  If the</span>
<a name="l00435"></a>00435 <span class="comment">     external metric type is 2, the path-type is set to type 2</span>
<a name="l00436"></a>00436 <span class="comment">     external, the link state component of the route&#39;s cost is X,</span>
<a name="l00437"></a>00437 <span class="comment">     and the type 2 cost is Y. */</span>
<a name="l00438"></a>00438   <span class="keyword">new</span> = <a class="code" href="ospf__ase_8c.html#a75ddb7279bd188d92cac5f28d6381d21">ospf_ase_calculate_new_route</a> (lsa, asbr_route, metric);
<a name="l00439"></a>00439 
<a name="l00440"></a>00440   <span class="comment">/* (6) Compare the AS external path described by the LSA with the</span>
<a name="l00441"></a>00441 <span class="comment">         existing paths in N&#39;s routing table entry, as follows. If</span>
<a name="l00442"></a>00442 <span class="comment">     the new path is preferred, it replaces the present paths in</span>
<a name="l00443"></a>00443 <span class="comment">     N&#39;s routing table entry.  If the new path is of equal</span>
<a name="l00444"></a>00444 <span class="comment">     preference, it is added to N&#39;s routing table entry&#39;s list of</span>
<a name="l00445"></a>00445 <span class="comment">     paths. */</span>
<a name="l00446"></a>00446 
<a name="l00447"></a>00447   <span class="comment">/* Set prefix. */</span>
<a name="l00448"></a>00448   p.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
<a name="l00449"></a>00449   p.prefix = al-&gt;<a class="code" href="structas__external__lsa.html#afcdf76cb8210eac6c3708d4e100e45db">header</a>.<a class="code" href="structlsa__header.html#a8f4602786c2de855a418b553a4555683">id</a>;
<a name="l00450"></a>00450   p.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = <a class="code" href="prefix_8c.html#ab83ffad6b766ddd0ef87e4da228c322d">ip_masklen</a> (al-&gt;<a class="code" href="structas__external__lsa.html#aa860fac77968c497496d16df6d325651">mask</a>);
<a name="l00451"></a>00451 
<a name="l00452"></a>00452   <span class="comment">/* if there is a Intra/Inter area route to the N</span>
<a name="l00453"></a>00453 <span class="comment">     do not install external route */</span>
<a name="l00454"></a>00454   <span class="keywordflow">if</span> (rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (ospf-&gt;<a class="code" href="structospf.html#a1fd3dcac2e3c565e23fce6884ffb097f">new_table</a>,
<a name="l00455"></a>00455                   (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;p))
<a name="l00456"></a>00456     {
<a name="l00457"></a>00457       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a>(rn);
<a name="l00458"></a>00458       <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00459"></a>00459     <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;Route[External]: rn-&gt;info NULL&quot;</span>);
<a name="l00460"></a>00460       <span class="keywordflow">if</span> (<span class="keyword">new</span>)
<a name="l00461"></a>00461     <a class="code" href="ospf__route_8c.html#a2343f1c889ff5837642b6eb2a3d213f7">ospf_route_free</a> (<span class="keyword">new</span>);
<a name="l00462"></a>00462       <span class="keywordflow">return</span> 0;
<a name="l00463"></a>00463     }
<a name="l00464"></a>00464   <span class="comment">/* Find a route to the same dest */</span>
<a name="l00465"></a>00465   <span class="comment">/* If there is no route, create new one. */</span>
<a name="l00466"></a>00466   <span class="keywordflow">if</span> (rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (ospf-&gt;<a class="code" href="structospf.html#a0b8f6a35ae74cd601d0a775df4d96f13">new_external_route</a>,
<a name="l00467"></a>00467                    (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;p))
<a name="l00468"></a>00468       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a>(rn);
<a name="l00469"></a>00469 
<a name="l00470"></a>00470   <span class="keywordflow">if</span> (!rn || (or = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00471"></a>00471     {
<a name="l00472"></a>00472       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (lsa, LSA))
<a name="l00473"></a>00473     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Route[External]: Adding a new route %s/%d&quot;</span>,
<a name="l00474"></a>00474             inet_ntoa (p.<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>), p.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
<a name="l00475"></a>00475 
<a name="l00476"></a>00476       <a class="code" href="ospf__route_8c.html#a902c992a455d2f5e414d5f28446c0f22">ospf_route_add</a> (ospf-&gt;<a class="code" href="structospf.html#a0b8f6a35ae74cd601d0a775df4d96f13">new_external_route</a>, &amp;p, <span class="keyword">new</span>, asbr_route);
<a name="l00477"></a>00477 
<a name="l00478"></a>00478       <span class="keywordflow">if</span> (al-&gt;<a class="code" href="structas__external__lsa.html#a51c29f7223123224ae18468efee20ee0">e</a>[0].<a class="code" href="structas__external__lsa.html#a5817fa032c9f6c8f23d975ec1c5dfa20">fwd_addr</a>.s_addr)
<a name="l00479"></a>00479     <a class="code" href="ospf__ase_8c.html#a043e3e1035e8574fb053fb967e97870f">ospf_ase_complete_direct_routes</a> (<span class="keyword">new</span>, al-&gt;<a class="code" href="structas__external__lsa.html#a51c29f7223123224ae18468efee20ee0">e</a>[0].<a class="code" href="structas__external__lsa.html#a5817fa032c9f6c8f23d975ec1c5dfa20">fwd_addr</a>);
<a name="l00480"></a>00480       <span class="keywordflow">return</span> 0;
<a name="l00481"></a>00481     }
<a name="l00482"></a>00482   <span class="keywordflow">else</span>
<a name="l00483"></a>00483     {
<a name="l00484"></a>00484       <span class="comment">/* (a) Intra-area and inter-area paths are always preferred</span>
<a name="l00485"></a>00485 <span class="comment">             over AS external paths.</span>
<a name="l00486"></a>00486 <span class="comment"></span>
<a name="l00487"></a>00487 <span class="comment">         (b) Type 1 external paths are always preferred over type 2</span>
<a name="l00488"></a>00488 <span class="comment">             external paths. When all paths are type 2 external</span>
<a name="l00489"></a>00489 <span class="comment">         paths, the paths with the smallest advertised type 2</span>
<a name="l00490"></a>00490 <span class="comment">         metric are always preferred. */</span>
<a name="l00491"></a>00491       ret = <a class="code" href="ospf__route_8c.html#a578fe7fdb12e2d1c8d258a1019e49c48">ospf_route_cmp</a> (ospf, <span class="keyword">new</span>, or);
<a name="l00492"></a>00492   
<a name="l00493"></a>00493   <span class="comment">/*     (c) If the new AS external path is still indistinguishable</span>
<a name="l00494"></a>00494 <span class="comment">             from the current paths in the N&#39;s routing table entry,</span>
<a name="l00495"></a>00495 <span class="comment">         and RFC1583Compatibility is set to &quot;disabled&quot;, select</span>
<a name="l00496"></a>00496 <span class="comment">         the preferred paths based on the intra-AS paths to the</span>
<a name="l00497"></a>00497 <span class="comment">         ASBR/forwarding addresses, as specified in Section</span>
<a name="l00498"></a>00498 <span class="comment">         16.4.1.</span>
<a name="l00499"></a>00499 <span class="comment"></span>
<a name="l00500"></a>00500 <span class="comment">         (d) If the new AS external path is still indistinguishable</span>
<a name="l00501"></a>00501 <span class="comment">             from the current paths in the N&#39;s routing table entry,</span>
<a name="l00502"></a>00502 <span class="comment">         select the preferred path based on a least cost</span>
<a name="l00503"></a>00503 <span class="comment">         comparison.  Type 1 external paths are compared by</span>
<a name="l00504"></a>00504 <span class="comment">         looking at the sum of the distance to the forwarding</span>
<a name="l00505"></a>00505 <span class="comment">         address and the advertised type 1 metric (X+Y).  Type 2</span>
<a name="l00506"></a>00506 <span class="comment">         external paths advertising equal type 2 metrics are</span>
<a name="l00507"></a>00507 <span class="comment">         compared by looking at the distance to the forwarding</span>
<a name="l00508"></a>00508 <span class="comment">         addresses.</span>
<a name="l00509"></a>00509 <span class="comment">  */</span>
<a name="l00510"></a>00510       <span class="comment">/* New route is better */</span>
<a name="l00511"></a>00511       <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l00512"></a>00512     {
<a name="l00513"></a>00513       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (lsa, LSA))
<a name="l00514"></a>00514         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Route[External]: New route is better&quot;</span>);
<a name="l00515"></a>00515       <a class="code" href="ospf__route_8c.html#a57e1e00a8853861a883983f4827489b2">ospf_route_subst</a> (rn, <span class="keyword">new</span>, asbr_route);
<a name="l00516"></a>00516       <span class="keywordflow">if</span> (al-&gt;<a class="code" href="structas__external__lsa.html#a51c29f7223123224ae18468efee20ee0">e</a>[0].<a class="code" href="structas__external__lsa.html#a5817fa032c9f6c8f23d975ec1c5dfa20">fwd_addr</a>.s_addr)
<a name="l00517"></a>00517         <a class="code" href="ospf__ase_8c.html#a043e3e1035e8574fb053fb967e97870f">ospf_ase_complete_direct_routes</a> (<span class="keyword">new</span>, al-&gt;<a class="code" href="structas__external__lsa.html#a51c29f7223123224ae18468efee20ee0">e</a>[0].<a class="code" href="structas__external__lsa.html#a5817fa032c9f6c8f23d975ec1c5dfa20">fwd_addr</a>);
<a name="l00518"></a>00518       or = <span class="keyword">new</span>;
<a name="l00519"></a>00519       <span class="keyword">new</span> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00520"></a>00520     }
<a name="l00521"></a>00521       <span class="comment">/* Old route is better */</span>
<a name="l00522"></a>00522       <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ret &gt; 0)
<a name="l00523"></a>00523     {
<a name="l00524"></a>00524       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (lsa, LSA))
<a name="l00525"></a>00525         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Route[External]: Old route is better&quot;</span>);
<a name="l00526"></a>00526       <span class="comment">/* do nothing */</span>
<a name="l00527"></a>00527     }
<a name="l00528"></a>00528       <span class="comment">/* Routes are equal */</span>
<a name="l00529"></a>00529       <span class="keywordflow">else</span>
<a name="l00530"></a>00530     {
<a name="l00531"></a>00531       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (lsa, LSA))
<a name="l00532"></a>00532         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Route[External]: Routes are equal&quot;</span>);
<a name="l00533"></a>00533       <a class="code" href="ospf__route_8c.html#a18acfffe212a39ef1493640aa022501a">ospf_route_copy_nexthops</a> (or, asbr_route-&gt;<a class="code" href="structospf__route.html#af687c07f0e39d7c3a29813777032b075">paths</a>);
<a name="l00534"></a>00534       <span class="keywordflow">if</span> (al-&gt;<a class="code" href="structas__external__lsa.html#a51c29f7223123224ae18468efee20ee0">e</a>[0].<a class="code" href="structas__external__lsa.html#a5817fa032c9f6c8f23d975ec1c5dfa20">fwd_addr</a>.s_addr)
<a name="l00535"></a>00535         <a class="code" href="ospf__ase_8c.html#a043e3e1035e8574fb053fb967e97870f">ospf_ase_complete_direct_routes</a> (or, al-&gt;<a class="code" href="structas__external__lsa.html#a51c29f7223123224ae18468efee20ee0">e</a>[0].<a class="code" href="structas__external__lsa.html#a5817fa032c9f6c8f23d975ec1c5dfa20">fwd_addr</a>);
<a name="l00536"></a>00536     }
<a name="l00537"></a>00537     }
<a name="l00538"></a>00538   <span class="comment">/* Make sure setting newly calculated ASBR route.*/</span>
<a name="l00539"></a>00539   or-&gt;<a class="code" href="structospf__route.html#ab37ba617082e6dec95c8f67eb9b66d7a">u</a>.<a class="code" href="structospf__route.html#a1bf8ff97df95625684ecc9fda5ee8e52">ext</a>.<a class="code" href="structroute__external.html#a930fd3803aade7e2a7468eda3ee2cd9a">asbr</a> = asbr_route;
<a name="l00540"></a>00540   <span class="keywordflow">if</span> (<span class="keyword">new</span>)
<a name="l00541"></a>00541     <a class="code" href="ospf__route_8c.html#a2343f1c889ff5837642b6eb2a3d213f7">ospf_route_free</a> (<span class="keyword">new</span>);
<a name="l00542"></a>00542 
<a name="l00543"></a>00543   lsa-&gt;<a class="code" href="structospf__lsa.html#a3571c90c1cc324c48c893ab7210f145e">route</a> = or;
<a name="l00544"></a>00544   <span class="keywordflow">return</span> 0;
<a name="l00545"></a>00545 }
<a name="l00546"></a>00546 
<a name="l00547"></a>00547 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00548"></a><a class="code" href="ospf__ase_8c.html#aeb1061c857b7588c19bb788970a39834">00548</a> <a class="code" href="ospf__ase_8c.html#aeb1061c857b7588c19bb788970a39834">ospf_ase_route_match_same</a> (<span class="keyword">struct</span> <a class="code" href="structroute__table.html">route_table</a> *rt, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>,
<a name="l00549"></a>00549                <span class="keyword">struct</span> <a class="code" href="structospf__route.html">ospf_route</a> *newor)
<a name="l00550"></a>00550 {
<a name="l00551"></a>00551   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00552"></a>00552   <span class="keyword">struct </span><a class="code" href="structospf__route.html">ospf_route</a> *or;
<a name="l00553"></a>00553   <span class="keyword">struct </span><a class="code" href="structospf__path.html">ospf_path</a> *op;
<a name="l00554"></a>00554   <span class="keyword">struct </span><a class="code" href="structospf__path.html">ospf_path</a> *newop;
<a name="l00555"></a>00555   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *n1;
<a name="l00556"></a>00556   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *n2;
<a name="l00557"></a>00557 
<a name="l00558"></a>00558   <span class="keywordflow">if</span> (! rt || ! prefix)
<a name="l00559"></a>00559     <span class="keywordflow">return</span> 0;
<a name="l00560"></a>00560 
<a name="l00561"></a>00561    rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (rt, prefix);
<a name="l00562"></a>00562    <span class="keywordflow">if</span> (! rn)
<a name="l00563"></a>00563      <span class="keywordflow">return</span> 0;
<a name="l00564"></a>00564  
<a name="l00565"></a>00565    <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00566"></a>00566 
<a name="l00567"></a>00567    or = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l00568"></a>00568    <span class="keywordflow">if</span> (or-&gt;<a class="code" href="structospf__route.html#a599273b0e8bc1a908cbedd22dcd78bbd">path_type</a> != newor-&gt;<a class="code" href="structospf__route.html#a599273b0e8bc1a908cbedd22dcd78bbd">path_type</a>)
<a name="l00569"></a>00569      <span class="keywordflow">return</span> 0;
<a name="l00570"></a>00570 
<a name="l00571"></a>00571    <span class="keywordflow">switch</span> (or-&gt;<a class="code" href="structospf__route.html#a599273b0e8bc1a908cbedd22dcd78bbd">path_type</a>)
<a name="l00572"></a>00572      {
<a name="l00573"></a>00573      <span class="keywordflow">case</span> <a class="code" href="ospf__route_8h.html#a15dab014460164847059902ea4535834">OSPF_PATH_TYPE1_EXTERNAL</a>:
<a name="l00574"></a>00574        <span class="keywordflow">if</span> (or-&gt;<a class="code" href="structospf__route.html#a78ed87939e621a405c66aeb71fa1944d">cost</a> != newor-&gt;<a class="code" href="structospf__route.html#a78ed87939e621a405c66aeb71fa1944d">cost</a>)
<a name="l00575"></a>00575      <span class="keywordflow">return</span> 0;
<a name="l00576"></a>00576        <span class="keywordflow">break</span>;
<a name="l00577"></a>00577      <span class="keywordflow">case</span> <a class="code" href="ospf__route_8h.html#aa9752c4570157da8a3258dc4cdf23ce5">OSPF_PATH_TYPE2_EXTERNAL</a>:
<a name="l00578"></a>00578        <span class="keywordflow">if</span> ((or-&gt;<a class="code" href="structospf__route.html#a78ed87939e621a405c66aeb71fa1944d">cost</a> != newor-&gt;<a class="code" href="structospf__route.html#a78ed87939e621a405c66aeb71fa1944d">cost</a>) ||
<a name="l00579"></a>00579        (or-&gt;<a class="code" href="structospf__route.html#ab37ba617082e6dec95c8f67eb9b66d7a">u</a>.<a class="code" href="structospf__route.html#a1bf8ff97df95625684ecc9fda5ee8e52">ext</a>.<a class="code" href="structroute__external.html#a93319cd5451e479e19c4e1b3e7d33b54">type2_cost</a> != newor-&gt;<a class="code" href="structospf__route.html#ab37ba617082e6dec95c8f67eb9b66d7a">u</a>.<a class="code" href="structospf__route.html#a1bf8ff97df95625684ecc9fda5ee8e52">ext</a>.<a class="code" href="structroute__external.html#a93319cd5451e479e19c4e1b3e7d33b54">type2_cost</a>))
<a name="l00580"></a>00580      <span class="keywordflow">return</span> 0;
<a name="l00581"></a>00581        <span class="keywordflow">break</span>;
<a name="l00582"></a>00582      <span class="keywordflow">default</span>:
<a name="l00583"></a>00583        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (0);
<a name="l00584"></a>00584        <span class="keywordflow">return</span> 0;
<a name="l00585"></a>00585      }
<a name="l00586"></a>00586    
<a name="l00587"></a>00587    <span class="keywordflow">if</span> (or-&gt;<a class="code" href="structospf__route.html#af687c07f0e39d7c3a29813777032b075">paths</a>-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a> != newor-&gt;<a class="code" href="structospf__route.html#af687c07f0e39d7c3a29813777032b075">paths</a>-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a>)
<a name="l00588"></a>00588      <span class="keywordflow">return</span> 0;
<a name="l00589"></a>00589        
<a name="l00590"></a>00590    <span class="comment">/* Check each path. */</span>
<a name="l00591"></a>00591    <span class="keywordflow">for</span> (n1 = <a class="code" href="linklist_8h.html#a3d4492ca03b023aeecd4d6b0cdaa16fb">listhead</a> (or-&gt;<a class="code" href="structospf__route.html#af687c07f0e39d7c3a29813777032b075">paths</a>), n2 = <a class="code" href="linklist_8h.html#a3d4492ca03b023aeecd4d6b0cdaa16fb">listhead</a> (newor-&gt;<a class="code" href="structospf__route.html#af687c07f0e39d7c3a29813777032b075">paths</a>);
<a name="l00592"></a>00592     n1 &amp;&amp; n2; n1 = <a class="code" href="linklist_8h.html#ad3f7fe9d8d096c4afc1bdd5b1f46c5bb">listnextnode</a> (n1), n2 = <a class="code" href="linklist_8h.html#ad3f7fe9d8d096c4afc1bdd5b1f46c5bb">listnextnode</a> (n2))
<a name="l00593"></a>00593      { 
<a name="l00594"></a>00594        op = <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (n1);
<a name="l00595"></a>00595        newop = <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (n2);
<a name="l00596"></a>00596        
<a name="l00597"></a>00597        <span class="keywordflow">if</span> (! <a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;op-&gt;<a class="code" href="structospf__path.html#a01fa8433844b50cd272e6e082114c257">nexthop</a>, &amp;newop-&gt;<a class="code" href="structospf__path.html#a01fa8433844b50cd272e6e082114c257">nexthop</a>))
<a name="l00598"></a>00598      <span class="keywordflow">return</span> 0;
<a name="l00599"></a>00599        <span class="keywordflow">if</span> (op-&gt;<a class="code" href="structospf__path.html#a7275881f3f46eace28604c8ebc0ed654">ifindex</a> != newop-&gt;<a class="code" href="structospf__path.html#a7275881f3f46eace28604c8ebc0ed654">ifindex</a>)
<a name="l00600"></a>00600      <span class="keywordflow">return</span> 0;
<a name="l00601"></a>00601      }
<a name="l00602"></a>00602    <span class="keywordflow">return</span> 1;
<a name="l00603"></a>00603 }
<a name="l00604"></a>00604 
<a name="l00605"></a>00605 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00606"></a><a class="code" href="ospf__ase_8c.html#a79cc08a1acde4013be4c6e6a29151bab">00606</a> <a class="code" href="ospf__ase_8c.html#a79cc08a1acde4013be4c6e6a29151bab">ospf_ase_compare_tables</a> (<span class="keyword">struct</span> <a class="code" href="structroute__table.html">route_table</a> *new_external_route,
<a name="l00607"></a>00607              <span class="keyword">struct</span> <a class="code" href="structroute__table.html">route_table</a> *old_external_route)
<a name="l00608"></a>00608 {
<a name="l00609"></a>00609   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn, *new_rn;
<a name="l00610"></a>00610   <span class="keyword">struct </span><a class="code" href="structospf__route.html">ospf_route</a> *or;
<a name="l00611"></a>00611   
<a name="l00612"></a>00612   <span class="comment">/* Remove deleted routes */</span>
<a name="l00613"></a>00613   <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (old_external_route); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
<a name="l00614"></a>00614     <span class="keywordflow">if</span> ((or = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>))
<a name="l00615"></a>00615       {
<a name="l00616"></a>00616     <span class="keywordflow">if</span> (! (new_rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (new_external_route, &amp;rn-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>)))
<a name="l00617"></a>00617       <a class="code" href="ospf__zebra_8c.html#a083ae682548f0d7eb0761a2469c8d3f3">ospf_zebra_delete</a> ((<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *) &amp;rn-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>, or);
<a name="l00618"></a>00618     <span class="keywordflow">else</span>
<a name="l00619"></a>00619       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (new_rn);
<a name="l00620"></a>00620       }
<a name="l00621"></a>00621   
<a name="l00622"></a>00622     
<a name="l00623"></a>00623   <span class="comment">/* Install new routes */</span>
<a name="l00624"></a>00624   <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (new_external_route); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
<a name="l00625"></a>00625     <span class="keywordflow">if</span> ((or = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00626"></a>00626       <span class="keywordflow">if</span> (! <a class="code" href="ospf__ase_8c.html#aeb1061c857b7588c19bb788970a39834">ospf_ase_route_match_same</a> (old_external_route, &amp;rn-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>, or))
<a name="l00627"></a>00627     <a class="code" href="ospf__zebra_8c.html#a8045c2db458b9ad1e679863cf369e5be">ospf_zebra_add</a> ((<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *) &amp;rn-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>, or);
<a name="l00628"></a>00628                        
<a name="l00629"></a>00629   <span class="keywordflow">return</span> 0;
<a name="l00630"></a>00630 }
<a name="l00631"></a>00631 
<a name="l00632"></a>00632 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00633"></a><a class="code" href="ospf__ase_8c.html#a4f3500c986bc2bbf4d483721a1b6775a">00633</a> <a class="code" href="ospf__ase_8c.html#a4f3500c986bc2bbf4d483721a1b6775a">ospf_ase_calculate_timer</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>)
<a name="l00634"></a>00634 {
<a name="l00635"></a>00635   <span class="keyword">struct </span>ospf *ospf;
<a name="l00636"></a>00636   <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa;
<a name="l00637"></a>00637   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00638"></a>00638   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00639"></a>00639   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l00640"></a>00640 
<a name="l00641"></a>00641   ospf = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (t);
<a name="l00642"></a>00642   ospf-&gt;<a class="code" href="structospf.html#ac589f939b5118b77086d3af51633ed3c">t_ase_calc</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00643"></a>00643 
<a name="l00644"></a>00644   <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#a2f06ef705d6aff76dc54f1a1ab5802b6">ase_calc</a>)
<a name="l00645"></a>00645     {
<a name="l00646"></a>00646       ospf-&gt;<a class="code" href="structospf.html#a2f06ef705d6aff76dc54f1a1ab5802b6">ase_calc</a> = 0;
<a name="l00647"></a>00647 
<a name="l00648"></a>00648       <span class="comment">/* Calculate external route for each AS-external-LSA */</span>
<a name="l00649"></a>00649       <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#ae56a8a7b638bd22caf86ea3d810fdbd9">EXTERNAL_LSDB</a> (ospf), rn, lsa)
<a name="l00650"></a>00650     <a class="code" href="ospf__ase_8c.html#aabe2473abaca8a62db05574a61c7a233">ospf_ase_calculate_route</a> (ospf, lsa);
<a name="l00651"></a>00651 
<a name="l00652"></a>00652       <span class="comment">/*  This version simple adds to the table all NSSA areas  */</span>
<a name="l00653"></a>00653       <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#ad20715ef15a9c610284474aa9f1df3bc">anyNSSA</a>)
<a name="l00654"></a>00654     <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, node, area))
<a name="l00655"></a>00655       {
<a name="l00656"></a>00656         <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l00657"></a>00657           <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_ase_calculate_timer(): looking at area %s&quot;</span>,
<a name="l00658"></a>00658              inet_ntoa (area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>));
<a name="l00659"></a>00659 
<a name="l00660"></a>00660         <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a> == <a class="code" href="ospfd_8h.html#a871478d6ecced0907ee1f67c5dbacf99">OSPF_AREA_NSSA</a>)
<a name="l00661"></a>00661           <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#aa704d331d2ac4e4034faca5c0f177364">NSSA_LSDB</a> (area), rn, lsa)
<a name="l00662"></a>00662         <a class="code" href="ospf__ase_8c.html#aabe2473abaca8a62db05574a61c7a233">ospf_ase_calculate_route</a> (ospf, lsa);
<a name="l00663"></a>00663       }
<a name="l00664"></a>00664       <span class="comment">/* kevinm: And add the NSSA routes in ospf_top */</span>
<a name="l00665"></a>00665       <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#aa704d331d2ac4e4034faca5c0f177364">NSSA_LSDB</a> (ospf),rn,lsa)
<a name="l00666"></a>00666             <a class="code" href="ospf__ase_8c.html#aabe2473abaca8a62db05574a61c7a233">ospf_ase_calculate_route</a>(ospf,lsa);
<a name="l00667"></a>00667 
<a name="l00668"></a>00668       <span class="comment">/* Compare old and new external routing table and install the</span>
<a name="l00669"></a>00669 <span class="comment">     difference info zebra/kernel */</span>
<a name="l00670"></a>00670       <a class="code" href="ospf__ase_8c.html#a79cc08a1acde4013be4c6e6a29151bab">ospf_ase_compare_tables</a> (ospf-&gt;<a class="code" href="structospf.html#a0b8f6a35ae74cd601d0a775df4d96f13">new_external_route</a>,
<a name="l00671"></a>00671                    ospf-&gt;<a class="code" href="structospf.html#aa4376d3468d1d9fd5a6ed373e149338c">old_external_route</a>);
<a name="l00672"></a>00672 
<a name="l00673"></a>00673       <span class="comment">/* Delete old external routing table */</span>
<a name="l00674"></a>00674       <a class="code" href="ospf__route_8c.html#a1af9a7462973d18c31f1f610ff70e338">ospf_route_table_free</a> (ospf-&gt;<a class="code" href="structospf.html#aa4376d3468d1d9fd5a6ed373e149338c">old_external_route</a>);
<a name="l00675"></a>00675       ospf-&gt;<a class="code" href="structospf.html#aa4376d3468d1d9fd5a6ed373e149338c">old_external_route</a> = ospf-&gt;<a class="code" href="structospf.html#a0b8f6a35ae74cd601d0a775df4d96f13">new_external_route</a>;
<a name="l00676"></a>00676       ospf-&gt;<a class="code" href="structospf.html#a0b8f6a35ae74cd601d0a775df4d96f13">new_external_route</a> = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();
<a name="l00677"></a>00677     }
<a name="l00678"></a>00678   <span class="keywordflow">return</span> 0;
<a name="l00679"></a>00679 }
<a name="l00680"></a>00680 
<a name="l00681"></a>00681 <span class="keywordtype">void</span>
<a name="l00682"></a><a class="code" href="ospf__ase_8h.html#ab59848bcee12da49fb0f02b3fe225fbf">00682</a> <a class="code" href="ospf__ase_8c.html#a8e097f55230eec4539a22f5eda781d90">ospf_ase_calculate_schedule</a> (<span class="keyword">struct</span> ospf *ospf)
<a name="l00683"></a>00683 {
<a name="l00684"></a>00684   <span class="keywordflow">if</span> (ospf == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00685"></a>00685     <span class="keywordflow">return</span>;
<a name="l00686"></a>00686 
<a name="l00687"></a>00687   ospf-&gt;<a class="code" href="structospf.html#a2f06ef705d6aff76dc54f1a1ab5802b6">ase_calc</a> = 1;
<a name="l00688"></a>00688 }
<a name="l00689"></a>00689 
<a name="l00690"></a>00690 <span class="keywordtype">void</span>
<a name="l00691"></a><a class="code" href="ospf__ase_8h.html#a4dd901cdf9344f6fceecef8794e73094">00691</a> <a class="code" href="ospf__ase_8c.html#a1a8e03352bf6bfefef4dbc963822a8e6">ospf_ase_calculate_timer_add</a> (<span class="keyword">struct</span> ospf *ospf)
<a name="l00692"></a>00692 {
<a name="l00693"></a>00693   <span class="keywordflow">if</span> (ospf == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00694"></a>00694     <span class="keywordflow">return</span>;
<a name="l00695"></a>00695 
<a name="l00696"></a>00696   <span class="keywordflow">if</span> (! ospf-&gt;<a class="code" href="structospf.html#ac589f939b5118b77086d3af51633ed3c">t_ase_calc</a>)
<a name="l00697"></a>00697     ospf-&gt;<a class="code" href="structospf.html#ac589f939b5118b77086d3af51633ed3c">t_ase_calc</a> = <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf__ase_8c.html#a4f3500c986bc2bbf4d483721a1b6775a">ospf_ase_calculate_timer</a>,
<a name="l00698"></a>00698                      ospf, <a class="code" href="ospf__ase_8c.html#adabf761265a505e8e16c1f021f32c10c">OSPF_ASE_CALC_INTERVAL</a>);
<a name="l00699"></a>00699 }
<a name="l00700"></a>00700 
<a name="l00701"></a>00701 <span class="keywordtype">void</span>
<a name="l00702"></a><a class="code" href="ospf__ase_8h.html#a6428b0e560a827aa6511b767a53a27ab">00702</a> <a class="code" href="ospf__ase_8c.html#a8e89d2d1ed7ad307108222fad996d322">ospf_ase_register_external_lsa</a> (<span class="keyword">struct</span> <a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa, <span class="keyword">struct</span> ospf *top)
<a name="l00703"></a>00703 {
<a name="l00704"></a>00704   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00705"></a>00705   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> p;
<a name="l00706"></a>00706   <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *lst;
<a name="l00707"></a>00707   <span class="keyword">struct </span><a class="code" href="structas__external__lsa.html">as_external_lsa</a> *<a class="code" href="spgrid_8c.html#a7c4593313d1839d57c28594a69357bab">al</a>;
<a name="l00708"></a>00708 
<a name="l00709"></a>00709   al = (<span class="keyword">struct </span><a class="code" href="structas__external__lsa.html">as_external_lsa</a> *) lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>;
<a name="l00710"></a>00710   p.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
<a name="l00711"></a>00711   p.prefix = lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>-&gt;<a class="code" href="structlsa__header.html#a8f4602786c2de855a418b553a4555683">id</a>;
<a name="l00712"></a>00712   p.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = <a class="code" href="prefix_8c.html#ab83ffad6b766ddd0ef87e4da228c322d">ip_masklen</a> (al-&gt;<a class="code" href="structas__external__lsa.html#aa860fac77968c497496d16df6d325651">mask</a>);
<a name="l00713"></a>00713   <a class="code" href="prefix_8c.html#a24093dc2a781bf7f05d8a410899de5c0">apply_mask_ipv4</a> (&amp;p);
<a name="l00714"></a>00714 
<a name="l00715"></a>00715   rn = <a class="code" href="table_8c.html#ac91fdff1a0b8dc3d60ebaf152caa0f80">route_node_get</a> (top-&gt;<a class="code" href="structospf.html#abd15a2439cc8b1e17544f8eec597c070">external_lsas</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;p);
<a name="l00716"></a>00716   <span class="keywordflow">if</span> ((lst = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00717"></a>00717     rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = lst = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a>();
<a name="l00718"></a>00718 
<a name="l00719"></a>00719   <span class="comment">/* We assume that if LSA is deleted from DB</span>
<a name="l00720"></a>00720 <span class="comment">     is is also deleted from this RT */</span>
<a name="l00721"></a>00721 
<a name="l00722"></a>00722   <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (lst, <a class="code" href="ospf__lsa_8c.html#a312850eed27e83bb9f66d27bb5bfb144">ospf_lsa_lock</a> (lsa)); <span class="comment">/* external_lsas lst */</span>
<a name="l00723"></a>00723 }
<a name="l00724"></a>00724 
<a name="l00725"></a>00725 <span class="keywordtype">void</span>
<a name="l00726"></a><a class="code" href="ospf__ase_8h.html#a47d993ba253996377258f56ac8bbba10">00726</a> <a class="code" href="ospf__ase_8c.html#a163acf395d21ed38123a06213d1050eb">ospf_ase_unregister_external_lsa</a> (<span class="keyword">struct</span> <a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa, <span class="keyword">struct</span> ospf *top)
<a name="l00727"></a>00727 {
<a name="l00728"></a>00728   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00729"></a>00729   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> p;
<a name="l00730"></a>00730   <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *lst;
<a name="l00731"></a>00731   <span class="keyword">struct </span><a class="code" href="structas__external__lsa.html">as_external_lsa</a> *<a class="code" href="spgrid_8c.html#a7c4593313d1839d57c28594a69357bab">al</a>;
<a name="l00732"></a>00732 
<a name="l00733"></a>00733   al = (<span class="keyword">struct </span><a class="code" href="structas__external__lsa.html">as_external_lsa</a> *) lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>;
<a name="l00734"></a>00734   p.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
<a name="l00735"></a>00735   p.prefix = lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>-&gt;<a class="code" href="structlsa__header.html#a8f4602786c2de855a418b553a4555683">id</a>;
<a name="l00736"></a>00736   p.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = <a class="code" href="prefix_8c.html#ab83ffad6b766ddd0ef87e4da228c322d">ip_masklen</a> (al-&gt;<a class="code" href="structas__external__lsa.html#aa860fac77968c497496d16df6d325651">mask</a>);
<a name="l00737"></a>00737   <a class="code" href="prefix_8c.html#a24093dc2a781bf7f05d8a410899de5c0">apply_mask_ipv4</a> (&amp;p);
<a name="l00738"></a>00738 
<a name="l00739"></a>00739   rn = <a class="code" href="table_8c.html#ac91fdff1a0b8dc3d60ebaf152caa0f80">route_node_get</a> (top-&gt;<a class="code" href="structospf.html#abd15a2439cc8b1e17544f8eec597c070">external_lsas</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;p);
<a name="l00740"></a>00740   lst = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l00741"></a>00741 
<a name="l00742"></a>00742   <span class="comment">/* XXX lst can be NULL */</span>
<a name="l00743"></a>00743   <span class="keywordflow">if</span> (lst) {
<a name="l00744"></a>00744     <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (lst, lsa);
<a name="l00745"></a>00745     <a class="code" href="ospf__lsa_8c.html#a268fc5c6673caf7ee94c0eaaa88455b8">ospf_lsa_unlock</a> (&amp;lsa); <span class="comment">/* external_lsas list */</span>
<a name="l00746"></a>00746   }
<a name="l00747"></a>00747 }
<a name="l00748"></a>00748 
<a name="l00749"></a>00749 <span class="keywordtype">void</span>
<a name="l00750"></a><a class="code" href="ospf__ase_8h.html#a31aef2ac0728c07aff3128b74be9cb84">00750</a> <a class="code" href="ospf__ase_8c.html#a42bf210bf76365af43a100923da36329">ospf_ase_external_lsas_finish</a> (<span class="keyword">struct</span> <a class="code" href="structroute__table.html">route_table</a> *rt)
<a name="l00751"></a>00751 {
<a name="l00752"></a>00752   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00753"></a>00753   <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa;
<a name="l00754"></a>00754   <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *lst;
<a name="l00755"></a>00755   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
<a name="l00756"></a>00756   
<a name="l00757"></a>00757   <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (rt); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
<a name="l00758"></a>00758     <span class="keywordflow">if</span> ((lst = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00759"></a>00759       {
<a name="l00760"></a>00760     <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (lst, node, nnode, lsa))
<a name="l00761"></a>00761           <a class="code" href="ospf__lsa_8c.html#a268fc5c6673caf7ee94c0eaaa88455b8">ospf_lsa_unlock</a> (&amp;lsa); <span class="comment">/* external_lsas lst */</span>
<a name="l00762"></a>00762     <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (lst);
<a name="l00763"></a>00763       }
<a name="l00764"></a>00764     
<a name="l00765"></a>00765   <a class="code" href="table_8c.html#adc5ff276f1698f5bef7bb74289e3b26e">route_table_finish</a> (rt);
<a name="l00766"></a>00766 }
<a name="l00767"></a>00767 
<a name="l00768"></a>00768 <span class="keywordtype">void</span>
<a name="l00769"></a><a class="code" href="ospf__ase_8h.html#a4045b72890ce927e6204882ba766ec7f">00769</a> <a class="code" href="ospf__ase_8c.html#a0c7dee8c77caeb98ddcec77a973cf4c5">ospf_ase_incremental_update</a> (<span class="keyword">struct</span> ospf *ospf, <span class="keyword">struct</span> <a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa)
<a name="l00770"></a>00770 {
<a name="l00771"></a>00771   <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *lsas;
<a name="l00772"></a>00772   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00773"></a>00773   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn, *rn2;
<a name="l00774"></a>00774   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> p;
<a name="l00775"></a>00775   <span class="keyword">struct </span><a class="code" href="structroute__table.html">route_table</a> *tmp_old;
<a name="l00776"></a>00776   <span class="keyword">struct </span><a class="code" href="structas__external__lsa.html">as_external_lsa</a> *<a class="code" href="spgrid_8c.html#a7c4593313d1839d57c28594a69357bab">al</a>;
<a name="l00777"></a>00777 
<a name="l00778"></a>00778   al = (<span class="keyword">struct </span><a class="code" href="structas__external__lsa.html">as_external_lsa</a> *) lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>;
<a name="l00779"></a>00779   p.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
<a name="l00780"></a>00780   p.prefix = lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>-&gt;<a class="code" href="structlsa__header.html#a8f4602786c2de855a418b553a4555683">id</a>;
<a name="l00781"></a>00781   p.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = <a class="code" href="prefix_8c.html#ab83ffad6b766ddd0ef87e4da228c322d">ip_masklen</a> (al-&gt;<a class="code" href="structas__external__lsa.html#aa860fac77968c497496d16df6d325651">mask</a>);
<a name="l00782"></a>00782   <a class="code" href="prefix_8c.html#a24093dc2a781bf7f05d8a410899de5c0">apply_mask_ipv4</a> (&amp;p);
<a name="l00783"></a>00783 
<a name="l00784"></a>00784   <span class="comment">/* if new_table is NULL, there was no spf calculation, thus</span>
<a name="l00785"></a>00785 <span class="comment">     incremental update is unneeded */</span>
<a name="l00786"></a>00786   <span class="keywordflow">if</span> (!ospf-&gt;<a class="code" href="structospf.html#a1fd3dcac2e3c565e23fce6884ffb097f">new_table</a>)
<a name="l00787"></a>00787     <span class="keywordflow">return</span>;
<a name="l00788"></a>00788   
<a name="l00789"></a>00789   <span class="comment">/* If there is already an intra-area or inter-area route</span>
<a name="l00790"></a>00790 <span class="comment">     to the destination, no recalculation is necessary</span>
<a name="l00791"></a>00791 <span class="comment">     (internal routes take precedence). */</span>
<a name="l00792"></a>00792   
<a name="l00793"></a>00793   rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (ospf-&gt;<a class="code" href="structospf.html#a1fd3dcac2e3c565e23fce6884ffb097f">new_table</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;p);
<a name="l00794"></a>00794   <span class="keywordflow">if</span> (rn)
<a name="l00795"></a>00795     {
<a name="l00796"></a>00796       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00797"></a>00797       <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
<a name="l00798"></a>00798     <span class="keywordflow">return</span>;
<a name="l00799"></a>00799     }
<a name="l00800"></a>00800 
<a name="l00801"></a>00801   rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (ospf-&gt;<a class="code" href="structospf.html#abd15a2439cc8b1e17544f8eec597c070">external_lsas</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;p);
<a name="l00802"></a>00802   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (rn &amp;&amp; rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>);
<a name="l00803"></a>00803   lsas = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l00804"></a>00804   <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00805"></a>00805 
<a name="l00806"></a>00806   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsas, node, lsa))
<a name="l00807"></a>00807     <a class="code" href="ospf__ase_8c.html#aabe2473abaca8a62db05574a61c7a233">ospf_ase_calculate_route</a> (ospf, lsa);
<a name="l00808"></a>00808 
<a name="l00809"></a>00809   <span class="comment">/* prepare temporary old routing table for compare */</span>
<a name="l00810"></a>00810   tmp_old = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();
<a name="l00811"></a>00811   rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (ospf-&gt;<a class="code" href="structospf.html#aa4376d3468d1d9fd5a6ed373e149338c">old_external_route</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;p);
<a name="l00812"></a>00812   <span class="keywordflow">if</span> (rn &amp;&amp; rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
<a name="l00813"></a>00813     {
<a name="l00814"></a>00814       rn2 = <a class="code" href="table_8c.html#ac91fdff1a0b8dc3d60ebaf152caa0f80">route_node_get</a> (tmp_old, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;p);
<a name="l00815"></a>00815       rn2-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l00816"></a>00816     }
<a name="l00817"></a>00817 
<a name="l00818"></a>00818   <span class="comment">/* install changes to zebra */</span>
<a name="l00819"></a>00819   <a class="code" href="ospf__ase_8c.html#a79cc08a1acde4013be4c6e6a29151bab">ospf_ase_compare_tables</a> (ospf-&gt;<a class="code" href="structospf.html#a0b8f6a35ae74cd601d0a775df4d96f13">new_external_route</a>, tmp_old);
<a name="l00820"></a>00820 
<a name="l00821"></a>00821   <span class="comment">/* update ospf-&gt;old_external_route table */</span>
<a name="l00822"></a>00822   <span class="keywordflow">if</span> (rn &amp;&amp; rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
<a name="l00823"></a>00823     <a class="code" href="ospf__route_8c.html#a2343f1c889ff5837642b6eb2a3d213f7">ospf_route_free</a> ((<span class="keyword">struct</span> <a class="code" href="structospf__route.html">ospf_route</a> *) rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>);
<a name="l00824"></a>00824 
<a name="l00825"></a>00825   rn2 = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (ospf-&gt;<a class="code" href="structospf.html#a0b8f6a35ae74cd601d0a775df4d96f13">new_external_route</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;p);
<a name="l00826"></a>00826   <span class="comment">/* if new route exists, install it to ospf-&gt;old_external_route */</span>
<a name="l00827"></a>00827   <span class="keywordflow">if</span> (rn2 &amp;&amp; rn2-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
<a name="l00828"></a>00828     {
<a name="l00829"></a>00829       <span class="keywordflow">if</span> (!rn)
<a name="l00830"></a>00830     rn = <a class="code" href="table_8c.html#ac91fdff1a0b8dc3d60ebaf152caa0f80">route_node_get</a> (ospf-&gt;<a class="code" href="structospf.html#aa4376d3468d1d9fd5a6ed373e149338c">old_external_route</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;p);
<a name="l00831"></a>00831       rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = rn2-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l00832"></a>00832     }
<a name="l00833"></a>00833   <span class="keywordflow">else</span>
<a name="l00834"></a>00834     {
<a name="l00835"></a>00835       <span class="comment">/* remove route node from ospf-&gt;old_external_route */</span>
<a name="l00836"></a>00836       <span class="keywordflow">if</span> (rn)
<a name="l00837"></a>00837     {
<a name="l00838"></a>00838       rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00839"></a>00839       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00840"></a>00840       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00841"></a>00841     }
<a name="l00842"></a>00842     }
<a name="l00843"></a>00843 
<a name="l00844"></a>00844   <span class="keywordflow">if</span> (rn2)
<a name="l00845"></a>00845     {
<a name="l00846"></a>00846       <span class="comment">/* rn2-&gt;info is stored in route node of ospf-&gt;old_external_route */</span>
<a name="l00847"></a>00847       rn2-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00848"></a>00848       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn2);
<a name="l00849"></a>00849       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn2);
<a name="l00850"></a>00850     }
<a name="l00851"></a>00851 
<a name="l00852"></a>00852   <a class="code" href="table_8c.html#adc5ff276f1698f5bef7bb74289e3b26e">route_table_finish</a> (tmp_old);
<a name="l00853"></a>00853 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="ospf__ase_8c.html">ospf_ase.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:07 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
