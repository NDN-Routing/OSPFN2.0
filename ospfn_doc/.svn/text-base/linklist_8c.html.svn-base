<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: lib/linklist.c File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('linklist_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">lib/linklist.c File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="zebra_8h_source.html">zebra.h</a>&gt;</code><br/>
<code>#include &quot;<a class="el" href="linklist_8h_source.html">linklist.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="memory_8h_source.html">memory.h</a>&quot;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for linklist.c:</div>
<div class="dyncontent">
<div class="center"><img src="linklist_8c__incl.png" border="0" usemap="#lib_2linklist_8c" alt=""/></div>
<map name="lib_2linklist_8c" id="lib_2linklist_8c">
<area shape="rect" id="node3" href="zebra_8h.html" title="zebra.h" alt="" coords="1345,80,1412,107"/><area shape="rect" id="node61" href="linklist_8h.html" title="linklist.h" alt="" coords="1769,80,1839,107"/><area shape="rect" id="node63" href="memory_8h.html" title="memory.h" alt="" coords="2528,80,2611,107"/><area shape="rect" id="node57" href="zassert_8h.html" title="zassert.h" alt="" coords="2669,155,2747,181"/><area shape="rect" id="node59" href="str_8h.html" title="str.h" alt="" coords="2771,155,2820,181"/><area shape="rect" id="node65" href="memtypes_8h.html" title="lib/memtypes.h" alt="" coords="2845,155,2960,181"/></map>
</div>
</div>
<p><a href="linklist_8c_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structlist.html">list</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="linklist_8c.html#a15aa9f8cf8424489adf1efd4d075aac6">list_free</a> (struct <a class="el" href="structlist.html">list</a> *<a class="el" href="spgrid_8c.html#a92119ef27b84f1e2e15792d7ea360ba4">l</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structlistnode.html">listnode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="linklist_8c.html#a1848e26d49636089e73afc19ad1763ab">listnode_new</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="linklist_8c.html#abd74df917f61efdc33d61e53e935a9dc">listnode_free</a> (struct <a class="el" href="structlistnode.html">listnode</a> *node)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (struct <a class="el" href="structlist.html">list</a> *<a class="el" href="structlist.html">list</a>, void *<a class="el" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="linklist_8c.html#abfe4a1419e46dc9e1235dcbe6b52a022">listnode_add_sort</a> (struct <a class="el" href="structlist.html">list</a> *<a class="el" href="structlist.html">list</a>, void *<a class="el" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="linklist_8c.html#a79bb88c8c4960a3d28778f4b87af05c8">listnode_add_after</a> (struct <a class="el" href="structlist.html">list</a> *<a class="el" href="structlist.html">list</a>, struct <a class="el" href="structlistnode.html">listnode</a> *pp, void *<a class="el" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (struct <a class="el" href="structlist.html">list</a> *<a class="el" href="structlist.html">list</a>, void *<a class="el" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="linklist_8c.html#a3260e282746edff39ac90288002c509f">listnode_head</a> (struct <a class="el" href="structlist.html">list</a> *<a class="el" href="structlist.html">list</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="linklist_8c.html#acd6daa4be8ab3f175376e63c9d9c9500">list_delete_all_node</a> (struct <a class="el" href="structlist.html">list</a> *<a class="el" href="structlist.html">list</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (struct <a class="el" href="structlist.html">list</a> *<a class="el" href="structlist.html">list</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structlistnode.html">listnode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="linklist_8c.html#aff2a6c7dcdf74c05eb320db319f83990">listnode_lookup</a> (struct <a class="el" href="structlist.html">list</a> *<a class="el" href="structlist.html">list</a>, void *data)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="linklist_8c.html#a44569d4d868c60e29b21409612a5df05">list_delete_node</a> (struct <a class="el" href="structlist.html">list</a> *<a class="el" href="structlist.html">list</a>, struct <a class="el" href="structlistnode.html">listnode</a> *node)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="linklist_8c.html#ae1c29615b6d8dc3eda9042c95c666abb">list_add_node_prev</a> (struct <a class="el" href="structlist.html">list</a> *<a class="el" href="structlist.html">list</a>, struct <a class="el" href="structlistnode.html">listnode</a> *current, void *<a class="el" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="linklist_8c.html#ad0ed9efa84ffffcd32334a48dfed446f">list_add_node_next</a> (struct <a class="el" href="structlist.html">list</a> *<a class="el" href="structlist.html">list</a>, struct <a class="el" href="structlistnode.html">listnode</a> *current, void *<a class="el" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="linklist_8c.html#a16998dd330cc465279ed29cefc25e82f">list_add_list</a> (struct <a class="el" href="structlist.html">list</a> *<a class="el" href="spgrid_8c.html#a92119ef27b84f1e2e15792d7ea360ba4">l</a>, struct <a class="el" href="structlist.html">list</a> *<a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>)</td></tr>
</table>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a16998dd330cc465279ed29cefc25e82f"></a><!-- doxytag: member="linklist.c::list_add_list" ref="a16998dd330cc465279ed29cefc25e82f" args="(struct list *l, struct list *m)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void list_add_list </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>l</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>m</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="linklist_8c_source.html#l00310">310</a> of file <a class="el" href="linklist_8c_source.html">linklist.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *<a class="code" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>;

  <span class="keywordflow">for</span> (n = <a class="code" href="linklist_8h.html#a3d4492ca03b023aeecd4d6b0cdaa16fb">listhead</a> (m); <a class="code" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>; n = <a class="code" href="linklist_8h.html#ad3f7fe9d8d096c4afc1bdd5b1f46c5bb">listnextnode</a> (n))
    <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (l, n-&gt;<a class="code" href="structlistnode.html#ac46cd7d051b28b7ec9f2ad3986605bd5">data</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad0ed9efa84ffffcd32334a48dfed446f"></a><!-- doxytag: member="linklist.c::list_add_node_next" ref="ad0ed9efa84ffffcd32334a48dfed446f" args="(struct list *list, struct listnode *current, void *val)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void list_add_node_next </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structlistnode.html">listnode</a> *&#160;</td>
          <td class="paramname"><em>current</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="linklist_8c_source.html#l00287">287</a> of file <a class="el" href="linklist_8c_source.html">linklist.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
  
  node = <a class="code" href="linklist_8c.html#a1848e26d49636089e73afc19ad1763ab">listnode_new</a> ();
  node-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a> = current;
  node-&gt;<a class="code" href="structlistnode.html#ac46cd7d051b28b7ec9f2ad3986605bd5">data</a> = <a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>;

  <span class="keywordflow">if</span> (current-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    list-&gt;<a class="code" href="structlist.html#a92df9371518988e714aa5c5c4aefa1bb">tail</a> = node;
  <span class="keywordflow">else</span>
    current-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a> = node;

  node-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> = current-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
  current-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> = node;

  list-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a>++;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae1c29615b6d8dc3eda9042c95c666abb"></a><!-- doxytag: member="linklist.c::list_add_node_prev" ref="ae1c29615b6d8dc3eda9042c95c666abb" args="(struct list *list, struct listnode *current, void *val)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void list_add_node_prev </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structlistnode.html">listnode</a> *&#160;</td>
          <td class="paramname"><em>current</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="linklist_8c_source.html#l00264">264</a> of file <a class="el" href="linklist_8c_source.html">linklist.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
  
  node = <a class="code" href="linklist_8c.html#a1848e26d49636089e73afc19ad1763ab">listnode_new</a> ();
  node-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> = current;
  node-&gt;<a class="code" href="structlistnode.html#ac46cd7d051b28b7ec9f2ad3986605bd5">data</a> = <a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>;

  <span class="keywordflow">if</span> (current-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    list-&gt;<a class="code" href="structlist.html#a8306954be149c09248a51079826dd5f8">head</a> = node;
  <span class="keywordflow">else</span>
    current-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a>-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> = node;

  node-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a> = current-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a>;
  current-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a> = node;

  list-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a>++;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab5fdf1a904264be077ce19a432b1b119"></a><!-- doxytag: member="linklist.c::list_delete" ref="ab5fdf1a904264be077ce19a432b1b119" args="(struct list *list)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void list_delete </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="linklist_8c_source.html#l00226">226</a> of file <a class="el" href="linklist_8c_source.html">linklist.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a>(list);
  <a class="code" href="linklist_8c.html#acd6daa4be8ab3f175376e63c9d9c9500">list_delete_all_node</a> (list);
  <a class="code" href="linklist_8c.html#a15aa9f8cf8424489adf1efd4d075aac6">list_free</a> (list);
}
</pre></div>
</div>
</div>
<a class="anchor" id="acd6daa4be8ab3f175376e63c9d9c9500"></a><!-- doxytag: member="linklist.c::list_delete_all_node" ref="acd6daa4be8ab3f175376e63c9d9c9500" args="(struct list *list)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void list_delete_all_node </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="linklist_8c_source.html#l00207">207</a> of file <a class="el" href="linklist_8c_source.html">linklist.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;

  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a>(list);
  <span class="keywordflow">for</span> (node = list-&gt;<a class="code" href="structlist.html#a8306954be149c09248a51079826dd5f8">head</a>; node; node = next)
    {
      next = node-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
      <span class="keywordflow">if</span> (list-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a>)
    (*list-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a>) (node-&gt;<a class="code" href="structlistnode.html#ac46cd7d051b28b7ec9f2ad3986605bd5">data</a>);
      <a class="code" href="linklist_8c.html#abd74df917f61efdc33d61e53e935a9dc">listnode_free</a> (node);
    }
  list-&gt;<a class="code" href="structlist.html#a8306954be149c09248a51079826dd5f8">head</a> = list-&gt;<a class="code" href="structlist.html#a92df9371518988e714aa5c5c4aefa1bb">tail</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  list-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a> = 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a44569d4d868c60e29b21409612a5df05"></a><!-- doxytag: member="linklist.c::list_delete_node" ref="a44569d4d868c60e29b21409612a5df05" args="(struct list *list, struct listnode *node)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void list_delete_node </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structlistnode.html">listnode</a> *&#160;</td>
          <td class="paramname"><em>node</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="linklist_8c_source.html#l00248">248</a> of file <a class="el" href="linklist_8c_source.html">linklist.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (node-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a>)
    node-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a>-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> = node-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
  <span class="keywordflow">else</span>
    list-&gt;<a class="code" href="structlist.html#a8306954be149c09248a51079826dd5f8">head</a> = node-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
  <span class="keywordflow">if</span> (node-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>)
    node-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a> = node-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a>;
  <span class="keywordflow">else</span>
    list-&gt;<a class="code" href="structlist.html#a92df9371518988e714aa5c5c4aefa1bb">tail</a> = node-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a>;
  list-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a>--;
  <a class="code" href="linklist_8c.html#abd74df917f61efdc33d61e53e935a9dc">listnode_free</a> (node);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a15aa9f8cf8424489adf1efd4d075aac6"></a><!-- doxytag: member="linklist.c::list_free" ref="a15aa9f8cf8424489adf1efd4d075aac6" args="(struct list *l)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void list_free </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>l</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="linklist_8c_source.html#l00036">36</a> of file <a class="el" href="linklist_8c_source.html">linklist.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba7b80aebac00f554c750eda937083136d">MTYPE_LINK_LIST</a>, l);
}
</pre></div>
</div>
</div>
<a class="anchor" id="af156f4ae343ef4a625f75b6c38845aef"></a><!-- doxytag: member="linklist.c::list_new" ref="af156f4ae343ef4a625f75b6c38845aef" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structlist.html">list</a>* list_new </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="linklist_8c_source.html#l00029">29</a> of file <a class="el" href="linklist_8c_source.html">linklist.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba7b80aebac00f554c750eda937083136d">MTYPE_LINK_LIST</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structlist.html">list</a>));
}
</pre></div>
</div>
</div>
<a class="anchor" id="adb2a0478aba995441aaf691d1f6fe5db"></a><!-- doxytag: member="linklist.c::listnode_add" ref="adb2a0478aba995441aaf691d1f6fe5db" args="(struct list *list, void *val)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void listnode_add </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="linklist_8c_source.html#l00057">57</a> of file <a class="el" href="linklist_8c_source.html">linklist.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
  
  node = <a class="code" href="linklist_8c.html#a1848e26d49636089e73afc19ad1763ab">listnode_new</a> ();

  node-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a> = list-&gt;<a class="code" href="structlist.html#a92df9371518988e714aa5c5c4aefa1bb">tail</a>;
  node-&gt;<a class="code" href="structlistnode.html#ac46cd7d051b28b7ec9f2ad3986605bd5">data</a> = <a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>;

  <span class="keywordflow">if</span> (list-&gt;<a class="code" href="structlist.html#a8306954be149c09248a51079826dd5f8">head</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    list-&gt;<a class="code" href="structlist.html#a8306954be149c09248a51079826dd5f8">head</a> = node;
  <span class="keywordflow">else</span>
    list-&gt;<a class="code" href="structlist.html#a92df9371518988e714aa5c5c4aefa1bb">tail</a>-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> = node;
  list-&gt;<a class="code" href="structlist.html#a92df9371518988e714aa5c5c4aefa1bb">tail</a> = node;

  list-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a>++;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a79bb88c8c4960a3d28778f4b87af05c8"></a><!-- doxytag: member="linklist.c::listnode_add_after" ref="a79bb88c8c4960a3d28778f4b87af05c8" args="(struct list *list, struct listnode *pp, void *val)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void listnode_add_after </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structlistnode.html">listnode</a> *&#160;</td>
          <td class="paramname"><em>pp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="linklist_8c_source.html#l00126">126</a> of file <a class="el" href="linklist_8c_source.html">linklist.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *nn;
  
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
  
  nn = <a class="code" href="linklist_8c.html#a1848e26d49636089e73afc19ad1763ab">listnode_new</a> ();
  nn-&gt;<a class="code" href="structlistnode.html#ac46cd7d051b28b7ec9f2ad3986605bd5">data</a> = <a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>;

  <span class="keywordflow">if</span> (pp == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <span class="keywordflow">if</span> (list-&gt;<a class="code" href="structlist.html#a8306954be149c09248a51079826dd5f8">head</a>)
    list-&gt;<a class="code" href="structlist.html#a8306954be149c09248a51079826dd5f8">head</a>-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a> = nn;
      <span class="keywordflow">else</span>
    list-&gt;<a class="code" href="structlist.html#a92df9371518988e714aa5c5c4aefa1bb">tail</a> = nn;

      nn-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> = list-&gt;<a class="code" href="structlist.html#a8306954be149c09248a51079826dd5f8">head</a>;
      nn-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a> = pp;

      list-&gt;<a class="code" href="structlist.html#a8306954be149c09248a51079826dd5f8">head</a> = nn;
    }
  <span class="keywordflow">else</span>
    {
      <span class="keywordflow">if</span> (pp-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>)
    pp-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a> = nn;
      <span class="keywordflow">else</span>
    list-&gt;<a class="code" href="structlist.html#a92df9371518988e714aa5c5c4aefa1bb">tail</a> = nn;

      nn-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> = pp-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
      nn-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a> = pp;

      pp-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> = nn;
    }
  list-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a>++;
}
</pre></div>
</div>
</div>
<a class="anchor" id="abfe4a1419e46dc9e1235dcbe6b52a022"></a><!-- doxytag: member="linklist.c::listnode_add_sort" ref="abfe4a1419e46dc9e1235dcbe6b52a022" args="(struct list *list, void *val)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void listnode_add_sort </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="linklist_8c_source.html#l00084">84</a> of file <a class="el" href="linklist_8c_source.html">linklist.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *<a class="code" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *<span class="keyword">new</span>;
  
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
  
  <span class="keyword">new</span> = <a class="code" href="linklist_8c.html#a1848e26d49636089e73afc19ad1763ab">listnode_new</a> ();
  <span class="keyword">new</span>-&gt;data = <a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>;

  <span class="keywordflow">if</span> (list-&gt;<a class="code" href="structlist.html#af19c9d07985ca8f95f0098bb0ef98f66">cmp</a>)
    {
      <span class="keywordflow">for</span> (n = list-&gt;<a class="code" href="structlist.html#a8306954be149c09248a51079826dd5f8">head</a>; n; n = n-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>)
    {
      <span class="keywordflow">if</span> ((*list-&gt;<a class="code" href="structlist.html#af19c9d07985ca8f95f0098bb0ef98f66">cmp</a>) (<a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>, n-&gt;<a class="code" href="structlistnode.html#ac46cd7d051b28b7ec9f2ad3986605bd5">data</a>) &lt; 0)
        {       
          <span class="keyword">new</span>-&gt;next = <a class="code" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>;
          <span class="keyword">new</span>-&gt;prev = n-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a>;

          <span class="keywordflow">if</span> (n-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a>)
        n-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a>-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> = <span class="keyword">new</span>;
          <span class="keywordflow">else</span>
        list-&gt;<a class="code" href="structlist.html#a8306954be149c09248a51079826dd5f8">head</a> = <span class="keyword">new</span>;
          n-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a> = <span class="keyword">new</span>;
          list-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a>++;
          <span class="keywordflow">return</span>;
        }
    }
    }

  <span class="keyword">new</span>-&gt;prev = list-&gt;<a class="code" href="structlist.html#a92df9371518988e714aa5c5c4aefa1bb">tail</a>;

  <span class="keywordflow">if</span> (list-&gt;<a class="code" href="structlist.html#a92df9371518988e714aa5c5c4aefa1bb">tail</a>)
    list-&gt;<a class="code" href="structlist.html#a92df9371518988e714aa5c5c4aefa1bb">tail</a>-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> = <span class="keyword">new</span>;
  <span class="keywordflow">else</span>
    list-&gt;<a class="code" href="structlist.html#a8306954be149c09248a51079826dd5f8">head</a> = <span class="keyword">new</span>;

  list-&gt;<a class="code" href="structlist.html#a92df9371518988e714aa5c5c4aefa1bb">tail</a> = <span class="keyword">new</span>;
  list-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a>++;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a8cbdaa18db1ceacaadbc457a0c634e02"></a><!-- doxytag: member="linklist.c::listnode_delete" ref="a8cbdaa18db1ceacaadbc457a0c634e02" args="(struct list *list, void *val)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void listnode_delete </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="linklist_8c_source.html#l00165">165</a> of file <a class="el" href="linklist_8c_source.html">linklist.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;

  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a>(list);
  <span class="keywordflow">for</span> (node = list-&gt;<a class="code" href="structlist.html#a8306954be149c09248a51079826dd5f8">head</a>; node; node = node-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>)
    {
      <span class="keywordflow">if</span> (node-&gt;<a class="code" href="structlistnode.html#ac46cd7d051b28b7ec9f2ad3986605bd5">data</a> == <a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>)
    {
      <span class="keywordflow">if</span> (node-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a>)
        node-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a>-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> = node-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
      <span class="keywordflow">else</span>
        list-&gt;<a class="code" href="structlist.html#a8306954be149c09248a51079826dd5f8">head</a> = node-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;

      <span class="keywordflow">if</span> (node-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>)
        node-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a> = node-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a>;
      <span class="keywordflow">else</span>
        list-&gt;<a class="code" href="structlist.html#a92df9371518988e714aa5c5c4aefa1bb">tail</a> = node-&gt;<a class="code" href="structlistnode.html#a8b609f208077f7feb194c1859e9b2d40">prev</a>;

      list-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a>--;
      <a class="code" href="linklist_8c.html#abd74df917f61efdc33d61e53e935a9dc">listnode_free</a> (node);
      <span class="keywordflow">return</span>;
    }
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="abd74df917f61efdc33d61e53e935a9dc"></a><!-- doxytag: member="linklist.c::listnode_free" ref="abd74df917f61efdc33d61e53e935a9dc" args="(struct listnode *node)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void listnode_free </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structlistnode.html">listnode</a> *&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="linklist_8c_source.html#l00050">50</a> of file <a class="el" href="linklist_8c_source.html">linklist.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba22ee4f5c0b5a123cd51ccc923204cbc4">MTYPE_LINK_NODE</a>, node);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3260e282746edff39ac90288002c509f"></a><!-- doxytag: member="linklist.c::listnode_head" ref="a3260e282746edff39ac90288002c509f" args="(struct list *list)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* listnode_head </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="linklist_8c_source.html#l00193">193</a> of file <a class="el" href="linklist_8c_source.html">linklist.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;

  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a>(list);
  node = list-&gt;<a class="code" href="structlist.html#a8306954be149c09248a51079826dd5f8">head</a>;

  <span class="keywordflow">if</span> (node)
    <span class="keywordflow">return</span> node-&gt;<a class="code" href="structlistnode.html#ac46cd7d051b28b7ec9f2ad3986605bd5">data</a>;
  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aff2a6c7dcdf74c05eb320db319f83990"></a><!-- doxytag: member="linklist.c::listnode_lookup" ref="aff2a6c7dcdf74c05eb320db319f83990" args="(struct list *list, void *data)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structlistnode.html">listnode</a>* listnode_lookup </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="linklist_8c_source.html#l00235">235</a> of file <a class="el" href="linklist_8c_source.html">linklist.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;

  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a>(list);
  <span class="keywordflow">for</span> (node = <a class="code" href="linklist_8h.html#a3d4492ca03b023aeecd4d6b0cdaa16fb">listhead</a>(list); node; node = <a class="code" href="linklist_8h.html#ad3f7fe9d8d096c4afc1bdd5b1f46c5bb">listnextnode</a> (node))
    <span class="keywordflow">if</span> (<a class="code" href="dict_8c.html#a43a278d13284fb3412e9eee1db1d967e">data</a> == <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (node))
      <span class="keywordflow">return</span> node;
  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a1848e26d49636089e73afc19ad1763ab"></a><!-- doxytag: member="linklist.c::listnode_new" ref="a1848e26d49636089e73afc19ad1763ab" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static struct <a class="el" href="structlistnode.html">listnode</a>* listnode_new </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [static, read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="linklist_8c_source.html#l00043">43</a> of file <a class="el" href="linklist_8c_source.html">linklist.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba22ee4f5c0b5a123cd51ccc923204cbc4">MTYPE_LINK_NODE</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structlistnode.html">listnode</a>));
}
</pre></div>
</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="linklist_8c.html">linklist.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:22 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
