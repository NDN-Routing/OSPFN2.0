<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: ospfd/ospf_abr.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('ospf__abr_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">ospfd/ospf_abr.c</div>  </div>
</div>
<div class="contents">
<a href="ospf__abr_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * OSPF ABR functions.</span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 1999, 2000 Alex Zinin, Toshiaki Takada</span>
<a name="l00004"></a>00004 <span class="comment"> *</span>
<a name="l00005"></a>00005 <span class="comment"> * This file is part of GNU Zebra.</span>
<a name="l00006"></a>00006 <span class="comment"> *</span>
<a name="l00007"></a>00007 <span class="comment"> * GNU Zebra is free software; you can redistribute it and/or modify it</span>
<a name="l00008"></a>00008 <span class="comment"> * under the terms of the GNU General Public License as published by the</span>
<a name="l00009"></a>00009 <span class="comment"> * Free Software Foundation; either version 2, or (at your option) any</span>
<a name="l00010"></a>00010 <span class="comment"> * later version.</span>
<a name="l00011"></a>00011 <span class="comment"> * </span>
<a name="l00012"></a>00012 <span class="comment"> * GNU Zebra is distributed in the hope that it will be useful, but</span>
<a name="l00013"></a>00013 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00014"></a>00014 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00015"></a>00015 <span class="comment"> * General Public License for more details.</span>
<a name="l00016"></a>00016 <span class="comment"> * </span>
<a name="l00017"></a>00017 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00018"></a>00018 <span class="comment"> * along with GNU Zebra; see the file COPYING.  If not, write to the Free</span>
<a name="l00019"></a>00019 <span class="comment"> * Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA</span>
<a name="l00020"></a>00020 <span class="comment"> * 02111-1307, USA.</span>
<a name="l00021"></a>00021 <span class="comment"> */</span>
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 <span class="preprocessor">#include &lt;<a class="code" href="zebra_8h.html">zebra.h</a>&gt;</span>
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="thread_8h.html">thread.h</a>&quot;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="memory_8h.html">memory.h</a>&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="linklist_8h.html">linklist.h</a>&quot;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="prefix_8h.html">prefix.h</a>&quot;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="if_8h.html">if.h</a>&quot;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &quot;<a class="code" href="table_8h.html">table.h</a>&quot;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="vty_8h.html">vty.h</a>&quot;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &quot;<a class="code" href="filter_8h.html">filter.h</a>&quot;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &quot;<a class="code" href="plist_8h.html">plist.h</a>&quot;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &quot;<a class="code" href="log_8h.html">log.h</a>&quot;</span>
<a name="l00036"></a>00036 
<a name="l00037"></a>00037 <span class="preprocessor">#include &quot;<a class="code" href="ospfd_8h.html">ospfd/ospfd.h</a>&quot;</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include &quot;<a class="code" href="ospf__interface_8h.html">ospfd/ospf_interface.h</a>&quot;</span>
<a name="l00039"></a>00039 <span class="preprocessor">#include &quot;<a class="code" href="ospf__ism_8h.html">ospfd/ospf_ism.h</a>&quot;</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include &quot;<a class="code" href="ospf__asbr_8h.html">ospfd/ospf_asbr.h</a>&quot;</span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &quot;<a class="code" href="ospf__lsa_8h.html">ospfd/ospf_lsa.h</a>&quot;</span>
<a name="l00042"></a>00042 <span class="preprocessor">#include &quot;<a class="code" href="ospf__lsdb_8h.html">ospfd/ospf_lsdb.h</a>&quot;</span>
<a name="l00043"></a>00043 <span class="preprocessor">#include &quot;<a class="code" href="ospf__neighbor_8h.html">ospfd/ospf_neighbor.h</a>&quot;</span>
<a name="l00044"></a>00044 <span class="preprocessor">#include &quot;<a class="code" href="ospf__nsm_8h.html">ospfd/ospf_nsm.h</a>&quot;</span>
<a name="l00045"></a>00045 <span class="preprocessor">#include &quot;<a class="code" href="ospf__spf_8h.html">ospfd/ospf_spf.h</a>&quot;</span>
<a name="l00046"></a>00046 <span class="preprocessor">#include &quot;<a class="code" href="ospf__route_8h.html">ospfd/ospf_route.h</a>&quot;</span>
<a name="l00047"></a>00047 <span class="preprocessor">#include &quot;<a class="code" href="ospf__ia_8h.html">ospfd/ospf_ia.h</a>&quot;</span>
<a name="l00048"></a>00048 <span class="preprocessor">#include &quot;<a class="code" href="ospf__flood_8h.html">ospfd/ospf_flood.h</a>&quot;</span>
<a name="l00049"></a>00049 <span class="preprocessor">#include &quot;<a class="code" href="ospf__abr_8h.html">ospfd/ospf_abr.h</a>&quot;</span>
<a name="l00050"></a>00050 <span class="preprocessor">#include &quot;<a class="code" href="ospf__ase_8h.html">ospfd/ospf_ase.h</a>&quot;</span>
<a name="l00051"></a>00051 <span class="preprocessor">#include &quot;<a class="code" href="ospf__zebra_8h.html">ospfd/ospf_zebra.h</a>&quot;</span>
<a name="l00052"></a>00052 <span class="preprocessor">#include &quot;<a class="code" href="ospf__dump_8h.html">ospfd/ospf_dump.h</a>&quot;</span>
<a name="l00053"></a>00053 
<a name="l00054"></a>00054 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structospf__area__range.html">ospf_area_range</a> *
<a name="l00055"></a><a class="code" href="ospf__abr_8c.html#ac6351b1459379c07cb2fd7b880d36c4d">00055</a> <a class="code" href="ospf__abr_8c.html#ac6351b1459379c07cb2fd7b880d36c4d">ospf_area_range_new</a> (<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>)
<a name="l00056"></a>00056 {
<a name="l00057"></a>00057   <span class="keyword">struct </span><a class="code" href="structospf__area__range.html">ospf_area_range</a> *range;
<a name="l00058"></a>00058 
<a name="l00059"></a>00059   range = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba49f173e96c4aed653c814c1eff096dcc">MTYPE_OSPF_AREA_RANGE</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structospf__area__range.html">ospf_area_range</a>));
<a name="l00060"></a>00060   range-&gt;<a class="code" href="structospf__area__range.html#a724f20a6824a90fe2b2c5c5b78e34dc2">addr</a> = p-&gt;prefix;
<a name="l00061"></a>00061   range-&gt;<a class="code" href="structospf__area__range.html#ad74a36f5e9873c250a48fd717f206223">masklen</a> = p-&gt;<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a>;
<a name="l00062"></a>00062   range-&gt;<a class="code" href="structospf__area__range.html#a869c843ab497ff8be702a02cd7b3eddf">cost_config</a> = <a class="code" href="ospf__abr_8h.html#a9e21588e2ea1550756920731bbc4c80c">OSPF_AREA_RANGE_COST_UNSPEC</a>;
<a name="l00063"></a>00063 
<a name="l00064"></a>00064   <span class="keywordflow">return</span> range;
<a name="l00065"></a>00065 }
<a name="l00066"></a>00066 
<a name="l00067"></a>00067 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00068"></a><a class="code" href="ospf__abr_8c.html#a094fd37167ed8981974a1f8c97f8d574">00068</a> <a class="code" href="ospf__abr_8c.html#a094fd37167ed8981974a1f8c97f8d574">ospf_area_range_free</a> (<span class="keyword">struct</span> <a class="code" href="structospf__area__range.html">ospf_area_range</a> *range)
<a name="l00069"></a>00069 {
<a name="l00070"></a>00070   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba49f173e96c4aed653c814c1eff096dcc">MTYPE_OSPF_AREA_RANGE</a>, range);
<a name="l00071"></a>00071 }
<a name="l00072"></a>00072 
<a name="l00073"></a>00073 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00074"></a><a class="code" href="ospf__abr_8c.html#ac775d8b4ed2ded945b71370d17a00472">00074</a> <a class="code" href="ospf__abr_8c.html#ac775d8b4ed2ded945b71370d17a00472">ospf_area_range_add</a> (<span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>, <span class="keyword">struct</span> <a class="code" href="structospf__area__range.html">ospf_area_range</a> *range)
<a name="l00075"></a>00075 {
<a name="l00076"></a>00076   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00077"></a>00077   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> p;
<a name="l00078"></a>00078 
<a name="l00079"></a>00079   p.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
<a name="l00080"></a>00080   p.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = range-&gt;<a class="code" href="structospf__area__range.html#ad74a36f5e9873c250a48fd717f206223">masklen</a>;
<a name="l00081"></a>00081   p.prefix = range-&gt;<a class="code" href="structospf__area__range.html#a724f20a6824a90fe2b2c5c5b78e34dc2">addr</a>;
<a name="l00082"></a>00082 
<a name="l00083"></a>00083   rn = <a class="code" href="table_8c.html#ac91fdff1a0b8dc3d60ebaf152caa0f80">route_node_get</a> (area-&gt;<a class="code" href="structospf__area.html#ae4d5f7877962eb3e477299a8f93dbfff">ranges</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)&amp;p);
<a name="l00084"></a>00084   <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
<a name="l00085"></a>00085     <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00086"></a>00086   <span class="keywordflow">else</span>
<a name="l00087"></a>00087     rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = range;
<a name="l00088"></a>00088 }
<a name="l00089"></a>00089 
<a name="l00090"></a>00090 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00091"></a><a class="code" href="ospf__abr_8c.html#a3ffccf20cd7e255cbf64819a1090b843">00091</a> <a class="code" href="ospf__abr_8c.html#a3ffccf20cd7e255cbf64819a1090b843">ospf_area_range_delete</a> (<span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>, <span class="keyword">struct</span> <a class="code" href="structospf__area__range.html">ospf_area_range</a> *range)
<a name="l00092"></a>00092 {
<a name="l00093"></a>00093   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00094"></a>00094   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> p;
<a name="l00095"></a>00095 
<a name="l00096"></a>00096   p.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
<a name="l00097"></a>00097   p.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = range-&gt;<a class="code" href="structospf__area__range.html#ad74a36f5e9873c250a48fd717f206223">masklen</a>;
<a name="l00098"></a>00098   p.prefix = range-&gt;<a class="code" href="structospf__area__range.html#a724f20a6824a90fe2b2c5c5b78e34dc2">addr</a>;
<a name="l00099"></a>00099 
<a name="l00100"></a>00100   rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (area-&gt;<a class="code" href="structospf__area.html#ae4d5f7877962eb3e477299a8f93dbfff">ranges</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)&amp;p);
<a name="l00101"></a>00101   <span class="keywordflow">if</span> (rn)
<a name="l00102"></a>00102     {
<a name="l00103"></a>00103       <a class="code" href="ospf__abr_8c.html#a094fd37167ed8981974a1f8c97f8d574">ospf_area_range_free</a> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>);
<a name="l00104"></a>00104       rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00105"></a>00105       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00106"></a>00106       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00107"></a>00107     }
<a name="l00108"></a>00108 }
<a name="l00109"></a>00109 
<a name="l00110"></a>00110 <span class="keyword">struct </span><a class="code" href="structospf__area__range.html">ospf_area_range</a> *
<a name="l00111"></a><a class="code" href="ospf__abr_8h.html#a709a679f2b580cdb618e7ca7eebfdb7c">00111</a> <a class="code" href="ospf__abr_8c.html#a774663b20cea32fea41dc0ade8ead064">ospf_area_range_lookup</a> (<span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>, <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>)
<a name="l00112"></a>00112 {
<a name="l00113"></a>00113   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00114"></a>00114 
<a name="l00115"></a>00115   rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (area-&gt;<a class="code" href="structospf__area.html#ae4d5f7877962eb3e477299a8f93dbfff">ranges</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)p);
<a name="l00116"></a>00116   <span class="keywordflow">if</span> (rn)
<a name="l00117"></a>00117     {
<a name="l00118"></a>00118       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00119"></a>00119       <span class="keywordflow">return</span> rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l00120"></a>00120     }
<a name="l00121"></a>00121   <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00122"></a>00122 }
<a name="l00123"></a>00123 
<a name="l00124"></a>00124 <span class="keyword">struct </span><a class="code" href="structospf__area__range.html">ospf_area_range</a> *
<a name="l00125"></a><a class="code" href="ospf__abr_8h.html#a1af28e056905fbc36aa94bec4fb2c9ce">00125</a> <a class="code" href="ospf__abr_8c.html#a093b2aa64d23ea0f5b21591238fef4c5">ospf_area_range_lookup_next</a> (<span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>, 
<a name="l00126"></a>00126                              <span class="keyword">struct</span> in_addr *range_net,
<a name="l00127"></a>00127                              <span class="keywordtype">int</span> first)
<a name="l00128"></a>00128 {
<a name="l00129"></a>00129   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00130"></a>00130   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> p;
<a name="l00131"></a>00131   <span class="keyword">struct </span><a class="code" href="structospf__area__range.html">ospf_area_range</a> *find;
<a name="l00132"></a>00132 
<a name="l00133"></a>00133   p.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
<a name="l00134"></a>00134   p.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;
<a name="l00135"></a>00135   p.prefix = *range_net;
<a name="l00136"></a>00136 
<a name="l00137"></a>00137   <span class="keywordflow">if</span> (first)
<a name="l00138"></a>00138     rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (area-&gt;<a class="code" href="structospf__area.html#ae4d5f7877962eb3e477299a8f93dbfff">ranges</a>);
<a name="l00139"></a>00139   <span class="keywordflow">else</span>
<a name="l00140"></a>00140     {
<a name="l00141"></a>00141       rn = <a class="code" href="table_8c.html#ac91fdff1a0b8dc3d60ebaf152caa0f80">route_node_get</a> (area-&gt;<a class="code" href="structospf__area.html#ae4d5f7877962eb3e477299a8f93dbfff">ranges</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;p);
<a name="l00142"></a>00142       rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn);
<a name="l00143"></a>00143     }
<a name="l00144"></a>00144 
<a name="l00145"></a>00145   <span class="keywordflow">for</span> (; rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
<a name="l00146"></a>00146     <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
<a name="l00147"></a>00147       <span class="keywordflow">break</span>;
<a name="l00148"></a>00148 
<a name="l00149"></a>00149   <span class="keywordflow">if</span> (rn &amp;&amp; rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
<a name="l00150"></a>00150     {
<a name="l00151"></a>00151       find = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l00152"></a>00152       *range_net = rn-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>;
<a name="l00153"></a>00153       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00154"></a>00154       <span class="keywordflow">return</span> find;
<a name="l00155"></a>00155     }
<a name="l00156"></a>00156   <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00157"></a>00157 }
<a name="l00158"></a>00158 
<a name="l00159"></a>00159 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structospf__area__range.html">ospf_area_range</a> *
<a name="l00160"></a><a class="code" href="ospf__abr_8c.html#a7c346a6d5cb1ed72bfcb661f5ac9c962">00160</a> <a class="code" href="ospf__abr_8c.html#a7c346a6d5cb1ed72bfcb661f5ac9c962">ospf_area_range_match</a> (<span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>, <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>)
<a name="l00161"></a>00161 {
<a name="l00162"></a>00162   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *node;
<a name="l00163"></a>00163 
<a name="l00164"></a>00164   node = <a class="code" href="table_8c.html#a948f4335026cd8417c7424e85156ae55">route_node_match</a> (area-&gt;<a class="code" href="structospf__area.html#ae4d5f7877962eb3e477299a8f93dbfff">ranges</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) p);
<a name="l00165"></a>00165   <span class="keywordflow">if</span> (node)
<a name="l00166"></a>00166     {
<a name="l00167"></a>00167       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (node);
<a name="l00168"></a>00168       <span class="keywordflow">return</span> node-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l00169"></a>00169     }
<a name="l00170"></a>00170   <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00171"></a>00171 }
<a name="l00172"></a>00172 
<a name="l00173"></a>00173 <span class="keyword">struct </span><a class="code" href="structospf__area__range.html">ospf_area_range</a> *
<a name="l00174"></a><a class="code" href="ospf__abr_8h.html#a5ba89ae032bc525f99936c48157f2290">00174</a> <a class="code" href="ospf__abr_8c.html#ad84a4da09c4f95971fc5f7272c554cf9">ospf_area_range_match_any</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>)
<a name="l00175"></a>00175 {
<a name="l00176"></a>00176   <span class="keyword">struct </span><a class="code" href="structospf__area__range.html">ospf_area_range</a> *range;
<a name="l00177"></a>00177   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l00178"></a>00178   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00179"></a>00179 
<a name="l00180"></a>00180   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, node, area))
<a name="l00181"></a>00181     <span class="keywordflow">if</span> ((range = <a class="code" href="ospf__abr_8c.html#a7c346a6d5cb1ed72bfcb661f5ac9c962">ospf_area_range_match</a> (area, p)))
<a name="l00182"></a>00182       <span class="keywordflow">return</span> range;
<a name="l00183"></a>00183 
<a name="l00184"></a>00184   <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00185"></a>00185 }
<a name="l00186"></a>00186 
<a name="l00187"></a>00187 <span class="keywordtype">int</span>
<a name="l00188"></a><a class="code" href="ospf__abr_8h.html#a759934be8202604ae9a089640f4a693f">00188</a> <a class="code" href="ospf__abr_8c.html#a982c5ad2411024cad7b3979eb1c4d7ab">ospf_area_range_active</a> (<span class="keyword">struct</span> <a class="code" href="structospf__area__range.html">ospf_area_range</a> *range)
<a name="l00189"></a>00189 {
<a name="l00190"></a>00190   <span class="keywordflow">return</span> range-&gt;<a class="code" href="structospf__area__range.html#a3d1cb2519f52918c6ebfbcc60dbbbd6d">specifics</a>;
<a name="l00191"></a>00191 }
<a name="l00192"></a>00192 
<a name="l00193"></a>00193 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00194"></a><a class="code" href="ospf__abr_8c.html#af229422187da31bbb735cc83e2ac2d1b">00194</a> <a class="code" href="ospf__abr_8c.html#af229422187da31bbb735cc83e2ac2d1b">ospf_area_actively_attached</a> (<span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l00195"></a>00195 {
<a name="l00196"></a>00196   <span class="keywordflow">return</span> area-&gt;<a class="code" href="structospf__area.html#ade0d91a8747b46926ed25794d2c25b84">act_ints</a>;
<a name="l00197"></a>00197 }
<a name="l00198"></a>00198 
<a name="l00199"></a>00199 <span class="keywordtype">int</span>
<a name="l00200"></a><a class="code" href="ospf__abr_8h.html#a448f13b2de830e9d4cba13bde667e844">00200</a> <a class="code" href="ospf__abr_8c.html#a6ca33081ed6119428dcdf37f52eecb1b">ospf_area_range_set</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr area_id,
<a name="l00201"></a>00201              <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, <span class="keywordtype">int</span> advertise)
<a name="l00202"></a>00202 {
<a name="l00203"></a>00203   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l00204"></a>00204   <span class="keyword">struct </span><a class="code" href="structospf__area__range.html">ospf_area_range</a> *range;
<a name="l00205"></a>00205   <span class="keywordtype">int</span> ret = <a class="code" href="ospfd_8h.html#a4693ac54d402184ececda946d167d1ef">OSPF_AREA_ID_FORMAT_ADDRESS</a>;
<a name="l00206"></a>00206 
<a name="l00207"></a>00207   area = <a class="code" href="ospfd_8c.html#aa215da7694f647944fed0fad86df18c8">ospf_area_get</a> (ospf, area_id, ret);
<a name="l00208"></a>00208   <span class="keywordflow">if</span> (area == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00209"></a>00209     <span class="keywordflow">return</span> 0;
<a name="l00210"></a>00210 
<a name="l00211"></a>00211   range = <a class="code" href="ospf__abr_8c.html#a774663b20cea32fea41dc0ade8ead064">ospf_area_range_lookup</a> (area, p);
<a name="l00212"></a>00212   <span class="keywordflow">if</span> (range != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00213"></a>00213     {
<a name="l00214"></a>00214       <span class="keywordflow">if</span> ((<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (range-&gt;<a class="code" href="structospf__area__range.html#adcac2bfd2040ce51c649dd47257fcdd5">flags</a>, <a class="code" href="ospf__abr_8h.html#aad26a71d348f2b614e680fec6b0122fc">OSPF_AREA_RANGE_ADVERTISE</a>)
<a name="l00215"></a>00215        &amp;&amp; !<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (advertise, <a class="code" href="ospf__abr_8h.html#aad26a71d348f2b614e680fec6b0122fc">OSPF_AREA_RANGE_ADVERTISE</a>))
<a name="l00216"></a>00216       || (!<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (range-&gt;<a class="code" href="structospf__area__range.html#adcac2bfd2040ce51c649dd47257fcdd5">flags</a>, <a class="code" href="ospf__abr_8h.html#aad26a71d348f2b614e680fec6b0122fc">OSPF_AREA_RANGE_ADVERTISE</a>)
<a name="l00217"></a>00217           &amp;&amp; <a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (advertise, <a class="code" href="ospf__abr_8h.html#aad26a71d348f2b614e680fec6b0122fc">OSPF_AREA_RANGE_ADVERTISE</a>)))
<a name="l00218"></a>00218     <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (ospf);
<a name="l00219"></a>00219     }
<a name="l00220"></a>00220   <span class="keywordflow">else</span>
<a name="l00221"></a>00221     {
<a name="l00222"></a>00222       range = <a class="code" href="ospf__abr_8c.html#ac6351b1459379c07cb2fd7b880d36c4d">ospf_area_range_new</a> (p);
<a name="l00223"></a>00223       <a class="code" href="ospf__abr_8c.html#ac775d8b4ed2ded945b71370d17a00472">ospf_area_range_add</a> (area, range);
<a name="l00224"></a>00224       <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (ospf);
<a name="l00225"></a>00225     }
<a name="l00226"></a>00226 
<a name="l00227"></a>00227   <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (advertise, <a class="code" href="ospf__abr_8h.html#aad26a71d348f2b614e680fec6b0122fc">OSPF_AREA_RANGE_ADVERTISE</a>))
<a name="l00228"></a>00228     <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (range-&gt;<a class="code" href="structospf__area__range.html#adcac2bfd2040ce51c649dd47257fcdd5">flags</a>, <a class="code" href="ospf__abr_8h.html#aad26a71d348f2b614e680fec6b0122fc">OSPF_AREA_RANGE_ADVERTISE</a>);
<a name="l00229"></a>00229   <span class="keywordflow">else</span>
<a name="l00230"></a>00230     <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (range-&gt;<a class="code" href="structospf__area__range.html#adcac2bfd2040ce51c649dd47257fcdd5">flags</a>, <a class="code" href="ospf__abr_8h.html#aad26a71d348f2b614e680fec6b0122fc">OSPF_AREA_RANGE_ADVERTISE</a>);
<a name="l00231"></a>00231 
<a name="l00232"></a>00232   <span class="keywordflow">return</span> 1;
<a name="l00233"></a>00233 }
<a name="l00234"></a>00234 
<a name="l00235"></a>00235 <span class="keywordtype">int</span>
<a name="l00236"></a><a class="code" href="ospf__abr_8h.html#ac9e0a8e17db3923a672901b185a74cdd">00236</a> <a class="code" href="ospf__abr_8c.html#a281d9b867e259576cde292e81cfc7eb7">ospf_area_range_cost_set</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr area_id,
<a name="l00237"></a>00237               <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, u_int32_t <a class="code" href="structospf__area__range.html#a48ee60db14ab78e1f0435d56fd42d2d0">cost</a>)
<a name="l00238"></a>00238 {
<a name="l00239"></a>00239   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l00240"></a>00240   <span class="keyword">struct </span><a class="code" href="structospf__area__range.html">ospf_area_range</a> *range;
<a name="l00241"></a>00241   <span class="keywordtype">int</span> ret = <a class="code" href="ospfd_8h.html#a4693ac54d402184ececda946d167d1ef">OSPF_AREA_ID_FORMAT_ADDRESS</a>;
<a name="l00242"></a>00242 
<a name="l00243"></a>00243   area = <a class="code" href="ospfd_8c.html#aa215da7694f647944fed0fad86df18c8">ospf_area_get</a> (ospf, area_id, ret);
<a name="l00244"></a>00244   <span class="keywordflow">if</span> (area == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00245"></a>00245     <span class="keywordflow">return</span> 0;
<a name="l00246"></a>00246 
<a name="l00247"></a>00247   range = <a class="code" href="ospf__abr_8c.html#a774663b20cea32fea41dc0ade8ead064">ospf_area_range_lookup</a> (area, p);
<a name="l00248"></a>00248   <span class="keywordflow">if</span> (range == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00249"></a>00249     <span class="keywordflow">return</span> 0;
<a name="l00250"></a>00250 
<a name="l00251"></a>00251   <span class="keywordflow">if</span> (range-&gt;<a class="code" href="structospf__area__range.html#a869c843ab497ff8be702a02cd7b3eddf">cost_config</a> != cost)
<a name="l00252"></a>00252     {
<a name="l00253"></a>00253       range-&gt;<a class="code" href="structospf__area__range.html#a869c843ab497ff8be702a02cd7b3eddf">cost_config</a> = <a class="code" href="structospf__area__range.html#a48ee60db14ab78e1f0435d56fd42d2d0">cost</a>;
<a name="l00254"></a>00254       <span class="keywordflow">if</span> (<a class="code" href="ospf__abr_8c.html#a982c5ad2411024cad7b3979eb1c4d7ab">ospf_area_range_active</a> (range))
<a name="l00255"></a>00255     <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (ospf);
<a name="l00256"></a>00256     }
<a name="l00257"></a>00257 
<a name="l00258"></a>00258   <span class="keywordflow">return</span> 1;
<a name="l00259"></a>00259 }
<a name="l00260"></a>00260 
<a name="l00261"></a>00261 <span class="keywordtype">int</span>
<a name="l00262"></a><a class="code" href="ospf__abr_8h.html#a4c463cba2a853e3c37409dd3b40c694c">00262</a> <a class="code" href="ospf__abr_8c.html#aefd9193626cef849c52ce73a0aaf5c5e">ospf_area_range_unset</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr area_id,
<a name="l00263"></a>00263                <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>)
<a name="l00264"></a>00264 {
<a name="l00265"></a>00265   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l00266"></a>00266   <span class="keyword">struct </span><a class="code" href="structospf__area__range.html">ospf_area_range</a> *range;
<a name="l00267"></a>00267 
<a name="l00268"></a>00268   area = <a class="code" href="ospfd_8c.html#a24d6ed2a6a05e4856e6dbf5eea74f6ef">ospf_area_lookup_by_area_id</a> (ospf, area_id);
<a name="l00269"></a>00269   <span class="keywordflow">if</span> (area == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00270"></a>00270     <span class="keywordflow">return</span> 0;
<a name="l00271"></a>00271 
<a name="l00272"></a>00272   range = <a class="code" href="ospf__abr_8c.html#a774663b20cea32fea41dc0ade8ead064">ospf_area_range_lookup</a> (area, p);
<a name="l00273"></a>00273   <span class="keywordflow">if</span> (range == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00274"></a>00274     <span class="keywordflow">return</span> 0;
<a name="l00275"></a>00275 
<a name="l00276"></a>00276   <span class="keywordflow">if</span> (<a class="code" href="ospf__abr_8c.html#a982c5ad2411024cad7b3979eb1c4d7ab">ospf_area_range_active</a> (range))
<a name="l00277"></a>00277     <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (ospf);
<a name="l00278"></a>00278 
<a name="l00279"></a>00279   <a class="code" href="ospf__abr_8c.html#a3ffccf20cd7e255cbf64819a1090b843">ospf_area_range_delete</a> (area, range);
<a name="l00280"></a>00280 
<a name="l00281"></a>00281   <span class="keywordflow">return</span> 1;
<a name="l00282"></a>00282 }
<a name="l00283"></a>00283 
<a name="l00284"></a>00284 <span class="keywordtype">int</span>
<a name="l00285"></a><a class="code" href="ospf__abr_8h.html#a9a8ab1c929db09106255e8c3af5f16c6">00285</a> <a class="code" href="ospf__abr_8c.html#afb2a1db4485a34464e3aeb49b6148e81">ospf_area_range_substitute_set</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr area_id,
<a name="l00286"></a>00286                 <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>)
<a name="l00287"></a>00287 {
<a name="l00288"></a>00288   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l00289"></a>00289   <span class="keyword">struct </span><a class="code" href="structospf__area__range.html">ospf_area_range</a> *range;
<a name="l00290"></a>00290   <span class="keywordtype">int</span> ret = <a class="code" href="ospfd_8h.html#a4693ac54d402184ececda946d167d1ef">OSPF_AREA_ID_FORMAT_ADDRESS</a>;
<a name="l00291"></a>00291 
<a name="l00292"></a>00292   area = <a class="code" href="ospfd_8c.html#aa215da7694f647944fed0fad86df18c8">ospf_area_get</a> (ospf, area_id, ret);
<a name="l00293"></a>00293   range = <a class="code" href="ospf__abr_8c.html#a774663b20cea32fea41dc0ade8ead064">ospf_area_range_lookup</a> (area, p);
<a name="l00294"></a>00294 
<a name="l00295"></a>00295   <span class="keywordflow">if</span> (range != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00296"></a>00296     {
<a name="l00297"></a>00297       <span class="keywordflow">if</span> (!<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (range-&gt;<a class="code" href="structospf__area__range.html#adcac2bfd2040ce51c649dd47257fcdd5">flags</a>, <a class="code" href="ospf__abr_8h.html#aad26a71d348f2b614e680fec6b0122fc">OSPF_AREA_RANGE_ADVERTISE</a>) ||
<a name="l00298"></a>00298       !<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (range-&gt;<a class="code" href="structospf__area__range.html#adcac2bfd2040ce51c649dd47257fcdd5">flags</a>, <a class="code" href="ospf__abr_8h.html#a05a85c40463339240f87aa8200447eb8">OSPF_AREA_RANGE_SUBSTITUTE</a>))
<a name="l00299"></a>00299     <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (ospf);
<a name="l00300"></a>00300     }
<a name="l00301"></a>00301   <span class="keywordflow">else</span>
<a name="l00302"></a>00302     {
<a name="l00303"></a>00303       range = <a class="code" href="ospf__abr_8c.html#ac6351b1459379c07cb2fd7b880d36c4d">ospf_area_range_new</a> (p);
<a name="l00304"></a>00304       <a class="code" href="ospf__abr_8c.html#ac775d8b4ed2ded945b71370d17a00472">ospf_area_range_add</a> (area, range);
<a name="l00305"></a>00305       <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (ospf);
<a name="l00306"></a>00306     }
<a name="l00307"></a>00307 
<a name="l00308"></a>00308   <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (range-&gt;<a class="code" href="structospf__area__range.html#adcac2bfd2040ce51c649dd47257fcdd5">flags</a>, <a class="code" href="ospf__abr_8h.html#aad26a71d348f2b614e680fec6b0122fc">OSPF_AREA_RANGE_ADVERTISE</a>);
<a name="l00309"></a>00309   <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (range-&gt;<a class="code" href="structospf__area__range.html#adcac2bfd2040ce51c649dd47257fcdd5">flags</a>, <a class="code" href="ospf__abr_8h.html#a05a85c40463339240f87aa8200447eb8">OSPF_AREA_RANGE_SUBSTITUTE</a>);
<a name="l00310"></a>00310   range-&gt;<a class="code" href="structospf__area__range.html#aae8a961c337b41f842906f32be2e169e">subst_addr</a> = s-&gt;prefix;
<a name="l00311"></a>00311   range-&gt;<a class="code" href="structospf__area__range.html#afc6ca0cc37924c70d8d70aa2d426f313">subst_masklen</a> = s-&gt;<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a>;
<a name="l00312"></a>00312 
<a name="l00313"></a>00313   <span class="keywordflow">return</span> 1;
<a name="l00314"></a>00314 }
<a name="l00315"></a>00315 
<a name="l00316"></a>00316 <span class="keywordtype">int</span>
<a name="l00317"></a><a class="code" href="ospf__abr_8h.html#a8aecc0fc62bcfc8589015885b67d5f2a">00317</a> <a class="code" href="ospf__abr_8c.html#a2c0eb46084679567c93851b66d78ab35">ospf_area_range_substitute_unset</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr area_id,
<a name="l00318"></a>00318                   <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>)
<a name="l00319"></a>00319 {
<a name="l00320"></a>00320   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l00321"></a>00321   <span class="keyword">struct </span><a class="code" href="structospf__area__range.html">ospf_area_range</a> *range;
<a name="l00322"></a>00322 
<a name="l00323"></a>00323   area = <a class="code" href="ospfd_8c.html#a24d6ed2a6a05e4856e6dbf5eea74f6ef">ospf_area_lookup_by_area_id</a> (ospf, area_id);
<a name="l00324"></a>00324   <span class="keywordflow">if</span> (area == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00325"></a>00325     <span class="keywordflow">return</span> 0;
<a name="l00326"></a>00326 
<a name="l00327"></a>00327   range = <a class="code" href="ospf__abr_8c.html#a774663b20cea32fea41dc0ade8ead064">ospf_area_range_lookup</a> (area, p);
<a name="l00328"></a>00328   <span class="keywordflow">if</span> (range == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00329"></a>00329     <span class="keywordflow">return</span> 0;
<a name="l00330"></a>00330 
<a name="l00331"></a>00331   <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (range-&gt;<a class="code" href="structospf__area__range.html#adcac2bfd2040ce51c649dd47257fcdd5">flags</a>, <a class="code" href="ospf__abr_8h.html#a05a85c40463339240f87aa8200447eb8">OSPF_AREA_RANGE_SUBSTITUTE</a>))
<a name="l00332"></a>00332     <span class="keywordflow">if</span> (<a class="code" href="ospf__abr_8c.html#a982c5ad2411024cad7b3979eb1c4d7ab">ospf_area_range_active</a> (range))
<a name="l00333"></a>00333       <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (ospf);
<a name="l00334"></a>00334 
<a name="l00335"></a>00335   <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (range-&gt;<a class="code" href="structospf__area__range.html#adcac2bfd2040ce51c649dd47257fcdd5">flags</a>, <a class="code" href="ospf__abr_8h.html#a05a85c40463339240f87aa8200447eb8">OSPF_AREA_RANGE_SUBSTITUTE</a>);
<a name="l00336"></a>00336   range-&gt;<a class="code" href="structospf__area__range.html#aae8a961c337b41f842906f32be2e169e">subst_addr</a>.s_addr = 0;
<a name="l00337"></a>00337   range-&gt;<a class="code" href="structospf__area__range.html#afc6ca0cc37924c70d8d70aa2d426f313">subst_masklen</a> = 0;
<a name="l00338"></a>00338 
<a name="l00339"></a>00339   <span class="keywordflow">return</span> 1;
<a name="l00340"></a>00340 }
<a name="l00341"></a>00341 
<a name="l00342"></a>00342 <span class="keywordtype">int</span>
<a name="l00343"></a><a class="code" href="ospf__abr_8h.html#ad35e816bb0997ccf91bf14db3028b707">00343</a> <a class="code" href="ospf__abr_8c.html#ad5e6a3408de1c3abbe942d885245c26c">ospf_act_bb_connection</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>)
<a name="l00344"></a>00344 {
<a name="l00345"></a>00345   <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#af16c64964298aad9859d5b04503228bd">backbone</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00346"></a>00346     <span class="keywordflow">return</span> 0;
<a name="l00347"></a>00347 
<a name="l00348"></a>00348   <span class="keywordflow">return</span> ospf-&gt;<a class="code" href="structospf.html#af16c64964298aad9859d5b04503228bd">backbone</a>-&gt;<a class="code" href="structospf__area.html#a44f3838cd2e8fb5bd14a8c5cd1c2a0cd">full_nbrs</a>;
<a name="l00349"></a>00349 }
<a name="l00350"></a>00350 
<a name="l00351"></a>00351 <span class="comment">/* Determine whether this router is elected translator or not for area */</span>
<a name="l00352"></a>00352 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00353"></a><a class="code" href="ospf__abr_8c.html#a16826a88ec9b6e09c0c978397f6af9a2">00353</a> <a class="code" href="ospf__abr_8c.html#a16826a88ec9b6e09c0c978397f6af9a2">ospf_abr_nssa_am_elected</a> (<span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l00354"></a>00354 {
<a name="l00355"></a>00355   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00356"></a>00356   <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa;
<a name="l00357"></a>00357   <span class="keyword">struct </span><a class="code" href="structrouter__lsa.html">router_lsa</a> *rlsa;
<a name="l00358"></a>00358   <span class="keyword">struct </span>in_addr *best = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00359"></a>00359   
<a name="l00360"></a>00360   <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> ( <a class="code" href="ospf__lsdb_8h.html#a9b953d2ac1c54862e897adada93cb8a4">ROUTER_LSDB</a> (area), rn, lsa)
<a name="l00361"></a>00361     {
<a name="l00362"></a>00362       <span class="comment">/* sanity checks */</span>
<a name="l00363"></a>00363       <span class="keywordflow">if</span> (!lsa 
<a name="l00364"></a>00364           || (lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>-&gt;<a class="code" href="structlsa__header.html#a609df537f85c14e7146107e0cb67eae7">type</a> != <a class="code" href="ospf__lsa_8h.html#a35879db42bef5fa9b3c1540b7db95b6f">OSPF_ROUTER_LSA</a>) 
<a name="l00365"></a>00365           || <a class="code" href="ospf__lsa_8h.html#aba06df657f75f729003128da649322f8">IS_LSA_SELF</a> (lsa))
<a name="l00366"></a>00366         <span class="keywordflow">continue</span>;
<a name="l00367"></a>00367       
<a name="l00368"></a>00368       rlsa = (<span class="keyword">struct </span><a class="code" href="structrouter__lsa.html">router_lsa</a> *) lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>;
<a name="l00369"></a>00369       
<a name="l00370"></a>00370       <span class="comment">/* ignore non-ABR routers */</span>
<a name="l00371"></a>00371       if (!<a class="code" href="ospf__lsa_8h.html#a6741309c91ce8ca9fc9c07e1ac286c1c">IS_ROUTER_LSA_BORDER</a> (rlsa))
<a name="l00372"></a>00372         <span class="keywordflow">continue</span>;
<a name="l00373"></a>00373       
<a name="l00374"></a>00374       <span class="comment">/* Router has Nt flag - always translate */</span>
<a name="l00375"></a>00375       <span class="keywordflow">if</span> (<a class="code" href="ospf__lsa_8h.html#af2ae932f9055d5b3c649e6c474e91380">IS_ROUTER_LSA_NT</a> (rlsa))
<a name="l00376"></a>00376         {
<a name="l00377"></a>00377           <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l00378"></a>00378             <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_nssa_am_elected: &quot;</span>
<a name="l00379"></a>00379                        <span class="stringliteral">&quot;router %s asserts Nt&quot;</span>,
<a name="l00380"></a>00380                        inet_ntoa (lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>-&gt;<a class="code" href="structlsa__header.html#a8f4602786c2de855a418b553a4555683">id</a>) );
<a name="l00381"></a>00381           <span class="keywordflow">return</span> 0;
<a name="l00382"></a>00382         }
<a name="l00383"></a>00383       
<a name="l00384"></a>00384       <span class="keywordflow">if</span> (best == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00385"></a>00385         best = &amp;lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>-&gt;<a class="code" href="structlsa__header.html#a8f4602786c2de855a418b553a4555683">id</a>;
<a name="l00386"></a>00386       <span class="keywordflow">else</span>
<a name="l00387"></a>00387         <span class="keywordflow">if</span> ( <a class="code" href="prefix_8h.html#aed79e5e7f07f40fd10b39c04fbb24fc8">IPV4_ADDR_CMP</a> (&amp;best, &amp;lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>-&gt;<a class="code" href="structlsa__header.html#a8f4602786c2de855a418b553a4555683">id</a>) &lt; 0)
<a name="l00388"></a>00388           best = &amp;lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>-&gt;<a class="code" href="structlsa__header.html#a8f4602786c2de855a418b553a4555683">id</a>;
<a name="l00389"></a>00389     }
<a name="l00390"></a>00390     
<a name="l00391"></a>00391     <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l00392"></a>00392       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_nssa_am_elected: best electable ABR is: %s&quot;</span>,
<a name="l00393"></a>00393                   (best) ? inet_ntoa (*best) : <span class="stringliteral">&quot;&lt;none&gt;&quot;</span> );
<a name="l00394"></a>00394                   
<a name="l00395"></a>00395     <span class="keywordflow">if</span> (best == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00396"></a>00396       <span class="keywordflow">return</span> 1;
<a name="l00397"></a>00397     
<a name="l00398"></a>00398     <span class="keywordflow">if</span> ( <a class="code" href="prefix_8h.html#aed79e5e7f07f40fd10b39c04fbb24fc8">IPV4_ADDR_CMP</a> (&amp;best, &amp;area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>) &lt; 0)
<a name="l00399"></a>00399       <span class="keywordflow">return</span> 1;
<a name="l00400"></a>00400     <span class="keywordflow">else</span>
<a name="l00401"></a>00401       <span class="keywordflow">return</span> 0;
<a name="l00402"></a>00402 }
<a name="l00403"></a>00403 
<a name="l00404"></a>00404 <span class="comment">/* Check NSSA ABR status</span>
<a name="l00405"></a>00405 <span class="comment"> * assumes there are nssa areas</span>
<a name="l00406"></a>00406 <span class="comment"> */</span>
<a name="l00407"></a>00407 <span class="keyword">static</span> <span class="keywordtype">void</span> 
<a name="l00408"></a><a class="code" href="ospf__abr_8c.html#ae5cbeb1b329ace7f6ae14b4c02ffb9a5">00408</a> <a class="code" href="ospf__abr_8c.html#ae5cbeb1b329ace7f6ae14b4c02ffb9a5">ospf_abr_nssa_check_status</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>)
<a name="l00409"></a>00409 {
<a name="l00410"></a>00410   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l00411"></a>00411   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *lnode, *nnode;
<a name="l00412"></a>00412   
<a name="l00413"></a>00413   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, lnode, nnode, area))
<a name="l00414"></a>00414     {
<a name="l00415"></a>00415       u_char old_state = area-&gt;<a class="code" href="structospf__area.html#a3956cb7dd73ce5563ae652947e12d08e">NSSATranslatorState</a>;
<a name="l00416"></a>00416 
<a name="l00417"></a>00417       <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a> != <a class="code" href="ospfd_8h.html#a871478d6ecced0907ee1f67c5dbacf99">OSPF_AREA_NSSA</a>)
<a name="l00418"></a>00418         <span class="keywordflow">continue</span>;
<a name="l00419"></a>00419 
<a name="l00420"></a>00420       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (nssa, NSSA))
<a name="l00421"></a>00421         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_nssa_check_status: &quot;</span>
<a name="l00422"></a>00422                     <span class="stringliteral">&quot;checking area %s&quot;</span>,
<a name="l00423"></a>00423                     inet_ntoa (area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>));
<a name="l00424"></a>00424 
<a name="l00425"></a>00425       <span class="keywordflow">if</span> (!<a class="code" href="ospfd_8h.html#a66c6ce8df7e5b79426d9eca9f8ef6d27">IS_OSPF_ABR</a> (area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>))
<a name="l00426"></a>00426         {
<a name="l00427"></a>00427           <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (nssa, NSSA))
<a name="l00428"></a>00428             <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_nssa_check_status: &quot;</span> 
<a name="l00429"></a>00429                         <span class="stringliteral">&quot;not ABR&quot;</span>);
<a name="l00430"></a>00430           area-&gt;<a class="code" href="structospf__area.html#a3956cb7dd73ce5563ae652947e12d08e">NSSATranslatorState</a> = <a class="code" href="ospfd_8h.html#a35683a93ec45417ffe36e59f8af39d4d">OSPF_NSSA_TRANSLATE_DISABLED</a>;
<a name="l00431"></a>00431         }
<a name="l00432"></a>00432       <span class="keywordflow">else</span>
<a name="l00433"></a>00433         {
<a name="l00434"></a>00434           <span class="keywordflow">switch</span> (area-&gt;<a class="code" href="structospf__area.html#a42f4ce1b9291935fc71a30d93049d588">NSSATranslatorRole</a>)
<a name="l00435"></a>00435             {
<a name="l00436"></a>00436             <span class="keywordflow">case</span> <a class="code" href="ospfd_8h.html#aa1c86b38557eb3a83bc4e254c0b56850">OSPF_NSSA_ROLE_NEVER</a>:
<a name="l00437"></a>00437               <span class="comment">/* We never Translate Type-7 LSA. */</span>
<a name="l00438"></a>00438               <span class="comment">/* TODO: check previous state and flush? */</span>
<a name="l00439"></a>00439               <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (nssa, NSSA))
<a name="l00440"></a>00440                 <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_nssa_check_status: &quot;</span>
<a name="l00441"></a>00441                 <span class="stringliteral">&quot;never translate&quot;</span>);
<a name="l00442"></a>00442               area-&gt;<a class="code" href="structospf__area.html#a3956cb7dd73ce5563ae652947e12d08e">NSSATranslatorState</a> = <a class="code" href="ospfd_8h.html#a35683a93ec45417ffe36e59f8af39d4d">OSPF_NSSA_TRANSLATE_DISABLED</a>;
<a name="l00443"></a>00443               <span class="keywordflow">break</span>;
<a name="l00444"></a>00444 
<a name="l00445"></a>00445             <span class="keywordflow">case</span> <a class="code" href="ospfd_8h.html#a961ac1771b39d1a78dcfa6a0ac084d79">OSPF_NSSA_ROLE_ALWAYS</a>:
<a name="l00446"></a>00446               <span class="comment">/* We always translate if we are an ABR</span>
<a name="l00447"></a>00447 <span class="comment">               * TODO: originate new LSAs if state change?</span>
<a name="l00448"></a>00448 <span class="comment">               * or let the nssa abr task take care of it?</span>
<a name="l00449"></a>00449 <span class="comment">               */</span>
<a name="l00450"></a>00450               <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (nssa, NSSA))
<a name="l00451"></a>00451                 <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_nssa_check_status: &quot;</span>
<a name="l00452"></a>00452                             <span class="stringliteral">&quot;translate always&quot;</span>);
<a name="l00453"></a>00453               area-&gt;<a class="code" href="structospf__area.html#a3956cb7dd73ce5563ae652947e12d08e">NSSATranslatorState</a> = <a class="code" href="ospfd_8h.html#aa1c8868146a0ce1d8d3c85229f5df640">OSPF_NSSA_TRANSLATE_ENABLED</a>;
<a name="l00454"></a>00454               <span class="keywordflow">break</span>;
<a name="l00455"></a>00455 
<a name="l00456"></a>00456             <span class="keywordflow">case</span> <a class="code" href="ospfd_8h.html#a6421313c3b9108552cecefe06304ae1e">OSPF_NSSA_ROLE_CANDIDATE</a>:
<a name="l00457"></a>00457               <span class="comment">/* We are a candidate for Translation */</span>
<a name="l00458"></a>00458               <span class="keywordflow">if</span> (<a class="code" href="ospf__abr_8c.html#a16826a88ec9b6e09c0c978397f6af9a2">ospf_abr_nssa_am_elected</a> (area) &gt; 0)
<a name="l00459"></a>00459                 {
<a name="l00460"></a>00460                   area-&gt;<a class="code" href="structospf__area.html#a3956cb7dd73ce5563ae652947e12d08e">NSSATranslatorState</a> = <a class="code" href="ospfd_8h.html#aa1c8868146a0ce1d8d3c85229f5df640">OSPF_NSSA_TRANSLATE_ENABLED</a>;
<a name="l00461"></a>00461                   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (nssa, NSSA))
<a name="l00462"></a>00462                     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_nssa_check_status: &quot;</span>
<a name="l00463"></a>00463                                 <span class="stringliteral">&quot;elected translator&quot;</span>);
<a name="l00464"></a>00464                 }
<a name="l00465"></a>00465               <span class="keywordflow">else</span>
<a name="l00466"></a>00466                 {
<a name="l00467"></a>00467                   area-&gt;<a class="code" href="structospf__area.html#a3956cb7dd73ce5563ae652947e12d08e">NSSATranslatorState</a> = <a class="code" href="ospfd_8h.html#a35683a93ec45417ffe36e59f8af39d4d">OSPF_NSSA_TRANSLATE_DISABLED</a>;
<a name="l00468"></a>00468                   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (nssa, NSSA))
<a name="l00469"></a>00469                     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_nssa_check_status: &quot;</span> <span class="stringliteral">&quot;not elected&quot;</span>);
<a name="l00470"></a>00470                 }
<a name="l00471"></a>00471               <span class="keywordflow">break</span>;
<a name="l00472"></a>00472             }
<a name="l00473"></a>00473         }
<a name="l00474"></a>00474       <span class="comment">/* RFC3101, 3.1:</span>
<a name="l00475"></a>00475 <span class="comment">       * All NSSA border routers must set the E-bit in the Type-1 router-LSAs</span>
<a name="l00476"></a>00476 <span class="comment">       * of their directly attached non-stub areas, even when they are not</span>
<a name="l00477"></a>00477 <span class="comment">       * translating.</span>
<a name="l00478"></a>00478 <span class="comment">       */</span>
<a name="l00479"></a>00479       <span class="keywordflow">if</span> (old_state != area-&gt;<a class="code" href="structospf__area.html#a3956cb7dd73ce5563ae652947e12d08e">NSSATranslatorState</a>)
<a name="l00480"></a>00480         {
<a name="l00481"></a>00481           <span class="keywordflow">if</span> (old_state == <a class="code" href="ospfd_8h.html#a35683a93ec45417ffe36e59f8af39d4d">OSPF_NSSA_TRANSLATE_DISABLED</a>)
<a name="l00482"></a>00482         <a class="code" href="ospf__asbr_8c.html#a15ef7b9d7fd4f1120453e770c076160a">ospf_asbr_status_update</a> (ospf, ++ospf-&gt;<a class="code" href="structospf.html#a298631df5a443358670e6415175f2251">redistribute</a>);
<a name="l00483"></a>00483       <span class="keywordflow">else</span> <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structospf__area.html#a3956cb7dd73ce5563ae652947e12d08e">NSSATranslatorState</a> == <a class="code" href="ospfd_8h.html#a35683a93ec45417ffe36e59f8af39d4d">OSPF_NSSA_TRANSLATE_DISABLED</a>)
<a name="l00484"></a>00484         <a class="code" href="ospf__asbr_8c.html#a15ef7b9d7fd4f1120453e770c076160a">ospf_asbr_status_update</a> (ospf, --ospf-&gt;<a class="code" href="structospf.html#a298631df5a443358670e6415175f2251">redistribute</a>);
<a name="l00485"></a>00485     }
<a name="l00486"></a>00486     }
<a name="l00487"></a>00487 }
<a name="l00488"></a>00488 
<a name="l00489"></a>00489 <span class="comment">/* Check area border router status. */</span>
<a name="l00490"></a>00490 <span class="keywordtype">void</span>
<a name="l00491"></a><a class="code" href="ospf__abr_8h.html#ab7d773cb926cdf8a8c13ec9103747189">00491</a> <a class="code" href="ospf__abr_8c.html#aae7756099eb070db13009f36bfd7736f">ospf_check_abr_status</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>)
<a name="l00492"></a>00492 {
<a name="l00493"></a>00493   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l00494"></a>00494   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
<a name="l00495"></a>00495   <span class="keywordtype">int</span> bb_configured = 0;
<a name="l00496"></a>00496   <span class="keywordtype">int</span> bb_act_attached = 0;
<a name="l00497"></a>00497   <span class="keywordtype">int</span> areas_configured = 0;
<a name="l00498"></a>00498   <span class="keywordtype">int</span> areas_act_attached = 0;
<a name="l00499"></a>00499   u_char <a class="code" href="isis__flags_8h.html#ad1994fd54b269190ebb32103b868b735">new_flags</a> = ospf-&gt;<a class="code" href="structospf.html#a435f2a4e7119f86c682366f6319ce64f">flags</a>;
<a name="l00500"></a>00500 
<a name="l00501"></a>00501   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00502"></a>00502     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_check_abr_status(): Start&quot;</span>);
<a name="l00503"></a>00503 
<a name="l00504"></a>00504   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, node, nnode, area))
<a name="l00505"></a>00505     {
<a name="l00506"></a>00506       <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (area-&gt;<a class="code" href="structospf__area.html#aec49fceeb655dde5648208d29dfc66a4">oiflist</a>)) 
<a name="l00507"></a>00507     {
<a name="l00508"></a>00508       areas_configured++;
<a name="l00509"></a>00509       
<a name="l00510"></a>00510       <span class="keywordflow">if</span> (<a class="code" href="ospfd_8h.html#a62518cec4ea9ee2a4db410d3c42b23f7">OSPF_IS_AREA_BACKBONE</a> (area))
<a name="l00511"></a>00511         bb_configured = 1;
<a name="l00512"></a>00512     }
<a name="l00513"></a>00513 
<a name="l00514"></a>00514       <span class="keywordflow">if</span> (<a class="code" href="ospf__abr_8c.html#af229422187da31bbb735cc83e2ac2d1b">ospf_area_actively_attached</a> (area))
<a name="l00515"></a>00515     {
<a name="l00516"></a>00516       areas_act_attached++;
<a name="l00517"></a>00517       
<a name="l00518"></a>00518       <span class="keywordflow">if</span> (<a class="code" href="ospfd_8h.html#a62518cec4ea9ee2a4db410d3c42b23f7">OSPF_IS_AREA_BACKBONE</a> (area))
<a name="l00519"></a>00519             bb_act_attached = 1;
<a name="l00520"></a>00520     }
<a name="l00521"></a>00521     }
<a name="l00522"></a>00522 
<a name="l00523"></a>00523   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00524"></a>00524     {
<a name="l00525"></a>00525       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_check_abr_status(): looked through areas&quot;</span>);
<a name="l00526"></a>00526       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_check_abr_status(): bb_configured: %d&quot;</span>, bb_configured);
<a name="l00527"></a>00527       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_check_abr_status(): bb_act_attached: %d&quot;</span>,
<a name="l00528"></a>00528          bb_act_attached);
<a name="l00529"></a>00529       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_check_abr_status(): areas_configured: %d&quot;</span>,
<a name="l00530"></a>00530          areas_configured);
<a name="l00531"></a>00531       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_check_abr_status(): areas_act_attached: %d&quot;</span>,
<a name="l00532"></a>00532          areas_act_attached);
<a name="l00533"></a>00533     }
<a name="l00534"></a>00534 
<a name="l00535"></a>00535   <span class="keywordflow">switch</span> (ospf-&gt;<a class="code" href="structospf.html#ad1c5b3263ee1326f5720d0d09bfce53c">abr_type</a>)
<a name="l00536"></a>00536     {
<a name="l00537"></a>00537     <span class="keywordflow">case</span> <a class="code" href="ospfd_8h.html#a9dae55988b0aa4f2ec2a954209ec0630">OSPF_ABR_SHORTCUT</a>:
<a name="l00538"></a>00538     <span class="keywordflow">case</span> <a class="code" href="ospfd_8h.html#a4ff7faa4a8d19436deb0db86d4bd82df">OSPF_ABR_STAND</a>:
<a name="l00539"></a>00539       <span class="keywordflow">if</span> (areas_act_attached &gt; 1)
<a name="l00540"></a>00540     <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (new_flags, <a class="code" href="ospfd_8h.html#a0e909e5caea8eee9944b02632cecce52">OSPF_FLAG_ABR</a>);
<a name="l00541"></a>00541       <span class="keywordflow">else</span>
<a name="l00542"></a>00542     <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (new_flags, <a class="code" href="ospfd_8h.html#a0e909e5caea8eee9944b02632cecce52">OSPF_FLAG_ABR</a>);
<a name="l00543"></a>00543       <span class="keywordflow">break</span>;
<a name="l00544"></a>00544 
<a name="l00545"></a>00545     <span class="keywordflow">case</span> <a class="code" href="ospfd_8h.html#a22c05e10f58a965d1023edc4d8a23313">OSPF_ABR_IBM</a>:
<a name="l00546"></a>00546       <span class="keywordflow">if</span> ((areas_act_attached &gt; 1) &amp;&amp; bb_configured)
<a name="l00547"></a>00547     <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (new_flags, <a class="code" href="ospfd_8h.html#a0e909e5caea8eee9944b02632cecce52">OSPF_FLAG_ABR</a>);
<a name="l00548"></a>00548       <span class="keywordflow">else</span>
<a name="l00549"></a>00549     <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (new_flags, <a class="code" href="ospfd_8h.html#a0e909e5caea8eee9944b02632cecce52">OSPF_FLAG_ABR</a>);
<a name="l00550"></a>00550       <span class="keywordflow">break</span>;
<a name="l00551"></a>00551 
<a name="l00552"></a>00552     <span class="keywordflow">case</span> <a class="code" href="ospfd_8h.html#aac0be2e336b1b7bcb296c6e9ba32b6ae">OSPF_ABR_CISCO</a>:
<a name="l00553"></a>00553       <span class="keywordflow">if</span> ((areas_configured &gt; 1) &amp;&amp; bb_act_attached)
<a name="l00554"></a>00554     <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (new_flags, <a class="code" href="ospfd_8h.html#a0e909e5caea8eee9944b02632cecce52">OSPF_FLAG_ABR</a>);
<a name="l00555"></a>00555       <span class="keywordflow">else</span>
<a name="l00556"></a>00556     <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (new_flags, <a class="code" href="ospfd_8h.html#a0e909e5caea8eee9944b02632cecce52">OSPF_FLAG_ABR</a>);
<a name="l00557"></a>00557       <span class="keywordflow">break</span>;
<a name="l00558"></a>00558     <span class="keywordflow">default</span>:
<a name="l00559"></a>00559       <span class="keywordflow">break</span>;
<a name="l00560"></a>00560     }
<a name="l00561"></a>00561 
<a name="l00562"></a>00562   <span class="keywordflow">if</span> (new_flags != ospf-&gt;<a class="code" href="structospf.html#a435f2a4e7119f86c682366f6319ce64f">flags</a>)
<a name="l00563"></a>00563     {
<a name="l00564"></a>00564       <a class="code" href="ospf__spf_8c.html#a3422ebf3062fac786ecdb7b419c22cf1">ospf_spf_calculate_schedule</a> (ospf);
<a name="l00565"></a>00565       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00566"></a>00566     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_check_abr_status(): new router flags: %x&quot;</span>,new_flags);
<a name="l00567"></a>00567       ospf-&gt;<a class="code" href="structospf.html#a435f2a4e7119f86c682366f6319ce64f">flags</a> = <a class="code" href="isis__flags_8h.html#ad1994fd54b269190ebb32103b868b735">new_flags</a>;
<a name="l00568"></a>00568       <a class="code" href="ospfd_8h.html#af55bc6c498265fffa9294d0f1b952267">OSPF_TIMER_ON</a> (ospf-&gt;<a class="code" href="structospf.html#a94a369b811b335e1d05e1dab77096606">t_router_lsa_update</a>,
<a name="l00569"></a>00569              <a class="code" href="ospf__lsa_8c.html#a4db40452defbd5304d698f8d0cc855d1">ospf_router_lsa_update_timer</a>, <a class="code" href="ospf__lsa_8h.html#a40abe6153ff06321e030f48daccf4966">OSPF_LSA_UPDATE_DELAY</a>);
<a name="l00570"></a>00570     }
<a name="l00571"></a>00571 }
<a name="l00572"></a>00572 
<a name="l00573"></a>00573 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00574"></a><a class="code" href="ospf__abr_8c.html#a2b01f8c811d0abb75a42adedab0b4af1">00574</a> <a class="code" href="ospf__abr_8c.html#a2b01f8c811d0abb75a42adedab0b4af1">ospf_abr_update_aggregate</a> (<span class="keyword">struct</span> <a class="code" href="structospf__area__range.html">ospf_area_range</a> *range,
<a name="l00575"></a>00575                            <span class="keyword">struct</span> <a class="code" href="structospf__route.html">ospf_route</a> *or)
<a name="l00576"></a>00576 {
<a name="l00577"></a>00577   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00578"></a>00578     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_update_aggregate(): Start&quot;</span>);
<a name="l00579"></a>00579 
<a name="l00580"></a>00580   <span class="keywordflow">if</span> (range-&gt;<a class="code" href="structospf__area__range.html#a869c843ab497ff8be702a02cd7b3eddf">cost_config</a> != <a class="code" href="ospf__abr_8h.html#a9e21588e2ea1550756920731bbc4c80c">OSPF_AREA_RANGE_COST_UNSPEC</a>)
<a name="l00581"></a>00581     {
<a name="l00582"></a>00582       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00583"></a>00583         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_update_aggregate(): use configured cost %d&quot;</span>,
<a name="l00584"></a>00584                    range-&gt;<a class="code" href="structospf__area__range.html#a869c843ab497ff8be702a02cd7b3eddf">cost_config</a>);
<a name="l00585"></a>00585 
<a name="l00586"></a>00586       range-&gt;<a class="code" href="structospf__area__range.html#a48ee60db14ab78e1f0435d56fd42d2d0">cost</a> = range-&gt;<a class="code" href="structospf__area__range.html#a869c843ab497ff8be702a02cd7b3eddf">cost_config</a>;
<a name="l00587"></a>00587     }
<a name="l00588"></a>00588   <span class="keywordflow">else</span>
<a name="l00589"></a>00589     {
<a name="l00590"></a>00590       <span class="keywordflow">if</span> (range-&gt;<a class="code" href="structospf__area__range.html#a3d1cb2519f52918c6ebfbcc60dbbbd6d">specifics</a> == 0)
<a name="l00591"></a>00591         range-&gt;<a class="code" href="structospf__area__range.html#a48ee60db14ab78e1f0435d56fd42d2d0">cost</a> = or-&gt;<a class="code" href="structospf__route.html#a78ed87939e621a405c66aeb71fa1944d">cost</a>; <span class="comment">/* 1st time get 1st cost */</span>
<a name="l00592"></a>00592 
<a name="l00593"></a>00593       <span class="keywordflow">if</span> (or-&gt;<a class="code" href="structospf__route.html#a78ed87939e621a405c66aeb71fa1944d">cost</a> &gt; range-&gt;<a class="code" href="structospf__area__range.html#a48ee60db14ab78e1f0435d56fd42d2d0">cost</a>)
<a name="l00594"></a>00594         {
<a name="l00595"></a>00595           <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00596"></a>00596             <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_update_aggregate(): largest cost, update&quot;</span>);
<a name="l00597"></a>00597 
<a name="l00598"></a>00598           range-&gt;<a class="code" href="structospf__area__range.html#a48ee60db14ab78e1f0435d56fd42d2d0">cost</a> = or-&gt;<a class="code" href="structospf__route.html#a78ed87939e621a405c66aeb71fa1944d">cost</a>;
<a name="l00599"></a>00599         }
<a name="l00600"></a>00600     }
<a name="l00601"></a>00601 
<a name="l00602"></a>00602   range-&gt;<a class="code" href="structospf__area__range.html#a3d1cb2519f52918c6ebfbcc60dbbbd6d">specifics</a>++;
<a name="l00603"></a>00603 }
<a name="l00604"></a>00604 
<a name="l00605"></a>00605 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00606"></a><a class="code" href="ospf__abr_8c.html#a57499501cfdfc7c1a078bb1c74f54ca5">00606</a> <a class="code" href="ospf__abr_8c.html#a57499501cfdfc7c1a078bb1c74f54ca5">set_metric</a> (<span class="keyword">struct</span> <a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa, u_int32_t <a class="code" href="structmetric.html">metric</a>)
<a name="l00607"></a>00607 {
<a name="l00608"></a>00608   <span class="keyword">struct </span><a class="code" href="structsummary__lsa.html">summary_lsa</a> *<a class="code" href="structsummary__lsa.html#a78511b56eed6986c0288fa7da9c4b7a1">header</a>;
<a name="l00609"></a>00609   u_char *mp;
<a name="l00610"></a>00610   metric = htonl (metric);
<a name="l00611"></a>00611   mp = (u_char *) &amp;metric;
<a name="l00612"></a>00612   mp++;
<a name="l00613"></a>00613   header = (<span class="keyword">struct </span><a class="code" href="structsummary__lsa.html">summary_lsa</a> *) lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>;
<a name="l00614"></a>00614   <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a>(header-&gt;<a class="code" href="structsummary__lsa.html#a0353f250382513bdfb5962e9c23f822a">metric</a>, mp, 3);
<a name="l00615"></a>00615 }
<a name="l00616"></a>00616 
<a name="l00617"></a>00617 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00618"></a><a class="code" href="ospf__abr_8c.html#ab86d705427b5af2376bdd46667efb514">00618</a> <a class="code" href="ospf__abr_8c.html#ab86d705427b5af2376bdd46667efb514">ospf_abr_check_nssa_range</a> (<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, u_int32_t cost,
<a name="l00619"></a>00619                    <span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l00620"></a>00620 {
<a name="l00621"></a>00621   <span class="comment">/* The Type-7 is tested against the aggregated prefix and forwarded</span>
<a name="l00622"></a>00622 <span class="comment">       for lsa installation and flooding */</span>
<a name="l00623"></a>00623   <span class="keywordflow">return</span> 0;
<a name="l00624"></a>00624 }
<a name="l00625"></a>00625 
<a name="l00626"></a>00626 <span class="comment">/* ospf_abr_translate_nssa */</span>
<a name="l00627"></a>00627 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00628"></a><a class="code" href="ospf__abr_8c.html#a218c36503435eb4ddb454ac0f5f21605">00628</a> <a class="code" href="ospf__abr_8c.html#a218c36503435eb4ddb454ac0f5f21605">ospf_abr_translate_nssa</a> (<span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>, <span class="keyword">struct</span> <a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa)
<a name="l00629"></a>00629 {
<a name="l00630"></a>00630   <span class="comment">/* Incoming Type-7 or later aggregated Type-7 </span>
<a name="l00631"></a>00631 <span class="comment">   *</span>
<a name="l00632"></a>00632 <span class="comment">   * LSA is skipped if P-bit is off.</span>
<a name="l00633"></a>00633 <span class="comment">   * LSA is aggregated if within range.</span>
<a name="l00634"></a>00634 <span class="comment">   *</span>
<a name="l00635"></a>00635 <span class="comment">   * The Type-7 is translated, Installed/Approved as a Type-5 into</span>
<a name="l00636"></a>00636 <span class="comment">   * global LSDB, then Flooded through AS</span>
<a name="l00637"></a>00637 <span class="comment">   *</span>
<a name="l00638"></a>00638 <span class="comment">   *  Later, any Unapproved Translated Type-5&#39;s are flushed/discarded </span>
<a name="l00639"></a>00639 <span class="comment">   */</span>
<a name="l00640"></a>00640 
<a name="l00641"></a>00641   <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *old = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>,
<a name="l00642"></a>00642                   *<span class="keyword">new</span> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00643"></a>00643   <span class="keyword">struct </span><a class="code" href="structas__external__lsa.html">as_external_lsa</a> *ext7;
<a name="l00644"></a>00644   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> p;
<a name="l00645"></a>00645 
<a name="l00646"></a>00646   <span class="keywordflow">if</span> (! <a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>-&gt;<a class="code" href="structlsa__header.html#ab09eba50538b8481e12d4825dc803716">options</a>, <a class="code" href="ospfd_8h.html#af9739335948debe99dd1e5e62d87c00c">OSPF_OPTION_NP</a>))
<a name="l00647"></a>00647     {
<a name="l00648"></a>00648       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l00649"></a>00649         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_translate_nssa(): LSA Id %s, P-bit off, NO Translation&quot;</span>,
<a name="l00650"></a>00650                    inet_ntoa (lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>-&gt;<a class="code" href="structlsa__header.html#a8f4602786c2de855a418b553a4555683">id</a>));
<a name="l00651"></a>00651       <span class="keywordflow">return</span> 1; 
<a name="l00652"></a>00652     }
<a name="l00653"></a>00653   
<a name="l00654"></a>00654   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l00655"></a>00655     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_translate_nssa(): LSA Id %s, TRANSLATING 7 to 5&quot;</span>,
<a name="l00656"></a>00656                inet_ntoa (lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>-&gt;<a class="code" href="structlsa__header.html#a8f4602786c2de855a418b553a4555683">id</a>));
<a name="l00657"></a>00657 
<a name="l00658"></a>00658   ext7 = (<span class="keyword">struct </span><a class="code" href="structas__external__lsa.html">as_external_lsa</a> *)(lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>);
<a name="l00659"></a>00659   p.prefix = lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>-&gt;<a class="code" href="structlsa__header.html#a8f4602786c2de855a418b553a4555683">id</a>;
<a name="l00660"></a>00660   p.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = <a class="code" href="prefix_8c.html#ab83ffad6b766ddd0ef87e4da228c322d">ip_masklen</a> (ext7-&gt;<a class="code" href="structas__external__lsa.html#aa860fac77968c497496d16df6d325651">mask</a>);
<a name="l00661"></a>00661   
<a name="l00662"></a>00662   <span class="keywordflow">if</span> (ext7-&gt;<a class="code" href="structas__external__lsa.html#a51c29f7223123224ae18468efee20ee0">e</a>[0].<a class="code" href="structas__external__lsa.html#a5817fa032c9f6c8f23d975ec1c5dfa20">fwd_addr</a>.s_addr == <a class="code" href="ospfd_8h.html#aa27acfec5e87443929f2f3cce54116d4">OSPF_DEFAULT_DESTINATION</a>)
<a name="l00663"></a>00663     {
<a name="l00664"></a>00664       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l00665"></a>00665         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_translate_nssa(): LSA Id %s, &quot;</span>
<a name="l00666"></a>00666                    <span class="stringliteral">&quot;Forward address is 0, NO Translation&quot;</span>,
<a name="l00667"></a>00667                    inet_ntoa (lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>-&gt;<a class="code" href="structlsa__header.html#a8f4602786c2de855a418b553a4555683">id</a>));
<a name="l00668"></a>00668       <span class="keywordflow">return</span> 1;
<a name="l00669"></a>00669     }
<a name="l00670"></a>00670   
<a name="l00671"></a>00671   <span class="comment">/* try find existing AS-External LSA for this prefix */</span>
<a name="l00672"></a>00672 
<a name="l00673"></a>00673   old = <a class="code" href="ospf__asbr_8c.html#ad45c036a67747a7f65338b7ec6ff748d">ospf_external_info_find_lsa</a> (area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>, &amp;p);
<a name="l00674"></a>00674 
<a name="l00675"></a>00675   <span class="keywordflow">if</span> (old)
<a name="l00676"></a>00676     {
<a name="l00677"></a>00677       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l00678"></a>00678         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_translate_nssa(): &quot;</span> 
<a name="l00679"></a>00679                    <span class="stringliteral">&quot;found old translated LSA Id %s, refreshing&quot;</span>,
<a name="l00680"></a>00680                    inet_ntoa (old-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>-&gt;<a class="code" href="structlsa__header.html#a8f4602786c2de855a418b553a4555683">id</a>));
<a name="l00681"></a>00681             
<a name="l00682"></a>00682       <span class="comment">/* refresh */</span>
<a name="l00683"></a>00683       <span class="keyword">new</span> = <a class="code" href="ospf__lsa_8c.html#aa870c13f8cc5f9f7243bf1d73278d1d5">ospf_translated_nssa_refresh</a> (area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>, lsa, old);
<a name="l00684"></a>00684       <span class="keywordflow">if</span> (!<span class="keyword">new</span>)
<a name="l00685"></a>00685         {
<a name="l00686"></a>00686           <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l00687"></a>00687             <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_translate_nssa(): &quot;</span>
<a name="l00688"></a>00688               <span class="stringliteral">&quot;could not refresh translated LSA Id %s&quot;</span>,
<a name="l00689"></a>00689               inet_ntoa (old-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>-&gt;<a class="code" href="structlsa__header.html#a8f4602786c2de855a418b553a4555683">id</a>));
<a name="l00690"></a>00690         }
<a name="l00691"></a>00691     }
<a name="l00692"></a>00692   <span class="keywordflow">else</span>
<a name="l00693"></a>00693     {
<a name="l00694"></a>00694       <span class="comment">/* no existing external route for this LSA Id</span>
<a name="l00695"></a>00695 <span class="comment">       * originate translated LSA </span>
<a name="l00696"></a>00696 <span class="comment">       */</span>
<a name="l00697"></a>00697       
<a name="l00698"></a>00698       <span class="keywordflow">if</span> ((<span class="keyword">new</span> = <a class="code" href="ospf__lsa_8c.html#ae0beb4bdc20ad5fe3224c7ab980312ab">ospf_translated_nssa_originate</a> (area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>, lsa)) 
<a name="l00699"></a>00699            == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00700"></a>00700         {
<a name="l00701"></a>00701           <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l00702"></a>00702             <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_translate_nssa(): Could not translate &quot;</span>
<a name="l00703"></a>00703                        <span class="stringliteral">&quot;Type-7 for %s to Type-5&quot;</span>, 
<a name="l00704"></a>00704                        inet_ntoa (lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>-&gt;<a class="code" href="structlsa__header.html#a8f4602786c2de855a418b553a4555683">id</a>));
<a name="l00705"></a>00705             <span class="keywordflow">return</span> 1;
<a name="l00706"></a>00706         }
<a name="l00707"></a>00707     }
<a name="l00708"></a>00708 
<a name="l00709"></a>00709   <span class="comment">/* Area where Aggregate testing will be inserted, just like summary</span>
<a name="l00710"></a>00710 <span class="comment">     advertisements */</span>
<a name="l00711"></a>00711   <span class="comment">/* ospf_abr_check_nssa_range (p_arg, lsa-&gt; cost, lsa -&gt; area); */</span>
<a name="l00712"></a>00712 
<a name="l00713"></a>00713   <span class="keywordflow">return</span> 0;
<a name="l00714"></a>00714 }
<a name="l00715"></a>00715 
<a name="l00716"></a>00716 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00717"></a><a class="code" href="ospf__abr_8c.html#a1be9148114aa9952994a93198d36f665">00717</a> <a class="code" href="ospf__abr_8c.html#a1be9148114aa9952994a93198d36f665">ospf_abr_translate_nssa_range</a> (<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, u_int32_t cost)
<a name="l00718"></a>00718 {
<a name="l00719"></a>00719   <span class="comment">/* The Type-7 is created from the aggregated prefix and forwarded</span>
<a name="l00720"></a>00720 <span class="comment">     for lsa installation and flooding... to be added... */</span>
<a name="l00721"></a>00721 }
<a name="l00722"></a>00722 
<a name="l00723"></a>00723 <span class="keywordtype">void</span>
<a name="l00724"></a><a class="code" href="ospf__abr_8h.html#ace7fc3ab4af756e9839fbe8e54c6c06f">00724</a> <a class="code" href="ospf__abr_8c.html#ac9d059be83ed701a4f4f549984eb8614">ospf_abr_announce_network_to_area</a> (<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, u_int32_t cost,
<a name="l00725"></a>00725                    <span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l00726"></a>00726 {
<a name="l00727"></a>00727   <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa, *old = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00728"></a>00728   <span class="keyword">struct </span><a class="code" href="structsummary__lsa.html">summary_lsa</a> *<a class="code" href="spgrid_8c.html#a1c244c66d157ebaf785a7d1368bf4a28">sl</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00729"></a>00729 
<a name="l00730"></a>00730   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00731"></a>00731     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_network_to_area(): Start&quot;</span>);
<a name="l00732"></a>00732 
<a name="l00733"></a>00733   old = <a class="code" href="ospf__lsa_8c.html#ab2e4bd0fdc42ab447eea95c79f21a7e2">ospf_lsa_lookup_by_prefix</a> (area-&gt;<a class="code" href="structospf__area.html#a234992a360998d34aba7b183cf2019c9">lsdb</a>, <a class="code" href="ospf__lsa_8h.html#a3a501e86708401620a7a61e9920cd9bd">OSPF_SUMMARY_LSA</a>, 
<a name="l00734"></a>00734                                    (<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *) p,
<a name="l00735"></a>00735                                    area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>);
<a name="l00736"></a>00736   <span class="keywordflow">if</span> (old)
<a name="l00737"></a>00737     {
<a name="l00738"></a>00738       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00739"></a>00739         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_network_to_area(): old summary found&quot;</span>);
<a name="l00740"></a>00740 
<a name="l00741"></a>00741       sl = (<span class="keyword">struct </span><a class="code" href="structsummary__lsa.html">summary_lsa</a> *) old-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>;
<a name="l00742"></a>00742 
<a name="l00743"></a>00743       if (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00744"></a>00744         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_network_to_area(): &quot;</span>
<a name="l00745"></a>00745                <span class="stringliteral">&quot;old metric: %d, new metric: %d&quot;</span>,
<a name="l00746"></a>00746                <a class="code" href="ospf__lsa_8h.html#af484b7995c962cc7558d5fc385b835fc">GET_METRIC</a> (sl-&gt;<a class="code" href="structsummary__lsa.html#a0353f250382513bdfb5962e9c23f822a">metric</a>), cost);
<a name="l00747"></a>00747                
<a name="l00748"></a>00748       <span class="keywordflow">if</span> (<a class="code" href="ospf__lsa_8h.html#af484b7995c962cc7558d5fc385b835fc">GET_METRIC</a> (sl-&gt;<a class="code" href="structsummary__lsa.html#a0353f250382513bdfb5962e9c23f822a">metric</a>) == cost)
<a name="l00749"></a>00749         {
<a name="l00750"></a>00750           <span class="comment">/* unchanged. simply reapprove it */</span>
<a name="l00751"></a>00751           <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00752"></a>00752             <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_network_to_area(): &quot;</span>
<a name="l00753"></a>00753                        <span class="stringliteral">&quot;old summary approved&quot;</span>); 
<a name="l00754"></a>00754           <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (old-&gt;<a class="code" href="structospf__lsa.html#aa8c833176affd799afeb8db16cdb2602">flags</a>, <a class="code" href="ospf__lsa_8h.html#a7d310b6c5bc390fbe0a0da8a73c43d82">OSPF_LSA_APPROVED</a>);
<a name="l00755"></a>00755         }
<a name="l00756"></a>00756       <span class="keywordflow">else</span>
<a name="l00757"></a>00757         {
<a name="l00758"></a>00758           <span class="comment">/* LSA is changed, refresh it */</span>
<a name="l00759"></a>00759           <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00760"></a>00760             <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_network_to_area(): &quot;</span>
<a name="l00761"></a>00761                        <span class="stringliteral">&quot;refreshing summary&quot;</span>);
<a name="l00762"></a>00762           <a class="code" href="ospf__abr_8c.html#a57499501cfdfc7c1a078bb1c74f54ca5">set_metric</a> (old, cost);
<a name="l00763"></a>00763           lsa = <a class="code" href="ospf__lsa_8c.html#ad1ec944b0c3d672071952a4ec0112254">ospf_summary_lsa_refresh</a> (area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>, old);
<a name="l00764"></a>00764           
<a name="l00765"></a>00765           <span class="keywordflow">if</span> (!lsa)
<a name="l00766"></a>00766             {
<a name="l00767"></a>00767           <span class="keywordtype">char</span> buf[<a class="code" href="prefix_8h.html#a93b37007689284fd9c4bde1a8f4b9199">INET_ADDRSTRLEN</a> + 3]; <span class="comment">/* ipv4 and /XX */</span>
<a name="l00768"></a>00768           
<a name="l00769"></a>00769           <a class="code" href="prefix_8c.html#a8b848557695ae5694bd2282eba23e367">prefix2str</a> ((<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) p, buf, <span class="keyword">sizeof</span>(buf));
<a name="l00770"></a>00770           <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;%s: Could not refresh %s to %s&quot;</span>,
<a name="l00771"></a>00771                      __func__,
<a name="l00772"></a>00772                      buf,
<a name="l00773"></a>00773                      inet_ntoa (area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>));
<a name="l00774"></a>00774           <span class="keywordflow">return</span>;
<a name="l00775"></a>00775         }
<a name="l00776"></a>00776       
<a name="l00777"></a>00777           <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (lsa-&gt;<a class="code" href="structospf__lsa.html#aa8c833176affd799afeb8db16cdb2602">flags</a>, <a class="code" href="ospf__lsa_8h.html#a7d310b6c5bc390fbe0a0da8a73c43d82">OSPF_LSA_APPROVED</a>);
<a name="l00778"></a>00778           <span class="comment">/* This will flood through area. */</span>
<a name="l00779"></a>00779         }
<a name="l00780"></a>00780     }
<a name="l00781"></a>00781   <span class="keywordflow">else</span>
<a name="l00782"></a>00782     {
<a name="l00783"></a>00783       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00784"></a>00784         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_network_to_area(): &quot;</span>
<a name="l00785"></a>00785                <span class="stringliteral">&quot;creating new summary&quot;</span>);
<a name="l00786"></a>00786       lsa = <a class="code" href="ospf__lsa_8c.html#a93fd95cdd56566f3929ae642fe197276">ospf_summary_lsa_originate</a> ( (<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *)p, cost, area);
<a name="l00787"></a>00787           <span class="comment">/* This will flood through area. */</span>
<a name="l00788"></a>00788       
<a name="l00789"></a>00789       <span class="keywordflow">if</span> (!lsa)
<a name="l00790"></a>00790         {
<a name="l00791"></a>00791           <span class="keywordtype">char</span> buf[<a class="code" href="prefix_8h.html#a93b37007689284fd9c4bde1a8f4b9199">INET_ADDRSTRLEN</a> + 3]; <span class="comment">/* ipv4 and /XX */</span>
<a name="l00792"></a>00792           
<a name="l00793"></a>00793           <a class="code" href="prefix_8c.html#a8b848557695ae5694bd2282eba23e367">prefix2str</a> ((<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)p, buf, <span class="keyword">sizeof</span>(buf));
<a name="l00794"></a>00794       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;%s: Could not originate %s to %s&quot;</span>,
<a name="l00795"></a>00795                  __func__,
<a name="l00796"></a>00796                  buf,
<a name="l00797"></a>00797              inet_ntoa (area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>));
<a name="l00798"></a>00798       <span class="keywordflow">return</span>;
<a name="l00799"></a>00799     }
<a name="l00800"></a>00800       
<a name="l00801"></a>00801       <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (lsa-&gt;<a class="code" href="structospf__lsa.html#aa8c833176affd799afeb8db16cdb2602">flags</a>, <a class="code" href="ospf__lsa_8h.html#a7d310b6c5bc390fbe0a0da8a73c43d82">OSPF_LSA_APPROVED</a>);
<a name="l00802"></a>00802       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00803"></a>00803         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_network_to_area(): &quot;</span>
<a name="l00804"></a>00804                <span class="stringliteral">&quot;flooding new version of summary&quot;</span>);
<a name="l00805"></a>00805     }
<a name="l00806"></a>00806 
<a name="l00807"></a>00807   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00808"></a>00808     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_network_to_area(): Stop&quot;</span>);
<a name="l00809"></a>00809 }
<a name="l00810"></a>00810 
<a name="l00811"></a>00811 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00812"></a><a class="code" href="ospf__abr_8c.html#a2143e9e52ad0093ad4053e1608dce994">00812</a> <a class="code" href="ospf__abr_8c.html#a2143e9e52ad0093ad4053e1608dce994">ospf_abr_nexthops_belong_to_area</a> (<span class="keyword">struct</span> <a class="code" href="structospf__route.html">ospf_route</a> *or,
<a name="l00813"></a>00813                   <span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l00814"></a>00814 {
<a name="l00815"></a>00815   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
<a name="l00816"></a>00816   <span class="keyword">struct </span><a class="code" href="structospf__path.html">ospf_path</a> *path;
<a name="l00817"></a>00817   <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
<a name="l00818"></a>00818 
<a name="l00819"></a>00819   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (or-&gt;<a class="code" href="structospf__route.html#af687c07f0e39d7c3a29813777032b075">paths</a>, node, path))
<a name="l00820"></a>00820     <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (area-&gt;<a class="code" href="structospf__area.html#aec49fceeb655dde5648208d29dfc66a4">oiflist</a>, nnode, oi))
<a name="l00821"></a>00821       <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a> &amp;&amp; oi-&gt;<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a> == path-&gt;<a class="code" href="structospf__path.html#a7275881f3f46eace28604c8ebc0ed654">ifindex</a>)
<a name="l00822"></a>00822     <span class="keywordflow">return</span> 1;
<a name="l00823"></a>00823 
<a name="l00824"></a>00824   <span class="keywordflow">return</span> 0;
<a name="l00825"></a>00825 }
<a name="l00826"></a>00826 
<a name="l00827"></a>00827 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00828"></a><a class="code" href="ospf__abr_8c.html#a6044eb89ea87b2d4541e47bcde24f81a">00828</a> <a class="code" href="ospf__abr_8c.html#a6044eb89ea87b2d4541e47bcde24f81a">ospf_abr_should_accept</a> (<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, <span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l00829"></a>00829 {
<a name="l00830"></a>00830   <span class="keywordflow">if</span> (<a class="code" href="ospf6__area_8h.html#a8f03536971036c0537f7bda3fb525b14">IMPORT_NAME</a> (area))
<a name="l00831"></a>00831     {
<a name="l00832"></a>00832       <span class="keywordflow">if</span> (<a class="code" href="ospf6__area_8h.html#a8bb9cd837b1e23c12864c27e469c9575">IMPORT_LIST</a> (area) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00833"></a>00833     <a class="code" href="ospf6__area_8h.html#a8bb9cd837b1e23c12864c27e469c9575">IMPORT_LIST</a> (area) = <a class="code" href="filter_8c.html#a8cb65cd01015f6673c632cb5b8714b3e">access_list_lookup</a> (<a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>, <a class="code" href="ospf6__area_8h.html#a8f03536971036c0537f7bda3fb525b14">IMPORT_NAME</a> (area));
<a name="l00834"></a>00834 
<a name="l00835"></a>00835       <span class="keywordflow">if</span> (<a class="code" href="ospf6__area_8h.html#a8bb9cd837b1e23c12864c27e469c9575">IMPORT_LIST</a> (area))
<a name="l00836"></a>00836         <span class="keywordflow">if</span> (<a class="code" href="filter_8c.html#a5565f487c65e2bf0308c7fd529f121a0">access_list_apply</a> (<a class="code" href="ospf6__area_8h.html#a8bb9cd837b1e23c12864c27e469c9575">IMPORT_LIST</a> (area), p) == <a class="code" href="filter_8h.html#ab3b7281956317556f846daaebf75de72a898abadf6cc2f9d27780782f09d3a3e3">FILTER_DENY</a>)
<a name="l00837"></a>00837            <span class="keywordflow">return</span> 0;
<a name="l00838"></a>00838     }
<a name="l00839"></a>00839 
<a name="l00840"></a>00840  <span class="keywordflow">return</span> 1;
<a name="l00841"></a>00841 }
<a name="l00842"></a>00842 
<a name="l00843"></a>00843 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00844"></a><a class="code" href="ospf__abr_8c.html#a08382be377b3a5bbc3df97fdb6337cde">00844</a> <a class="code" href="ospf__abr_8c.html#a08382be377b3a5bbc3df97fdb6337cde">ospf_abr_plist_in_check</a> (<span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>, <span class="keyword">struct</span> <a class="code" href="structospf__route.html">ospf_route</a> *or,
<a name="l00845"></a>00845              <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>)
<a name="l00846"></a>00846 {
<a name="l00847"></a>00847   <span class="keywordflow">if</span> (<a class="code" href="ospf6__area_8h.html#abe51249890d05db475de4eed718656ea">PREFIX_NAME_IN</a> (area))
<a name="l00848"></a>00848     {
<a name="l00849"></a>00849       <span class="keywordflow">if</span> (<a class="code" href="bgp__route_8h.html#ad143503066e23e446015fc61ba2e72ed">PREFIX_LIST_IN</a> (area) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00850"></a>00850     <a class="code" href="bgp__route_8h.html#ad143503066e23e446015fc61ba2e72ed">PREFIX_LIST_IN</a> (area) = <a class="code" href="plist_8c.html#adfce5b38dccccdc141ffd3571b73a656">prefix_list_lookup</a> (<a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>,
<a name="l00851"></a>00851                             <a class="code" href="ospf6__area_8h.html#abe51249890d05db475de4eed718656ea">PREFIX_NAME_IN</a> (area));
<a name="l00852"></a>00852       <span class="keywordflow">if</span> (<a class="code" href="bgp__route_8h.html#ad143503066e23e446015fc61ba2e72ed">PREFIX_LIST_IN</a> (area))
<a name="l00853"></a>00853     <span class="keywordflow">if</span> (<a class="code" href="plist_8c.html#a6fd9bac08d2cb3d2e315d88af146a7f0">prefix_list_apply</a> (<a class="code" href="bgp__route_8h.html#ad143503066e23e446015fc61ba2e72ed">PREFIX_LIST_IN</a> (area), p) != <a class="code" href="plist_8h.html#a3bda5ec3d1202bc8eb472b4d97633cf9a6dd95e4ac6d2a01c478cd44b9bc2427a">PREFIX_PERMIT</a>)
<a name="l00854"></a>00854       <span class="keywordflow">return</span> 0;
<a name="l00855"></a>00855     }
<a name="l00856"></a>00856   <span class="keywordflow">return</span> 1;
<a name="l00857"></a>00857 }
<a name="l00858"></a>00858 
<a name="l00859"></a>00859 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00860"></a><a class="code" href="ospf__abr_8c.html#af8ec78f63e5fa9a6eccfcfb3f1d23396">00860</a> <a class="code" href="ospf__abr_8c.html#af8ec78f63e5fa9a6eccfcfb3f1d23396">ospf_abr_plist_out_check</a> (<span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>, <span class="keyword">struct</span> <a class="code" href="structospf__route.html">ospf_route</a> *or,
<a name="l00861"></a>00861               <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>)
<a name="l00862"></a>00862 {
<a name="l00863"></a>00863   <span class="keywordflow">if</span> (<a class="code" href="ospf6__area_8h.html#a4ec3abaef7e217292ab5589e1b207957">PREFIX_NAME_OUT</a> (area))
<a name="l00864"></a>00864     {
<a name="l00865"></a>00865       <span class="keywordflow">if</span> (<a class="code" href="bgp__route_8h.html#ab694ea0ccae4db3b7e858c2517e41480">PREFIX_LIST_OUT</a> (area) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00866"></a>00866     <a class="code" href="bgp__route_8h.html#ab694ea0ccae4db3b7e858c2517e41480">PREFIX_LIST_OUT</a> (area) = <a class="code" href="plist_8c.html#adfce5b38dccccdc141ffd3571b73a656">prefix_list_lookup</a> (<a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>,
<a name="l00867"></a>00867                              <a class="code" href="ospf6__area_8h.html#a4ec3abaef7e217292ab5589e1b207957">PREFIX_NAME_OUT</a> (area));
<a name="l00868"></a>00868       <span class="keywordflow">if</span> (<a class="code" href="bgp__route_8h.html#ab694ea0ccae4db3b7e858c2517e41480">PREFIX_LIST_OUT</a> (area))
<a name="l00869"></a>00869     <span class="keywordflow">if</span> (<a class="code" href="plist_8c.html#a6fd9bac08d2cb3d2e315d88af146a7f0">prefix_list_apply</a> (<a class="code" href="bgp__route_8h.html#ab694ea0ccae4db3b7e858c2517e41480">PREFIX_LIST_OUT</a> (area), p) != <a class="code" href="plist_8h.html#a3bda5ec3d1202bc8eb472b4d97633cf9a6dd95e4ac6d2a01c478cd44b9bc2427a">PREFIX_PERMIT</a>)
<a name="l00870"></a>00870       <span class="keywordflow">return</span> 0;
<a name="l00871"></a>00871     }
<a name="l00872"></a>00872   <span class="keywordflow">return</span> 1;
<a name="l00873"></a>00873 }
<a name="l00874"></a>00874 
<a name="l00875"></a>00875 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00876"></a><a class="code" href="ospf__abr_8c.html#aa90e8b7f78f41e44bb6513c94d45ac91">00876</a> <a class="code" href="ospf__abr_8c.html#aa90e8b7f78f41e44bb6513c94d45ac91">ospf_abr_announce_network</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>,
<a name="l00877"></a>00877                <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, <span class="keyword">struct</span> <a class="code" href="structospf__route.html">ospf_route</a> *or)
<a name="l00878"></a>00878 {
<a name="l00879"></a>00879   <span class="keyword">struct </span><a class="code" href="structospf__area__range.html">ospf_area_range</a> *range;
<a name="l00880"></a>00880   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>, *or_area;
<a name="l00881"></a>00881   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00882"></a>00882 
<a name="l00883"></a>00883   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00884"></a>00884     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_network(): Start&quot;</span>);
<a name="l00885"></a>00885 
<a name="l00886"></a>00886   or_area = <a class="code" href="ospfd_8c.html#a24d6ed2a6a05e4856e6dbf5eea74f6ef">ospf_area_lookup_by_area_id</a> (ospf, or-&gt;<a class="code" href="structospf__route.html#ab37ba617082e6dec95c8f67eb9b66d7a">u</a>.<a class="code" href="structospf__route.html#a8b1951ef3f626e1c61e30309c36084a3">std</a>.<a class="code" href="structroute__standard.html#adb68650a53fa9189d6af5d484c01f690">area_id</a>); 
<a name="l00887"></a>00887   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (or_area);
<a name="l00888"></a>00888 
<a name="l00889"></a>00889   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, node, area))
<a name="l00890"></a>00890     {
<a name="l00891"></a>00891       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00892"></a>00892     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_network(): looking at area %s&quot;</span>,
<a name="l00893"></a>00893            inet_ntoa (area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>));
<a name="l00894"></a>00894 
<a name="l00895"></a>00895       <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;or-&gt;<a class="code" href="structospf__route.html#ab37ba617082e6dec95c8f67eb9b66d7a">u</a>.<a class="code" href="structospf__route.html#a8b1951ef3f626e1c61e30309c36084a3">std</a>.<a class="code" href="structroute__standard.html#adb68650a53fa9189d6af5d484c01f690">area_id</a>, &amp;area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>))
<a name="l00896"></a>00896     <span class="keywordflow">continue</span>;
<a name="l00897"></a>00897 
<a name="l00898"></a>00898       <span class="keywordflow">if</span> (<a class="code" href="ospf__abr_8c.html#a2143e9e52ad0093ad4053e1608dce994">ospf_abr_nexthops_belong_to_area</a> (or, area))
<a name="l00899"></a>00899     <span class="keywordflow">continue</span>;
<a name="l00900"></a>00900 
<a name="l00901"></a>00901       <span class="keywordflow">if</span> (!<a class="code" href="ospf__abr_8c.html#a6044eb89ea87b2d4541e47bcde24f81a">ospf_abr_should_accept</a> (p, area))
<a name="l00902"></a>00902     {
<a name="l00903"></a>00903       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00904"></a>00904         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_network(): &quot;</span>
<a name="l00905"></a>00905                <span class="stringliteral">&quot;prefix %s/%d was denied by import-list&quot;</span>,
<a name="l00906"></a>00906                inet_ntoa (p-&gt;prefix), p-&gt;<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a>);
<a name="l00907"></a>00907       <span class="keywordflow">continue</span>; 
<a name="l00908"></a>00908     }
<a name="l00909"></a>00909 
<a name="l00910"></a>00910       <span class="keywordflow">if</span> (!<a class="code" href="ospf__abr_8c.html#a08382be377b3a5bbc3df97fdb6337cde">ospf_abr_plist_in_check</a> (area, or, p))
<a name="l00911"></a>00911     {
<a name="l00912"></a>00912       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00913"></a>00913         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_network(): &quot;</span>
<a name="l00914"></a>00914                <span class="stringliteral">&quot;prefix %s/%d was denied by prefix-list&quot;</span>,
<a name="l00915"></a>00915                inet_ntoa (p-&gt;prefix), p-&gt;<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a>);
<a name="l00916"></a>00916       <span class="keywordflow">continue</span>; 
<a name="l00917"></a>00917     }
<a name="l00918"></a>00918 
<a name="l00919"></a>00919       <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a> != <a class="code" href="ospfd_8h.html#a43f84c8e8584ccc8b82990d251abec4d">OSPF_AREA_DEFAULT</a> &amp;&amp; area-&gt;<a class="code" href="structospf__area.html#a2a2b5634d8424e1a939836254700a8d0">no_summary</a>)
<a name="l00920"></a>00920     {
<a name="l00921"></a>00921       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00922"></a>00922         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_network(): &quot;</span>
<a name="l00923"></a>00923                <span class="stringliteral">&quot;area %s is stub and no_summary&quot;</span>,
<a name="l00924"></a>00924                inet_ntoa (area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>));
<a name="l00925"></a>00925           <span class="keywordflow">continue</span>;
<a name="l00926"></a>00926     }
<a name="l00927"></a>00927 
<a name="l00928"></a>00928       <span class="keywordflow">if</span> (or-&gt;<a class="code" href="structospf__route.html#a599273b0e8bc1a908cbedd22dcd78bbd">path_type</a> == <a class="code" href="ospf__route_8h.html#a1db558d26de4f9320c77c0d783d7b2b3">OSPF_PATH_INTER_AREA</a>)
<a name="l00929"></a>00929     {
<a name="l00930"></a>00930       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00931"></a>00931         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_network(): this is &quot;</span>
<a name="l00932"></a>00932                <span class="stringliteral">&quot;inter-area route to %s/%d&quot;</span>,
<a name="l00933"></a>00933                inet_ntoa (p-&gt;prefix), p-&gt;<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a>);
<a name="l00934"></a>00934 
<a name="l00935"></a>00935           <span class="keywordflow">if</span> (!<a class="code" href="ospfd_8h.html#a62518cec4ea9ee2a4db410d3c42b23f7">OSPF_IS_AREA_BACKBONE</a> (area))
<a name="l00936"></a>00936         <a class="code" href="ospf__abr_8c.html#ac9d059be83ed701a4f4f549984eb8614">ospf_abr_announce_network_to_area</a> (p, or-&gt;<a class="code" href="structospf__route.html#a78ed87939e621a405c66aeb71fa1944d">cost</a>, area);
<a name="l00937"></a>00937     }
<a name="l00938"></a>00938 
<a name="l00939"></a>00939       <span class="keywordflow">if</span> (or-&gt;<a class="code" href="structospf__route.html#a599273b0e8bc1a908cbedd22dcd78bbd">path_type</a> == <a class="code" href="ospf__route_8h.html#abc7a6177d1cdfac4e8a93ddd4235b08c">OSPF_PATH_INTRA_AREA</a>)
<a name="l00940"></a>00940         {
<a name="l00941"></a>00941           <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00942"></a>00942             <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_network(): &quot;</span>
<a name="l00943"></a>00943                        <span class="stringliteral">&quot;this is intra-area route to %s/%d&quot;</span>,
<a name="l00944"></a>00944                        inet_ntoa (p-&gt;prefix), p-&gt;<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a>);
<a name="l00945"></a>00945             <span class="keywordflow">if</span> ((range = <a class="code" href="ospf__abr_8c.html#a7c346a6d5cb1ed72bfcb661f5ac9c962">ospf_area_range_match</a> (or_area, p)) 
<a name="l00946"></a>00946                  &amp;&amp; !<a class="code" href="ospf__ia_8c.html#ab842a86f531740d282d27cbaf960cf28">ospf_area_is_transit</a> (area))
<a name="l00947"></a>00947               <a class="code" href="ospf__abr_8c.html#a2b01f8c811d0abb75a42adedab0b4af1">ospf_abr_update_aggregate</a> (range, or);
<a name="l00948"></a>00948             <span class="keywordflow">else</span>
<a name="l00949"></a>00949               <a class="code" href="ospf__abr_8c.html#ac9d059be83ed701a4f4f549984eb8614">ospf_abr_announce_network_to_area</a> (p, or-&gt;<a class="code" href="structospf__route.html#a78ed87939e621a405c66aeb71fa1944d">cost</a>, area);
<a name="l00950"></a>00950         }
<a name="l00951"></a>00951     }
<a name="l00952"></a>00952 }
<a name="l00953"></a>00953 
<a name="l00954"></a>00954 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00955"></a><a class="code" href="ospf__abr_8c.html#a70f5037c52c64005baae85b170a8ecc9">00955</a> <a class="code" href="ospf__abr_8c.html#a70f5037c52c64005baae85b170a8ecc9">ospf_abr_should_announce</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>,
<a name="l00956"></a>00956               <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, <span class="keyword">struct</span> <a class="code" href="structospf__route.html">ospf_route</a> *or)
<a name="l00957"></a>00957 {
<a name="l00958"></a>00958   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l00959"></a>00959 
<a name="l00960"></a>00960   area = <a class="code" href="ospfd_8c.html#a24d6ed2a6a05e4856e6dbf5eea74f6ef">ospf_area_lookup_by_area_id</a> (ospf, or-&gt;<a class="code" href="structospf__route.html#ab37ba617082e6dec95c8f67eb9b66d7a">u</a>.<a class="code" href="structospf__route.html#a8b1951ef3f626e1c61e30309c36084a3">std</a>.<a class="code" href="structroute__standard.html#adb68650a53fa9189d6af5d484c01f690">area_id</a>);
<a name="l00961"></a>00961 
<a name="l00962"></a>00962   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (area);
<a name="l00963"></a>00963   
<a name="l00964"></a>00964   <span class="keywordflow">if</span> (<a class="code" href="ospf6__area_8h.html#a4b149526dcc0d9c5de7086d581336dcb">EXPORT_NAME</a> (area))
<a name="l00965"></a>00965     {
<a name="l00966"></a>00966       <span class="keywordflow">if</span> (<a class="code" href="ospf6__area_8h.html#a3b1e86d59d3641da3b6b9281a97c7927">EXPORT_LIST</a> (area) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00967"></a>00967     <a class="code" href="ospf6__area_8h.html#a3b1e86d59d3641da3b6b9281a97c7927">EXPORT_LIST</a> (area) = <a class="code" href="filter_8c.html#a8cb65cd01015f6673c632cb5b8714b3e">access_list_lookup</a> (<a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>, <a class="code" href="ospf6__area_8h.html#a4b149526dcc0d9c5de7086d581336dcb">EXPORT_NAME</a> (area));
<a name="l00968"></a>00968 
<a name="l00969"></a>00969       <span class="keywordflow">if</span> (<a class="code" href="ospf6__area_8h.html#a3b1e86d59d3641da3b6b9281a97c7927">EXPORT_LIST</a> (area))
<a name="l00970"></a>00970         <span class="keywordflow">if</span> (<a class="code" href="filter_8c.html#a5565f487c65e2bf0308c7fd529f121a0">access_list_apply</a> (<a class="code" href="ospf6__area_8h.html#a3b1e86d59d3641da3b6b9281a97c7927">EXPORT_LIST</a> (area), p) == <a class="code" href="filter_8h.html#ab3b7281956317556f846daaebf75de72a898abadf6cc2f9d27780782f09d3a3e3">FILTER_DENY</a>)
<a name="l00971"></a>00971            <span class="keywordflow">return</span> 0;
<a name="l00972"></a>00972     }
<a name="l00973"></a>00973 
<a name="l00974"></a>00974   <span class="keywordflow">return</span> 1;
<a name="l00975"></a>00975 }
<a name="l00976"></a>00976 
<a name="l00977"></a>00977 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00978"></a><a class="code" href="ospf__abr_8c.html#a1fee64e6344a4e913c2b0b3a55915c18">00978</a> <a class="code" href="ospf__abr_8c.html#a1fee64e6344a4e913c2b0b3a55915c18">ospf_abr_process_nssa_translates</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>)
<a name="l00979"></a>00979 {
<a name="l00980"></a>00980   <span class="comment">/* Scan through all NSSA_LSDB records for all areas;</span>
<a name="l00981"></a>00981 <span class="comment"></span>
<a name="l00982"></a>00982 <span class="comment">     If P-bit is on, translate all Type-7&#39;s to 5&#39;s and aggregate or</span>
<a name="l00983"></a>00983 <span class="comment">     flood install as approved in Type-5 LSDB with XLATE Flag on</span>
<a name="l00984"></a>00984 <span class="comment">     later, do same for all aggregates...  At end, DISCARD all</span>
<a name="l00985"></a>00985 <span class="comment">     remaining UNAPPROVED Type-5&#39;s (Aggregate is for future ) */</span>
<a name="l00986"></a>00986   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00987"></a>00987   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l00988"></a>00988   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00989"></a>00989   <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa;
<a name="l00990"></a>00990 
<a name="l00991"></a>00991   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l00992"></a>00992     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_process_nssa_translates(): Start&quot;</span>);
<a name="l00993"></a>00993 
<a name="l00994"></a>00994   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, node, area))
<a name="l00995"></a>00995     {
<a name="l00996"></a>00996       <span class="keywordflow">if</span> (! area-&gt;<a class="code" href="structospf__area.html#a3956cb7dd73ce5563ae652947e12d08e">NSSATranslatorState</a>)
<a name="l00997"></a>00997         <span class="keywordflow">continue</span>; <span class="comment">/* skip if not translator */</span>
<a name="l00998"></a>00998       
<a name="l00999"></a>00999       <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a> != <a class="code" href="ospfd_8h.html#a871478d6ecced0907ee1f67c5dbacf99">OSPF_AREA_NSSA</a>)
<a name="l01000"></a>01000         <span class="keywordflow">continue</span>;  <span class="comment">/* skip if not Nssa Area */</span>
<a name="l01001"></a>01001 
<a name="l01002"></a>01002       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01003"></a>01003         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_process_nssa_translates(): &quot;</span>
<a name="l01004"></a>01004                    <span class="stringliteral">&quot;looking at area %s&quot;</span>, inet_ntoa (area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>));
<a name="l01005"></a>01005       
<a name="l01006"></a>01006       <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#aa704d331d2ac4e4034faca5c0f177364">NSSA_LSDB</a> (area), rn, lsa)
<a name="l01007"></a>01007         <a class="code" href="ospf__abr_8c.html#a218c36503435eb4ddb454ac0f5f21605">ospf_abr_translate_nssa</a> (area, lsa);
<a name="l01008"></a>01008     }
<a name="l01009"></a>01009  
<a name="l01010"></a>01010   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01011"></a>01011     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_process_nssa_translates(): Stop&quot;</span>);
<a name="l01012"></a>01012 
<a name="l01013"></a>01013 }
<a name="l01014"></a>01014 
<a name="l01015"></a>01015 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01016"></a><a class="code" href="ospf__abr_8c.html#a08eac1d777543e2a5ceba05f86718365">01016</a> <a class="code" href="ospf__abr_8c.html#a08eac1d777543e2a5ceba05f86718365">ospf_abr_process_network_rt</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>,
<a name="l01017"></a>01017                  <span class="keyword">struct</span> <a class="code" href="structroute__table.html">route_table</a> *rt)
<a name="l01018"></a>01018 {
<a name="l01019"></a>01019   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01020"></a>01020   <span class="keyword">struct </span><a class="code" href="structospf__route.html">ospf_route</a> *or;
<a name="l01021"></a>01021   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l01022"></a>01022 
<a name="l01023"></a>01023   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01024"></a>01024     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_process_network_rt(): Start&quot;</span>);
<a name="l01025"></a>01025 
<a name="l01026"></a>01026   <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (rt); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
<a name="l01027"></a>01027     {
<a name="l01028"></a>01028       <span class="keywordflow">if</span> ((or = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01029"></a>01029     <span class="keywordflow">continue</span>;
<a name="l01030"></a>01030 
<a name="l01031"></a>01031       <span class="keywordflow">if</span> (!(area = <a class="code" href="ospfd_8c.html#a24d6ed2a6a05e4856e6dbf5eea74f6ef">ospf_area_lookup_by_area_id</a> (ospf, or-&gt;<a class="code" href="structospf__route.html#ab37ba617082e6dec95c8f67eb9b66d7a">u</a>.<a class="code" href="structospf__route.html#a8b1951ef3f626e1c61e30309c36084a3">std</a>.<a class="code" href="structroute__standard.html#adb68650a53fa9189d6af5d484c01f690">area_id</a>)))
<a name="l01032"></a>01032     {
<a name="l01033"></a>01033       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01034"></a>01034         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_process_network_rt(): area %s no longer exists&quot;</span>,
<a name="l01035"></a>01035                inet_ntoa (or-&gt;<a class="code" href="structospf__route.html#ab37ba617082e6dec95c8f67eb9b66d7a">u</a>.<a class="code" href="structospf__route.html#a8b1951ef3f626e1c61e30309c36084a3">std</a>.<a class="code" href="structroute__standard.html#adb68650a53fa9189d6af5d484c01f690">area_id</a>));
<a name="l01036"></a>01036       <span class="keywordflow">continue</span>;
<a name="l01037"></a>01037     }
<a name="l01038"></a>01038 
<a name="l01039"></a>01039       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01040"></a>01040     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_process_network_rt(): this is a route to %s/%d&quot;</span>,
<a name="l01041"></a>01041            inet_ntoa (rn-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>), rn-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
<a name="l01042"></a>01042       <span class="keywordflow">if</span> (or-&gt;<a class="code" href="structospf__route.html#a599273b0e8bc1a908cbedd22dcd78bbd">path_type</a> &gt;= <a class="code" href="ospf__route_8h.html#a15dab014460164847059902ea4535834">OSPF_PATH_TYPE1_EXTERNAL</a>)
<a name="l01043"></a>01043     {
<a name="l01044"></a>01044       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01045"></a>01045         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_process_network_rt(): &quot;</span>
<a name="l01046"></a>01046                <span class="stringliteral">&quot;this is an External router, skipping&quot;</span>);
<a name="l01047"></a>01047       <span class="keywordflow">continue</span>;
<a name="l01048"></a>01048     }
<a name="l01049"></a>01049 
<a name="l01050"></a>01050       <span class="keywordflow">if</span> (or-&gt;<a class="code" href="structospf__route.html#a78ed87939e621a405c66aeb71fa1944d">cost</a> &gt;= <a class="code" href="ospfd_8h.html#ac490c9aeaac791b5e779097813b5298e">OSPF_LS_INFINITY</a>)
<a name="l01051"></a>01051     {
<a name="l01052"></a>01052       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01053"></a>01053         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_process_network_rt():&quot;</span>
<a name="l01054"></a>01054                <span class="stringliteral">&quot; this route&#39;s cost is infinity, skipping&quot;</span>);
<a name="l01055"></a>01055       <span class="keywordflow">continue</span>;
<a name="l01056"></a>01056     }
<a name="l01057"></a>01057 
<a name="l01058"></a>01058       <span class="keywordflow">if</span> (or-&gt;<a class="code" href="structospf__route.html#a68c9cb8cb5a39fb9d8d2b0817731c75b">type</a> == <a class="code" href="ospf__route_8h.html#a09ebe549088ee60073be68140c0f07a9">OSPF_DESTINATION_DISCARD</a>)
<a name="l01059"></a>01059     {
<a name="l01060"></a>01060       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01061"></a>01061         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_process_network_rt():&quot;</span>
<a name="l01062"></a>01062                <span class="stringliteral">&quot; this is a discard entry, skipping&quot;</span>);
<a name="l01063"></a>01063       <span class="keywordflow">continue</span>;
<a name="l01064"></a>01064     }
<a name="l01065"></a>01065 
<a name="l01066"></a>01066       <span class="keywordflow">if</span> (or-&gt;<a class="code" href="structospf__route.html#a599273b0e8bc1a908cbedd22dcd78bbd">path_type</a> == <a class="code" href="ospf__route_8h.html#abc7a6177d1cdfac4e8a93ddd4235b08c">OSPF_PATH_INTRA_AREA</a> &amp;&amp;
<a name="l01067"></a>01067       !<a class="code" href="ospf__abr_8c.html#a70f5037c52c64005baae85b170a8ecc9">ospf_abr_should_announce</a> (ospf, (<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *) &amp;rn-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>, or))
<a name="l01068"></a>01068     {
<a name="l01069"></a>01069       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01070"></a>01070         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a>(<span class="stringliteral">&quot;ospf_abr_process_network_rt(): denied by export-list&quot;</span>);
<a name="l01071"></a>01071       <span class="keywordflow">continue</span>;
<a name="l01072"></a>01072     }
<a name="l01073"></a>01073 
<a name="l01074"></a>01074       <span class="keywordflow">if</span> (or-&gt;<a class="code" href="structospf__route.html#a599273b0e8bc1a908cbedd22dcd78bbd">path_type</a> == <a class="code" href="ospf__route_8h.html#abc7a6177d1cdfac4e8a93ddd4235b08c">OSPF_PATH_INTRA_AREA</a> &amp;&amp;
<a name="l01075"></a>01075       !<a class="code" href="ospf__abr_8c.html#af8ec78f63e5fa9a6eccfcfb3f1d23396">ospf_abr_plist_out_check</a> (area, or, (<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *) &amp;rn-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>))
<a name="l01076"></a>01076     {
<a name="l01077"></a>01077       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01078"></a>01078         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a>(<span class="stringliteral">&quot;ospf_abr_process_network_rt(): denied by prefix-list&quot;</span>);
<a name="l01079"></a>01079       <span class="keywordflow">continue</span>;
<a name="l01080"></a>01080     }
<a name="l01081"></a>01081 
<a name="l01082"></a>01082       <span class="keywordflow">if</span> ((or-&gt;<a class="code" href="structospf__route.html#a599273b0e8bc1a908cbedd22dcd78bbd">path_type</a> == <a class="code" href="ospf__route_8h.html#a1db558d26de4f9320c77c0d783d7b2b3">OSPF_PATH_INTER_AREA</a>) &amp;&amp;
<a name="l01083"></a>01083           !<a class="code" href="ospfd_8h.html#a3c9df8914219b5ad5aa165ecc3428ae0">OSPF_IS_AREA_ID_BACKBONE</a> (or-&gt;<a class="code" href="structospf__route.html#ab37ba617082e6dec95c8f67eb9b66d7a">u</a>.<a class="code" href="structospf__route.html#a8b1951ef3f626e1c61e30309c36084a3">std</a>.<a class="code" href="structroute__standard.html#adb68650a53fa9189d6af5d484c01f690">area_id</a>))
<a name="l01084"></a>01084     {
<a name="l01085"></a>01085       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01086"></a>01086         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_process_network_rt():&quot;</span>
<a name="l01087"></a>01087                <span class="stringliteral">&quot; this is route is not backbone one, skipping&quot;</span>);
<a name="l01088"></a>01088       <span class="keywordflow">continue</span>;
<a name="l01089"></a>01089     }
<a name="l01090"></a>01090 
<a name="l01091"></a>01091 
<a name="l01092"></a>01092       <span class="keywordflow">if</span> ((ospf-&gt;<a class="code" href="structospf.html#ad1c5b3263ee1326f5720d0d09bfce53c">abr_type</a> == <a class="code" href="ospfd_8h.html#aac0be2e336b1b7bcb296c6e9ba32b6ae">OSPF_ABR_CISCO</a>) ||
<a name="l01093"></a>01093           (ospf-&gt;<a class="code" href="structospf.html#ad1c5b3263ee1326f5720d0d09bfce53c">abr_type</a> == <a class="code" href="ospfd_8h.html#a22c05e10f58a965d1023edc4d8a23313">OSPF_ABR_IBM</a>))
<a name="l01094"></a>01094 
<a name="l01095"></a>01095           <span class="keywordflow">if</span> (!<a class="code" href="ospf__abr_8c.html#ad5e6a3408de1c3abbe942d885245c26c">ospf_act_bb_connection</a> (ospf) &amp;&amp;
<a name="l01096"></a>01096               or-&gt;<a class="code" href="structospf__route.html#a599273b0e8bc1a908cbedd22dcd78bbd">path_type</a> != <a class="code" href="ospf__route_8h.html#abc7a6177d1cdfac4e8a93ddd4235b08c">OSPF_PATH_INTRA_AREA</a>)
<a name="l01097"></a>01097          {
<a name="l01098"></a>01098            <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01099"></a>01099          <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_process_network_rt(): ALT ABR: &quot;</span>
<a name="l01100"></a>01100                 <span class="stringliteral">&quot;No BB connection, skip not intra-area routes&quot;</span>);
<a name="l01101"></a>01101            <span class="keywordflow">continue</span>;
<a name="l01102"></a>01102          }
<a name="l01103"></a>01103 
<a name="l01104"></a>01104       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01105"></a>01105     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_process_network_rt(): announcing&quot;</span>);
<a name="l01106"></a>01106       <a class="code" href="ospf__abr_8c.html#aa90e8b7f78f41e44bb6513c94d45ac91">ospf_abr_announce_network</a> (ospf, (<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *)&amp;rn-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>, or);
<a name="l01107"></a>01107     }
<a name="l01108"></a>01108 
<a name="l01109"></a>01109   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01110"></a>01110     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_process_network_rt(): Stop&quot;</span>);
<a name="l01111"></a>01111 }
<a name="l01112"></a>01112 
<a name="l01113"></a>01113 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01114"></a><a class="code" href="ospf__abr_8c.html#ad1ebac922aae6cb4edbde60b2d054bd8">01114</a> <a class="code" href="ospf__abr_8c.html#ad1ebac922aae6cb4edbde60b2d054bd8">ospf_abr_announce_rtr_to_area</a> (<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, u_int32_t cost,
<a name="l01115"></a>01115                    <span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l01116"></a>01116 {
<a name="l01117"></a>01117   <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa, *old = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01118"></a>01118   <span class="keyword">struct </span><a class="code" href="structsummary__lsa.html">summary_lsa</a> *slsa = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01119"></a>01119 
<a name="l01120"></a>01120   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01121"></a>01121     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_rtr_to_area(): Start&quot;</span>);
<a name="l01122"></a>01122 
<a name="l01123"></a>01123   old = <a class="code" href="ospf__lsa_8c.html#ab2e4bd0fdc42ab447eea95c79f21a7e2">ospf_lsa_lookup_by_prefix</a> (area-&gt;<a class="code" href="structospf__area.html#a234992a360998d34aba7b183cf2019c9">lsdb</a>, <a class="code" href="ospf__lsa_8h.html#a09d9e4a35705f96a15952c63088c0ccc">OSPF_ASBR_SUMMARY_LSA</a>,
<a name="l01124"></a>01124                    p, area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>);
<a name="l01125"></a>01125   <span class="keywordflow">if</span> (old)
<a name="l01126"></a>01126     {
<a name="l01127"></a>01127       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01128"></a>01128     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_rtr_to_area(): old summary found&quot;</span>);
<a name="l01129"></a>01129       slsa = (<span class="keyword">struct </span><a class="code" href="structsummary__lsa.html">summary_lsa</a> *) old-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>;
<a name="l01130"></a>01130 
<a name="l01131"></a>01131       if (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01132"></a>01132     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_network_to_area(): &quot;</span>
<a name="l01133"></a>01133            <span class="stringliteral">&quot;old metric: %d, new metric: %d&quot;</span>,
<a name="l01134"></a>01134            <a class="code" href="ospf__lsa_8h.html#af484b7995c962cc7558d5fc385b835fc">GET_METRIC</a> (slsa-&gt;<a class="code" href="structsummary__lsa.html#a0353f250382513bdfb5962e9c23f822a">metric</a>), cost);
<a name="l01135"></a>01135     }
<a name="l01136"></a>01136 
<a name="l01137"></a>01137   <span class="keywordflow">if</span> (old &amp;&amp; (<a class="code" href="ospf__lsa_8h.html#af484b7995c962cc7558d5fc385b835fc">GET_METRIC</a> (slsa-&gt;<a class="code" href="structsummary__lsa.html#a0353f250382513bdfb5962e9c23f822a">metric</a>) == cost))
<a name="l01138"></a>01138     {
<a name="l01139"></a>01139       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01140"></a>01140     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_rtr_to_area(): old summary approved&quot;</span>);
<a name="l01141"></a>01141       <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (old-&gt;<a class="code" href="structospf__lsa.html#aa8c833176affd799afeb8db16cdb2602">flags</a>, <a class="code" href="ospf__lsa_8h.html#a7d310b6c5bc390fbe0a0da8a73c43d82">OSPF_LSA_APPROVED</a>);
<a name="l01142"></a>01142     }
<a name="l01143"></a>01143   <span class="keywordflow">else</span>
<a name="l01144"></a>01144     {
<a name="l01145"></a>01145       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01146"></a>01146     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_rtr_to_area(): 2.2&quot;</span>);
<a name="l01147"></a>01147        
<a name="l01148"></a>01148       <span class="keywordflow">if</span> (old) 
<a name="l01149"></a>01149     { 
<a name="l01150"></a>01150       <a class="code" href="ospf__abr_8c.html#a57499501cfdfc7c1a078bb1c74f54ca5">set_metric</a> (old, cost);
<a name="l01151"></a>01151       lsa = <a class="code" href="ospf__lsa_8c.html#a3d394fbfdef8b8da9ead7c5a38bc5204">ospf_summary_asbr_lsa_refresh</a> (area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>, old);
<a name="l01152"></a>01152     }
<a name="l01153"></a>01153       <span class="keywordflow">else</span>
<a name="l01154"></a>01154     lsa = <a class="code" href="ospf__lsa_8c.html#a876eea14a76fdba052af58a1a69c2bfc">ospf_summary_asbr_lsa_originate</a> (p, cost, area);
<a name="l01155"></a>01155       <span class="keywordflow">if</span> (!lsa)
<a name="l01156"></a>01156         {
<a name="l01157"></a>01157           <span class="keywordtype">char</span> buf[<a class="code" href="prefix_8h.html#a93b37007689284fd9c4bde1a8f4b9199">INET_ADDRSTRLEN</a> + 3]; <span class="comment">/* ipv4 and /XX */</span>
<a name="l01158"></a>01158           
<a name="l01159"></a>01159           <a class="code" href="prefix_8c.html#a8b848557695ae5694bd2282eba23e367">prefix2str</a> ((<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)p, buf, <span class="keyword">sizeof</span>(buf));
<a name="l01160"></a>01160           <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;%s: Could not refresh/originate %s to %s&quot;</span>,
<a name="l01161"></a>01161                      __func__,
<a name="l01162"></a>01162                      buf,
<a name="l01163"></a>01163                      inet_ntoa (area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>));
<a name="l01164"></a>01164           <span class="keywordflow">return</span>;
<a name="l01165"></a>01165         }
<a name="l01166"></a>01166       
<a name="l01167"></a>01167       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01168"></a>01168     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_rtr_to_area(): &quot;</span>
<a name="l01169"></a>01169            <span class="stringliteral">&quot;flooding new version of summary&quot;</span>);
<a name="l01170"></a>01170 
<a name="l01171"></a>01171       <span class="comment">/*</span>
<a name="l01172"></a>01172 <span class="comment">      zlog_info (&quot;ospf_abr_announce_rtr_to_area(): creating new summary&quot;);</span>
<a name="l01173"></a>01173 <span class="comment">      lsa = ospf_summary_asbr_lsa (p, cost, area, old); */</span>
<a name="l01174"></a>01174 
<a name="l01175"></a>01175       <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (lsa-&gt;<a class="code" href="structospf__lsa.html#aa8c833176affd799afeb8db16cdb2602">flags</a>, <a class="code" href="ospf__lsa_8h.html#a7d310b6c5bc390fbe0a0da8a73c43d82">OSPF_LSA_APPROVED</a>);
<a name="l01176"></a>01176       <span class="comment">/* ospf_flood_through_area (area, NULL, lsa);*/</span>
<a name="l01177"></a>01177     }
<a name="l01178"></a>01178 
<a name="l01179"></a>01179   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01180"></a>01180     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_rtr_to_area(): Stop&quot;</span>);
<a name="l01181"></a>01181 }
<a name="l01182"></a>01182 
<a name="l01183"></a>01183 
<a name="l01184"></a>01184 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01185"></a><a class="code" href="ospf__abr_8c.html#a53309f31f2e53a478aa2fcabbe0128a7">01185</a> <a class="code" href="ospf__abr_8c.html#a53309f31f2e53a478aa2fcabbe0128a7">ospf_abr_announce_rtr</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>,
<a name="l01186"></a>01186                <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, <span class="keyword">struct</span> <a class="code" href="structospf__route.html">ospf_route</a> *or)
<a name="l01187"></a>01187 {
<a name="l01188"></a>01188   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l01189"></a>01189   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01190"></a>01190 
<a name="l01191"></a>01191   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01192"></a>01192     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_rtr(): Start&quot;</span>);
<a name="l01193"></a>01193 
<a name="l01194"></a>01194   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, node, area))
<a name="l01195"></a>01195     {
<a name="l01196"></a>01196       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01197"></a>01197     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_rtr(): looking at area %s&quot;</span>,
<a name="l01198"></a>01198            inet_ntoa (area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>));
<a name="l01199"></a>01199 
<a name="l01200"></a>01200       <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;or-&gt;<a class="code" href="structospf__route.html#ab37ba617082e6dec95c8f67eb9b66d7a">u</a>.<a class="code" href="structospf__route.html#a8b1951ef3f626e1c61e30309c36084a3">std</a>.<a class="code" href="structroute__standard.html#adb68650a53fa9189d6af5d484c01f690">area_id</a>, &amp;area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>))
<a name="l01201"></a>01201     <span class="keywordflow">continue</span>;
<a name="l01202"></a>01202 
<a name="l01203"></a>01203       <span class="keywordflow">if</span> (<a class="code" href="ospf__abr_8c.html#a2143e9e52ad0093ad4053e1608dce994">ospf_abr_nexthops_belong_to_area</a> (or, area))
<a name="l01204"></a>01204     <span class="keywordflow">continue</span>;
<a name="l01205"></a>01205 
<a name="l01206"></a>01206       <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a> != <a class="code" href="ospfd_8h.html#a43f84c8e8584ccc8b82990d251abec4d">OSPF_AREA_DEFAULT</a>)
<a name="l01207"></a>01207     {
<a name="l01208"></a>01208       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01209"></a>01209         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_rtr(): &quot;</span>
<a name="l01210"></a>01210                <span class="stringliteral">&quot;area %s doesn&#39;t support external routing&quot;</span>,
<a name="l01211"></a>01211                inet_ntoa(area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>));
<a name="l01212"></a>01212           <span class="keywordflow">continue</span>;
<a name="l01213"></a>01213     }
<a name="l01214"></a>01214 
<a name="l01215"></a>01215       <span class="keywordflow">if</span> (or-&gt;<a class="code" href="structospf__route.html#a599273b0e8bc1a908cbedd22dcd78bbd">path_type</a> == <a class="code" href="ospf__route_8h.html#a1db558d26de4f9320c77c0d783d7b2b3">OSPF_PATH_INTER_AREA</a>)
<a name="l01216"></a>01216     {
<a name="l01217"></a>01217       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01218"></a>01218         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_rtr(): &quot;</span>
<a name="l01219"></a>01219                <span class="stringliteral">&quot;this is inter-area route to %s&quot;</span>, inet_ntoa (p-&gt;prefix));
<a name="l01220"></a>01220           <span class="keywordflow">if</span> (!<a class="code" href="ospfd_8h.html#a62518cec4ea9ee2a4db410d3c42b23f7">OSPF_IS_AREA_BACKBONE</a> (area))
<a name="l01221"></a>01221         <a class="code" href="ospf__abr_8c.html#ad1ebac922aae6cb4edbde60b2d054bd8">ospf_abr_announce_rtr_to_area</a> (p, or-&gt;<a class="code" href="structospf__route.html#a78ed87939e621a405c66aeb71fa1944d">cost</a>, area);
<a name="l01222"></a>01222     }
<a name="l01223"></a>01223 
<a name="l01224"></a>01224       <span class="keywordflow">if</span> (or-&gt;<a class="code" href="structospf__route.html#a599273b0e8bc1a908cbedd22dcd78bbd">path_type</a> == <a class="code" href="ospf__route_8h.html#abc7a6177d1cdfac4e8a93ddd4235b08c">OSPF_PATH_INTRA_AREA</a>)
<a name="l01225"></a>01225     {
<a name="l01226"></a>01226       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01227"></a>01227         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_rtr(): &quot;</span>
<a name="l01228"></a>01228                <span class="stringliteral">&quot;this is intra-area route to %s&quot;</span>, inet_ntoa (p-&gt;prefix));
<a name="l01229"></a>01229           <a class="code" href="ospf__abr_8c.html#ad1ebac922aae6cb4edbde60b2d054bd8">ospf_abr_announce_rtr_to_area</a> (p, or-&gt;<a class="code" href="structospf__route.html#a78ed87939e621a405c66aeb71fa1944d">cost</a>, area);
<a name="l01230"></a>01230     }
<a name="l01231"></a>01231     }
<a name="l01232"></a>01232 
<a name="l01233"></a>01233   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01234"></a>01234     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_rtr(): Stop&quot;</span>);
<a name="l01235"></a>01235 }
<a name="l01236"></a>01236 
<a name="l01237"></a>01237 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01238"></a><a class="code" href="ospf__abr_8c.html#a6e95d221f7ea73125b05c9d5a40f8de4">01238</a> <a class="code" href="ospf__abr_8c.html#a6e95d221f7ea73125b05c9d5a40f8de4">ospf_abr_process_router_rt</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> <a class="code" href="structroute__table.html">route_table</a> *rt)
<a name="l01239"></a>01239 {
<a name="l01240"></a>01240   <span class="keyword">struct </span><a class="code" href="structospf__route.html">ospf_route</a> *or;
<a name="l01241"></a>01241   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l01242"></a>01242   <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *<a class="code" href="spgrid_8c.html#a92119ef27b84f1e2e15792d7ea360ba4">l</a>;
<a name="l01243"></a>01243 
<a name="l01244"></a>01244   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01245"></a>01245     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_process_router_rt(): Start&quot;</span>);
<a name="l01246"></a>01246 
<a name="l01247"></a>01247   <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (rt); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
<a name="l01248"></a>01248     {
<a name="l01249"></a>01249       <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
<a name="l01250"></a>01250       <span class="keywordtype">char</span> flag = 0;
<a name="l01251"></a>01251       <span class="keyword">struct </span><a class="code" href="structospf__route.html">ospf_route</a> *best = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01252"></a>01252 
<a name="l01253"></a>01253       <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01254"></a>01254     <span class="keywordflow">continue</span>;
<a name="l01255"></a>01255 
<a name="l01256"></a>01256       l = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l01257"></a>01257 
<a name="l01258"></a>01258       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01259"></a>01259     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_process_router_rt(): this is a route to %s&quot;</span>,
<a name="l01260"></a>01260            inet_ntoa (rn-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>));
<a name="l01261"></a>01261 
<a name="l01262"></a>01262       <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (l, node, nnode, or))
<a name="l01263"></a>01263     {
<a name="l01264"></a>01264       <span class="keywordflow">if</span> (!<a class="code" href="ospfd_8c.html#a24d6ed2a6a05e4856e6dbf5eea74f6ef">ospf_area_lookup_by_area_id</a> (ospf, or-&gt;<a class="code" href="structospf__route.html#ab37ba617082e6dec95c8f67eb9b66d7a">u</a>.<a class="code" href="structospf__route.html#a8b1951ef3f626e1c61e30309c36084a3">std</a>.<a class="code" href="structroute__standard.html#adb68650a53fa9189d6af5d484c01f690">area_id</a>))
<a name="l01265"></a>01265         {
<a name="l01266"></a>01266           <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01267"></a>01267         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_process_router_rt(): area %s no longer exists&quot;</span>,
<a name="l01268"></a>01268              inet_ntoa (or-&gt;<a class="code" href="structospf__route.html#ab37ba617082e6dec95c8f67eb9b66d7a">u</a>.<a class="code" href="structospf__route.html#a8b1951ef3f626e1c61e30309c36084a3">std</a>.<a class="code" href="structroute__standard.html#adb68650a53fa9189d6af5d484c01f690">area_id</a>));
<a name="l01269"></a>01269           <span class="keywordflow">continue</span>;
<a name="l01270"></a>01270         }
<a name="l01271"></a>01271 
<a name="l01272"></a>01272 
<a name="l01273"></a>01273       <span class="keywordflow">if</span> (!<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (or-&gt;<a class="code" href="structospf__route.html#ab37ba617082e6dec95c8f67eb9b66d7a">u</a>.<a class="code" href="structospf__route.html#a8b1951ef3f626e1c61e30309c36084a3">std</a>.<a class="code" href="structroute__standard.html#abd1fb7a470e51e2dc894282f5c1a637b">flags</a>, <a class="code" href="ospf__lsa_8h.html#a050470d5439fd96299124e0debe3444f">ROUTER_LSA_EXTERNAL</a>))
<a name="l01274"></a>01274         {
<a name="l01275"></a>01275           <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01276"></a>01276         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_process_router_rt(): &quot;</span>
<a name="l01277"></a>01277                <span class="stringliteral">&quot;This is not an ASBR, skipping&quot;</span>);
<a name="l01278"></a>01278           <span class="keywordflow">continue</span>;
<a name="l01279"></a>01279         }
<a name="l01280"></a>01280 
<a name="l01281"></a>01281       <span class="keywordflow">if</span> (!flag)
<a name="l01282"></a>01282         {
<a name="l01283"></a>01283           best = <a class="code" href="ospf__ase_8c.html#a5e8bc396fd6aac3eba792e511f2ae56b">ospf_find_asbr_route</a> (ospf, rt,
<a name="l01284"></a>01284                        (<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *) &amp;rn-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>);
<a name="l01285"></a>01285           flag = 1;
<a name="l01286"></a>01286         }
<a name="l01287"></a>01287       
<a name="l01288"></a>01288         <span class="keywordflow">if</span> (best == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01289"></a>01289       <span class="keywordflow">continue</span>;
<a name="l01290"></a>01290     
<a name="l01291"></a>01291         <span class="keywordflow">if</span> (or != best)
<a name="l01292"></a>01292       {
<a name="l01293"></a>01293         <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01294"></a>01294           <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_process_router_rt(): &quot;</span>
<a name="l01295"></a>01295              <span class="stringliteral">&quot;This route is not the best among possible, skipping&quot;</span>);
<a name="l01296"></a>01296         <span class="keywordflow">continue</span>;
<a name="l01297"></a>01297       }
<a name="l01298"></a>01298     
<a name="l01299"></a>01299         <span class="keywordflow">if</span> (or-&gt;<a class="code" href="structospf__route.html#a599273b0e8bc1a908cbedd22dcd78bbd">path_type</a> == <a class="code" href="ospf__route_8h.html#a1db558d26de4f9320c77c0d783d7b2b3">OSPF_PATH_INTER_AREA</a> &amp;&amp;
<a name="l01300"></a>01300             !<a class="code" href="ospfd_8h.html#a3c9df8914219b5ad5aa165ecc3428ae0">OSPF_IS_AREA_ID_BACKBONE</a> (or-&gt;<a class="code" href="structospf__route.html#ab37ba617082e6dec95c8f67eb9b66d7a">u</a>.<a class="code" href="structospf__route.html#a8b1951ef3f626e1c61e30309c36084a3">std</a>.<a class="code" href="structroute__standard.html#adb68650a53fa9189d6af5d484c01f690">area_id</a>))
<a name="l01301"></a>01301       {
<a name="l01302"></a>01302         <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01303"></a>01303           <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_process_router_rt(): &quot;</span>
<a name="l01304"></a>01304              <span class="stringliteral">&quot;This route is not a backbone one, skipping&quot;</span>);
<a name="l01305"></a>01305         <span class="keywordflow">continue</span>;
<a name="l01306"></a>01306       }
<a name="l01307"></a>01307 
<a name="l01308"></a>01308         <span class="keywordflow">if</span> (or-&gt;<a class="code" href="structospf__route.html#a78ed87939e621a405c66aeb71fa1944d">cost</a> &gt;= <a class="code" href="ospfd_8h.html#ac490c9aeaac791b5e779097813b5298e">OSPF_LS_INFINITY</a>)
<a name="l01309"></a>01309       {
<a name="l01310"></a>01310         <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01311"></a>01311           <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_process_router_rt(): &quot;</span>
<a name="l01312"></a>01312              <span class="stringliteral">&quot;This route has LS_INFINITY metric, skipping&quot;</span>);
<a name="l01313"></a>01313         <span class="keywordflow">continue</span>;
<a name="l01314"></a>01314       }
<a name="l01315"></a>01315 
<a name="l01316"></a>01316         <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#ad1c5b3263ee1326f5720d0d09bfce53c">abr_type</a> == <a class="code" href="ospfd_8h.html#aac0be2e336b1b7bcb296c6e9ba32b6ae">OSPF_ABR_CISCO</a>
<a name="l01317"></a>01317         || ospf-&gt;<a class="code" href="structospf.html#ad1c5b3263ee1326f5720d0d09bfce53c">abr_type</a> == <a class="code" href="ospfd_8h.html#a22c05e10f58a965d1023edc4d8a23313">OSPF_ABR_IBM</a>)
<a name="l01318"></a>01318       <span class="keywordflow">if</span> (!<a class="code" href="ospf__abr_8c.html#ad5e6a3408de1c3abbe942d885245c26c">ospf_act_bb_connection</a> (ospf)
<a name="l01319"></a>01319           &amp;&amp; or-&gt;<a class="code" href="structospf__route.html#a599273b0e8bc1a908cbedd22dcd78bbd">path_type</a> != <a class="code" href="ospf__route_8h.html#abc7a6177d1cdfac4e8a93ddd4235b08c">OSPF_PATH_INTRA_AREA</a>)
<a name="l01320"></a>01320         {
<a name="l01321"></a>01321           <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01322"></a>01322         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a>(<span class="stringliteral">&quot;ospf_abr_process_network_rt(): ALT ABR: &quot;</span>
<a name="l01323"></a>01323               <span class="stringliteral">&quot;No BB connection, skip not intra-area routes&quot;</span>);
<a name="l01324"></a>01324           <span class="keywordflow">continue</span>;
<a name="l01325"></a>01325         }
<a name="l01326"></a>01326 
<a name="l01327"></a>01327         <a class="code" href="ospf__abr_8c.html#a53309f31f2e53a478aa2fcabbe0128a7">ospf_abr_announce_rtr</a> (ospf, (<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *) &amp;rn-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>, or);
<a name="l01328"></a>01328 
<a name="l01329"></a>01329     }
<a name="l01330"></a>01330 
<a name="l01331"></a>01331     }
<a name="l01332"></a>01332 
<a name="l01333"></a>01333   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01334"></a>01334     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_process_router_rt(): Stop&quot;</span>);
<a name="l01335"></a>01335 }
<a name="l01336"></a>01336 
<a name="l01337"></a>01337 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01338"></a><a class="code" href="ospf__abr_8c.html#a1030d4abaf7392a251388eb4deec5a40">01338</a> <a class="code" href="ospf__abr_8c.html#a1030d4abaf7392a251388eb4deec5a40">ospf_abr_unapprove_translates</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>) <span class="comment">/* For NSSA Translations */</span>
<a name="l01339"></a>01339 {
<a name="l01340"></a>01340   <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa;
<a name="l01341"></a>01341   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l01342"></a>01342 
<a name="l01343"></a>01343   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01344"></a>01344     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_unapprove_translates(): Start&quot;</span>);
<a name="l01345"></a>01345 
<a name="l01346"></a>01346   <span class="comment">/* NSSA Translator is not checked, because it may have gone away,</span>
<a name="l01347"></a>01347 <span class="comment">    and we would want to flush any residuals anyway */</span>
<a name="l01348"></a>01348 
<a name="l01349"></a>01349   <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#ae56a8a7b638bd22caf86ea3d810fdbd9">EXTERNAL_LSDB</a> (ospf), rn, lsa)
<a name="l01350"></a>01350     <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (lsa-&gt;<a class="code" href="structospf__lsa.html#aa8c833176affd799afeb8db16cdb2602">flags</a>, <a class="code" href="ospf__lsa_8h.html#a20f98f1fb4931335ddf4dd15d8fe9040">OSPF_LSA_LOCAL_XLT</a>))
<a name="l01351"></a>01351       {
<a name="l01352"></a>01352         <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (lsa-&gt;<a class="code" href="structospf__lsa.html#aa8c833176affd799afeb8db16cdb2602">flags</a>, <a class="code" href="ospf__lsa_8h.html#a7d310b6c5bc390fbe0a0da8a73c43d82">OSPF_LSA_APPROVED</a>);
<a name="l01353"></a>01353         <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01354"></a>01354           <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_unapprove_translates(): &quot;</span>
<a name="l01355"></a>01355                      <span class="stringliteral">&quot;approved unset on link id %s&quot;</span>,
<a name="l01356"></a>01356                      inet_ntoa (lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>-&gt;<a class="code" href="structlsa__header.html#a8f4602786c2de855a418b553a4555683">id</a>));
<a name="l01357"></a>01357       }
<a name="l01358"></a>01358 
<a name="l01359"></a>01359   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01360"></a>01360     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_unapprove_translates(): Stop&quot;</span>);
<a name="l01361"></a>01361 }
<a name="l01362"></a>01362 
<a name="l01363"></a>01363 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01364"></a><a class="code" href="ospf__abr_8c.html#aa382b917196a24d77aea90e4db33d2f0">01364</a> <a class="code" href="ospf__abr_8c.html#aa382b917196a24d77aea90e4db33d2f0">ospf_abr_unapprove_summaries</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>)
<a name="l01365"></a>01365 {
<a name="l01366"></a>01366   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l01367"></a>01367   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01368"></a>01368   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l01369"></a>01369   <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa;
<a name="l01370"></a>01370 
<a name="l01371"></a>01371   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01372"></a>01372     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_unapprove_summaries(): Start&quot;</span>);
<a name="l01373"></a>01373 
<a name="l01374"></a>01374   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, node, area))
<a name="l01375"></a>01375     {
<a name="l01376"></a>01376       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01377"></a>01377         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_unapprove_summaries(): &quot;</span>
<a name="l01378"></a>01378                    <span class="stringliteral">&quot;considering area %s&quot;</span>,
<a name="l01379"></a>01379                    inet_ntoa (area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>)); 
<a name="l01380"></a>01380       <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#a58ae6df59f7476d7784e19f7ca19db1f">SUMMARY_LSDB</a> (area), rn, lsa)
<a name="l01381"></a>01381       <span class="keywordflow">if</span> (<a class="code" href="ospf__lsa_8c.html#ad430a0bdeae46dc78ef311cf2c511bad">ospf_lsa_is_self_originated</a> (ospf, lsa))
<a name="l01382"></a>01382         {
<a name="l01383"></a>01383           <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01384"></a>01384             <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_unapprove_summaries(): &quot;</span>
<a name="l01385"></a>01385                        <span class="stringliteral">&quot;approved unset on summary link id %s&quot;</span>,
<a name="l01386"></a>01386                        inet_ntoa (lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>-&gt;<a class="code" href="structlsa__header.html#a8f4602786c2de855a418b553a4555683">id</a>)); 
<a name="l01387"></a>01387           <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (lsa-&gt;<a class="code" href="structospf__lsa.html#aa8c833176affd799afeb8db16cdb2602">flags</a>, <a class="code" href="ospf__lsa_8h.html#a7d310b6c5bc390fbe0a0da8a73c43d82">OSPF_LSA_APPROVED</a>);
<a name="l01388"></a>01388         }
<a name="l01389"></a>01389 
<a name="l01390"></a>01390       <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#a145a10afd0c8a801d2e84b26c0becbfd">ASBR_SUMMARY_LSDB</a> (area), rn, lsa)
<a name="l01391"></a>01391       <span class="keywordflow">if</span> (<a class="code" href="ospf__lsa_8c.html#ad430a0bdeae46dc78ef311cf2c511bad">ospf_lsa_is_self_originated</a> (ospf, lsa))
<a name="l01392"></a>01392         {
<a name="l01393"></a>01393           <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01394"></a>01394             <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_unapprove_summaries(): &quot;</span>
<a name="l01395"></a>01395                        <span class="stringliteral">&quot;approved unset on asbr-summary link id %s&quot;</span>,
<a name="l01396"></a>01396                        inet_ntoa (lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>-&gt;<a class="code" href="structlsa__header.html#a8f4602786c2de855a418b553a4555683">id</a>));
<a name="l01397"></a>01397           <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (lsa-&gt;<a class="code" href="structospf__lsa.html#aa8c833176affd799afeb8db16cdb2602">flags</a>, <a class="code" href="ospf__lsa_8h.html#a7d310b6c5bc390fbe0a0da8a73c43d82">OSPF_LSA_APPROVED</a>);
<a name="l01398"></a>01398         }
<a name="l01399"></a>01399     }
<a name="l01400"></a>01400 
<a name="l01401"></a>01401   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01402"></a>01402     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_unapprove_summaries(): Stop&quot;</span>);
<a name="l01403"></a>01403 }
<a name="l01404"></a>01404 
<a name="l01405"></a>01405 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01406"></a><a class="code" href="ospf__abr_8c.html#afca847ae061d1a858adb2d8482890747">01406</a> <a class="code" href="ospf__abr_8c.html#afca847ae061d1a858adb2d8482890747">ospf_abr_prepare_aggregates</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>)
<a name="l01407"></a>01407 {
<a name="l01408"></a>01408   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l01409"></a>01409   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l01410"></a>01410   <span class="keyword">struct </span><a class="code" href="structospf__area__range.html">ospf_area_range</a> *range;
<a name="l01411"></a>01411   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01412"></a>01412 
<a name="l01413"></a>01413   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01414"></a>01414     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_prepare_aggregates(): Start&quot;</span>);
<a name="l01415"></a>01415 
<a name="l01416"></a>01416   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, node, area))
<a name="l01417"></a>01417     {
<a name="l01418"></a>01418       <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (area-&gt;<a class="code" href="structospf__area.html#ae4d5f7877962eb3e477299a8f93dbfff">ranges</a>); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
<a name="l01419"></a>01419     <span class="keywordflow">if</span> ((range = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01420"></a>01420       {
<a name="l01421"></a>01421         range-&gt;<a class="code" href="structospf__area__range.html#a48ee60db14ab78e1f0435d56fd42d2d0">cost</a> = 0;
<a name="l01422"></a>01422         range-&gt;<a class="code" href="structospf__area__range.html#a3d1cb2519f52918c6ebfbcc60dbbbd6d">specifics</a> = 0;
<a name="l01423"></a>01423       }
<a name="l01424"></a>01424     }
<a name="l01425"></a>01425 
<a name="l01426"></a>01426   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01427"></a>01427     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_prepare_aggregates(): Stop&quot;</span>);
<a name="l01428"></a>01428 }
<a name="l01429"></a>01429 
<a name="l01430"></a>01430 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01431"></a><a class="code" href="ospf__abr_8c.html#a953934abb38ade526e393b844f7f02e7">01431</a> <a class="code" href="ospf__abr_8c.html#a953934abb38ade526e393b844f7f02e7">ospf_abr_announce_aggregates</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>)
<a name="l01432"></a>01432 {
<a name="l01433"></a>01433   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>, *ar;
<a name="l01434"></a>01434   <span class="keyword">struct </span><a class="code" href="structospf__area__range.html">ospf_area_range</a> *range;
<a name="l01435"></a>01435   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l01436"></a>01436   <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> p;
<a name="l01437"></a>01437   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *<a class="code" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>;
<a name="l01438"></a>01438 
<a name="l01439"></a>01439   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01440"></a>01440     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_aggregates(): Start&quot;</span>);
<a name="l01441"></a>01441 
<a name="l01442"></a>01442   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, node, area))
<a name="l01443"></a>01443     {
<a name="l01444"></a>01444       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01445"></a>01445     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_aggregates(): looking at area %s&quot;</span>,
<a name="l01446"></a>01446            inet_ntoa (area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>));
<a name="l01447"></a>01447 
<a name="l01448"></a>01448       <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (area-&gt;<a class="code" href="structospf__area.html#ae4d5f7877962eb3e477299a8f93dbfff">ranges</a>); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
<a name="l01449"></a>01449     <span class="keywordflow">if</span> ((range =  rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>))
<a name="l01450"></a>01450       {
<a name="l01451"></a>01451         <span class="keywordflow">if</span> (!<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (range-&gt;<a class="code" href="structospf__area__range.html#adcac2bfd2040ce51c649dd47257fcdd5">flags</a>, <a class="code" href="ospf__abr_8h.html#aad26a71d348f2b614e680fec6b0122fc">OSPF_AREA_RANGE_ADVERTISE</a>))
<a name="l01452"></a>01452           {
<a name="l01453"></a>01453         <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01454"></a>01454           <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_aggregates():&quot;</span>
<a name="l01455"></a>01455                  <span class="stringliteral">&quot; discarding suppress-ranges&quot;</span>);
<a name="l01456"></a>01456         <span class="keywordflow">continue</span>;
<a name="l01457"></a>01457           }
<a name="l01458"></a>01458 
<a name="l01459"></a>01459         p.<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> = AF_INET;
<a name="l01460"></a>01460         p.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a> = range-&gt;<a class="code" href="structospf__area__range.html#a724f20a6824a90fe2b2c5c5b78e34dc2">addr</a>;
<a name="l01461"></a>01461         p.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> = range-&gt;<a class="code" href="structospf__area__range.html#ad74a36f5e9873c250a48fd717f206223">masklen</a>;
<a name="l01462"></a>01462 
<a name="l01463"></a>01463         <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01464"></a>01464           <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_aggregates():&quot;</span>
<a name="l01465"></a>01465              <span class="stringliteral">&quot; this is range: %s/%d&quot;</span>,
<a name="l01466"></a>01466              inet_ntoa (p.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>), p.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
<a name="l01467"></a>01467 
<a name="l01468"></a>01468         <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (range-&gt;<a class="code" href="structospf__area__range.html#adcac2bfd2040ce51c649dd47257fcdd5">flags</a>, <a class="code" href="ospf__abr_8h.html#a05a85c40463339240f87aa8200447eb8">OSPF_AREA_RANGE_SUBSTITUTE</a>))
<a name="l01469"></a>01469           {
<a name="l01470"></a>01470         p.<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> = AF_INET;
<a name="l01471"></a>01471         p.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a> = range-&gt;<a class="code" href="structospf__area__range.html#aae8a961c337b41f842906f32be2e169e">subst_addr</a>;
<a name="l01472"></a>01472         p.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> = range-&gt;<a class="code" href="structospf__area__range.html#afc6ca0cc37924c70d8d70aa2d426f313">subst_masklen</a>;
<a name="l01473"></a>01473           }
<a name="l01474"></a>01474 
<a name="l01475"></a>01475         <span class="keywordflow">if</span> (range-&gt;<a class="code" href="structospf__area__range.html#a3d1cb2519f52918c6ebfbcc60dbbbd6d">specifics</a>)
<a name="l01476"></a>01476           {
<a name="l01477"></a>01477         <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01478"></a>01478           <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_aggregates(): active range&quot;</span>);
<a name="l01479"></a>01479 
<a name="l01480"></a>01480         <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, n, ar))
<a name="l01481"></a>01481           {
<a name="l01482"></a>01482             <span class="keywordflow">if</span> (ar == area)
<a name="l01483"></a>01483               <span class="keywordflow">continue</span>;
<a name="l01484"></a>01484 
<a name="l01485"></a>01485             <span class="comment">/* We do not check nexthops here, because</span>
<a name="l01486"></a>01486 <span class="comment">               intra-area routes can be associated with</span>
<a name="l01487"></a>01487 <span class="comment">               one area only */</span>
<a name="l01488"></a>01488 
<a name="l01489"></a>01489             <span class="comment">/* backbone routes are not summarized</span>
<a name="l01490"></a>01490 <span class="comment">               when announced into transit areas */</span>
<a name="l01491"></a>01491 
<a name="l01492"></a>01492             <span class="keywordflow">if</span> (<a class="code" href="ospf__ia_8c.html#ab842a86f531740d282d27cbaf960cf28">ospf_area_is_transit</a> (ar) &amp;&amp;
<a name="l01493"></a>01493             <a class="code" href="ospfd_8h.html#a62518cec4ea9ee2a4db410d3c42b23f7">OSPF_IS_AREA_BACKBONE</a> (area))
<a name="l01494"></a>01494               {
<a name="l01495"></a>01495             <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01496"></a>01496               <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_aggregates(): Skipping &quot;</span>
<a name="l01497"></a>01497                      <span class="stringliteral">&quot;announcement of BB aggregate into&quot;</span>
<a name="l01498"></a>01498                      <span class="stringliteral">&quot; a transit area&quot;</span>);
<a name="l01499"></a>01499             <span class="keywordflow">continue</span>; 
<a name="l01500"></a>01500               }
<a name="l01501"></a>01501             <a class="code" href="ospf__abr_8c.html#ac9d059be83ed701a4f4f549984eb8614">ospf_abr_announce_network_to_area</a> ((<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *)&amp;p, range-&gt;<a class="code" href="structospf__area__range.html#a48ee60db14ab78e1f0435d56fd42d2d0">cost</a>, ar);
<a name="l01502"></a>01502           }
<a name="l01503"></a>01503           }
<a name="l01504"></a>01504       }
<a name="l01505"></a>01505     }
<a name="l01506"></a>01506 
<a name="l01507"></a>01507   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01508"></a>01508     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_aggregates(): Stop&quot;</span>);
<a name="l01509"></a>01509 }
<a name="l01510"></a>01510 
<a name="l01511"></a>01511 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01512"></a><a class="code" href="ospf__abr_8c.html#abf8866750398700f04b54367eb25eb6e">01512</a> <a class="code" href="ospf__abr_8c.html#abf8866750398700f04b54367eb25eb6e">ospf_abr_send_nssa_aggregates</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>) <span class="comment">/* temporarily turned off */</span>
<a name="l01513"></a>01513 {
<a name="l01514"></a>01514   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node; <span class="comment">/*, n; */</span>
<a name="l01515"></a>01515   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>; <span class="comment">/*, *ar; */</span>
<a name="l01516"></a>01516   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l01517"></a>01517   <span class="keyword">struct </span><a class="code" href="structospf__area__range.html">ospf_area_range</a> *range;
<a name="l01518"></a>01518   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> p;
<a name="l01519"></a>01519 
<a name="l01520"></a>01520   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01521"></a>01521     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_send_nssa_aggregates(): Start&quot;</span>);
<a name="l01522"></a>01522 
<a name="l01523"></a>01523   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, node, area))
<a name="l01524"></a>01524     {
<a name="l01525"></a>01525       <span class="keywordflow">if</span> (! area-&gt;<a class="code" href="structospf__area.html#a3956cb7dd73ce5563ae652947e12d08e">NSSATranslatorState</a>)
<a name="l01526"></a>01526     <span class="keywordflow">continue</span>;
<a name="l01527"></a>01527 
<a name="l01528"></a>01528       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01529"></a>01529     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_send_nssa_aggregates(): looking at area %s&quot;</span>,
<a name="l01530"></a>01530            inet_ntoa (area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>));
<a name="l01531"></a>01531 
<a name="l01532"></a>01532       <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (area-&gt;<a class="code" href="structospf__area.html#ae4d5f7877962eb3e477299a8f93dbfff">ranges</a>); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
<a name="l01533"></a>01533     {
<a name="l01534"></a>01534           <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01535"></a>01535         <span class="keywordflow">continue</span>;
<a name="l01536"></a>01536 
<a name="l01537"></a>01537       range = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l01538"></a>01538 
<a name="l01539"></a>01539           <span class="keywordflow">if</span> (!<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (range-&gt;<a class="code" href="structospf__area__range.html#adcac2bfd2040ce51c649dd47257fcdd5">flags</a>, <a class="code" href="ospf__abr_8h.html#aad26a71d348f2b614e680fec6b0122fc">OSPF_AREA_RANGE_ADVERTISE</a>))
<a name="l01540"></a>01540         {
<a name="l01541"></a>01541           <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01542"></a>01542         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_send_nssa_aggregates():&quot;</span>
<a name="l01543"></a>01543                <span class="stringliteral">&quot; discarding suppress-ranges&quot;</span>);
<a name="l01544"></a>01544           <span class="keywordflow">continue</span>;
<a name="l01545"></a>01545         }
<a name="l01546"></a>01546 
<a name="l01547"></a>01547           p.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
<a name="l01548"></a>01548           p.prefix = range-&gt;<a class="code" href="structospf__area__range.html#a724f20a6824a90fe2b2c5c5b78e34dc2">addr</a>;
<a name="l01549"></a>01549           p.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = range-&gt;<a class="code" href="structospf__area__range.html#ad74a36f5e9873c250a48fd717f206223">masklen</a>;
<a name="l01550"></a>01550 
<a name="l01551"></a>01551       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01552"></a>01552         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_send_nssa_aggregates():&quot;</span>
<a name="l01553"></a>01553                <span class="stringliteral">&quot; this is range: %s/%d&quot;</span>,
<a name="l01554"></a>01554                inet_ntoa (p.prefix), p.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a>);
<a name="l01555"></a>01555 
<a name="l01556"></a>01556           <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (range-&gt;<a class="code" href="structospf__area__range.html#adcac2bfd2040ce51c649dd47257fcdd5">flags</a>, <a class="code" href="ospf__abr_8h.html#a05a85c40463339240f87aa8200447eb8">OSPF_AREA_RANGE_SUBSTITUTE</a>))
<a name="l01557"></a>01557         {
<a name="l01558"></a>01558           p.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
<a name="l01559"></a>01559           p.prefix = range-&gt;<a class="code" href="structospf__area__range.html#aae8a961c337b41f842906f32be2e169e">subst_addr</a>;
<a name="l01560"></a>01560           p.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = range-&gt;<a class="code" href="structospf__area__range.html#afc6ca0cc37924c70d8d70aa2d426f313">subst_masklen</a>;
<a name="l01561"></a>01561         }
<a name="l01562"></a>01562 
<a name="l01563"></a>01563           <span class="keywordflow">if</span> (range-&gt;<a class="code" href="structospf__area__range.html#a3d1cb2519f52918c6ebfbcc60dbbbd6d">specifics</a>)
<a name="l01564"></a>01564             {
<a name="l01565"></a>01565               <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01566"></a>01566                 <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_send_nssa_aggregates(): active range&quot;</span>);
<a name="l01567"></a>01567 
<a name="l01568"></a>01568               <span class="comment">/* Fetch LSA-Type-7 from aggregate prefix, and then</span>
<a name="l01569"></a>01569 <span class="comment">               *  translate, Install (as Type-5), Approve, and Flood</span>
<a name="l01570"></a>01570 <span class="comment">               */</span>
<a name="l01571"></a>01571               <a class="code" href="ospf__abr_8c.html#a1be9148114aa9952994a93198d36f665">ospf_abr_translate_nssa_range</a> (&amp;p, range-&gt;<a class="code" href="structospf__area__range.html#a48ee60db14ab78e1f0435d56fd42d2d0">cost</a>);
<a name="l01572"></a>01572             }
<a name="l01573"></a>01573         } <span class="comment">/* all area ranges*/</span>
<a name="l01574"></a>01574     } <span class="comment">/* all areas */</span>
<a name="l01575"></a>01575 
<a name="l01576"></a>01576   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01577"></a>01577     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_send_nssa_aggregates(): Stop&quot;</span>);
<a name="l01578"></a>01578 }
<a name="l01579"></a>01579 
<a name="l01580"></a>01580 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01581"></a><a class="code" href="ospf__abr_8c.html#a39b97b6c432d39e16b591da26af7c8a0">01581</a> <a class="code" href="ospf__abr_8c.html#a39b97b6c432d39e16b591da26af7c8a0">ospf_abr_announce_nssa_defaults</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>) <span class="comment">/* By ABR-Translator */</span>
<a name="l01582"></a>01582 {
<a name="l01583"></a>01583   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l01584"></a>01584   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01585"></a>01585 
<a name="l01586"></a>01586   <span class="keywordflow">if</span> (! <a class="code" href="ospfd_8h.html#a66c6ce8df7e5b79426d9eca9f8ef6d27">IS_OSPF_ABR</a> (ospf))
<a name="l01587"></a>01587     <span class="keywordflow">return</span>;
<a name="l01588"></a>01588 
<a name="l01589"></a>01589   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01590"></a>01590     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_stub_defaults(): Start&quot;</span>);
<a name="l01591"></a>01591 
<a name="l01592"></a>01592   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, node, area))
<a name="l01593"></a>01593     {
<a name="l01594"></a>01594       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01595"></a>01595         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_nssa_defaults(): looking at area %s&quot;</span>,
<a name="l01596"></a>01596                    inet_ntoa (area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>));
<a name="l01597"></a>01597 
<a name="l01598"></a>01598       <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a> != <a class="code" href="ospfd_8h.html#a871478d6ecced0907ee1f67c5dbacf99">OSPF_AREA_NSSA</a>)
<a name="l01599"></a>01599         <span class="keywordflow">continue</span>;
<a name="l01600"></a>01600 
<a name="l01601"></a>01601       <span class="keywordflow">if</span> (<a class="code" href="ospfd_8h.html#a62518cec4ea9ee2a4db410d3c42b23f7">OSPF_IS_AREA_BACKBONE</a> (area))
<a name="l01602"></a>01602         <span class="keywordflow">continue</span>; <span class="comment">/* Sanity Check */</span>
<a name="l01603"></a>01603 
<a name="l01604"></a>01604       <span class="comment">/* if (!TranslatorRole continue V 1.0 look for &quot;always&quot; conf */</span>
<a name="l01605"></a>01605       <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structospf__area.html#a3956cb7dd73ce5563ae652947e12d08e">NSSATranslatorState</a>)
<a name="l01606"></a>01606         {
<a name="l01607"></a>01607           <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01608"></a>01608             <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_nssa_defaults(): &quot;</span>
<a name="l01609"></a>01609                        <span class="stringliteral">&quot;announcing 0.0.0.0/0 to this nssa&quot;</span>);
<a name="l01610"></a>01610           <span class="comment">/* ospf_abr_announce_nssa_asbr_to_as (&amp;p, area-&gt;default_cost, area); */</span>
<a name="l01611"></a>01611           <span class="comment">/*ospf_abr_announce_network_to_area (&amp;p, area-&gt;default_cost, area);*/</span>
<a name="l01612"></a>01612         }
<a name="l01613"></a>01613     }
<a name="l01614"></a>01614 }
<a name="l01615"></a>01615 
<a name="l01616"></a>01616 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01617"></a><a class="code" href="ospf__abr_8c.html#a69c79123dfe301c5ab7762850598a199">01617</a> <a class="code" href="ospf__abr_8c.html#a69c79123dfe301c5ab7762850598a199">ospf_abr_announce_stub_defaults</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>)
<a name="l01618"></a>01618 {
<a name="l01619"></a>01619   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l01620"></a>01620   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01621"></a>01621   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> p;
<a name="l01622"></a>01622 
<a name="l01623"></a>01623   <span class="keywordflow">if</span> (! <a class="code" href="ospfd_8h.html#a66c6ce8df7e5b79426d9eca9f8ef6d27">IS_OSPF_ABR</a> (ospf))
<a name="l01624"></a>01624     <span class="keywordflow">return</span>;
<a name="l01625"></a>01625 
<a name="l01626"></a>01626   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01627"></a>01627     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_stub_defaults(): Start&quot;</span>);
<a name="l01628"></a>01628 
<a name="l01629"></a>01629   p.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
<a name="l01630"></a>01630   p.prefix.s_addr = <a class="code" href="ospfd_8h.html#aa27acfec5e87443929f2f3cce54116d4">OSPF_DEFAULT_DESTINATION</a>;
<a name="l01631"></a>01631   p.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = 0;
<a name="l01632"></a>01632 
<a name="l01633"></a>01633   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, node, area))
<a name="l01634"></a>01634     {
<a name="l01635"></a>01635       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01636"></a>01636         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_stub_defaults(): looking at area %s&quot;</span>,
<a name="l01637"></a>01637             inet_ntoa (area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>));
<a name="l01638"></a>01638 
<a name="l01639"></a>01639      <span class="keywordflow">if</span> ( (area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a> != <a class="code" href="ospfd_8h.html#a34e738eee2ef9dfcea3d7f31d36de08c">OSPF_AREA_STUB</a>)
<a name="l01640"></a>01640           &amp;&amp; (area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a> != <a class="code" href="ospfd_8h.html#a871478d6ecced0907ee1f67c5dbacf99">OSPF_AREA_NSSA</a>)
<a name="l01641"></a>01641         )
<a name="l01642"></a>01642        <span class="keywordflow">continue</span>;
<a name="l01643"></a>01643 
<a name="l01644"></a>01644       <span class="keywordflow">if</span> (<a class="code" href="ospfd_8h.html#a62518cec4ea9ee2a4db410d3c42b23f7">OSPF_IS_AREA_BACKBONE</a> (area))
<a name="l01645"></a>01645         <span class="keywordflow">continue</span>; <span class="comment">/* Sanity Check */</span>
<a name="l01646"></a>01646 
<a name="l01647"></a>01647       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01648"></a>01648         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_stub_defaults(): &quot;</span>
<a name="l01649"></a>01649             <span class="stringliteral">&quot;announcing 0.0.0.0/0 to area %s&quot;</span>,
<a name="l01650"></a>01650                  inet_ntoa (area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>));
<a name="l01651"></a>01651       <a class="code" href="ospf__abr_8c.html#ac9d059be83ed701a4f4f549984eb8614">ospf_abr_announce_network_to_area</a> (&amp;p, area-&gt;<a class="code" href="structospf__area.html#a8276632b8bab54988029593bb3ebc502">default_cost</a>, area);
<a name="l01652"></a>01652     }
<a name="l01653"></a>01653 
<a name="l01654"></a>01654   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01655"></a>01655     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_announce_stub_defaults(): Stop&quot;</span>);
<a name="l01656"></a>01656 }
<a name="l01657"></a>01657 
<a name="l01658"></a>01658 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l01659"></a><a class="code" href="ospf__abr_8c.html#a980e974d0f9c7e0ab27a041594bed0ec">01659</a> <a class="code" href="ospf__abr_8c.html#a980e974d0f9c7e0ab27a041594bed0ec">ospf_abr_remove_unapproved_translates_apply</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>,
<a name="l01660"></a>01660                          <span class="keyword">struct</span> <a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa)
<a name="l01661"></a>01661 {
<a name="l01662"></a>01662   <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (lsa-&gt;<a class="code" href="structospf__lsa.html#aa8c833176affd799afeb8db16cdb2602">flags</a>, <a class="code" href="ospf__lsa_8h.html#a20f98f1fb4931335ddf4dd15d8fe9040">OSPF_LSA_LOCAL_XLT</a>)
<a name="l01663"></a>01663       &amp;&amp; ! <a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (lsa-&gt;<a class="code" href="structospf__lsa.html#aa8c833176affd799afeb8db16cdb2602">flags</a>, <a class="code" href="ospf__lsa_8h.html#a7d310b6c5bc390fbe0a0da8a73c43d82">OSPF_LSA_APPROVED</a>))
<a name="l01664"></a>01664     {
<a name="l01665"></a>01665       <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;ospf_abr_remove_unapproved_translates(): &quot;</span>
<a name="l01666"></a>01666          <span class="stringliteral">&quot;removing unapproved translates, ID: %s&quot;</span>,
<a name="l01667"></a>01667          inet_ntoa (lsa-&gt;<a class="code" href="structospf__lsa.html#a31a637ecac976d557e71528613046582">data</a>-&gt;<a class="code" href="structlsa__header.html#a8f4602786c2de855a418b553a4555683">id</a>));
<a name="l01668"></a>01668 
<a name="l01669"></a>01669       <span class="comment">/* FLUSH THROUGHOUT AS */</span>
<a name="l01670"></a>01670       <a class="code" href="ospf__flood_8c.html#a68d550b90a6cd775d965f6e8f9309863">ospf_lsa_flush_as</a> (ospf, lsa);
<a name="l01671"></a>01671 
<a name="l01672"></a>01672       <span class="comment">/* DISCARD from LSDB  */</span>
<a name="l01673"></a>01673     }
<a name="l01674"></a>01674   <span class="keywordflow">return</span> 0;
<a name="l01675"></a>01675 }
<a name="l01676"></a>01676 
<a name="l01677"></a>01677 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01678"></a><a class="code" href="ospf__abr_8c.html#a463b9e6cc146ca75d3a256d5672693d2">01678</a> <a class="code" href="ospf__abr_8c.html#a463b9e6cc146ca75d3a256d5672693d2">ospf_abr_remove_unapproved_translates</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>)
<a name="l01679"></a>01679 {
<a name="l01680"></a>01680   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l01681"></a>01681   <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa;
<a name="l01682"></a>01682 
<a name="l01683"></a>01683   <span class="comment">/* All AREA PROCESS should have APPROVED necessary LSAs */</span>
<a name="l01684"></a>01684   <span class="comment">/* Remove any left over and not APPROVED */</span>
<a name="l01685"></a>01685   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01686"></a>01686     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_remove_unapproved_translates(): Start&quot;</span>);
<a name="l01687"></a>01687 
<a name="l01688"></a>01688   <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#ae56a8a7b638bd22caf86ea3d810fdbd9">EXTERNAL_LSDB</a> (ospf), rn, lsa)
<a name="l01689"></a>01689     <a class="code" href="ospf__abr_8c.html#a980e974d0f9c7e0ab27a041594bed0ec">ospf_abr_remove_unapproved_translates_apply</a> (ospf, lsa);
<a name="l01690"></a>01690  
<a name="l01691"></a>01691   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01692"></a>01692     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_remove_unapproved_translates(): Stop&quot;</span>);
<a name="l01693"></a>01693 }
<a name="l01694"></a>01694 
<a name="l01695"></a>01695 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01696"></a><a class="code" href="ospf__abr_8c.html#a9f4b9ea2aea8eb7fc76a9386fabdc8ae">01696</a> <a class="code" href="ospf__abr_8c.html#a9f4b9ea2aea8eb7fc76a9386fabdc8ae">ospf_abr_remove_unapproved_summaries</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>)
<a name="l01697"></a>01697 {
<a name="l01698"></a>01698   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l01699"></a>01699   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01700"></a>01700   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l01701"></a>01701   <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa;
<a name="l01702"></a>01702 
<a name="l01703"></a>01703   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01704"></a>01704     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_remove_unapproved_summaries(): Start&quot;</span>);
<a name="l01705"></a>01705 
<a name="l01706"></a>01706   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, node, area))
<a name="l01707"></a>01707     {
<a name="l01708"></a>01708       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01709"></a>01709     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_remove_unapproved_summaries(): &quot;</span>
<a name="l01710"></a>01710            <span class="stringliteral">&quot;looking at area %s&quot;</span>, inet_ntoa (area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>));
<a name="l01711"></a>01711 
<a name="l01712"></a>01712       <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#a58ae6df59f7476d7784e19f7ca19db1f">SUMMARY_LSDB</a> (area), rn, lsa)
<a name="l01713"></a>01713     <span class="keywordflow">if</span> (<a class="code" href="ospf__lsa_8c.html#ad430a0bdeae46dc78ef311cf2c511bad">ospf_lsa_is_self_originated</a> (ospf, lsa))
<a name="l01714"></a>01714       <span class="keywordflow">if</span> (!<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (lsa-&gt;<a class="code" href="structospf__lsa.html#aa8c833176affd799afeb8db16cdb2602">flags</a>, <a class="code" href="ospf__lsa_8h.html#a7d310b6c5bc390fbe0a0da8a73c43d82">OSPF_LSA_APPROVED</a>))
<a name="l01715"></a>01715         <a class="code" href="ospf__flood_8c.html#ad3049ba87364a6fbed7d352023e33a4a">ospf_lsa_flush_area</a> (lsa, area);
<a name="l01716"></a>01716 
<a name="l01717"></a>01717       <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#a145a10afd0c8a801d2e84b26c0becbfd">ASBR_SUMMARY_LSDB</a> (area), rn, lsa)
<a name="l01718"></a>01718     <span class="keywordflow">if</span> (<a class="code" href="ospf__lsa_8c.html#ad430a0bdeae46dc78ef311cf2c511bad">ospf_lsa_is_self_originated</a> (ospf, lsa))
<a name="l01719"></a>01719       <span class="keywordflow">if</span> (!<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (lsa-&gt;<a class="code" href="structospf__lsa.html#aa8c833176affd799afeb8db16cdb2602">flags</a>, <a class="code" href="ospf__lsa_8h.html#a7d310b6c5bc390fbe0a0da8a73c43d82">OSPF_LSA_APPROVED</a>))
<a name="l01720"></a>01720         <a class="code" href="ospf__flood_8c.html#ad3049ba87364a6fbed7d352023e33a4a">ospf_lsa_flush_area</a> (lsa, area);
<a name="l01721"></a>01721     }
<a name="l01722"></a>01722  
<a name="l01723"></a>01723   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01724"></a>01724     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_remove_unapproved_summaries(): Stop&quot;</span>);
<a name="l01725"></a>01725 }
<a name="l01726"></a>01726 
<a name="l01727"></a>01727 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01728"></a><a class="code" href="ospf__abr_8c.html#a22e8f135a7aec6a8656007a9f9dabe77">01728</a> <a class="code" href="ospf__abr_8c.html#a22e8f135a7aec6a8656007a9f9dabe77">ospf_abr_manage_discard_routes</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>)
<a name="l01729"></a>01729 {
<a name="l01730"></a>01730   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
<a name="l01731"></a>01731   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l01732"></a>01732   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01733"></a>01733   <span class="keyword">struct </span><a class="code" href="structospf__area__range.html">ospf_area_range</a> *range;
<a name="l01734"></a>01734 
<a name="l01735"></a>01735   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, node, nnode, area))
<a name="l01736"></a>01736     <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (area-&gt;<a class="code" href="structospf__area.html#ae4d5f7877962eb3e477299a8f93dbfff">ranges</a>); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
<a name="l01737"></a>01737       <span class="keywordflow">if</span> ((range = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01738"></a>01738     <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (range-&gt;<a class="code" href="structospf__area__range.html#adcac2bfd2040ce51c649dd47257fcdd5">flags</a>, <a class="code" href="ospf__abr_8h.html#aad26a71d348f2b614e680fec6b0122fc">OSPF_AREA_RANGE_ADVERTISE</a>))
<a name="l01739"></a>01739       {
<a name="l01740"></a>01740         <span class="keywordflow">if</span> (range-&gt;<a class="code" href="structospf__area__range.html#a3d1cb2519f52918c6ebfbcc60dbbbd6d">specifics</a>)
<a name="l01741"></a>01741           <a class="code" href="ospf__route_8c.html#a6ba37b7d4dd2c286ad0f70471c048c44">ospf_add_discard_route</a> (ospf-&gt;<a class="code" href="structospf.html#a1fd3dcac2e3c565e23fce6884ffb097f">new_table</a>, area,
<a name="l01742"></a>01742                       (<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *) &amp;rn-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>);
<a name="l01743"></a>01743         <span class="keywordflow">else</span>
<a name="l01744"></a>01744           <a class="code" href="ospf__route_8c.html#ad70227bcce895a92b74cc1ed6d30f7b5">ospf_delete_discard_route</a> ((<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *) &amp;rn-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>);
<a name="l01745"></a>01745       }
<a name="l01746"></a>01746 }
<a name="l01747"></a>01747 
<a name="l01748"></a>01748 <span class="comment">/* This is the function taking care about ABR NSSA, i.e.  NSSA</span>
<a name="l01749"></a>01749 <span class="comment">   Translator, -LSA aggregation and flooding. For all NSSAs</span>
<a name="l01750"></a>01750 <span class="comment"></span>
<a name="l01751"></a>01751 <span class="comment">   Any SELF-AS-LSA is in the Type-5 LSDB and Type-7 LSDB.  These LSA&#39;s</span>
<a name="l01752"></a>01752 <span class="comment">   are refreshed from the Type-5 LSDB, installed into the Type-7 LSDB</span>
<a name="l01753"></a>01753 <span class="comment">   with the P-bit set.</span>
<a name="l01754"></a>01754 <span class="comment"></span>
<a name="l01755"></a>01755 <span class="comment">   Any received Type-5s are legal for an ABR, else illegal for IR.</span>
<a name="l01756"></a>01756 <span class="comment">   Received Type-7s are installed, by area, with incoming P-bit.  They</span>
<a name="l01757"></a>01757 <span class="comment">   are flooded; if the Elected NSSA Translator, then P-bit off.</span>
<a name="l01758"></a>01758 <span class="comment"></span>
<a name="l01759"></a>01759 <span class="comment">   Additionally, this ABR will place &quot;translated type-7&#39;s&quot; into the</span>
<a name="l01760"></a>01760 <span class="comment">   Type-5 LSDB in order to keep track of APPROVAL or not.</span>
<a name="l01761"></a>01761 <span class="comment"></span>
<a name="l01762"></a>01762 <span class="comment">   It will scan through every area, looking for Type-7 LSAs with P-Bit</span>
<a name="l01763"></a>01763 <span class="comment">   SET. The Type-7&#39;s are either AS-FLOODED &amp; 5-INSTALLED or</span>
<a name="l01764"></a>01764 <span class="comment">   AGGREGATED.  Later, the AGGREGATED LSAs are AS-FLOODED &amp;</span>
<a name="l01765"></a>01765 <span class="comment">   5-INSTALLED.</span>
<a name="l01766"></a>01766 <span class="comment"></span>
<a name="l01767"></a>01767 <span class="comment">   5-INSTALLED is into the Type-5 LSDB; Any UNAPPROVED Type-5 LSAs</span>
<a name="l01768"></a>01768 <span class="comment">   left over are FLUSHED and DISCARDED.</span>
<a name="l01769"></a>01769 <span class="comment"></span>
<a name="l01770"></a>01770 <span class="comment">   For External Calculations, any NSSA areas use the Type-7 AREA-LSDB,</span>
<a name="l01771"></a>01771 <span class="comment">   any ABR-non-NSSA areas use the Type-5 GLOBAL-LSDB. */</span>
<a name="l01772"></a>01772 
<a name="l01773"></a>01773 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01774"></a><a class="code" href="ospf__abr_8c.html#ae6c71422ba55c79a2932bf595a97c0cf">01774</a> <a class="code" href="ospf__abr_8c.html#ae6c71422ba55c79a2932bf595a97c0cf">ospf_abr_nssa_task</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>) <span class="comment">/* called only if any_nssa */</span>
<a name="l01775"></a>01775 {
<a name="l01776"></a>01776   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01777"></a>01777     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Check for NSSA-ABR Tasks():&quot;</span>);
<a name="l01778"></a>01778 
<a name="l01779"></a>01779   <span class="keywordflow">if</span> (! <a class="code" href="ospfd_8h.html#a66c6ce8df7e5b79426d9eca9f8ef6d27">IS_OSPF_ABR</a> (ospf))
<a name="l01780"></a>01780     <span class="keywordflow">return</span>;
<a name="l01781"></a>01781 
<a name="l01782"></a>01782   <span class="keywordflow">if</span> (! ospf-&gt;<a class="code" href="structospf.html#ad20715ef15a9c610284474aa9f1df3bc">anyNSSA</a>)
<a name="l01783"></a>01783     <span class="keywordflow">return</span>;
<a name="l01784"></a>01784 
<a name="l01785"></a>01785   <span class="comment">/* Each area must confirm TranslatorRole */</span>
<a name="l01786"></a>01786   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01787"></a>01787     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_nssa_task(): Start&quot;</span>);
<a name="l01788"></a>01788 
<a name="l01789"></a>01789   <span class="comment">/* For all Global Entries flagged &quot;local-translate&quot;, unset APPROVED */</span>
<a name="l01790"></a>01790   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01791"></a>01791     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_nssa_task(): unapprove translates&quot;</span>);
<a name="l01792"></a>01792 
<a name="l01793"></a>01793   <a class="code" href="ospf__abr_8c.html#a1030d4abaf7392a251388eb4deec5a40">ospf_abr_unapprove_translates</a> (ospf);
<a name="l01794"></a>01794 
<a name="l01795"></a>01795   <span class="comment">/* RESET all Ranges in every Area, same as summaries */</span>
<a name="l01796"></a>01796   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01797"></a>01797     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_nssa_task(): NSSA initialize aggregates&quot;</span>);
<a name="l01798"></a>01798   <a class="code" href="ospf__abr_8c.html#afca847ae061d1a858adb2d8482890747">ospf_abr_prepare_aggregates</a> (ospf);  <span class="comment">/*TURNED OFF just for now */</span>
<a name="l01799"></a>01799 
<a name="l01800"></a>01800   <span class="comment">/* For all NSSAs, Type-7s, translate to 5&#39;s, INSTALL/FLOOD, or</span>
<a name="l01801"></a>01801 <span class="comment">   *  Aggregate as Type-7</span>
<a name="l01802"></a>01802 <span class="comment">   * Install or Approve in Type-5 Global LSDB </span>
<a name="l01803"></a>01803 <span class="comment">   */</span>
<a name="l01804"></a>01804   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01805"></a>01805     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_nssa_task(): process translates&quot;</span>);
<a name="l01806"></a>01806   <a class="code" href="ospf__abr_8c.html#a1fee64e6344a4e913c2b0b3a55915c18">ospf_abr_process_nssa_translates</a> (ospf);
<a name="l01807"></a>01807 
<a name="l01808"></a>01808   <span class="comment">/* Translate/Send any &quot;ranged&quot; aggregates, and also 5-Install and</span>
<a name="l01809"></a>01809 <span class="comment">   *  Approve</span>
<a name="l01810"></a>01810 <span class="comment">   * Scan Type-7&#39;s for aggregates, translate to Type-5&#39;s,</span>
<a name="l01811"></a>01811 <span class="comment">   *  Install/Flood/Approve </span>
<a name="l01812"></a>01812 <span class="comment">   */</span>
<a name="l01813"></a>01813   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01814"></a>01814     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a>(<span class="stringliteral">&quot;ospf_abr_nssa_task(): send NSSA aggregates&quot;</span>);
<a name="l01815"></a>01815   <a class="code" href="ospf__abr_8c.html#abf8866750398700f04b54367eb25eb6e">ospf_abr_send_nssa_aggregates</a> (ospf);  <span class="comment">/*TURNED OFF FOR NOW */</span>
<a name="l01816"></a>01816 
<a name="l01817"></a>01817   <span class="comment">/* Send any NSSA defaults as Type-5 </span>
<a name="l01818"></a>01818 <span class="comment">   *if (IS_DEBUG_OSPF_NSSA)</span>
<a name="l01819"></a>01819 <span class="comment">   * zlog_debug (&quot;ospf_abr_nssa_task(): announce nssa defaults&quot;);</span>
<a name="l01820"></a>01820 <span class="comment">   *ospf_abr_announce_nssa_defaults (ospf);</span>
<a name="l01821"></a>01821 <span class="comment">   * havnt a clue what above is supposed to do.</span>
<a name="l01822"></a>01822 <span class="comment">   */</span>
<a name="l01823"></a>01823    
<a name="l01824"></a>01824   <span class="comment">/* Flush any unapproved previous translates from Global Data Base */</span>
<a name="l01825"></a>01825   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01826"></a>01826     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_nssa_task(): remove unapproved translates&quot;</span>);
<a name="l01827"></a>01827   <a class="code" href="ospf__abr_8c.html#a463b9e6cc146ca75d3a256d5672693d2">ospf_abr_remove_unapproved_translates</a> (ospf);
<a name="l01828"></a>01828 
<a name="l01829"></a>01829   <a class="code" href="ospf__abr_8c.html#a22e8f135a7aec6a8656007a9f9dabe77">ospf_abr_manage_discard_routes</a> (ospf); <span class="comment">/* same as normal...discard */</span>
<a name="l01830"></a>01830 
<a name="l01831"></a>01831   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a181c69f5e384d952ea4908799967534a">IS_DEBUG_OSPF_NSSA</a>)
<a name="l01832"></a>01832     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_nssa_task(): Stop&quot;</span>);
<a name="l01833"></a>01833 }
<a name="l01834"></a>01834 
<a name="l01835"></a>01835 <span class="comment">/* This is the function taking care about ABR stuff, i.e.</span>
<a name="l01836"></a>01836 <span class="comment">   summary-LSA origination and flooding. */</span>
<a name="l01837"></a>01837 <span class="keywordtype">void</span>
<a name="l01838"></a><a class="code" href="ospf__abr_8h.html#ab01815787aa07fa154894299fae89f9e">01838</a> <a class="code" href="ospf__abr_8c.html#a6542439707b08efb93c2cc58103b92cc">ospf_abr_task</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>)
<a name="l01839"></a>01839 {
<a name="l01840"></a>01840   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01841"></a>01841     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_task(): Start&quot;</span>);
<a name="l01842"></a>01842 
<a name="l01843"></a>01843   <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#a1fd3dcac2e3c565e23fce6884ffb097f">new_table</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> || ospf-&gt;<a class="code" href="structospf.html#a0c2e7f55defc0862ed00e1230cd53bd4">new_rtrs</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01844"></a>01844     {
<a name="l01845"></a>01845       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01846"></a>01846     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_task(): Routing tables are not yet ready&quot;</span>);
<a name="l01847"></a>01847       <span class="keywordflow">return</span>;
<a name="l01848"></a>01848     }
<a name="l01849"></a>01849 
<a name="l01850"></a>01850   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01851"></a>01851     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_task(): unapprove summaries&quot;</span>);
<a name="l01852"></a>01852   <a class="code" href="ospf__abr_8c.html#aa382b917196a24d77aea90e4db33d2f0">ospf_abr_unapprove_summaries</a> (ospf);
<a name="l01853"></a>01853 
<a name="l01854"></a>01854   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01855"></a>01855     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_task(): prepare aggregates&quot;</span>);
<a name="l01856"></a>01856   <a class="code" href="ospf__abr_8c.html#afca847ae061d1a858adb2d8482890747">ospf_abr_prepare_aggregates</a> (ospf);
<a name="l01857"></a>01857 
<a name="l01858"></a>01858   <span class="keywordflow">if</span> (<a class="code" href="ospfd_8h.html#a66c6ce8df7e5b79426d9eca9f8ef6d27">IS_OSPF_ABR</a> (ospf))
<a name="l01859"></a>01859     {
<a name="l01860"></a>01860       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01861"></a>01861     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_task(): process network RT&quot;</span>);
<a name="l01862"></a>01862       <a class="code" href="ospf__abr_8c.html#a08eac1d777543e2a5ceba05f86718365">ospf_abr_process_network_rt</a> (ospf, ospf-&gt;<a class="code" href="structospf.html#a1fd3dcac2e3c565e23fce6884ffb097f">new_table</a>);
<a name="l01863"></a>01863 
<a name="l01864"></a>01864       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01865"></a>01865     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_task(): process router RT&quot;</span>);
<a name="l01866"></a>01866       <a class="code" href="ospf__abr_8c.html#a6e95d221f7ea73125b05c9d5a40f8de4">ospf_abr_process_router_rt</a> (ospf, ospf-&gt;<a class="code" href="structospf.html#a0c2e7f55defc0862ed00e1230cd53bd4">new_rtrs</a>);
<a name="l01867"></a>01867 
<a name="l01868"></a>01868       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01869"></a>01869     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_task(): announce aggregates&quot;</span>);
<a name="l01870"></a>01870       <a class="code" href="ospf__abr_8c.html#a953934abb38ade526e393b844f7f02e7">ospf_abr_announce_aggregates</a> (ospf);
<a name="l01871"></a>01871 
<a name="l01872"></a>01872       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01873"></a>01873     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_task(): announce stub defaults&quot;</span>);
<a name="l01874"></a>01874       <a class="code" href="ospf__abr_8c.html#a69c79123dfe301c5ab7762850598a199">ospf_abr_announce_stub_defaults</a> (ospf);
<a name="l01875"></a>01875     }
<a name="l01876"></a>01876 
<a name="l01877"></a>01877   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01878"></a>01878     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_task(): remove unapproved summaries&quot;</span>);
<a name="l01879"></a>01879   <a class="code" href="ospf__abr_8c.html#a9f4b9ea2aea8eb7fc76a9386fabdc8ae">ospf_abr_remove_unapproved_summaries</a> (ospf);
<a name="l01880"></a>01880 
<a name="l01881"></a>01881   <a class="code" href="ospf__abr_8c.html#a22e8f135a7aec6a8656007a9f9dabe77">ospf_abr_manage_discard_routes</a> (ospf);
<a name="l01882"></a>01882 
<a name="l01883"></a>01883   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01884"></a>01884     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_abr_task(): Stop&quot;</span>);
<a name="l01885"></a>01885 }
<a name="l01886"></a>01886 
<a name="l01887"></a>01887 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l01888"></a><a class="code" href="ospf__abr_8c.html#a9b175266d10ffc6d268d313caa0b71fc">01888</a> <a class="code" href="ospf__abr_8c.html#a9b175266d10ffc6d268d313caa0b71fc">ospf_abr_task_timer</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l01889"></a>01889 {
<a name="l01890"></a>01890   <span class="keyword">struct </span><a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a> = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l01891"></a>01891 
<a name="l01892"></a>01892   ospf-&gt;<a class="code" href="structospf.html#adcdb64a50cde7f209f8c55df581d8bae">t_abr_task</a> = 0;
<a name="l01893"></a>01893 
<a name="l01894"></a>01894   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01895"></a>01895     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Running ABR task on timer&quot;</span>);
<a name="l01896"></a>01896 
<a name="l01897"></a>01897   <a class="code" href="ospf__abr_8c.html#aae7756099eb070db13009f36bfd7736f">ospf_check_abr_status</a> (ospf);
<a name="l01898"></a>01898   <a class="code" href="ospf__abr_8c.html#ae5cbeb1b329ace7f6ae14b4c02ffb9a5">ospf_abr_nssa_check_status</a> (ospf);
<a name="l01899"></a>01899 
<a name="l01900"></a>01900   <a class="code" href="ospf__abr_8c.html#a6542439707b08efb93c2cc58103b92cc">ospf_abr_task</a> (ospf);
<a name="l01901"></a>01901   <a class="code" href="ospf__abr_8c.html#ae6c71422ba55c79a2932bf595a97c0cf">ospf_abr_nssa_task</a> (ospf); <span class="comment">/* if nssa-abr, then scan Type-7 LSDB */</span>
<a name="l01902"></a>01902 
<a name="l01903"></a>01903   <span class="keywordflow">return</span> 0;
<a name="l01904"></a>01904 }
<a name="l01905"></a>01905 
<a name="l01906"></a>01906 <span class="keywordtype">void</span>
<a name="l01907"></a><a class="code" href="ospf__abr_8h.html#a6d0ac8ecc10ddadb7a3a683e06e3cdae">01907</a> <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>)
<a name="l01908"></a>01908 {
<a name="l01909"></a>01909   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01910"></a>01910     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Scheduling ABR task&quot;</span>);
<a name="l01911"></a>01911 
<a name="l01912"></a>01912   <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#adcdb64a50cde7f209f8c55df581d8bae">t_abr_task</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01913"></a>01913     ospf-&gt;<a class="code" href="structospf.html#adcdb64a50cde7f209f8c55df581d8bae">t_abr_task</a> = <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf__abr_8c.html#a9b175266d10ffc6d268d313caa0b71fc">ospf_abr_task_timer</a>,
<a name="l01914"></a>01914                      ospf, <a class="code" href="ospf__abr_8h.html#a571148084025182afb7a06ab669a5d74">OSPF_ABR_TASK_DELAY</a>);
<a name="l01915"></a>01915 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="ospf__abr_8c.html">ospf_abr.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:06 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
