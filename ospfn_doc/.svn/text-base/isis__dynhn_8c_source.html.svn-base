<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: isisd/isis_dynhn.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('isis__dynhn_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">isisd/isis_dynhn.c</div>  </div>
</div>
<div class="contents">
<a href="isis__dynhn_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * IS-IS Rout(e)ing protocol - isis_dynhn.c</span>
<a name="l00003"></a>00003 <span class="comment"> *                             Dynamic hostname cache</span>
<a name="l00004"></a>00004 <span class="comment"> * Copyright (C) 2001,2002   Sampo Saaristo</span>
<a name="l00005"></a>00005 <span class="comment"> *                           Tampere University of Technology      </span>
<a name="l00006"></a>00006 <span class="comment"> *                           Institute of Communications Engineering</span>
<a name="l00007"></a>00007 <span class="comment"> *</span>
<a name="l00008"></a>00008 <span class="comment"> * This program is free software; you can redistribute it and/or modify it </span>
<a name="l00009"></a>00009 <span class="comment"> * under the terms of the GNU General Public Licenseas published by the Free </span>
<a name="l00010"></a>00010 <span class="comment"> * Software Foundation; either version 2 of the License, or (at your option) </span>
<a name="l00011"></a>00011 <span class="comment"> * any later version.</span>
<a name="l00012"></a>00012 <span class="comment"> *</span>
<a name="l00013"></a>00013 <span class="comment"> * This program is distributed in the hope that it will be useful,but WITHOUT </span>
<a name="l00014"></a>00014 <span class="comment"> * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or </span>
<a name="l00015"></a>00015 <span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for </span>
<a name="l00016"></a>00016 <span class="comment"> * more details.</span>
<a name="l00017"></a>00017 <span class="comment"> *</span>
<a name="l00018"></a>00018 <span class="comment"> * You should have received a copy of the GNU General Public License along </span>
<a name="l00019"></a>00019 <span class="comment"> * with this program; if not, write to the Free Software Foundation, Inc., </span>
<a name="l00020"></a>00020 <span class="comment"> * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.</span>
<a name="l00021"></a>00021 <span class="comment"> */</span>
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;<a class="code" href="zebra_8h.html">zebra.h</a>&gt;</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="vty_8h.html">vty.h</a>&quot;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="linklist_8h.html">linklist.h</a>&quot;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="memory_8h.html">memory.h</a>&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="log_8h.html">log.h</a>&quot;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="stream_8h.html">stream.h</a>&quot;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="command_8h.html">command.h</a>&quot;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &quot;<a class="code" href="if_8h.html">if.h</a>&quot;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="thread_8h.html">thread.h</a>&quot;</span>
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 <span class="preprocessor">#include &quot;<a class="code" href="dict_8h.html">isisd/dict.h</a>&quot;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &quot;<a class="code" href="isis__constants_8h.html">isisd/isis_constants.h</a>&quot;</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include &quot;<a class="code" href="isis__common_8h.html">isisd/isis_common.h</a>&quot;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#include &quot;<a class="code" href="isis__flags_8h.html">isisd/isis_flags.h</a>&quot;</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include &quot;<a class="code" href="isis__circuit_8h.html">isisd/isis_circuit.h</a>&quot;</span>
<a name="l00039"></a>00039 <span class="preprocessor">#include &quot;<a class="code" href="isisd_8h.html">isisd/isisd.h</a>&quot;</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include &quot;<a class="code" href="isis__dynhn_8h.html">isisd/isis_dynhn.h</a>&quot;</span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &quot;<a class="code" href="isis__misc_8h.html">isisd/isis_misc.h</a>&quot;</span>
<a name="l00042"></a>00042 <span class="preprocessor">#include &quot;<a class="code" href="isis__constants_8h.html">isisd/isis_constants.h</a>&quot;</span>
<a name="l00043"></a>00043 
<a name="l00044"></a>00044 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structisis.html">isis</a> *<a class="code" href="isis__adjacency_8c.html#aa8cfdc8f7777fd242bd2c45f3a48b950">isis</a>;
<a name="l00045"></a>00045 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structthread__master.html">thread_master</a> *<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>;
<a name="l00046"></a>00046 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structhost.html">host</a> <a class="code" href="structhost.html">host</a>;
<a name="l00047"></a>00047 
<a name="l00048"></a><a class="code" href="isis__dynhn_8c.html#a0ae4f17326f39c93002bad254229ccaf">00048</a> <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *<a class="code" href="isis__dynhn_8c.html#a0ae4f17326f39c93002bad254229ccaf">dyn_cache</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00049"></a>00049 <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="isis__dynhn_8c.html#af1a13b16dc8c1798d76ddb4377318ad5">dyn_cache_cleanup</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *);
<a name="l00050"></a>00050 
<a name="l00051"></a>00051 <span class="keywordtype">void</span>
<a name="l00052"></a><a class="code" href="isis__dynhn_8h.html#a8ebb5af1b02d3d1f821a54b58b37f1fe">00052</a> <a class="code" href="isis__dynhn_8c.html#a8ebb5af1b02d3d1f821a54b58b37f1fe">dyn_cache_init</a> (<span class="keywordtype">void</span>)
<a name="l00053"></a>00053 {
<a name="l00054"></a>00054   dyn_cache = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l00055"></a>00055   <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, isis-&gt;<a class="code" href="structisis.html#ad437622efce9da387f72a956c22866ea">t_dync_clean</a>, <a class="code" href="isis__dynhn_8c.html#af1a13b16dc8c1798d76ddb4377318ad5">dyn_cache_cleanup</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 120);
<a name="l00056"></a>00056   <span class="keywordflow">return</span>;
<a name="l00057"></a>00057 }
<a name="l00058"></a>00058 
<a name="l00059"></a>00059 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00060"></a><a class="code" href="isis__dynhn_8c.html#af1a13b16dc8c1798d76ddb4377318ad5">00060</a> <a class="code" href="isis__dynhn_8c.html#af1a13b16dc8c1798d76ddb4377318ad5">dyn_cache_cleanup</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l00061"></a>00061 {
<a name="l00062"></a>00062   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
<a name="l00063"></a>00063   <span class="keyword">struct </span><a class="code" href="structisis__dynhn.html">isis_dynhn</a> *dyn;
<a name="l00064"></a>00064   time_t now = time (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l00065"></a>00065 
<a name="l00066"></a>00066   isis-&gt;<a class="code" href="structisis.html#ad437622efce9da387f72a956c22866ea">t_dync_clean</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00067"></a>00067 
<a name="l00068"></a>00068   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (dyn_cache, node, nnode, dyn))
<a name="l00069"></a>00069     {
<a name="l00070"></a>00070       <span class="keywordflow">if</span> ((now - dyn-&gt;<a class="code" href="structisis__dynhn.html#af13f43f189333901105d1557098900b5">refresh</a>) &lt; (<a class="code" href="isis__constants_8h.html#a22c87c874ff5382c5d082b860110e363">MAX_AGE</a> + 120))
<a name="l00071"></a>00071     <span class="keywordflow">continue</span>;
<a name="l00072"></a>00072 
<a name="l00073"></a>00073       <a class="code" href="linklist_8c.html#a44569d4d868c60e29b21409612a5df05">list_delete_node</a> (dyn_cache, node);
<a name="l00074"></a>00074       <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167baad18969966f972ad929da34a259ca444">MTYPE_ISIS_DYNHN</a>, dyn);
<a name="l00075"></a>00075     }
<a name="l00076"></a>00076 
<a name="l00077"></a>00077   <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, isis-&gt;<a class="code" href="structisis.html#ad437622efce9da387f72a956c22866ea">t_dync_clean</a>, <a class="code" href="isis__dynhn_8c.html#af1a13b16dc8c1798d76ddb4377318ad5">dyn_cache_cleanup</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 120);
<a name="l00078"></a>00078   <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
<a name="l00079"></a>00079 }
<a name="l00080"></a>00080 
<a name="l00081"></a>00081 <span class="keyword">struct </span><a class="code" href="structisis__dynhn.html">isis_dynhn</a> *
<a name="l00082"></a><a class="code" href="isis__dynhn_8h.html#af341024c92c783b9493cc98f7f04ec28">00082</a> <a class="code" href="isis__dynhn_8c.html#af341024c92c783b9493cc98f7f04ec28">dynhn_find_by_id</a> (u_char * <span class="keywordtype">id</span>)
<a name="l00083"></a>00083 {
<a name="l00084"></a>00084   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00085"></a>00085   <span class="keyword">struct </span><a class="code" href="structisis__dynhn.html">isis_dynhn</a> *dyn = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00086"></a>00086 
<a name="l00087"></a>00087   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (dyn_cache, node, dyn))
<a name="l00088"></a>00088     <span class="keywordflow">if</span> (<a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (dyn-&gt;<a class="code" href="structisis__dynhn.html#a9b18da9c6661ea969c917017ea10be2b">id</a>, <span class="keywordtype">id</span>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>) == 0)
<a name="l00089"></a>00089       <span class="keywordflow">return</span> dyn;
<a name="l00090"></a>00090 
<a name="l00091"></a>00091   <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00092"></a>00092 }
<a name="l00093"></a>00093 
<a name="l00094"></a>00094 <span class="keywordtype">void</span>
<a name="l00095"></a><a class="code" href="isis__dynhn_8h.html#ac659e83c583ea0c43ed5ac33dd8708b4">00095</a> <a class="code" href="isis__dynhn_8c.html#ac659e83c583ea0c43ed5ac33dd8708b4">isis_dynhn_insert</a> (u_char * <span class="keywordtype">id</span>, <span class="keyword">struct</span> <a class="code" href="structhostname.html">hostname</a> *<a class="code" href="structhostname.html">hostname</a>, <span class="keywordtype">int</span> <a class="code" href="structisis__dynhn.html#ad9d89075da88bad5910b9f8d9d3a7a26">level</a>)
<a name="l00096"></a>00096 {
<a name="l00097"></a>00097   <span class="keyword">struct </span><a class="code" href="structisis__dynhn.html">isis_dynhn</a> *dyn;
<a name="l00098"></a>00098 
<a name="l00099"></a>00099   dyn = <a class="code" href="isis__dynhn_8c.html#af341024c92c783b9493cc98f7f04ec28">dynhn_find_by_id</a> (<span class="keywordtype">id</span>);
<a name="l00100"></a>00100   <span class="keywordflow">if</span> (dyn)
<a name="l00101"></a>00101     {
<a name="l00102"></a>00102       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;dyn-&gt;<a class="code" href="structisis__dynhn.html#a96fbe0fb7c4de340a9ed9f191859ac34">name</a>, hostname, hostname-&gt;<a class="code" href="structhostname.html#af410706acabde261182a41b3579b04b6">namelen</a> + 1);
<a name="l00103"></a>00103       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (dyn-&gt;<a class="code" href="structisis__dynhn.html#a9b18da9c6661ea969c917017ea10be2b">id</a>, <span class="keywordtype">id</span>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l00104"></a>00104       dyn-&gt;<a class="code" href="structisis__dynhn.html#af13f43f189333901105d1557098900b5">refresh</a> = time (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l00105"></a>00105       <span class="keywordflow">return</span>;
<a name="l00106"></a>00106     }
<a name="l00107"></a>00107   dyn = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167baad18969966f972ad929da34a259ca444">MTYPE_ISIS_DYNHN</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structisis__dynhn.html">isis_dynhn</a>));
<a name="l00108"></a>00108   <span class="keywordflow">if</span> (!dyn)
<a name="l00109"></a>00109     {
<a name="l00110"></a>00110       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;isis_dynhn_insert(): out of memory!&quot;</span>);
<a name="l00111"></a>00111       <span class="keywordflow">return</span>;
<a name="l00112"></a>00112     }
<a name="l00113"></a>00113 
<a name="l00114"></a>00114   <span class="comment">/* we also copy the length */</span>
<a name="l00115"></a>00115   <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;dyn-&gt;<a class="code" href="structisis__dynhn.html#a96fbe0fb7c4de340a9ed9f191859ac34">name</a>, hostname, hostname-&gt;<a class="code" href="structhostname.html#af410706acabde261182a41b3579b04b6">namelen</a> + 1);
<a name="l00116"></a>00116   <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (dyn-&gt;<a class="code" href="structisis__dynhn.html#a9b18da9c6661ea969c917017ea10be2b">id</a>, <span class="keywordtype">id</span>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l00117"></a>00117   dyn-&gt;<a class="code" href="structisis__dynhn.html#af13f43f189333901105d1557098900b5">refresh</a> = time (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l00118"></a>00118   dyn-&gt;<a class="code" href="structisis__dynhn.html#ad9d89075da88bad5910b9f8d9d3a7a26">level</a> = <a class="code" href="structisis__dynhn.html#ad9d89075da88bad5910b9f8d9d3a7a26">level</a>;
<a name="l00119"></a>00119 
<a name="l00120"></a>00120   <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (dyn_cache, dyn);
<a name="l00121"></a>00121 
<a name="l00122"></a>00122   <span class="keywordflow">return</span>;
<a name="l00123"></a>00123 }
<a name="l00124"></a>00124 
<a name="l00125"></a>00125 <span class="comment">/*</span>
<a name="l00126"></a>00126 <span class="comment"> * Level  System ID      Dynamic Hostname  (notag)</span>
<a name="l00127"></a>00127 <span class="comment"> *  2     0000.0000.0001 foo-gw</span>
<a name="l00128"></a>00128 <span class="comment"> *  2     0000.0000.0002 bar-gw</span>
<a name="l00129"></a>00129 <span class="comment"> *      * 0000.0000.0004 this-gw</span>
<a name="l00130"></a>00130 <span class="comment"> */</span>
<a name="l00131"></a>00131 <span class="keywordtype">void</span>
<a name="l00132"></a><a class="code" href="isis__dynhn_8h.html#aef1f9503e775caf0c404d37c00800e5a">00132</a> <a class="code" href="isis__dynhn_8c.html#aef1f9503e775caf0c404d37c00800e5a">dynhn_print_all</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00133"></a>00133 {
<a name="l00134"></a>00134   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00135"></a>00135   <span class="keyword">struct </span><a class="code" href="structisis__dynhn.html">isis_dynhn</a> *dyn;
<a name="l00136"></a>00136 
<a name="l00137"></a>00137   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;Level  System ID      Dynamic Hostname%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00138"></a>00138   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (dyn_cache, node, dyn))
<a name="l00139"></a>00139     {
<a name="l00140"></a>00140       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%-7d&quot;</span>, dyn-&gt;<a class="code" href="structisis__dynhn.html#ad9d89075da88bad5910b9f8d9d3a7a26">level</a>);
<a name="l00141"></a>00141       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%-15s%-15s%s&quot;</span>, <a class="code" href="isis__misc_8c.html#aabccf63144f92eecd0eb77f24ee98529">sysid_print</a> (dyn-&gt;<a class="code" href="structisis__dynhn.html#a9b18da9c6661ea969c917017ea10be2b">id</a>), dyn-&gt;<a class="code" href="structisis__dynhn.html#a96fbe0fb7c4de340a9ed9f191859ac34">name</a>.<a class="code" href="structhostname.html#a0a14b55c4a1b6d672adfaa81b95936f3">name</a>,
<a name="l00142"></a>00142            <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00143"></a>00143     }
<a name="l00144"></a>00144 
<a name="l00145"></a>00145   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;     * %s %s%s&quot;</span>, <a class="code" href="isis__misc_8c.html#aabccf63144f92eecd0eb77f24ee98529">sysid_print</a> (isis-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>), <a class="code" href="isis__misc_8c.html#a5fc76e0c3f105d5a4ff9a9396e0fdbd7">unix_hostname</a> (),
<a name="l00146"></a>00146        <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00147"></a>00147   <span class="keywordflow">return</span>;
<a name="l00148"></a>00148 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="isis__dynhn_8c.html">isis_dynhn.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:04 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
