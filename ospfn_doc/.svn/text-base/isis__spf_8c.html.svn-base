<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: isisd/isis_spf.c File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('isis__spf_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">isisd/isis_spf.c File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="zebra_8h_source.html">zebra.h</a>&gt;</code><br/>
<code>#include &quot;<a class="el" href="thread_8h_source.html">thread.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="linklist_8h_source.html">linklist.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="vty_8h_source.html">vty.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="log_8h_source.html">log.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="command_8h_source.html">command.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="memory_8h_source.html">memory.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="prefix_8h_source.html">prefix.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="hash_8h_source.html">hash.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="if_8h_source.html">if.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="table_8h_source.html">table.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__constants_8h_source.html">isis_constants.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__common_8h_source.html">isis_common.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="dict_8h_source.html">dict.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isisd_8h_source.html">isisd.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__misc_8h_source.html">isis_misc.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__adjacency_8h_source.html">isis_adjacency.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__circuit_8h_source.html">isis_circuit.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__tlv_8h_source.html">isis_tlv.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__pdu_8h_source.html">isis_pdu.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__lsp_8h_source.html">isis_lsp.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__dynhn_8h_source.html">isis_dynhn.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__spf_8h_source.html">isis_spf.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__route_8h_source.html">isis_route.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__csm_8h_source.html">isis_csm.h</a>&quot;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for isis_spf.c:</div>
<div class="dyncontent">
<div class="center"><img src="isis__spf_8c__incl.png" border="0" usemap="#isisd_2isis__spf_8c" alt=""/></div>
<map name="isisd_2isis__spf_8c" id="isisd_2isis__spf_8c">
<area shape="rect" id="node3" href="zebra_8h.html" title="zebra.h" alt="" coords="1125,80,1192,107"/><area shape="rect" id="node53" href="thread_8h.html" title="thread.h" alt="" coords="2404,229,2476,256"/><area shape="rect" id="node55" href="linklist_8h.html" title="linklist.h" alt="" coords="2857,155,2927,181"/><area shape="rect" id="node57" href="vty_8h.html" title="vty.h" alt="" coords="2490,155,2541,181"/><area shape="rect" id="node60" href="log_8h.html" title="log.h" alt="" coords="2501,229,2552,256"/><area shape="rect" id="node64" href="command_8h.html" title="command.h" alt="" coords="2529,80,2620,107"/><area shape="rect" id="node67" href="memory_8h.html" title="memory.h" alt="" coords="2747,80,2829,107"/><area shape="rect" id="node69" href="prefix_8h.html" title="prefix.h" alt="" coords="2854,80,2921,107"/><area shape="rect" id="node71" href="hash_8h.html" title="hash.h" alt="" coords="2947,80,3008,107"/><area shape="rect" id="node73" href="if_8h.html" title="if.h" alt="" coords="3032,80,3072,107"/><area shape="rect" id="node76" href="table_8h.html" title="table.h" alt="" coords="3096,80,3160,107"/><area shape="rect" id="node78" href="isis__constants_8h.html" title="isis_constants.h" alt="" coords="3184,80,3304,107"/><area shape="rect" id="node80" href="isis__common_8h.html" title="isis_common.h" alt="" coords="3328,80,3440,107"/><area shape="rect" id="node82" href="dict_8h.html" title="dict.h" alt="" coords="3464,80,3520,107"/><area shape="rect" id="node84" href="isisd_8h.html" title="isisd.h" alt="" coords="3544,80,3605,107"/><area shape="rect" id="node86" href="isis__misc_8h.html" title="isis_misc.h" alt="" coords="3629,80,3717,107"/><area shape="rect" id="node88" href="isis__adjacency_8h.html" title="isis_adjacency.h" alt="" coords="3741,80,3864,107"/><area shape="rect" id="node90" href="isis__circuit_8h.html" title="isis_circuit.h" alt="" coords="3888,80,3984,107"/><area shape="rect" id="node92" href="isis__tlv_8h.html" title="isis_tlv.h" alt="" coords="4008,80,4083,107"/><area shape="rect" id="node94" href="isis__pdu_8h.html" title="isis_pdu.h" alt="" coords="4107,80,4189,107"/><area shape="rect" id="node96" href="isis__lsp_8h.html" title="isis_lsp.h" alt="" coords="4214,80,4292,107"/><area shape="rect" id="node98" href="isis__dynhn_8h.html" title="isis_dynhn.h" alt="" coords="4317,80,4413,107"/><area shape="rect" id="node100" href="isis__spf_8h.html" title="isis_spf.h" alt="" coords="4438,80,4516,107"/><area shape="rect" id="node102" href="isis__route_8h.html" title="isis_route.h" alt="" coords="4541,80,4632,107"/><area shape="rect" id="node104" href="isis__csm_8h.html" title="isis_csm.h" alt="" coords="4657,80,4743,107"/></map>
</div>
</div>
<p><a href="isis__spf_8c_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#a4520566d073115fc9dc2f9d50ca22b69">isis_run_spf_l1</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="structthread.html">thread</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#a4c4facf36367a44c51978f37f2eca79f">isis_run_spf_l2</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="structthread.html">thread</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#aa8fc65e3edbbc537529f1c4b8461dcf3">remove_excess_adjs</a> (struct <a class="el" href="structlist.html">list</a> *adjs)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structisis__spftree.html">isis_spftree</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#a87bc34e97dbd8394892007132903d0e8">isis_spftree_new</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#a0cd21b0d39b2dabae3d8b273a75b9fb9">isis_vertex_del</a> (struct <a class="el" href="structisis__vertex.html">isis_vertex</a> *<a class="el" href="structvertex.html">vertex</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#a5e76ff990e90121ffd8e75817238607d">spftree_area_init</a> (struct <a class="el" href="structisis__area.html">isis_area</a> *area)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structisis__vertex.html">isis_vertex</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#a951e0519c84c47d6c071824958605dde">isis_vertex_new</a> (void *<a class="el" href="prefix_8h.html#a68c0ada54c6414ef00bca919465286ac">id</a>, enum <a class="el" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadc">vertextype</a> vtype)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#ace8c6b0e2357a48767ca25194ef20295">isis_spf_add_self</a> (struct <a class="el" href="structisis__spftree.html">isis_spftree</a> *spftree, struct <a class="el" href="structisis__area.html">isis_area</a> *area, int level)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structisis__vertex.html">isis_vertex</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#a2518d1c61e9645d59df254f0d1e57c98">isis_find_vertex</a> (struct <a class="el" href="structlist.html">list</a> *<a class="el" href="structlist.html">list</a>, void *<a class="el" href="prefix_8h.html#a68c0ada54c6414ef00bca919465286ac">id</a>, enum <a class="el" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadc">vertextype</a> vtype)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structisis__vertex.html">isis_vertex</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#a675ae1b4432f4b54c3e01f9010f14772">isis_spf_add2tent</a> (struct <a class="el" href="structisis__spftree.html">isis_spftree</a> *spftree, enum <a class="el" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadc">vertextype</a> vtype, void *<a class="el" href="prefix_8h.html#a68c0ada54c6414ef00bca919465286ac">id</a>, struct <a class="el" href="structisis__adjacency.html">isis_adjacency</a> *adj, u_int32_t cost, int depth, int family)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structisis__vertex.html">isis_vertex</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#acf6df462d44d1eaca9a45ff3faf500e7">isis_spf_add_local</a> (struct <a class="el" href="structisis__spftree.html">isis_spftree</a> *spftree, enum <a class="el" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadc">vertextype</a> vtype, void *<a class="el" href="prefix_8h.html#a68c0ada54c6414ef00bca919465286ac">id</a>, struct <a class="el" href="structisis__adjacency.html">isis_adjacency</a> *adj, u_int32_t cost, int family)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#a8ce1d0bc17c2992001e52e80072c23b6">process_N</a> (struct <a class="el" href="structisis__spftree.html">isis_spftree</a> *spftree, enum <a class="el" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadc">vertextype</a> vtype, void *<a class="el" href="prefix_8h.html#a68c0ada54c6414ef00bca919465286ac">id</a>, u_int16_t dist, u_int16_t depth, struct <a class="el" href="structisis__adjacency.html">isis_adjacency</a> *adj, int family)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#a9af0930aa8513cf3ca85deab22e1a2b3">isis_spf_process_lsp</a> (struct <a class="el" href="structisis__spftree.html">isis_spftree</a> *spftree, struct <a class="el" href="structisis__lsp.html">isis_lsp</a> *lsp, uint32_t cost, uint16_t depth, int family)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#ac2123d57c5010928d7a3685589d0eac9">isis_spf_process_pseudo_lsp</a> (struct <a class="el" href="structisis__spftree.html">isis_spftree</a> *spftree, struct <a class="el" href="structisis__lsp.html">isis_lsp</a> *lsp, uint16_t cost, uint16_t depth, int family)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#af0dd2970c85e1c26cabf64504256b664">isis_spf_preload_tent</a> (struct <a class="el" href="structisis__spftree.html">isis_spftree</a> *spftree, struct <a class="el" href="structisis__area.html">isis_area</a> *area, int level, int family)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#a033281371ca01881f57ba7f61a29dc04">add_to_paths</a> (struct <a class="el" href="structisis__spftree.html">isis_spftree</a> *spftree, struct <a class="el" href="structisis__vertex.html">isis_vertex</a> *<a class="el" href="structvertex.html">vertex</a>, struct <a class="el" href="structisis__area.html">isis_area</a> *area, int level)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#aab44d009968d88ebde5ea447a8bb91a6">init_spt</a> (struct <a class="el" href="structisis__spftree.html">isis_spftree</a> *spftree)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#add02c502bceaaadcb051fb31c84e215f">isis_run_spf</a> (struct <a class="el" href="structisis__area.html">isis_area</a> *area, int level, int family)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#a07d72d64d2b651d969695c1f26031678">isis_spf_schedule</a> (struct <a class="el" href="structisis__area.html">isis_area</a> *area, int level)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#a9eb38ec938541e088807bc46ba6558d1">isis_print_paths</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>, struct <a class="el" href="structlist.html">list</a> *paths)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#abf6ddc8d1d60c8bf903b9c6f2222d8a2">DEFUN</a> (show_isis_topology, show_isis_topology_cmd,&quot;show <a class="el" href="structisis.html">isis</a> topology&quot;, SHOW_STR&quot;IS-IS information\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IS-IS paths to Intermediate Systems\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#a9a221a046894931a8bc9f6c7c96c6dd7">DEFUN</a> (show_isis_topology_l1, show_isis_topology_l1_cmd,&quot;show <a class="el" href="structisis.html">isis</a> topology level-1&quot;, SHOW_STR&quot;IS-IS information\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IS-IS paths to Intermediate Systems\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Paths to all level-1 routers <a class="el" href="spgrid_8c.html#a89e1c555af4b92f6ee8d6f112f47ed12">in</a> the area\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#a432b30b15f54719de05c1cdeda446aeb">DEFUN</a> (show_isis_topology_l2, show_isis_topology_l2_cmd,&quot;show <a class="el" href="structisis.html">isis</a> topology level-2&quot;, SHOW_STR&quot;IS-IS information\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IS-IS paths to Intermediate Systems\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Paths to all level-2 routers <a class="el" href="spgrid_8c.html#a89e1c555af4b92f6ee8d6f112f47ed12">in</a> the domain\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#af3ff241b5c3bf5bdee6f7cc9374e52d2">isis_spf_cmds_init</a> ()</td></tr>
<tr><td colspan="2"><h2><a name="var-members"></a>
Variables</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structisis.html">isis</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#aa8cfdc8f7777fd242bd2c45f3a48b950">isis</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structthread__master.html">thread_master</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structhost.html">host</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__spf_8c.html#ab4e4c95630aff8de923b0b7f25dec6e7">host</a></td></tr>
</table>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a033281371ca01881f57ba7f61a29dc04"></a><!-- doxytag: member="isis_spf.c::add_to_paths" ref="a033281371ca01881f57ba7f61a29dc04" args="(struct isis_spftree *spftree, struct isis_vertex *vertex, struct isis_area *area, int level)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void add_to_paths </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__spftree.html">isis_spftree</a> *&#160;</td>
          <td class="paramname"><em>spftree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structisis__vertex.html">isis_vertex</a> *&#160;</td>
          <td class="paramname"><em>vertex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structisis__area.html">isis_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l00940">940</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
<span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<span class="preprocessor"></span>  u_char buff[BUFSIZ];
<span class="preprocessor">#endif </span><span class="comment">/* EXTREME_DEBUG */</span>
  <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>, vertex);

<span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<span class="preprocessor"></span>  <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Spf: added  %s %s depth %d dist %d to PATHS&quot;</span>,
          vtype2string (vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a>), vid2string (vertex, buff),
          vertex-&gt;<a class="code" href="structisis__vertex.html#a54212ccd6e7b1ca331f190fa4e252735">depth</a>, vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>);
<span class="preprocessor">#endif </span><span class="comment">/* EXTREME_DEBUG */</span>
  <span class="keywordflow">if</span> (vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a> &gt; <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca419bd242149145636d0c8ffa096893a0">VTYPE_ES</a>)
    {
      <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a>) &gt; 0)
    <a class="code" href="isis__route_8c.html#aab9698edd234fa804e2ad73832f36e54">isis_route_create</a> ((<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#adc4a56ae6383023d2654e44ef283a968">prefix</a>, vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>,
               vertex-&gt;<a class="code" href="structisis__vertex.html#a54212ccd6e7b1ca331f190fa4e252735">depth</a>, vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a>, area, level);
      <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#ae2c9cda71363e7c1ac3c8113551539b6">DEBUG_SPF_EVENTS</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Spf: no adjacencies do not install route&quot;</span>);
    }

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="abf6ddc8d1d60c8bf903b9c6f2222d8a2"></a><!-- doxytag: member="isis_spf.c::DEFUN" ref="abf6ddc8d1d60c8bf903b9c6f2222d8a2" args="(show_isis_topology, show_isis_topology_cmd,&quot;show isis topology&quot;, SHOW_STR&quot;IS&#45;IS information\n&quot;&quot;IS&#45;IS paths to Intermediate Systems\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">show_isis_topology&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">show_isis_topology_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;show <a class="el" href="structisis.html">isis</a> topology&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SHOW_STR&quot;IS-IS information\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IS-IS paths to Intermediate Systems\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l01358">1358</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
  <span class="keywordtype">int</span> level;

  <span class="keywordflow">if</span> (!<a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a0898d0cb839d3d63fc69f5a4cd02e512">area_list</a> || <a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a0898d0cb839d3d63fc69f5a4cd02e512">area_list</a>-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a> == 0)
    <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a0898d0cb839d3d63fc69f5a4cd02e512">area_list</a>, node, area))
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Area %s:%s&quot;</span>, area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a> ? area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a> : <span class="stringliteral">&quot;null&quot;</span>,
           <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

      <span class="keywordflow">for</span> (level = 0; level &lt; <a class="code" href="isis__constants_8h.html#a75b03ae2a0d626c94fe847f7d790f4af">ISIS_LEVELS</a>; level++)
    {
      <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a0b7b9b7b8a3eb903a0deb5c20791d761">ip_circuits</a> &gt; 0 &amp;&amp; area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[level]
          &amp;&amp; area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[level]-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a> &gt; 0)
        {
          <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;IS-IS paths to level-%d routers that speak IP%s&quot;</span>,
               level + 1, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
          <a class="code" href="isis__spf_8c.html#a9eb38ec938541e088807bc46ba6558d1">isis_print_paths</a> (<a class="code" href="structvty.html">vty</a>, area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[level]-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>);
        }
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>      <span class="keywordflow">if</span> (area-&gt;ipv6_circuits &gt; 0 &amp;&amp; area-&gt;spftree6[level]
          &amp;&amp; area-&gt;spftree6[level]-&gt;paths-&gt;count &gt; 0)
        {
          <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>,
               <span class="stringliteral">&quot;IS-IS paths to level-%d routers that speak IPv6%s&quot;</span>,
               level + 1, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
          <a class="code" href="isis__spf_8c.html#a9eb38ec938541e088807bc46ba6558d1">isis_print_paths</a> (<a class="code" href="structvty.html">vty</a>, area-&gt;spftree6[level]-&gt;paths);
        }
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
    }
    }

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9a221a046894931a8bc9f6c7c96c6dd7"></a><!-- doxytag: member="isis_spf.c::DEFUN" ref="a9a221a046894931a8bc9f6c7c96c6dd7" args="(show_isis_topology_l1, show_isis_topology_l1_cmd,&quot;show isis topology level&#45;1&quot;, SHOW_STR&quot;IS&#45;IS information\n&quot;&quot;IS&#45;IS paths to Intermediate Systems\n&quot;&quot;Paths to all level&#45;1 routers in the area\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">show_isis_topology_l1&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">show_isis_topology_l1_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;show <a class="el" href="structisis.html">isis</a> topology level-1&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SHOW_STR&quot;IS-IS information\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IS-IS paths to Intermediate Systems\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Paths to all level-1 routers <a class="el" href="spgrid_8c.html#a89e1c555af4b92f6ee8d6f112f47ed12">in</a> the area\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l01402">1402</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;

  <span class="keywordflow">if</span> (!<a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a0898d0cb839d3d63fc69f5a4cd02e512">area_list</a> || <a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a0898d0cb839d3d63fc69f5a4cd02e512">area_list</a>-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a> == 0)
    <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a0898d0cb839d3d63fc69f5a4cd02e512">area_list</a>, node, area))
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Area %s:%s&quot;</span>, area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a> ? area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a> : <span class="stringliteral">&quot;null&quot;</span>,
           <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

      <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a0b7b9b7b8a3eb903a0deb5c20791d761">ip_circuits</a> &gt; 0 &amp;&amp; area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[0]
      &amp;&amp; area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[0]-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a> &gt; 0)
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;IS-IS paths to level-1 routers that speak IP%s&quot;</span>,
           <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <a class="code" href="isis__spf_8c.html#a9eb38ec938541e088807bc46ba6558d1">isis_print_paths</a> (<a class="code" href="structvty.html">vty</a>, area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[0]-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>);
    }
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>      <span class="keywordflow">if</span> (area-&gt;ipv6_circuits &gt; 0 &amp;&amp; area-&gt;spftree6[0]
      &amp;&amp; area-&gt;spftree6[0]-&gt;paths-&gt;count &gt; 0)
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;IS-IS paths to level-1 routers that speak IPv6%s&quot;</span>,
           <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <a class="code" href="isis__spf_8c.html#a9eb38ec938541e088807bc46ba6558d1">isis_print_paths</a> (<a class="code" href="structvty.html">vty</a>, area-&gt;spftree6[0]-&gt;paths);
    }
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
    }

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a432b30b15f54719de05c1cdeda446aeb"></a><!-- doxytag: member="isis_spf.c::DEFUN" ref="a432b30b15f54719de05c1cdeda446aeb" args="(show_isis_topology_l2, show_isis_topology_l2_cmd,&quot;show isis topology level&#45;2&quot;, SHOW_STR&quot;IS&#45;IS information\n&quot;&quot;IS&#45;IS paths to Intermediate Systems\n&quot;&quot;Paths to all level&#45;2 routers in the domain\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">show_isis_topology_l2&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">show_isis_topology_l2_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;show <a class="el" href="structisis.html">isis</a> topology level-2&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SHOW_STR&quot;IS-IS information\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IS-IS paths to Intermediate Systems\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Paths to all level-2 routers <a class="el" href="spgrid_8c.html#a89e1c555af4b92f6ee8d6f112f47ed12">in</a> the domain\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l01442">1442</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;

  <span class="keywordflow">if</span> (!<a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a0898d0cb839d3d63fc69f5a4cd02e512">area_list</a> || <a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a0898d0cb839d3d63fc69f5a4cd02e512">area_list</a>-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a> == 0)
    <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a0898d0cb839d3d63fc69f5a4cd02e512">area_list</a>, node, area))
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Area %s:%s&quot;</span>, area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a> ? area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a> : <span class="stringliteral">&quot;null&quot;</span>,
           <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

      <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a0b7b9b7b8a3eb903a0deb5c20791d761">ip_circuits</a> &gt; 0 &amp;&amp; area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[1]
      &amp;&amp; area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[1]-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a> &gt; 0)
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;IS-IS paths to level-2 routers that speak IP%s&quot;</span>,
           <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <a class="code" href="isis__spf_8c.html#a9eb38ec938541e088807bc46ba6558d1">isis_print_paths</a> (<a class="code" href="structvty.html">vty</a>, area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[1]-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>);
    }
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>      <span class="keywordflow">if</span> (area-&gt;ipv6_circuits &gt; 0 &amp;&amp; area-&gt;spftree6[1]
      &amp;&amp; area-&gt;spftree6[1]-&gt;paths-&gt;count &gt; 0)
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;IS-IS paths to level-2 routers that speak IPv6%s&quot;</span>,
           <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <a class="code" href="isis__spf_8c.html#a9eb38ec938541e088807bc46ba6558d1">isis_print_paths</a> (<a class="code" href="structvty.html">vty</a>, area-&gt;spftree6[1]-&gt;paths);
    }
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
    }

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aab44d009968d88ebde5ea447a8bb91a6"></a><!-- doxytag: member="isis_spf.c::init_spt" ref="aab44d009968d88ebde5ea447a8bb91a6" args="(struct isis_spftree *spftree)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void init_spt </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__spftree.html">isis_spftree</a> *&#160;</td>
          <td class="paramname"><em>spftree</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l00966">966</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = spftree-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = (void (*)(<span class="keywordtype">void</span> *)) <a class="code" href="isis__spf_8c.html#a0cd21b0d39b2dabae3d8b273a75b9fb9">isis_vertex_del</a>;
  <a class="code" href="linklist_8c.html#acd6daa4be8ab3f175376e63c9d9c9500">list_delete_all_node</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>);
  <a class="code" href="linklist_8c.html#acd6daa4be8ab3f175376e63c9d9c9500">list_delete_all_node</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>);
  spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = spftree-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a2518d1c61e9645d59df254f0d1e57c98"></a><!-- doxytag: member="isis_spf.c::isis_find_vertex" ref="a2518d1c61e9645d59df254f0d1e57c98" args="(struct list *list, void *id, enum vertextype vtype)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static struct <a class="el" href="structisis__vertex.html">isis_vertex</a>* isis_find_vertex </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum <a class="el" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadc">vertextype</a>&#160;</td>
          <td class="paramname"><em>vtype</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static, read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l00345">345</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structisis__vertex.html">isis_vertex</a> *<a class="code" href="structvertex.html">vertex</a>;
  <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> *p1, *p2;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (list, node, vertex))
    {
      <span class="keywordflow">if</span> (vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a> != vtype)
    <span class="keywordflow">continue</span>;
      <span class="keywordflow">switch</span> (vtype)
    {
    <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca419bd242149145636d0c8ffa096893a0">VTYPE_ES</a>:
    <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcab49954312767a3354f9436d9e8b55879">VTYPE_NONPSEUDO_IS</a>:
    <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca1e82ec051fbdd19aaffa0360854f9b68">VTYPE_NONPSEUDO_TE_IS</a>:
      <span class="keywordflow">if</span> (<a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> ((u_char *) <span class="keywordtype">id</span>, vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>) == 0)
        <span class="keywordflow">return</span> vertex;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcafb01d0d49c5c5472181534c92dd6f7eb">VTYPE_PSEUDO_IS</a>:
    <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca402426f39ccc62ae0920b3966eb86e03">VTYPE_PSEUDO_TE_IS</a>:
      <span class="keywordflow">if</span> (<a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> ((u_char *) <span class="keywordtype">id</span>, vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 1) == 0)
        <span class="keywordflow">return</span> vertex;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca0cb69e553ae6caee606be4d93671b745">VTYPE_IPREACH_INTERNAL</a>:
    <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcac5b5e03da1298700e72fc9b7e58bb1da">VTYPE_IPREACH_EXTERNAL</a>:
    <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcabf3d2d72b3c42d753602198f061abd53">VTYPE_IPREACH_TE</a>:
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>    <span class="keywordflow">case</span> VTYPE_IP6REACH_INTERNAL:
    <span class="keywordflow">case</span> VTYPE_IP6REACH_EXTERNAL:
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
      p1 = (<span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> *) <span class="keywordtype">id</span>;
      p2 = (<span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> *) &amp;vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>;
      if (p1-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == p2-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> &amp;&amp; p1-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> == p2-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> &amp;&amp;
          <a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (&amp;p1-&gt;u.<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>, &amp;p2-&gt;u.<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>,
              <a class="code" href="bgpd_8h.html#a472145011d944606a257487e80cc3ace">PSIZE</a> (p1-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>)) == 0)
        <span class="keywordflow">return</span> vertex;
      <span class="keywordflow">break</span>;
    }
    }

  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9eb38ec938541e088807bc46ba6558d1"></a><!-- doxytag: member="isis_spf.c::isis_print_paths" ref="a9eb38ec938541e088807bc46ba6558d1" args="(struct vty *vty, struct list *paths)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void isis_print_paths </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>paths</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l01307">1307</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structisis__vertex.html">isis_vertex</a> *<a class="code" href="structvertex.html">vertex</a>;
  <span class="keyword">struct </span><a class="code" href="structisis__dynhn.html">isis_dynhn</a> *dyn, *nh_dyn = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keyword">struct </span><a class="code" href="structisis__adjacency.html">isis_adjacency</a> *adj;
<span class="preprocessor">#if 0</span>
<span class="preprocessor"></span>  u_char buff[255];
<span class="preprocessor">#endif </span><span class="comment">/* 0 */</span>

  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;System Id            Metric     Next-Hop&quot;</span>
       <span class="stringliteral">&quot;             Interface   SNPA%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (paths, node, vertex))
    {
      <span class="keywordflow">if</span> (vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a> != <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcab49954312767a3354f9436d9e8b55879">VTYPE_NONPSEUDO_IS</a>)
    <span class="keywordflow">continue</span>;
      <span class="keywordflow">if</span> (<a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>, <a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>) == 0)
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s             --%s&quot;</span>, <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#ae29a96977a9350ec0d4323ccd38ebc9b">name</a>?<a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#ae29a96977a9350ec0d4323ccd38ebc9b">name</a>:<span class="stringliteral">&quot;&quot;</span>,
           <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    }
      <span class="keywordflow">else</span>
    {
      dyn = <a class="code" href="isis__dynhn_8c.html#af341024c92c783b9493cc98f7f04ec28">dynhn_find_by_id</a> ((u_char *) vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>);
      adj = <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (<a class="code" href="linklist_8h.html#a3d4492ca03b023aeecd4d6b0cdaa16fb">listhead</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a>));
      <span class="keywordflow">if</span> (adj)
        {
          nh_dyn = <a class="code" href="isis__dynhn_8c.html#af341024c92c783b9493cc98f7f04ec28">dynhn_find_by_id</a> (adj-&gt;<a class="code" href="structisis__adjacency.html#a7b23942ae5652d5cf59b263f131c2038">sysid</a>);
          <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%-20s %-10u %-20s %-11s %-5s%s&quot;</span>,
               (dyn != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) ? dyn-&gt;<a class="code" href="structisis__dynhn.html#a96fbe0fb7c4de340a9ed9f191859ac34">name</a>.<a class="code" href="structhostname.html#a0a14b55c4a1b6d672adfaa81b95936f3">name</a> :
               (<span class="keyword">const</span> u_char *)<a class="code" href="isis__misc_8c.html#a3a0e7f92008e3167e2c09b8761d06766">rawlspid_print</a> ((u_char *) vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>),
               vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>, (nh_dyn != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) ? nh_dyn-&gt;<a class="code" href="structisis__dynhn.html#a96fbe0fb7c4de340a9ed9f191859ac34">name</a>.<a class="code" href="structhostname.html#a0a14b55c4a1b6d672adfaa81b95936f3">name</a> :
               (<span class="keyword">const</span> u_char *)<a class="code" href="isis__misc_8c.html#a3a0e7f92008e3167e2c09b8761d06766">rawlspid_print</a> (adj-&gt;<a class="code" href="structisis__adjacency.html#a7b23942ae5652d5cf59b263f131c2038">sysid</a>),
               adj-&gt;<a class="code" href="structisis__adjacency.html#a29d8beb7bedcecb2c6c2f7112ba5d072">circuit</a>-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>,
               <a class="code" href="isis__misc_8c.html#a9ff6d4a3900eef27814548c4c5357090">snpa_print</a> (adj-&gt;<a class="code" href="structisis__adjacency.html#afe4ac3bbff30ac7c5a0da09b05bf9ac0">snpa</a>), <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
        }
      <span class="keywordflow">else</span>
        {
          <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s              %u %s&quot;</span>, dyn ? dyn-&gt;<a class="code" href="structisis__dynhn.html#a96fbe0fb7c4de340a9ed9f191859ac34">name</a>.<a class="code" href="structhostname.html#a0a14b55c4a1b6d672adfaa81b95936f3">name</a> :
               (<span class="keyword">const</span> u_char *) <a class="code" href="isis__misc_8c.html#a3a0e7f92008e3167e2c09b8761d06766">rawlspid_print</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>),
               vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
        }
    }
<span class="preprocessor">#if 0</span>
<span class="preprocessor"></span>      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s %s %u %s&quot;</span>, vtype2string (vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a>),
           vid2string (vertex, buff), vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="add02c502bceaaadcb051fb31c84e215f"></a><!-- doxytag: member="isis_spf.c::isis_run_spf" ref="add02c502bceaaadcb051fb31c84e215f" args="(struct isis_area *area, int level, int family)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int isis_run_spf </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__area.html">isis_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>level</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>family</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l00977">977</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> retval = <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structisis__vertex.html">isis_vertex</a> *<a class="code" href="structvertex.html">vertex</a>;
  <span class="keyword">struct </span><a class="code" href="structisis__spftree.html">isis_spftree</a> *spftree = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  u_char <a class="code" href="isis__pdu_8h.html#a2991a019d1da82fb5406bff5ab46dcf6">lsp_id</a>[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 2];
  <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
  <span class="keyword">struct </span><a class="code" href="structroute__table.html">route_table</a> *table = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rode;
  <span class="keyword">struct </span><a class="code" href="structisis__route__info.html">isis_route_info</a> *rinfo;

  <span class="keywordflow">if</span> (family == AF_INET)
    spftree = area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[level - 1];
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (family == AF_INET6)
    spftree = area-&gt;spftree6[level - 1];
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (spftree);

  <span class="comment">/* Make all routes in current route table inactive. */</span>
  <span class="keywordflow">if</span> (family == AF_INET)
    table = area-&gt;<a class="code" href="structisis__area.html#aeb827fc46b0685e063fc0049183a17cb">route_table</a>[level - 1];
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (family == AF_INET6)
    table = area-&gt;route_table6[level - 1];
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>
  <span class="keywordflow">for</span> (rode = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (table); rode; rode = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rode))
    {
      <span class="keywordflow">if</span> (rode-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
        <span class="keywordflow">continue</span>;
      rinfo = rode-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;

      <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (rinfo-&gt;<a class="code" href="structisis__route__info.html#ae301bfed55067a97479929d4d206e711">flag</a>, <a class="code" href="isis__route_8h.html#ad8a8597e10122462fa10436974565796">ISIS_ROUTE_FLAG_ACTIVE</a>);
    }

  <span class="comment">/*</span>
<span class="comment">   * C.2.5 Step 0</span>
<span class="comment">   */</span>
  <a class="code" href="isis__spf_8c.html#aab44d009968d88ebde5ea447a8bb91a6">init_spt</a> (spftree);
  <span class="comment">/*              a) */</span>
  <a class="code" href="isis__spf_8c.html#ace8c6b0e2357a48767ca25194ef20295">isis_spf_add_self</a> (spftree, area, level);
  <span class="comment">/*              b) */</span>
  retval = <a class="code" href="isis__spf_8c.html#af0dd2970c85e1c26cabf64504256b664">isis_spf_preload_tent</a> (spftree, area, level, family);

  <span class="comment">/*</span>
<span class="comment">   * C.2.7 Step 2</span>
<span class="comment">   */</span>
  <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>) == 0)
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;ISIS-Spf: TENT is empty&quot;</span>);
      <span class="keywordflow">goto</span> out;
    }

  <span class="keywordflow">while</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>) &gt; 0)
    {
      node = <a class="code" href="linklist_8h.html#a3d4492ca03b023aeecd4d6b0cdaa16fb">listhead</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>);
      vertex = <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (node);
      <span class="comment">/* Remove from tent list */</span>
      <a class="code" href="linklist_8c.html#a44569d4d868c60e29b21409612a5df05">list_delete_node</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, node);
      <span class="keywordflow">if</span> (<a class="code" href="isis__spf_8c.html#a2518d1c61e9645d59df254f0d1e57c98">isis_find_vertex</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>, vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>, vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a>))
    <span class="keywordflow">continue</span>;
      <a class="code" href="isis__spf_8c.html#a033281371ca01881f57ba7f61a29dc04">add_to_paths</a> (spftree, vertex, area, level);
      <span class="keywordflow">if</span> (vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a> == <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcafb01d0d49c5c5472181534c92dd6f7eb">VTYPE_PSEUDO_IS</a> ||
      vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a> == <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcab49954312767a3354f9436d9e8b55879">VTYPE_NONPSEUDO_IS</a>)
    {
      <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (lsp_id, vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 1);
      <a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (lsp_id) = 0;
      lsp = <a class="code" href="isis__lsp_8c.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (lsp_id, area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level - 1]);
      <span class="keywordflow">if</span> (lsp)
        {
          <span class="keywordflow">if</span> (<a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (lsp_id))
        {
          <a class="code" href="isis__spf_8c.html#ac2123d57c5010928d7a3685589d0eac9">isis_spf_process_pseudo_lsp</a> (spftree, lsp, vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>,
                           vertex-&gt;<a class="code" href="structisis__vertex.html#a54212ccd6e7b1ca331f190fa4e252735">depth</a>, family);

        }
          <span class="keywordflow">else</span>
        {
          <a class="code" href="isis__spf_8c.html#a9af0930aa8513cf3ca85deab22e1a2b3">isis_spf_process_lsp</a> (spftree, lsp, vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>,
                    vertex-&gt;<a class="code" href="structisis__vertex.html#a54212ccd6e7b1ca331f190fa4e252735">depth</a>, family);
        }
        }
      <span class="keywordflow">else</span>
        {
          <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;ISIS-Spf: No LSP found for %s&quot;</span>,
             <a class="code" href="isis__misc_8c.html#a3a0e7f92008e3167e2c09b8761d06766">rawlspid_print</a> (lsp_id));
        }
    }
    }

out:
  <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="isis__route_8c.html#acadb8339673b222300db8a8368aabb9a">isis_route_validate</a>, area, 0);
  spftree-&gt;<a class="code" href="structisis__spftree.html#afaabe4a89270604118fb57db2eed62d0">lastrun</a> = time (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
  spftree-&gt;<a class="code" href="structisis__spftree.html#aa76c26c3083f8fe0179b98b7dc162287">pending</a> = 0;

  <span class="keywordflow">return</span> retval;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4520566d073115fc9dc2f9d50ca22b69"></a><!-- doxytag: member="isis_spf.c::isis_run_spf_l1" ref="a4520566d073115fc9dc2f9d50ca22b69" args="(struct thread *thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int isis_run_spf_l1 </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>thread</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l01079">1079</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
  <span class="keywordtype">int</span> retval = <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;

  area = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (area);

  area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[0]-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="keywordflow">if</span> (!(area-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>))
    {
      <span class="keywordflow">if</span> (<a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#ae2c9cda71363e7c1ac3c8113551539b6">DEBUG_SPF_EVENTS</a>)
    <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;ISIS-SPF (%s) area does not share level&quot;</span>,
           area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>);
      <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
    }

  <span class="keywordflow">if</span> (<a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#ae2c9cda71363e7c1ac3c8113551539b6">DEBUG_SPF_EVENTS</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Spf (%s) L1 SPF needed, periodic SPF&quot;</span>, area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>);

  <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a0b7b9b7b8a3eb903a0deb5c20791d761">ip_circuits</a>)
    retval = <a class="code" href="isis__spf_8c.html#add02c502bceaaadcb051fb31c84e215f">isis_run_spf</a> (area, 1, AF_INET);

  <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[0]-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>, <a class="code" href="isis__spf_8c.html#a4520566d073115fc9dc2f9d50ca22b69">isis_run_spf_l1</a>, area,
           <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (<a class="code" href="isis__constants_8h.html#aebbd3eae79162a9064e2487b56291ed7">PERIODIC_SPF_INTERVAL</a>, 10));

  <span class="keywordflow">return</span> retval;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4c4facf36367a44c51978f37f2eca79f"></a><!-- doxytag: member="isis_spf.c::isis_run_spf_l2" ref="a4c4facf36367a44c51978f37f2eca79f" args="(struct thread *thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int isis_run_spf_l2 </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>thread</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l01110">1110</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
  <span class="keywordtype">int</span> retval = <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;

  area = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (area);

  area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[1]-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="keywordflow">if</span> (!(area-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a9daa7fbf09b604c718f3bbe189aedd1a">IS_LEVEL_2</a>))
    {
      <span class="keywordflow">if</span> (<a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#ae2c9cda71363e7c1ac3c8113551539b6">DEBUG_SPF_EVENTS</a>)
    <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;ISIS-SPF (%s) area does not share level&quot;</span>, area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>);
      <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
    }

  <span class="keywordflow">if</span> (<a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#ae2c9cda71363e7c1ac3c8113551539b6">DEBUG_SPF_EVENTS</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Spf (%s) L2 SPF needed, periodic SPF&quot;</span>, area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>);

  <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a0b7b9b7b8a3eb903a0deb5c20791d761">ip_circuits</a>)
    retval = <a class="code" href="isis__spf_8c.html#add02c502bceaaadcb051fb31c84e215f">isis_run_spf</a> (area, 2, AF_INET);

  <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[1]-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>, <a class="code" href="isis__spf_8c.html#a4c4facf36367a44c51978f37f2eca79f">isis_run_spf_l2</a>, area,
           <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (<a class="code" href="isis__constants_8h.html#aebbd3eae79162a9064e2487b56291ed7">PERIODIC_SPF_INTERVAL</a>, 10));

  <span class="keywordflow">return</span> retval;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a675ae1b4432f4b54c3e01f9010f14772"></a><!-- doxytag: member="isis_spf.c::isis_spf_add2tent" ref="a675ae1b4432f4b54c3e01f9010f14772" args="(struct isis_spftree *spftree, enum vertextype vtype, void *id, struct isis_adjacency *adj, u_int32_t cost, int depth, int family)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static struct <a class="el" href="structisis__vertex.html">isis_vertex</a>* isis_spf_add2tent </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__spftree.html">isis_spftree</a> *&#160;</td>
          <td class="paramname"><em>spftree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum <a class="el" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadc">vertextype</a>&#160;</td>
          <td class="paramname"><em>vtype</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structisis__adjacency.html">isis_adjacency</a> *&#160;</td>
          <td class="paramname"><em>adj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_int32_t&#160;</td>
          <td class="paramname"><em>cost</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>family</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static, read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l00392">392</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__vertex.html">isis_vertex</a> *<a class="code" href="structvertex.html">vertex</a>, *v;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<span class="preprocessor"></span>  u_char buff[BUFSIZ];
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>
  vertex = <a class="code" href="isis__spf_8c.html#a951e0519c84c47d6c071824958605dde">isis_vertex_new</a> (<span class="keywordtype">id</span>, vtype);
  vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a> = cost;
  vertex-&gt;<a class="code" href="structisis__vertex.html#a54212ccd6e7b1ca331f190fa4e252735">depth</a> = depth;

  <span class="keywordflow">if</span> (adj)
    <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a>, adj);
<span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<span class="preprocessor"></span>  <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Spf: add to TENT  %s %s depth %d dist %d&quot;</span>,
          vtype2string (vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a>), vid2string (vertex, buff),
          vertex-&gt;<a class="code" href="structisis__vertex.html#a54212ccd6e7b1ca331f190fa4e252735">depth</a>, vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>);
<span class="preprocessor">#endif </span><span class="comment">/* EXTREME_DEBUG */</span>
  <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, vertex);
  <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a6076d643ed23a6095c7821ddf52d3f47">list_isempty</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>))
    {
      <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, vertex);
      <span class="keywordflow">return</span> vertex;
    }
  
  <span class="comment">/* XXX: This cant use the standard ALL_LIST_ELEMENT macro */</span>
  <span class="keywordflow">for</span> (node = <a class="code" href="linklist_8h.html#a3d4492ca03b023aeecd4d6b0cdaa16fb">listhead</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>); node; node = <a class="code" href="linklist_8h.html#ad3f7fe9d8d096c4afc1bdd5b1f46c5bb">listnextnode</a> (node))
    {
      v = <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (node);
      <span class="keywordflow">if</span> (v-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a> &gt; vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>)
    {
      <a class="code" href="linklist_8c.html#ae1c29615b6d8dc3eda9042c95c666abb">list_add_node_prev</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, node, vertex);
      <span class="keywordflow">break</span>;
    }
      <span class="keywordflow">else</span> <span class="keywordflow">if</span> (v-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a> == vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>)
    {
      <span class="comment">/*  Tie break, add according to type */</span>
      <span class="keywordflow">while</span> (v &amp;&amp; v-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a> == vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a> &amp;&amp; v-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a> &gt; vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a>)
        {
          <span class="keywordflow">if</span> (v-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a> &gt; vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a>)
        {
          <span class="keywordflow">break</span>;
        }
              <span class="comment">/* XXX: this seems dubious, node is the loop iterator */</span>
          node = <a class="code" href="linklist_8h.html#ad3f7fe9d8d096c4afc1bdd5b1f46c5bb">listnextnode</a> (node);
          (node) ? (v = <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (node)) : (v = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
        }
      <a class="code" href="linklist_8c.html#ae1c29615b6d8dc3eda9042c95c666abb">list_add_node_prev</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, node, vertex);
      <span class="keywordflow">break</span>;
    }
      <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <a class="code" href="linklist_8c.html#ad0ed9efa84ffffcd32334a48dfed446f">list_add_node_next</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, node, vertex);
      <span class="keywordflow">break</span>;
    }
    }
  <span class="keywordflow">return</span> vertex;
}
</pre></div>
</div>
</div>
<a class="anchor" id="acf6df462d44d1eaca9a45ff3faf500e7"></a><!-- doxytag: member="isis_spf.c::isis_spf_add_local" ref="acf6df462d44d1eaca9a45ff3faf500e7" args="(struct isis_spftree *spftree, enum vertextype vtype, void *id, struct isis_adjacency *adj, u_int32_t cost, int family)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static struct <a class="el" href="structisis__vertex.html">isis_vertex</a>* isis_spf_add_local </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__spftree.html">isis_spftree</a> *&#160;</td>
          <td class="paramname"><em>spftree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum <a class="el" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadc">vertextype</a>&#160;</td>
          <td class="paramname"><em>vtype</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structisis__adjacency.html">isis_adjacency</a> *&#160;</td>
          <td class="paramname"><em>adj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_int32_t&#160;</td>
          <td class="paramname"><em>cost</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>family</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static, read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l00455">455</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__vertex.html">isis_vertex</a> *<a class="code" href="structvertex.html">vertex</a>;

  vertex = <a class="code" href="isis__spf_8c.html#a2518d1c61e9645d59df254f0d1e57c98">isis_find_vertex</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, <span class="keywordtype">id</span>, vtype);

  <span class="keywordflow">if</span> (vertex)
    {
      <span class="comment">/* C.2.5   c) */</span>
      <span class="keywordflow">if</span> (vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a> == cost)
    {
      <span class="keywordflow">if</span> (adj)
        <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a>, adj);
      <span class="comment">/*       d) */</span>
      <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a>) &gt; <a class="code" href="isis__constants_8h.html#afe8d4a9891abc5f7beba26a54d41ae41">ISIS_MAX_PATH_SPLITS</a>)
        <a class="code" href="isis__spf_8c.html#aa8fc65e3edbbc537529f1c4b8461dcf3">remove_excess_adjs</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a>);
    }
      <span class="comment">/*         f) */</span>
      <span class="keywordflow">else</span> <span class="keywordflow">if</span> (vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a> &gt; cost)
    {
      <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, vertex);
      <span class="keywordflow">goto</span> add2tent;
    }
      <span class="comment">/*       e) do nothing */</span>
      <span class="keywordflow">return</span> vertex;
    }

add2tent:
  <span class="keywordflow">return</span> <a class="code" href="isis__spf_8c.html#a675ae1b4432f4b54c3e01f9010f14772">isis_spf_add2tent</a> (spftree, vtype, <span class="keywordtype">id</span>, adj, cost, 1, family);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ace8c6b0e2357a48767ca25194ef20295"></a><!-- doxytag: member="isis_spf.c::isis_spf_add_self" ref="ace8c6b0e2357a48767ca25194ef20295" args="(struct isis_spftree *spftree, struct isis_area *area, int level)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void isis_spf_add_self </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__spftree.html">isis_spftree</a> *&#160;</td>
          <td class="paramname"><em>spftree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structisis__area.html">isis_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l00308">308</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__vertex.html">isis_vertex</a> *<a class="code" href="structvertex.html">vertex</a>;
  <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
  u_char <a class="code" href="isis__misc_8c.html#ac0016d3200b8885e05d151ca16ef4315">lspid</a>[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 2];
<span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<span class="preprocessor"></span>  u_char buff[BUFSIZ];
<span class="preprocessor">#endif </span><span class="comment">/* EXTREME_DEBUG */</span>
  <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (lspid, <a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
  <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (lspid) = 0;
  <a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (lspid) = 0;

  lsp = <a class="code" href="isis__lsp_8c.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (lspid, area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[<a class="code" href="structisis__lsp.html#ab719e4479e4fc861c4cfa7a3c9d403c6">level</a> - 1]);

  <span class="keywordflow">if</span> (lsp == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;ISIS-Spf: could not find own l%d LSP!&quot;</span>, <a class="code" href="structisis__lsp.html#ab719e4479e4fc861c4cfa7a3c9d403c6">level</a>);

  <span class="keywordflow">if</span> (!area-&gt;<a class="code" href="structisis__area.html#ab59df347846030a9825a908f8fa1a4ae">oldmetric</a>)
    vertex = <a class="code" href="isis__spf_8c.html#a951e0519c84c47d6c071824958605dde">isis_vertex_new</a> (<a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca1e82ec051fbdd19aaffa0360854f9b68">VTYPE_NONPSEUDO_TE_IS</a>);
  <span class="keywordflow">else</span>
    vertex = <a class="code" href="isis__spf_8c.html#a951e0519c84c47d6c071824958605dde">isis_vertex_new</a> (<a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcab49954312767a3354f9436d9e8b55879">VTYPE_NONPSEUDO_IS</a>);

  vertex-&gt;<a class="code" href="structisis__vertex.html#a2016ca40d855164587629d620530ec1b">lsp</a> = lsp;

  <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>, vertex);

<span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<span class="preprocessor"></span>  <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Spf: added this IS  %s %s depth %d dist %d to PATHS&quot;</span>,
          vtype2string (vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a>), vid2string (vertex, buff),
          vertex-&gt;<a class="code" href="structisis__vertex.html#a54212ccd6e7b1ca331f190fa4e252735">depth</a>, vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>);
<span class="preprocessor">#endif </span><span class="comment">/* EXTREME_DEBUG */</span>

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af3ff241b5c3bf5bdee6f7cc9374e52d2"></a><!-- doxytag: member="isis_spf.c::isis_spf_cmds_init" ref="af3ff241b5c3bf5bdee6f7cc9374e52d2" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void isis_spf_cmds_init </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l01483">1483</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;show_isis_topology_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;show_isis_topology_l1_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;show_isis_topology_l2_cmd);

  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;show_isis_topology_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;show_isis_topology_l1_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;show_isis_topology_l2_cmd);
}
</pre></div>
</div>
</div>
<a class="anchor" id="af0dd2970c85e1c26cabf64504256b664"></a><!-- doxytag: member="isis_spf.c::isis_spf_preload_tent" ref="af0dd2970c85e1c26cabf64504256b664" args="(struct isis_spftree *spftree, struct isis_area *area, int level, int family)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int isis_spf_preload_tent </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__spftree.html">isis_spftree</a> *&#160;</td>
          <td class="paramname"><em>spftree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structisis__area.html">isis_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>level</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>family</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l00762">762</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__vertex.html">isis_vertex</a> *<a class="code" href="structvertex.html">vertex</a>;
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *cnode, *anode, *ipnode;
  <span class="keyword">struct </span><a class="code" href="structisis__adjacency.html">isis_adjacency</a> *adj;
  <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
  <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *adj_list;
  <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *adjdb;
  <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *ipv4;
  <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> <a class="code" href="structprefix.html">prefix</a>;
  <span class="keywordtype">int</span> retval = <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
  u_char <a class="code" href="isis__pdu_8h.html#a2991a019d1da82fb5406bff5ab46dcf6">lsp_id</a>[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 2];
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <span class="keyword">struct </span>prefix_ipv6 *ipv6;
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (area-&gt;<a class="code" href="structisis__area.html#a1ef8753b22245b7d8fff0331deef3b21">circuit_list</a>, cnode, circuit))
    {
      <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a7491f48eafb46ce87d7041bd7959633b">state</a> != <a class="code" href="isis__csm_8h.html#a65d367a002446ae64678b4586f5e2cc5">C_STATE_UP</a>)
    <span class="keywordflow">continue</span>;
      <span class="keywordflow">if</span> (!(circuit-&gt;<a class="code" href="structisis__circuit.html#ab222d6d0b054faa159d72bcb9768b3fb">circuit_is_type</a> &amp; level))
    <span class="keywordflow">continue</span>;
      <span class="keywordflow">if</span> (family == AF_INET &amp;&amp; !circuit-&gt;<a class="code" href="structisis__circuit.html#a9dbb2266ee5b76604a27fd0855e910f5">ip_router</a>)
    <span class="keywordflow">continue</span>;
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>      <span class="keywordflow">if</span> (family == AF_INET6 &amp;&amp; !circuit-&gt;ipv6_router)
    <span class="keywordflow">continue</span>;
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
      <span class="comment">/* </span>
<span class="comment">       * Add IP(v6) addresses of this circuit</span>
<span class="comment">       */</span>
      <span class="keywordflow">if</span> (family == AF_INET)
    {
      <a class="code" href="structprefix.html">prefix</a>.<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> = AF_INET;
          <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#adcde796f44a1e725abe092f95a6cb075">ip_addrs</a>, ipnode, ipv4))
        {
          <a class="code" href="structprefix.html">prefix</a>.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a> = ipv4-&gt;prefix;
          <a class="code" href="structprefix.html">prefix</a>.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> = ipv4-&gt;<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a>;
          <a class="code" href="isis__spf_8c.html#acf6df462d44d1eaca9a45ff3faf500e7">isis_spf_add_local</a> (spftree, <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca0cb69e553ae6caee606be4d93671b745">VTYPE_IPREACH_INTERNAL</a>, &amp;<a class="code" href="structprefix.html">prefix</a>,
                  <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0, family);
        }
    }
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>      <span class="keywordflow">if</span> (family == AF_INET6)
    {
      <a class="code" href="structprefix.html">prefix</a>.<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> = AF_INET6;
      <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (circuit-&gt;ipv6_non_link, ipnode, ipv6))
        {
          <a class="code" href="structprefix.html">prefix</a>.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> = ipv6-&gt;prefixlen;
          <a class="code" href="structprefix.html">prefix</a>.u.prefix6 = ipv6-&gt;<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>;
          <a class="code" href="isis__spf_8c.html#acf6df462d44d1eaca9a45ff3faf500e7">isis_spf_add_local</a> (spftree, VTYPE_IP6REACH_INTERNAL,
                  &amp;<a class="code" href="structprefix.html">prefix</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0, family);
        }
    }
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
      <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a569e39bbf7fafd533eae2eeafa671b8c">circ_type</a> == <a class="code" href="isis__circuit_8h.html#a01a94c5f24c88efb64f791a749ae8f95">CIRCUIT_T_BROADCAST</a>)
    {
      <span class="comment">/*</span>
<span class="comment">       * Add the adjacencies</span>
<span class="comment">       */</span>
      adj_list = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
      adjdb = circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#ada9bf2584373a37aed06b2e4c9e796f9">adjdb</a>[level - 1];
      <a class="code" href="isis__adjacency_8c.html#abcdb7608e2eb77b6e5f5bcc273c7c265">isis_adj_build_up_list</a> (adjdb, adj_list);
      <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (adj_list) == 0)
        {
          <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (adj_list);
          <span class="keywordflow">if</span> (<a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#ae2c9cda71363e7c1ac3c8113551539b6">DEBUG_SPF_EVENTS</a>)
        <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Spf: no L%d adjacencies on circuit %s&quot;</span>,
                level, circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
          <span class="keywordflow">continue</span>;
        }
      anode = <a class="code" href="linklist_8h.html#a3d4492ca03b023aeecd4d6b0cdaa16fb">listhead</a> (adj_list);
      <span class="keywordflow">while</span> (anode)
        {
          adj = <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (anode);
          <span class="keywordflow">if</span> (!<a class="code" href="isis__misc_8c.html#a8ede5433e1d31781300c8d5d123844f2">speaks</a> (&amp;adj-&gt;<a class="code" href="structisis__adjacency.html#a1c8f17ff6b70d8c457e8d2860909312c">nlpids</a>, family))
        {
          anode = <a class="code" href="linklist_8h.html#ad3f7fe9d8d096c4afc1bdd5b1f46c5bb">listnextnode</a> (anode);
          <span class="keywordflow">continue</span>;
        }
          <span class="keywordflow">switch</span> (adj-&gt;<a class="code" href="structisis__adjacency.html#a187eb9cdad6881ecd2735b38a47e07e3">sys_type</a>)
        {
        <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4da0b5dc35b6ff6333177392a069af08ce1">ISIS_SYSTYPE_ES</a>:
          <a class="code" href="isis__spf_8c.html#acf6df462d44d1eaca9a45ff3faf500e7">isis_spf_add_local</a> (spftree, <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca419bd242149145636d0c8ffa096893a0">VTYPE_ES</a>, adj-&gt;<a class="code" href="structisis__adjacency.html#a7b23942ae5652d5cf59b263f131c2038">sysid</a>, adj,
                      circuit-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>[level - 1], family);
          <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4da200778581ea795c59c48b27748eae10e">ISIS_SYSTYPE_IS</a>:
        <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4daddebdf6ea1f78c8503dd520854310078">ISIS_SYSTYPE_L1_IS</a>:
        <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4da615d7aa9f3d08cd8360e1b04a0b8806b">ISIS_SYSTYPE_L2_IS</a>:
          vertex =
            <a class="code" href="isis__spf_8c.html#acf6df462d44d1eaca9a45ff3faf500e7">isis_spf_add_local</a> (spftree, <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcab49954312767a3354f9436d9e8b55879">VTYPE_NONPSEUDO_IS</a>,
                    adj-&gt;<a class="code" href="structisis__adjacency.html#a7b23942ae5652d5cf59b263f131c2038">sysid</a>, adj,
                    circuit-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>[level - 1], family);
          <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (lsp_id, adj-&gt;<a class="code" href="structisis__adjacency.html#a7b23942ae5652d5cf59b263f131c2038">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
          <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (lsp_id) = 0;
          <a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (lsp_id) = 0;
          lsp = <a class="code" href="isis__lsp_8c.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (lsp_id, area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level - 1]);
          <span class="keywordflow">if</span> (!lsp)
            <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;No lsp found for IS adjacency&quot;</span>);
          <span class="comment">/*          else {</span>
<span class="comment">             isis_spf_process_lsp (spftree, lsp, vertex-&gt;d_N, 1, family);</span>
<span class="comment">             } */</span>
          <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4da1d20bc4d429708dd9bc81735bd176618">ISIS_SYSTYPE_UNKNOWN</a>:
        <span class="keywordflow">default</span>:
          <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;isis_spf_preload_tent unknow adj type&quot;</span>);
        }
          anode = <a class="code" href="linklist_8h.html#ad3f7fe9d8d096c4afc1bdd5b1f46c5bb">listnextnode</a> (anode);
        }
      <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (adj_list);
      <span class="comment">/*</span>
<span class="comment">       * Add the pseudonode </span>
<span class="comment">       */</span>
      <span class="keywordflow">if</span> (level == 1)
        <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (lsp_id, circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a015b72bf5854d99b722f9f599b9eb158">l1_desig_is</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 1);
      <span class="keywordflow">else</span>
        <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (lsp_id, circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a2bde5462284eb2b294ed998fb5907de8">l2_desig_is</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 1);
      lsp = <a class="code" href="isis__lsp_8c.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (lsp_id, area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level - 1]);
      adj = <a class="code" href="isis__adjacency_8c.html#af928a678a2e0e3296d688be2a4d8e7ac">isis_adj_lookup</a> (lsp_id, adjdb);
      <span class="comment">/* if no adj, we are the dis or error */</span>
      <span class="keywordflow">if</span> (!adj &amp;&amp; !circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#adb24376d01beb41cab0ed0c49c3a214c">is_dr</a>[level - 1])
        {
          <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;ISIS-Spf: No adjacency found for DR&quot;</span>);
        }
      <span class="keywordflow">if</span> (lsp == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> || lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a> == 0)
        {
          <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;ISIS-Spf: No lsp found for DR&quot;</span>);
        }
      <span class="keywordflow">else</span>
        {
          <a class="code" href="isis__spf_8c.html#ac2123d57c5010928d7a3685589d0eac9">isis_spf_process_pseudo_lsp</a> (spftree, lsp,
                  circuit-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>[level - 1], 0, family);

        }
    }
      <span class="keywordflow">else</span> <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a569e39bbf7fafd533eae2eeafa671b8c">circ_type</a> == <a class="code" href="isis__circuit_8h.html#aa2113a49e7c75a5d4997d59df0530726">CIRCUIT_T_P2P</a>)
    {
      adj = circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a15852a59ea8be80680abac2070659440">p2p</a>.<a class="code" href="structisis__p2p__info.html#a17d32289e6648b9855b93482cd7c45a5">neighbor</a>;
      <span class="keywordflow">if</span> (!adj)
        <span class="keywordflow">continue</span>;
      <span class="keywordflow">switch</span> (adj-&gt;<a class="code" href="structisis__adjacency.html#a187eb9cdad6881ecd2735b38a47e07e3">sys_type</a>)
        {
        <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4da0b5dc35b6ff6333177392a069af08ce1">ISIS_SYSTYPE_ES</a>:
          <a class="code" href="isis__spf_8c.html#acf6df462d44d1eaca9a45ff3faf500e7">isis_spf_add_local</a> (spftree, <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca419bd242149145636d0c8ffa096893a0">VTYPE_ES</a>, adj-&gt;<a class="code" href="structisis__adjacency.html#a7b23942ae5652d5cf59b263f131c2038">sysid</a>, adj,
                  circuit-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>[level - 1], family);
          <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4da200778581ea795c59c48b27748eae10e">ISIS_SYSTYPE_IS</a>:
        <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4daddebdf6ea1f78c8503dd520854310078">ISIS_SYSTYPE_L1_IS</a>:
        <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4da615d7aa9f3d08cd8360e1b04a0b8806b">ISIS_SYSTYPE_L2_IS</a>:
          <span class="keywordflow">if</span> (<a class="code" href="isis__misc_8c.html#a8ede5433e1d31781300c8d5d123844f2">speaks</a> (&amp;adj-&gt;<a class="code" href="structisis__adjacency.html#a1c8f17ff6b70d8c457e8d2860909312c">nlpids</a>, family))
        <a class="code" href="isis__spf_8c.html#acf6df462d44d1eaca9a45ff3faf500e7">isis_spf_add_local</a> (spftree, <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcab49954312767a3354f9436d9e8b55879">VTYPE_NONPSEUDO_IS</a>, adj-&gt;<a class="code" href="structisis__adjacency.html#a7b23942ae5652d5cf59b263f131c2038">sysid</a>,
                    adj, circuit-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>[level - 1],
                    family);
          <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4da1d20bc4d429708dd9bc81735bd176618">ISIS_SYSTYPE_UNKNOWN</a>:
        <span class="keywordflow">default</span>:
          <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;isis_spf_preload_tent unknow adj type&quot;</span>);
          <span class="keywordflow">break</span>;
        }
    }
      <span class="keywordflow">else</span>
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;isis_spf_preload_tent unsupported media&quot;</span>);
      retval = <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
    }

    }

  <span class="keywordflow">return</span> retval;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9af0930aa8513cf3ca85deab22e1a2b3"></a><!-- doxytag: member="isis_spf.c::isis_spf_process_lsp" ref="a9af0930aa8513cf3ca85deab22e1a2b3" args="(struct isis_spftree *spftree, struct isis_lsp *lsp, uint32_t cost, uint16_t depth, int family)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int isis_spf_process_lsp </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__spftree.html">isis_spftree</a> *&#160;</td>
          <td class="paramname"><em>spftree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structisis__lsp.html">isis_lsp</a> *&#160;</td>
          <td class="paramname"><em>lsp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>cost</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>family</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l00551">551</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *fragnode = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  u_int16_t dist;
  <span class="keyword">struct </span><a class="code" href="structis__neigh.html">is_neigh</a> *<a class="code" href="structis__neigh.html">is_neigh</a>;
  <span class="keyword">struct </span><a class="code" href="structte__is__neigh.html">te_is_neigh</a> *<a class="code" href="structte__is__neigh.html">te_is_neigh</a>;
  <span class="keyword">struct </span><a class="code" href="structipv4__reachability.html">ipv4_reachability</a> *ipreach;
  <span class="keyword">struct </span><a class="code" href="structte__ipv4__reachability.html">te_ipv4_reachability</a> *te_ipv4_reach;
  <span class="keyword">enum</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadc">vertextype</a> vtype;
  <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> <a class="code" href="structprefix.html">prefix</a>;
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <span class="keyword">struct </span>ipv6_reachability *ip6reach;
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>


  <span class="keywordflow">if</span> (!lsp-&gt;<a class="code" href="structisis__lsp.html#a4481c48a70a19d351802ee561729fce3">adj</a>)
    <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
  <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> || !<a class="code" href="isis__misc_8c.html#a8ede5433e1d31781300c8d5d123844f2">speaks</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a>, family))
    <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;

lspfragloop:
  <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a> == 0)
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;isis_spf_process_lsp(): lsp with 0 seq_num&quot;</span>
         <span class="stringliteral">&quot; - do not process&quot;</span>);
      <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
    }

  <span class="keywordflow">if</span> (!<a class="code" href="isis__constants_8h.html#a639588aea28dd1c81a81576d97df28cb">ISIS_MASK_LSP_OL_BIT</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a405c4b662dc97846dcca65f5c851f485">lsp_bits</a>))
    {
      <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>)
    {
          <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>, node, is_neigh))
        {
          <span class="comment">/* C.2.6 a) */</span>
          <span class="comment">/* Two way connectivity */</span>
          <span class="keywordflow">if</span> (!<a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>, <a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>))
        <span class="keywordflow">continue</span>;
          dist = cost + is_neigh-&gt;<a class="code" href="structis__neigh.html#a89a2c799e58b8ab95549581a06f2a53a">metrics</a>.<a class="code" href="structmetric.html#ae927ddb546511096f632820b678d73bf">metric_default</a>;
          vtype = <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>) ? <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcafb01d0d49c5c5472181534c92dd6f7eb">VTYPE_PSEUDO_IS</a>
        : <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcab49954312767a3354f9436d9e8b55879">VTYPE_NONPSEUDO_IS</a>;
          <a class="code" href="isis__spf_8c.html#a8ce1d0bc17c2992001e52e80072c23b6">process_N</a> (spftree, vtype, (<span class="keywordtype">void</span> *) is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>, dist,
             depth + 1, lsp-&gt;<a class="code" href="structisis__lsp.html#a4481c48a70a19d351802ee561729fce3">adj</a>, family);
        }
    }
      <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>)
    {
      <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>, node,
                     te_is_neigh))
        {
          uint32_t <a class="code" href="structmetric.html">metric</a>;
          <span class="keywordflow">if</span> (!<a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>, <a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>))
        <span class="keywordflow">continue</span>;
          <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;metric, te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#a7158aa6efe17579d240123affa0a543c">te_metric</a>, 3);
          dist = cost + ntohl (metric &lt;&lt; 8);
          vtype = <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>) ? <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca402426f39ccc62ae0920b3966eb86e03">VTYPE_PSEUDO_TE_IS</a>
        : <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca1e82ec051fbdd19aaffa0360854f9b68">VTYPE_NONPSEUDO_TE_IS</a>;
          <a class="code" href="isis__spf_8c.html#a8ce1d0bc17c2992001e52e80072c23b6">process_N</a> (spftree, vtype, (<span class="keywordtype">void</span> *) te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>, dist,
             depth + 1, lsp-&gt;<a class="code" href="structisis__lsp.html#a4481c48a70a19d351802ee561729fce3">adj</a>, family);
        }
    }
      <span class="keywordflow">if</span> (family == AF_INET &amp;&amp; lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a202838cf00b9aeb6f746c11c8a421642">ipv4_int_reachs</a>)
    {
      <a class="code" href="structprefix.html">prefix</a>.<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> = AF_INET;
          <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a202838cf00b9aeb6f746c11c8a421642">ipv4_int_reachs</a>, 
                                     node, ipreach))
        {
          dist = cost + ipreach-&gt;<a class="code" href="structipv4__reachability.html#a9fb77b6ac90d3fc4f7bfbd7f4843543a">metrics</a>.<a class="code" href="structmetric.html#ae927ddb546511096f632820b678d73bf">metric_default</a>;
          vtype = <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca0cb69e553ae6caee606be4d93671b745">VTYPE_IPREACH_INTERNAL</a>;
          <a class="code" href="structprefix.html">prefix</a>.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a> = ipreach-&gt;<a class="code" href="structipv4__reachability.html#a7ae516558fddb6aca89c864bd2d23d30">prefix</a>;
          <a class="code" href="structprefix.html">prefix</a>.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> = <a class="code" href="prefix_8c.html#ab83ffad6b766ddd0ef87e4da228c322d">ip_masklen</a> (ipreach-&gt;<a class="code" href="structipv4__reachability.html#a229b4c7635d0a94d260c0929125399ee">mask</a>);
          <a class="code" href="isis__spf_8c.html#a8ce1d0bc17c2992001e52e80072c23b6">process_N</a> (spftree, vtype, (<span class="keywordtype">void</span> *) &amp;<a class="code" href="structprefix.html">prefix</a>, dist, depth + 1,
             lsp-&gt;<a class="code" href="structisis__lsp.html#a4481c48a70a19d351802ee561729fce3">adj</a>, family);
        }
    }

      <span class="keywordflow">if</span> (family == AF_INET &amp;&amp; lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a24de94a53f11ec8f24e9f133ba2f63c3">ipv4_ext_reachs</a>)
    {
      <a class="code" href="structprefix.html">prefix</a>.<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> = AF_INET;
          <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a24de94a53f11ec8f24e9f133ba2f63c3">ipv4_ext_reachs</a>,
                                     node, ipreach))
        {
          dist = cost + ipreach-&gt;<a class="code" href="structipv4__reachability.html#a9fb77b6ac90d3fc4f7bfbd7f4843543a">metrics</a>.<a class="code" href="structmetric.html#ae927ddb546511096f632820b678d73bf">metric_default</a>;
          vtype = <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcac5b5e03da1298700e72fc9b7e58bb1da">VTYPE_IPREACH_EXTERNAL</a>;
          <a class="code" href="structprefix.html">prefix</a>.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a> = ipreach-&gt;<a class="code" href="structipv4__reachability.html#a7ae516558fddb6aca89c864bd2d23d30">prefix</a>;
          <a class="code" href="structprefix.html">prefix</a>.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> = <a class="code" href="prefix_8c.html#ab83ffad6b766ddd0ef87e4da228c322d">ip_masklen</a> (ipreach-&gt;<a class="code" href="structipv4__reachability.html#a229b4c7635d0a94d260c0929125399ee">mask</a>);
          <a class="code" href="isis__spf_8c.html#a8ce1d0bc17c2992001e52e80072c23b6">process_N</a> (spftree, vtype, (<span class="keywordtype">void</span> *) &amp;<a class="code" href="structprefix.html">prefix</a>, dist, depth + 1,
             lsp-&gt;<a class="code" href="structisis__lsp.html#a4481c48a70a19d351802ee561729fce3">adj</a>, family);
        }
    }
      <span class="keywordflow">if</span> (family == AF_INET &amp;&amp; lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac827f5db217d1de5cc2a58c9b5a9cf81">te_ipv4_reachs</a>)
    {
      <a class="code" href="structprefix.html">prefix</a>.<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> = AF_INET;
      <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac827f5db217d1de5cc2a58c9b5a9cf81">te_ipv4_reachs</a>,
                     node, te_ipv4_reach))
        {
          dist = cost + ntohl (te_ipv4_reach-&gt;<a class="code" href="structte__ipv4__reachability.html#a9704689f0bbfff1997a158427765060e">te_metric</a>);
          vtype = <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcabf3d2d72b3c42d753602198f061abd53">VTYPE_IPREACH_TE</a>;
          <a class="code" href="structprefix.html">prefix</a>.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a> = <a class="code" href="isis__misc_8c.html#af795aa21c24ab7f8e6e942be669bfc34">newprefix2inaddr</a> (&amp;te_ipv4_reach-&gt;<a class="code" href="structte__ipv4__reachability.html#ad50dc67e9a53223f8083d85cbb727bfa">prefix_start</a>,
                           te_ipv4_reach-&gt;<a class="code" href="structte__ipv4__reachability.html#ab886131ddaf522d8bc34610687a79309">control</a>);
          <a class="code" href="structprefix.html">prefix</a>.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> = (te_ipv4_reach-&gt;<a class="code" href="structte__ipv4__reachability.html#ab886131ddaf522d8bc34610687a79309">control</a> &amp; 0x3F);
          <a class="code" href="isis__spf_8c.html#a8ce1d0bc17c2992001e52e80072c23b6">process_N</a> (spftree, vtype, (<span class="keywordtype">void</span> *) &amp;<a class="code" href="structprefix.html">prefix</a>, dist, depth + 1,
             lsp-&gt;<a class="code" href="structisis__lsp.html#a4481c48a70a19d351802ee561729fce3">adj</a>, family);
        }
    }
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>      <span class="keywordflow">if</span> (family == AF_INET6 &amp;&amp; lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.ipv6_reachs)
    {
      <a class="code" href="structprefix.html">prefix</a>.<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> = AF_INET6;
          <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.ipv6_reachs, 
                                     node, ip6reach))
        {
          dist = cost + ip6reach-&gt;metric;
          vtype = (ip6reach-&gt;control_info &amp; <a class="code" href="isis__tlv_8h.html#a8cdce234e266e12e1ee3f3f232a4d6c1">CTRL_INFO_DISTRIBUTION</a>) ?
        VTYPE_IP6REACH_EXTERNAL : VTYPE_IP6REACH_INTERNAL;
          <a class="code" href="structprefix.html">prefix</a>.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> = ip6reach-&gt;prefix_len;
          <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;<a class="code" href="structprefix.html">prefix</a>.u.prefix6.s6_addr, ip6reach-&gt;<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>,
              <a class="code" href="bgpd_8h.html#a472145011d944606a257487e80cc3ace">PSIZE</a> (ip6reach-&gt;prefix_len));
          <a class="code" href="isis__spf_8c.html#a8ce1d0bc17c2992001e52e80072c23b6">process_N</a> (spftree, vtype, (<span class="keywordtype">void</span> *) &amp;<a class="code" href="structprefix.html">prefix</a>, dist, depth + 1,
             lsp-&gt;<a class="code" href="structisis__lsp.html#a4481c48a70a19d351802ee561729fce3">adj</a>, family);
        }
    }
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
    }

  <span class="keywordflow">if</span> (fragnode == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    fragnode = <a class="code" href="linklist_8h.html#a3d4492ca03b023aeecd4d6b0cdaa16fb">listhead</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a>);
  <span class="keywordflow">else</span>
    fragnode = <a class="code" href="linklist_8h.html#ad3f7fe9d8d096c4afc1bdd5b1f46c5bb">listnextnode</a> (fragnode);

  <span class="keywordflow">if</span> (fragnode)
    {
      lsp = <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (fragnode);
      <span class="keywordflow">goto</span> lspfragloop;
    }

  <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac2123d57c5010928d7a3685589d0eac9"></a><!-- doxytag: member="isis_spf.c::isis_spf_process_pseudo_lsp" ref="ac2123d57c5010928d7a3685589d0eac9" args="(struct isis_spftree *spftree, struct isis_lsp *lsp, uint16_t cost, uint16_t depth, int family)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int isis_spf_process_pseudo_lsp </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__spftree.html">isis_spftree</a> *&#160;</td>
          <td class="paramname"><em>spftree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structisis__lsp.html">isis_lsp</a> *&#160;</td>
          <td class="paramname"><em>lsp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>cost</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>family</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l00692">692</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *fragnode = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keyword">struct </span><a class="code" href="structis__neigh.html">is_neigh</a> *<a class="code" href="structis__neigh.html">is_neigh</a>;
  <span class="keyword">struct </span><a class="code" href="structte__is__neigh.html">te_is_neigh</a> *<a class="code" href="structte__is__neigh.html">te_is_neigh</a>;
  <span class="keyword">enum</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadc">vertextype</a> vtype;

pseudofragloop:

  <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a> == 0)
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;isis_spf_process_pseudo_lsp(): lsp with 0 seq_num&quot;</span>
         <span class="stringliteral">&quot; - do not process&quot;</span>);
      <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
    }

  <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>)
    <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>, node, is_neigh))
      {
    vtype = <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>) ? <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcafb01d0d49c5c5472181534c92dd6f7eb">VTYPE_PSEUDO_IS</a>
      : <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcab49954312767a3354f9436d9e8b55879">VTYPE_NONPSEUDO_IS</a>;
    <span class="comment">/* Two way connectivity */</span>
    <span class="keywordflow">if</span> (!<a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>, <a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>))
      <span class="keywordflow">continue</span>;
    <span class="keywordflow">if</span> (<a class="code" href="isis__spf_8c.html#a2518d1c61e9645d59df254f0d1e57c98">isis_find_vertex</a>
        (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, (<span class="keywordtype">void</span> *) is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>, vtype) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>
        &amp;&amp; <a class="code" href="isis__spf_8c.html#a2518d1c61e9645d59df254f0d1e57c98">isis_find_vertex</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>, (<span class="keywordtype">void</span> *) is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>,
                   vtype) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
      {
        <span class="comment">/* C.2.5 i) */</span>
        <a class="code" href="isis__spf_8c.html#a675ae1b4432f4b54c3e01f9010f14772">isis_spf_add2tent</a> (spftree, vtype, is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a4481c48a70a19d351802ee561729fce3">adj</a>,
                 cost, depth, family);
      }
      }
  <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>)
    <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>, node, te_is_neigh))
      {
    vtype = <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>) ? <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca402426f39ccc62ae0920b3966eb86e03">VTYPE_PSEUDO_TE_IS</a>
      : <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca1e82ec051fbdd19aaffa0360854f9b68">VTYPE_NONPSEUDO_TE_IS</a>;
    <span class="comment">/* Two way connectivity */</span>
    <span class="keywordflow">if</span> (!<a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>, <a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>))
      <span class="keywordflow">continue</span>;
    <span class="keywordflow">if</span> (<a class="code" href="isis__spf_8c.html#a2518d1c61e9645d59df254f0d1e57c98">isis_find_vertex</a>
        (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, (<span class="keywordtype">void</span> *) te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>, vtype) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>
        &amp;&amp; <a class="code" href="isis__spf_8c.html#a2518d1c61e9645d59df254f0d1e57c98">isis_find_vertex</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>, (<span class="keywordtype">void</span> *) te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>,
                 vtype) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
      {
        <span class="comment">/* C.2.5 i) */</span>
        <a class="code" href="isis__spf_8c.html#a675ae1b4432f4b54c3e01f9010f14772">isis_spf_add2tent</a> (spftree, vtype, te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a4481c48a70a19d351802ee561729fce3">adj</a>,
                   cost, depth, family);
      }
      }

  <span class="keywordflow">if</span> (fragnode == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    fragnode = <a class="code" href="linklist_8h.html#a3d4492ca03b023aeecd4d6b0cdaa16fb">listhead</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a>);
  <span class="keywordflow">else</span>
    fragnode = <a class="code" href="linklist_8h.html#ad3f7fe9d8d096c4afc1bdd5b1f46c5bb">listnextnode</a> (fragnode);

  <span class="keywordflow">if</span> (fragnode)
    {
      lsp = <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (fragnode);
      <span class="keywordflow">goto</span> pseudofragloop;
    }

  <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a07d72d64d2b651d969695c1f26031678"></a><!-- doxytag: member="isis_spf.c::isis_spf_schedule" ref="a07d72d64d2b651d969695c1f26031678" args="(struct isis_area *area, int level)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int isis_spf_schedule </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__area.html">isis_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l01140">1140</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> retval = <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
  <span class="keyword">struct </span><a class="code" href="structisis__spftree.html">isis_spftree</a> *spftree = area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[level - 1];
  time_t diff, now = time (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);

  <span class="keywordflow">if</span> (spftree-&gt;<a class="code" href="structisis__spftree.html#aa76c26c3083f8fe0179b98b7dc162287">pending</a>)
    <span class="keywordflow">return</span> retval;

  diff = now - spftree-&gt;<a class="code" href="structisis__spftree.html#afaabe4a89270604118fb57db2eed62d0">lastrun</a>;

  <span class="comment">/* FIXME: let&#39;s wait a minute before doing the SPF */</span>
  <span class="keywordflow">if</span> (now - <a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a7560c4f290c42705c28c09f6268dfe39">uptime</a> &lt; 60 || <a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a7560c4f290c42705c28c09f6268dfe39">uptime</a> == 0)
    {
      <span class="keywordflow">if</span> (level == 1)
    <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, spftree-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>, <a class="code" href="isis__spf_8c.html#a4520566d073115fc9dc2f9d50ca22b69">isis_run_spf_l1</a>, area, 60);
      <span class="keywordflow">else</span>
    <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, spftree-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>, <a class="code" href="isis__spf_8c.html#a4c4facf36367a44c51978f37f2eca79f">isis_run_spf_l2</a>, area, 60);

      spftree-&gt;<a class="code" href="structisis__spftree.html#aa76c26c3083f8fe0179b98b7dc162287">pending</a> = 1;
      <span class="keywordflow">return</span> retval;
    }

  <a class="code" href="thread_8h.html#ae1dfd3f5f643212148d60a41d9f2192a">THREAD_TIMER_OFF</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>);

  <span class="keywordflow">if</span> (diff &lt; <a class="code" href="isis__constants_8h.html#ad60624c29b72fad88c9709bba9748163">MINIMUM_SPF_INTERVAL</a>)
    {
      <span class="keywordflow">if</span> (level == 1)
    <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, spftree-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>, <a class="code" href="isis__spf_8c.html#a4520566d073115fc9dc2f9d50ca22b69">isis_run_spf_l1</a>, area,
             <a class="code" href="isis__constants_8h.html#ad60624c29b72fad88c9709bba9748163">MINIMUM_SPF_INTERVAL</a> - diff);
      <span class="keywordflow">else</span>
    <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, spftree-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>, <a class="code" href="isis__spf_8c.html#a4c4facf36367a44c51978f37f2eca79f">isis_run_spf_l2</a>, area,
             <a class="code" href="isis__constants_8h.html#ad60624c29b72fad88c9709bba9748163">MINIMUM_SPF_INTERVAL</a> - diff);

      spftree-&gt;<a class="code" href="structisis__spftree.html#aa76c26c3083f8fe0179b98b7dc162287">pending</a> = 1;
    }
  <span class="keywordflow">else</span>
    {
      spftree-&gt;<a class="code" href="structisis__spftree.html#aa76c26c3083f8fe0179b98b7dc162287">pending</a> = 0;
      retval = <a class="code" href="isis__spf_8c.html#add02c502bceaaadcb051fb31c84e215f">isis_run_spf</a> (area, level, AF_INET);
      <span class="keywordflow">if</span> (level == 1)
    <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, spftree-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>, <a class="code" href="isis__spf_8c.html#a4520566d073115fc9dc2f9d50ca22b69">isis_run_spf_l1</a>, area,
             <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (<a class="code" href="isis__constants_8h.html#aebbd3eae79162a9064e2487b56291ed7">PERIODIC_SPF_INTERVAL</a>, 10));
      <span class="keywordflow">else</span>
    <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, spftree-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>, <a class="code" href="isis__spf_8c.html#a4c4facf36367a44c51978f37f2eca79f">isis_run_spf_l2</a>, area,
             <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (<a class="code" href="isis__constants_8h.html#aebbd3eae79162a9064e2487b56291ed7">PERIODIC_SPF_INTERVAL</a>, 10));
    }

  <span class="keywordflow">return</span> retval;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a87bc34e97dbd8394892007132903d0e8"></a><!-- doxytag: member="isis_spf.c::isis_spftree_new" ref="a87bc34e97dbd8394892007132903d0e8" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static struct <a class="el" href="structisis__spftree.html">isis_spftree</a>* isis_spftree_new </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [static, read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l00192">192</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__spftree.html">isis_spftree</a> *tree;

  tree = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba67363c12f82b6a04131c820ba0d0f097">MTYPE_ISIS_SPFTREE</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structisis__spftree.html">isis_spftree</a>));
  <span class="keywordflow">if</span> (tree == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;ISIS-Spf: isis_spftree_new Out of memory!&quot;</span>);
      <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }

  tree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
  tree-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
  <span class="keywordflow">return</span> tree;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a0cd21b0d39b2dabae3d8b273a75b9fb9"></a><!-- doxytag: member="isis_spf.c::isis_vertex_del" ref="a0cd21b0d39b2dabae3d8b273a75b9fb9" args="(struct isis_vertex *vertex)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void isis_vertex_del </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__vertex.html">isis_vertex</a> *&#160;</td>
          <td class="paramname"><em>vertex</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l00209">209</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a>);

  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167bacdb37afb15c37c47ac41bb6af17edc15">MTYPE_ISIS_VERTEX</a>, vertex);

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a951e0519c84c47d6c071824958605dde"></a><!-- doxytag: member="isis_spf.c::isis_vertex_new" ref="a951e0519c84c47d6c071824958605dde" args="(void *id, enum vertextype vtype)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static struct <a class="el" href="structisis__vertex.html">isis_vertex</a>* isis_vertex_new </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum <a class="el" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadc">vertextype</a>&#160;</td>
          <td class="paramname"><em>vtype</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static, read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l00262">262</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__vertex.html">isis_vertex</a> *<a class="code" href="structvertex.html">vertex</a>;

  vertex = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167bacdb37afb15c37c47ac41bb6af17edc15">MTYPE_ISIS_VERTEX</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structisis__vertex.html">isis_vertex</a>));
  <span class="keywordflow">if</span> (vertex == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;isis_vertex_new Out of memory!&quot;</span>);
      <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }

  vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a> = vtype;
  <span class="keywordflow">switch</span> (vtype)
    {
    <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca419bd242149145636d0c8ffa096893a0">VTYPE_ES</a>:
    <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcab49954312767a3354f9436d9e8b55879">VTYPE_NONPSEUDO_IS</a>:
    <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca1e82ec051fbdd19aaffa0360854f9b68">VTYPE_NONPSEUDO_TE_IS</a>:
      <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>, (u_char *) <span class="keywordtype">id</span>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcafb01d0d49c5c5472181534c92dd6f7eb">VTYPE_PSEUDO_IS</a>:
    <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca402426f39ccc62ae0920b3966eb86e03">VTYPE_PSEUDO_TE_IS</a>:
      <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>, (u_char *) <span class="keywordtype">id</span>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 1);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca0cb69e553ae6caee606be4d93671b745">VTYPE_IPREACH_INTERNAL</a>:
    <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcac5b5e03da1298700e72fc9b7e58bb1da">VTYPE_IPREACH_EXTERNAL</a>:
    <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcabf3d2d72b3c42d753602198f061abd53">VTYPE_IPREACH_TE</a>:
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>    <span class="keywordflow">case</span> VTYPE_IP6REACH_INTERNAL:
    <span class="keywordflow">case</span> VTYPE_IP6REACH_EXTERNAL:
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
      <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#adc4a56ae6383023d2654e44ef283a968">prefix</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) <span class="keywordtype">id</span>,
          sizeof (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a>));
      <span class="keywordflow">break</span>;
    <span class="keywordflow">default</span>:
      <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;WTF!&quot;</span>);
    }

  vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();

  <span class="keywordflow">return</span> vertex;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a8ce1d0bc17c2992001e52e80072c23b6"></a><!-- doxytag: member="isis_spf.c::process_N" ref="a8ce1d0bc17c2992001e52e80072c23b6" args="(struct isis_spftree *spftree, enum vertextype vtype, void *id, u_int16_t dist, u_int16_t depth, struct isis_adjacency *adj, int family)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void process_N </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__spftree.html">isis_spftree</a> *&#160;</td>
          <td class="paramname"><em>spftree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum <a class="el" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadc">vertextype</a>&#160;</td>
          <td class="paramname"><em>vtype</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_int16_t&#160;</td>
          <td class="paramname"><em>dist</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_int16_t&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structisis__adjacency.html">isis_adjacency</a> *&#160;</td>
          <td class="paramname"><em>adj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>family</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l00489">489</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__vertex.html">isis_vertex</a> *<a class="code" href="structvertex.html">vertex</a>;
<span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<span class="preprocessor"></span>  u_char buff[255];
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>
  <span class="comment">/* C.2.6 b)    */</span>
  <span class="keywordflow">if</span> (dist &gt; <a class="code" href="isis__constants_8h.html#a4940cf4053bca603237d171727ad875f">MAX_PATH_METRIC</a>)
    <span class="keywordflow">return</span>;
  <span class="comment">/*       c)    */</span>
  vertex = <a class="code" href="isis__spf_8c.html#a2518d1c61e9645d59df254f0d1e57c98">isis_find_vertex</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>, <span class="keywordtype">id</span>, vtype);
  <span class="keywordflow">if</span> (vertex)
    {
<span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<span class="preprocessor"></span>      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Spf: process_N  %s %s dist %d already found from PATH&quot;</span>,
          vtype2string (vtype), vid2string (vertex, buff), dist);
<span class="preprocessor">#endif </span><span class="comment">/* EXTREME_DEBUG */</span>
      <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (dist &gt;= vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>);
      <span class="keywordflow">return</span>;
    }

  vertex = <a class="code" href="isis__spf_8c.html#a2518d1c61e9645d59df254f0d1e57c98">isis_find_vertex</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, <span class="keywordtype">id</span>, vtype);
  <span class="comment">/*       d)    */</span>
  <span class="keywordflow">if</span> (vertex)
    {
      <span class="comment">/*        1) */</span>
<span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<span class="preprocessor"></span>      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Spf: process_N  %s %s dist %d&quot;</span>,
          vtype2string (vtype), vid2string (vertex, buff), dist);
<span class="preprocessor">#endif </span><span class="comment">/* EXTREME_DEBUG */</span>
      <span class="keywordflow">if</span> (vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a> == dist)
    {
      <span class="keywordflow">if</span> (adj)
        <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a>, adj);
      <span class="comment">/*      2) */</span>
      <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a>) &gt; <a class="code" href="isis__constants_8h.html#afe8d4a9891abc5f7beba26a54d41ae41">ISIS_MAX_PATH_SPLITS</a>)
        <a class="code" href="isis__spf_8c.html#aa8fc65e3edbbc537529f1c4b8461dcf3">remove_excess_adjs</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a>);
      <span class="comment">/*      3) */</span>
      <span class="keywordflow">return</span>;
    }
      <span class="keywordflow">else</span> <span class="keywordflow">if</span> (vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a> &lt; dist)
    {
      <span class="keywordflow">return</span>;
      <span class="comment">/*      4) */</span>
    }
      <span class="keywordflow">else</span>
    {
      <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, vertex);
    }
    }

  <a class="code" href="isis__spf_8c.html#a675ae1b4432f4b54c3e01f9010f14772">isis_spf_add2tent</a> (spftree, vtype, <span class="keywordtype">id</span>, adj, dist, <a class="code" href="structisis__vertex.html#a54212ccd6e7b1ca331f190fa4e252735">depth</a>, family);
  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa8fc65e3edbbc537529f1c4b8461dcf3"></a><!-- doxytag: member="isis_spf.c::remove_excess_adjs" ref="aa8fc65e3edbbc537529f1c4b8461dcf3" args="(struct list *adjs)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void remove_excess_adjs </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>adjs</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l00061">61</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *excess = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keyword">struct </span><a class="code" href="structisis__adjacency.html">isis_adjacency</a> *adj, *candidate = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keywordtype">int</span> comp;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (adjs, node, adj)) 
    {
      <span class="keywordflow">if</span> (excess == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    excess = node;
      candidate = <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (excess);

      <span class="keywordflow">if</span> (candidate-&gt;<a class="code" href="structisis__adjacency.html#a187eb9cdad6881ecd2735b38a47e07e3">sys_type</a> &lt; adj-&gt;<a class="code" href="structisis__adjacency.html#a187eb9cdad6881ecd2735b38a47e07e3">sys_type</a>)
    {
      excess = node;
      candidate = adj;
      <span class="keywordflow">continue</span>;
    }
      <span class="keywordflow">if</span> (candidate-&gt;<a class="code" href="structisis__adjacency.html#a187eb9cdad6881ecd2735b38a47e07e3">sys_type</a> &gt; adj-&gt;<a class="code" href="structisis__adjacency.html#a187eb9cdad6881ecd2735b38a47e07e3">sys_type</a>)
    <span class="keywordflow">continue</span>;

      comp = <a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (candidate-&gt;<a class="code" href="structisis__adjacency.html#a7b23942ae5652d5cf59b263f131c2038">sysid</a>, adj-&gt;<a class="code" href="structisis__adjacency.html#a7b23942ae5652d5cf59b263f131c2038">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
      <span class="keywordflow">if</span> (comp &gt; 0)
    {
      excess = node;
      candidate = adj;
      <span class="keywordflow">continue</span>;
    }
      <span class="keywordflow">if</span> (comp &lt; 0)
    <span class="keywordflow">continue</span>;

      <span class="keywordflow">if</span> (candidate-&gt;<a class="code" href="structisis__adjacency.html#a29d8beb7bedcecb2c6c2f7112ba5d072">circuit</a>-&gt;<a class="code" href="structisis__circuit.html#a10453f6bcc1e8f1cb466240a81836ba9">circuit_id</a> &gt; adj-&gt;<a class="code" href="structisis__adjacency.html#a29d8beb7bedcecb2c6c2f7112ba5d072">circuit</a>-&gt;<a class="code" href="structisis__circuit.html#a10453f6bcc1e8f1cb466240a81836ba9">circuit_id</a>)
    {
      excess = node;
      candidate = adj;
      <span class="keywordflow">continue</span>;
    }

      <span class="keywordflow">if</span> (candidate-&gt;<a class="code" href="structisis__adjacency.html#a29d8beb7bedcecb2c6c2f7112ba5d072">circuit</a>-&gt;<a class="code" href="structisis__circuit.html#a10453f6bcc1e8f1cb466240a81836ba9">circuit_id</a> &lt; adj-&gt;<a class="code" href="structisis__adjacency.html#a29d8beb7bedcecb2c6c2f7112ba5d072">circuit</a>-&gt;<a class="code" href="structisis__circuit.html#a10453f6bcc1e8f1cb466240a81836ba9">circuit_id</a>)
    <span class="keywordflow">continue</span>;

      comp = <a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (candidate-&gt;<a class="code" href="structisis__adjacency.html#afe4ac3bbff30ac7c5a0da09b05bf9ac0">snpa</a>, adj-&gt;<a class="code" href="structisis__adjacency.html#afe4ac3bbff30ac7c5a0da09b05bf9ac0">snpa</a>, <a class="code" href="isis__constants_8h.html#a9822d89774e0d6ddaa06503950130423">ETH_ALEN</a>);
      <span class="keywordflow">if</span> (comp &gt; 0)
    {
      excess = node;
      candidate = adj;
      <span class="keywordflow">continue</span>;
    }
    }

  <a class="code" href="linklist_8c.html#a44569d4d868c60e29b21409612a5df05">list_delete_node</a> (adjs, excess);

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5e76ff990e90121ffd8e75817238607d"></a><!-- doxytag: member="isis_spf.c::spftree_area_init" ref="a5e76ff990e90121ffd8e75817238607d" args="(struct isis_area *area)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void spftree_area_init </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__area.html">isis_area</a> *&#160;</td>
          <td class="paramname"><em>area</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__spf_8c_source.html#l00235">235</a> of file <a class="el" href="isis__spf_8c_source.html">isis_spf.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> ((area-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>) &amp;&amp; area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[0] == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[0] = <a class="code" href="isis__spf_8c.html#a87bc34e97dbd8394892007132903d0e8">isis_spftree_new</a> ();
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>      area-&gt;spftree6[0] = <a class="code" href="isis__spf_8c.html#a87bc34e97dbd8394892007132903d0e8">isis_spftree_new</a> ();
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>
      <span class="comment">/*    thread_add_timer (master, isis_run_spf_l1, area, </span>
<span class="comment">         isis_jitter (PERIODIC_SPF_INTERVAL, 10)); */</span>
    }

  <span class="keywordflow">if</span> ((area-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a9daa7fbf09b604c718f3bbe189aedd1a">IS_LEVEL_2</a>) &amp;&amp; area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[1] == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[1] = <a class="code" href="isis__spf_8c.html#a87bc34e97dbd8394892007132903d0e8">isis_spftree_new</a> ();
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>      area-&gt;spftree6[1] = <a class="code" href="isis__spf_8c.html#a87bc34e97dbd8394892007132903d0e8">isis_spftree_new</a> ();
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>      <span class="comment">/*    thread_add_timer (master, isis_run_spf_l2, area, </span>
<span class="comment">         isis_jitter (PERIODIC_SPF_INTERVAL, 10)); */</span>
    }

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<hr/><h2>Variable Documentation</h2>
<a class="anchor" id="ab4e4c95630aff8de923b0b7f25dec6e7"></a><!-- doxytag: member="isis_spf.c::host" ref="ab4e4c95630aff8de923b0b7f25dec6e7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structhost.html">host</a> <a class="el" href="structhost.html">host</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="command_8c_source.html#l00044">44</a> of file <a class="el" href="command_8c_source.html">command.c</a>.</p>

</div>
</div>
<a class="anchor" id="aa8cfdc8f7777fd242bd2c45f3a48b950"></a><!-- doxytag: member="isis_spf.c::isis" ref="aa8cfdc8f7777fd242bd2c45f3a48b950" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structisis.html">isis</a>* <a class="el" href="structisis.html">isis</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isisd_8c_source.html#l00061">61</a> of file <a class="el" href="isisd_8c_source.html">isisd.c</a>.</p>

</div>
</div>
<a class="anchor" id="af7f9077bc08df049beb65a1c09cde5fa"></a><!-- doxytag: member="isis_spf.c::master" ref="af7f9077bc08df049beb65a1c09cde5fa" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structthread__master.html">thread_master</a>* <a class="el" href="test__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__main_8c_source.html#l00105">105</a> of file <a class="el" href="bgp__main_8c_source.html">bgp_main.c</a>.</p>

</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="isis__spf_8c.html">isis_spf.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:21 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
