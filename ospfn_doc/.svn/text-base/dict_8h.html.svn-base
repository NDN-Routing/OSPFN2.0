<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: isisd/dict.h File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('dict_8h.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Defines</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">isisd/dict.h File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &lt;limits.h&gt;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for dict.h:</div>
<div class="dyncontent">
<div class="center"><img src="dict_8h__incl.png" border="0" usemap="#isisd_2dict_8h" alt=""/></div>
<map name="isisd_2dict_8h" id="isisd_2dict_8h">
</map>
</div>
</div><div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><img src="dict_8h__dep__incl.png" border="0" usemap="#isisd_2dict_8hdep" alt=""/></div>
<map name="isisd_2dict_8hdep" id="isisd_2dict_8hdep">
<area shape="rect" id="node3" href="dict_8c.html" title="isisd/dict.c" alt="" coords="5,80,91,107"/><area shape="rect" id="node5" href="isis__adjacency_8c.html" title="isisd/isis_adjacency.c" alt="" coords="115,80,268,107"/><area shape="rect" id="node7" href="isis__bpf_8c.html" title="isisd/isis_bpf.c" alt="" coords="293,80,403,107"/><area shape="rect" id="node9" href="isis__circuit_8c.html" title="isisd/isis_circuit.c" alt="" coords="427,80,553,107"/><area shape="rect" id="node11" href="isis__csm_8c.html" title="isisd/isis_csm.c" alt="" coords="578,80,693,107"/><area shape="rect" id="node13" href="isis__dlpi_8c.html" title="isisd/isis_dlpi.c" alt="" coords="718,80,831,107"/><area shape="rect" id="node15" href="isis__dr_8c.html" title="isisd/isis_dr.c" alt="" coords="855,80,957,107"/><area shape="rect" id="node17" href="isis__dynhn_8c.html" title="isisd/isis_dynhn.c" alt="" coords="982,80,1108,107"/><area shape="rect" id="node19" href="isis__events_8c.html" title="isisd/isis_events.c" alt="" coords="1133,80,1267,107"/><area shape="rect" id="node21" href="isis__lsp_8c.html" title="isisd/isis_lsp.c" alt="" coords="1291,80,1400,107"/><area shape="rect" id="node23" href="isis__main_8c.html" title="isisd/isis_main.c" alt="" coords="1425,80,1543,107"/><area shape="rect" id="node25" href="isis__misc_8c.html" title="isisd/isis_misc.c" alt="" coords="1567,80,1685,107"/><area shape="rect" id="node27" href="isis__pdu_8c.html" title="isisd/isis_pdu.c" alt="" coords="1711,80,1825,107"/><area shape="rect" id="node29" href="isis__pfpacket_8c.html" title="isisd/isis_pfpacket.c" alt="" coords="1849,80,1993,107"/><area shape="rect" id="node31" href="isis__route_8c.html" title="isisd/isis_route.c" alt="" coords="2017,80,2140,107"/><area shape="rect" id="node33" href="isis__routemap_8c.html" title="isisd/isis_routemap.c" alt="" coords="2164,80,2313,107"/><area shape="rect" id="node35" href="isis__spf_8c.html" title="isisd/isis_spf.c" alt="" coords="2338,80,2448,107"/><area shape="rect" id="node37" href="isis__tlv_8c.html" title="isisd/isis_tlv.c" alt="" coords="2473,80,2580,107"/><area shape="rect" id="node39" href="isis__zebra_8c.html" title="isisd/isis_zebra.c" alt="" coords="2605,80,2728,107"/><area shape="rect" id="node41" href="isisd_8c.html" title="isisd/isisd.c" alt="" coords="2753,80,2844,107"/></map>
</div>
</div>
<p><a href="dict_8h_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdnode__t.html">dnode_t</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdict__t.html">dict_t</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structdict__load__t.html">dict_load_t</a></td></tr>
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a7cc0c7f4164b72cfc0c8e543d6fd3951">DICTCOUNT_T_MAX</a>&#160;&#160;&#160;ULONG_MAX</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a8ee82117d61f5699b4a4bcd8dbc1623b">dict_isfull</a>(D)&#160;&#160;&#160;((D)-&gt;dict_nodecount == (D)-&gt;dict_maxcount)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a392c768130a1c7ed5a6c2f299cd0d2e8">dict_count</a>(D)&#160;&#160;&#160;((D)-&gt;dict_nodecount)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a71f54a3dc27888df31631db89e956195">dict_isempty</a>(D)&#160;&#160;&#160;((D)-&gt;dict_nodecount == 0)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a17fccc85aae3874de7152f103d5945bc">dnode_get</a>(N)&#160;&#160;&#160;((N)-&gt;dict_data)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a6f2633dde474b0288d6a737651f69a51">dnode_getkey</a>(N)&#160;&#160;&#160;((N)-&gt;dict_key)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#abdc56a1f271b88b51d1da5c6f0f38459">dnode_put</a>(N, <a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)&#160;&#160;&#160;((N)-&gt;dict_data = (<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>))</td></tr>
<tr><td colspan="2"><h2><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a0ccdd0435aed173cb756dbb8f6ed27c5">dictcount_t</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structdnode__t.html">dnode_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#ade0d7b1d47e072a8c3095805635c9171">dnode_t</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef int(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a92a0ce54764499eee8e3584a7b8795d9">dict_comp_t</a> )(const void *, const void *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="structdnode__t.html">dnode_t</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a9622bc12328ca0820a2b75ddd368e742">dnode_alloc_t</a> )(void *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#aab7503760ea3aa9d811d19c8acd425c8">dnode_free_t</a> )(<a class="el" href="structdnode__t.html">dnode_t</a> *, void *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structdict__t.html">dict_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#aa08059f3860bf4f867ba4275e9c6268a">dict_t</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#af6c238eee1552793065cbec20b1aafcb">dnode_process_t</a> )(<a class="el" href="structdict__t.html">dict_t</a> *, <a class="el" href="structdnode__t.html">dnode_t</a> *, void *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structdict__load__t.html">dict_load_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a0b41502f897c84a37d85dae2ae949474">dict_load_t</a></td></tr>
<tr><td colspan="2"><h2><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762c">dnode_color_t</a> { <a class="el" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>, 
<a class="el" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>
 }</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#adecf41342013cd6ec8bc2f7dc358bf75">dict_create</a> (<a class="el" href="dict_8h.html#a0ccdd0435aed173cb756dbb8f6ed27c5">dictcount_t</a>, <a class="el" href="dict_8h.html#a92a0ce54764499eee8e3584a7b8795d9">dict_comp_t</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a6260e04887fcd8f4436e55d46172f27f">dict_set_allocator</a> (<a class="el" href="structdict__t.html">dict_t</a> *, <a class="el" href="dict_8h.html#a9622bc12328ca0820a2b75ddd368e742">dnode_alloc_t</a>, <a class="el" href="dict_8h.html#aab7503760ea3aa9d811d19c8acd425c8">dnode_free_t</a>, void *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#add7e129623c4b6626d17da2b86781edb">dict_destroy</a> (<a class="el" href="structdict__t.html">dict_t</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a8af0fd5c804dc28a2ea765df067c7861">dict_free_nodes</a> (<a class="el" href="structdict__t.html">dict_t</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a0f337dcd49bdab891c5a4442b71762e9">dict_free</a> (<a class="el" href="structdict__t.html">dict_t</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a9e29e6ef1145760c4939685ee7f29fd6">dict_init</a> (<a class="el" href="structdict__t.html">dict_t</a> *, <a class="el" href="dict_8h.html#a0ccdd0435aed173cb756dbb8f6ed27c5">dictcount_t</a>, <a class="el" href="dict_8h.html#a92a0ce54764499eee8e3584a7b8795d9">dict_comp_t</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a79f2b76355e1615aa8c01f13de285bd1">dict_init_like</a> (<a class="el" href="structdict__t.html">dict_t</a> *, const <a class="el" href="structdict__t.html">dict_t</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#adb22d4be22fed78698472fd805e73b08">dict_verify</a> (<a class="el" href="structdict__t.html">dict_t</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#adf15e502d9d639b4e2b7417392b023d0">dict_similar</a> (const <a class="el" href="structdict__t.html">dict_t</a> *, const <a class="el" href="structdict__t.html">dict_t</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#abec592452c89b5c1d63b29df3572ec13">dict_lookup</a> (<a class="el" href="structdict__t.html">dict_t</a> *, const void *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a00d77444a37849db4809ab55f359cf52">dict_lower_bound</a> (<a class="el" href="structdict__t.html">dict_t</a> *, const void *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a6be2cd95fab60b96729dbe9362ca8c23">dict_upper_bound</a> (<a class="el" href="structdict__t.html">dict_t</a> *, const void *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#abaa53293359847ad15829e68689d1a96">dict_insert</a> (<a class="el" href="structdict__t.html">dict_t</a> *, <a class="el" href="structdnode__t.html">dnode_t</a> *, const void *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a2f1d0b6b863d7ce68eb4ab77f7d299bf">dict_delete</a> (<a class="el" href="structdict__t.html">dict_t</a> *, <a class="el" href="structdnode__t.html">dnode_t</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#ab516bd0c8a60113a020da6248e5c7bea">dict_alloc_insert</a> (<a class="el" href="structdict__t.html">dict_t</a> *, const void *, void *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a80426b8c8b63bf6637e5c9b7850bc4b5">dict_delete_free</a> (<a class="el" href="structdict__t.html">dict_t</a> *, <a class="el" href="structdnode__t.html">dnode_t</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a13b38de6d0c97fe1c915fdfb32764f30">dict_first</a> (<a class="el" href="structdict__t.html">dict_t</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#aa126efff0b159875e643646e14a7970c">dict_last</a> (<a class="el" href="structdict__t.html">dict_t</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#ade9223faf7dd9c1dbb8101de5dd6c530">dict_next</a> (<a class="el" href="structdict__t.html">dict_t</a> *, <a class="el" href="structdnode__t.html">dnode_t</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a7729159bc4951a7095dbe3fc7a9115b3">dict_prev</a> (<a class="el" href="structdict__t.html">dict_t</a> *, <a class="el" href="structdnode__t.html">dnode_t</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="dict_8h.html#a0ccdd0435aed173cb756dbb8f6ed27c5">dictcount_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a399b01f6062054cac4553f58d9d7ad75">dict_count</a> (<a class="el" href="structdict__t.html">dict_t</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a5db00df0aefc7b4234a44bfea0231da3">dict_isempty</a> (<a class="el" href="structdict__t.html">dict_t</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#ab467e2b97e284e2e6444126b07c15a6f">dict_isfull</a> (<a class="el" href="structdict__t.html">dict_t</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#ae9c9f29f60f813506307695a238accef">dict_contains</a> (<a class="el" href="structdict__t.html">dict_t</a> *, <a class="el" href="structdnode__t.html">dnode_t</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#ad262c35baf3605f8b5c48996b1642ecc">dict_allow_dupes</a> (<a class="el" href="structdict__t.html">dict_t</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a9b92759d56a998d2873d00a3a7dcf394">dnode_is_in_a_dict</a> (<a class="el" href="structdnode__t.html">dnode_t</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#ae5a3a2466871264a63274101b5aaea5b">dnode_create</a> (void *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a476c27a94146803af1534cb4e150230e">dnode_init</a> (<a class="el" href="structdnode__t.html">dnode_t</a> *, void *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a68948cf58a58fb084bab0663b9a694fe">dnode_destroy</a> (<a class="el" href="structdnode__t.html">dnode_t</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#ac57978aa6070a9ca89375c57da666f8a">dnode_get</a> (<a class="el" href="structdnode__t.html">dnode_t</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a009b83831beb6f5858c97cd49f085b02">dnode_getkey</a> (<a class="el" href="structdnode__t.html">dnode_t</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a529778cae6faf055adde486003d870ae">dnode_put</a> (<a class="el" href="structdnode__t.html">dnode_t</a> *, void *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a98c007a36bce993a048ca85c6395ae52">dict_process</a> (<a class="el" href="structdict__t.html">dict_t</a> *, void *, <a class="el" href="dict_8h.html#af6c238eee1552793065cbec20b1aafcb">dnode_process_t</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a48e7248138bd07c961e5de2d5ad1ff69">dict_load_begin</a> (<a class="el" href="structdict__load__t.html">dict_load_t</a> *, <a class="el" href="structdict__t.html">dict_t</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a4a26a23ff514a89b3a08dcc1b19785b2">dict_load_next</a> (<a class="el" href="structdict__load__t.html">dict_load_t</a> *, <a class="el" href="structdnode__t.html">dnode_t</a> *, const void *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a80ffb4c435c9c12be32f9342cacd38ef">dict_load_end</a> (<a class="el" href="structdict__load__t.html">dict_load_t</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8h.html#a5454ab4b2e9abab524e19b88a18eb5cf">dict_merge</a> (<a class="el" href="structdict__t.html">dict_t</a> *, <a class="el" href="structdict__t.html">dict_t</a> *)</td></tr>
</table>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="a392c768130a1c7ed5a6c2f299cd0d2e8"></a><!-- doxytag: member="dict.h::dict_count" ref="a392c768130a1c7ed5a6c2f299cd0d2e8" args="(D)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define dict_count</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">D</td><td>)</td>
          <td>&#160;&#160;&#160;((D)-&gt;dict_nodecount)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8h_source.html#l00133">133</a> of file <a class="el" href="dict_8h_source.html">dict.h</a>.</p>

</div>
</div>
<a class="anchor" id="a71f54a3dc27888df31631db89e956195"></a><!-- doxytag: member="dict.h::dict_isempty" ref="a71f54a3dc27888df31631db89e956195" args="(D)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define dict_isempty</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">D</td><td>)</td>
          <td>&#160;&#160;&#160;((D)-&gt;dict_nodecount == 0)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8h_source.html#l00134">134</a> of file <a class="el" href="dict_8h_source.html">dict.h</a>.</p>

</div>
</div>
<a class="anchor" id="a8ee82117d61f5699b4a4bcd8dbc1623b"></a><!-- doxytag: member="dict.h::dict_isfull" ref="a8ee82117d61f5699b4a4bcd8dbc1623b" args="(D)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define dict_isfull</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">D</td><td>)</td>
          <td>&#160;&#160;&#160;((D)-&gt;dict_nodecount == (D)-&gt;dict_maxcount)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8h_source.html#l00131">131</a> of file <a class="el" href="dict_8h_source.html">dict.h</a>.</p>

</div>
</div>
<a class="anchor" id="a7cc0c7f4164b72cfc0c8e543d6fd3951"></a><!-- doxytag: member="dict.h::DICTCOUNT_T_MAX" ref="a7cc0c7f4164b72cfc0c8e543d6fd3951" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DICTCOUNT_T_MAX&#160;&#160;&#160;ULONG_MAX</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8h_source.html#l00038">38</a> of file <a class="el" href="dict_8h_source.html">dict.h</a>.</p>

</div>
</div>
<a class="anchor" id="a17fccc85aae3874de7152f103d5945bc"></a><!-- doxytag: member="dict.h::dnode_get" ref="a17fccc85aae3874de7152f103d5945bc" args="(N)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define dnode_get</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">N</td><td>)</td>
          <td>&#160;&#160;&#160;((N)-&gt;dict_data)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8h_source.html#l00135">135</a> of file <a class="el" href="dict_8h_source.html">dict.h</a>.</p>

</div>
</div>
<a class="anchor" id="a6f2633dde474b0288d6a737651f69a51"></a><!-- doxytag: member="dict.h::dnode_getkey" ref="a6f2633dde474b0288d6a737651f69a51" args="(N)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define dnode_getkey</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">N</td><td>)</td>
          <td>&#160;&#160;&#160;((N)-&gt;dict_key)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8h_source.html#l00136">136</a> of file <a class="el" href="dict_8h_source.html">dict.h</a>.</p>

</div>
</div>
<a class="anchor" id="abdc56a1f271b88b51d1da5c6f0f38459"></a><!-- doxytag: member="dict.h::dnode_put" ref="abdc56a1f271b88b51d1da5c6f0f38459" args="(N, X)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define dnode_put</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">N, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;((N)-&gt;dict_data = (<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>))</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8h_source.html#l00137">137</a> of file <a class="el" href="dict_8h_source.html">dict.h</a>.</p>

</div>
</div>
<hr/><h2>Typedef Documentation</h2>
<a class="anchor" id="a92a0ce54764499eee8e3584a7b8795d9"></a><!-- doxytag: member="dict.h::dict_comp_t" ref="a92a0ce54764499eee8e3584a7b8795d9" args=")(const void *, const void *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef int(* <a class="el" href="dict_8h.html#a92a0ce54764499eee8e3584a7b8795d9">dict_comp_t</a>)(const void *, const void *)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8h_source.html#l00059">59</a> of file <a class="el" href="dict_8h_source.html">dict.h</a>.</p>

</div>
</div>
<a class="anchor" id="a0b41502f897c84a37d85dae2ae949474"></a><!-- doxytag: member="dict.h::dict_load_t" ref="a0b41502f897c84a37d85dae2ae949474" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="structdict__load__t.html">dict_load_t</a>  <a class="el" href="structdict__load__t.html">dict_load_t</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="aa08059f3860bf4f867ba4275e9c6268a"></a><!-- doxytag: member="dict.h::dict_t" ref="aa08059f3860bf4f867ba4275e9c6268a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="structdict__t.html">dict_t</a>  <a class="el" href="structdict__t.html">dict_t</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a0ccdd0435aed173cb756dbb8f6ed27c5"></a><!-- doxytag: member="dict.h::dictcount_t" ref="a0ccdd0435aed173cb756dbb8f6ed27c5" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef unsigned long <a class="el" href="dict_8h.html#a0ccdd0435aed173cb756dbb8f6ed27c5">dictcount_t</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8h_source.html#l00037">37</a> of file <a class="el" href="dict_8h_source.html">dict.h</a>.</p>

</div>
</div>
<a class="anchor" id="a9622bc12328ca0820a2b75ddd368e742"></a><!-- doxytag: member="dict.h::dnode_alloc_t" ref="a9622bc12328ca0820a2b75ddd368e742" args=")(void *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="structdnode__t.html">dnode_t</a>*(* <a class="el" href="dict_8h.html#a9622bc12328ca0820a2b75ddd368e742">dnode_alloc_t</a>)(void *)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8h_source.html#l00060">60</a> of file <a class="el" href="dict_8h_source.html">dict.h</a>.</p>

</div>
</div>
<a class="anchor" id="aab7503760ea3aa9d811d19c8acd425c8"></a><!-- doxytag: member="dict.h::dnode_free_t" ref="aab7503760ea3aa9d811d19c8acd425c8" args=")(dnode_t *, void *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* <a class="el" href="dict_8h.html#aab7503760ea3aa9d811d19c8acd425c8">dnode_free_t</a>)(<a class="el" href="structdnode__t.html">dnode_t</a> *, void *)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8h_source.html#l00061">61</a> of file <a class="el" href="dict_8h_source.html">dict.h</a>.</p>

</div>
</div>
<a class="anchor" id="af6c238eee1552793065cbec20b1aafcb"></a><!-- doxytag: member="dict.h::dnode_process_t" ref="af6c238eee1552793065cbec20b1aafcb" args=")(dict_t *, dnode_t *, void *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* <a class="el" href="dict_8h.html#af6c238eee1552793065cbec20b1aafcb">dnode_process_t</a>)(<a class="el" href="structdict__t.html">dict_t</a> *, <a class="el" href="structdnode__t.html">dnode_t</a> *, void *)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8h_source.html#l00078">78</a> of file <a class="el" href="dict_8h_source.html">dict.h</a>.</p>

</div>
</div>
<a class="anchor" id="ade0d7b1d47e072a8c3095805635c9171"></a><!-- doxytag: member="dict.h::dnode_t" ref="ade0d7b1d47e072a8c3095805635c9171" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="structdnode__t.html">dnode_t</a>  <a class="el" href="structdnode__t.html">dnode_t</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="ac5e3d0f627eeb63b629c3e8af8c9762c"></a><!-- doxytag: member="dict.h::dnode_color_t" ref="ac5e3d0f627eeb63b629c3e8af8c9762c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762c">dnode_color_t</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8"></a><!-- doxytag: member="dnode_red" ref="ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8" args="" -->dnode_red</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5"></a><!-- doxytag: member="dnode_black" ref="ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5" args="" -->dnode_black</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="dict_8h_source.html#l00044">44</a> of file <a class="el" href="dict_8h_source.html">dict.h</a>.</p>
<div class="fragment"><pre class="fragment">{ <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>, <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a> } <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762c">dnode_color_t</a>;
</pre></div>
</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ab516bd0c8a60113a020da6248e5c7bea"></a><!-- doxytag: member="dict.h::dict_alloc_insert" ref="ab516bd0c8a60113a020da6248e5c7bea" args="(dict_t *, const void *, void *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int dict_alloc_insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00814">814</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *node = dict-&gt;allocnode(dict-&gt;context);

    <span class="keywordflow">if</span> (node) {
    <a class="code" href="dict_8c.html#a7d2886945deceaa6b594007adc771ec0">dnode_init</a>(node, <a class="code" href="dict_8c.html#a43a278d13284fb3412e9eee1db1d967e">data</a>);
    <a class="code" href="dict_8c.html#a761d921fc86ec6bfbb8f77f15a48662f">dict_insert</a>(dict, node, <a class="code" href="structkey.html">key</a>);
    <span class="keywordflow">return</span> 1;
    }
    <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad262c35baf3605f8b5c48996b1642ecc"></a><!-- doxytag: member="dict.h::dict_allow_dupes" ref="ad262c35baf3605f8b5c48996b1642ecc" args="(dict_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_allow_dupes </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00918">918</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    dict-&gt;dupes = 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae9c9f29f60f813506307695a238accef"></a><!-- doxytag: member="dict.h::dict_contains" ref="ae9c9f29f60f813506307695a238accef" args="(dict_t *, dnode_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int dict_contains </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00945">945</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> <a class="code" href="dict_8c.html#ae986d29f8534fae1d89db38aacd48d24">verify_dict_has_node</a>(<a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict), <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict), node);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a399b01f6062054cac4553f58d9d7ad75"></a><!-- doxytag: member="dict.h::dict_count" ref="a399b01f6062054cac4553f58d9d7ad75" args="(dict_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="dict_8h.html#a0ccdd0435aed173cb756dbb8f6ed27c5">dictcount_t</a> dict_count </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00930">930</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> dict-&gt;nodecount;
}
</pre></div>
</div>
</div>
<a class="anchor" id="adecf41342013cd6ec8bc2f7dc358bf75"></a><!-- doxytag: member="dict.h::dict_create" ref="adecf41342013cd6ec8bc2f7dc358bf75" args="(dictcount_t, dict_comp_t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdict__t.html">dict_t</a>* dict_create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="dict_8h.html#a0ccdd0435aed173cb756dbb8f6ed27c5">dictcount_t</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="dict_8h.html#a92a0ce54764499eee8e3584a7b8795d9">dict_comp_t</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00247">247</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdict__t.html">dict_t</a> *<span class="keyword">new</span> = <a class="code" href="regex_8c.html#ab7e36af3707843f77cc5b4e831c2fa6d">malloc</a>(<span class="keyword">sizeof</span> *<span class="keyword">new</span>);

    <span class="keywordflow">if</span> (<span class="keyword">new</span>) {
    <span class="keyword">new</span>-&gt;compare = comp;
    <span class="keyword">new</span>-&gt;allocnode = <a class="code" href="dict_8c.html#a0d63f8b9a1a39f8b3edfef544497265b">dnode_alloc</a>;
    <span class="keyword">new</span>-&gt;freenode = <a class="code" href="dict_8c.html#a0816722a1a33c537793c38eaac3233cb">dnode_free</a>;
    <span class="keyword">new</span>-&gt;context = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    <span class="keyword">new</span>-&gt;nodecount = 0;
    <span class="keyword">new</span>-&gt;maxcount = <a class="code" href="dict_8c.html#aab843860735df831cb06670bfdf0f3c3">maxcount</a>;
    <span class="keyword">new</span>-&gt;nilnode.left = &amp;<span class="keyword">new</span>-&gt;nilnode;
    <span class="keyword">new</span>-&gt;nilnode.right = &amp;<span class="keyword">new</span>-&gt;nilnode;
    <span class="keyword">new</span>-&gt;nilnode.parent = &amp;<span class="keyword">new</span>-&gt;nilnode;
    <span class="keyword">new</span>-&gt;nilnode.color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
    <span class="keyword">new</span>-&gt;dupes = 0;
    }
    <span class="keywordflow">return</span> <span class="keyword">new</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a2f1d0b6b863d7ce68eb4ab77f7d299bf"></a><!-- doxytag: member="dict.h::dict_delete" ref="a2f1d0b6b863d7ce68eb4ab77f7d299bf" args="(dict_t *, dnode_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdnode__t.html">dnode_t</a>* dict_delete </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00640">640</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *nil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict), *child, *delparent = <span class="keyword">delete</span>-&gt;parent;

    <span class="comment">/* basic deletion */</span>

    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (!<a class="code" href="dict_8h.html#a71f54a3dc27888df31631db89e956195">dict_isempty</a>(dict));
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8c.html#a41876a53021479360b7fcebf009c1bbd">dict_contains</a>(dict, <span class="keyword">delete</span>));

    <span class="comment">/*</span>
<span class="comment">     * If the node being deleted has two children, then we replace it with its</span>
<span class="comment">     * successor (i.e. the leftmost node in the right subtree.) By doing this,</span>
<span class="comment">     * we avoid the traditional algorithm under which the successor&#39;s key and</span>
<span class="comment">     * value *only* move to the deleted node and the successor is spliced out</span>
<span class="comment">     * from the tree. We cannot use this approach because the user may hold</span>
<span class="comment">     * pointers to the successor, or nodes may be inextricably tied to some</span>
<span class="comment">     * other structures by way of embedding, etc. So we must splice out the</span>
<span class="comment">     * node we are given, not some other node, and must not move contents from</span>
<span class="comment">     * one node to another behind the user&#39;s back.</span>
<span class="comment">     */</span>

    <span class="keywordflow">if</span> (delete-&gt;left != nil &amp;&amp; delete-&gt;right != nil) {
    <a class="code" href="structdnode__t.html">dnode_t</a> *<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a>(dict, <span class="keyword">delete</span>);
    <a class="code" href="structdnode__t.html">dnode_t</a> *nextparent = next-&gt;parent;
    <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762c">dnode_color_t</a> nextcolor = next-&gt;color;

    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (next != nil);
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (next-&gt;parent != nil);
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (next-&gt;left == nil);

    <span class="comment">/*</span>
<span class="comment">     * First, splice out the successor from the tree completely, by</span>
<span class="comment">     * moving up its right child into its place.</span>
<span class="comment">     */</span>

    child = next-&gt;right;
    child-&gt;parent = nextparent;

    <span class="keywordflow">if</span> (nextparent-&gt;left == next) {
        nextparent-&gt;left = child;
    } <span class="keywordflow">else</span> {
        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (nextparent-&gt;right == next);
        nextparent-&gt;right = child;
    }

    <span class="comment">/*</span>
<span class="comment">     * Now that the successor has been extricated from the tree, install it</span>
<span class="comment">     * in place of the node that we want deleted.</span>
<span class="comment">     */</span>

    next-&gt;parent = delparent;
    next-&gt;left = <span class="keyword">delete</span>-&gt;left;
    next-&gt;right = <span class="keyword">delete</span>-&gt;right;
    next-&gt;left-&gt;parent = <a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
    next-&gt;right-&gt;parent = <a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
    next-&gt;color = <span class="keyword">delete</span>-&gt;color;
    <span class="keyword">delete</span>-&gt;color = nextcolor;

    <span class="keywordflow">if</span> (delparent-&gt;left == <span class="keyword">delete</span>) {
        delparent-&gt;left = <a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
    } <span class="keywordflow">else</span> {
        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (delparent-&gt;right == <span class="keyword">delete</span>);
        delparent-&gt;right = <a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
    }

    } <span class="keywordflow">else</span> {
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<span class="keyword">delete</span> != nil);
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (delete-&gt;left == nil || delete-&gt;right == nil);

    child = (<span class="keyword">delete</span>-&gt;left != nil) ? delete-&gt;left : delete-&gt;right;

    child-&gt;parent = delparent = delete-&gt;parent;     

    if (<span class="keyword">delete</span> == delparent-&gt;left) {
        delparent-&gt;left = child;    
    } <span class="keywordflow">else</span> {
        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<span class="keyword">delete</span> == delparent-&gt;right);
        delparent-&gt;right = child;
    }
    }

    <span class="keyword">delete</span>-&gt;parent = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    <span class="keyword">delete</span>-&gt;right = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    <span class="keyword">delete</span>-&gt;left = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

    dict-&gt;nodecount--;

    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8c.html#a7af8b0b9796e50e8770a517959b64364">verify_bintree</a>(dict));

    <span class="comment">/* red-black adjustments */</span>

    <span class="keywordflow">if</span> (delete-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>) {
    <a class="code" href="structdnode__t.html">dnode_t</a> *<a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>, *sister;

    <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict)-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;

    <span class="keywordflow">while</span> (child-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>) {
        parent = child-&gt;parent;
        <span class="keywordflow">if</span> (child == parent-&gt;left) {
        sister = parent-&gt;right;
        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (sister != nil);
        <span class="keywordflow">if</span> (sister-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>) {
            sister-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
            parent-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;
            <a class="code" href="dict_8c.html#a6c3000c0249a91cb54c68c2aad08ea03">rotate_left</a>(parent);
            sister = parent-&gt;right;
            <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (sister != nil);
        }
        <span class="keywordflow">if</span> (sister-&gt;left-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>
            &amp;&amp; sister-&gt;right-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>) {
            sister-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;
            child = <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>;
        } <span class="keywordflow">else</span> {
            <span class="keywordflow">if</span> (sister-&gt;right-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>) {
            <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (sister-&gt;left-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>);
            sister-&gt;left-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
            sister-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;
            <a class="code" href="dict_8c.html#affc1c26c10656d2aacf662d7750f61fd">rotate_right</a>(sister);
            sister = parent-&gt;right;
            <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (sister != nil);
            }
            sister-&gt;color = parent-&gt;color;
            sister-&gt;right-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
            parent-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
            <a class="code" href="dict_8c.html#a6c3000c0249a91cb54c68c2aad08ea03">rotate_left</a>(parent);
            <span class="keywordflow">break</span>;
        }
        } <span class="keywordflow">else</span> {    <span class="comment">/* symmetric case: child == child-&gt;parent-&gt;right */</span>
        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (child == parent-&gt;right);
        sister = parent-&gt;left;
        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (sister != nil);
        <span class="keywordflow">if</span> (sister-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>) {
            sister-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
            parent-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;
            <a class="code" href="dict_8c.html#affc1c26c10656d2aacf662d7750f61fd">rotate_right</a>(parent);
            sister = parent-&gt;left;
            <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (sister != nil);
        }
        <span class="keywordflow">if</span> (sister-&gt;right-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>
            &amp;&amp; sister-&gt;left-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>) {
            sister-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;
            child = <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>;
        } <span class="keywordflow">else</span> {
            <span class="keywordflow">if</span> (sister-&gt;left-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>) {
            <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (sister-&gt;right-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>);
            sister-&gt;right-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
            sister-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;
            <a class="code" href="dict_8c.html#a6c3000c0249a91cb54c68c2aad08ea03">rotate_left</a>(sister);
            sister = parent-&gt;left;
            <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (sister != nil);
            }
            sister-&gt;color = parent-&gt;color;
            sister-&gt;left-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
            parent-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
            <a class="code" href="dict_8c.html#affc1c26c10656d2aacf662d7750f61fd">rotate_right</a>(parent);
            <span class="keywordflow">break</span>;
        }
        }
    }

    child-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
    <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict)-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
    }

    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8c.html#a8fd61b9b13f52b4d1e0d34a8f2178f13">dict_verify</a>(dict));

    <span class="keywordflow">return</span> <span class="keyword">delete</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a80426b8c8b63bf6637e5c9b7850bc4b5"></a><!-- doxytag: member="dict.h::dict_delete_free" ref="a80426b8c8b63bf6637e5c9b7850bc4b5" args="(dict_t *, dnode_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_delete_free </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00826">826</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="dict_8c.html#ad51f28cd1829e1fd66caf58f553d794e">dict_delete</a>(dict, node);
    dict-&gt;freenode(node, dict-&gt;context);
}
</pre></div>
</div>
</div>
<a class="anchor" id="add7e129623c4b6626d17da2b86781edb"></a><!-- doxytag: member="dict.h::dict_destroy" ref="add7e129623c4b6626d17da2b86781edb" args="(dict_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00287">287</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8h.html#a71f54a3dc27888df31631db89e956195">dict_isempty</a>(dict));
    free(dict);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a13b38de6d0c97fe1c915fdfb32764f30"></a><!-- doxytag: member="dict.h::dict_first" ref="a13b38de6d0c97fe1c915fdfb32764f30" args="(dict_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdnode__t.html">dnode_t</a>* dict_first </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00837">837</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *nil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict), *root = <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict), *<a class="code" href="dict_8c.html#a428f8207615465afdfcf1d31547ffef3">left</a>;

    <span class="keywordflow">if</span> (root != nil)
    <span class="keywordflow">while</span> ((<a class="code" href="dict_8c.html#a428f8207615465afdfcf1d31547ffef3">left</a> = root-&gt;left) != nil)
        root = <a class="code" href="dict_8c.html#a428f8207615465afdfcf1d31547ffef3">left</a>;

    <span class="keywordflow">return</span> (root == nil) ? <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> : root;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a0f337dcd49bdab891c5a4442b71762e9"></a><!-- doxytag: member="dict.h::dict_free" ref="a0f337dcd49bdab891c5a4442b71762e9" args="(dict_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_free </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00311">311</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
<span class="preprocessor">#ifdef KAZLIB_OBSOLESCENT_DEBUG</span>
<span class="preprocessor"></span>    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<span class="stringliteral">&quot;call to obsolescent function dict_free()&quot;</span> &amp;&amp; 0);
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>    <a class="code" href="dict_8c.html#abbb87db71ff5da8f7881d347dba70e59">dict_free_nodes</a>(dict);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a8af0fd5c804dc28a2ea765df067c7861"></a><!-- doxytag: member="dict.h::dict_free_nodes" ref="a8af0fd5c804dc28a2ea765df067c7861" args="(dict_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_free_nodes </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00298">298</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *nil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict), *root = <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict);
    <a class="code" href="dict_8c.html#a0fd13b499b544b23aa94217bbf9d1189">free_nodes</a>(dict, root, nil);
    dict-&gt;nodecount = 0;
    dict-&gt;nilnode.left = &amp;dict-&gt;nilnode;
    dict-&gt;nilnode.right = &amp;dict-&gt;nilnode;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9e29e6ef1145760c4939685ee7f29fd6"></a><!-- doxytag: member="dict.h::dict_init" ref="a9e29e6ef1145760c4939685ee7f29fd6" args="(dict_t *, dictcount_t, dict_comp_t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdict__t.html">dict_t</a>* dict_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="dict_8h.html#a0ccdd0435aed173cb756dbb8f6ed27c5">dictcount_t</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="dict_8h.html#a92a0ce54764499eee8e3584a7b8795d9">dict_comp_t</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00323">323</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    dict-&gt;compare = comp;
    dict-&gt;allocnode = <a class="code" href="dict_8c.html#a0d63f8b9a1a39f8b3edfef544497265b">dnode_alloc</a>;
    dict-&gt;freenode = <a class="code" href="dict_8c.html#a0816722a1a33c537793c38eaac3233cb">dnode_free</a>;
    dict-&gt;context = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    dict-&gt;nodecount = 0;
    dict-&gt;maxcount = <a class="code" href="dict_8c.html#aab843860735df831cb06670bfdf0f3c3">maxcount</a>;
    dict-&gt;nilnode.left = &amp;dict-&gt;nilnode;
    dict-&gt;nilnode.right = &amp;dict-&gt;nilnode;
    dict-&gt;nilnode.parent = &amp;dict-&gt;nilnode;
    dict-&gt;nilnode.color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
    dict-&gt;dupes = 0;
    <span class="keywordflow">return</span> dict;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a79f2b76355e1615aa8c01f13de285bd1"></a><!-- doxytag: member="dict.h::dict_init_like" ref="a79f2b76355e1615aa8c01f13de285bd1" args="(dict_t *, const dict_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_init_like </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00343">343</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    dict-&gt;compare = <span class="keyword">template</span>-&gt;compare;
    dict-&gt;allocnode = <span class="keyword">template</span>-&gt;allocnode;
    dict-&gt;freenode = <span class="keyword">template</span>-&gt;freenode;
    dict-&gt;context = <span class="keyword">template</span>-&gt;context;
    dict-&gt;nodecount = 0;
    dict-&gt;maxcount = <span class="keyword">template</span>-&gt;maxcount;
    dict-&gt;nilnode.left = &amp;dict-&gt;nilnode;
    dict-&gt;nilnode.right = &amp;dict-&gt;nilnode;
    dict-&gt;nilnode.parent = &amp;dict-&gt;nilnode;
    dict-&gt;nilnode.color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
    dict-&gt;dupes = <span class="keyword">template</span>-&gt;dupes;

    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8c.html#a39327af6a2025edf54bd553dfaca6eed">dict_similar</a>(dict, <span class="keyword">template</span>));
}
</pre></div>
</div>
</div>
<a class="anchor" id="abaa53293359847ad15829e68689d1a96"></a><!-- doxytag: member="dict.h::dict_insert" ref="abaa53293359847ad15829e68689d1a96" args="(dict_t *, dnode_t *, const void *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00543">543</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *where = <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict), *nil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict);
    <a class="code" href="structdnode__t.html">dnode_t</a> *<a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a> = nil, *uncle, *grandpa;
    <span class="keywordtype">int</span> result = -1;

    node-&gt;key = <a class="code" href="dict_8c.html#ae57736c8a0ddeb64dc394712624d8209">key</a>;

    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (!<a class="code" href="dict_8h.html#a8ee82117d61f5699b4a4bcd8dbc1623b">dict_isfull</a>(dict));
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (!<a class="code" href="dict_8c.html#a41876a53021479360b7fcebf009c1bbd">dict_contains</a>(dict, node));
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (!<a class="code" href="dict_8c.html#ae38201fa011e3412fd8ae3f6e935c5a2">dnode_is_in_a_dict</a>(node));

    <span class="comment">/* basic binary tree insert */</span>

    <span class="keywordflow">while</span> (where != nil) {
    parent = where;
    result = dict-&gt;compare(<a class="code" href="structkey.html">key</a>, where-&gt;key);
    <span class="comment">/* trap attempts at duplicate key insertion unless it&#39;s explicitly allowed */</span>
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (dict-&gt;dupes || result != 0);
    <span class="keywordflow">if</span> (result &lt; 0)
        where = where-&gt;left;
    <span class="keywordflow">else</span>
        where = where-&gt;right;
    }

    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (where == nil);

    <span class="keywordflow">if</span> (result &lt; 0)
    parent-&gt;left = node;
    <span class="keywordflow">else</span>
    parent-&gt;right = node;

    node-&gt;parent = <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>;
    node-&gt;left = nil;
    node-&gt;right = nil;

    dict-&gt;nodecount++;

    <span class="comment">/* red black adjustments */</span>

    node-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;

    <span class="keywordflow">while</span> (parent-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>) {
    grandpa = parent-&gt;parent;
    <span class="keywordflow">if</span> (parent == grandpa-&gt;left) {
        uncle = grandpa-&gt;right;
        <span class="keywordflow">if</span> (uncle-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>) {    <span class="comment">/* red parent, red uncle */</span>
        parent-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
        uncle-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
        grandpa-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;
        node = grandpa;
        parent = grandpa-&gt;parent;
        } <span class="keywordflow">else</span> {                <span class="comment">/* red parent, black uncle */</span>
            <span class="keywordflow">if</span> (node == parent-&gt;right) {
            <a class="code" href="dict_8c.html#a6c3000c0249a91cb54c68c2aad08ea03">rotate_left</a>(parent);
            parent = node;
            <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (grandpa == parent-&gt;parent);
            <span class="comment">/* rotation between parent and child preserves grandpa */</span>
        }
        parent-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
        grandpa-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;
        <a class="code" href="dict_8c.html#affc1c26c10656d2aacf662d7750f61fd">rotate_right</a>(grandpa);
        <span class="keywordflow">break</span>;
        }
    } <span class="keywordflow">else</span> {    <span class="comment">/* symmetric cases: parent == parent-&gt;parent-&gt;right */</span>
        uncle = grandpa-&gt;left;
        <span class="keywordflow">if</span> (uncle-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>) {
        parent-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
        uncle-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
        grandpa-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;
        node = grandpa;
        parent = grandpa-&gt;parent;
        } <span class="keywordflow">else</span> {
            <span class="keywordflow">if</span> (node == parent-&gt;left) {
            <a class="code" href="dict_8c.html#affc1c26c10656d2aacf662d7750f61fd">rotate_right</a>(parent);
            parent = node;
            <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (grandpa == parent-&gt;parent);
        }
        parent-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
        grandpa-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;
        <a class="code" href="dict_8c.html#a6c3000c0249a91cb54c68c2aad08ea03">rotate_left</a>(grandpa);
        <span class="keywordflow">break</span>;
        }
    }
    }

    <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict)-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;

    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8c.html#a8fd61b9b13f52b4d1e0d34a8f2178f13">dict_verify</a>(dict));
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5db00df0aefc7b4234a44bfea0231da3"></a><!-- doxytag: member="dict.h::dict_isempty" ref="a5db00df0aefc7b4234a44bfea0231da3" args="(dict_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int dict_isempty </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00935">935</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> dict-&gt;nodecount == 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab467e2b97e284e2e6444126b07c15a6f"></a><!-- doxytag: member="dict.h::dict_isfull" ref="ab467e2b97e284e2e6444126b07c15a6f" args="(dict_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int dict_isfull </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00940">940</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> dict-&gt;nodecount == dict-&gt;maxcount;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa126efff0b159875e643646e14a7970c"></a><!-- doxytag: member="dict.h::dict_last" ref="aa126efff0b159875e643646e14a7970c" args="(dict_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdnode__t.html">dnode_t</a>* dict_last </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00853">853</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *nil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict), *root = <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict), *<a class="code" href="dict_8c.html#ae545bf658b2c876abbbae55a7d12875f">right</a>;

    <span class="keywordflow">if</span> (root != nil)
    <span class="keywordflow">while</span> ((<a class="code" href="dict_8c.html#ae545bf658b2c876abbbae55a7d12875f">right</a> = root-&gt;right) != nil)
        root = <a class="code" href="dict_8c.html#ae545bf658b2c876abbbae55a7d12875f">right</a>;

    <span class="keywordflow">return</span> (root == nil) ? <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> : root;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a48e7248138bd07c961e5de2d5ad1ff69"></a><!-- doxytag: member="dict.h::dict_load_begin" ref="a48e7248138bd07c961e5de2d5ad1ff69" args="(dict_load_t *, dict_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_load_begin </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__load__t.html">dict_load_t</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l01028">1028</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8h.html#a71f54a3dc27888df31631db89e956195">dict_isempty</a>(dict));
    <a class="code" href="dict_8c.html#a9cd0da20fb7f904098a94425e689aea6">load_begin_internal</a>(load, dict);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a80ffb4c435c9c12be32f9342cacd38ef"></a><!-- doxytag: member="dict.h::dict_load_end" ref="a80ffb4c435c9c12be32f9342cacd38ef" args="(dict_load_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_load_end </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__load__t.html">dict_load_t</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l01058">1058</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdict__t.html">dict_t</a> *dict = load-&gt;dictptr;
    <a class="code" href="structdnode__t.html">dnode_t</a> *tree[<a class="code" href="dict_8c.html#ab7dc78ce3c539dfab8f0e4e5506666c2">DICT_DEPTH_MAX</a>] = { 0 };
    <a class="code" href="structdnode__t.html">dnode_t</a> *curr, *dictnil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict), *loadnil = &amp;load-&gt;nilnode, *<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
    <a class="code" href="structdnode__t.html">dnode_t</a> *complete = 0;
    <a class="code" href="dict_8h.html#a0ccdd0435aed173cb756dbb8f6ed27c5">dictcount_t</a> fullcount = <a class="code" href="dict_8h.html#a7cc0c7f4164b72cfc0c8e543d6fd3951">DICTCOUNT_T_MAX</a>, <a class="code" href="dict_8c.html#a6c4460881d4f0e0099ca771141c157d6">nodecount</a> = dict-&gt;nodecount;
    <a class="code" href="dict_8h.html#a0ccdd0435aed173cb756dbb8f6ed27c5">dictcount_t</a> botrowcount;
    <span class="keywordtype">unsigned</span> baselevel = 0, level = 0, <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a> == 0 &amp;&amp; <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a> == 1);

    <span class="keywordflow">while</span> (fullcount &gt;= nodecount &amp;&amp; fullcount)
    fullcount &gt;&gt;= 1;

    botrowcount = nodecount - fullcount;

    <span class="keywordflow">for</span> (curr = loadnil-&gt;left; curr != loadnil; curr = <a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>) {
    <a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> = curr-&gt;left;

    <span class="keywordflow">if</span> (complete == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; botrowcount-- == 0) {
        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (baselevel == 0);
        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (level == 0);
        baselevel = level = 1;
        complete = tree[0];

        <span class="keywordflow">if</span> (complete != 0) {
        tree[0] = 0;
        complete-&gt;right = dictnil;
        <span class="keywordflow">while</span> (tree[level] != 0) {
            tree[level]-&gt;right = complete;
            complete-&gt;parent = tree[level];
            complete = tree[level];
            tree[level++] = 0;
        }
        }
    }

    <span class="keywordflow">if</span> (complete == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) {
        curr-&gt;left = dictnil;
        curr-&gt;right = dictnil;
        curr-&gt;color = level % 2;
        complete = curr;

        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (level == baselevel);
        <span class="keywordflow">while</span> (tree[level] != 0) {
        tree[level]-&gt;right = complete;
        complete-&gt;parent = tree[level];
        complete = tree[level];
        tree[level++] = 0;
        }
    } <span class="keywordflow">else</span> {
        curr-&gt;left = complete;
        curr-&gt;color = (level + 1) % 2;
        complete-&gt;parent = curr;
        tree[level] = curr;
        complete = 0;
        level = baselevel;
    }
    }

    <span class="keywordflow">if</span> (complete == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    complete = dictnil;

    <span class="keywordflow">for</span> (<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a> = 0; <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a> &lt; <a class="code" href="dict_8c.html#ab7dc78ce3c539dfab8f0e4e5506666c2">DICT_DEPTH_MAX</a>; <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>++) {
    <span class="keywordflow">if</span> (tree[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] != 0) {
        tree[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>]-&gt;right = complete;
        complete-&gt;parent = tree[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>];
        complete = tree[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>];
    }
    }

    dictnil-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
    dictnil-&gt;right = dictnil;
    complete-&gt;parent = dictnil;
    complete-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
    <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict) = complete;

    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8c.html#a8fd61b9b13f52b4d1e0d34a8f2178f13">dict_verify</a>(dict));
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4a26a23ff514a89b3a08dcc1b19785b2"></a><!-- doxytag: member="dict.h::dict_load_next" ref="a4a26a23ff514a89b3a08dcc1b19785b2" args="(dict_load_t *, dnode_t *, const void *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_load_next </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__load__t.html">dict_load_t</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l01034">1034</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdict__t.html">dict_t</a> *dict = load-&gt;dictptr;
    <a class="code" href="structdnode__t.html">dnode_t</a> *nil = &amp;load-&gt;nilnode;
   
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (!<a class="code" href="dict_8c.html#ae38201fa011e3412fd8ae3f6e935c5a2">dnode_is_in_a_dict</a>(newnode));
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (dict-&gt;nodecount &lt; dict-&gt;maxcount);

<span class="preprocessor">    #ifndef NDEBUG</span>
<span class="preprocessor"></span>    <span class="keywordflow">if</span> (dict-&gt;nodecount &gt; 0) {
    <span class="keywordflow">if</span> (dict-&gt;dupes)
        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (dict-&gt;compare(nil-&gt;left-&gt;key, <a class="code" href="structkey.html">key</a>) &lt;= 0);
    <span class="keywordflow">else</span>
        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (dict-&gt;compare(nil-&gt;left-&gt;key, <a class="code" href="structkey.html">key</a>) &lt; 0);
    }
<span class="preprocessor">    #endif</span>
<span class="preprocessor"></span>
    newnode-&gt;key = <a class="code" href="dict_8c.html#ae57736c8a0ddeb64dc394712624d8209">key</a>;
    nil-&gt;right-&gt;left = newnode;
    nil-&gt;right = newnode;
    newnode-&gt;left = nil;
    dict-&gt;nodecount++;
}
</pre></div>
</div>
</div>
<a class="anchor" id="abec592452c89b5c1d63b29df3572ec13"></a><!-- doxytag: member="dict.h::dict_lookup" ref="abec592452c89b5c1d63b29df3572ec13" args="(dict_t *, const void *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdnode__t.html">dnode_t</a>* dict_lookup </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00438">438</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *root = <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict);
    <a class="code" href="structdnode__t.html">dnode_t</a> *nil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict);
    <a class="code" href="structdnode__t.html">dnode_t</a> *saved;
    <span class="keywordtype">int</span> result;

    <span class="comment">/* simple binary search adapted for trees that contain duplicate keys */</span>

    <span class="keywordflow">while</span> (root != nil) {
    result = dict-&gt;compare(<a class="code" href="structkey.html">key</a>, root-&gt;key);
    <span class="keywordflow">if</span> (result &lt; 0)
        root = root-&gt;left;
    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (result &gt; 0)
        root = root-&gt;right;
    <span class="keywordflow">else</span> {
        <span class="keywordflow">if</span> (!dict-&gt;dupes) { <span class="comment">/* no duplicates, return match      */</span>
        <span class="keywordflow">return</span> root;
        } <span class="keywordflow">else</span> {        <span class="comment">/* could be dupes, find leftmost one    */</span>
        <span class="keywordflow">do</span> {
            saved = root;
            root = root-&gt;left;
            <span class="keywordflow">while</span> (root != nil &amp;&amp; dict-&gt;compare(<a class="code" href="structkey.html">key</a>, root-&gt;key))
            root = root-&gt;right;
        } <span class="keywordflow">while</span> (root != nil);
        <span class="keywordflow">return</span> saved;
        }
    }
    }

    <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a00d77444a37849db4809ab55f359cf52"></a><!-- doxytag: member="dict.h::dict_lower_bound" ref="a00d77444a37849db4809ab55f359cf52" args="(dict_t *, const void *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdnode__t.html">dnode_t</a>* dict_lower_bound </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00476">476</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *root = <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict);
    <a class="code" href="structdnode__t.html">dnode_t</a> *nil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict);
    <a class="code" href="structdnode__t.html">dnode_t</a> *tentative = 0;

    <span class="keywordflow">while</span> (root != nil) {
    <span class="keywordtype">int</span> result = dict-&gt;compare(<a class="code" href="structkey.html">key</a>, root-&gt;key);

    <span class="keywordflow">if</span> (result &gt; 0) {
        root = root-&gt;right;
    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (result &lt; 0) {
        tentative = root;
        root = root-&gt;left;
    } <span class="keywordflow">else</span> {
        <span class="keywordflow">if</span> (!dict-&gt;dupes) {
            <span class="keywordflow">return</span> root;
        } <span class="keywordflow">else</span> {
        tentative = root;
        root = root-&gt;left;
        }
    } 
    }
    
    <span class="keywordflow">return</span> tentative;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5454ab4b2e9abab524e19b88a18eb5cf"></a><!-- doxytag: member="dict.h::dict_merge" ref="a5454ab4b2e9abab524e19b88a18eb5cf" args="(dict_t *, dict_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_merge </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l01139">1139</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdict__load__t.html">dict_load_t</a> load;
    <a class="code" href="structdnode__t.html">dnode_t</a> *leftnode = <a class="code" href="dict_8c.html#a2b439ffb63f9b3089d0306ec3b26672f">dict_first</a>(dest), *rightnode = <a class="code" href="dict_8c.html#a2b439ffb63f9b3089d0306ec3b26672f">dict_first</a>(<a class="code" href="spgrid_8c.html#acef278b54e17ed729da5acd28bda6daf">source</a>);

    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8c.html#a39327af6a2025edf54bd553dfaca6eed">dict_similar</a>(dest, <a class="code" href="spgrid_8c.html#acef278b54e17ed729da5acd28bda6daf">source</a>));    

    <span class="keywordflow">if</span> (<a class="code" href="spgrid_8c.html#acef278b54e17ed729da5acd28bda6daf">source</a> == dest)
    <span class="keywordflow">return</span>;

    dest-&gt;nodecount = 0;
    <a class="code" href="dict_8c.html#a9cd0da20fb7f904098a94425e689aea6">load_begin_internal</a>(&amp;load, dest);

    <span class="keywordflow">for</span> (;;) {
    <span class="keywordflow">if</span> (leftnode != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; rightnode != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) {
        <span class="keywordflow">if</span> (dest-&gt;compare(leftnode-&gt;key, rightnode-&gt;key) &lt; 0)
        <span class="keywordflow">goto</span> copyleft;
        <span class="keywordflow">else</span>
        <span class="keywordflow">goto</span> copyright;
    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (leftnode != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) {
        <span class="keywordflow">goto</span> copyleft;
    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (rightnode != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) {
        <span class="keywordflow">goto</span> copyright;
    } <span class="keywordflow">else</span> {
        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (leftnode == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; rightnode == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
        <span class="keywordflow">break</span>;
    }

    copyleft:
    {
        <a class="code" href="structdnode__t.html">dnode_t</a> *<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a>(dest, leftnode);
<span class="preprocessor">        #ifndef NDEBUG</span>
<span class="preprocessor"></span>        leftnode-&gt;left = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;  <span class="comment">/* suppress assertion in dict_load_next */</span>
<span class="preprocessor">        #endif</span>
<span class="preprocessor"></span>        <a class="code" href="dict_8c.html#a3721d6ba3ea6a36f2c8b49b4e72fe8f7">dict_load_next</a>(&amp;load, leftnode, leftnode-&gt;key);
        leftnode = <a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
        <span class="keywordflow">continue</span>;
    }
    
    copyright:
    {
        <a class="code" href="structdnode__t.html">dnode_t</a> *<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a>(<a class="code" href="spgrid_8c.html#acef278b54e17ed729da5acd28bda6daf">source</a>, rightnode);
<span class="preprocessor">        #ifndef NDEBUG</span>
<span class="preprocessor"></span>        rightnode-&gt;left = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<span class="preprocessor">        #endif</span>
<span class="preprocessor"></span>        <a class="code" href="dict_8c.html#a3721d6ba3ea6a36f2c8b49b4e72fe8f7">dict_load_next</a>(&amp;load, rightnode, rightnode-&gt;key);
        rightnode = <a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
        <span class="keywordflow">continue</span>;
    }
    }

    <a class="code" href="dict_8c.html#acc7ef43b7d72d6c2818274acc8bbf494">dict_clear</a>(<a class="code" href="spgrid_8c.html#acef278b54e17ed729da5acd28bda6daf">source</a>);
    <a class="code" href="dict_8c.html#a5c70e94507e52999ef2c8a2ffce9a917">dict_load_end</a>(&amp;load);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ade9223faf7dd9c1dbb8101de5dd6c530"></a><!-- doxytag: member="dict.h::dict_next" ref="ade9223faf7dd9c1dbb8101de5dd6c530" args="(dict_t *, dnode_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdnode__t.html">dnode_t</a>* dict_next </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00871">871</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *nil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict), *<a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>, *<a class="code" href="dict_8c.html#a428f8207615465afdfcf1d31547ffef3">left</a>;

    <span class="keywordflow">if</span> (curr-&gt;right != nil) {
    curr = curr-&gt;right;
    <span class="keywordflow">while</span> ((left = curr-&gt;left) != nil)
        curr = <a class="code" href="dict_8c.html#a428f8207615465afdfcf1d31547ffef3">left</a>;
    <span class="keywordflow">return</span> curr;
    }

    <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a> = curr-&gt;parent;

    <span class="keywordflow">while</span> (<a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a> != nil &amp;&amp; curr == <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>-&gt;right) {
    curr = <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>;
    <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a> = curr-&gt;parent;
    }

    <span class="keywordflow">return</span> (<a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a> == nil) ? <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> : <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a7729159bc4951a7095dbe3fc7a9115b3"></a><!-- doxytag: member="dict.h::dict_prev" ref="a7729159bc4951a7095dbe3fc7a9115b3" args="(dict_t *, dnode_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdnode__t.html">dnode_t</a>* dict_prev </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00897">897</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *nil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict), *<a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>, *<a class="code" href="dict_8c.html#ae545bf658b2c876abbbae55a7d12875f">right</a>;

    <span class="keywordflow">if</span> (curr-&gt;left != nil) {
    curr = curr-&gt;left;
    <span class="keywordflow">while</span> ((right = curr-&gt;right) != nil)
        curr = <a class="code" href="dict_8c.html#ae545bf658b2c876abbbae55a7d12875f">right</a>;
    <span class="keywordflow">return</span> curr;
    }

    <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a> = curr-&gt;parent;

    <span class="keywordflow">while</span> (<a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a> != nil &amp;&amp; curr == <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>-&gt;left) {
    curr = <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>;
    <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a> = curr-&gt;parent;
    }

    <span class="keywordflow">return</span> (<a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a> == nil) ? <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> : <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a98c007a36bce993a048ca85c6395ae52"></a><!-- doxytag: member="dict.h::dict_process" ref="a98c007a36bce993a048ca85c6395ae52" args="(dict_t *, void *, dnode_process_t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_process </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="dict_8h.html#af6c238eee1552793065cbec20b1aafcb">dnode_process_t</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l01007">1007</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *node = <a class="code" href="dict_8c.html#a2b439ffb63f9b3089d0306ec3b26672f">dict_first</a>(dict), *<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;

    <span class="keywordflow">while</span> (node != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) {
    <span class="comment">/* check for callback function deleting */</span>
    <span class="comment">/* the next node from under us      */</span>
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8c.html#a41876a53021479360b7fcebf009c1bbd">dict_contains</a>(dict, node));
    <a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a>(dict, node);
    <span class="keyword">function</span>(dict, node, <a class="code" href="dict_8c.html#aad81e1d3f9fe24703a4d3c856a75cda6">context</a>);
    node = <a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6260e04887fcd8f4436e55d46172f27f"></a><!-- doxytag: member="dict.h::dict_set_allocator" ref="a6260e04887fcd8f4436e55d46172f27f" args="(dict_t *, dnode_alloc_t, dnode_free_t, void *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_set_allocator </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="dict_8h.html#a9622bc12328ca0820a2b75ddd368e742">dnode_alloc_t</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="dict_8h.html#aab7503760ea3aa9d811d19c8acd425c8">dnode_free_t</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00271">271</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8h.html#a392c768130a1c7ed5a6c2f299cd0d2e8">dict_count</a>(dict) == 0);
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> ((<a class="code" href="spgrid_8c.html#a7c4593313d1839d57c28594a69357bab">al</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; fr == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) || (<a class="code" href="spgrid_8c.html#a7c4593313d1839d57c28594a69357bab">al</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; fr != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>));

    dict-&gt;allocnode = <a class="code" href="spgrid_8c.html#a7c4593313d1839d57c28594a69357bab">al</a> ? <a class="code" href="spgrid_8c.html#a7c4593313d1839d57c28594a69357bab">al</a> : <a class="code" href="dict_8c.html#a0d63f8b9a1a39f8b3edfef544497265b">dnode_alloc</a>;
    dict-&gt;freenode = fr ? fr : <a class="code" href="dict_8c.html#a0816722a1a33c537793c38eaac3233cb">dnode_free</a>;
    dict-&gt;context = <a class="code" href="dict_8c.html#aad81e1d3f9fe24703a4d3c856a75cda6">context</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="adf15e502d9d639b4e2b7417392b023d0"></a><!-- doxytag: member="dict.h::dict_similar" ref="adf15e502d9d639b4e2b7417392b023d0" args="(const dict_t *, const dict_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int dict_similar </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00411">411</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">if</span> (<a class="code" href="dict_8c.html#a428f8207615465afdfcf1d31547ffef3">left</a>-&gt;compare != <a class="code" href="dict_8c.html#ae545bf658b2c876abbbae55a7d12875f">right</a>-&gt;compare)
    <span class="keywordflow">return</span> 0;

    <span class="keywordflow">if</span> (<a class="code" href="dict_8c.html#a428f8207615465afdfcf1d31547ffef3">left</a>-&gt;allocnode != <a class="code" href="dict_8c.html#ae545bf658b2c876abbbae55a7d12875f">right</a>-&gt;allocnode)
    <span class="keywordflow">return</span> 0;

    <span class="keywordflow">if</span> (<a class="code" href="dict_8c.html#a428f8207615465afdfcf1d31547ffef3">left</a>-&gt;freenode != <a class="code" href="dict_8c.html#ae545bf658b2c876abbbae55a7d12875f">right</a>-&gt;freenode)
    <span class="keywordflow">return</span> 0;

    <span class="keywordflow">if</span> (<a class="code" href="dict_8c.html#a428f8207615465afdfcf1d31547ffef3">left</a>-&gt;context != <a class="code" href="dict_8c.html#ae545bf658b2c876abbbae55a7d12875f">right</a>-&gt;context)
    <span class="keywordflow">return</span> 0;

    <span class="keywordflow">if</span> (<a class="code" href="dict_8c.html#a428f8207615465afdfcf1d31547ffef3">left</a>-&gt;dupes != <a class="code" href="dict_8c.html#ae545bf658b2c876abbbae55a7d12875f">right</a>-&gt;dupes)
    <span class="keywordflow">return</span> 0;

    <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6be2cd95fab60b96729dbe9362ca8c23"></a><!-- doxytag: member="dict.h::dict_upper_bound" ref="a6be2cd95fab60b96729dbe9362ca8c23" args="(dict_t *, const void *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdnode__t.html">dnode_t</a>* dict_upper_bound </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00508">508</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *root = <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict);
    <a class="code" href="structdnode__t.html">dnode_t</a> *nil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict);
    <a class="code" href="structdnode__t.html">dnode_t</a> *tentative = 0;

    <span class="keywordflow">while</span> (root != nil) {
    <span class="keywordtype">int</span> result = dict-&gt;compare(<a class="code" href="structkey.html">key</a>, root-&gt;key);

    <span class="keywordflow">if</span> (result &lt; 0) {
        root = root-&gt;left;
    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (result &gt; 0) {
        tentative = root;
        root = root-&gt;right;
    } <span class="keywordflow">else</span> {
        <span class="keywordflow">if</span> (!dict-&gt;dupes) {
            <span class="keywordflow">return</span> root;
        } <span class="keywordflow">else</span> {
        tentative = root;
        root = root-&gt;right;
        }
    } 
    }
    
    <span class="keywordflow">return</span> tentative;
}
</pre></div>
</div>
</div>
<a class="anchor" id="adb22d4be22fed78698472fd805e73b08"></a><!-- doxytag: member="dict.h::dict_verify" ref="adb22d4be22fed78698472fd805e73b08" args="(dict_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int dict_verify </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00381">381</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *nil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict), *root = <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict);

    <span class="comment">/* check that the sentinel node and root node are black */</span>
    <span class="keywordflow">if</span> (root-&gt;color != <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>)
    <span class="keywordflow">return</span> 0;
    <span class="keywordflow">if</span> (nil-&gt;color != <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>)
    <span class="keywordflow">return</span> 0;
    <span class="keywordflow">if</span> (nil-&gt;right != nil)
    <span class="keywordflow">return</span> 0;
    <span class="comment">/* nil-&gt;left is the root node; check that its parent pointer is nil */</span>
    <span class="keywordflow">if</span> (nil-&gt;left-&gt;parent != nil)
    <span class="keywordflow">return</span> 0;
    <span class="comment">/* perform a weak test that the tree is a binary search tree */</span>
    <span class="keywordflow">if</span> (!<a class="code" href="dict_8c.html#a7af8b0b9796e50e8770a517959b64364">verify_bintree</a>(dict))
    <span class="keywordflow">return</span> 0;
    <span class="comment">/* verify that the tree is a red-black tree */</span>
    <span class="keywordflow">if</span> (!<a class="code" href="dict_8c.html#a8b56a42ae2278cc21494e098f4e7a541">verify_redblack</a>(nil, root))
    <span class="keywordflow">return</span> 0;
    <span class="keywordflow">if</span> (<a class="code" href="dict_8c.html#aa85e6dc41f8a5804b4a1c80dc5a7666d">verify_node_count</a>(nil, root) != <a class="code" href="dict_8h.html#a392c768130a1c7ed5a6c2f299cd0d2e8">dict_count</a>(dict))
    <span class="keywordflow">return</span> 0;
    <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae5a3a2466871264a63274101b5aaea5b"></a><!-- doxytag: member="dict.h::dnode_create" ref="ae5a3a2466871264a63274101b5aaea5b" args="(void *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdnode__t.html">dnode_t</a>* dnode_create </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00960">960</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *<span class="keyword">new</span> = <a class="code" href="regex_8c.html#ab7e36af3707843f77cc5b4e831c2fa6d">malloc</a>(<span class="keyword">sizeof</span> *<span class="keyword">new</span>);
    <span class="keywordflow">if</span> (<span class="keyword">new</span>) {
    <span class="keyword">new</span>-&gt;data = <a class="code" href="dict_8c.html#a43a278d13284fb3412e9eee1db1d967e">data</a>;
    <span class="keyword">new</span>-&gt;parent = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    <span class="keyword">new</span>-&gt;left = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    <span class="keyword">new</span>-&gt;right = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }
    <span class="keywordflow">return</span> <span class="keyword">new</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a68948cf58a58fb084bab0663b9a694fe"></a><!-- doxytag: member="dict.h::dnode_destroy" ref="a68948cf58a58fb084bab0663b9a694fe" args="(dnode_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dnode_destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00981">981</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (!<a class="code" href="dict_8c.html#ae38201fa011e3412fd8ae3f6e935c5a2">dnode_is_in_a_dict</a>(dnode));
    free(dnode);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac57978aa6070a9ca89375c57da666f8a"></a><!-- doxytag: member="dict.h::dnode_get" ref="ac57978aa6070a9ca89375c57da666f8a" args="(dnode_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* dnode_get </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00987">987</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> dnode-&gt;data;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a009b83831beb6f5858c97cd49f085b02"></a><!-- doxytag: member="dict.h::dnode_getkey" ref="a009b83831beb6f5858c97cd49f085b02" args="(dnode_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void* dnode_getkey </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00992">992</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> dnode-&gt;key;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a476c27a94146803af1534cb4e150230e"></a><!-- doxytag: member="dict.h::dnode_init" ref="a476c27a94146803af1534cb4e150230e" args="(dnode_t *, void *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdnode__t.html">dnode_t</a>* dnode_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00972">972</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    dnode-&gt;data = <a class="code" href="dict_8c.html#a43a278d13284fb3412e9eee1db1d967e">data</a>;
    dnode-&gt;parent = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    dnode-&gt;left = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    dnode-&gt;right = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    <span class="keywordflow">return</span> dnode;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9b92759d56a998d2873d00a3a7dcf394"></a><!-- doxytag: member="dict.h::dnode_is_in_a_dict" ref="a9b92759d56a998d2873d00a3a7dcf394" args="(dnode_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int dnode_is_in_a_dict </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l01002">1002</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> (dnode-&gt;parent &amp;&amp; dnode-&gt;left &amp;&amp; dnode-&gt;right);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a529778cae6faf055adde486003d870ae"></a><!-- doxytag: member="dict.h::dnode_put" ref="a529778cae6faf055adde486003d870ae" args="(dnode_t *, void *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dnode_put </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00997">997</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    dnode-&gt;data = <a class="code" href="dict_8c.html#a43a278d13284fb3412e9eee1db1d967e">data</a>;
}
</pre></div>
</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="dict_8h.html">dict.h</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:19 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
