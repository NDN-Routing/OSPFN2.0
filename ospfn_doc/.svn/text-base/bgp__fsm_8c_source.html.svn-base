<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: bgpd/bgp_fsm.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('bgp__fsm_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">bgpd/bgp_fsm.c</div>  </div>
</div>
<div class="contents">
<a href="bgp__fsm_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* BGP-4 Finite State Machine   </span>
<a name="l00002"></a>00002 <span class="comment">   From RFC1771 [A Border Gateway Protocol 4 (BGP-4)]</span>
<a name="l00003"></a>00003 <span class="comment">   Copyright (C) 1996, 97, 98 Kunihiro Ishiguro</span>
<a name="l00004"></a>00004 <span class="comment"></span>
<a name="l00005"></a>00005 <span class="comment">This file is part of GNU Zebra.</span>
<a name="l00006"></a>00006 <span class="comment"></span>
<a name="l00007"></a>00007 <span class="comment">GNU Zebra is free software; you can redistribute it and/or modify it</span>
<a name="l00008"></a>00008 <span class="comment">under the terms of the GNU General Public License as published by the</span>
<a name="l00009"></a>00009 <span class="comment">Free Software Foundation; either version 2, or (at your option) any</span>
<a name="l00010"></a>00010 <span class="comment">later version.</span>
<a name="l00011"></a>00011 <span class="comment"></span>
<a name="l00012"></a>00012 <span class="comment">GNU Zebra is distributed in the hope that it will be useful, but</span>
<a name="l00013"></a>00013 <span class="comment">WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00014"></a>00014 <span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00015"></a>00015 <span class="comment">General Public License for more details.</span>
<a name="l00016"></a>00016 <span class="comment"></span>
<a name="l00017"></a>00017 <span class="comment">You should have received a copy of the GNU General Public License</span>
<a name="l00018"></a>00018 <span class="comment">along with GNU Zebra; see the file COPYING.  If not, write to the Free</span>
<a name="l00019"></a>00019 <span class="comment">Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA</span>
<a name="l00020"></a>00020 <span class="comment">02111-1307, USA.  */</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="preprocessor">#include &lt;<a class="code" href="zebra_8h.html">zebra.h</a>&gt;</span>
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 <span class="preprocessor">#include &quot;<a class="code" href="linklist_8h.html">linklist.h</a>&quot;</span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="prefix_8h.html">prefix.h</a>&quot;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="vty_8h.html">vty.h</a>&quot;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="sockunion_8h.html">sockunion.h</a>&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="thread_8h.html">thread.h</a>&quot;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="log_8h.html">log.h</a>&quot;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="stream_8h.html">stream.h</a>&quot;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &quot;<a class="code" href="memory_8h.html">memory.h</a>&quot;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="plist_8h.html">plist.h</a>&quot;</span>
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 <span class="preprocessor">#include &quot;<a class="code" href="bgpd_8h.html">bgpd/bgpd.h</a>&quot;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &quot;<a class="code" href="bgp__attr_8h.html">bgpd/bgp_attr.h</a>&quot;</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include &quot;<a class="code" href="bgp__debug_8h.html">bgpd/bgp_debug.h</a>&quot;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#include &quot;<a class="code" href="bgp__fsm_8h.html">bgpd/bgp_fsm.h</a>&quot;</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include &quot;<a class="code" href="bgp__packet_8h.html">bgpd/bgp_packet.h</a>&quot;</span>
<a name="l00039"></a>00039 <span class="preprocessor">#include &quot;<a class="code" href="bgp__network_8h.html">bgpd/bgp_network.h</a>&quot;</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include &quot;<a class="code" href="bgp__route_8h.html">bgpd/bgp_route.h</a>&quot;</span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &quot;<a class="code" href="bgp__dump_8h.html">bgpd/bgp_dump.h</a>&quot;</span>
<a name="l00042"></a>00042 <span class="preprocessor">#include &quot;<a class="code" href="bgp__open_8h.html">bgpd/bgp_open.h</a>&quot;</span>
<a name="l00043"></a>00043 <span class="preprocessor">#ifdef HAVE_SNMP</span>
<a name="l00044"></a>00044 <span class="preprocessor"></span><span class="preprocessor">#include &quot;<a class="code" href="bgp__snmp_8h.html">bgpd/bgp_snmp.h</a>&quot;</span>
<a name="l00045"></a>00045 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_SNMP */</span>
<a name="l00046"></a>00046 
<a name="l00047"></a>00047 <span class="comment">/* BGP FSM (finite state machine) has three types of functions.  Type</span>
<a name="l00048"></a>00048 <span class="comment">   one is thread functions.  Type two is event functions.  Type three</span>
<a name="l00049"></a>00049 <span class="comment">   is FSM functions.  Timer functions are set by bgp_timer_set</span>
<a name="l00050"></a>00050 <span class="comment">   function. */</span>
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 <span class="comment">/* BGP event function. */</span>
<a name="l00053"></a>00053 <span class="keywordtype">int</span> <a class="code" href="bgp__fsm_8c.html#a0ca676929248063979d5b120114cbccd">bgp_event</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *);
<a name="l00054"></a>00054 
<a name="l00055"></a>00055 <span class="comment">/* BGP thread functions. */</span>
<a name="l00056"></a>00056 <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="bgp__fsm_8c.html#a6376ed698f2472152192884e4834f45e">bgp_start_timer</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *);
<a name="l00057"></a>00057 <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="bgp__fsm_8c.html#a00534644637211950775a0c09c30b184">bgp_connect_timer</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *);
<a name="l00058"></a>00058 <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="bgp__fsm_8c.html#a6a478dce126762a49478f511d22e3744">bgp_holdtime_timer</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *);
<a name="l00059"></a>00059 <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="bgp__fsm_8c.html#ab1b3731e45da5d4889eb7a8eefe6f647">bgp_keepalive_timer</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *);
<a name="l00060"></a>00060 
<a name="l00061"></a>00061 <span class="comment">/* BGP FSM functions. */</span>
<a name="l00062"></a>00062 <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="bgp__fsm_8c.html#aa37215b69bb5e93cc41137bd278a9c9b">bgp_start</a> (<span class="keyword">struct</span> <a class="code" href="structpeer.html">peer</a> *);
<a name="l00063"></a>00063 
<a name="l00064"></a>00064 <span class="comment">/* BGP start timer jitter. */</span>
<a name="l00065"></a>00065 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00066"></a><a class="code" href="bgp__fsm_8c.html#afbc7bca040c07e81b9431b7b171b2d89">00066</a> <a class="code" href="bgp__fsm_8c.html#afbc7bca040c07e81b9431b7b171b2d89">bgp_start_jitter</a> (<span class="keywordtype">int</span> time)
<a name="l00067"></a>00067 {
<a name="l00068"></a>00068   <span class="keywordflow">return</span> ((rand () % (time + 1)) - (time / 2));
<a name="l00069"></a>00069 }
<a name="l00070"></a>00070 
<a name="l00071"></a>00071 <span class="comment">/* Check if suppress start/restart of sessions to peer. */</span>
<a name="l00072"></a><a class="code" href="bgp__fsm_8c.html#ad9ce88248446ff0372b352a095212a03">00072</a> <span class="preprocessor">#define BGP_PEER_START_SUPPRESSED(P) \</span>
<a name="l00073"></a>00073 <span class="preprocessor">  (CHECK_FLAG ((P)-&gt;flags, PEER_FLAG_SHUTDOWN) \</span>
<a name="l00074"></a>00074 <span class="preprocessor">   || CHECK_FLAG ((P)-&gt;sflags, PEER_STATUS_PREFIX_OVERFLOW))</span>
<a name="l00075"></a>00075 <span class="preprocessor"></span>
<a name="l00076"></a>00076 <span class="comment">/* Hook function called after bgp event is occered.  And vty&#39;s</span>
<a name="l00077"></a>00077 <span class="comment">   neighbor command invoke this function after making neighbor</span>
<a name="l00078"></a>00078 <span class="comment">   structure. */</span>
<a name="l00079"></a>00079 <span class="keywordtype">void</span>
<a name="l00080"></a><a class="code" href="bgp__fsm_8h.html#a23225d6fc2f070dc92db1f6627ec1a29">00080</a> <a class="code" href="bgp__fsm_8c.html#a0dae67b35f2ffb6d6e7f9b1a6684e0aa">bgp_timer_set</a> (<span class="keyword">struct</span> <a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>)
<a name="l00081"></a>00081 {
<a name="l00082"></a>00082   <span class="keywordtype">int</span> jitter = 0;
<a name="l00083"></a>00083 
<a name="l00084"></a>00084   <span class="keywordflow">switch</span> (peer-&gt;<a class="code" href="structpeer.html#ae39d16f69d65fec0f4f1908b4a33e6c6">status</a>)
<a name="l00085"></a>00085     {
<a name="l00086"></a>00086     <span class="keywordflow">case</span> <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>:
<a name="l00087"></a>00087       <span class="comment">/* First entry point of peer&#39;s finite state machine.  In Idle</span>
<a name="l00088"></a>00088 <span class="comment">     status start timer is on unless peer is shutdown or peer is</span>
<a name="l00089"></a>00089 <span class="comment">     inactive.  All other timer must be turned off */</span>
<a name="l00090"></a>00090       <span class="keywordflow">if</span> (<a class="code" href="bgp__fsm_8c.html#ad9ce88248446ff0372b352a095212a03">BGP_PEER_START_SUPPRESSED</a> (peer) || ! <a class="code" href="bgpd_8c.html#ae512a15120d606173592586a761742aa">peer_active</a> (peer))
<a name="l00091"></a>00091     {
<a name="l00092"></a>00092       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#ad7cf15fc612938449a9ac8d7ed111a91">t_start</a>);
<a name="l00093"></a>00093     }
<a name="l00094"></a>00094       <span class="keywordflow">else</span>
<a name="l00095"></a>00095     {
<a name="l00096"></a>00096       jitter = <a class="code" href="bgp__fsm_8c.html#afbc7bca040c07e81b9431b7b171b2d89">bgp_start_jitter</a> (peer-&gt;<a class="code" href="structpeer.html#a82d93e09c2e715abdb362fa6b5059908">v_start</a>);
<a name="l00097"></a>00097       <a class="code" href="bgp__fsm_8h.html#aaf9fcd8314ca70eef21f5689423d7152">BGP_TIMER_ON</a> (peer-&gt;<a class="code" href="structpeer.html#ad7cf15fc612938449a9ac8d7ed111a91">t_start</a>, <a class="code" href="bgp__fsm_8c.html#a6376ed698f2472152192884e4834f45e">bgp_start_timer</a>,
<a name="l00098"></a>00098             peer-&gt;<a class="code" href="structpeer.html#a82d93e09c2e715abdb362fa6b5059908">v_start</a> + jitter);
<a name="l00099"></a>00099     }
<a name="l00100"></a>00100       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a7badb9ad50dae6376ecaa005318676e4">t_connect</a>);
<a name="l00101"></a>00101       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a84256b6da29b58448f37ed9fd3247bb6">t_holdtime</a>);
<a name="l00102"></a>00102       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a4f8889925480578b771c9574e88add27">t_keepalive</a>);
<a name="l00103"></a>00103       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#ae6ca6f06c2ebc2537ff2f10da05263d3">t_asorig</a>);
<a name="l00104"></a>00104       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a81042b1115a4cc6ced7d496a1aaaacac">t_routeadv</a>);
<a name="l00105"></a>00105       <span class="keywordflow">break</span>;
<a name="l00106"></a>00106 
<a name="l00107"></a>00107     <span class="keywordflow">case</span> <a class="code" href="bgpd_8h.html#a58672521fe155cead3bd1f0653be62ee">Connect</a>:
<a name="l00108"></a>00108       <span class="comment">/* After start timer is expired, the peer moves to Connnect</span>
<a name="l00109"></a>00109 <span class="comment">         status.  Make sure start timer is off and connect timer is</span>
<a name="l00110"></a>00110 <span class="comment">         on. */</span>
<a name="l00111"></a>00111       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#ad7cf15fc612938449a9ac8d7ed111a91">t_start</a>);
<a name="l00112"></a>00112       <a class="code" href="bgp__fsm_8h.html#aaf9fcd8314ca70eef21f5689423d7152">BGP_TIMER_ON</a> (peer-&gt;<a class="code" href="structpeer.html#a7badb9ad50dae6376ecaa005318676e4">t_connect</a>, <a class="code" href="bgp__fsm_8c.html#a00534644637211950775a0c09c30b184">bgp_connect_timer</a>, peer-&gt;<a class="code" href="structpeer.html#a54ca5fae2bc177a95b9277dc6f2eac6e">v_connect</a>);
<a name="l00113"></a>00113       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a84256b6da29b58448f37ed9fd3247bb6">t_holdtime</a>);
<a name="l00114"></a>00114       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a4f8889925480578b771c9574e88add27">t_keepalive</a>);
<a name="l00115"></a>00115       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#ae6ca6f06c2ebc2537ff2f10da05263d3">t_asorig</a>);
<a name="l00116"></a>00116       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a81042b1115a4cc6ced7d496a1aaaacac">t_routeadv</a>);
<a name="l00117"></a>00117       <span class="keywordflow">break</span>;
<a name="l00118"></a>00118 
<a name="l00119"></a>00119     <span class="keywordflow">case</span> <a class="code" href="bgpd_8h.html#a3e4aba4f7d3a690fdce5d1fe31156421">Active</a>:
<a name="l00120"></a>00120       <span class="comment">/* Active is waiting connection from remote peer.  And if</span>
<a name="l00121"></a>00121 <span class="comment">         connect timer is expired, change status to Connect. */</span>
<a name="l00122"></a>00122       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#ad7cf15fc612938449a9ac8d7ed111a91">t_start</a>);
<a name="l00123"></a>00123       <span class="comment">/* If peer is passive mode, do not set connect timer. */</span>
<a name="l00124"></a>00124       <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#a3f18e3da00909bb1ce53919fd7129b54">flags</a>, <a class="code" href="bgpd_8h.html#ac43c8c6cc3aa168070d51ef4e899c6fb">PEER_FLAG_PASSIVE</a>)
<a name="l00125"></a>00125       || <a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#a8dd1d16a0890967ee343e1bc70292e4f">sflags</a>, <a class="code" href="bgpd_8h.html#aa97d7e86e0f1905a85364af66368896f">PEER_STATUS_NSF_WAIT</a>))
<a name="l00126"></a>00126     {
<a name="l00127"></a>00127       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a7badb9ad50dae6376ecaa005318676e4">t_connect</a>);
<a name="l00128"></a>00128     }
<a name="l00129"></a>00129       <span class="keywordflow">else</span>
<a name="l00130"></a>00130     {
<a name="l00131"></a>00131       <a class="code" href="bgp__fsm_8h.html#aaf9fcd8314ca70eef21f5689423d7152">BGP_TIMER_ON</a> (peer-&gt;<a class="code" href="structpeer.html#a7badb9ad50dae6376ecaa005318676e4">t_connect</a>, <a class="code" href="bgp__fsm_8c.html#a00534644637211950775a0c09c30b184">bgp_connect_timer</a>, peer-&gt;<a class="code" href="structpeer.html#a54ca5fae2bc177a95b9277dc6f2eac6e">v_connect</a>);
<a name="l00132"></a>00132     }
<a name="l00133"></a>00133       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a84256b6da29b58448f37ed9fd3247bb6">t_holdtime</a>);
<a name="l00134"></a>00134       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a4f8889925480578b771c9574e88add27">t_keepalive</a>);
<a name="l00135"></a>00135       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#ae6ca6f06c2ebc2537ff2f10da05263d3">t_asorig</a>);
<a name="l00136"></a>00136       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a81042b1115a4cc6ced7d496a1aaaacac">t_routeadv</a>);
<a name="l00137"></a>00137       <span class="keywordflow">break</span>;
<a name="l00138"></a>00138 
<a name="l00139"></a>00139     <span class="keywordflow">case</span> <a class="code" href="bgpd_8h.html#a1873a46d77babce8de80c71ce1624718">OpenSent</a>:
<a name="l00140"></a>00140       <span class="comment">/* OpenSent status. */</span>
<a name="l00141"></a>00141       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#ad7cf15fc612938449a9ac8d7ed111a91">t_start</a>);
<a name="l00142"></a>00142       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a7badb9ad50dae6376ecaa005318676e4">t_connect</a>);
<a name="l00143"></a>00143       <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#ade54caf4be91128837361d44f0239fa0">v_holdtime</a> != 0)
<a name="l00144"></a>00144     {
<a name="l00145"></a>00145       <a class="code" href="bgp__fsm_8h.html#aaf9fcd8314ca70eef21f5689423d7152">BGP_TIMER_ON</a> (peer-&gt;<a class="code" href="structpeer.html#a84256b6da29b58448f37ed9fd3247bb6">t_holdtime</a>, <a class="code" href="bgp__fsm_8c.html#a6a478dce126762a49478f511d22e3744">bgp_holdtime_timer</a>, 
<a name="l00146"></a>00146             peer-&gt;<a class="code" href="structpeer.html#ade54caf4be91128837361d44f0239fa0">v_holdtime</a>);
<a name="l00147"></a>00147     }
<a name="l00148"></a>00148       <span class="keywordflow">else</span>
<a name="l00149"></a>00149     {
<a name="l00150"></a>00150       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a84256b6da29b58448f37ed9fd3247bb6">t_holdtime</a>);
<a name="l00151"></a>00151     }
<a name="l00152"></a>00152       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a4f8889925480578b771c9574e88add27">t_keepalive</a>);
<a name="l00153"></a>00153       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#ae6ca6f06c2ebc2537ff2f10da05263d3">t_asorig</a>);
<a name="l00154"></a>00154       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a81042b1115a4cc6ced7d496a1aaaacac">t_routeadv</a>);
<a name="l00155"></a>00155       <span class="keywordflow">break</span>;
<a name="l00156"></a>00156 
<a name="l00157"></a>00157     <span class="keywordflow">case</span> <a class="code" href="bgpd_8h.html#a0bf5b4ab03c60ff4c23c94a1d683b0b9">OpenConfirm</a>:
<a name="l00158"></a>00158       <span class="comment">/* OpenConfirm status. */</span>
<a name="l00159"></a>00159       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#ad7cf15fc612938449a9ac8d7ed111a91">t_start</a>);
<a name="l00160"></a>00160       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a7badb9ad50dae6376ecaa005318676e4">t_connect</a>);
<a name="l00161"></a>00161 
<a name="l00162"></a>00162       <span class="comment">/* If the negotiated Hold Time value is zero, then the Hold Time</span>
<a name="l00163"></a>00163 <span class="comment">         timer and KeepAlive timers are not started. */</span>
<a name="l00164"></a>00164       <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#ade54caf4be91128837361d44f0239fa0">v_holdtime</a> == 0)
<a name="l00165"></a>00165     {
<a name="l00166"></a>00166       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a84256b6da29b58448f37ed9fd3247bb6">t_holdtime</a>);
<a name="l00167"></a>00167       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a4f8889925480578b771c9574e88add27">t_keepalive</a>);
<a name="l00168"></a>00168     }
<a name="l00169"></a>00169       <span class="keywordflow">else</span>
<a name="l00170"></a>00170     {
<a name="l00171"></a>00171       <a class="code" href="bgp__fsm_8h.html#aaf9fcd8314ca70eef21f5689423d7152">BGP_TIMER_ON</a> (peer-&gt;<a class="code" href="structpeer.html#a84256b6da29b58448f37ed9fd3247bb6">t_holdtime</a>, <a class="code" href="bgp__fsm_8c.html#a6a478dce126762a49478f511d22e3744">bgp_holdtime_timer</a>,
<a name="l00172"></a>00172             peer-&gt;<a class="code" href="structpeer.html#ade54caf4be91128837361d44f0239fa0">v_holdtime</a>);
<a name="l00173"></a>00173       <a class="code" href="bgp__fsm_8h.html#aaf9fcd8314ca70eef21f5689423d7152">BGP_TIMER_ON</a> (peer-&gt;<a class="code" href="structpeer.html#a4f8889925480578b771c9574e88add27">t_keepalive</a>, <a class="code" href="bgp__fsm_8c.html#ab1b3731e45da5d4889eb7a8eefe6f647">bgp_keepalive_timer</a>, 
<a name="l00174"></a>00174             peer-&gt;<a class="code" href="structpeer.html#a4683327b18d77b5888cc293b180f01ff">v_keepalive</a>);
<a name="l00175"></a>00175     }
<a name="l00176"></a>00176       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#ae6ca6f06c2ebc2537ff2f10da05263d3">t_asorig</a>);
<a name="l00177"></a>00177       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a81042b1115a4cc6ced7d496a1aaaacac">t_routeadv</a>);
<a name="l00178"></a>00178       <span class="keywordflow">break</span>;
<a name="l00179"></a>00179 
<a name="l00180"></a>00180     <span class="keywordflow">case</span> <a class="code" href="bgpd_8h.html#aa87809ec7dea97b0e970e98ae6c181ea">Established</a>:
<a name="l00181"></a>00181       <span class="comment">/* In Established status start and connect timer is turned</span>
<a name="l00182"></a>00182 <span class="comment">         off. */</span>
<a name="l00183"></a>00183       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#ad7cf15fc612938449a9ac8d7ed111a91">t_start</a>);
<a name="l00184"></a>00184       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a7badb9ad50dae6376ecaa005318676e4">t_connect</a>);
<a name="l00185"></a>00185 
<a name="l00186"></a>00186       <span class="comment">/* Same as OpenConfirm, if holdtime is zero then both holdtime</span>
<a name="l00187"></a>00187 <span class="comment">         and keepalive must be turned off. */</span>
<a name="l00188"></a>00188       <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#ade54caf4be91128837361d44f0239fa0">v_holdtime</a> == 0)
<a name="l00189"></a>00189     {
<a name="l00190"></a>00190       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a84256b6da29b58448f37ed9fd3247bb6">t_holdtime</a>);
<a name="l00191"></a>00191       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a4f8889925480578b771c9574e88add27">t_keepalive</a>);
<a name="l00192"></a>00192     }
<a name="l00193"></a>00193       <span class="keywordflow">else</span>
<a name="l00194"></a>00194     {
<a name="l00195"></a>00195       <a class="code" href="bgp__fsm_8h.html#aaf9fcd8314ca70eef21f5689423d7152">BGP_TIMER_ON</a> (peer-&gt;<a class="code" href="structpeer.html#a84256b6da29b58448f37ed9fd3247bb6">t_holdtime</a>, <a class="code" href="bgp__fsm_8c.html#a6a478dce126762a49478f511d22e3744">bgp_holdtime_timer</a>,
<a name="l00196"></a>00196             peer-&gt;<a class="code" href="structpeer.html#ade54caf4be91128837361d44f0239fa0">v_holdtime</a>);
<a name="l00197"></a>00197       <a class="code" href="bgp__fsm_8h.html#aaf9fcd8314ca70eef21f5689423d7152">BGP_TIMER_ON</a> (peer-&gt;<a class="code" href="structpeer.html#a4f8889925480578b771c9574e88add27">t_keepalive</a>, <a class="code" href="bgp__fsm_8c.html#ab1b3731e45da5d4889eb7a8eefe6f647">bgp_keepalive_timer</a>,
<a name="l00198"></a>00198             peer-&gt;<a class="code" href="structpeer.html#a4683327b18d77b5888cc293b180f01ff">v_keepalive</a>);
<a name="l00199"></a>00199     }
<a name="l00200"></a>00200       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#ae6ca6f06c2ebc2537ff2f10da05263d3">t_asorig</a>);
<a name="l00201"></a>00201       <span class="keywordflow">break</span>;
<a name="l00202"></a>00202     <span class="keywordflow">case</span> <a class="code" href="bgpd_8h.html#a25915a470516b826a1f075280e8a3941">Deleted</a>:
<a name="l00203"></a>00203       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a4fdfea0c52fcb6c48138fc9c817d7b41">t_gr_restart</a>);
<a name="l00204"></a>00204       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#ada375f793bffb7304b39c227704ba406">t_gr_stale</a>);
<a name="l00205"></a>00205       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#ae4340980236449843f55d04b3ad4bf7e">t_pmax_restart</a>);
<a name="l00206"></a>00206     <span class="keywordflow">case</span> <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>:
<a name="l00207"></a>00207       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#ad7cf15fc612938449a9ac8d7ed111a91">t_start</a>);
<a name="l00208"></a>00208       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a7badb9ad50dae6376ecaa005318676e4">t_connect</a>);
<a name="l00209"></a>00209       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a84256b6da29b58448f37ed9fd3247bb6">t_holdtime</a>);
<a name="l00210"></a>00210       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a4f8889925480578b771c9574e88add27">t_keepalive</a>);
<a name="l00211"></a>00211       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#ae6ca6f06c2ebc2537ff2f10da05263d3">t_asorig</a>);
<a name="l00212"></a>00212       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a81042b1115a4cc6ced7d496a1aaaacac">t_routeadv</a>);
<a name="l00213"></a>00213     }
<a name="l00214"></a>00214 }
<a name="l00215"></a>00215 
<a name="l00216"></a>00216 <span class="comment">/* BGP start timer.  This function set BGP_Start event to thread value</span>
<a name="l00217"></a>00217 <span class="comment">   and process event. */</span>
<a name="l00218"></a>00218 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00219"></a><a class="code" href="bgp__fsm_8c.html#a6376ed698f2472152192884e4834f45e">00219</a> <a class="code" href="bgp__fsm_8c.html#a6376ed698f2472152192884e4834f45e">bgp_start_timer</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l00220"></a>00220 {
<a name="l00221"></a>00221   <span class="keyword">struct </span><a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>;
<a name="l00222"></a>00222 
<a name="l00223"></a>00223   peer = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l00224"></a>00224   peer-&gt;<a class="code" href="structpeer.html#ad7cf15fc612938449a9ac8d7ed111a91">t_start</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00225"></a>00225 
<a name="l00226"></a>00226   <span class="keywordflow">if</span> (<a class="code" href="bgp__debug_8h.html#a3652951eb4451c498ae4be9890d4b7a4">BGP_DEBUG</a> (fsm, <a class="code" href="bgp__fsm_8c.html#aa80c210a6930b131524d9462e32ccad4">FSM</a>))
<a name="l00227"></a>00227     <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (peer-&gt;<a class="code" href="structpeer.html#a8042cd53718885196f47ee66b471ec3d">log</a>, LOG_DEBUG,
<a name="l00228"></a>00228       <span class="stringliteral">&quot;%s [FSM] Timer (start timer expire).&quot;</span>, peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>);
<a name="l00229"></a>00229 
<a name="l00230"></a>00230   <a class="code" href="thread_8h.html#a88d7c483cad15baac709fac747480a11">THREAD_VAL</a> (thread) = <a class="code" href="bgpd_8h.html#ab2d603cda7f63a92bb3792da2512259e">BGP_Start</a>;
<a name="l00231"></a>00231   <a class="code" href="bgp__fsm_8c.html#a0ca676929248063979d5b120114cbccd">bgp_event</a> (thread);  <span class="comment">/* bgp_event unlocks peer */</span>
<a name="l00232"></a>00232 
<a name="l00233"></a>00233   <span class="keywordflow">return</span> 0;
<a name="l00234"></a>00234 }
<a name="l00235"></a>00235 
<a name="l00236"></a>00236 <span class="comment">/* BGP connect retry timer. */</span>
<a name="l00237"></a>00237 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00238"></a><a class="code" href="bgp__fsm_8c.html#a00534644637211950775a0c09c30b184">00238</a> <a class="code" href="bgp__fsm_8c.html#a00534644637211950775a0c09c30b184">bgp_connect_timer</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l00239"></a>00239 {
<a name="l00240"></a>00240   <span class="keyword">struct </span><a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>;
<a name="l00241"></a>00241 
<a name="l00242"></a>00242   peer = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l00243"></a>00243   peer-&gt;<a class="code" href="structpeer.html#a7badb9ad50dae6376ecaa005318676e4">t_connect</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00244"></a>00244 
<a name="l00245"></a>00245   <span class="keywordflow">if</span> (<a class="code" href="bgp__debug_8h.html#a3652951eb4451c498ae4be9890d4b7a4">BGP_DEBUG</a> (fsm, <a class="code" href="bgp__fsm_8c.html#aa80c210a6930b131524d9462e32ccad4">FSM</a>))
<a name="l00246"></a>00246     <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (peer-&gt;<a class="code" href="structpeer.html#a8042cd53718885196f47ee66b471ec3d">log</a>, LOG_DEBUG, <span class="stringliteral">&quot;%s [FSM] Timer (connect timer expire)&quot;</span>,
<a name="l00247"></a>00247       peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>);
<a name="l00248"></a>00248 
<a name="l00249"></a>00249   <a class="code" href="thread_8h.html#a88d7c483cad15baac709fac747480a11">THREAD_VAL</a> (thread) = <a class="code" href="bgpd_8h.html#a41c00db2b65f3526cc1c370f42b95e45">ConnectRetry_timer_expired</a>;
<a name="l00250"></a>00250   <a class="code" href="bgp__fsm_8c.html#a0ca676929248063979d5b120114cbccd">bgp_event</a> (thread); <span class="comment">/* bgp_event unlocks peer */</span>
<a name="l00251"></a>00251 
<a name="l00252"></a>00252   <span class="keywordflow">return</span> 0;
<a name="l00253"></a>00253 }
<a name="l00254"></a>00254 
<a name="l00255"></a>00255 <span class="comment">/* BGP holdtime timer. */</span>
<a name="l00256"></a>00256 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00257"></a><a class="code" href="bgp__fsm_8c.html#a6a478dce126762a49478f511d22e3744">00257</a> <a class="code" href="bgp__fsm_8c.html#a6a478dce126762a49478f511d22e3744">bgp_holdtime_timer</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l00258"></a>00258 {
<a name="l00259"></a>00259   <span class="keyword">struct </span><a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>;
<a name="l00260"></a>00260 
<a name="l00261"></a>00261   peer = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l00262"></a>00262   peer-&gt;<a class="code" href="structpeer.html#a84256b6da29b58448f37ed9fd3247bb6">t_holdtime</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00263"></a>00263 
<a name="l00264"></a>00264   <span class="keywordflow">if</span> (<a class="code" href="bgp__debug_8h.html#a3652951eb4451c498ae4be9890d4b7a4">BGP_DEBUG</a> (fsm, <a class="code" href="bgp__fsm_8c.html#aa80c210a6930b131524d9462e32ccad4">FSM</a>))
<a name="l00265"></a>00265     <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (peer-&gt;<a class="code" href="structpeer.html#a8042cd53718885196f47ee66b471ec3d">log</a>, LOG_DEBUG,
<a name="l00266"></a>00266       <span class="stringliteral">&quot;%s [FSM] Timer (holdtime timer expire)&quot;</span>,
<a name="l00267"></a>00267       peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>);
<a name="l00268"></a>00268 
<a name="l00269"></a>00269   <a class="code" href="thread_8h.html#a88d7c483cad15baac709fac747480a11">THREAD_VAL</a> (thread) = <a class="code" href="bgpd_8h.html#aa22516de11da3d7cf571415023bece30">Hold_Timer_expired</a>;
<a name="l00270"></a>00270   <a class="code" href="bgp__fsm_8c.html#a0ca676929248063979d5b120114cbccd">bgp_event</a> (thread); <span class="comment">/* bgp_event unlocks peer */</span>
<a name="l00271"></a>00271 
<a name="l00272"></a>00272   <span class="keywordflow">return</span> 0;
<a name="l00273"></a>00273 }
<a name="l00274"></a>00274 
<a name="l00275"></a>00275 <span class="comment">/* BGP keepalive fire ! */</span>
<a name="l00276"></a>00276 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00277"></a><a class="code" href="bgp__fsm_8c.html#ab1b3731e45da5d4889eb7a8eefe6f647">00277</a> <a class="code" href="bgp__fsm_8c.html#ab1b3731e45da5d4889eb7a8eefe6f647">bgp_keepalive_timer</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l00278"></a>00278 {
<a name="l00279"></a>00279   <span class="keyword">struct </span><a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>;
<a name="l00280"></a>00280 
<a name="l00281"></a>00281   peer = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l00282"></a>00282   peer-&gt;<a class="code" href="structpeer.html#a4f8889925480578b771c9574e88add27">t_keepalive</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00283"></a>00283 
<a name="l00284"></a>00284   <span class="keywordflow">if</span> (<a class="code" href="bgp__debug_8h.html#a3652951eb4451c498ae4be9890d4b7a4">BGP_DEBUG</a> (fsm, <a class="code" href="bgp__fsm_8c.html#aa80c210a6930b131524d9462e32ccad4">FSM</a>))
<a name="l00285"></a>00285     <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (peer-&gt;<a class="code" href="structpeer.html#a8042cd53718885196f47ee66b471ec3d">log</a>, LOG_DEBUG,
<a name="l00286"></a>00286       <span class="stringliteral">&quot;%s [FSM] Timer (keepalive timer expire)&quot;</span>,
<a name="l00287"></a>00287       peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>);
<a name="l00288"></a>00288 
<a name="l00289"></a>00289   <a class="code" href="thread_8h.html#a88d7c483cad15baac709fac747480a11">THREAD_VAL</a> (thread) = <a class="code" href="bgpd_8h.html#add4910f1885dd2631dd7c556c24a9b9e">KeepAlive_timer_expired</a>;
<a name="l00290"></a>00290   <a class="code" href="bgp__fsm_8c.html#a0ca676929248063979d5b120114cbccd">bgp_event</a> (thread); <span class="comment">/* bgp_event unlocks peer */</span>
<a name="l00291"></a>00291 
<a name="l00292"></a>00292   <span class="keywordflow">return</span> 0;
<a name="l00293"></a>00293 }
<a name="l00294"></a>00294 
<a name="l00295"></a>00295 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00296"></a><a class="code" href="bgp__fsm_8c.html#a66dc307fde4b0ec3bff966374f22181c">00296</a> <a class="code" href="bgp__fsm_8c.html#a66dc307fde4b0ec3bff966374f22181c">bgp_routeadv_timer</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l00297"></a>00297 {
<a name="l00298"></a>00298   <span class="keyword">struct </span><a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>;
<a name="l00299"></a>00299 
<a name="l00300"></a>00300   peer = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l00301"></a>00301   peer-&gt;<a class="code" href="structpeer.html#a81042b1115a4cc6ced7d496a1aaaacac">t_routeadv</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00302"></a>00302 
<a name="l00303"></a>00303   <span class="keywordflow">if</span> (<a class="code" href="bgp__debug_8h.html#a3652951eb4451c498ae4be9890d4b7a4">BGP_DEBUG</a> (fsm, <a class="code" href="bgp__fsm_8c.html#aa80c210a6930b131524d9462e32ccad4">FSM</a>))
<a name="l00304"></a>00304     <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (peer-&gt;<a class="code" href="structpeer.html#a8042cd53718885196f47ee66b471ec3d">log</a>, LOG_DEBUG,
<a name="l00305"></a>00305       <span class="stringliteral">&quot;%s [FSM] Timer (routeadv timer expire)&quot;</span>,
<a name="l00306"></a>00306       peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>);
<a name="l00307"></a>00307 
<a name="l00308"></a>00308   peer-&gt;<a class="code" href="structpeer.html#ac634a8cdc8e00d064d9d9fcdd324a950">synctime</a> = <a class="code" href="bgpd_8c.html#a57400e51b671bd48e19b86df877be1e9">bgp_clock</a> ();
<a name="l00309"></a>00309 
<a name="l00310"></a>00310   <a class="code" href="bgp__fsm_8h.html#a441b8dfef999d79ac1c3e3b9573fe516">BGP_WRITE_ON</a> (peer-&gt;<a class="code" href="structpeer.html#af1b52e357fd1c6aa0bc8360cf57485e4">t_write</a>, <a class="code" href="bgp__packet_8c.html#ad43cdddbeb3aa17bb2aa199409455c1c">bgp_write</a>, peer-&gt;<a class="code" href="structpeer.html#a593c49b1167d88eb2d2900db47eb5d9d">fd</a>);
<a name="l00311"></a>00311 
<a name="l00312"></a>00312   <a class="code" href="bgp__fsm_8h.html#aaf9fcd8314ca70eef21f5689423d7152">BGP_TIMER_ON</a> (peer-&gt;<a class="code" href="structpeer.html#a81042b1115a4cc6ced7d496a1aaaacac">t_routeadv</a>, <a class="code" href="bgp__fsm_8c.html#a66dc307fde4b0ec3bff966374f22181c">bgp_routeadv_timer</a>,
<a name="l00313"></a>00313         peer-&gt;<a class="code" href="structpeer.html#a458c8875d94b9a7f90a7c4a827c8e4fb">v_routeadv</a>);
<a name="l00314"></a>00314 
<a name="l00315"></a>00315   <span class="keywordflow">return</span> 0;
<a name="l00316"></a>00316 }
<a name="l00317"></a>00317 
<a name="l00318"></a>00318 <span class="comment">/* BGP Peer Down Cause */</span>
<a name="l00319"></a><a class="code" href="bgp__fsm_8h.html#a20174a312cef5d9aa6905c8bf6037020">00319</a> <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="bgp__fsm_8c.html#a20174a312cef5d9aa6905c8bf6037020">peer_down_str</a>[] =
<a name="l00320"></a>00320 {
<a name="l00321"></a>00321   <span class="stringliteral">&quot;&quot;</span>,
<a name="l00322"></a>00322   <span class="stringliteral">&quot;Router ID changed&quot;</span>,
<a name="l00323"></a>00323   <span class="stringliteral">&quot;Remote AS changed&quot;</span>,
<a name="l00324"></a>00324   <span class="stringliteral">&quot;Local AS change&quot;</span>,
<a name="l00325"></a>00325   <span class="stringliteral">&quot;Cluster ID changed&quot;</span>,
<a name="l00326"></a>00326   <span class="stringliteral">&quot;Confederation identifier changed&quot;</span>,
<a name="l00327"></a>00327   <span class="stringliteral">&quot;Confederation peer changed&quot;</span>,
<a name="l00328"></a>00328   <span class="stringliteral">&quot;RR client config change&quot;</span>,
<a name="l00329"></a>00329   <span class="stringliteral">&quot;RS client config change&quot;</span>,
<a name="l00330"></a>00330   <span class="stringliteral">&quot;Update source change&quot;</span>,
<a name="l00331"></a>00331   <span class="stringliteral">&quot;Address family activated&quot;</span>,
<a name="l00332"></a>00332   <span class="stringliteral">&quot;Admin. shutdown&quot;</span>,
<a name="l00333"></a>00333   <span class="stringliteral">&quot;User reset&quot;</span>,
<a name="l00334"></a>00334   <span class="stringliteral">&quot;BGP Notification received&quot;</span>,
<a name="l00335"></a>00335   <span class="stringliteral">&quot;BGP Notification send&quot;</span>,
<a name="l00336"></a>00336   <span class="stringliteral">&quot;Peer closed the session&quot;</span>,
<a name="l00337"></a>00337   <span class="stringliteral">&quot;Neighbor deleted&quot;</span>,
<a name="l00338"></a>00338   <span class="stringliteral">&quot;Peer-group add member&quot;</span>,
<a name="l00339"></a>00339   <span class="stringliteral">&quot;Peer-group delete member&quot;</span>,
<a name="l00340"></a>00340   <span class="stringliteral">&quot;Capability changed&quot;</span>,
<a name="l00341"></a>00341   <span class="stringliteral">&quot;Passive config change&quot;</span>,
<a name="l00342"></a>00342   <span class="stringliteral">&quot;Multihop config change&quot;</span>,
<a name="l00343"></a>00343   <span class="stringliteral">&quot;NSF peer closed the session&quot;</span>
<a name="l00344"></a>00344 };
<a name="l00345"></a>00345 
<a name="l00346"></a>00346 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00347"></a><a class="code" href="bgp__fsm_8c.html#a9e33b04e19f066ddd88661d79b117a1c">00347</a> <a class="code" href="bgp__fsm_8c.html#a9e33b04e19f066ddd88661d79b117a1c">bgp_graceful_restart_timer_expire</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l00348"></a>00348 {
<a name="l00349"></a>00349   <span class="keyword">struct </span><a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>;
<a name="l00350"></a>00350   <a class="code" href="zebra_8h.html#a0a34f9bd6bbc49876614d274005c6ff1">afi_t</a> afi;
<a name="l00351"></a>00351   <a class="code" href="zebra_8h.html#a195af4129e055b63a1b67529674bb998">safi_t</a> safi;
<a name="l00352"></a>00352 
<a name="l00353"></a>00353   peer = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l00354"></a>00354   peer-&gt;<a class="code" href="structpeer.html#a4fdfea0c52fcb6c48138fc9c817d7b41">t_gr_restart</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00355"></a>00355 
<a name="l00356"></a>00356   <span class="comment">/* NSF delete stale route */</span>
<a name="l00357"></a>00357   <span class="keywordflow">for</span> (afi = <a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a> ; afi &lt; <a class="code" href="zebra_8h.html#abf129a17e985713a26a6181a198d5f1a">AFI_MAX</a> ; afi++)
<a name="l00358"></a>00358     <span class="keywordflow">for</span> (safi = <a class="code" href="zebra_8h.html#afb8a63d76f4951ff8d73c32256b4a497">SAFI_UNICAST</a> ; safi &lt; <a class="code" href="zebra_8h.html#acd7929dcab1201ad7ca0de9cb5b8a06c">SAFI_UNICAST_MULTICAST</a> ; safi++)
<a name="l00359"></a>00359       <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#a36e9e912b00326f95bd69cb6afc11efd">nsf</a>[afi][safi])
<a name="l00360"></a>00360     <a class="code" href="bgp__route_8c.html#aa1dd948948425c7e30941a8816af5bb1">bgp_clear_stale_route</a> (peer, afi, safi);
<a name="l00361"></a>00361 
<a name="l00362"></a>00362   <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#a8dd1d16a0890967ee343e1bc70292e4f">sflags</a>, <a class="code" href="bgpd_8h.html#aa97d7e86e0f1905a85364af66368896f">PEER_STATUS_NSF_WAIT</a>);
<a name="l00363"></a>00363   <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#ada375f793bffb7304b39c227704ba406">t_gr_stale</a>);
<a name="l00364"></a>00364 
<a name="l00365"></a>00365   <span class="keywordflow">if</span> (<a class="code" href="bgp__debug_8h.html#a3652951eb4451c498ae4be9890d4b7a4">BGP_DEBUG</a> (events, EVENTS))
<a name="l00366"></a>00366     {
<a name="l00367"></a>00367       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s graceful restart timer expired&quot;</span>, peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>);
<a name="l00368"></a>00368       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s graceful restart stalepath timer stopped&quot;</span>, peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>);
<a name="l00369"></a>00369     }
<a name="l00370"></a>00370 
<a name="l00371"></a>00371   <a class="code" href="bgp__fsm_8c.html#a0dae67b35f2ffb6d6e7f9b1a6684e0aa">bgp_timer_set</a> (peer);
<a name="l00372"></a>00372 
<a name="l00373"></a>00373   <span class="keywordflow">return</span> 0;
<a name="l00374"></a>00374 }
<a name="l00375"></a>00375 
<a name="l00376"></a>00376 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00377"></a><a class="code" href="bgp__fsm_8c.html#abdf2a409fcad0cf22682f61f74d4f937">00377</a> <a class="code" href="bgp__fsm_8c.html#abdf2a409fcad0cf22682f61f74d4f937">bgp_graceful_stale_timer_expire</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l00378"></a>00378 {
<a name="l00379"></a>00379   <span class="keyword">struct </span><a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>;
<a name="l00380"></a>00380   <a class="code" href="zebra_8h.html#a0a34f9bd6bbc49876614d274005c6ff1">afi_t</a> afi;
<a name="l00381"></a>00381   <a class="code" href="zebra_8h.html#a195af4129e055b63a1b67529674bb998">safi_t</a> safi;
<a name="l00382"></a>00382 
<a name="l00383"></a>00383   peer = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l00384"></a>00384   peer-&gt;<a class="code" href="structpeer.html#ada375f793bffb7304b39c227704ba406">t_gr_stale</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00385"></a>00385 
<a name="l00386"></a>00386   <span class="keywordflow">if</span> (<a class="code" href="bgp__debug_8h.html#a3652951eb4451c498ae4be9890d4b7a4">BGP_DEBUG</a> (events, EVENTS))
<a name="l00387"></a>00387     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s graceful restart stalepath timer expired&quot;</span>, peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>);
<a name="l00388"></a>00388 
<a name="l00389"></a>00389   <span class="comment">/* NSF delete stale route */</span>
<a name="l00390"></a>00390   <span class="keywordflow">for</span> (afi = <a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a> ; afi &lt; <a class="code" href="zebra_8h.html#abf129a17e985713a26a6181a198d5f1a">AFI_MAX</a> ; afi++)
<a name="l00391"></a>00391     <span class="keywordflow">for</span> (safi = <a class="code" href="zebra_8h.html#afb8a63d76f4951ff8d73c32256b4a497">SAFI_UNICAST</a> ; safi &lt; <a class="code" href="zebra_8h.html#acd7929dcab1201ad7ca0de9cb5b8a06c">SAFI_UNICAST_MULTICAST</a> ; safi++)
<a name="l00392"></a>00392       <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#a36e9e912b00326f95bd69cb6afc11efd">nsf</a>[afi][safi])
<a name="l00393"></a>00393     <a class="code" href="bgp__route_8c.html#aa1dd948948425c7e30941a8816af5bb1">bgp_clear_stale_route</a> (peer, afi, safi);
<a name="l00394"></a>00394 
<a name="l00395"></a>00395   <span class="keywordflow">return</span> 0;
<a name="l00396"></a>00396 }
<a name="l00397"></a>00397 
<a name="l00398"></a>00398 <span class="comment">/* Called after event occured, this function change status and reset</span>
<a name="l00399"></a>00399 <span class="comment">   read/write and timer thread. */</span>
<a name="l00400"></a>00400 <span class="keywordtype">void</span>
<a name="l00401"></a><a class="code" href="bgp__fsm_8h.html#ae5bbbc9f4290574b72885050744741fd">00401</a> <a class="code" href="bgp__fsm_8c.html#ae5bbbc9f4290574b72885050744741fd">bgp_fsm_change_status</a> (<span class="keyword">struct</span> <a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>, <span class="keywordtype">int</span> <a class="code" href="structpeer.html#ae39d16f69d65fec0f4f1908b4a33e6c6">status</a>)
<a name="l00402"></a>00402 {
<a name="l00403"></a>00403   <a class="code" href="bgp__dump_8c.html#a583bbdd359820c2e8ecd9c64c39e3998">bgp_dump_state</a> (peer, peer-&gt;<a class="code" href="structpeer.html#ae39d16f69d65fec0f4f1908b4a33e6c6">status</a>, status);
<a name="l00404"></a>00404 
<a name="l00405"></a>00405   <span class="comment">/* Transition into Clearing or Deleted must /always/ clear all routes.. </span>
<a name="l00406"></a>00406 <span class="comment">   * (and must do so before actually changing into Deleted..</span>
<a name="l00407"></a>00407 <span class="comment">   */</span>
<a name="l00408"></a>00408   <span class="keywordflow">if</span> (status &gt;= <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>)
<a name="l00409"></a>00409     <a class="code" href="bgp__route_8c.html#ac73f860ac71768cc3169bf96512d1b1c">bgp_clear_route_all</a> (peer);
<a name="l00410"></a>00410   
<a name="l00411"></a>00411   <span class="comment">/* Preserve old status and change into new status. */</span>
<a name="l00412"></a>00412   peer-&gt;<a class="code" href="structpeer.html#a6f5e76deea384483efc1f5bb27e51fbf">ostatus</a> = peer-&gt;<a class="code" href="structpeer.html#ae39d16f69d65fec0f4f1908b4a33e6c6">status</a>;
<a name="l00413"></a>00413   peer-&gt;<a class="code" href="structpeer.html#ae39d16f69d65fec0f4f1908b4a33e6c6">status</a> = <a class="code" href="structpeer.html#ae39d16f69d65fec0f4f1908b4a33e6c6">status</a>;
<a name="l00414"></a>00414   
<a name="l00415"></a>00415   <span class="keywordflow">if</span> (<a class="code" href="bgp__debug_8h.html#a3652951eb4451c498ae4be9890d4b7a4">BGP_DEBUG</a> (normal, NORMAL))
<a name="l00416"></a>00416     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s went from %s to %s&quot;</span>,
<a name="l00417"></a>00417         peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>,
<a name="l00418"></a>00418         <a class="code" href="log_8h.html#a3a4b1cad85aa6752f39580944e24a868">LOOKUP</a> (<a class="code" href="bgp__debug_8c.html#adfa19d3216f6254be62df3c23e338ad9">bgp_status_msg</a>, peer-&gt;<a class="code" href="structpeer.html#a6f5e76deea384483efc1f5bb27e51fbf">ostatus</a>),
<a name="l00419"></a>00419         <a class="code" href="log_8h.html#a3a4b1cad85aa6752f39580944e24a868">LOOKUP</a> (<a class="code" href="bgp__debug_8c.html#adfa19d3216f6254be62df3c23e338ad9">bgp_status_msg</a>, peer-&gt;<a class="code" href="structpeer.html#ae39d16f69d65fec0f4f1908b4a33e6c6">status</a>));
<a name="l00420"></a>00420 }
<a name="l00421"></a>00421 
<a name="l00422"></a>00422 <span class="comment">/* Flush the event queue and ensure the peer is shut down */</span>
<a name="l00423"></a>00423 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00424"></a><a class="code" href="bgp__fsm_8c.html#a1529ace83c11c70e885748a7d5cef369">00424</a> <a class="code" href="bgp__fsm_8c.html#a1529ace83c11c70e885748a7d5cef369">bgp_clearing_completed</a> (<span class="keyword">struct</span> <a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>)
<a name="l00425"></a>00425 {
<a name="l00426"></a>00426   <span class="keywordtype">int</span> rc = <a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>(peer);
<a name="l00427"></a>00427   <a class="code" href="bgp__fsm_8h.html#af4f1a52b106aa7dbf3494d0debf644d3">BGP_EVENT_FLUSH</a> (peer);
<a name="l00428"></a>00428 
<a name="l00429"></a>00429   <span class="keywordflow">return</span> rc;
<a name="l00430"></a>00430 }
<a name="l00431"></a>00431 
<a name="l00432"></a>00432 <span class="comment">/* Administrative BGP peer stop event. */</span>
<a name="l00433"></a>00433 <span class="comment">/* May be called multiple times for the same peer */</span>
<a name="l00434"></a>00434 <span class="keywordtype">int</span>
<a name="l00435"></a><a class="code" href="bgp__fsm_8h.html#a70832c80e2f7e40a453d23689818d84a">00435</a> <a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a> (<span class="keyword">struct</span> <a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>)
<a name="l00436"></a>00436 {
<a name="l00437"></a>00437   <a class="code" href="zebra_8h.html#a0a34f9bd6bbc49876614d274005c6ff1">afi_t</a> afi;
<a name="l00438"></a>00438   <a class="code" href="zebra_8h.html#a195af4129e055b63a1b67529674bb998">safi_t</a> safi;
<a name="l00439"></a>00439   <span class="keywordtype">char</span> orf_name[BUFSIZ];
<a name="l00440"></a>00440 
<a name="l00441"></a>00441   <span class="comment">/* Can&#39;t do this in Clearing; events are used for state transitions */</span>
<a name="l00442"></a>00442   <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#ae39d16f69d65fec0f4f1908b4a33e6c6">status</a> != <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>)
<a name="l00443"></a>00443     {
<a name="l00444"></a>00444       <span class="comment">/* Delete all existing events of the peer */</span>
<a name="l00445"></a>00445       <a class="code" href="bgp__fsm_8h.html#af4f1a52b106aa7dbf3494d0debf644d3">BGP_EVENT_FLUSH</a> (peer);
<a name="l00446"></a>00446     }
<a name="l00447"></a>00447 
<a name="l00448"></a>00448   <span class="comment">/* Increment Dropped count. */</span>
<a name="l00449"></a>00449   <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#ae39d16f69d65fec0f4f1908b4a33e6c6">status</a> == <a class="code" href="bgpd_8h.html#aa87809ec7dea97b0e970e98ae6c181ea">Established</a>)
<a name="l00450"></a>00450     {
<a name="l00451"></a>00451       peer-&gt;<a class="code" href="structpeer.html#adb1885b5103791a47fbb5922536c22c9">dropped</a>++;
<a name="l00452"></a>00452 
<a name="l00453"></a>00453       <span class="comment">/* bgp log-neighbor-changes of neighbor Down */</span>
<a name="l00454"></a>00454       <span class="keywordflow">if</span> (<a class="code" href="bgpd_8c.html#a0b3388d8ac73af2d4f4f22e46746da1e">bgp_flag_check</a> (peer-&gt;<a class="code" href="structpeer.html#aaff7e2f66146a076913d2fe3217edf2c">bgp</a>, <a class="code" href="bgpd_8h.html#a4871d191e1b11258fc7d58365a8de88b">BGP_FLAG_LOG_NEIGHBOR_CHANGES</a>))
<a name="l00455"></a>00455     <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;%%ADJCHANGE: neighbor %s Down %s&quot;</span>, peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>,
<a name="l00456"></a>00456                    <a class="code" href="bgp__fsm_8c.html#a20174a312cef5d9aa6905c8bf6037020">peer_down_str</a> [(<span class="keywordtype">int</span>) peer-&gt;<a class="code" href="structpeer.html#a25ebf375ff5c70069097a7420a8061f9">last_reset</a>]);
<a name="l00457"></a>00457 
<a name="l00458"></a>00458       <span class="comment">/* graceful restart */</span>
<a name="l00459"></a>00459       <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#ada375f793bffb7304b39c227704ba406">t_gr_stale</a>)
<a name="l00460"></a>00460     {
<a name="l00461"></a>00461       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#ada375f793bffb7304b39c227704ba406">t_gr_stale</a>);
<a name="l00462"></a>00462       <span class="keywordflow">if</span> (<a class="code" href="bgp__debug_8h.html#a3652951eb4451c498ae4be9890d4b7a4">BGP_DEBUG</a> (events, EVENTS))
<a name="l00463"></a>00463         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s graceful restart stalepath timer stopped&quot;</span>, peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>);
<a name="l00464"></a>00464     }
<a name="l00465"></a>00465       <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#a8dd1d16a0890967ee343e1bc70292e4f">sflags</a>, <a class="code" href="bgpd_8h.html#aa97d7e86e0f1905a85364af66368896f">PEER_STATUS_NSF_WAIT</a>))
<a name="l00466"></a>00466     {
<a name="l00467"></a>00467       <span class="keywordflow">if</span> (<a class="code" href="bgp__debug_8h.html#a3652951eb4451c498ae4be9890d4b7a4">BGP_DEBUG</a> (events, EVENTS))
<a name="l00468"></a>00468         {
<a name="l00469"></a>00469           <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s graceful restart timer started for %d sec&quot;</span>,
<a name="l00470"></a>00470               peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>, peer-&gt;<a class="code" href="structpeer.html#a52c79d6e660a26c070155a215188c9fb">v_gr_restart</a>);
<a name="l00471"></a>00471           <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s graceful restart stalepath timer started for %d sec&quot;</span>,
<a name="l00472"></a>00472               peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>, peer-&gt;<a class="code" href="structpeer.html#aaff7e2f66146a076913d2fe3217edf2c">bgp</a>-&gt;<a class="code" href="structbgp.html#af3fceb1479812aeba233601365bf9fbd">stalepath_time</a>);
<a name="l00473"></a>00473         }
<a name="l00474"></a>00474       <a class="code" href="bgp__fsm_8h.html#aaf9fcd8314ca70eef21f5689423d7152">BGP_TIMER_ON</a> (peer-&gt;<a class="code" href="structpeer.html#a4fdfea0c52fcb6c48138fc9c817d7b41">t_gr_restart</a>, <a class="code" href="bgp__fsm_8c.html#a9e33b04e19f066ddd88661d79b117a1c">bgp_graceful_restart_timer_expire</a>,
<a name="l00475"></a>00475             peer-&gt;<a class="code" href="structpeer.html#a52c79d6e660a26c070155a215188c9fb">v_gr_restart</a>);
<a name="l00476"></a>00476       <a class="code" href="bgp__fsm_8h.html#aaf9fcd8314ca70eef21f5689423d7152">BGP_TIMER_ON</a> (peer-&gt;<a class="code" href="structpeer.html#ada375f793bffb7304b39c227704ba406">t_gr_stale</a>, <a class="code" href="bgp__fsm_8c.html#abdf2a409fcad0cf22682f61f74d4f937">bgp_graceful_stale_timer_expire</a>,
<a name="l00477"></a>00477             peer-&gt;<a class="code" href="structpeer.html#aaff7e2f66146a076913d2fe3217edf2c">bgp</a>-&gt;<a class="code" href="structbgp.html#af3fceb1479812aeba233601365bf9fbd">stalepath_time</a>);
<a name="l00478"></a>00478     }
<a name="l00479"></a>00479       <span class="keywordflow">else</span>
<a name="l00480"></a>00480     {
<a name="l00481"></a>00481       <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#a8dd1d16a0890967ee343e1bc70292e4f">sflags</a>, <a class="code" href="bgpd_8h.html#a4ff62dffb922440e74de66efee6f8f42">PEER_STATUS_NSF_MODE</a>);
<a name="l00482"></a>00482 
<a name="l00483"></a>00483       <span class="keywordflow">for</span> (afi = <a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a> ; afi &lt; <a class="code" href="zebra_8h.html#abf129a17e985713a26a6181a198d5f1a">AFI_MAX</a> ; afi++)
<a name="l00484"></a>00484         <span class="keywordflow">for</span> (safi = <a class="code" href="zebra_8h.html#afb8a63d76f4951ff8d73c32256b4a497">SAFI_UNICAST</a> ; safi &lt; <a class="code" href="zebra_8h.html#acd7929dcab1201ad7ca0de9cb5b8a06c">SAFI_UNICAST_MULTICAST</a> ; safi++)
<a name="l00485"></a>00485           peer-&gt;<a class="code" href="structpeer.html#a36e9e912b00326f95bd69cb6afc11efd">nsf</a>[afi][safi] = 0;
<a name="l00486"></a>00486     }
<a name="l00487"></a>00487 
<a name="l00488"></a>00488       <span class="comment">/* set last reset time */</span>
<a name="l00489"></a>00489       peer-&gt;<a class="code" href="structpeer.html#a6b54a3917c026e52541f861b1a7b9cf8">resettime</a> = peer-&gt;<a class="code" href="structpeer.html#a008ca2beea8dd058639039cf2b468844">uptime</a> = <a class="code" href="bgpd_8c.html#a57400e51b671bd48e19b86df877be1e9">bgp_clock</a> ();
<a name="l00490"></a>00490 
<a name="l00491"></a>00491 <span class="preprocessor">#ifdef HAVE_SNMP</span>
<a name="l00492"></a>00492 <span class="preprocessor"></span>      <a class="code" href="bgp__snmp_8h.html#ad57de0ca6043122ebee75e6a97d18733">bgpTrapBackwardTransition</a> (peer);
<a name="l00493"></a>00493 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_SNMP */</span>
<a name="l00494"></a>00494 
<a name="l00495"></a>00495       <span class="comment">/* Reset peer synctime */</span>
<a name="l00496"></a>00496       peer-&gt;<a class="code" href="structpeer.html#ac634a8cdc8e00d064d9d9fcdd324a950">synctime</a> = 0;
<a name="l00497"></a>00497     }
<a name="l00498"></a>00498 
<a name="l00499"></a>00499   <span class="comment">/* Stop read and write threads when exists. */</span>
<a name="l00500"></a>00500   <a class="code" href="bgp__fsm_8h.html#abda2b4012d32bfc561f7c97e37263bbe">BGP_READ_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a51f641e77c077e7e3355a65bd3e51dac">t_read</a>);
<a name="l00501"></a>00501   <a class="code" href="bgp__fsm_8h.html#a49884b788209354868be2e7e580584ce">BGP_WRITE_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#af1b52e357fd1c6aa0bc8360cf57485e4">t_write</a>);
<a name="l00502"></a>00502 
<a name="l00503"></a>00503   <span class="comment">/* Stop all timers. */</span>
<a name="l00504"></a>00504   <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#ad7cf15fc612938449a9ac8d7ed111a91">t_start</a>);
<a name="l00505"></a>00505   <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a7badb9ad50dae6376ecaa005318676e4">t_connect</a>);
<a name="l00506"></a>00506   <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a84256b6da29b58448f37ed9fd3247bb6">t_holdtime</a>);
<a name="l00507"></a>00507   <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a4f8889925480578b771c9574e88add27">t_keepalive</a>);
<a name="l00508"></a>00508   <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#ae6ca6f06c2ebc2537ff2f10da05263d3">t_asorig</a>);
<a name="l00509"></a>00509   <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a81042b1115a4cc6ced7d496a1aaaacac">t_routeadv</a>);
<a name="l00510"></a>00510 
<a name="l00511"></a>00511   <span class="comment">/* Stream reset. */</span>
<a name="l00512"></a>00512   peer-&gt;<a class="code" href="structpeer.html#a21bd941bc82fe85b016335eaf9ff8140">packet_size</a> = 0;
<a name="l00513"></a>00513 
<a name="l00514"></a>00514   <span class="comment">/* Clear input and output buffer.  */</span>
<a name="l00515"></a>00515   <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#ad56414663c798719e3a10e6c62a37003">ibuf</a>)
<a name="l00516"></a>00516     <a class="code" href="stream_8c.html#aee8fd31485ebc2f0a556a6a5d5c2d1e6">stream_reset</a> (peer-&gt;<a class="code" href="structpeer.html#ad56414663c798719e3a10e6c62a37003">ibuf</a>);
<a name="l00517"></a>00517   <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#a5306384581e22c8d1678087a6ef8e3e4">work</a>)
<a name="l00518"></a>00518     <a class="code" href="stream_8c.html#aee8fd31485ebc2f0a556a6a5d5c2d1e6">stream_reset</a> (peer-&gt;<a class="code" href="structpeer.html#a5306384581e22c8d1678087a6ef8e3e4">work</a>);
<a name="l00519"></a>00519   <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#a04997e74f9bfe73fb049633fa25cbbb7">obuf</a>)
<a name="l00520"></a>00520     <a class="code" href="stream_8c.html#a9e1a6e68edeeb87d009b54c7c2b22365">stream_fifo_clean</a> (peer-&gt;<a class="code" href="structpeer.html#a04997e74f9bfe73fb049633fa25cbbb7">obuf</a>);
<a name="l00521"></a>00521 
<a name="l00522"></a>00522   <span class="comment">/* Close of file descriptor. */</span>
<a name="l00523"></a>00523   <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#a593c49b1167d88eb2d2900db47eb5d9d">fd</a> &gt;= 0)
<a name="l00524"></a>00524     {
<a name="l00525"></a>00525       close (peer-&gt;<a class="code" href="structpeer.html#a593c49b1167d88eb2d2900db47eb5d9d">fd</a>);
<a name="l00526"></a>00526       peer-&gt;<a class="code" href="structpeer.html#a593c49b1167d88eb2d2900db47eb5d9d">fd</a> = -1;
<a name="l00527"></a>00527     }
<a name="l00528"></a>00528 
<a name="l00529"></a>00529   <span class="keywordflow">for</span> (afi = <a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a> ; afi &lt; <a class="code" href="zebra_8h.html#abf129a17e985713a26a6181a198d5f1a">AFI_MAX</a> ; afi++)
<a name="l00530"></a>00530     <span class="keywordflow">for</span> (safi = <a class="code" href="zebra_8h.html#afb8a63d76f4951ff8d73c32256b4a497">SAFI_UNICAST</a> ; safi &lt; <a class="code" href="zebra_8h.html#a82fe6f63e822f7bf9e4567873d809ed8">SAFI_MAX</a> ; safi++)
<a name="l00531"></a>00531       {
<a name="l00532"></a>00532         <span class="comment">/* Reset all negotiated variables */</span>
<a name="l00533"></a>00533         peer-&gt;<a class="code" href="structpeer.html#a08da0f40c72c2016e659539e6af6dc2d">afc_nego</a>[afi][safi] = 0;
<a name="l00534"></a>00534         peer-&gt;<a class="code" href="structpeer.html#a62f0e72c2cc7eaa59235980f81d3bfa6">afc_adv</a>[afi][safi] = 0;
<a name="l00535"></a>00535         peer-&gt;<a class="code" href="structpeer.html#a69bf8dd8a30764344085b68b398dd619">afc_recv</a>[afi][safi] = 0;
<a name="l00536"></a>00536 
<a name="l00537"></a>00537     <span class="comment">/* peer address family capability flags*/</span>
<a name="l00538"></a>00538     peer-&gt;<a class="code" href="structpeer.html#aa025a735cf6b2d8b85ff9fc974031b8d">af_cap</a>[afi][safi] = 0;
<a name="l00539"></a>00539 
<a name="l00540"></a>00540     <span class="comment">/* peer address family status flags*/</span>
<a name="l00541"></a>00541     peer-&gt;<a class="code" href="structpeer.html#ab49d7e30a6869bf9f0753afe25b17c6a">af_sflags</a>[afi][safi] = 0;
<a name="l00542"></a>00542 
<a name="l00543"></a>00543     <span class="comment">/* Received ORF prefix-filter */</span>
<a name="l00544"></a>00544     peer-&gt;<a class="code" href="structpeer.html#a2473c352a18c1a1169cd01754dbfc993">orf_plist</a>[afi][safi] = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00545"></a>00545 
<a name="l00546"></a>00546         <span class="comment">/* ORF received prefix-filter pnt */</span>
<a name="l00547"></a>00547         sprintf (orf_name, <span class="stringliteral">&quot;%s.%d.%d&quot;</span>, peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>, afi, safi);
<a name="l00548"></a>00548         <a class="code" href="plist_8c.html#ab45c235a305a061e5ac9fceecfc90a55">prefix_bgp_orf_remove_all</a> (orf_name);
<a name="l00549"></a>00549       }
<a name="l00550"></a>00550 
<a name="l00551"></a>00551   <span class="comment">/* Reset keepalive and holdtime */</span>
<a name="l00552"></a>00552   <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#add88f88547df15dd579f2001840a5ffe">config</a>, <a class="code" href="bgpd_8h.html#a0a38ee681fef67382b59bcacf7e71acc">PEER_CONFIG_TIMER</a>))
<a name="l00553"></a>00553     {
<a name="l00554"></a>00554       peer-&gt;<a class="code" href="structpeer.html#a4683327b18d77b5888cc293b180f01ff">v_keepalive</a> = peer-&gt;<a class="code" href="structpeer.html#a26d22938043d49420b6c9753c7c1eb2b">keepalive</a>;
<a name="l00555"></a>00555       peer-&gt;<a class="code" href="structpeer.html#ade54caf4be91128837361d44f0239fa0">v_holdtime</a> = peer-&gt;<a class="code" href="structpeer.html#a94b9ef3bd3f901c67be200f2b394c206">holdtime</a>;
<a name="l00556"></a>00556     }
<a name="l00557"></a>00557   <span class="keywordflow">else</span>
<a name="l00558"></a>00558     {
<a name="l00559"></a>00559       peer-&gt;<a class="code" href="structpeer.html#a4683327b18d77b5888cc293b180f01ff">v_keepalive</a> = peer-&gt;<a class="code" href="structpeer.html#aaff7e2f66146a076913d2fe3217edf2c">bgp</a>-&gt;<a class="code" href="structbgp.html#a2cb2d8c22ae72be52eae0b4f2e193fcb">default_keepalive</a>;
<a name="l00560"></a>00560       peer-&gt;<a class="code" href="structpeer.html#ade54caf4be91128837361d44f0239fa0">v_holdtime</a> = peer-&gt;<a class="code" href="structpeer.html#aaff7e2f66146a076913d2fe3217edf2c">bgp</a>-&gt;<a class="code" href="structbgp.html#a019cdc9f6a2587ee4d4a271e5add5db4">default_holdtime</a>;
<a name="l00561"></a>00561     }
<a name="l00562"></a>00562 
<a name="l00563"></a>00563   peer-&gt;<a class="code" href="structpeer.html#a417a77217f3ecfb948016245a4eaf650">update_time</a> = 0;
<a name="l00564"></a>00564 
<a name="l00565"></a>00565   <span class="comment">/* Until we are sure that there is no problem about prefix count</span>
<a name="l00566"></a>00566 <span class="comment">     this should be commented out.*/</span>
<a name="l00567"></a>00567 <span class="preprocessor">#if 0</span>
<a name="l00568"></a>00568 <span class="preprocessor"></span>  <span class="comment">/* Reset prefix count */</span>
<a name="l00569"></a>00569   peer-&gt;<a class="code" href="structpeer.html#ad330ebcaa29077b76720f2d62f36dc24">pcount</a>[<a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>][<a class="code" href="zebra_8h.html#afb8a63d76f4951ff8d73c32256b4a497">SAFI_UNICAST</a>] = 0;
<a name="l00570"></a>00570   peer-&gt;<a class="code" href="structpeer.html#ad330ebcaa29077b76720f2d62f36dc24">pcount</a>[<a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>][<a class="code" href="zebra_8h.html#aea5323bab4aaf8f8737af8a8ea19c661">SAFI_MULTICAST</a>] = 0;
<a name="l00571"></a>00571   peer-&gt;<a class="code" href="structpeer.html#ad330ebcaa29077b76720f2d62f36dc24">pcount</a>[<a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>][<a class="code" href="zebra_8h.html#aea6a248ae05b01f7ff8faf6d8c8c6c10">SAFI_MPLS_VPN</a>] = 0;
<a name="l00572"></a>00572   peer-&gt;<a class="code" href="structpeer.html#ad330ebcaa29077b76720f2d62f36dc24">pcount</a>[<a class="code" href="zebra_8h.html#ad10f30457e426e1d269466d3b6603c3c">AFI_IP6</a>][<a class="code" href="zebra_8h.html#afb8a63d76f4951ff8d73c32256b4a497">SAFI_UNICAST</a>] = 0;
<a name="l00573"></a>00573   peer-&gt;<a class="code" href="structpeer.html#ad330ebcaa29077b76720f2d62f36dc24">pcount</a>[<a class="code" href="zebra_8h.html#ad10f30457e426e1d269466d3b6603c3c">AFI_IP6</a>][<a class="code" href="zebra_8h.html#aea5323bab4aaf8f8737af8a8ea19c661">SAFI_MULTICAST</a>] = 0;
<a name="l00574"></a>00574 <span class="preprocessor">#endif </span><span class="comment">/* 0 */</span>
<a name="l00575"></a>00575 
<a name="l00576"></a>00576   <span class="keywordflow">return</span> 0;
<a name="l00577"></a>00577 }
<a name="l00578"></a>00578 
<a name="l00579"></a>00579 <span class="comment">/* BGP peer is stoped by the error. */</span>
<a name="l00580"></a>00580 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00581"></a><a class="code" href="bgp__fsm_8c.html#a4de2dbc91c9ad88b682235e96971d05b">00581</a> <a class="code" href="bgp__fsm_8c.html#a4de2dbc91c9ad88b682235e96971d05b">bgp_stop_with_error</a> (<span class="keyword">struct</span> <a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>)
<a name="l00582"></a>00582 {
<a name="l00583"></a>00583   <span class="comment">/* Double start timer. */</span>
<a name="l00584"></a>00584   peer-&gt;<a class="code" href="structpeer.html#a82d93e09c2e715abdb362fa6b5059908">v_start</a> *= 2;
<a name="l00585"></a>00585 
<a name="l00586"></a>00586   <span class="comment">/* Overflow check. */</span>
<a name="l00587"></a>00587   <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#a82d93e09c2e715abdb362fa6b5059908">v_start</a> &gt;= (60 * 2))
<a name="l00588"></a>00588     peer-&gt;<a class="code" href="structpeer.html#a82d93e09c2e715abdb362fa6b5059908">v_start</a> = (60 * 2);
<a name="l00589"></a>00589 
<a name="l00590"></a>00590   <a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a> (peer);
<a name="l00591"></a>00591 
<a name="l00592"></a>00592   <span class="keywordflow">return</span> 0;
<a name="l00593"></a>00593 }
<a name="l00594"></a>00594 
<a name="l00595"></a>00595 <span class="comment">/* TCP connection open.  Next we send open message to remote peer. And</span>
<a name="l00596"></a>00596 <span class="comment">   add read thread for reading open message. */</span>
<a name="l00597"></a>00597 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00598"></a><a class="code" href="bgp__fsm_8c.html#a52ed36fb0e6488b293fea56eec30c725">00598</a> <a class="code" href="bgp__fsm_8c.html#a52ed36fb0e6488b293fea56eec30c725">bgp_connect_success</a> (<span class="keyword">struct</span> <a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>)
<a name="l00599"></a>00599 {
<a name="l00600"></a>00600   <span class="keywordtype">char</span> buf1[BUFSIZ];
<a name="l00601"></a>00601 
<a name="l00602"></a>00602   <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#a593c49b1167d88eb2d2900db47eb5d9d">fd</a> &lt; 0)
<a name="l00603"></a>00603     {
<a name="l00604"></a>00604       <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;bgp_connect_success peer&#39;s fd is negative value %d&quot;</span>,
<a name="l00605"></a>00605         peer-&gt;<a class="code" href="structpeer.html#a593c49b1167d88eb2d2900db47eb5d9d">fd</a>);
<a name="l00606"></a>00606       <span class="keywordflow">return</span> -1;
<a name="l00607"></a>00607     }
<a name="l00608"></a>00608   <a class="code" href="bgp__fsm_8h.html#a62b5746c9e6a92bffde54f2dc61557d7">BGP_READ_ON</a> (peer-&gt;<a class="code" href="structpeer.html#a51f641e77c077e7e3355a65bd3e51dac">t_read</a>, <a class="code" href="bgp__packet_8c.html#a3a37390260357b584d8fd7b3591b2058">bgp_read</a>, peer-&gt;<a class="code" href="structpeer.html#a593c49b1167d88eb2d2900db47eb5d9d">fd</a>);
<a name="l00609"></a>00609 
<a name="l00610"></a>00610   <span class="keywordflow">if</span> (! <a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#a8dd1d16a0890967ee343e1bc70292e4f">sflags</a>, <a class="code" href="bgpd_8h.html#a4b52af7b570cb9bf7c57f3bd5ea71b73">PEER_STATUS_ACCEPT_PEER</a>))
<a name="l00611"></a>00611     <a class="code" href="bgp__network_8c.html#a2079c55451759a453b0f416a16d75f86">bgp_getsockname</a> (peer);
<a name="l00612"></a>00612 
<a name="l00613"></a>00613   <span class="keywordflow">if</span> (<a class="code" href="bgp__debug_8h.html#a3652951eb4451c498ae4be9890d4b7a4">BGP_DEBUG</a> (normal, NORMAL))
<a name="l00614"></a>00614     {
<a name="l00615"></a>00615       <span class="keywordflow">if</span> (! <a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#a8dd1d16a0890967ee343e1bc70292e4f">sflags</a>, <a class="code" href="bgpd_8h.html#a4b52af7b570cb9bf7c57f3bd5ea71b73">PEER_STATUS_ACCEPT_PEER</a>))
<a name="l00616"></a>00616     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s open active, local address %s&quot;</span>, peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>,
<a name="l00617"></a>00617             <a class="code" href="sockunion_8c.html#a93759e01ddbd86605e1716a5c5b27a9e">sockunion2str</a> (peer-&gt;<a class="code" href="structpeer.html#a063537a13602c890880e9c4f1d6fccd3">su_local</a>, buf1, <a class="code" href="sockunion_8h.html#acdf2761ecf6723841896a77e9059e810">SU_ADDRSTRLEN</a>));
<a name="l00618"></a>00618       <span class="keywordflow">else</span>
<a name="l00619"></a>00619     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s passive open&quot;</span>, peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>);
<a name="l00620"></a>00620     }
<a name="l00621"></a>00621 
<a name="l00622"></a>00622   <span class="keywordflow">if</span> (! <a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#a8dd1d16a0890967ee343e1bc70292e4f">sflags</a>, <a class="code" href="bgpd_8h.html#a4b52af7b570cb9bf7c57f3bd5ea71b73">PEER_STATUS_ACCEPT_PEER</a>))
<a name="l00623"></a>00623     <a class="code" href="bgp__packet_8c.html#ae1767b91e9e958ab92372f1e2af46c2b">bgp_open_send</a> (peer);
<a name="l00624"></a>00624 
<a name="l00625"></a>00625   <span class="keywordflow">return</span> 0;
<a name="l00626"></a>00626 }
<a name="l00627"></a>00627 
<a name="l00628"></a>00628 <span class="comment">/* TCP connect fail */</span>
<a name="l00629"></a>00629 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00630"></a><a class="code" href="bgp__fsm_8c.html#a9cbac9dc4aff902b0bbe76ac2236f1ec">00630</a> <a class="code" href="bgp__fsm_8c.html#a9cbac9dc4aff902b0bbe76ac2236f1ec">bgp_connect_fail</a> (<span class="keyword">struct</span> <a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>)
<a name="l00631"></a>00631 {
<a name="l00632"></a>00632   <a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a> (peer);
<a name="l00633"></a>00633   <span class="keywordflow">return</span> 0;
<a name="l00634"></a>00634 }
<a name="l00635"></a>00635 
<a name="l00636"></a>00636 <span class="comment">/* This function is the first starting point of all BGP connection. It</span>
<a name="l00637"></a>00637 <span class="comment">   try to connect to remote peer with non-blocking IO. */</span>
<a name="l00638"></a>00638 <span class="keywordtype">int</span>
<a name="l00639"></a><a class="code" href="bgp__fsm_8c.html#aa37215b69bb5e93cc41137bd278a9c9b">00639</a> <a class="code" href="bgp__fsm_8c.html#aa37215b69bb5e93cc41137bd278a9c9b">bgp_start</a> (<span class="keyword">struct</span> <a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>)
<a name="l00640"></a>00640 {
<a name="l00641"></a>00641   <span class="keywordtype">int</span> <a class="code" href="structpeer.html#ae39d16f69d65fec0f4f1908b4a33e6c6">status</a>;
<a name="l00642"></a>00642 
<a name="l00643"></a>00643   <span class="keywordflow">if</span> (<a class="code" href="bgp__fsm_8c.html#ad9ce88248446ff0372b352a095212a03">BGP_PEER_START_SUPPRESSED</a> (peer))
<a name="l00644"></a>00644     {
<a name="l00645"></a>00645       <span class="keywordflow">if</span> (<a class="code" href="bgp__debug_8h.html#a3652951eb4451c498ae4be9890d4b7a4">BGP_DEBUG</a> (fsm, <a class="code" href="bgp__fsm_8c.html#aa80c210a6930b131524d9462e32ccad4">FSM</a>))
<a name="l00646"></a>00646         <a class="code" href="log_8h.html#a4dac9f1d742f56610c76fb86e160a28f">plog_err</a> (peer-&gt;<a class="code" href="structpeer.html#a8042cd53718885196f47ee66b471ec3d">log</a>, <span class="stringliteral">&quot;%s [FSM] Trying to start suppressed peer&quot;</span>
<a name="l00647"></a>00647                   <span class="stringliteral">&quot; - this is never supposed to happen!&quot;</span>, peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>);
<a name="l00648"></a>00648       <span class="keywordflow">return</span> -1;
<a name="l00649"></a>00649     }
<a name="l00650"></a>00650 
<a name="l00651"></a>00651   <span class="comment">/* Scrub some information that might be left over from a previous,</span>
<a name="l00652"></a>00652 <span class="comment">   * session</span>
<a name="l00653"></a>00653 <span class="comment">   */</span>
<a name="l00654"></a>00654   <span class="comment">/* Connection information. */</span>
<a name="l00655"></a>00655   <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#a063537a13602c890880e9c4f1d6fccd3">su_local</a>)
<a name="l00656"></a>00656     {
<a name="l00657"></a>00657       <a class="code" href="sockunion_8c.html#a4c9c2ea65e1c9058a61db60a5ae8dbaf">sockunion_free</a> (peer-&gt;<a class="code" href="structpeer.html#a063537a13602c890880e9c4f1d6fccd3">su_local</a>);
<a name="l00658"></a>00658       peer-&gt;<a class="code" href="structpeer.html#a063537a13602c890880e9c4f1d6fccd3">su_local</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00659"></a>00659     }
<a name="l00660"></a>00660 
<a name="l00661"></a>00661   <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#a9ab7f1f3e48a3027c0f8a92fa6e2de28">su_remote</a>)
<a name="l00662"></a>00662     {
<a name="l00663"></a>00663       <a class="code" href="sockunion_8c.html#a4c9c2ea65e1c9058a61db60a5ae8dbaf">sockunion_free</a> (peer-&gt;<a class="code" href="structpeer.html#a9ab7f1f3e48a3027c0f8a92fa6e2de28">su_remote</a>);
<a name="l00664"></a>00664       peer-&gt;<a class="code" href="structpeer.html#a9ab7f1f3e48a3027c0f8a92fa6e2de28">su_remote</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00665"></a>00665     }
<a name="l00666"></a>00666 
<a name="l00667"></a>00667   <span class="comment">/* Clear remote router-id. */</span>
<a name="l00668"></a>00668   peer-&gt;<a class="code" href="structpeer.html#ae620d85ff35b31ba9eb6073b81731b5b">remote_id</a>.s_addr = 0;
<a name="l00669"></a>00669 
<a name="l00670"></a>00670   <span class="comment">/* Clear peer capability flag. */</span>
<a name="l00671"></a>00671   peer-&gt;<a class="code" href="structpeer.html#a64eadd546a8c50dfe6a6dcb635c3822d">cap</a> = 0;
<a name="l00672"></a>00672     
<a name="l00673"></a>00673   <span class="comment">/* If the peer is passive mode, force to move to Active mode. */</span>
<a name="l00674"></a>00674   <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#a3f18e3da00909bb1ce53919fd7129b54">flags</a>, <a class="code" href="bgpd_8h.html#ac43c8c6cc3aa168070d51ef4e899c6fb">PEER_FLAG_PASSIVE</a>))
<a name="l00675"></a>00675     {
<a name="l00676"></a>00676       <a class="code" href="bgp__fsm_8h.html#a20f7fd10817508149783bf6729dd6727">BGP_EVENT_ADD</a> (peer, <a class="code" href="bgpd_8h.html#a3e6d939d6f371d5d5d6c61299c40a870">TCP_connection_open_failed</a>);
<a name="l00677"></a>00677       <span class="keywordflow">return</span> 0;
<a name="l00678"></a>00678     }
<a name="l00679"></a>00679 
<a name="l00680"></a>00680   status = <a class="code" href="bgp__network_8c.html#a57ed797451133183762525b1ed2da82b">bgp_connect</a> (peer);
<a name="l00681"></a>00681 
<a name="l00682"></a>00682   <span class="keywordflow">switch</span> (status)
<a name="l00683"></a>00683     {
<a name="l00684"></a>00684     <span class="keywordflow">case</span> <a class="code" href="sockunion_8h.html#ab1d3499888de36b96c23f98e283c1b6ea047b71b6325b28f03d8ac558983d7e88">connect_error</a>:
<a name="l00685"></a>00685       <span class="keywordflow">if</span> (<a class="code" href="bgp__debug_8h.html#a3652951eb4451c498ae4be9890d4b7a4">BGP_DEBUG</a> (fsm, <a class="code" href="bgp__fsm_8c.html#aa80c210a6930b131524d9462e32ccad4">FSM</a>))
<a name="l00686"></a>00686     <a class="code" href="log_8h.html#a901efa2487b25c3a74846a52de919565">plog_debug</a> (peer-&gt;<a class="code" href="structpeer.html#a8042cd53718885196f47ee66b471ec3d">log</a>, <span class="stringliteral">&quot;%s [FSM] Connect error&quot;</span>, peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>);
<a name="l00687"></a>00687       <a class="code" href="bgp__fsm_8h.html#a20f7fd10817508149783bf6729dd6727">BGP_EVENT_ADD</a> (peer, <a class="code" href="bgpd_8h.html#a3e6d939d6f371d5d5d6c61299c40a870">TCP_connection_open_failed</a>);
<a name="l00688"></a>00688       <span class="keywordflow">break</span>;
<a name="l00689"></a>00689     <span class="keywordflow">case</span> <a class="code" href="sockunion_8h.html#ab1d3499888de36b96c23f98e283c1b6ea851cdcb3c5b666dc182f4b6136a6fe7d">connect_success</a>:
<a name="l00690"></a>00690       <span class="keywordflow">if</span> (<a class="code" href="bgp__debug_8h.html#a3652951eb4451c498ae4be9890d4b7a4">BGP_DEBUG</a> (fsm, <a class="code" href="bgp__fsm_8c.html#aa80c210a6930b131524d9462e32ccad4">FSM</a>))
<a name="l00691"></a>00691     <a class="code" href="log_8h.html#a901efa2487b25c3a74846a52de919565">plog_debug</a> (peer-&gt;<a class="code" href="structpeer.html#a8042cd53718885196f47ee66b471ec3d">log</a>, <span class="stringliteral">&quot;%s [FSM] Connect immediately success&quot;</span>,
<a name="l00692"></a>00692            peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>);
<a name="l00693"></a>00693       <a class="code" href="bgp__fsm_8h.html#a20f7fd10817508149783bf6729dd6727">BGP_EVENT_ADD</a> (peer, <a class="code" href="bgpd_8h.html#a752a14bd3217eb3b705dd20e50824eef">TCP_connection_open</a>);
<a name="l00694"></a>00694       <span class="keywordflow">break</span>;
<a name="l00695"></a>00695     <span class="keywordflow">case</span> <a class="code" href="sockunion_8h.html#ab1d3499888de36b96c23f98e283c1b6eaefd11a166b80dff3244284fa5ece9d28">connect_in_progress</a>:
<a name="l00696"></a>00696       <span class="comment">/* To check nonblocking connect, we wait until socket is</span>
<a name="l00697"></a>00697 <span class="comment">         readable or writable. */</span>
<a name="l00698"></a>00698       <span class="keywordflow">if</span> (<a class="code" href="bgp__debug_8h.html#a3652951eb4451c498ae4be9890d4b7a4">BGP_DEBUG</a> (fsm, <a class="code" href="bgp__fsm_8c.html#aa80c210a6930b131524d9462e32ccad4">FSM</a>))
<a name="l00699"></a>00699     <a class="code" href="log_8h.html#a901efa2487b25c3a74846a52de919565">plog_debug</a> (peer-&gt;<a class="code" href="structpeer.html#a8042cd53718885196f47ee66b471ec3d">log</a>, <span class="stringliteral">&quot;%s [FSM] Non blocking connect waiting result&quot;</span>,
<a name="l00700"></a>00700            peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>);
<a name="l00701"></a>00701       <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#a593c49b1167d88eb2d2900db47eb5d9d">fd</a> &lt; 0)
<a name="l00702"></a>00702     {
<a name="l00703"></a>00703       <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;bgp_start peer&#39;s fd is negative value %d&quot;</span>,
<a name="l00704"></a>00704             peer-&gt;<a class="code" href="structpeer.html#a593c49b1167d88eb2d2900db47eb5d9d">fd</a>);
<a name="l00705"></a>00705       <span class="keywordflow">return</span> -1;
<a name="l00706"></a>00706     }
<a name="l00707"></a>00707       <a class="code" href="bgp__fsm_8h.html#a62b5746c9e6a92bffde54f2dc61557d7">BGP_READ_ON</a> (peer-&gt;<a class="code" href="structpeer.html#a51f641e77c077e7e3355a65bd3e51dac">t_read</a>, <a class="code" href="bgp__packet_8c.html#a3a37390260357b584d8fd7b3591b2058">bgp_read</a>, peer-&gt;<a class="code" href="structpeer.html#a593c49b1167d88eb2d2900db47eb5d9d">fd</a>);
<a name="l00708"></a>00708       <a class="code" href="bgp__fsm_8h.html#a441b8dfef999d79ac1c3e3b9573fe516">BGP_WRITE_ON</a> (peer-&gt;<a class="code" href="structpeer.html#af1b52e357fd1c6aa0bc8360cf57485e4">t_write</a>, <a class="code" href="bgp__packet_8c.html#ad43cdddbeb3aa17bb2aa199409455c1c">bgp_write</a>, peer-&gt;<a class="code" href="structpeer.html#a593c49b1167d88eb2d2900db47eb5d9d">fd</a>);
<a name="l00709"></a>00709       <span class="keywordflow">break</span>;
<a name="l00710"></a>00710     }
<a name="l00711"></a>00711   <span class="keywordflow">return</span> 0;
<a name="l00712"></a>00712 }
<a name="l00713"></a>00713 
<a name="l00714"></a>00714 <span class="comment">/* Connect retry timer is expired when the peer status is Connect. */</span>
<a name="l00715"></a>00715 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00716"></a><a class="code" href="bgp__fsm_8c.html#a276e1b5f94212b4438ec33a431a2fbce">00716</a> <a class="code" href="bgp__fsm_8c.html#a276e1b5f94212b4438ec33a431a2fbce">bgp_reconnect</a> (<span class="keyword">struct</span> <a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>)
<a name="l00717"></a>00717 {
<a name="l00718"></a>00718   <a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a> (peer);
<a name="l00719"></a>00719   <a class="code" href="bgp__fsm_8c.html#aa37215b69bb5e93cc41137bd278a9c9b">bgp_start</a> (peer);
<a name="l00720"></a>00720   <span class="keywordflow">return</span> 0;
<a name="l00721"></a>00721 }
<a name="l00722"></a>00722 
<a name="l00723"></a>00723 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00724"></a><a class="code" href="bgp__fsm_8c.html#a1c8b28ef45c18a5b325ae627b5838da5">00724</a> <a class="code" href="bgp__fsm_8c.html#a1c8b28ef45c18a5b325ae627b5838da5">bgp_fsm_open</a> (<span class="keyword">struct</span> <a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>)
<a name="l00725"></a>00725 {
<a name="l00726"></a>00726   <span class="comment">/* Send keepalive and make keepalive timer */</span>
<a name="l00727"></a>00727   <a class="code" href="bgp__packet_8c.html#a8b6e388946a87579949ef337af70d3b2">bgp_keepalive_send</a> (peer);
<a name="l00728"></a>00728 
<a name="l00729"></a>00729   <span class="comment">/* Reset holdtimer value. */</span>
<a name="l00730"></a>00730   <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a84256b6da29b58448f37ed9fd3247bb6">t_holdtime</a>);
<a name="l00731"></a>00731 
<a name="l00732"></a>00732   <span class="keywordflow">return</span> 0;
<a name="l00733"></a>00733 }
<a name="l00734"></a>00734 
<a name="l00735"></a>00735 <span class="comment">/* Keepalive send to peer. */</span>
<a name="l00736"></a>00736 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00737"></a><a class="code" href="bgp__fsm_8c.html#a2197d009501485aba614c926082d35d3">00737</a> <a class="code" href="bgp__fsm_8c.html#a2197d009501485aba614c926082d35d3">bgp_fsm_keepalive_expire</a> (<span class="keyword">struct</span> <a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>)
<a name="l00738"></a>00738 {
<a name="l00739"></a>00739   <a class="code" href="bgp__packet_8c.html#a8b6e388946a87579949ef337af70d3b2">bgp_keepalive_send</a> (peer);
<a name="l00740"></a>00740   <span class="keywordflow">return</span> 0;
<a name="l00741"></a>00741 }
<a name="l00742"></a>00742 
<a name="l00743"></a>00743 <span class="comment">/* Hold timer expire.  This is error of BGP connection. So cut the</span>
<a name="l00744"></a>00744 <span class="comment">   peer and change to Idle status. */</span>
<a name="l00745"></a>00745 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00746"></a><a class="code" href="bgp__fsm_8c.html#af6db30df036113a576bb80478f2ee625">00746</a> <a class="code" href="bgp__fsm_8c.html#af6db30df036113a576bb80478f2ee625">bgp_fsm_holdtime_expire</a> (<span class="keyword">struct</span> <a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>)
<a name="l00747"></a>00747 {
<a name="l00748"></a>00748   <span class="keywordflow">if</span> (<a class="code" href="bgp__debug_8h.html#a3652951eb4451c498ae4be9890d4b7a4">BGP_DEBUG</a> (fsm, <a class="code" href="bgp__fsm_8c.html#aa80c210a6930b131524d9462e32ccad4">FSM</a>))
<a name="l00749"></a>00749     <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (peer-&gt;<a class="code" href="structpeer.html#a8042cd53718885196f47ee66b471ec3d">log</a>, LOG_DEBUG, <span class="stringliteral">&quot;%s [FSM] Hold timer expire&quot;</span>, peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>);
<a name="l00750"></a>00750 
<a name="l00751"></a>00751   <span class="comment">/* Send notify to remote peer. */</span>
<a name="l00752"></a>00752   <a class="code" href="bgp__packet_8c.html#ac17989ee6afabce09c9d326fbbf6607b">bgp_notify_send</a> (peer, <a class="code" href="bgpd_8h.html#a195f8a19dfb2df7c88fdefd97db486cc">BGP_NOTIFY_HOLD_ERR</a>, 0);
<a name="l00753"></a>00753 
<a name="l00754"></a>00754   <span class="comment">/* Sweep if it is temporary peer. */</span>
<a name="l00755"></a>00755   <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#a8dd1d16a0890967ee343e1bc70292e4f">sflags</a>, <a class="code" href="bgpd_8h.html#a4b52af7b570cb9bf7c57f3bd5ea71b73">PEER_STATUS_ACCEPT_PEER</a>))
<a name="l00756"></a>00756     {
<a name="l00757"></a>00757       <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;%s [Event] Accepting BGP peer is deleted&quot;</span>, peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>);
<a name="l00758"></a>00758       <a class="code" href="bgpd_8c.html#a3cf7aaaf69048554d000a576ecb0cc9c">peer_delete</a> (peer);
<a name="l00759"></a>00759       <span class="keywordflow">return</span> -1;
<a name="l00760"></a>00760     }
<a name="l00761"></a>00761 
<a name="l00762"></a>00762   <span class="comment">/* bgp_stop needs to be invoked while in Established state */</span>
<a name="l00763"></a>00763   <a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>(peer);
<a name="l00764"></a>00764 
<a name="l00765"></a>00765   <span class="keywordflow">return</span> 0;
<a name="l00766"></a>00766 }
<a name="l00767"></a>00767 
<a name="l00768"></a>00768 <span class="comment">/* Status goes to Established.  Send keepalive packet then make first</span>
<a name="l00769"></a>00769 <span class="comment">   update information. */</span>
<a name="l00770"></a>00770 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00771"></a><a class="code" href="bgp__fsm_8c.html#ab723d29ef85668237eaf5a71ca16a709">00771</a> <a class="code" href="bgp__fsm_8c.html#ab723d29ef85668237eaf5a71ca16a709">bgp_establish</a> (<span class="keyword">struct</span> <a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>)
<a name="l00772"></a>00772 {
<a name="l00773"></a>00773   <span class="keyword">struct </span><a class="code" href="structbgp__notify.html">bgp_notify</a> *notify;
<a name="l00774"></a>00774   <a class="code" href="zebra_8h.html#a0a34f9bd6bbc49876614d274005c6ff1">afi_t</a> afi;
<a name="l00775"></a>00775   <a class="code" href="zebra_8h.html#a195af4129e055b63a1b67529674bb998">safi_t</a> safi;
<a name="l00776"></a>00776   <span class="keywordtype">int</span> nsf_af_count = 0;
<a name="l00777"></a>00777 
<a name="l00778"></a>00778   <span class="comment">/* Reset capability open status flag. */</span>
<a name="l00779"></a>00779   <span class="keywordflow">if</span> (! <a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#a8dd1d16a0890967ee343e1bc70292e4f">sflags</a>, <a class="code" href="bgpd_8h.html#a9a660ebeb4fec952cc45f6945a6f1722">PEER_STATUS_CAPABILITY_OPEN</a>))
<a name="l00780"></a>00780     <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#a8dd1d16a0890967ee343e1bc70292e4f">sflags</a>, <a class="code" href="bgpd_8h.html#a9a660ebeb4fec952cc45f6945a6f1722">PEER_STATUS_CAPABILITY_OPEN</a>);
<a name="l00781"></a>00781 
<a name="l00782"></a>00782   <span class="comment">/* Clear last notification data. */</span>
<a name="l00783"></a>00783   notify = &amp;peer-&gt;<a class="code" href="structpeer.html#af794a3e8a439d6e3a44ccf9723049a23">notify</a>;
<a name="l00784"></a>00784   <span class="keywordflow">if</span> (notify-&gt;<a class="code" href="structbgp__notify.html#aae5f1fab36e60b67e64aeea7146d2364">data</a>)
<a name="l00785"></a>00785     <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, notify-&gt;<a class="code" href="structbgp__notify.html#aae5f1fab36e60b67e64aeea7146d2364">data</a>);
<a name="l00786"></a>00786   memset (notify, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structbgp__notify.html">bgp_notify</a>));
<a name="l00787"></a>00787 
<a name="l00788"></a>00788   <span class="comment">/* Clear start timer value to default. */</span>
<a name="l00789"></a>00789   peer-&gt;<a class="code" href="structpeer.html#a82d93e09c2e715abdb362fa6b5059908">v_start</a> = <a class="code" href="bgpd_8h.html#a0631163bad4d36c78fad00669e254985">BGP_INIT_START_TIMER</a>;
<a name="l00790"></a>00790 
<a name="l00791"></a>00791   <span class="comment">/* Increment established count. */</span>
<a name="l00792"></a>00792   peer-&gt;<a class="code" href="structpeer.html#a7e83fe65d0739a31eb5025f2aa0a6d51">established</a>++;
<a name="l00793"></a>00793   <a class="code" href="bgp__fsm_8c.html#ae5bbbc9f4290574b72885050744741fd">bgp_fsm_change_status</a> (peer, <a class="code" href="bgpd_8h.html#aa87809ec7dea97b0e970e98ae6c181ea">Established</a>);
<a name="l00794"></a>00794 
<a name="l00795"></a>00795   <span class="comment">/* bgp log-neighbor-changes of neighbor Up */</span>
<a name="l00796"></a>00796   <span class="keywordflow">if</span> (<a class="code" href="bgpd_8c.html#a0b3388d8ac73af2d4f4f22e46746da1e">bgp_flag_check</a> (peer-&gt;<a class="code" href="structpeer.html#aaff7e2f66146a076913d2fe3217edf2c">bgp</a>, <a class="code" href="bgpd_8h.html#a4871d191e1b11258fc7d58365a8de88b">BGP_FLAG_LOG_NEIGHBOR_CHANGES</a>))
<a name="l00797"></a>00797     <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;%%ADJCHANGE: neighbor %s Up&quot;</span>, peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>);
<a name="l00798"></a>00798 
<a name="l00799"></a>00799   <span class="comment">/* graceful restart */</span>
<a name="l00800"></a>00800   <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#a8dd1d16a0890967ee343e1bc70292e4f">sflags</a>, <a class="code" href="bgpd_8h.html#aa97d7e86e0f1905a85364af66368896f">PEER_STATUS_NSF_WAIT</a>);
<a name="l00801"></a>00801   <span class="keywordflow">for</span> (afi = <a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a> ; afi &lt; <a class="code" href="zebra_8h.html#abf129a17e985713a26a6181a198d5f1a">AFI_MAX</a> ; afi++)
<a name="l00802"></a>00802     <span class="keywordflow">for</span> (safi = <a class="code" href="zebra_8h.html#afb8a63d76f4951ff8d73c32256b4a497">SAFI_UNICAST</a> ; safi &lt; <a class="code" href="zebra_8h.html#acd7929dcab1201ad7ca0de9cb5b8a06c">SAFI_UNICAST_MULTICAST</a> ; safi++)
<a name="l00803"></a>00803       {
<a name="l00804"></a>00804     <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#a08da0f40c72c2016e659539e6af6dc2d">afc_nego</a>[afi][safi]
<a name="l00805"></a>00805         &amp;&amp; <a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#a64eadd546a8c50dfe6a6dcb635c3822d">cap</a>, <a class="code" href="bgpd_8h.html#a0676dbf05f735073d261e5a01b1c7dcb">PEER_CAP_RESTART_ADV</a>)
<a name="l00806"></a>00806         &amp;&amp; <a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#aa025a735cf6b2d8b85ff9fc974031b8d">af_cap</a>[afi][safi], <a class="code" href="bgpd_8h.html#ae585bd174f4b8a4346359d7240eb886b">PEER_CAP_RESTART_AF_RCV</a>))
<a name="l00807"></a>00807       {
<a name="l00808"></a>00808         <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#a36e9e912b00326f95bd69cb6afc11efd">nsf</a>[afi][safi]
<a name="l00809"></a>00809         &amp;&amp; ! <a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#aa025a735cf6b2d8b85ff9fc974031b8d">af_cap</a>[afi][safi], <a class="code" href="bgpd_8h.html#ab616defb577ded71e32c1b6b6627d66b">PEER_CAP_RESTART_AF_PRESERVE_RCV</a>))
<a name="l00810"></a>00810           <a class="code" href="bgp__route_8c.html#aa1dd948948425c7e30941a8816af5bb1">bgp_clear_stale_route</a> (peer, afi, safi);
<a name="l00811"></a>00811 
<a name="l00812"></a>00812         peer-&gt;<a class="code" href="structpeer.html#a36e9e912b00326f95bd69cb6afc11efd">nsf</a>[afi][safi] = 1;
<a name="l00813"></a>00813         nsf_af_count++;
<a name="l00814"></a>00814       }
<a name="l00815"></a>00815     <span class="keywordflow">else</span>
<a name="l00816"></a>00816       {
<a name="l00817"></a>00817         <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#a36e9e912b00326f95bd69cb6afc11efd">nsf</a>[afi][safi])
<a name="l00818"></a>00818           <a class="code" href="bgp__route_8c.html#aa1dd948948425c7e30941a8816af5bb1">bgp_clear_stale_route</a> (peer, afi, safi);
<a name="l00819"></a>00819         peer-&gt;<a class="code" href="structpeer.html#a36e9e912b00326f95bd69cb6afc11efd">nsf</a>[afi][safi] = 0;
<a name="l00820"></a>00820       }
<a name="l00821"></a>00821       }
<a name="l00822"></a>00822 
<a name="l00823"></a>00823   <span class="keywordflow">if</span> (nsf_af_count)
<a name="l00824"></a>00824     <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#a8dd1d16a0890967ee343e1bc70292e4f">sflags</a>, <a class="code" href="bgpd_8h.html#a4ff62dffb922440e74de66efee6f8f42">PEER_STATUS_NSF_MODE</a>);
<a name="l00825"></a>00825   <span class="keywordflow">else</span>
<a name="l00826"></a>00826     {
<a name="l00827"></a>00827       <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#a8dd1d16a0890967ee343e1bc70292e4f">sflags</a>, <a class="code" href="bgpd_8h.html#a4ff62dffb922440e74de66efee6f8f42">PEER_STATUS_NSF_MODE</a>);
<a name="l00828"></a>00828       <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#ada375f793bffb7304b39c227704ba406">t_gr_stale</a>)
<a name="l00829"></a>00829     {
<a name="l00830"></a>00830       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#ada375f793bffb7304b39c227704ba406">t_gr_stale</a>);
<a name="l00831"></a>00831       <span class="keywordflow">if</span> (<a class="code" href="bgp__debug_8h.html#a3652951eb4451c498ae4be9890d4b7a4">BGP_DEBUG</a> (events, EVENTS))
<a name="l00832"></a>00832         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s graceful restart stalepath timer stopped&quot;</span>, peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>);
<a name="l00833"></a>00833     }
<a name="l00834"></a>00834     }
<a name="l00835"></a>00835 
<a name="l00836"></a>00836   <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#a4fdfea0c52fcb6c48138fc9c817d7b41">t_gr_restart</a>)
<a name="l00837"></a>00837     {
<a name="l00838"></a>00838       <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a4fdfea0c52fcb6c48138fc9c817d7b41">t_gr_restart</a>);
<a name="l00839"></a>00839       <span class="keywordflow">if</span> (<a class="code" href="bgp__debug_8h.html#a3652951eb4451c498ae4be9890d4b7a4">BGP_DEBUG</a> (events, EVENTS))
<a name="l00840"></a>00840     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s graceful restart timer stopped&quot;</span>, peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>);
<a name="l00841"></a>00841     }
<a name="l00842"></a>00842 
<a name="l00843"></a>00843 <span class="preprocessor">#ifdef HAVE_SNMP</span>
<a name="l00844"></a>00844 <span class="preprocessor"></span>  <a class="code" href="bgp__snmp_8h.html#aa020a6fafed939a240aa15f7e36ec578">bgpTrapEstablished</a> (peer);
<a name="l00845"></a>00845 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_SNMP */</span>
<a name="l00846"></a>00846 
<a name="l00847"></a>00847   <span class="comment">/* Reset uptime, send keepalive, send current table. */</span>
<a name="l00848"></a>00848   peer-&gt;<a class="code" href="structpeer.html#a008ca2beea8dd058639039cf2b468844">uptime</a> = <a class="code" href="bgpd_8c.html#a57400e51b671bd48e19b86df877be1e9">bgp_clock</a> ();
<a name="l00849"></a>00849 
<a name="l00850"></a>00850   <span class="comment">/* Send route-refresh when ORF is enabled */</span>
<a name="l00851"></a>00851   <span class="keywordflow">for</span> (afi = <a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a> ; afi &lt; <a class="code" href="zebra_8h.html#abf129a17e985713a26a6181a198d5f1a">AFI_MAX</a> ; afi++)
<a name="l00852"></a>00852     <span class="keywordflow">for</span> (safi = <a class="code" href="zebra_8h.html#afb8a63d76f4951ff8d73c32256b4a497">SAFI_UNICAST</a> ; safi &lt; <a class="code" href="zebra_8h.html#a82fe6f63e822f7bf9e4567873d809ed8">SAFI_MAX</a> ; safi++)
<a name="l00853"></a>00853       <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#aa025a735cf6b2d8b85ff9fc974031b8d">af_cap</a>[afi][safi], <a class="code" href="bgpd_8h.html#ae99d45fd54765fe6d108e85214135de1">PEER_CAP_ORF_PREFIX_SM_ADV</a>))
<a name="l00854"></a>00854     {
<a name="l00855"></a>00855       <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#aa025a735cf6b2d8b85ff9fc974031b8d">af_cap</a>[afi][safi], <a class="code" href="bgpd_8h.html#ae3b16174b0caeeb5d046eb673138187d">PEER_CAP_ORF_PREFIX_RM_RCV</a>))
<a name="l00856"></a>00856         <a class="code" href="bgp__packet_8c.html#af79d4c999f0c6321ab65049fb47dc78d">bgp_route_refresh_send</a> (peer, afi, safi, <a class="code" href="bgp__open_8h.html#adc5dbdce1a3677ba56d250c98f0d56ff">ORF_TYPE_PREFIX</a>,
<a name="l00857"></a>00857                     <a class="code" href="bgp__packet_8h.html#aea8b89e482c433839e04fcb2c59f022c">REFRESH_IMMEDIATE</a>, 0);
<a name="l00858"></a>00858       <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#aa025a735cf6b2d8b85ff9fc974031b8d">af_cap</a>[afi][safi], <a class="code" href="bgpd_8h.html#ab3ce0a5a8efd2d2b846abdad6ec4a9d6">PEER_CAP_ORF_PREFIX_RM_OLD_RCV</a>))
<a name="l00859"></a>00859         <a class="code" href="bgp__packet_8c.html#af79d4c999f0c6321ab65049fb47dc78d">bgp_route_refresh_send</a> (peer, afi, safi, <a class="code" href="bgp__open_8h.html#a08c45b6907c24b44c5db40587b4abb15">ORF_TYPE_PREFIX_OLD</a>,
<a name="l00860"></a>00860                     <a class="code" href="bgp__packet_8h.html#aea8b89e482c433839e04fcb2c59f022c">REFRESH_IMMEDIATE</a>, 0);
<a name="l00861"></a>00861     }
<a name="l00862"></a>00862 
<a name="l00863"></a>00863   <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#a4683327b18d77b5888cc293b180f01ff">v_keepalive</a>)
<a name="l00864"></a>00864     <a class="code" href="bgp__packet_8c.html#a8b6e388946a87579949ef337af70d3b2">bgp_keepalive_send</a> (peer);
<a name="l00865"></a>00865 
<a name="l00866"></a>00866   <span class="comment">/* First update is deferred until ORF or ROUTE-REFRESH is received */</span>
<a name="l00867"></a>00867   <span class="keywordflow">for</span> (afi = <a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a> ; afi &lt; <a class="code" href="zebra_8h.html#abf129a17e985713a26a6181a198d5f1a">AFI_MAX</a> ; afi++)
<a name="l00868"></a>00868     <span class="keywordflow">for</span> (safi = <a class="code" href="zebra_8h.html#afb8a63d76f4951ff8d73c32256b4a497">SAFI_UNICAST</a> ; safi &lt; <a class="code" href="zebra_8h.html#a82fe6f63e822f7bf9e4567873d809ed8">SAFI_MAX</a> ; safi++)
<a name="l00869"></a>00869       <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#aa025a735cf6b2d8b85ff9fc974031b8d">af_cap</a>[afi][safi], <a class="code" href="bgpd_8h.html#aa073ee4ea1d90b2d2971682f4a373776">PEER_CAP_ORF_PREFIX_RM_ADV</a>))
<a name="l00870"></a>00870     <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#aa025a735cf6b2d8b85ff9fc974031b8d">af_cap</a>[afi][safi], <a class="code" href="bgpd_8h.html#a4883c0951321050f52731ef009c2dd17">PEER_CAP_ORF_PREFIX_SM_RCV</a>)
<a name="l00871"></a>00871         || <a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#aa025a735cf6b2d8b85ff9fc974031b8d">af_cap</a>[afi][safi], <a class="code" href="bgpd_8h.html#ae0da0dd013880e12f7d1160d002735a6">PEER_CAP_ORF_PREFIX_SM_OLD_RCV</a>))
<a name="l00872"></a>00872       <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#ab49d7e30a6869bf9f0753afe25b17c6a">af_sflags</a>[afi][safi], <a class="code" href="bgpd_8h.html#af38b3d01fa7faa6698e76d7932ff717f">PEER_STATUS_ORF_WAIT_REFRESH</a>);
<a name="l00873"></a>00873 
<a name="l00874"></a>00874   <a class="code" href="bgp__route_8c.html#a2339aa5e61e6711862d4f6e0eab3ce56">bgp_announce_route_all</a> (peer);
<a name="l00875"></a>00875 
<a name="l00876"></a>00876   <a class="code" href="bgp__fsm_8h.html#aaf9fcd8314ca70eef21f5689423d7152">BGP_TIMER_ON</a> (peer-&gt;<a class="code" href="structpeer.html#a81042b1115a4cc6ced7d496a1aaaacac">t_routeadv</a>, <a class="code" href="bgp__fsm_8c.html#a66dc307fde4b0ec3bff966374f22181c">bgp_routeadv_timer</a>, 1);
<a name="l00877"></a>00877 
<a name="l00878"></a>00878   <span class="keywordflow">return</span> 0;
<a name="l00879"></a>00879 }
<a name="l00880"></a>00880 
<a name="l00881"></a>00881 <span class="comment">/* Keepalive packet is received. */</span>
<a name="l00882"></a>00882 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00883"></a><a class="code" href="bgp__fsm_8c.html#a1890ee2987827600e9e11c7ace44c029">00883</a> <a class="code" href="bgp__fsm_8c.html#a1890ee2987827600e9e11c7ace44c029">bgp_fsm_keepalive</a> (<span class="keyword">struct</span> <a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>)
<a name="l00884"></a>00884 {
<a name="l00885"></a>00885   <span class="comment">/* peer count update */</span>
<a name="l00886"></a>00886   peer-&gt;<a class="code" href="structpeer.html#ad0f0ede8dbcf74fef9fd50a9086cb136">keepalive_in</a>++;
<a name="l00887"></a>00887 
<a name="l00888"></a>00888   <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a84256b6da29b58448f37ed9fd3247bb6">t_holdtime</a>);
<a name="l00889"></a>00889   <span class="keywordflow">return</span> 0;
<a name="l00890"></a>00890 }
<a name="l00891"></a>00891 
<a name="l00892"></a>00892 <span class="comment">/* Update packet is received. */</span>
<a name="l00893"></a>00893 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00894"></a><a class="code" href="bgp__fsm_8c.html#acb64630e4113d7112ff13ed0f2ce2c96">00894</a> <a class="code" href="bgp__fsm_8c.html#acb64630e4113d7112ff13ed0f2ce2c96">bgp_fsm_update</a> (<span class="keyword">struct</span> <a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>)
<a name="l00895"></a>00895 {
<a name="l00896"></a>00896   <a class="code" href="bgp__fsm_8h.html#adc51abba0e065120000e106a628242fe">BGP_TIMER_OFF</a> (peer-&gt;<a class="code" href="structpeer.html#a84256b6da29b58448f37ed9fd3247bb6">t_holdtime</a>);
<a name="l00897"></a>00897   <span class="keywordflow">return</span> 0;
<a name="l00898"></a>00898 }
<a name="l00899"></a>00899 
<a name="l00900"></a>00900 <span class="comment">/* This is empty event. */</span>
<a name="l00901"></a>00901 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00902"></a><a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">00902</a> <a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a> (<span class="keyword">struct</span> <a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>)
<a name="l00903"></a>00903 {
<a name="l00904"></a>00904   <span class="keywordflow">if</span> (<a class="code" href="bgp__debug_8h.html#a3652951eb4451c498ae4be9890d4b7a4">BGP_DEBUG</a> (fsm, <a class="code" href="bgp__fsm_8c.html#aa80c210a6930b131524d9462e32ccad4">FSM</a>))
<a name="l00905"></a>00905     <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (peer-&gt;<a class="code" href="structpeer.html#a8042cd53718885196f47ee66b471ec3d">log</a>, LOG_DEBUG, <span class="stringliteral">&quot;%s [FSM] bgp_ignore called&quot;</span>, peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>);
<a name="l00906"></a>00906   <span class="keywordflow">return</span> 0;
<a name="l00907"></a>00907 }
<a name="l00908"></a>00908 
<a name="l00909"></a>00909 <span class="comment">/* Finite State Machine structure */</span>
<a name="l00910"></a>00910 <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">struct </span>{
<a name="l00911"></a><a class="code" href="bgp__fsm_8c.html#aad6d5d0fbfe60193366eaab88413f7af">00911</a>   int (*<a class="code" href="bgp__fsm_8c.html#aad6d5d0fbfe60193366eaab88413f7af">func</a>) (<span class="keyword">struct </span><a class="code" href="structpeer.html">peer</a> *);
<a name="l00912"></a><a class="code" href="bgp__fsm_8c.html#ac0c302bc97f010b7f5965faa07b00354">00912</a>   <span class="keywordtype">int</span> <a class="code" href="bgp__fsm_8c.html#ac0c302bc97f010b7f5965faa07b00354">next_state</a>;
<a name="l00913"></a>00913 } <a class="code" href="bgp__fsm_8c.html#aa80c210a6930b131524d9462e32ccad4">FSM</a> [<a class="code" href="bgpd_8h.html#a42f2e33bc9d28ed9b12e88fdcb7da08f">BGP_STATUS_MAX</a> - 1][<a class="code" href="bgpd_8h.html#acfc683daee22ef23f64b98e30f6b1373">BGP_EVENTS_MAX</a> - 1] = 
<a name="l00914"></a>00914 {
<a name="l00915"></a>00915   {
<a name="l00916"></a>00916     <span class="comment">/* Idle state: In Idle state, all events other than BGP_Start is</span>
<a name="l00917"></a>00917 <span class="comment">       ignored.  With BGP_Start event, finite state machine calls</span>
<a name="l00918"></a>00918 <span class="comment">       bgp_start(). */</span>
<a name="l00919"></a>00919     {<a class="code" href="bgp__fsm_8c.html#aa37215b69bb5e93cc41137bd278a9c9b">bgp_start</a>,  <a class="code" href="bgpd_8h.html#a58672521fe155cead3bd1f0653be62ee">Connect</a>},  <span class="comment">/* BGP_Start                    */</span>
<a name="l00920"></a>00920     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,   <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},     <span class="comment">/* BGP_Stop                     */</span>
<a name="l00921"></a>00921     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,   <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},     <span class="comment">/* TCP_connection_open          */</span>
<a name="l00922"></a>00922     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,   <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},     <span class="comment">/* TCP_connection_closed        */</span>
<a name="l00923"></a>00923     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>, <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},     <span class="comment">/* TCP_connection_open_failed   */</span>
<a name="l00924"></a>00924     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,   <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},     <span class="comment">/* TCP_fatal_error              */</span>
<a name="l00925"></a>00925     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>, <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},     <span class="comment">/* ConnectRetry_timer_expired   */</span>
<a name="l00926"></a>00926     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>, <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},     <span class="comment">/* Hold_Timer_expired           */</span>
<a name="l00927"></a>00927     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>, <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},     <span class="comment">/* KeepAlive_timer_expired      */</span>
<a name="l00928"></a>00928     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>, <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},     <span class="comment">/* Receive_OPEN_message         */</span>
<a name="l00929"></a>00929     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>, <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},     <span class="comment">/* Receive_KEEPALIVE_message    */</span>
<a name="l00930"></a>00930     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>, <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},     <span class="comment">/* Receive_UPDATE_message       */</span>
<a name="l00931"></a>00931     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>, <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},     <span class="comment">/* Receive_NOTIFICATION_message */</span>
<a name="l00932"></a>00932     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>, <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},         <span class="comment">/* Clearing_Completed           */</span>
<a name="l00933"></a>00933   },
<a name="l00934"></a>00934   {
<a name="l00935"></a>00935     <span class="comment">/* Connect */</span>
<a name="l00936"></a>00936     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#a58672521fe155cead3bd1f0653be62ee">Connect</a>}, <span class="comment">/* BGP_Start                    */</span>
<a name="l00937"></a>00937     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,    <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* BGP_Stop                     */</span>
<a name="l00938"></a>00938     {<a class="code" href="bgp__fsm_8c.html#a52ed36fb0e6488b293fea56eec30c725">bgp_connect_success</a>, <a class="code" href="bgpd_8h.html#a1873a46d77babce8de80c71ce1624718">OpenSent</a>}, <span class="comment">/* TCP_connection_open          */</span>
<a name="l00939"></a>00939     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>, <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},       <span class="comment">/* TCP_connection_closed        */</span>
<a name="l00940"></a>00940     {<a class="code" href="bgp__fsm_8c.html#a9cbac9dc4aff902b0bbe76ac2236f1ec">bgp_connect_fail</a>, <a class="code" href="bgpd_8h.html#a3e4aba4f7d3a690fdce5d1fe31156421">Active</a>}, <span class="comment">/* TCP_connection_open_failed   */</span>
<a name="l00941"></a>00941     {<a class="code" href="bgp__fsm_8c.html#a9cbac9dc4aff902b0bbe76ac2236f1ec">bgp_connect_fail</a>, <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},   <span class="comment">/* TCP_fatal_error              */</span>
<a name="l00942"></a>00942     {<a class="code" href="bgp__fsm_8c.html#a276e1b5f94212b4438ec33a431a2fbce">bgp_reconnect</a>, <a class="code" href="bgpd_8h.html#a58672521fe155cead3bd1f0653be62ee">Connect</a>},   <span class="comment">/* ConnectRetry_timer_expired   */</span>
<a name="l00943"></a>00943     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* Hold_Timer_expired           */</span>
<a name="l00944"></a>00944     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* KeepAlive_timer_expired      */</span>
<a name="l00945"></a>00945     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* Receive_OPEN_message         */</span>
<a name="l00946"></a>00946     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* Receive_KEEPALIVE_message    */</span>
<a name="l00947"></a>00947     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* Receive_UPDATE_message       */</span>
<a name="l00948"></a>00948     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,    <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* Receive_NOTIFICATION_message */</span>
<a name="l00949"></a>00949     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},         <span class="comment">/* Clearing_Completed           */</span>
<a name="l00950"></a>00950   },
<a name="l00951"></a>00951   {
<a name="l00952"></a>00952     <span class="comment">/* Active, */</span>
<a name="l00953"></a>00953     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#a3e4aba4f7d3a690fdce5d1fe31156421">Active</a>},  <span class="comment">/* BGP_Start                    */</span>
<a name="l00954"></a>00954     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,    <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* BGP_Stop                     */</span>
<a name="l00955"></a>00955     {<a class="code" href="bgp__fsm_8c.html#a52ed36fb0e6488b293fea56eec30c725">bgp_connect_success</a>, <a class="code" href="bgpd_8h.html#a1873a46d77babce8de80c71ce1624718">OpenSent</a>}, <span class="comment">/* TCP_connection_open          */</span>
<a name="l00956"></a>00956     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,    <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* TCP_connection_closed        */</span>
<a name="l00957"></a>00957     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#a3e4aba4f7d3a690fdce5d1fe31156421">Active</a>},  <span class="comment">/* TCP_connection_open_failed   */</span>
<a name="l00958"></a>00958     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* TCP_fatal_error              */</span>
<a name="l00959"></a>00959     {<a class="code" href="bgp__fsm_8c.html#aa37215b69bb5e93cc41137bd278a9c9b">bgp_start</a>,   <a class="code" href="bgpd_8h.html#a58672521fe155cead3bd1f0653be62ee">Connect</a>}, <span class="comment">/* ConnectRetry_timer_expired   */</span>
<a name="l00960"></a>00960     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* Hold_Timer_expired           */</span>
<a name="l00961"></a>00961     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* KeepAlive_timer_expired      */</span>
<a name="l00962"></a>00962     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* Receive_OPEN_message         */</span>
<a name="l00963"></a>00963     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* Receive_KEEPALIVE_message    */</span>
<a name="l00964"></a>00964     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* Receive_UPDATE_message       */</span>
<a name="l00965"></a>00965     {<a class="code" href="bgp__fsm_8c.html#a4de2dbc91c9ad88b682235e96971d05b">bgp_stop_with_error</a>, <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>}, <span class="comment">/* Receive_NOTIFICATION_message */</span>
<a name="l00966"></a>00966     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>, <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},         <span class="comment">/* Clearing_Completed           */</span>
<a name="l00967"></a>00967   },
<a name="l00968"></a>00968   {
<a name="l00969"></a>00969     <span class="comment">/* OpenSent, */</span>
<a name="l00970"></a>00970     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#a1873a46d77babce8de80c71ce1624718">OpenSent</a>},    <span class="comment">/* BGP_Start                    */</span>
<a name="l00971"></a>00971     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,    <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* BGP_Stop                     */</span>
<a name="l00972"></a>00972     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,    <a class="code" href="bgpd_8h.html#a3e4aba4f7d3a690fdce5d1fe31156421">Active</a>},  <span class="comment">/* TCP_connection_open          */</span>
<a name="l00973"></a>00973     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,    <a class="code" href="bgpd_8h.html#a3e4aba4f7d3a690fdce5d1fe31156421">Active</a>},  <span class="comment">/* TCP_connection_closed        */</span>
<a name="l00974"></a>00974     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,    <a class="code" href="bgpd_8h.html#a3e4aba4f7d3a690fdce5d1fe31156421">Active</a>},  <span class="comment">/* TCP_connection_open_failed   */</span>
<a name="l00975"></a>00975     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,    <a class="code" href="bgpd_8h.html#a3e4aba4f7d3a690fdce5d1fe31156421">Active</a>},  <span class="comment">/* TCP_fatal_error              */</span>
<a name="l00976"></a>00976     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* ConnectRetry_timer_expired   */</span>
<a name="l00977"></a>00977     {<a class="code" href="bgp__fsm_8c.html#af6db30df036113a576bb80478f2ee625">bgp_fsm_holdtime_expire</a>, <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* Hold_Timer_expired           */</span>
<a name="l00978"></a>00978     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* KeepAlive_timer_expired      */</span>
<a name="l00979"></a>00979     {<a class="code" href="bgp__fsm_8c.html#a1c8b28ef45c18a5b325ae627b5838da5">bgp_fsm_open</a>,    <a class="code" href="bgpd_8h.html#a0bf5b4ab03c60ff4c23c94a1d683b0b9">OpenConfirm</a>}, <span class="comment">/* Receive_OPEN_message         */</span>
<a name="l00980"></a>00980     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* Receive_KEEPALIVE_message    */</span>
<a name="l00981"></a>00981     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* Receive_UPDATE_message       */</span>
<a name="l00982"></a>00982     {<a class="code" href="bgp__fsm_8c.html#a4de2dbc91c9ad88b682235e96971d05b">bgp_stop_with_error</a>, <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>}, <span class="comment">/* Receive_NOTIFICATION_message */</span>
<a name="l00983"></a>00983     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>, <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},         <span class="comment">/* Clearing_Completed           */</span>
<a name="l00984"></a>00984   },
<a name="l00985"></a>00985   {
<a name="l00986"></a>00986     <span class="comment">/* OpenConfirm, */</span>
<a name="l00987"></a>00987     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#a0bf5b4ab03c60ff4c23c94a1d683b0b9">OpenConfirm</a>}, <span class="comment">/* BGP_Start                    */</span>
<a name="l00988"></a>00988     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,    <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* BGP_Stop                     */</span>
<a name="l00989"></a>00989     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,    <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* TCP_connection_open          */</span>
<a name="l00990"></a>00990     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,    <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* TCP_connection_closed        */</span>
<a name="l00991"></a>00991     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,    <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* TCP_connection_open_failed   */</span>
<a name="l00992"></a>00992     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,    <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* TCP_fatal_error              */</span>
<a name="l00993"></a>00993     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* ConnectRetry_timer_expired   */</span>
<a name="l00994"></a>00994     {<a class="code" href="bgp__fsm_8c.html#af6db30df036113a576bb80478f2ee625">bgp_fsm_holdtime_expire</a>, <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* Hold_Timer_expired           */</span>
<a name="l00995"></a>00995     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#a0bf5b4ab03c60ff4c23c94a1d683b0b9">OpenConfirm</a>}, <span class="comment">/* KeepAlive_timer_expired      */</span>
<a name="l00996"></a>00996     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* Receive_OPEN_message         */</span>
<a name="l00997"></a>00997     {<a class="code" href="bgp__fsm_8c.html#ab723d29ef85668237eaf5a71ca16a709">bgp_establish</a>, <a class="code" href="bgpd_8h.html#aa87809ec7dea97b0e970e98ae6c181ea">Established</a>}, <span class="comment">/* Receive_KEEPALIVE_message    */</span>
<a name="l00998"></a>00998     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},    <span class="comment">/* Receive_UPDATE_message       */</span>
<a name="l00999"></a>00999     {<a class="code" href="bgp__fsm_8c.html#a4de2dbc91c9ad88b682235e96971d05b">bgp_stop_with_error</a>, <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>}, <span class="comment">/* Receive_NOTIFICATION_message */</span>
<a name="l01000"></a>01000     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>, <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},         <span class="comment">/* Clearing_Completed           */</span>
<a name="l01001"></a>01001   },
<a name="l01002"></a>01002   {
<a name="l01003"></a>01003     <span class="comment">/* Established, */</span>
<a name="l01004"></a>01004     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,               <a class="code" href="bgpd_8h.html#aa87809ec7dea97b0e970e98ae6c181ea">Established</a>}, <span class="comment">/* BGP_Start                    */</span>
<a name="l01005"></a>01005     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,                    <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>}, <span class="comment">/* BGP_Stop                     */</span>
<a name="l01006"></a>01006     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,                    <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>}, <span class="comment">/* TCP_connection_open          */</span>
<a name="l01007"></a>01007     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,                    <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>}, <span class="comment">/* TCP_connection_closed        */</span>
<a name="l01008"></a>01008     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,                 <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>},   <span class="comment">/* TCP_connection_open_failed   */</span>
<a name="l01009"></a>01009     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,                    <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>}, <span class="comment">/* TCP_fatal_error              */</span>
<a name="l01010"></a>01010     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,                 <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>},   <span class="comment">/* ConnectRetry_timer_expired   */</span>
<a name="l01011"></a>01011     {<a class="code" href="bgp__fsm_8c.html#af6db30df036113a576bb80478f2ee625">bgp_fsm_holdtime_expire</a>,     <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>}, <span class="comment">/* Hold_Timer_expired           */</span>
<a name="l01012"></a>01012     {<a class="code" href="bgp__fsm_8c.html#a2197d009501485aba614c926082d35d3">bgp_fsm_keepalive_expire</a>, <a class="code" href="bgpd_8h.html#aa87809ec7dea97b0e970e98ae6c181ea">Established</a>}, <span class="comment">/* KeepAlive_timer_expired      */</span>
<a name="l01013"></a>01013     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,                    <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>}, <span class="comment">/* Receive_OPEN_message         */</span>
<a name="l01014"></a>01014     {<a class="code" href="bgp__fsm_8c.html#a1890ee2987827600e9e11c7ace44c029">bgp_fsm_keepalive</a>,        <a class="code" href="bgpd_8h.html#aa87809ec7dea97b0e970e98ae6c181ea">Established</a>}, <span class="comment">/* Receive_KEEPALIVE_message    */</span>
<a name="l01015"></a>01015     {<a class="code" href="bgp__fsm_8c.html#acb64630e4113d7112ff13ed0f2ce2c96">bgp_fsm_update</a>,           <a class="code" href="bgpd_8h.html#aa87809ec7dea97b0e970e98ae6c181ea">Established</a>}, <span class="comment">/* Receive_UPDATE_message       */</span>
<a name="l01016"></a>01016     {<a class="code" href="bgp__fsm_8c.html#a4de2dbc91c9ad88b682235e96971d05b">bgp_stop_with_error</a>,         <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>}, <span class="comment">/* Receive_NOTIFICATION_message */</span>
<a name="l01017"></a>01017     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,                      <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>}, <span class="comment">/* Clearing_Completed           */</span>
<a name="l01018"></a>01018   },
<a name="l01019"></a>01019   {
<a name="l01020"></a>01020     <span class="comment">/* Clearing, */</span>
<a name="l01021"></a>01021     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>},    <span class="comment">/* BGP_Start                    */</span>
<a name="l01022"></a>01022     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,          <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>},  <span class="comment">/* BGP_Stop                     */</span>
<a name="l01023"></a>01023     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,          <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>},  <span class="comment">/* TCP_connection_open          */</span>
<a name="l01024"></a>01024     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,          <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>},  <span class="comment">/* TCP_connection_closed        */</span>
<a name="l01025"></a>01025     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,          <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>},  <span class="comment">/* TCP_connection_open_failed   */</span>
<a name="l01026"></a>01026     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,          <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>},  <span class="comment">/* TCP_fatal_error              */</span>
<a name="l01027"></a>01027     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,          <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>},  <span class="comment">/* ConnectRetry_timer_expired   */</span>
<a name="l01028"></a>01028     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,          <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>},  <span class="comment">/* Hold_Timer_expired           */</span>
<a name="l01029"></a>01029     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,          <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>},  <span class="comment">/* KeepAlive_timer_expired      */</span>
<a name="l01030"></a>01030     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,          <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>},  <span class="comment">/* Receive_OPEN_message         */</span>
<a name="l01031"></a>01031     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,          <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>},  <span class="comment">/* Receive_KEEPALIVE_message    */</span>
<a name="l01032"></a>01032     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,          <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>},  <span class="comment">/* Receive_UPDATE_message       */</span>
<a name="l01033"></a>01033     {<a class="code" href="bgp__fsm_8c.html#a70832c80e2f7e40a453d23689818d84a">bgp_stop</a>,          <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>},  <span class="comment">/* Receive_NOTIFICATION_message */</span>
<a name="l01034"></a>01034     {<a class="code" href="bgp__fsm_8c.html#a1529ace83c11c70e885748a7d5cef369">bgp_clearing_completed</a>,    <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>},      <span class="comment">/* Clearing_Completed           */</span>
<a name="l01035"></a>01035   },
<a name="l01036"></a>01036   {
<a name="l01037"></a>01037     <span class="comment">/* Deleted, */</span>
<a name="l01038"></a>01038     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#a25915a470516b826a1f075280e8a3941">Deleted</a>}, <span class="comment">/* BGP_Start                    */</span>
<a name="l01039"></a>01039     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#a25915a470516b826a1f075280e8a3941">Deleted</a>}, <span class="comment">/* BGP_Stop                     */</span>
<a name="l01040"></a>01040     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#a25915a470516b826a1f075280e8a3941">Deleted</a>}, <span class="comment">/* TCP_connection_open          */</span>
<a name="l01041"></a>01041     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#a25915a470516b826a1f075280e8a3941">Deleted</a>}, <span class="comment">/* TCP_connection_closed        */</span>
<a name="l01042"></a>01042     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#a25915a470516b826a1f075280e8a3941">Deleted</a>}, <span class="comment">/* TCP_connection_open_failed   */</span>
<a name="l01043"></a>01043     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#a25915a470516b826a1f075280e8a3941">Deleted</a>}, <span class="comment">/* TCP_fatal_error              */</span>
<a name="l01044"></a>01044     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#a25915a470516b826a1f075280e8a3941">Deleted</a>}, <span class="comment">/* ConnectRetry_timer_expired   */</span>
<a name="l01045"></a>01045     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#a25915a470516b826a1f075280e8a3941">Deleted</a>}, <span class="comment">/* Hold_Timer_expired           */</span>
<a name="l01046"></a>01046     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#a25915a470516b826a1f075280e8a3941">Deleted</a>}, <span class="comment">/* KeepAlive_timer_expired      */</span>
<a name="l01047"></a>01047     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#a25915a470516b826a1f075280e8a3941">Deleted</a>}, <span class="comment">/* Receive_OPEN_message         */</span>
<a name="l01048"></a>01048     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#a25915a470516b826a1f075280e8a3941">Deleted</a>}, <span class="comment">/* Receive_KEEPALIVE_message    */</span>
<a name="l01049"></a>01049     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#a25915a470516b826a1f075280e8a3941">Deleted</a>}, <span class="comment">/* Receive_UPDATE_message       */</span>
<a name="l01050"></a>01050     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#a25915a470516b826a1f075280e8a3941">Deleted</a>}, <span class="comment">/* Receive_NOTIFICATION_message */</span>
<a name="l01051"></a>01051     {<a class="code" href="bgp__fsm_8c.html#ad355fa89ae4a521cc69c3cf30dfbb2b2">bgp_ignore</a>,  <a class="code" href="bgpd_8h.html#a25915a470516b826a1f075280e8a3941">Deleted</a>}, <span class="comment">/* Clearing_Completed           */</span>
<a name="l01052"></a>01052   },
<a name="l01053"></a>01053 };
<a name="l01054"></a>01054 
<a name="l01055"></a><a class="code" href="bgp__fsm_8c.html#a4a8b0fec5e2e678cd1c5824ab4662ce6">01055</a> <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="bgp__fsm_8c.html#a4a8b0fec5e2e678cd1c5824ab4662ce6">bgp_event_str</a>[] =
<a name="l01056"></a>01056 {
<a name="l01057"></a>01057   <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>,
<a name="l01058"></a>01058   <span class="stringliteral">&quot;BGP_Start&quot;</span>,
<a name="l01059"></a>01059   <span class="stringliteral">&quot;BGP_Stop&quot;</span>,
<a name="l01060"></a>01060   <span class="stringliteral">&quot;TCP_connection_open&quot;</span>,
<a name="l01061"></a>01061   <span class="stringliteral">&quot;TCP_connection_closed&quot;</span>,
<a name="l01062"></a>01062   <span class="stringliteral">&quot;TCP_connection_open_failed&quot;</span>,
<a name="l01063"></a>01063   <span class="stringliteral">&quot;TCP_fatal_error&quot;</span>,
<a name="l01064"></a>01064   <span class="stringliteral">&quot;ConnectRetry_timer_expired&quot;</span>,
<a name="l01065"></a>01065   <span class="stringliteral">&quot;Hold_Timer_expired&quot;</span>,
<a name="l01066"></a>01066   <span class="stringliteral">&quot;KeepAlive_timer_expired&quot;</span>,
<a name="l01067"></a>01067   <span class="stringliteral">&quot;Receive_OPEN_message&quot;</span>,
<a name="l01068"></a>01068   <span class="stringliteral">&quot;Receive_KEEPALIVE_message&quot;</span>,
<a name="l01069"></a>01069   <span class="stringliteral">&quot;Receive_UPDATE_message&quot;</span>,
<a name="l01070"></a>01070   <span class="stringliteral">&quot;Receive_NOTIFICATION_message&quot;</span>,
<a name="l01071"></a>01071   <span class="stringliteral">&quot;Clearing_Completed&quot;</span>,
<a name="l01072"></a>01072 };
<a name="l01073"></a>01073 
<a name="l01074"></a>01074 <span class="comment">/* Execute event process. */</span>
<a name="l01075"></a>01075 <span class="keywordtype">int</span>
<a name="l01076"></a><a class="code" href="bgp__fsm_8h.html#a0ca676929248063979d5b120114cbccd">01076</a> <a class="code" href="bgp__fsm_8c.html#a0ca676929248063979d5b120114cbccd">bgp_event</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l01077"></a>01077 {
<a name="l01078"></a>01078   <span class="keywordtype">int</span> ret = 0;
<a name="l01079"></a>01079   <span class="keywordtype">int</span> <a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a>;
<a name="l01080"></a>01080   <span class="keywordtype">int</span> next;
<a name="l01081"></a>01081   <span class="keyword">struct </span><a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>;
<a name="l01082"></a>01082 
<a name="l01083"></a>01083   peer = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l01084"></a>01084   <span class="keyword">event</span> = <a class="code" href="thread_8h.html#a88d7c483cad15baac709fac747480a11">THREAD_VAL</a> (thread);
<a name="l01085"></a>01085 
<a name="l01086"></a>01086   <span class="comment">/* Logging this event. */</span>
<a name="l01087"></a>01087   next = <a class="code" href="bgp__fsm_8c.html#aa80c210a6930b131524d9462e32ccad4">FSM</a> [peer-&gt;<a class="code" href="structpeer.html#ae39d16f69d65fec0f4f1908b4a33e6c6">status</a> -1][<span class="keyword">event</span> - 1].next_state;
<a name="l01088"></a>01088 
<a name="l01089"></a>01089   <span class="keywordflow">if</span> (<a class="code" href="bgp__debug_8h.html#a3652951eb4451c498ae4be9890d4b7a4">BGP_DEBUG</a> (fsm, <a class="code" href="bgp__fsm_8c.html#aa80c210a6930b131524d9462e32ccad4">FSM</a>) &amp;&amp; peer-&gt;<a class="code" href="structpeer.html#ae39d16f69d65fec0f4f1908b4a33e6c6">status</a> != next)
<a name="l01090"></a>01090     <a class="code" href="log_8h.html#a901efa2487b25c3a74846a52de919565">plog_debug</a> (peer-&gt;<a class="code" href="structpeer.html#a8042cd53718885196f47ee66b471ec3d">log</a>, <span class="stringliteral">&quot;%s [FSM] %s (%s-&gt;%s)&quot;</span>, peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>, 
<a name="l01091"></a>01091            <a class="code" href="bgp__fsm_8c.html#a4a8b0fec5e2e678cd1c5824ab4662ce6">bgp_event_str</a>[event],
<a name="l01092"></a>01092            <a class="code" href="log_8h.html#a3a4b1cad85aa6752f39580944e24a868">LOOKUP</a> (<a class="code" href="bgp__debug_8c.html#adfa19d3216f6254be62df3c23e338ad9">bgp_status_msg</a>, peer-&gt;<a class="code" href="structpeer.html#ae39d16f69d65fec0f4f1908b4a33e6c6">status</a>),
<a name="l01093"></a>01093            <a class="code" href="log_8h.html#a3a4b1cad85aa6752f39580944e24a868">LOOKUP</a> (<a class="code" href="bgp__debug_8c.html#adfa19d3216f6254be62df3c23e338ad9">bgp_status_msg</a>, next));
<a name="l01094"></a>01094 
<a name="l01095"></a>01095   <span class="comment">/* Call function. */</span>
<a name="l01096"></a>01096   <span class="keywordflow">if</span> (<a class="code" href="bgp__fsm_8c.html#aa80c210a6930b131524d9462e32ccad4">FSM</a> [peer-&gt;<a class="code" href="structpeer.html#ae39d16f69d65fec0f4f1908b4a33e6c6">status</a> -1][event - 1].func)
<a name="l01097"></a>01097     ret = (*(<a class="code" href="bgp__fsm_8c.html#aa80c210a6930b131524d9462e32ccad4">FSM</a> [peer-&gt;<a class="code" href="structpeer.html#ae39d16f69d65fec0f4f1908b4a33e6c6">status</a> - 1][<span class="keyword">event</span> - 1].func))(peer);
<a name="l01098"></a>01098 
<a name="l01099"></a>01099   <span class="comment">/* When function do not want proceed next job return -1. */</span>
<a name="l01100"></a>01100   <span class="keywordflow">if</span> (ret &gt;= 0)
<a name="l01101"></a>01101     {
<a name="l01102"></a>01102       <span class="comment">/* If status is changed. */</span>
<a name="l01103"></a>01103       <span class="keywordflow">if</span> (next != peer-&gt;<a class="code" href="structpeer.html#ae39d16f69d65fec0f4f1908b4a33e6c6">status</a>)
<a name="l01104"></a>01104         <a class="code" href="bgp__fsm_8c.html#ae5bbbc9f4290574b72885050744741fd">bgp_fsm_change_status</a> (peer, next);
<a name="l01105"></a>01105       
<a name="l01106"></a>01106       <span class="comment">/* Make sure timer is set. */</span>
<a name="l01107"></a>01107       <a class="code" href="bgp__fsm_8c.html#a0dae67b35f2ffb6d6e7f9b1a6684e0aa">bgp_timer_set</a> (peer);
<a name="l01108"></a>01108     }
<a name="l01109"></a>01109   
<a name="l01110"></a>01110   <span class="keywordflow">return</span> ret;
<a name="l01111"></a>01111 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="bgp__fsm_8c.html">bgp_fsm.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:02 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
