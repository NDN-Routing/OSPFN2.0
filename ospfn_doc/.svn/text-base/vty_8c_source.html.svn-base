<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: lib/vty.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('vty_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">lib/vty.c</div>  </div>
</div>
<div class="contents">
<a href="vty_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * Virtual terminal [aka TeletYpe] interface routine.</span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 1997, 98 Kunihiro Ishiguro</span>
<a name="l00004"></a>00004 <span class="comment"> *</span>
<a name="l00005"></a>00005 <span class="comment"> * This file is part of GNU Zebra.</span>
<a name="l00006"></a>00006 <span class="comment"> *</span>
<a name="l00007"></a>00007 <span class="comment"> * GNU Zebra is free software; you can redistribute it and/or modify it</span>
<a name="l00008"></a>00008 <span class="comment"> * under the terms of the GNU General Public License as published by the</span>
<a name="l00009"></a>00009 <span class="comment"> * Free Software Foundation; either version 2, or (at your option) any</span>
<a name="l00010"></a>00010 <span class="comment"> * later version.</span>
<a name="l00011"></a>00011 <span class="comment"> *</span>
<a name="l00012"></a>00012 <span class="comment"> * GNU Zebra is distributed in the hope that it will be useful, but</span>
<a name="l00013"></a>00013 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00014"></a>00014 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00015"></a>00015 <span class="comment"> * General Public License for more details.</span>
<a name="l00016"></a>00016 <span class="comment"> *</span>
<a name="l00017"></a>00017 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00018"></a>00018 <span class="comment"> * along with GNU Zebra; see the file COPYING.  If not, write to the Free</span>
<a name="l00019"></a>00019 <span class="comment"> * Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA</span>
<a name="l00020"></a>00020 <span class="comment"> * 02111-1307, USA.  </span>
<a name="l00021"></a>00021 <span class="comment"> */</span>
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;<a class="code" href="zebra_8h.html">zebra.h</a>&gt;</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="linklist_8h.html">linklist.h</a>&quot;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="thread_8h.html">thread.h</a>&quot;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="buffer_8h.html">buffer.h</a>&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;<a class="code" href="version_8h.html">lib/version.h</a>&gt;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="command_8h.html">command.h</a>&quot;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="sockunion_8h.html">sockunion.h</a>&quot;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &quot;<a class="code" href="memory_8h.html">memory.h</a>&quot;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="str_8h.html">str.h</a>&quot;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &quot;<a class="code" href="log_8h.html">log.h</a>&quot;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &quot;<a class="code" href="prefix_8h.html">prefix.h</a>&quot;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &quot;<a class="code" href="filter_8h.html">filter.h</a>&quot;</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include &quot;<a class="code" href="vty_8h.html">vty.h</a>&quot;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#include &quot;<a class="code" href="privs_8h.html">privs.h</a>&quot;</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include &quot;<a class="code" href="network_8h.html">network.h</a>&quot;</span>
<a name="l00039"></a>00039 
<a name="l00040"></a>00040 <span class="preprocessor">#include &lt;arpa/telnet.h&gt;</span>
<a name="l00041"></a>00041 
<a name="l00042"></a>00042 <span class="comment">/* Vty events */</span>
<a name="l00043"></a><a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">00043</a> <span class="keyword">enum</span> <span class="keyword">event</span> 
<a name="l00044"></a>00044 {
<a name="l00045"></a><a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea8fd18ac65705a12e09a38d18e47d12ec">00045</a>   <a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea8fd18ac65705a12e09a38d18e47d12ec">VTY_SERV</a>,
<a name="l00046"></a><a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea9ed3db9f85ae6bdc30382d62bc01a807">00046</a>   <a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea9ed3db9f85ae6bdc30382d62bc01a807">VTY_READ</a>,
<a name="l00047"></a><a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea73e4d70c7cc9c2560723e639332d7f2d">00047</a>   <a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea73e4d70c7cc9c2560723e639332d7f2d">VTY_WRITE</a>,
<a name="l00048"></a><a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9eada5cbc98f077a6a603d7c200d654042c">00048</a>   <a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9eada5cbc98f077a6a603d7c200d654042c">VTY_TIMEOUT_RESET</a>,
<a name="l00049"></a>00049 <span class="preprocessor">#ifdef VTYSH</span>
<a name="l00050"></a>00050 <span class="preprocessor"></span>  VTYSH_SERV,
<a name="l00051"></a>00051   VTYSH_READ,
<a name="l00052"></a>00052   VTYSH_WRITE
<a name="l00053"></a>00053 <span class="preprocessor">#endif </span><span class="comment">/* VTYSH */</span>
<a name="l00054"></a>00054 };
<a name="l00055"></a>00055 
<a name="l00056"></a>00056 <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<span class="keyword">enum</span> <a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a>, <span class="keywordtype">int</span>, <span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *);
<a name="l00057"></a>00057 
<a name="l00058"></a>00058 <span class="comment">/* Extern host structure from command.c */</span>
<a name="l00059"></a>00059 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structhost.html">host</a> <a class="code" href="structhost.html">host</a>;
<a name="l00060"></a>00060 
<a name="l00061"></a>00061 <span class="comment">/* Vector which store each vty structure. */</span>
<a name="l00062"></a><a class="code" href="vty_8c.html#aada8117b2e5d72dcea3f29da3366ce4b">00062</a> <span class="keyword">static</span> <a class="code" href="struct__vector.html">vector</a> <a class="code" href="vty_8c.html#aada8117b2e5d72dcea3f29da3366ce4b">vtyvec</a>;
<a name="l00063"></a>00063 
<a name="l00064"></a>00064 <span class="comment">/* Vty timeout value. */</span>
<a name="l00065"></a><a class="code" href="vty_8c.html#a9dc870017884136998187f770ec7851c">00065</a> <span class="keyword">static</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="vty_8c.html#a9dc870017884136998187f770ec7851c">vty_timeout_val</a> = <a class="code" href="vty_8h.html#a03e48199ba963901e8a24ebc553c4a64">VTY_TIMEOUT_DEFAULT</a>;
<a name="l00066"></a>00066 
<a name="l00067"></a>00067 <span class="comment">/* Vty access-class command */</span>
<a name="l00068"></a><a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">00068</a> <span class="keyword">static</span> <span class="keywordtype">char</span> *<a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00069"></a>00069 
<a name="l00070"></a>00070 <span class="comment">/* Vty access-calss for IPv6. */</span>
<a name="l00071"></a><a class="code" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">00071</a> <span class="keyword">static</span> <span class="keywordtype">char</span> *<a class="code" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00072"></a>00072 
<a name="l00073"></a>00073 <span class="comment">/* VTY server thread. */</span>
<a name="l00074"></a><a class="code" href="vty_8c.html#a794b894c87fe19a07c303a584f3dd454">00074</a> <a class="code" href="struct__vector.html">vector</a> <a class="code" href="vty_8c.html#a794b894c87fe19a07c303a584f3dd454">Vvty_serv_thread</a>;
<a name="l00075"></a>00075 
<a name="l00076"></a>00076 <span class="comment">/* Current directory. */</span>
<a name="l00077"></a><a class="code" href="vty_8c.html#aa5e6e7a16dd20bf5e749f0d0bd403f33">00077</a> <span class="keywordtype">char</span> *<a class="code" href="vty_8c.html#aa5e6e7a16dd20bf5e749f0d0bd403f33">vty_cwd</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00078"></a>00078 
<a name="l00079"></a>00079 <span class="comment">/* Configure lock. */</span>
<a name="l00080"></a><a class="code" href="vty_8c.html#a472109ecd35a2f4a2953e6ca76a5824d">00080</a> <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="vty_8c.html#a472109ecd35a2f4a2953e6ca76a5824d">vty_config</a>;
<a name="l00081"></a>00081 
<a name="l00082"></a>00082 <span class="comment">/* Login password check. */</span>
<a name="l00083"></a><a class="code" href="vty_8c.html#a27b0172ccf3d40051140bb3a04607711">00083</a> <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="vty_8c.html#a27b0172ccf3d40051140bb3a04607711">no_password_check</a> = 0;
<a name="l00084"></a>00084 
<a name="l00085"></a>00085 <span class="comment">/* Restrict unauthenticated logins? */</span>
<a name="l00086"></a><a class="code" href="vty_8c.html#a4af47f7385ea1ddf6492f7bfcb37cd7e">00086</a> <span class="keyword">static</span> <span class="keyword">const</span> u_char <a class="code" href="vty_8c.html#a4af47f7385ea1ddf6492f7bfcb37cd7e">restricted_mode_default</a> = 0;
<a name="l00087"></a><a class="code" href="vty_8c.html#a78ee728656e5a1528d1b45e94acc23a6">00087</a> <span class="keyword">static</span> u_char <a class="code" href="vty_8c.html#a78ee728656e5a1528d1b45e94acc23a6">restricted_mode</a> = 0;
<a name="l00088"></a>00088 
<a name="l00089"></a>00089 <span class="comment">/* Integrated configuration file path */</span>
<a name="l00090"></a><a class="code" href="vty_8h.html#a1374f502412fa0cf9bac27528c3739f6">00090</a> <span class="keywordtype">char</span> <a class="code" href="vty_8c.html#a1374f502412fa0cf9bac27528c3739f6">integrate_default</a>[] = SYSCONFDIR <a class="code" href="vty_8h.html#ac6bd16d4b37139e6d642d4483a5b8777">INTEGRATE_DEFAULT_CONFIG</a>;
<a name="l00091"></a>00091 
<a name="l00092"></a>00092 
<a name="l00093"></a>00093 <span class="comment">/* VTY standard output function. */</span>
<a name="l00094"></a>00094 <span class="keywordtype">int</span>
<a name="l00095"></a><a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">00095</a> <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>, <span class="keyword">const</span> <span class="keywordtype">char</span> *format, ...)
<a name="l00096"></a>00096 {
<a name="l00097"></a>00097   va_list <a class="code" href="spgrid_8c.html#a2c8d3fa6d7117d15dd5c2871ac548ec4">args</a>;
<a name="l00098"></a>00098   <span class="keywordtype">int</span> len = 0;
<a name="l00099"></a>00099   <span class="keywordtype">int</span> size = 1024;
<a name="l00100"></a>00100   <span class="keywordtype">char</span> buf[1024];
<a name="l00101"></a>00101   <span class="keywordtype">char</span> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00102"></a>00102 
<a name="l00103"></a>00103   <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#a34f77731bee7dcf980c6b344a9fff210">vty_shell</a> (vty))
<a name="l00104"></a>00104     {
<a name="l00105"></a>00105       va_start (args, format);
<a name="l00106"></a>00106       vprintf (format, args);
<a name="l00107"></a>00107       va_end (args);
<a name="l00108"></a>00108     }
<a name="l00109"></a>00109   <span class="keywordflow">else</span>
<a name="l00110"></a>00110     {
<a name="l00111"></a>00111       <span class="comment">/* Try to write to initial buffer.  */</span>
<a name="l00112"></a>00112       va_start (args, format);
<a name="l00113"></a>00113       len = <a class="code" href="str_8h.html#a07d26024bfbdf98fee856c8a28e07a8e">vsnprintf</a> (buf, <span class="keyword">sizeof</span> buf, format, args);
<a name="l00114"></a>00114       va_end (args);
<a name="l00115"></a>00115 
<a name="l00116"></a>00116       <span class="comment">/* Initial buffer is not enough.  */</span>
<a name="l00117"></a>00117       <span class="keywordflow">if</span> (len &lt; 0 || len &gt;= size)
<a name="l00118"></a>00118     {
<a name="l00119"></a>00119       <span class="keywordflow">while</span> (1)
<a name="l00120"></a>00120         {
<a name="l00121"></a>00121           <span class="keywordflow">if</span> (len &gt; -1)
<a name="l00122"></a>00122         size = len + 1;
<a name="l00123"></a>00123           <span class="keywordflow">else</span>
<a name="l00124"></a>00124         size = size * 2;
<a name="l00125"></a>00125 
<a name="l00126"></a>00126           p = <a class="code" href="memory_8h.html#ad9ab7c99da79ca966328c35e9185cc57">XREALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba26401e48059a77e19a36122090effb67">MTYPE_VTY_OUT_BUF</a>, p, size);
<a name="l00127"></a>00127           <span class="keywordflow">if</span> (! p)
<a name="l00128"></a>00128         <span class="keywordflow">return</span> -1;
<a name="l00129"></a>00129 
<a name="l00130"></a>00130           va_start (args, format);
<a name="l00131"></a>00131           len = <a class="code" href="str_8h.html#a07d26024bfbdf98fee856c8a28e07a8e">vsnprintf</a> (p, size, format, args);
<a name="l00132"></a>00132           va_end (args);
<a name="l00133"></a>00133 
<a name="l00134"></a>00134           <span class="keywordflow">if</span> (len &gt; -1 &amp;&amp; len &lt; size)
<a name="l00135"></a>00135         <span class="keywordflow">break</span>;
<a name="l00136"></a>00136         }
<a name="l00137"></a>00137     }
<a name="l00138"></a>00138 
<a name="l00139"></a>00139       <span class="comment">/* When initial buffer is enough to store all output.  */</span>
<a name="l00140"></a>00140       <span class="keywordflow">if</span> (! p)
<a name="l00141"></a>00141     p = buf;
<a name="l00142"></a>00142 
<a name="l00143"></a>00143       <span class="comment">/* Pointer p must point out buffer. */</span>
<a name="l00144"></a>00144       <a class="code" href="buffer_8c.html#a6150096c2eaae19e636d2742c3df5b75">buffer_put</a> (vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>, (u_char *) p, len);
<a name="l00145"></a>00145 
<a name="l00146"></a>00146       <span class="comment">/* If p is not different with buf, it is allocated buffer.  */</span>
<a name="l00147"></a>00147       <span class="keywordflow">if</span> (p != buf)
<a name="l00148"></a>00148     <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba26401e48059a77e19a36122090effb67">MTYPE_VTY_OUT_BUF</a>, p);
<a name="l00149"></a>00149     }
<a name="l00150"></a>00150 
<a name="l00151"></a>00151   <span class="keywordflow">return</span> len;
<a name="l00152"></a>00152 }
<a name="l00153"></a>00153 
<a name="l00154"></a>00154 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00155"></a><a class="code" href="vty_8c.html#a1c349ce48acd7ad68f569644292d38f1">00155</a> <a class="code" href="vty_8c.html#a1c349ce48acd7ad68f569644292d38f1">vty_log_out</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>, <span class="keyword">const</span> <span class="keywordtype">char</span> *level, <span class="keyword">const</span> <span class="keywordtype">char</span> *proto_str,
<a name="l00156"></a>00156          <span class="keyword">const</span> <span class="keywordtype">char</span> *format, <span class="keyword">struct</span> <a class="code" href="structtimestamp__control.html">timestamp_control</a> *ctl, va_list va)
<a name="l00157"></a>00157 {
<a name="l00158"></a>00158   <span class="keywordtype">int</span> ret;
<a name="l00159"></a>00159   <span class="keywordtype">int</span> len;
<a name="l00160"></a>00160   <span class="keywordtype">char</span> buf[1024];
<a name="l00161"></a>00161 
<a name="l00162"></a>00162   <span class="keywordflow">if</span> (!ctl-&gt;<a class="code" href="structtimestamp__control.html#a1691f5b39846bf86d4b5f36fdfdf935e">already_rendered</a>)
<a name="l00163"></a>00163     {
<a name="l00164"></a>00164       ctl-&gt;<a class="code" href="structtimestamp__control.html#a6b830b1c0ee6418d148039bfc1ddc8bc">len</a> = <a class="code" href="log_8c.html#aa70601e0152987332545566abf72b090">quagga_timestamp</a>(ctl-&gt;<a class="code" href="structtimestamp__control.html#a58aa149c5e76ec58ce892de831fd95e9">precision</a>, ctl-&gt;<a class="code" href="structtimestamp__control.html#aab2bcb84e3ac17da33c7ee1df865db6d">buf</a>, <span class="keyword">sizeof</span>(ctl-&gt;<a class="code" href="structtimestamp__control.html#aab2bcb84e3ac17da33c7ee1df865db6d">buf</a>));
<a name="l00165"></a>00165       ctl-&gt;<a class="code" href="structtimestamp__control.html#a1691f5b39846bf86d4b5f36fdfdf935e">already_rendered</a> = 1;
<a name="l00166"></a>00166     }
<a name="l00167"></a>00167   <span class="keywordflow">if</span> (ctl-&gt;<a class="code" href="structtimestamp__control.html#a6b830b1c0ee6418d148039bfc1ddc8bc">len</a>+1 &gt;= <span class="keyword">sizeof</span>(buf))
<a name="l00168"></a>00168     <span class="keywordflow">return</span> -1;
<a name="l00169"></a>00169   <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a>(buf, ctl-&gt;<a class="code" href="structtimestamp__control.html#aab2bcb84e3ac17da33c7ee1df865db6d">buf</a>, len = ctl-&gt;<a class="code" href="structtimestamp__control.html#a6b830b1c0ee6418d148039bfc1ddc8bc">len</a>);
<a name="l00170"></a>00170   buf[len++] = <span class="charliteral">&#39; &#39;</span>;
<a name="l00171"></a>00171   buf[len] = <span class="charliteral">&#39;\0&#39;</span>;
<a name="l00172"></a>00172 
<a name="l00173"></a>00173   <span class="keywordflow">if</span> (level)
<a name="l00174"></a>00174     ret = <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a>(buf+len, <span class="keyword">sizeof</span>(buf)-len, <span class="stringliteral">&quot;%s: %s: &quot;</span>, level, proto_str);
<a name="l00175"></a>00175   <span class="keywordflow">else</span>
<a name="l00176"></a>00176     ret = <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a>(buf+len, <span class="keyword">sizeof</span>(buf)-len, <span class="stringliteral">&quot;%s: &quot;</span>, proto_str);
<a name="l00177"></a>00177   <span class="keywordflow">if</span> ((ret &lt; 0) || ((<span class="keywordtype">size_t</span>)(len += ret) &gt;= <span class="keyword">sizeof</span>(buf)))
<a name="l00178"></a>00178     <span class="keywordflow">return</span> -1;
<a name="l00179"></a>00179 
<a name="l00180"></a>00180   <span class="keywordflow">if</span> (((ret = <a class="code" href="str_8h.html#a07d26024bfbdf98fee856c8a28e07a8e">vsnprintf</a>(buf+len, <span class="keyword">sizeof</span>(buf)-len, format, va)) &lt; 0) ||
<a name="l00181"></a>00181       ((<span class="keywordtype">size_t</span>)((len += ret)+2) &gt; <span class="keyword">sizeof</span>(buf)))
<a name="l00182"></a>00182     <span class="keywordflow">return</span> -1;
<a name="l00183"></a>00183 
<a name="l00184"></a>00184   buf[len++] = <span class="charliteral">&#39;\r&#39;</span>;
<a name="l00185"></a>00185   buf[len++] = <span class="charliteral">&#39;\n&#39;</span>;
<a name="l00186"></a>00186 
<a name="l00187"></a>00187   <span class="keywordflow">if</span> (write(vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>, buf, len) &lt; 0)
<a name="l00188"></a>00188     {
<a name="l00189"></a>00189       <span class="keywordflow">if</span> (<a class="code" href="network_8h.html#a45b38a31650d3cee8087360351384d9e">ERRNO_IO_RETRY</a>(errno))
<a name="l00190"></a>00190     <span class="comment">/* Kernel buffer is full, probably too much debugging output, so just</span>
<a name="l00191"></a>00191 <span class="comment">       drop the data and ignore. */</span>
<a name="l00192"></a>00192     <span class="keywordflow">return</span> -1;
<a name="l00193"></a>00193       <span class="comment">/* Fatal I/O error. */</span>
<a name="l00194"></a>00194       vty-&gt;<a class="code" href="structvty.html#ace142d1b856ed1776e4a48684222b01f">monitor</a> = 0; <span class="comment">/* disable monitoring to avoid infinite recursion */</span>
<a name="l00195"></a>00195       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;%s: write failed to vty client fd %d, closing: %s&quot;</span>,
<a name="l00196"></a>00196         __func__, vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a>(errno));
<a name="l00197"></a>00197       <a class="code" href="buffer_8c.html#a91ad0ff694ccef1876a3e8d8a3b05ffa">buffer_reset</a>(vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>);
<a name="l00198"></a>00198       <span class="comment">/* cannot call vty_close, because a parent routine may still try</span>
<a name="l00199"></a>00199 <span class="comment">         to access the vty struct */</span>
<a name="l00200"></a>00200       vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> = VTY_CLOSE;
<a name="l00201"></a>00201       shutdown(vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>, SHUT_RDWR);
<a name="l00202"></a>00202       <span class="keywordflow">return</span> -1;
<a name="l00203"></a>00203     }
<a name="l00204"></a>00204   <span class="keywordflow">return</span> 0;
<a name="l00205"></a>00205 }
<a name="l00206"></a>00206 
<a name="l00207"></a>00207 <span class="comment">/* Output current time to the vty. */</span>
<a name="l00208"></a>00208 <span class="keywordtype">void</span>
<a name="l00209"></a><a class="code" href="vty_8h.html#ac4249afc955349b6e9bea3285b703501">00209</a> <a class="code" href="vty_8c.html#ac62e5cb873525019212b99e841899eb3">vty_time_print</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>, <span class="keywordtype">int</span> cr)
<a name="l00210"></a>00210 {
<a name="l00211"></a>00211   <span class="keywordtype">char</span> buf [25];
<a name="l00212"></a>00212   
<a name="l00213"></a>00213   <span class="keywordflow">if</span> (<a class="code" href="log_8c.html#aa70601e0152987332545566abf72b090">quagga_timestamp</a>(0, buf, <span class="keyword">sizeof</span>(buf)) == 0)
<a name="l00214"></a>00214     {
<a name="l00215"></a>00215       <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_INFO, <span class="stringliteral">&quot;quagga_timestamp error&quot;</span>);
<a name="l00216"></a>00216       <span class="keywordflow">return</span>;
<a name="l00217"></a>00217     }
<a name="l00218"></a>00218   <span class="keywordflow">if</span> (cr)
<a name="l00219"></a>00219     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s\n&quot;</span>, buf);
<a name="l00220"></a>00220   <span class="keywordflow">else</span>
<a name="l00221"></a>00221     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s &quot;</span>, buf);
<a name="l00222"></a>00222 
<a name="l00223"></a>00223   <span class="keywordflow">return</span>;
<a name="l00224"></a>00224 }
<a name="l00225"></a>00225 
<a name="l00226"></a>00226 <span class="comment">/* Say hello to vty interface. */</span>
<a name="l00227"></a>00227 <span class="keywordtype">void</span>
<a name="l00228"></a><a class="code" href="vty_8h.html#aaab50d4738f1884d8b3d115b5465b29c">00228</a> <a class="code" href="vty_8c.html#aa2f6866b034e4a3f2e6b9e354ba46d95">vty_hello</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00229"></a>00229 {
<a name="l00230"></a>00230   <span class="keywordflow">if</span> (<a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#aff68c4aa7277dc443ce82ad17135445d">motdfile</a>)
<a name="l00231"></a>00231     {
<a name="l00232"></a>00232       FILE *f;
<a name="l00233"></a>00233       <span class="keywordtype">char</span> buf[4096];
<a name="l00234"></a>00234 
<a name="l00235"></a>00235       f = fopen (<a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#aff68c4aa7277dc443ce82ad17135445d">motdfile</a>, <span class="stringliteral">&quot;r&quot;</span>);
<a name="l00236"></a>00236       <span class="keywordflow">if</span> (f)
<a name="l00237"></a>00237     {
<a name="l00238"></a>00238       <span class="keywordflow">while</span> (fgets (buf, <span class="keyword">sizeof</span> (buf), f))
<a name="l00239"></a>00239         {
<a name="l00240"></a>00240           <span class="keywordtype">char</span> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>;
<a name="l00241"></a>00241           <span class="comment">/* work backwards to ignore trailling isspace() */</span>
<a name="l00242"></a>00242           <span class="keywordflow">for</span> (s = buf + strlen (buf); (s &gt; buf) &amp;&amp; isspace ((<span class="keywordtype">int</span>)*(s - 1));
<a name="l00243"></a>00243            s--);
<a name="l00244"></a>00244           *s = <span class="charliteral">&#39;\0&#39;</span>;
<a name="l00245"></a>00245           <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s%s&quot;</span>, buf, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00246"></a>00246         }
<a name="l00247"></a>00247       fclose (f);
<a name="l00248"></a>00248     }
<a name="l00249"></a>00249       <span class="keywordflow">else</span>
<a name="l00250"></a>00250     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;MOTD file not found%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00251"></a>00251     }
<a name="l00252"></a>00252   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#a9d391f73e2bf946ad6b46f2a6f70e764">motd</a>)
<a name="l00253"></a>00253     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#a9d391f73e2bf946ad6b46f2a6f70e764">motd</a>);
<a name="l00254"></a>00254 }
<a name="l00255"></a>00255 
<a name="l00256"></a>00256 <span class="comment">/* Put out prompt and wait input from user. */</span>
<a name="l00257"></a>00257 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00258"></a><a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">00258</a> <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00259"></a>00259 {
<a name="l00260"></a>00260   <span class="keyword">struct </span>utsname names;
<a name="l00261"></a>00261   <span class="keyword">const</span> <span class="keywordtype">char</span>*<a class="code" href="structhostname.html">hostname</a>;
<a name="l00262"></a>00262 
<a name="l00263"></a>00263   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a918d01c53936e81c45a177b0ceda3eca">type</a> == VTY_TERM)
<a name="l00264"></a>00264     {
<a name="l00265"></a>00265       hostname = <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#ae29a96977a9350ec0d4323ccd38ebc9b">name</a>;
<a name="l00266"></a>00266       <span class="keywordflow">if</span> (!hostname)
<a name="l00267"></a>00267     {
<a name="l00268"></a>00268       uname (&amp;names);
<a name="l00269"></a>00269       hostname = names.nodename;
<a name="l00270"></a>00270     }
<a name="l00271"></a>00271       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <a class="code" href="command_8c.html#afca289ddfb2617c0e1c2d26824bf9ccf">cmd_prompt</a> (vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a>), hostname);
<a name="l00272"></a>00272     }
<a name="l00273"></a>00273 }
<a name="l00274"></a>00274 
<a name="l00275"></a>00275 <span class="comment">/* Send WILL TELOPT_ECHO to remote server. */</span>
<a name="l00276"></a>00276 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00277"></a><a class="code" href="vty_8c.html#a90006000348e50410b5a8040b241d411">00277</a> <a class="code" href="vty_8c.html#a90006000348e50410b5a8040b241d411">vty_will_echo</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00278"></a>00278 {
<a name="l00279"></a>00279   <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> cmd[] = { IAC, WILL, TELOPT_ECHO, <span class="charliteral">&#39;\0&#39;</span> };
<a name="l00280"></a>00280   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, cmd);
<a name="l00281"></a>00281 }
<a name="l00282"></a>00282 
<a name="l00283"></a>00283 <span class="comment">/* Make suppress Go-Ahead telnet option. */</span>
<a name="l00284"></a>00284 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00285"></a><a class="code" href="vty_8c.html#aee3608a98cb407de696ed4595c5b5d8d">00285</a> <a class="code" href="vty_8c.html#aee3608a98cb407de696ed4595c5b5d8d">vty_will_suppress_go_ahead</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00286"></a>00286 {
<a name="l00287"></a>00287   <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> cmd[] = { IAC, WILL, TELOPT_SGA, <span class="charliteral">&#39;\0&#39;</span> };
<a name="l00288"></a>00288   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, cmd);
<a name="l00289"></a>00289 }
<a name="l00290"></a>00290 
<a name="l00291"></a>00291 <span class="comment">/* Make don&#39;t use linemode over telnet. */</span>
<a name="l00292"></a>00292 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00293"></a><a class="code" href="vty_8c.html#a61ebacd84553a2a9ba1012388c8f0f75">00293</a> <a class="code" href="vty_8c.html#a61ebacd84553a2a9ba1012388c8f0f75">vty_dont_linemode</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00294"></a>00294 {
<a name="l00295"></a>00295   <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> cmd[] = { IAC, DONT, TELOPT_LINEMODE, <span class="charliteral">&#39;\0&#39;</span> };
<a name="l00296"></a>00296   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, cmd);
<a name="l00297"></a>00297 }
<a name="l00298"></a>00298 
<a name="l00299"></a>00299 <span class="comment">/* Use window size. */</span>
<a name="l00300"></a>00300 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00301"></a><a class="code" href="vty_8c.html#ada289c68b5d15981676e822080e04b41">00301</a> <a class="code" href="vty_8c.html#ada289c68b5d15981676e822080e04b41">vty_do_window_size</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00302"></a>00302 {
<a name="l00303"></a>00303   <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> cmd[] = { IAC, DO, TELOPT_NAWS, <span class="charliteral">&#39;\0&#39;</span> };
<a name="l00304"></a>00304   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, cmd);
<a name="l00305"></a>00305 }
<a name="l00306"></a>00306 
<a name="l00307"></a>00307 <span class="preprocessor">#if 0 </span><span class="comment">/* Currently not used. */</span>
<a name="l00308"></a>00308 <span class="comment">/* Make don&#39;t use lflow vty interface. */</span>
<a name="l00309"></a>00309 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00310"></a>00310 vty_dont_lflow_ahead (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00311"></a>00311 {
<a name="l00312"></a>00312   <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> cmd[] = { IAC, DONT, TELOPT_LFLOW, <span class="charliteral">&#39;\0&#39;</span> };
<a name="l00313"></a>00313   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, cmd);
<a name="l00314"></a>00314 }
<a name="l00315"></a>00315 <span class="preprocessor">#endif </span><span class="comment">/* 0 */</span>
<a name="l00316"></a>00316 
<a name="l00317"></a>00317 <span class="comment">/* Allocate new vty struct. */</span>
<a name="l00318"></a>00318 <span class="keyword">struct </span><a class="code" href="structvty.html">vty</a> *
<a name="l00319"></a><a class="code" href="vty_8h.html#a70d996016f5ea85b3b554b0415813be5">00319</a> <a class="code" href="vty_8c.html#a5761c76c7eaf421587052c372034cd57">vty_new</a> ()
<a name="l00320"></a>00320 {
<a name="l00321"></a>00321   <span class="keyword">struct </span><a class="code" href="structvty.html">vty</a> *<span class="keyword">new</span> = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba05f7d9e133f49a4c7aaa98a318692c88">MTYPE_VTY</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a>));
<a name="l00322"></a>00322 
<a name="l00323"></a>00323   <span class="keyword">new</span>-&gt;obuf = <a class="code" href="buffer_8c.html#a277b94d1c81d4e5ac2e5c59ede1abed9">buffer_new</a>(0);    <span class="comment">/* Use default buffer size. */</span>
<a name="l00324"></a>00324   <span class="keyword">new</span>-&gt;buf = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba05f7d9e133f49a4c7aaa98a318692c88">MTYPE_VTY</a>, <a class="code" href="vty_8h.html#a2d026199530c8617fbb5e0d89ab6cac1">VTY_BUFSIZ</a>);
<a name="l00325"></a>00325   <span class="keyword">new</span>-&gt;max = <a class="code" href="vty_8h.html#a2d026199530c8617fbb5e0d89ab6cac1">VTY_BUFSIZ</a>;
<a name="l00326"></a>00326 
<a name="l00327"></a>00327   <span class="keywordflow">return</span> <span class="keyword">new</span>;
<a name="l00328"></a>00328 }
<a name="l00329"></a>00329 
<a name="l00330"></a>00330 <span class="comment">/* Authentication of vty */</span>
<a name="l00331"></a>00331 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00332"></a><a class="code" href="vty_8c.html#a819a97da4f2899ac41493be8c6b0e238">00332</a> <a class="code" href="vty_8c.html#a819a97da4f2899ac41493be8c6b0e238">vty_auth</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>, <span class="keywordtype">char</span> *<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>)
<a name="l00333"></a>00333 {
<a name="l00334"></a>00334   <span class="keywordtype">char</span> *passwd = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00335"></a>00335   <span class="keyword">enum</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682">node_type</a> next_node = 0;
<a name="l00336"></a>00336   <span class="keywordtype">int</span> <a class="code" href="structvty.html#a2bbfb0bd919de5d12e7636edbe1e60bd">fail</a>;
<a name="l00337"></a>00337   <span class="keywordtype">char</span> *crypt (<span class="keyword">const</span> <span class="keywordtype">char</span> *, <span class="keyword">const</span> <span class="keywordtype">char</span> *);
<a name="l00338"></a>00338 
<a name="l00339"></a>00339   <span class="keywordflow">switch</span> (vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a>)
<a name="l00340"></a>00340     {
<a name="l00341"></a>00341     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a302e1f38939b1a74bc848007bb70bfdf">AUTH_NODE</a>:
<a name="l00342"></a>00342       <span class="keywordflow">if</span> (<a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#aabaa0ca6772ffc87e7d8b2628de0c009">encrypt</a>)
<a name="l00343"></a>00343     passwd = <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#a8c7b6573685405878afa6bd78fb68a9c">password_encrypt</a>;
<a name="l00344"></a>00344       <span class="keywordflow">else</span>
<a name="l00345"></a>00345     passwd = <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#ad0af28f48e2903d894adc73c3c58469a">password</a>;
<a name="l00346"></a>00346       <span class="keywordflow">if</span> (<a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#af1f270bdc9e34870cc10cf9fe0f5a65e">advanced</a>)
<a name="l00347"></a>00347     next_node = <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#ace72f74a0e8a9de32416e8c5506dbabb">enable</a> ? <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a> : <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>;
<a name="l00348"></a>00348       <span class="keywordflow">else</span>
<a name="l00349"></a>00349     next_node = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>;
<a name="l00350"></a>00350       <span class="keywordflow">break</span>;
<a name="l00351"></a>00351     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a96b74116564789f517eef9284f18b472">AUTH_ENABLE_NODE</a>:
<a name="l00352"></a>00352       <span class="keywordflow">if</span> (<a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#aabaa0ca6772ffc87e7d8b2628de0c009">encrypt</a>)
<a name="l00353"></a>00353     passwd = <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#afba3bc94121be3f66115ba2bec80b7bd">enable_encrypt</a>;
<a name="l00354"></a>00354       <span class="keywordflow">else</span>
<a name="l00355"></a>00355     passwd = <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#ace72f74a0e8a9de32416e8c5506dbabb">enable</a>;
<a name="l00356"></a>00356       next_node = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>;
<a name="l00357"></a>00357       <span class="keywordflow">break</span>;
<a name="l00358"></a>00358     }
<a name="l00359"></a>00359 
<a name="l00360"></a>00360   <span class="keywordflow">if</span> (passwd)
<a name="l00361"></a>00361     {
<a name="l00362"></a>00362       <span class="keywordflow">if</span> (<a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#aabaa0ca6772ffc87e7d8b2628de0c009">encrypt</a>)
<a name="l00363"></a>00363     fail = strcmp (crypt(buf, passwd), passwd);
<a name="l00364"></a>00364       <span class="keywordflow">else</span>
<a name="l00365"></a>00365     fail = strcmp (buf, passwd);
<a name="l00366"></a>00366     }
<a name="l00367"></a>00367   <span class="keywordflow">else</span>
<a name="l00368"></a>00368     fail = 1;
<a name="l00369"></a>00369 
<a name="l00370"></a>00370   <span class="keywordflow">if</span> (! fail)
<a name="l00371"></a>00371     {
<a name="l00372"></a>00372       vty-&gt;<a class="code" href="structvty.html#a2bbfb0bd919de5d12e7636edbe1e60bd">fail</a> = 0;
<a name="l00373"></a>00373       vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = next_node;    <span class="comment">/* Success ! */</span>
<a name="l00374"></a>00374     }
<a name="l00375"></a>00375   <span class="keywordflow">else</span>
<a name="l00376"></a>00376     {
<a name="l00377"></a>00377       vty-&gt;<a class="code" href="structvty.html#a2bbfb0bd919de5d12e7636edbe1e60bd">fail</a>++;
<a name="l00378"></a>00378       <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a2bbfb0bd919de5d12e7636edbe1e60bd">fail</a> &gt;= 3)
<a name="l00379"></a>00379     {
<a name="l00380"></a>00380       <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a302e1f38939b1a74bc848007bb70bfdf">AUTH_NODE</a>)
<a name="l00381"></a>00381         {
<a name="l00382"></a>00382           <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Bad passwords, too many failures!%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00383"></a>00383           vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> = <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6ab568d9eaea4e6aa93ae7fb8a7c65d4cb">VTY_CLOSE</a>;
<a name="l00384"></a>00384         }
<a name="l00385"></a>00385       <span class="keywordflow">else</span>          
<a name="l00386"></a>00386         {
<a name="l00387"></a>00387           <span class="comment">/* AUTH_ENABLE_NODE */</span>
<a name="l00388"></a>00388           vty-&gt;<a class="code" href="structvty.html#a2bbfb0bd919de5d12e7636edbe1e60bd">fail</a> = 0;
<a name="l00389"></a>00389           <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Bad enable passwords, too many failures!%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00390"></a>00390           vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = <a class="code" href="vty_8c.html#a78ee728656e5a1528d1b45e94acc23a6">restricted_mode</a> ? <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acb0c5ada108352e3e869838b0ee04c3b">RESTRICTED_NODE</a> : <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>;
<a name="l00391"></a>00391         }
<a name="l00392"></a>00392     }
<a name="l00393"></a>00393     }
<a name="l00394"></a>00394 }
<a name="l00395"></a>00395 
<a name="l00396"></a>00396 <span class="comment">/* Command execution over the vty interface. */</span>
<a name="l00397"></a>00397 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00398"></a><a class="code" href="vty_8c.html#ad5461715b919e20f130c9f4b586cd42d">00398</a> <a class="code" href="vty_8c.html#ad5461715b919e20f130c9f4b586cd42d">vty_command</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>, <span class="keywordtype">char</span> *<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>)
<a name="l00399"></a>00399 {
<a name="l00400"></a>00400   <span class="keywordtype">int</span> ret;
<a name="l00401"></a>00401   <a class="code" href="struct__vector.html">vector</a> vline;
<a name="l00402"></a>00402   <span class="keyword">const</span> <span class="keywordtype">char</span> *protocolname;
<a name="l00403"></a>00403 
<a name="l00404"></a>00404   <span class="comment">/* Split readline string up into the vector */</span>
<a name="l00405"></a>00405   vline = <a class="code" href="command_8c.html#a968b2f52fc543595fa4ce625f5fdb6a3">cmd_make_strvec</a> (buf);
<a name="l00406"></a>00406 
<a name="l00407"></a>00407   <span class="keywordflow">if</span> (vline == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00408"></a>00408     <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l00409"></a>00409 
<a name="l00410"></a>00410 <span class="preprocessor">#ifdef CONSUMED_TIME_CHECK</span>
<a name="l00411"></a>00411 <span class="preprocessor"></span>  {
<a name="l00412"></a>00412     <a class="code" href="thread_8h.html#ae80bba1eb296573455cd5885ba8a52ad">RUSAGE_T</a> before;
<a name="l00413"></a>00413     <a class="code" href="thread_8h.html#ae80bba1eb296573455cd5885ba8a52ad">RUSAGE_T</a> after;
<a name="l00414"></a>00414     <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> realtime, cputime;
<a name="l00415"></a>00415 
<a name="l00416"></a>00416     <a class="code" href="thread_8h.html#a023e544a82cd098fc592b46066a7fa47">GETRUSAGE</a>(&amp;before);
<a name="l00417"></a>00417 <span class="preprocessor">#endif </span><span class="comment">/* CONSUMED_TIME_CHECK */</span>
<a name="l00418"></a>00418 
<a name="l00419"></a>00419   ret = <a class="code" href="command_8c.html#acf65ad66c233b7722618e8f3725145e0">cmd_execute_command</a> (vline, vty, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0);
<a name="l00420"></a>00420 
<a name="l00421"></a>00421   <span class="comment">/* Get the name of the protocol if any */</span>
<a name="l00422"></a>00422   <span class="keywordflow">if</span> (<a class="code" href="log_8c.html#a69cba84b9cc9c438ad5f5b1379b702b5">zlog_default</a>)
<a name="l00423"></a>00423       protocolname = <a class="code" href="log_8c.html#a104618d1dc8bb7b6b5c36f8969f2a49e">zlog_proto_names</a>[<a class="code" href="log_8c.html#a69cba84b9cc9c438ad5f5b1379b702b5">zlog_default</a>-&gt;<a class="code" href="structzlog.html#acafcb64affec5374e8e4d61fded92812">protocol</a>];
<a name="l00424"></a>00424   <span class="keywordflow">else</span>
<a name="l00425"></a>00425       protocolname = <a class="code" href="log_8c.html#a104618d1dc8bb7b6b5c36f8969f2a49e">zlog_proto_names</a>[<a class="code" href="log_8h.html#a7191b9759b28b288102a2c6dd41e20a3aa158dd67301a680e9877c00efbb01c35">ZLOG_NONE</a>];
<a name="l00426"></a>00426                                                                            
<a name="l00427"></a>00427 <span class="preprocessor">#ifdef CONSUMED_TIME_CHECK</span>
<a name="l00428"></a>00428 <span class="preprocessor"></span>    <a class="code" href="thread_8h.html#a023e544a82cd098fc592b46066a7fa47">GETRUSAGE</a>(&amp;after);
<a name="l00429"></a>00429     <span class="keywordflow">if</span> ((realtime = <a class="code" href="thread_8c.html#ac1c4b7776745c9e3a9c77f136123c753">thread_consumed_time</a>(&amp;after, &amp;before, &amp;cputime)) &gt;
<a name="l00430"></a>00430         CONSUMED_TIME_CHECK)
<a name="l00431"></a>00431       <span class="comment">/* Warn about CPU hog that must be fixed. */</span>
<a name="l00432"></a>00432       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;SLOW COMMAND: command took %lums (cpu time %lums): %s&quot;</span>,
<a name="l00433"></a>00433             realtime/1000, cputime/1000, buf);
<a name="l00434"></a>00434   }
<a name="l00435"></a>00435 <span class="preprocessor">#endif </span><span class="comment">/* CONSUMED_TIME_CHECK */</span>
<a name="l00436"></a>00436 
<a name="l00437"></a>00437   <span class="keywordflow">if</span> (ret != <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>)
<a name="l00438"></a>00438     <span class="keywordflow">switch</span> (ret)
<a name="l00439"></a>00439       {
<a name="l00440"></a>00440       <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>:
<a name="l00441"></a>00441     <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a918d01c53936e81c45a177b0ceda3eca">type</a> == <a class="code" href="structvty.html#a6cef26c7c345053bf910a8869d5c3d29a3e08bc510119e8207b68e66a0e3a74df">VTY_FILE</a>)
<a name="l00442"></a>00442       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;Warning...%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00443"></a>00443     <span class="keywordflow">break</span>;
<a name="l00444"></a>00444       <span class="keywordflow">case</span> <a class="code" href="command_8h.html#aaca9c63a322f9ed0311fd20404ce8e9a">CMD_ERR_AMBIGUOUS</a>:
<a name="l00445"></a>00445     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Ambiguous command.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00446"></a>00446     <span class="keywordflow">break</span>;
<a name="l00447"></a>00447       <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a007b585758677d61751303a88c8914d5">CMD_ERR_NO_MATCH</a>:
<a name="l00448"></a>00448     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% [%s] Unknown command: %s%s&quot;</span>, protocolname, buf, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00449"></a>00449     <span class="keywordflow">break</span>;
<a name="l00450"></a>00450       <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a9442a1eab547aab6955358c45814015c">CMD_ERR_INCOMPLETE</a>:
<a name="l00451"></a>00451     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Command incomplete.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00452"></a>00452     <span class="keywordflow">break</span>;
<a name="l00453"></a>00453       }
<a name="l00454"></a>00454   <a class="code" href="command_8c.html#a2d4e7d3f3fe917dafa06eb6d156d9a6e">cmd_free_strvec</a> (vline);
<a name="l00455"></a>00455 
<a name="l00456"></a>00456   <span class="keywordflow">return</span> ret;
<a name="l00457"></a>00457 }
<a name="l00458"></a>00458 
<a name="l00459"></a><a class="code" href="vty_8c.html#a050c5269ec6f36e488b05d6b564601e2">00459</a> <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> <a class="code" href="vty_8c.html#a050c5269ec6f36e488b05d6b564601e2">telnet_backward_char</a> = 0x08;
<a name="l00460"></a><a class="code" href="vty_8c.html#a05df3d7f54ae7e630ade2a3124ce48d6">00460</a> <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> <a class="code" href="vty_8c.html#a05df3d7f54ae7e630ade2a3124ce48d6">telnet_space_char</a> = <span class="charliteral">&#39; &#39;</span>;
<a name="l00461"></a>00461 
<a name="l00462"></a>00462 <span class="comment">/* Basic function to write buffer to vty. */</span>
<a name="l00463"></a>00463 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00464"></a><a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">00464</a> <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>, <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>, <span class="keywordtype">size_t</span> nbytes)
<a name="l00465"></a>00465 {
<a name="l00466"></a>00466   <span class="keywordflow">if</span> ((vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a302e1f38939b1a74bc848007bb70bfdf">AUTH_NODE</a>) || (vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a96b74116564789f517eef9284f18b472">AUTH_ENABLE_NODE</a>))
<a name="l00467"></a>00467     <span class="keywordflow">return</span>;
<a name="l00468"></a>00468 
<a name="l00469"></a>00469   <span class="comment">/* Should we do buffering here ?  And make vty_flush (vty) ? */</span>
<a name="l00470"></a>00470   <a class="code" href="buffer_8c.html#a6150096c2eaae19e636d2742c3df5b75">buffer_put</a> (vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>, buf, nbytes);
<a name="l00471"></a>00471 }
<a name="l00472"></a>00472 
<a name="l00473"></a>00473 <span class="comment">/* Ensure length of input buffer.  Is buffer is short, double it. */</span>
<a name="l00474"></a>00474 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00475"></a><a class="code" href="vty_8c.html#a8609a6dc68804aff15b0d00254a44fa5">00475</a> <a class="code" href="vty_8c.html#a8609a6dc68804aff15b0d00254a44fa5">vty_ensure</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>, <span class="keywordtype">int</span> <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>)
<a name="l00476"></a>00476 {
<a name="l00477"></a>00477   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#ada832b278a60f536496555d6673cf97d">max</a> &lt;= length)
<a name="l00478"></a>00478     {
<a name="l00479"></a>00479       vty-&gt;<a class="code" href="structvty.html#ada832b278a60f536496555d6673cf97d">max</a> *= 2;
<a name="l00480"></a>00480       vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a> = <a class="code" href="memory_8h.html#ad9ab7c99da79ca966328c35e9185cc57">XREALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba05f7d9e133f49a4c7aaa98a318692c88">MTYPE_VTY</a>, vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>, vty-&gt;<a class="code" href="structvty.html#ada832b278a60f536496555d6673cf97d">max</a>);
<a name="l00481"></a>00481     }
<a name="l00482"></a>00482 }
<a name="l00483"></a>00483 
<a name="l00484"></a>00484 <span class="comment">/* Basic function to insert character into vty. */</span>
<a name="l00485"></a>00485 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00486"></a><a class="code" href="vty_8c.html#a4d876e82ce61720dead15aac07e29c30">00486</a> <a class="code" href="vty_8c.html#a4d876e82ce61720dead15aac07e29c30">vty_self_insert</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>, <span class="keywordtype">char</span> c)
<a name="l00487"></a>00487 {
<a name="l00488"></a>00488   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l00489"></a>00489   <span class="keywordtype">int</span> <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>;
<a name="l00490"></a>00490 
<a name="l00491"></a>00491   <a class="code" href="vty_8c.html#a8609a6dc68804aff15b0d00254a44fa5">vty_ensure</a> (vty, vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> + 1);
<a name="l00492"></a>00492   length = vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> - vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>;
<a name="l00493"></a>00493   memmove (&amp;vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> + 1], &amp;vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>], length);
<a name="l00494"></a>00494   vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>] = c;
<a name="l00495"></a>00495 
<a name="l00496"></a>00496   <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, &amp;vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>], length + 1);
<a name="l00497"></a>00497   <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>; i++)
<a name="l00498"></a>00498     <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, &amp;<a class="code" href="vty_8c.html#a050c5269ec6f36e488b05d6b564601e2">telnet_backward_char</a>, 1);
<a name="l00499"></a>00499 
<a name="l00500"></a>00500   vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>++;
<a name="l00501"></a>00501   vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>++;
<a name="l00502"></a>00502 }
<a name="l00503"></a>00503 
<a name="l00504"></a>00504 <span class="comment">/* Self insert character &#39;c&#39; in overwrite mode. */</span>
<a name="l00505"></a>00505 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00506"></a><a class="code" href="vty_8c.html#a72f07cc8f6c3df4dfe4effaeae9cee9b">00506</a> <a class="code" href="vty_8c.html#a72f07cc8f6c3df4dfe4effaeae9cee9b">vty_self_insert_overwrite</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>, <span class="keywordtype">char</span> c)
<a name="l00507"></a>00507 {
<a name="l00508"></a>00508   <a class="code" href="vty_8c.html#a8609a6dc68804aff15b0d00254a44fa5">vty_ensure</a> (vty, vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> + 1);
<a name="l00509"></a>00509   vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>++] = c;
<a name="l00510"></a>00510 
<a name="l00511"></a>00511   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> &gt; vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>)
<a name="l00512"></a>00512     vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>++;
<a name="l00513"></a>00513 
<a name="l00514"></a>00514   <span class="keywordflow">if</span> ((vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a302e1f38939b1a74bc848007bb70bfdf">AUTH_NODE</a>) || (vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a96b74116564789f517eef9284f18b472">AUTH_ENABLE_NODE</a>))
<a name="l00515"></a>00515     <span class="keywordflow">return</span>;
<a name="l00516"></a>00516 
<a name="l00517"></a>00517   <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, &amp;c, 1);
<a name="l00518"></a>00518 }
<a name="l00519"></a>00519 
<a name="l00520"></a>00520 <span class="comment">/* Insert a word into vty interface with overwrite mode. */</span>
<a name="l00521"></a>00521 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00522"></a><a class="code" href="vty_8c.html#af8b383a4c3ef289b4aabda0c243d4588">00522</a> <a class="code" href="vty_8c.html#af8b383a4c3ef289b4aabda0c243d4588">vty_insert_word_overwrite</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>, <span class="keywordtype">char</span> *<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>)
<a name="l00523"></a>00523 {
<a name="l00524"></a>00524   <span class="keywordtype">int</span> len = strlen (str);
<a name="l00525"></a>00525   <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, str, len);
<a name="l00526"></a>00526   strcpy (&amp;vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>], str);
<a name="l00527"></a>00527   vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> += len;
<a name="l00528"></a>00528   vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> = vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>;
<a name="l00529"></a>00529 }
<a name="l00530"></a>00530 
<a name="l00531"></a>00531 <span class="comment">/* Forward character. */</span>
<a name="l00532"></a>00532 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00533"></a><a class="code" href="vty_8c.html#adb129e2c5ad62108a56cdacddb7f57b8">00533</a> <a class="code" href="vty_8c.html#adb129e2c5ad62108a56cdacddb7f57b8">vty_forward_char</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00534"></a>00534 {
<a name="l00535"></a>00535   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> &lt; vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>)
<a name="l00536"></a>00536     {
<a name="l00537"></a>00537       <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, &amp;vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>], 1);
<a name="l00538"></a>00538       vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>++;
<a name="l00539"></a>00539     }
<a name="l00540"></a>00540 }
<a name="l00541"></a>00541 
<a name="l00542"></a>00542 <span class="comment">/* Backward character. */</span>
<a name="l00543"></a>00543 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00544"></a><a class="code" href="vty_8c.html#ae83b887d99a0493283dad484e58d16b8">00544</a> <a class="code" href="vty_8c.html#ae83b887d99a0493283dad484e58d16b8">vty_backward_char</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00545"></a>00545 {
<a name="l00546"></a>00546   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> &gt; 0)
<a name="l00547"></a>00547     {
<a name="l00548"></a>00548       vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>--;
<a name="l00549"></a>00549       <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, &amp;<a class="code" href="vty_8c.html#a050c5269ec6f36e488b05d6b564601e2">telnet_backward_char</a>, 1);
<a name="l00550"></a>00550     }
<a name="l00551"></a>00551 }
<a name="l00552"></a>00552 
<a name="l00553"></a>00553 <span class="comment">/* Move to the beginning of the line. */</span>
<a name="l00554"></a>00554 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00555"></a><a class="code" href="vty_8c.html#ace10a61328b0a67284a43e26d690e735">00555</a> <a class="code" href="vty_8c.html#ace10a61328b0a67284a43e26d690e735">vty_beginning_of_line</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00556"></a>00556 {
<a name="l00557"></a>00557   <span class="keywordflow">while</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>)
<a name="l00558"></a>00558     <a class="code" href="vty_8c.html#ae83b887d99a0493283dad484e58d16b8">vty_backward_char</a> (vty);
<a name="l00559"></a>00559 }
<a name="l00560"></a>00560 
<a name="l00561"></a>00561 <span class="comment">/* Move to the end of the line. */</span>
<a name="l00562"></a>00562 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00563"></a><a class="code" href="vty_8c.html#a396592bed9a5f245d8607e02b27ae861">00563</a> <a class="code" href="vty_8c.html#a396592bed9a5f245d8607e02b27ae861">vty_end_of_line</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00564"></a>00564 {
<a name="l00565"></a>00565   <span class="keywordflow">while</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> &lt; vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>)
<a name="l00566"></a>00566     <a class="code" href="vty_8c.html#adb129e2c5ad62108a56cdacddb7f57b8">vty_forward_char</a> (vty);
<a name="l00567"></a>00567 }
<a name="l00568"></a>00568 
<a name="l00569"></a>00569 <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="vty_8c.html#a5739e6a00dcae7a4fab7540e19454c3e">vty_kill_line_from_beginning</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *);
<a name="l00570"></a>00570 <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="vty_8c.html#aa88c9e2e5da06b826ac13025eefb386b">vty_redraw_line</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *);
<a name="l00571"></a>00571 
<a name="l00572"></a>00572 <span class="comment">/* Print command line history.  This function is called from</span>
<a name="l00573"></a>00573 <span class="comment">   vty_next_line and vty_previous_line. */</span>
<a name="l00574"></a>00574 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00575"></a><a class="code" href="vty_8c.html#a3e85588eea41b85735677cc6e74ed50a">00575</a> <a class="code" href="vty_8c.html#a3e85588eea41b85735677cc6e74ed50a">vty_history_print</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00576"></a>00576 {
<a name="l00577"></a>00577   <span class="keywordtype">int</span> <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>;
<a name="l00578"></a>00578 
<a name="l00579"></a>00579   <a class="code" href="vty_8c.html#a5739e6a00dcae7a4fab7540e19454c3e">vty_kill_line_from_beginning</a> (vty);
<a name="l00580"></a>00580 
<a name="l00581"></a>00581   <span class="comment">/* Get previous line from history buffer */</span>
<a name="l00582"></a>00582   length = strlen (vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[vty-&gt;<a class="code" href="structvty.html#a7baae5746026d42a5c13693d95354b19">hp</a>]);
<a name="l00583"></a>00583   <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>, vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[vty-&gt;<a class="code" href="structvty.html#a7baae5746026d42a5c13693d95354b19">hp</a>], length);
<a name="l00584"></a>00584   vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> = vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> = <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>;
<a name="l00585"></a>00585 
<a name="l00586"></a>00586   <span class="comment">/* Redraw current line */</span>
<a name="l00587"></a>00587   <a class="code" href="vty_8c.html#aa88c9e2e5da06b826ac13025eefb386b">vty_redraw_line</a> (vty);
<a name="l00588"></a>00588 }
<a name="l00589"></a>00589 
<a name="l00590"></a>00590 <span class="comment">/* Show next command line history. */</span>
<a name="l00591"></a>00591 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00592"></a><a class="code" href="vty_8c.html#ac933bc02bc1fcb0c345e08356a1090cc">00592</a> <a class="code" href="vty_8c.html#ac933bc02bc1fcb0c345e08356a1090cc">vty_next_line</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00593"></a>00593 {
<a name="l00594"></a>00594   <span class="keywordtype">int</span> try_index;
<a name="l00595"></a>00595 
<a name="l00596"></a>00596   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a7baae5746026d42a5c13693d95354b19">hp</a> == vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a>)
<a name="l00597"></a>00597     <span class="keywordflow">return</span>;
<a name="l00598"></a>00598 
<a name="l00599"></a>00599   <span class="comment">/* Try is there history exist or not. */</span>
<a name="l00600"></a>00600   try_index = vty-&gt;<a class="code" href="structvty.html#a7baae5746026d42a5c13693d95354b19">hp</a>;
<a name="l00601"></a>00601   <span class="keywordflow">if</span> (try_index == (<a class="code" href="vty_8h.html#a2c7bf19140857545865be759c8960bc4">VTY_MAXHIST</a> - 1))
<a name="l00602"></a>00602     try_index = 0;
<a name="l00603"></a>00603   <span class="keywordflow">else</span>
<a name="l00604"></a>00604     try_index++;
<a name="l00605"></a>00605 
<a name="l00606"></a>00606   <span class="comment">/* If there is not history return. */</span>
<a name="l00607"></a>00607   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[try_index] == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00608"></a>00608     <span class="keywordflow">return</span>;
<a name="l00609"></a>00609   <span class="keywordflow">else</span>
<a name="l00610"></a>00610     vty-&gt;<a class="code" href="structvty.html#a7baae5746026d42a5c13693d95354b19">hp</a> = try_index;
<a name="l00611"></a>00611 
<a name="l00612"></a>00612   <a class="code" href="vty_8c.html#a3e85588eea41b85735677cc6e74ed50a">vty_history_print</a> (vty);
<a name="l00613"></a>00613 }
<a name="l00614"></a>00614 
<a name="l00615"></a>00615 <span class="comment">/* Show previous command line history. */</span>
<a name="l00616"></a>00616 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00617"></a><a class="code" href="vty_8c.html#a8bae6998c5a99c023cf77eab3c4b8ce2">00617</a> <a class="code" href="vty_8c.html#a8bae6998c5a99c023cf77eab3c4b8ce2">vty_previous_line</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00618"></a>00618 {
<a name="l00619"></a>00619   <span class="keywordtype">int</span> try_index;
<a name="l00620"></a>00620 
<a name="l00621"></a>00621   try_index = vty-&gt;<a class="code" href="structvty.html#a7baae5746026d42a5c13693d95354b19">hp</a>;
<a name="l00622"></a>00622   <span class="keywordflow">if</span> (try_index == 0)
<a name="l00623"></a>00623     try_index = <a class="code" href="vty_8h.html#a2c7bf19140857545865be759c8960bc4">VTY_MAXHIST</a> - 1;
<a name="l00624"></a>00624   <span class="keywordflow">else</span>
<a name="l00625"></a>00625     try_index--;
<a name="l00626"></a>00626 
<a name="l00627"></a>00627   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[try_index] == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00628"></a>00628     <span class="keywordflow">return</span>;
<a name="l00629"></a>00629   <span class="keywordflow">else</span>
<a name="l00630"></a>00630     vty-&gt;<a class="code" href="structvty.html#a7baae5746026d42a5c13693d95354b19">hp</a> = try_index;
<a name="l00631"></a>00631 
<a name="l00632"></a>00632   <a class="code" href="vty_8c.html#a3e85588eea41b85735677cc6e74ed50a">vty_history_print</a> (vty);
<a name="l00633"></a>00633 }
<a name="l00634"></a>00634 
<a name="l00635"></a>00635 <span class="comment">/* This function redraw all of the command line character. */</span>
<a name="l00636"></a>00636 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00637"></a><a class="code" href="vty_8c.html#aa88c9e2e5da06b826ac13025eefb386b">00637</a> <a class="code" href="vty_8c.html#aa88c9e2e5da06b826ac13025eefb386b">vty_redraw_line</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00638"></a>00638 {
<a name="l00639"></a>00639   <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>, vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>);
<a name="l00640"></a>00640   vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> = vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>;
<a name="l00641"></a>00641 }
<a name="l00642"></a>00642 
<a name="l00643"></a>00643 <span class="comment">/* Forward word. */</span>
<a name="l00644"></a>00644 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00645"></a><a class="code" href="vty_8c.html#a50635cc5566b2f49e31e01cb168a83d0">00645</a> <a class="code" href="vty_8c.html#a50635cc5566b2f49e31e01cb168a83d0">vty_forward_word</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00646"></a>00646 {
<a name="l00647"></a>00647   <span class="keywordflow">while</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> != vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> &amp;&amp; vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>] != <span class="charliteral">&#39; &#39;</span>)
<a name="l00648"></a>00648     <a class="code" href="vty_8c.html#adb129e2c5ad62108a56cdacddb7f57b8">vty_forward_char</a> (vty);
<a name="l00649"></a>00649   
<a name="l00650"></a>00650   <span class="keywordflow">while</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> != vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> &amp;&amp; vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>] == <span class="charliteral">&#39; &#39;</span>)
<a name="l00651"></a>00651     <a class="code" href="vty_8c.html#adb129e2c5ad62108a56cdacddb7f57b8">vty_forward_char</a> (vty);
<a name="l00652"></a>00652 }
<a name="l00653"></a>00653 
<a name="l00654"></a>00654 <span class="comment">/* Backward word without skipping training space. */</span>
<a name="l00655"></a>00655 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00656"></a><a class="code" href="vty_8c.html#ae20b81d43461d23f30a09ec6063f6c82">00656</a> <a class="code" href="vty_8c.html#ae20b81d43461d23f30a09ec6063f6c82">vty_backward_pure_word</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00657"></a>00657 {
<a name="l00658"></a>00658   <span class="keywordflow">while</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> &gt; 0 &amp;&amp; vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> - 1] != <span class="charliteral">&#39; &#39;</span>)
<a name="l00659"></a>00659     <a class="code" href="vty_8c.html#ae83b887d99a0493283dad484e58d16b8">vty_backward_char</a> (vty);
<a name="l00660"></a>00660 }
<a name="l00661"></a>00661 
<a name="l00662"></a>00662 <span class="comment">/* Backward word. */</span>
<a name="l00663"></a>00663 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00664"></a><a class="code" href="vty_8c.html#ac633697855f1c48d8227645f6fbb624e">00664</a> <a class="code" href="vty_8c.html#ac633697855f1c48d8227645f6fbb624e">vty_backward_word</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00665"></a>00665 {
<a name="l00666"></a>00666   <span class="keywordflow">while</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> &gt; 0 &amp;&amp; vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> - 1] == <span class="charliteral">&#39; &#39;</span>)
<a name="l00667"></a>00667     <a class="code" href="vty_8c.html#ae83b887d99a0493283dad484e58d16b8">vty_backward_char</a> (vty);
<a name="l00668"></a>00668 
<a name="l00669"></a>00669   <span class="keywordflow">while</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> &gt; 0 &amp;&amp; vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> - 1] != <span class="charliteral">&#39; &#39;</span>)
<a name="l00670"></a>00670     <a class="code" href="vty_8c.html#ae83b887d99a0493283dad484e58d16b8">vty_backward_char</a> (vty);
<a name="l00671"></a>00671 }
<a name="l00672"></a>00672 
<a name="l00673"></a>00673 <span class="comment">/* When &#39;^D&#39; is typed at the beginning of the line we move to the down</span>
<a name="l00674"></a>00674 <span class="comment">   level. */</span>
<a name="l00675"></a>00675 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00676"></a><a class="code" href="vty_8c.html#a2332d063c4940eabba84a4ff92312f06">00676</a> <a class="code" href="vty_8c.html#a2332d063c4940eabba84a4ff92312f06">vty_down_level</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00677"></a>00677 {
<a name="l00678"></a>00678   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00679"></a>00679   (*<a class="code" href="command_8h.html#a0f38e7320fd26709b67553e7b06e1ba8">config_exit_cmd</a>.<a class="code" href="structcmd__element.html#ae2c6558413d282f35bbe645a381c7355">func</a>)(<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, vty, 0, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l00680"></a>00680   <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);
<a name="l00681"></a>00681   vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> = 0;
<a name="l00682"></a>00682 }
<a name="l00683"></a>00683 
<a name="l00684"></a>00684 <span class="comment">/* When &#39;^Z&#39; is received from vty, move down to the enable mode. */</span>
<a name="l00685"></a>00685 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00686"></a><a class="code" href="vty_8c.html#a763be1552ab8388b9f9467f363d82049">00686</a> <a class="code" href="vty_8c.html#a763be1552ab8388b9f9467f363d82049">vty_end_config</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00687"></a>00687 {
<a name="l00688"></a>00688   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00689"></a>00689 
<a name="l00690"></a>00690   <span class="keywordflow">switch</span> (vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a>)
<a name="l00691"></a>00691     {
<a name="l00692"></a>00692     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>:
<a name="l00693"></a>00693     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>:
<a name="l00694"></a>00694     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acb0c5ada108352e3e869838b0ee04c3b">RESTRICTED_NODE</a>:
<a name="l00695"></a>00695       <span class="comment">/* Nothing to do. */</span>
<a name="l00696"></a>00696       <span class="keywordflow">break</span>;
<a name="l00697"></a>00697     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>:
<a name="l00698"></a>00698     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>:
<a name="l00699"></a>00699     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682af7fc20f627618eee254477289b890df3">ZEBRA_NODE</a>:
<a name="l00700"></a>00700     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682aba91035637d2e661aaea111ea200751a">RIP_NODE</a>:
<a name="l00701"></a>00701     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>:
<a name="l00702"></a>00702     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a7493d9d6392a7010c13aa962093436a7">BGP_NODE</a>:
<a name="l00703"></a>00703     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a7d6209ce7672734b4681adb05e925e08">BGP_VPNV4_NODE</a>:
<a name="l00704"></a>00704     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a7391c0900502387d3204e9de89022905">BGP_IPV4_NODE</a>:
<a name="l00705"></a>00705     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a0f046c161a229e71ed9da963e29c961d">BGP_IPV4M_NODE</a>:
<a name="l00706"></a>00706     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ad40fb52980325d9440b23b5f86701ffc">BGP_IPV6_NODE</a>:
<a name="l00707"></a>00707     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682adbe4c8c9e45712b199bcc26560e77ea4">BGP_IPV6M_NODE</a>:
<a name="l00708"></a>00708     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>:
<a name="l00709"></a>00709     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a53037feb34b636b5cabbcdb85698ac35">OSPF_NODE</a>:
<a name="l00710"></a>00710     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a3e34f801d98de220164f1a6b7976d3c4">OSPF6_NODE</a>:
<a name="l00711"></a>00711     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab25ba1a66148ff64a7b5aa681cc8c2dd">ISIS_NODE</a>:
<a name="l00712"></a>00712     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a17696c332f7c9a776b7ce27fab05739b">KEYCHAIN_NODE</a>:
<a name="l00713"></a>00713     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a82708770dcbadd9cbe5279a2d7d1a974">KEYCHAIN_KEY_NODE</a>:
<a name="l00714"></a>00714     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8863fd12cbe31d4555e4bfe57be8bc89">MASC_NODE</a>:
<a name="l00715"></a>00715     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>:
<a name="l00716"></a>00716       <a class="code" href="vty_8c.html#ae68c17df6974b76d0977fc41adde0f08">vty_config_unlock</a> (vty);
<a name="l00717"></a>00717       vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>;
<a name="l00718"></a>00718       <span class="keywordflow">break</span>;
<a name="l00719"></a>00719     <span class="keywordflow">default</span>:
<a name="l00720"></a>00720       <span class="comment">/* Unknown node, we have to ignore it. */</span>
<a name="l00721"></a>00721       <span class="keywordflow">break</span>;
<a name="l00722"></a>00722     }
<a name="l00723"></a>00723 
<a name="l00724"></a>00724   <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);
<a name="l00725"></a>00725   vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> = 0;
<a name="l00726"></a>00726 }
<a name="l00727"></a>00727 
<a name="l00728"></a>00728 <span class="comment">/* Delete a charcter at the current point. */</span>
<a name="l00729"></a>00729 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00730"></a><a class="code" href="vty_8c.html#a843699a9603df9fec1f79aa648daeeaa">00730</a> <a class="code" href="vty_8c.html#a843699a9603df9fec1f79aa648daeeaa">vty_delete_char</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00731"></a>00731 {
<a name="l00732"></a>00732   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l00733"></a>00733   <span class="keywordtype">int</span> size;
<a name="l00734"></a>00734 
<a name="l00735"></a>00735   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> == 0)
<a name="l00736"></a>00736     {
<a name="l00737"></a>00737       <a class="code" href="vty_8c.html#a2332d063c4940eabba84a4ff92312f06">vty_down_level</a> (vty);
<a name="l00738"></a>00738       <span class="keywordflow">return</span>;
<a name="l00739"></a>00739     }
<a name="l00740"></a>00740 
<a name="l00741"></a>00741   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> == vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>)
<a name="l00742"></a>00742     <span class="keywordflow">return</span>;         <span class="comment">/* completion need here? */</span>
<a name="l00743"></a>00743 
<a name="l00744"></a>00744   size = vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> - vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>;
<a name="l00745"></a>00745 
<a name="l00746"></a>00746   vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>--;
<a name="l00747"></a>00747   memmove (&amp;vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>], &amp;vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> + 1], size - 1);
<a name="l00748"></a>00748   vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>] = <span class="charliteral">&#39;\0&#39;</span>;
<a name="l00749"></a>00749   
<a name="l00750"></a>00750   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a302e1f38939b1a74bc848007bb70bfdf">AUTH_NODE</a> || vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a96b74116564789f517eef9284f18b472">AUTH_ENABLE_NODE</a>)
<a name="l00751"></a>00751     <span class="keywordflow">return</span>;
<a name="l00752"></a>00752 
<a name="l00753"></a>00753   <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, &amp;vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>], size - 1);
<a name="l00754"></a>00754   <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, &amp;<a class="code" href="vty_8c.html#a05df3d7f54ae7e630ade2a3124ce48d6">telnet_space_char</a>, 1);
<a name="l00755"></a>00755 
<a name="l00756"></a>00756   <span class="keywordflow">for</span> (i = 0; i &lt; size; i++)
<a name="l00757"></a>00757     <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, &amp;<a class="code" href="vty_8c.html#a050c5269ec6f36e488b05d6b564601e2">telnet_backward_char</a>, 1);
<a name="l00758"></a>00758 }
<a name="l00759"></a>00759 
<a name="l00760"></a>00760 <span class="comment">/* Delete a character before the point. */</span>
<a name="l00761"></a>00761 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00762"></a><a class="code" href="vty_8c.html#ad96cb2b5ea01585f597cd584553e5ec6">00762</a> <a class="code" href="vty_8c.html#ad96cb2b5ea01585f597cd584553e5ec6">vty_delete_backward_char</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00763"></a>00763 {
<a name="l00764"></a>00764   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> == 0)
<a name="l00765"></a>00765     <span class="keywordflow">return</span>;
<a name="l00766"></a>00766 
<a name="l00767"></a>00767   <a class="code" href="vty_8c.html#ae83b887d99a0493283dad484e58d16b8">vty_backward_char</a> (vty);
<a name="l00768"></a>00768   <a class="code" href="vty_8c.html#a843699a9603df9fec1f79aa648daeeaa">vty_delete_char</a> (vty);
<a name="l00769"></a>00769 }
<a name="l00770"></a>00770 
<a name="l00771"></a>00771 <span class="comment">/* Kill rest of line from current point. */</span>
<a name="l00772"></a>00772 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00773"></a><a class="code" href="vty_8c.html#a62d806365d5e4914bea1e058eefb895a">00773</a> <a class="code" href="vty_8c.html#a62d806365d5e4914bea1e058eefb895a">vty_kill_line</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00774"></a>00774 {
<a name="l00775"></a>00775   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l00776"></a>00776   <span class="keywordtype">int</span> size;
<a name="l00777"></a>00777 
<a name="l00778"></a>00778   size = vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> - vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>;
<a name="l00779"></a>00779   
<a name="l00780"></a>00780   <span class="keywordflow">if</span> (size == 0)
<a name="l00781"></a>00781     <span class="keywordflow">return</span>;
<a name="l00782"></a>00782 
<a name="l00783"></a>00783   <span class="keywordflow">for</span> (i = 0; i &lt; size; i++)
<a name="l00784"></a>00784     <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, &amp;<a class="code" href="vty_8c.html#a05df3d7f54ae7e630ade2a3124ce48d6">telnet_space_char</a>, 1);
<a name="l00785"></a>00785   <span class="keywordflow">for</span> (i = 0; i &lt; size; i++)
<a name="l00786"></a>00786     <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, &amp;<a class="code" href="vty_8c.html#a050c5269ec6f36e488b05d6b564601e2">telnet_backward_char</a>, 1);
<a name="l00787"></a>00787 
<a name="l00788"></a>00788   memset (&amp;vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>], 0, size);
<a name="l00789"></a>00789   vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> = vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>;
<a name="l00790"></a>00790 }
<a name="l00791"></a>00791 
<a name="l00792"></a>00792 <span class="comment">/* Kill line from the beginning. */</span>
<a name="l00793"></a>00793 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00794"></a><a class="code" href="vty_8c.html#a5739e6a00dcae7a4fab7540e19454c3e">00794</a> <a class="code" href="vty_8c.html#a5739e6a00dcae7a4fab7540e19454c3e">vty_kill_line_from_beginning</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00795"></a>00795 {
<a name="l00796"></a>00796   <a class="code" href="vty_8c.html#ace10a61328b0a67284a43e26d690e735">vty_beginning_of_line</a> (vty);
<a name="l00797"></a>00797   <a class="code" href="vty_8c.html#a62d806365d5e4914bea1e058eefb895a">vty_kill_line</a> (vty);
<a name="l00798"></a>00798 }
<a name="l00799"></a>00799 
<a name="l00800"></a>00800 <span class="comment">/* Delete a word before the point. */</span>
<a name="l00801"></a>00801 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00802"></a><a class="code" href="vty_8c.html#a4e12c6d2e92f643659d6c26ff0347aa2">00802</a> <a class="code" href="vty_8c.html#a4e12c6d2e92f643659d6c26ff0347aa2">vty_forward_kill_word</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00803"></a>00803 {
<a name="l00804"></a>00804   <span class="keywordflow">while</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> != vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> &amp;&amp; vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>] == <span class="charliteral">&#39; &#39;</span>)
<a name="l00805"></a>00805     <a class="code" href="vty_8c.html#a843699a9603df9fec1f79aa648daeeaa">vty_delete_char</a> (vty);
<a name="l00806"></a>00806   <span class="keywordflow">while</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> != vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> &amp;&amp; vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>] != <span class="charliteral">&#39; &#39;</span>)
<a name="l00807"></a>00807     <a class="code" href="vty_8c.html#a843699a9603df9fec1f79aa648daeeaa">vty_delete_char</a> (vty);
<a name="l00808"></a>00808 }
<a name="l00809"></a>00809 
<a name="l00810"></a>00810 <span class="comment">/* Delete a word before the point. */</span>
<a name="l00811"></a>00811 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00812"></a><a class="code" href="vty_8c.html#afd97712a47228ecb91064b09717cc74c">00812</a> <a class="code" href="vty_8c.html#afd97712a47228ecb91064b09717cc74c">vty_backward_kill_word</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00813"></a>00813 {
<a name="l00814"></a>00814   <span class="keywordflow">while</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> &gt; 0 &amp;&amp; vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> - 1] == <span class="charliteral">&#39; &#39;</span>)
<a name="l00815"></a>00815     <a class="code" href="vty_8c.html#ad96cb2b5ea01585f597cd584553e5ec6">vty_delete_backward_char</a> (vty);
<a name="l00816"></a>00816   <span class="keywordflow">while</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> &gt; 0 &amp;&amp; vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> - 1] != <span class="charliteral">&#39; &#39;</span>)
<a name="l00817"></a>00817     <a class="code" href="vty_8c.html#ad96cb2b5ea01585f597cd584553e5ec6">vty_delete_backward_char</a> (vty);
<a name="l00818"></a>00818 }
<a name="l00819"></a>00819 
<a name="l00820"></a>00820 <span class="comment">/* Transpose chars before or at the point. */</span>
<a name="l00821"></a>00821 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00822"></a><a class="code" href="vty_8c.html#afd4a3c3a366c9078aa632e04b34e7d2c">00822</a> <a class="code" href="vty_8c.html#afd4a3c3a366c9078aa632e04b34e7d2c">vty_transpose_chars</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00823"></a>00823 {
<a name="l00824"></a>00824   <span class="keywordtype">char</span> <a class="code" href="test-checksum_8c.html#a8f9aca421a560153a31ebb326da34216">c1</a>, c2;
<a name="l00825"></a>00825 
<a name="l00826"></a>00826   <span class="comment">/* If length is short or point is near by the beginning of line then</span>
<a name="l00827"></a>00827 <span class="comment">     return. */</span>
<a name="l00828"></a>00828   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> &lt; 2 || vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> &lt; 1)
<a name="l00829"></a>00829     <span class="keywordflow">return</span>;
<a name="l00830"></a>00830 
<a name="l00831"></a>00831   <span class="comment">/* In case of point is located at the end of the line. */</span>
<a name="l00832"></a>00832   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> == vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>)
<a name="l00833"></a>00833     {
<a name="l00834"></a>00834       c1 = vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> - 1];
<a name="l00835"></a>00835       c2 = vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> - 2];
<a name="l00836"></a>00836 
<a name="l00837"></a>00837       <a class="code" href="vty_8c.html#ae83b887d99a0493283dad484e58d16b8">vty_backward_char</a> (vty);
<a name="l00838"></a>00838       <a class="code" href="vty_8c.html#ae83b887d99a0493283dad484e58d16b8">vty_backward_char</a> (vty);
<a name="l00839"></a>00839       <a class="code" href="vty_8c.html#a72f07cc8f6c3df4dfe4effaeae9cee9b">vty_self_insert_overwrite</a> (vty, c1);
<a name="l00840"></a>00840       <a class="code" href="vty_8c.html#a72f07cc8f6c3df4dfe4effaeae9cee9b">vty_self_insert_overwrite</a> (vty, c2);
<a name="l00841"></a>00841     }
<a name="l00842"></a>00842   <span class="keywordflow">else</span>
<a name="l00843"></a>00843     {
<a name="l00844"></a>00844       c1 = vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>];
<a name="l00845"></a>00845       c2 = vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> - 1];
<a name="l00846"></a>00846 
<a name="l00847"></a>00847       <a class="code" href="vty_8c.html#ae83b887d99a0493283dad484e58d16b8">vty_backward_char</a> (vty);
<a name="l00848"></a>00848       <a class="code" href="vty_8c.html#a72f07cc8f6c3df4dfe4effaeae9cee9b">vty_self_insert_overwrite</a> (vty, c1);
<a name="l00849"></a>00849       <a class="code" href="vty_8c.html#a72f07cc8f6c3df4dfe4effaeae9cee9b">vty_self_insert_overwrite</a> (vty, c2);
<a name="l00850"></a>00850     }
<a name="l00851"></a>00851 }
<a name="l00852"></a>00852 
<a name="l00853"></a>00853 <span class="comment">/* Do completion at vty interface. */</span>
<a name="l00854"></a>00854 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00855"></a><a class="code" href="vty_8c.html#ad72e0680a6ba30787728859175d70bc8">00855</a> <a class="code" href="vty_8c.html#ad72e0680a6ba30787728859175d70bc8">vty_complete_command</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00856"></a>00856 {
<a name="l00857"></a>00857   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l00858"></a>00858   <span class="keywordtype">int</span> ret;
<a name="l00859"></a>00859   <span class="keywordtype">char</span> **matched = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00860"></a>00860   <a class="code" href="struct__vector.html">vector</a> vline;
<a name="l00861"></a>00861 
<a name="l00862"></a>00862   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a302e1f38939b1a74bc848007bb70bfdf">AUTH_NODE</a> || vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a96b74116564789f517eef9284f18b472">AUTH_ENABLE_NODE</a>)
<a name="l00863"></a>00863     <span class="keywordflow">return</span>;
<a name="l00864"></a>00864 
<a name="l00865"></a>00865   vline = <a class="code" href="command_8c.html#a968b2f52fc543595fa4ce625f5fdb6a3">cmd_make_strvec</a> (vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>);
<a name="l00866"></a>00866   <span class="keywordflow">if</span> (vline == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00867"></a>00867     <span class="keywordflow">return</span>;
<a name="l00868"></a>00868 
<a name="l00869"></a>00869   <span class="comment">/* In case of &#39;help \t&#39;. */</span>
<a name="l00870"></a>00870   <span class="keywordflow">if</span> (isspace ((<span class="keywordtype">int</span>) vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> - 1]))
<a name="l00871"></a>00871     <a class="code" href="vector_8c.html#a09dff784fcc0e322c64e5975b3255fe0">vector_set</a> (vline, <span class="charliteral">&#39;\0&#39;</span>);
<a name="l00872"></a>00872 
<a name="l00873"></a>00873   matched = <a class="code" href="command_8c.html#a1d01d855dff60ded22f25f24d8c6d715">cmd_complete_command</a> (vline, vty, &amp;ret);
<a name="l00874"></a>00874   
<a name="l00875"></a>00875   <a class="code" href="command_8c.html#a2d4e7d3f3fe917dafa06eb6d156d9a6e">cmd_free_strvec</a> (vline);
<a name="l00876"></a>00876 
<a name="l00877"></a>00877   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00878"></a>00878   <span class="keywordflow">switch</span> (ret)
<a name="l00879"></a>00879     {
<a name="l00880"></a>00880     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#aaca9c63a322f9ed0311fd20404ce8e9a">CMD_ERR_AMBIGUOUS</a>:
<a name="l00881"></a>00881       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Ambiguous command.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00882"></a>00882       <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);
<a name="l00883"></a>00883       <a class="code" href="vty_8c.html#aa88c9e2e5da06b826ac13025eefb386b">vty_redraw_line</a> (vty);
<a name="l00884"></a>00884       <span class="keywordflow">break</span>;
<a name="l00885"></a>00885     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a007b585758677d61751303a88c8914d5">CMD_ERR_NO_MATCH</a>:
<a name="l00886"></a>00886       <span class="comment">/* vty_out (vty, &quot;%% There is no matched command.%s&quot;, VTY_NEWLINE); */</span>
<a name="l00887"></a>00887       <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);
<a name="l00888"></a>00888       <a class="code" href="vty_8c.html#aa88c9e2e5da06b826ac13025eefb386b">vty_redraw_line</a> (vty);
<a name="l00889"></a>00889       <span class="keywordflow">break</span>;
<a name="l00890"></a>00890     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#ad5ac7be44eb88dbf764939677e82b10f">CMD_COMPLETE_FULL_MATCH</a>:
<a name="l00891"></a>00891       <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);
<a name="l00892"></a>00892       <a class="code" href="vty_8c.html#aa88c9e2e5da06b826ac13025eefb386b">vty_redraw_line</a> (vty);
<a name="l00893"></a>00893       <a class="code" href="vty_8c.html#ae20b81d43461d23f30a09ec6063f6c82">vty_backward_pure_word</a> (vty);
<a name="l00894"></a>00894       <a class="code" href="vty_8c.html#af8b383a4c3ef289b4aabda0c243d4588">vty_insert_word_overwrite</a> (vty, matched[0]);
<a name="l00895"></a>00895       <a class="code" href="vty_8c.html#a4d876e82ce61720dead15aac07e29c30">vty_self_insert</a> (vty, <span class="charliteral">&#39; &#39;</span>);
<a name="l00896"></a>00896       <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, matched[0]);
<a name="l00897"></a>00897       <span class="keywordflow">break</span>;
<a name="l00898"></a>00898     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a40e2355b69f7202cdd91b873749e2efc">CMD_COMPLETE_MATCH</a>:
<a name="l00899"></a>00899       <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);
<a name="l00900"></a>00900       <a class="code" href="vty_8c.html#aa88c9e2e5da06b826ac13025eefb386b">vty_redraw_line</a> (vty);
<a name="l00901"></a>00901       <a class="code" href="vty_8c.html#ae20b81d43461d23f30a09ec6063f6c82">vty_backward_pure_word</a> (vty);
<a name="l00902"></a>00902       <a class="code" href="vty_8c.html#af8b383a4c3ef289b4aabda0c243d4588">vty_insert_word_overwrite</a> (vty, matched[0]);
<a name="l00903"></a>00903       <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, matched[0]);
<a name="l00904"></a>00904       <a class="code" href="vector_8c.html#ac09d5fe94ccb5c5b0e883f2565a1a858">vector_only_index_free</a> (matched);
<a name="l00905"></a>00905       <span class="keywordflow">return</span>;
<a name="l00906"></a>00906       <span class="keywordflow">break</span>;
<a name="l00907"></a>00907     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a9e0e784e45db546ff1a7f09b7b43ebb9">CMD_COMPLETE_LIST_MATCH</a>:
<a name="l00908"></a>00908       <span class="keywordflow">for</span> (i = 0; matched[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>; i++)
<a name="l00909"></a>00909     {
<a name="l00910"></a>00910       <span class="keywordflow">if</span> (i != 0 &amp;&amp; ((i % 6) == 0))
<a name="l00911"></a>00911         <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00912"></a>00912       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%-10s &quot;</span>, matched[i]);
<a name="l00913"></a>00913       <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, matched[i]);
<a name="l00914"></a>00914     }
<a name="l00915"></a>00915       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00916"></a>00916 
<a name="l00917"></a>00917       <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);
<a name="l00918"></a>00918       <a class="code" href="vty_8c.html#aa88c9e2e5da06b826ac13025eefb386b">vty_redraw_line</a> (vty);
<a name="l00919"></a>00919       <span class="keywordflow">break</span>;
<a name="l00920"></a>00920     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6f6aa6c6eb58a1df028034d288d79ddf">CMD_ERR_NOTHING_TODO</a>:
<a name="l00921"></a>00921       <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);
<a name="l00922"></a>00922       <a class="code" href="vty_8c.html#aa88c9e2e5da06b826ac13025eefb386b">vty_redraw_line</a> (vty);
<a name="l00923"></a>00923       <span class="keywordflow">break</span>;
<a name="l00924"></a>00924     <span class="keywordflow">default</span>:
<a name="l00925"></a>00925       <span class="keywordflow">break</span>;
<a name="l00926"></a>00926     }
<a name="l00927"></a>00927   <span class="keywordflow">if</span> (matched)
<a name="l00928"></a>00928     <a class="code" href="vector_8c.html#ac09d5fe94ccb5c5b0e883f2565a1a858">vector_only_index_free</a> (matched);
<a name="l00929"></a>00929 }
<a name="l00930"></a>00930 
<a name="l00931"></a>00931 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00932"></a><a class="code" href="vty_8c.html#a4749fbdd1bd21c94175d6e8e92545528">00932</a> <a class="code" href="vty_8c.html#a4749fbdd1bd21c94175d6e8e92545528">vty_describe_fold</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>, <span class="keywordtype">int</span> cmd_width,
<a name="l00933"></a>00933            <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> desc_width, <span class="keyword">struct</span> <a class="code" href="structdesc.html">desc</a> *<a class="code" href="structdesc.html">desc</a>)
<a name="l00934"></a>00934 {
<a name="l00935"></a>00935   <span class="keywordtype">char</span> *<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>;
<a name="l00936"></a>00936   <span class="keyword">const</span> <span class="keywordtype">char</span> *cmd, *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
<a name="l00937"></a>00937   <span class="keywordtype">int</span> pos;
<a name="l00938"></a>00938 
<a name="l00939"></a>00939   cmd = desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>[0] == <span class="charliteral">&#39;.&#39;</span> ? desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a> + 1 : desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>;
<a name="l00940"></a>00940 
<a name="l00941"></a>00941   <span class="keywordflow">if</span> (desc_width &lt;= 0)
<a name="l00942"></a>00942     {
<a name="l00943"></a>00943       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  %-*s  %s%s&quot;</span>, cmd_width, cmd, desc-&gt;<a class="code" href="structdesc.html#ad00be16e06d1e70d8a047cae757be275">str</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00944"></a>00944       <span class="keywordflow">return</span>;
<a name="l00945"></a>00945     }
<a name="l00946"></a>00946 
<a name="l00947"></a>00947   buf = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, strlen (desc-&gt;<a class="code" href="structdesc.html#ad00be16e06d1e70d8a047cae757be275">str</a>) + 1);
<a name="l00948"></a>00948 
<a name="l00949"></a>00949   <span class="keywordflow">for</span> (p = desc-&gt;<a class="code" href="structdesc.html#ad00be16e06d1e70d8a047cae757be275">str</a>; strlen (p) &gt; desc_width; p += pos + 1)
<a name="l00950"></a>00950     {
<a name="l00951"></a>00951       <span class="keywordflow">for</span> (pos = desc_width; pos &gt; 0; pos--)
<a name="l00952"></a>00952       <span class="keywordflow">if</span> (*(p + pos) == <span class="charliteral">&#39; &#39;</span>)
<a name="l00953"></a>00953         <span class="keywordflow">break</span>;
<a name="l00954"></a>00954 
<a name="l00955"></a>00955       <span class="keywordflow">if</span> (pos == 0)
<a name="l00956"></a>00956       <span class="keywordflow">break</span>;
<a name="l00957"></a>00957 
<a name="l00958"></a>00958       strncpy (buf, p, pos);
<a name="l00959"></a>00959       buf[pos] = <span class="charliteral">&#39;\0&#39;</span>;
<a name="l00960"></a>00960       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  %-*s  %s%s&quot;</span>, cmd_width, cmd, buf, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00961"></a>00961 
<a name="l00962"></a>00962       cmd = <span class="stringliteral">&quot;&quot;</span>;
<a name="l00963"></a>00963     }
<a name="l00964"></a>00964 
<a name="l00965"></a>00965   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  %-*s  %s%s&quot;</span>, cmd_width, cmd, p, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00966"></a>00966 
<a name="l00967"></a>00967   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, buf);
<a name="l00968"></a>00968 }
<a name="l00969"></a>00969 
<a name="l00970"></a>00970 <span class="comment">/* Describe matched command function. */</span>
<a name="l00971"></a>00971 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00972"></a><a class="code" href="vty_8c.html#a39986e2365dcda01161b8497a4a9b83b">00972</a> <a class="code" href="vty_8c.html#a39986e2365dcda01161b8497a4a9b83b">vty_describe_command</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l00973"></a>00973 {
<a name="l00974"></a>00974   <span class="keywordtype">int</span> ret;
<a name="l00975"></a>00975   <a class="code" href="struct__vector.html">vector</a> vline;
<a name="l00976"></a>00976   <a class="code" href="struct__vector.html">vector</a> describe;
<a name="l00977"></a>00977   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>, <a class="code" href="structvty.html#a57c305025545e9f6f58ecc68380cd6de">width</a>, desc_width;
<a name="l00978"></a>00978   <span class="keyword">struct </span><a class="code" href="structdesc.html">desc</a> *<a class="code" href="structdesc.html">desc</a>, *<a class="code" href="command_8c.html#a26037a7b8f4100941fa9d6e75596d81e">desc_cr</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00979"></a>00979 
<a name="l00980"></a>00980   vline = <a class="code" href="command_8c.html#a968b2f52fc543595fa4ce625f5fdb6a3">cmd_make_strvec</a> (vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>);
<a name="l00981"></a>00981 
<a name="l00982"></a>00982   <span class="comment">/* In case of &#39;&gt; ?&#39;. */</span>
<a name="l00983"></a>00983   <span class="keywordflow">if</span> (vline == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00984"></a>00984     {
<a name="l00985"></a>00985       vline = <a class="code" href="vector_8c.html#ae6a929ac3530de06eee1df3629d15247">vector_init</a> (1);
<a name="l00986"></a>00986       <a class="code" href="vector_8c.html#a09dff784fcc0e322c64e5975b3255fe0">vector_set</a> (vline, <span class="charliteral">&#39;\0&#39;</span>);
<a name="l00987"></a>00987     }
<a name="l00988"></a>00988   <span class="keywordflow">else</span> 
<a name="l00989"></a>00989     <span class="keywordflow">if</span> (isspace ((<span class="keywordtype">int</span>) vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> - 1]))
<a name="l00990"></a>00990       <a class="code" href="vector_8c.html#a09dff784fcc0e322c64e5975b3255fe0">vector_set</a> (vline, <span class="charliteral">&#39;\0&#39;</span>);
<a name="l00991"></a>00991 
<a name="l00992"></a>00992   describe = <a class="code" href="command_8c.html#a7cd7526d1c0ed77e854952eca9209502">cmd_describe_command</a> (vline, vty, &amp;ret);
<a name="l00993"></a>00993 
<a name="l00994"></a>00994   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00995"></a>00995 
<a name="l00996"></a>00996   <span class="comment">/* Ambiguous error. */</span>
<a name="l00997"></a>00997   <span class="keywordflow">switch</span> (ret)
<a name="l00998"></a>00998     {
<a name="l00999"></a>00999     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#aaca9c63a322f9ed0311fd20404ce8e9a">CMD_ERR_AMBIGUOUS</a>:
<a name="l01000"></a>01000       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Ambiguous command.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01001"></a>01001       <span class="keywordflow">goto</span> out;
<a name="l01002"></a>01002       <span class="keywordflow">break</span>;
<a name="l01003"></a>01003     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a007b585758677d61751303a88c8914d5">CMD_ERR_NO_MATCH</a>:
<a name="l01004"></a>01004       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% There is no matched command.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01005"></a>01005       <span class="keywordflow">goto</span> out;
<a name="l01006"></a>01006       <span class="keywordflow">break</span>;
<a name="l01007"></a>01007     }  
<a name="l01008"></a>01008 
<a name="l01009"></a>01009   <span class="comment">/* Get width of command string. */</span>
<a name="l01010"></a>01010   width = 0;
<a name="l01011"></a>01011   <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="vector_8h.html#ac96b7beddf251a81df131543d06d63c7">vector_active</a> (describe); i++)
<a name="l01012"></a>01012     <span class="keywordflow">if</span> ((desc = <a class="code" href="vector_8h.html#a34cb4a77fbd6ab6cb23707cdd1c4c0d2">vector_slot</a> (describe, i)) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01013"></a>01013       {
<a name="l01014"></a>01014     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> len;
<a name="l01015"></a>01015 
<a name="l01016"></a>01016     <span class="keywordflow">if</span> (desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>[0] == <span class="charliteral">&#39;\0&#39;</span>)
<a name="l01017"></a>01017       <span class="keywordflow">continue</span>;
<a name="l01018"></a>01018 
<a name="l01019"></a>01019     len = strlen (desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>);
<a name="l01020"></a>01020     <span class="keywordflow">if</span> (desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>[0] == <span class="charliteral">&#39;.&#39;</span>)
<a name="l01021"></a>01021       len--;
<a name="l01022"></a>01022 
<a name="l01023"></a>01023     <span class="keywordflow">if</span> (width &lt; len)
<a name="l01024"></a>01024       width = len;
<a name="l01025"></a>01025       }
<a name="l01026"></a>01026 
<a name="l01027"></a>01027   <span class="comment">/* Get width of description string. */</span>
<a name="l01028"></a>01028   desc_width = vty-&gt;<a class="code" href="structvty.html#a57c305025545e9f6f58ecc68380cd6de">width</a> - (width + 6);
<a name="l01029"></a>01029 
<a name="l01030"></a>01030   <span class="comment">/* Print out description. */</span>
<a name="l01031"></a>01031   <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="vector_8h.html#ac96b7beddf251a81df131543d06d63c7">vector_active</a> (describe); i++)
<a name="l01032"></a>01032     <span class="keywordflow">if</span> ((desc = <a class="code" href="vector_8h.html#a34cb4a77fbd6ab6cb23707cdd1c4c0d2">vector_slot</a> (describe, i)) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01033"></a>01033       {
<a name="l01034"></a>01034     <span class="keywordflow">if</span> (desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>[0] == <span class="charliteral">&#39;\0&#39;</span>)
<a name="l01035"></a>01035       <span class="keywordflow">continue</span>;
<a name="l01036"></a>01036     
<a name="l01037"></a>01037     <span class="keywordflow">if</span> (strcmp (desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>, <a class="code" href="command_8c.html#a3e76b268e2a2b91c331a523ef8f3912d">command_cr</a>) == 0)
<a name="l01038"></a>01038       {
<a name="l01039"></a>01039         desc_cr = desc;
<a name="l01040"></a>01040         <span class="keywordflow">continue</span>;
<a name="l01041"></a>01041       }
<a name="l01042"></a>01042 
<a name="l01043"></a>01043     <span class="keywordflow">if</span> (!desc-&gt;<a class="code" href="structdesc.html#ad00be16e06d1e70d8a047cae757be275">str</a>)
<a name="l01044"></a>01044       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  %-s%s&quot;</span>,
<a name="l01045"></a>01045            desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>[0] == <span class="charliteral">&#39;.&#39;</span> ? desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a> + 1 : desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>,
<a name="l01046"></a>01046            <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01047"></a>01047     <span class="keywordflow">else</span> <span class="keywordflow">if</span> (desc_width &gt;= strlen (desc-&gt;<a class="code" href="structdesc.html#ad00be16e06d1e70d8a047cae757be275">str</a>))
<a name="l01048"></a>01048       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  %-*s  %s%s&quot;</span>, width,
<a name="l01049"></a>01049            desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>[0] == <span class="charliteral">&#39;.&#39;</span> ? desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a> + 1 : desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>,
<a name="l01050"></a>01050            desc-&gt;<a class="code" href="structdesc.html#ad00be16e06d1e70d8a047cae757be275">str</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01051"></a>01051     <span class="keywordflow">else</span>
<a name="l01052"></a>01052       <a class="code" href="vty_8c.html#a4749fbdd1bd21c94175d6e8e92545528">vty_describe_fold</a> (vty, width, desc_width, desc);
<a name="l01053"></a>01053 
<a name="l01054"></a>01054 <span class="preprocessor">#if 0</span>
<a name="l01055"></a>01055 <span class="preprocessor"></span>    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  %-*s %s%s&quot;</span>, width
<a name="l01056"></a>01056          desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>[0] == <span class="charliteral">&#39;.&#39;</span> ? desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a> + 1 : desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>,
<a name="l01057"></a>01057          desc-&gt;<a class="code" href="structdesc.html#ad00be16e06d1e70d8a047cae757be275">str</a> ? desc-&gt;<a class="code" href="structdesc.html#ad00be16e06d1e70d8a047cae757be275">str</a> : <span class="stringliteral">&quot;&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01058"></a>01058 <span class="preprocessor">#endif </span><span class="comment">/* 0 */</span>
<a name="l01059"></a>01059       }
<a name="l01060"></a>01060 
<a name="l01061"></a>01061   <span class="keywordflow">if</span> ((desc = desc_cr))
<a name="l01062"></a>01062     {
<a name="l01063"></a>01063       <span class="keywordflow">if</span> (!desc-&gt;<a class="code" href="structdesc.html#ad00be16e06d1e70d8a047cae757be275">str</a>)
<a name="l01064"></a>01064     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  %-s%s&quot;</span>,
<a name="l01065"></a>01065          desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>[0] == <span class="charliteral">&#39;.&#39;</span> ? desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a> + 1 : desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>,
<a name="l01066"></a>01066          <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01067"></a>01067       <span class="keywordflow">else</span> <span class="keywordflow">if</span> (desc_width &gt;= strlen (desc-&gt;<a class="code" href="structdesc.html#ad00be16e06d1e70d8a047cae757be275">str</a>))
<a name="l01068"></a>01068     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  %-*s  %s%s&quot;</span>, width,
<a name="l01069"></a>01069          desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>[0] == <span class="charliteral">&#39;.&#39;</span> ? desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a> + 1 : desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>,
<a name="l01070"></a>01070          desc-&gt;<a class="code" href="structdesc.html#ad00be16e06d1e70d8a047cae757be275">str</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01071"></a>01071       <span class="keywordflow">else</span>
<a name="l01072"></a>01072     <a class="code" href="vty_8c.html#a4749fbdd1bd21c94175d6e8e92545528">vty_describe_fold</a> (vty, width, desc_width, desc);
<a name="l01073"></a>01073     }
<a name="l01074"></a>01074 
<a name="l01075"></a>01075 out:
<a name="l01076"></a>01076   <a class="code" href="command_8c.html#a2d4e7d3f3fe917dafa06eb6d156d9a6e">cmd_free_strvec</a> (vline);
<a name="l01077"></a>01077   <span class="keywordflow">if</span> (describe)
<a name="l01078"></a>01078     <a class="code" href="vector_8c.html#af535d7daaa1dc88a3ac5c4451a6296f0">vector_free</a> (describe);
<a name="l01079"></a>01079 
<a name="l01080"></a>01080   <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);
<a name="l01081"></a>01081   <a class="code" href="vty_8c.html#aa88c9e2e5da06b826ac13025eefb386b">vty_redraw_line</a> (vty);
<a name="l01082"></a>01082 }
<a name="l01083"></a>01083 
<a name="l01084"></a>01084 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01085"></a><a class="code" href="vty_8c.html#a46a8ab71c3c5e63dfe0b7881cfa8f8f8">01085</a> <a class="code" href="vty_8c.html#a46a8ab71c3c5e63dfe0b7881cfa8f8f8">vty_clear_buf</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l01086"></a>01086 {
<a name="l01087"></a>01087   memset (vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>, 0, vty-&gt;<a class="code" href="structvty.html#ada832b278a60f536496555d6673cf97d">max</a>);
<a name="l01088"></a>01088 }
<a name="l01089"></a>01089 
<a name="l01090"></a>01090 <span class="comment">/* ^C stop current input and do not add command line to the history. */</span>
<a name="l01091"></a>01091 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01092"></a><a class="code" href="vty_8c.html#af1b5a37bcd266695933b5517b0e6d41b">01092</a> <a class="code" href="vty_8c.html#af1b5a37bcd266695933b5517b0e6d41b">vty_stop_input</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l01093"></a>01093 {
<a name="l01094"></a>01094   vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> = vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> = 0;
<a name="l01095"></a>01095   <a class="code" href="vty_8c.html#a46a8ab71c3c5e63dfe0b7881cfa8f8f8">vty_clear_buf</a> (vty);
<a name="l01096"></a>01096   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01097"></a>01097 
<a name="l01098"></a>01098   <span class="keywordflow">switch</span> (vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a>)
<a name="l01099"></a>01099     {
<a name="l01100"></a>01100     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>:
<a name="l01101"></a>01101     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>:
<a name="l01102"></a>01102     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acb0c5ada108352e3e869838b0ee04c3b">RESTRICTED_NODE</a>:
<a name="l01103"></a>01103       <span class="comment">/* Nothing to do. */</span>
<a name="l01104"></a>01104       <span class="keywordflow">break</span>;
<a name="l01105"></a>01105     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>:
<a name="l01106"></a>01106     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>:
<a name="l01107"></a>01107     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682af7fc20f627618eee254477289b890df3">ZEBRA_NODE</a>:
<a name="l01108"></a>01108     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682aba91035637d2e661aaea111ea200751a">RIP_NODE</a>:
<a name="l01109"></a>01109     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>:
<a name="l01110"></a>01110     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a7493d9d6392a7010c13aa962093436a7">BGP_NODE</a>:
<a name="l01111"></a>01111     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>:
<a name="l01112"></a>01112     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a53037feb34b636b5cabbcdb85698ac35">OSPF_NODE</a>:
<a name="l01113"></a>01113     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a3e34f801d98de220164f1a6b7976d3c4">OSPF6_NODE</a>:
<a name="l01114"></a>01114     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab25ba1a66148ff64a7b5aa681cc8c2dd">ISIS_NODE</a>:
<a name="l01115"></a>01115     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a17696c332f7c9a776b7ce27fab05739b">KEYCHAIN_NODE</a>:
<a name="l01116"></a>01116     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a82708770dcbadd9cbe5279a2d7d1a974">KEYCHAIN_KEY_NODE</a>:
<a name="l01117"></a>01117     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8863fd12cbe31d4555e4bfe57be8bc89">MASC_NODE</a>:
<a name="l01118"></a>01118     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>:
<a name="l01119"></a>01119       <a class="code" href="vty_8c.html#ae68c17df6974b76d0977fc41adde0f08">vty_config_unlock</a> (vty);
<a name="l01120"></a>01120       vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>;
<a name="l01121"></a>01121       <span class="keywordflow">break</span>;
<a name="l01122"></a>01122     <span class="keywordflow">default</span>:
<a name="l01123"></a>01123       <span class="comment">/* Unknown node, we have to ignore it. */</span>
<a name="l01124"></a>01124       <span class="keywordflow">break</span>;
<a name="l01125"></a>01125     }
<a name="l01126"></a>01126   <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);
<a name="l01127"></a>01127 
<a name="l01128"></a>01128   <span class="comment">/* Set history pointer to the latest one. */</span>
<a name="l01129"></a>01129   vty-&gt;<a class="code" href="structvty.html#a7baae5746026d42a5c13693d95354b19">hp</a> = vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a>;
<a name="l01130"></a>01130 }
<a name="l01131"></a>01131 
<a name="l01132"></a>01132 <span class="comment">/* Add current command line to the history buffer. */</span>
<a name="l01133"></a>01133 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01134"></a><a class="code" href="vty_8c.html#a7399bffcb99c9a604913470e51e73603">01134</a> <a class="code" href="vty_8c.html#a7399bffcb99c9a604913470e51e73603">vty_hist_add</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l01135"></a>01135 {
<a name="l01136"></a>01136   <span class="keywordtype">int</span> index;
<a name="l01137"></a>01137 
<a name="l01138"></a>01138   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> == 0)
<a name="l01139"></a>01139     <span class="keywordflow">return</span>;
<a name="l01140"></a>01140 
<a name="l01141"></a>01141   index = vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a> ? vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a> - 1 : <a class="code" href="vty_8h.html#a2c7bf19140857545865be759c8960bc4">VTY_MAXHIST</a> - 1;
<a name="l01142"></a>01142 
<a name="l01143"></a>01143   <span class="comment">/* Ignore the same string as previous one. */</span>
<a name="l01144"></a>01144   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[index])
<a name="l01145"></a>01145     <span class="keywordflow">if</span> (strcmp (vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>, vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[index]) == 0)
<a name="l01146"></a>01146       {
<a name="l01147"></a>01147       vty-&gt;<a class="code" href="structvty.html#a7baae5746026d42a5c13693d95354b19">hp</a> = vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a>;
<a name="l01148"></a>01148       <span class="keywordflow">return</span>;
<a name="l01149"></a>01149       }
<a name="l01150"></a>01150 
<a name="l01151"></a>01151   <span class="comment">/* Insert history entry. */</span>
<a name="l01152"></a>01152   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a>])
<a name="l01153"></a>01153     <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167baa0c5966641068bad0544ced1b55176b5">MTYPE_VTY_HIST</a>, vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a>]);
<a name="l01154"></a>01154   vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a>] = <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167baa0c5966641068bad0544ced1b55176b5">MTYPE_VTY_HIST</a>, vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>);
<a name="l01155"></a>01155 
<a name="l01156"></a>01156   <span class="comment">/* History index rotation. */</span>
<a name="l01157"></a>01157   vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a>++;
<a name="l01158"></a>01158   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a> == <a class="code" href="vty_8h.html#a2c7bf19140857545865be759c8960bc4">VTY_MAXHIST</a>)
<a name="l01159"></a>01159     vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a> = 0;
<a name="l01160"></a>01160 
<a name="l01161"></a>01161   vty-&gt;<a class="code" href="structvty.html#a7baae5746026d42a5c13693d95354b19">hp</a> = vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a>;
<a name="l01162"></a>01162 }
<a name="l01163"></a>01163 
<a name="l01164"></a>01164 <span class="comment">/* #define TELNET_OPTION_DEBUG */</span>
<a name="l01165"></a>01165 
<a name="l01166"></a>01166 <span class="comment">/* Get telnet window size. */</span>
<a name="l01167"></a>01167 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l01168"></a><a class="code" href="vty_8c.html#ae1bb46143e465cccc7bc8dd177b3464b">01168</a> <a class="code" href="vty_8c.html#ae1bb46143e465cccc7bc8dd177b3464b">vty_telnet_option</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *buf, <span class="keywordtype">int</span> nbytes)
<a name="l01169"></a>01169 {
<a name="l01170"></a>01170 <span class="preprocessor">#ifdef TELNET_OPTION_DEBUG</span>
<a name="l01171"></a>01171 <span class="preprocessor"></span>  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l01172"></a>01172 
<a name="l01173"></a>01173   <span class="keywordflow">for</span> (i = 0; i &lt; nbytes; i++)
<a name="l01174"></a>01174     {
<a name="l01175"></a>01175       <span class="keywordflow">switch</span> (buf[i])
<a name="l01176"></a>01176     {
<a name="l01177"></a>01177     <span class="keywordflow">case</span> IAC:
<a name="l01178"></a>01178       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;IAC &quot;</span>);
<a name="l01179"></a>01179       <span class="keywordflow">break</span>;
<a name="l01180"></a>01180     <span class="keywordflow">case</span> WILL:
<a name="l01181"></a>01181       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;WILL &quot;</span>);
<a name="l01182"></a>01182       <span class="keywordflow">break</span>;
<a name="l01183"></a>01183     <span class="keywordflow">case</span> WONT:
<a name="l01184"></a>01184       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;WONT &quot;</span>);
<a name="l01185"></a>01185       <span class="keywordflow">break</span>;
<a name="l01186"></a>01186     <span class="keywordflow">case</span> DO:
<a name="l01187"></a>01187       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;DO &quot;</span>);
<a name="l01188"></a>01188       <span class="keywordflow">break</span>;
<a name="l01189"></a>01189     <span class="keywordflow">case</span> DONT:
<a name="l01190"></a>01190       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;DONT &quot;</span>);
<a name="l01191"></a>01191       <span class="keywordflow">break</span>;
<a name="l01192"></a>01192     <span class="keywordflow">case</span> SB:
<a name="l01193"></a>01193       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;SB &quot;</span>);
<a name="l01194"></a>01194       <span class="keywordflow">break</span>;
<a name="l01195"></a>01195     <span class="keywordflow">case</span> SE:
<a name="l01196"></a>01196       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;SE &quot;</span>);
<a name="l01197"></a>01197       <span class="keywordflow">break</span>;
<a name="l01198"></a>01198     <span class="keywordflow">case</span> TELOPT_ECHO:
<a name="l01199"></a>01199       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;TELOPT_ECHO %s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01200"></a>01200       <span class="keywordflow">break</span>;
<a name="l01201"></a>01201     <span class="keywordflow">case</span> TELOPT_SGA:
<a name="l01202"></a>01202       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;TELOPT_SGA %s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01203"></a>01203       <span class="keywordflow">break</span>;
<a name="l01204"></a>01204     <span class="keywordflow">case</span> TELOPT_NAWS:
<a name="l01205"></a>01205       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;TELOPT_NAWS %s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01206"></a>01206       <span class="keywordflow">break</span>;
<a name="l01207"></a>01207     <span class="keywordflow">default</span>:
<a name="l01208"></a>01208       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%x &quot;</span>, buf[i]);
<a name="l01209"></a>01209       <span class="keywordflow">break</span>;
<a name="l01210"></a>01210     }
<a name="l01211"></a>01211     }
<a name="l01212"></a>01212   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01213"></a>01213 
<a name="l01214"></a>01214 <span class="preprocessor">#endif </span><span class="comment">/* TELNET_OPTION_DEBUG */</span>
<a name="l01215"></a>01215 
<a name="l01216"></a>01216   <span class="keywordflow">switch</span> (buf[0])
<a name="l01217"></a>01217     {
<a name="l01218"></a>01218     <span class="keywordflow">case</span> SB:
<a name="l01219"></a>01219       vty-&gt;<a class="code" href="structvty.html#a8e79b608af5753bb4a493fbaa62e3db1">sb_len</a> = 0;
<a name="l01220"></a>01220       vty-&gt;<a class="code" href="structvty.html#af43115c5fffab36e14b77b8a893a361a">iac_sb_in_progress</a> = 1;
<a name="l01221"></a>01221       <span class="keywordflow">return</span> 0;
<a name="l01222"></a>01222       <span class="keywordflow">break</span>;
<a name="l01223"></a>01223     <span class="keywordflow">case</span> SE: 
<a name="l01224"></a>01224       {
<a name="l01225"></a>01225     <span class="keywordflow">if</span> (!vty-&gt;<a class="code" href="structvty.html#af43115c5fffab36e14b77b8a893a361a">iac_sb_in_progress</a>)
<a name="l01226"></a>01226       <span class="keywordflow">return</span> 0;
<a name="l01227"></a>01227 
<a name="l01228"></a>01228     <span class="keywordflow">if</span> ((vty-&gt;<a class="code" href="structvty.html#a8e79b608af5753bb4a493fbaa62e3db1">sb_len</a> == 0) || (vty-&gt;<a class="code" href="structvty.html#a931d735f2a5e903328c5a03468655bef">sb_buf</a>[0] == <span class="charliteral">&#39;\0&#39;</span>))
<a name="l01229"></a>01229       {
<a name="l01230"></a>01230         vty-&gt;<a class="code" href="structvty.html#af43115c5fffab36e14b77b8a893a361a">iac_sb_in_progress</a> = 0;
<a name="l01231"></a>01231         <span class="keywordflow">return</span> 0;
<a name="l01232"></a>01232       }
<a name="l01233"></a>01233     <span class="keywordflow">switch</span> (vty-&gt;<a class="code" href="structvty.html#a931d735f2a5e903328c5a03468655bef">sb_buf</a>[0])
<a name="l01234"></a>01234       {
<a name="l01235"></a>01235       <span class="keywordflow">case</span> TELOPT_NAWS:
<a name="l01236"></a>01236         <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a8e79b608af5753bb4a493fbaa62e3db1">sb_len</a> != <a class="code" href="vty_8h.html#a3dc5068383c050852fa22207582a21cc">TELNET_NAWS_SB_LEN</a>)
<a name="l01237"></a>01237           <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;RFC 1073 violation detected: telnet NAWS option &quot;</span>
<a name="l01238"></a>01238             <span class="stringliteral">&quot;should send %d characters, but we received %lu&quot;</span>,
<a name="l01239"></a>01239             <a class="code" href="vty_8h.html#a3dc5068383c050852fa22207582a21cc">TELNET_NAWS_SB_LEN</a>, (u_long)vty-&gt;<a class="code" href="structvty.html#a8e79b608af5753bb4a493fbaa62e3db1">sb_len</a>);
<a name="l01240"></a>01240         <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<span class="keyword">sizeof</span>(vty-&gt;<a class="code" href="structvty.html#a931d735f2a5e903328c5a03468655bef">sb_buf</a>) &lt; <a class="code" href="vty_8h.html#a3dc5068383c050852fa22207582a21cc">TELNET_NAWS_SB_LEN</a>)
<a name="l01241"></a>01241           <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a>(<span class="stringliteral">&quot;Bug detected: sizeof(vty-&gt;sb_buf) %lu &lt; %d, &quot;</span>
<a name="l01242"></a>01242                <span class="stringliteral">&quot;too small to handle the telnet NAWS option&quot;</span>,
<a name="l01243"></a>01243                (u_long)<span class="keyword">sizeof</span>(vty-&gt;<a class="code" href="structvty.html#a931d735f2a5e903328c5a03468655bef">sb_buf</a>), <a class="code" href="vty_8h.html#a3dc5068383c050852fa22207582a21cc">TELNET_NAWS_SB_LEN</a>);
<a name="l01244"></a>01244         <span class="keywordflow">else</span>
<a name="l01245"></a>01245           {
<a name="l01246"></a>01246         vty-&gt;<a class="code" href="structvty.html#a57c305025545e9f6f58ecc68380cd6de">width</a> = ((vty-&gt;<a class="code" href="structvty.html#a931d735f2a5e903328c5a03468655bef">sb_buf</a>[1] &lt;&lt; 8)|vty-&gt;<a class="code" href="structvty.html#a931d735f2a5e903328c5a03468655bef">sb_buf</a>[2]);
<a name="l01247"></a>01247         vty-&gt;<a class="code" href="structvty.html#a89d8052878ac339006922c2151ca4ffa">height</a> = ((vty-&gt;<a class="code" href="structvty.html#a931d735f2a5e903328c5a03468655bef">sb_buf</a>[3] &lt;&lt; 8)|vty-&gt;<a class="code" href="structvty.html#a931d735f2a5e903328c5a03468655bef">sb_buf</a>[4]);
<a name="l01248"></a>01248 <span class="preprocessor">#ifdef TELNET_OPTION_DEBUG</span>
<a name="l01249"></a>01249 <span class="preprocessor"></span>        <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a>(vty, <span class="stringliteral">&quot;TELNET NAWS window size negotiation completed: &quot;</span>
<a name="l01250"></a>01250                   <span class="stringliteral">&quot;width %d, height %d%s&quot;</span>,
<a name="l01251"></a>01251             vty-&gt;<a class="code" href="structvty.html#a57c305025545e9f6f58ecc68380cd6de">width</a>, vty-&gt;<a class="code" href="structvty.html#a89d8052878ac339006922c2151ca4ffa">height</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01252"></a>01252 <span class="preprocessor">#endif</span>
<a name="l01253"></a>01253 <span class="preprocessor"></span>          }
<a name="l01254"></a>01254         <span class="keywordflow">break</span>;
<a name="l01255"></a>01255       }
<a name="l01256"></a>01256     vty-&gt;<a class="code" href="structvty.html#af43115c5fffab36e14b77b8a893a361a">iac_sb_in_progress</a> = 0;
<a name="l01257"></a>01257     <span class="keywordflow">return</span> 0;
<a name="l01258"></a>01258     <span class="keywordflow">break</span>;
<a name="l01259"></a>01259       }
<a name="l01260"></a>01260     <span class="keywordflow">default</span>:
<a name="l01261"></a>01261       <span class="keywordflow">break</span>;
<a name="l01262"></a>01262     }
<a name="l01263"></a>01263   <span class="keywordflow">return</span> 1;
<a name="l01264"></a>01264 }
<a name="l01265"></a>01265 
<a name="l01266"></a>01266 <span class="comment">/* Execute current command line. */</span>
<a name="l01267"></a>01267 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l01268"></a><a class="code" href="vty_8c.html#ad051d84b39c71fdbd554626c26f2b8a0">01268</a> <a class="code" href="vty_8c.html#ad051d84b39c71fdbd554626c26f2b8a0">vty_execute</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l01269"></a>01269 {
<a name="l01270"></a>01270   <span class="keywordtype">int</span> ret;
<a name="l01271"></a>01271 
<a name="l01272"></a>01272   ret = <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01273"></a>01273 
<a name="l01274"></a>01274   <span class="keywordflow">switch</span> (vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a>)
<a name="l01275"></a>01275     {
<a name="l01276"></a>01276     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a302e1f38939b1a74bc848007bb70bfdf">AUTH_NODE</a>:
<a name="l01277"></a>01277     <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a96b74116564789f517eef9284f18b472">AUTH_ENABLE_NODE</a>:
<a name="l01278"></a>01278       <a class="code" href="vty_8c.html#a819a97da4f2899ac41493be8c6b0e238">vty_auth</a> (vty, vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>);
<a name="l01279"></a>01279       <span class="keywordflow">break</span>;
<a name="l01280"></a>01280     <span class="keywordflow">default</span>:
<a name="l01281"></a>01281       ret = <a class="code" href="vty_8c.html#ad5461715b919e20f130c9f4b586cd42d">vty_command</a> (vty, vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>);
<a name="l01282"></a>01282       <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a918d01c53936e81c45a177b0ceda3eca">type</a> == VTY_TERM)
<a name="l01283"></a>01283     <a class="code" href="vty_8c.html#a7399bffcb99c9a604913470e51e73603">vty_hist_add</a> (vty);
<a name="l01284"></a>01284       <span class="keywordflow">break</span>;
<a name="l01285"></a>01285     }
<a name="l01286"></a>01286 
<a name="l01287"></a>01287   <span class="comment">/* Clear command line buffer. */</span>
<a name="l01288"></a>01288   vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> = vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> = 0;
<a name="l01289"></a>01289   <a class="code" href="vty_8c.html#a46a8ab71c3c5e63dfe0b7881cfa8f8f8">vty_clear_buf</a> (vty);
<a name="l01290"></a>01290 
<a name="l01291"></a>01291   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> != VTY_CLOSE )
<a name="l01292"></a>01292     <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);
<a name="l01293"></a>01293 
<a name="l01294"></a>01294   <span class="keywordflow">return</span> ret;
<a name="l01295"></a>01295 }
<a name="l01296"></a>01296 
<a name="l01297"></a><a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">01297</a> <span class="preprocessor">#define CONTROL(X)  ((X) - &#39;@&#39;)</span>
<a name="l01298"></a><a class="code" href="vty_8c.html#acf239d95250577af6d34d80d70aac760">01298</a> <span class="preprocessor"></span><span class="preprocessor">#define VTY_NORMAL     0</span>
<a name="l01299"></a><a class="code" href="vty_8c.html#a3aac53820dc12306e1c0d140f1f7bb56">01299</a> <span class="preprocessor"></span><span class="preprocessor">#define VTY_PRE_ESCAPE 1</span>
<a name="l01300"></a><a class="code" href="vty_8c.html#adee5f2176eb8e53a301dd8d0f377251b">01300</a> <span class="preprocessor"></span><span class="preprocessor">#define VTY_ESCAPE     2</span>
<a name="l01301"></a>01301 <span class="preprocessor"></span>
<a name="l01302"></a>01302 <span class="comment">/* Escape character command map. */</span>
<a name="l01303"></a>01303 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01304"></a><a class="code" href="vty_8c.html#ab9ea51a34c5694514373852230570eb2">01304</a> <a class="code" href="vty_8c.html#ab9ea51a34c5694514373852230570eb2">vty_escape_map</a> (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> c, <span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l01305"></a>01305 {
<a name="l01306"></a>01306   <span class="keywordflow">switch</span> (c)
<a name="l01307"></a>01307     {
<a name="l01308"></a>01308     <span class="keywordflow">case</span> (<span class="charliteral">&#39;A&#39;</span>):
<a name="l01309"></a>01309       <a class="code" href="vty_8c.html#a8bae6998c5a99c023cf77eab3c4b8ce2">vty_previous_line</a> (vty);
<a name="l01310"></a>01310       <span class="keywordflow">break</span>;
<a name="l01311"></a>01311     <span class="keywordflow">case</span> (<span class="charliteral">&#39;B&#39;</span>):
<a name="l01312"></a>01312       <a class="code" href="vty_8c.html#ac933bc02bc1fcb0c345e08356a1090cc">vty_next_line</a> (vty);
<a name="l01313"></a>01313       <span class="keywordflow">break</span>;
<a name="l01314"></a>01314     <span class="keywordflow">case</span> (<span class="charliteral">&#39;C&#39;</span>):
<a name="l01315"></a>01315       <a class="code" href="vty_8c.html#adb129e2c5ad62108a56cdacddb7f57b8">vty_forward_char</a> (vty);
<a name="l01316"></a>01316       <span class="keywordflow">break</span>;
<a name="l01317"></a>01317     <span class="keywordflow">case</span> (<span class="charliteral">&#39;D&#39;</span>):
<a name="l01318"></a>01318       <a class="code" href="vty_8c.html#ae83b887d99a0493283dad484e58d16b8">vty_backward_char</a> (vty);
<a name="l01319"></a>01319       <span class="keywordflow">break</span>;
<a name="l01320"></a>01320     <span class="keywordflow">default</span>:
<a name="l01321"></a>01321       <span class="keywordflow">break</span>;
<a name="l01322"></a>01322     }
<a name="l01323"></a>01323 
<a name="l01324"></a>01324   <span class="comment">/* Go back to normal mode. */</span>
<a name="l01325"></a>01325   vty-&gt;<a class="code" href="structvty.html#a5b11c8d6a7cc2ff7cad6a62fa26ffde5">escape</a> = <a class="code" href="vty_8c.html#acf239d95250577af6d34d80d70aac760">VTY_NORMAL</a>;
<a name="l01326"></a>01326 }
<a name="l01327"></a>01327 
<a name="l01328"></a>01328 <span class="comment">/* Quit print out to the buffer. */</span>
<a name="l01329"></a>01329 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01330"></a><a class="code" href="vty_8c.html#adfdcfb63a06407c35b1c1221fc523a1e">01330</a> <a class="code" href="vty_8c.html#adfdcfb63a06407c35b1c1221fc523a1e">vty_buffer_reset</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l01331"></a>01331 {
<a name="l01332"></a>01332   <a class="code" href="buffer_8c.html#a91ad0ff694ccef1876a3e8d8a3b05ffa">buffer_reset</a> (vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>);
<a name="l01333"></a>01333   <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);
<a name="l01334"></a>01334   <a class="code" href="vty_8c.html#aa88c9e2e5da06b826ac13025eefb386b">vty_redraw_line</a> (vty);
<a name="l01335"></a>01335 }
<a name="l01336"></a>01336 
<a name="l01337"></a>01337 <span class="comment">/* Read data via vty socket. */</span>
<a name="l01338"></a>01338 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l01339"></a><a class="code" href="vty_8c.html#aef96c1c84762b295bd4eb8149b8c7cd7">01339</a> <a class="code" href="vty_8c.html#aef96c1c84762b295bd4eb8149b8c7cd7">vty_read</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l01340"></a>01340 {
<a name="l01341"></a>01341   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l01342"></a>01342   <span class="keywordtype">int</span> nbytes;
<a name="l01343"></a>01343   <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> buf[<a class="code" href="vty_8h.html#a79b1a7ad718c49feb5febb6a5be6f5e8">VTY_READ_BUFSIZ</a>];
<a name="l01344"></a>01344 
<a name="l01345"></a>01345   <span class="keywordtype">int</span> vty_sock = <a class="code" href="thread_8h.html#a89bd56f991717646441f9dffc010d4f5">THREAD_FD</a> (thread);
<a name="l01346"></a>01346   <span class="keyword">struct </span><a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a> = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l01347"></a>01347   vty-&gt;<a class="code" href="structvty.html#a5d16168af87165fddd2aa6612c9740f1">t_read</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01348"></a>01348 
<a name="l01349"></a>01349   <span class="comment">/* Read raw data from socket */</span>
<a name="l01350"></a>01350   <span class="keywordflow">if</span> ((nbytes = read (vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>, buf, <a class="code" href="vty_8h.html#a79b1a7ad718c49feb5febb6a5be6f5e8">VTY_READ_BUFSIZ</a>)) &lt;= 0)
<a name="l01351"></a>01351     {
<a name="l01352"></a>01352       <span class="keywordflow">if</span> (nbytes &lt; 0)
<a name="l01353"></a>01353     {
<a name="l01354"></a>01354       <span class="keywordflow">if</span> (<a class="code" href="network_8h.html#a45b38a31650d3cee8087360351384d9e">ERRNO_IO_RETRY</a>(errno))
<a name="l01355"></a>01355         {
<a name="l01356"></a>01356           <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea9ed3db9f85ae6bdc30382d62bc01a807">VTY_READ</a>, vty_sock, vty);
<a name="l01357"></a>01357           <span class="keywordflow">return</span> 0;
<a name="l01358"></a>01358         }
<a name="l01359"></a>01359       vty-&gt;<a class="code" href="structvty.html#ace142d1b856ed1776e4a48684222b01f">monitor</a> = 0; <span class="comment">/* disable monitoring to avoid infinite recursion */</span>
<a name="l01360"></a>01360       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;%s: read error on vty client fd %d, closing: %s&quot;</span>,
<a name="l01361"></a>01361             __func__, vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a>(errno));
<a name="l01362"></a>01362     }
<a name="l01363"></a>01363       <a class="code" href="buffer_8c.html#a91ad0ff694ccef1876a3e8d8a3b05ffa">buffer_reset</a>(vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>);
<a name="l01364"></a>01364       vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> = <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6ab568d9eaea4e6aa93ae7fb8a7c65d4cb">VTY_CLOSE</a>;
<a name="l01365"></a>01365     }
<a name="l01366"></a>01366 
<a name="l01367"></a>01367   <span class="keywordflow">for</span> (i = 0; i &lt; nbytes; i++) 
<a name="l01368"></a>01368     {
<a name="l01369"></a>01369       <span class="keywordflow">if</span> (buf[i] == IAC)
<a name="l01370"></a>01370     {
<a name="l01371"></a>01371       <span class="keywordflow">if</span> (!vty-&gt;<a class="code" href="structvty.html#a84a9697ba7d4b0b1fc67da51a44cc46b">iac</a>)
<a name="l01372"></a>01372         {
<a name="l01373"></a>01373           vty-&gt;<a class="code" href="structvty.html#a84a9697ba7d4b0b1fc67da51a44cc46b">iac</a> = 1;
<a name="l01374"></a>01374           <span class="keywordflow">continue</span>;
<a name="l01375"></a>01375         }
<a name="l01376"></a>01376       <span class="keywordflow">else</span>
<a name="l01377"></a>01377         {
<a name="l01378"></a>01378           vty-&gt;<a class="code" href="structvty.html#a84a9697ba7d4b0b1fc67da51a44cc46b">iac</a> = 0;
<a name="l01379"></a>01379         }
<a name="l01380"></a>01380     }
<a name="l01381"></a>01381       
<a name="l01382"></a>01382       <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#af43115c5fffab36e14b77b8a893a361a">iac_sb_in_progress</a> &amp;&amp; !vty-&gt;<a class="code" href="structvty.html#a84a9697ba7d4b0b1fc67da51a44cc46b">iac</a>)
<a name="l01383"></a>01383     {
<a name="l01384"></a>01384         <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a8e79b608af5753bb4a493fbaa62e3db1">sb_len</a> &lt; <span class="keyword">sizeof</span>(vty-&gt;<a class="code" href="structvty.html#a931d735f2a5e903328c5a03468655bef">sb_buf</a>))
<a name="l01385"></a>01385           vty-&gt;<a class="code" href="structvty.html#a931d735f2a5e903328c5a03468655bef">sb_buf</a>[vty-&gt;<a class="code" href="structvty.html#a8e79b608af5753bb4a493fbaa62e3db1">sb_len</a>] = buf[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>];
<a name="l01386"></a>01386         vty-&gt;<a class="code" href="structvty.html#a8e79b608af5753bb4a493fbaa62e3db1">sb_len</a>++;
<a name="l01387"></a>01387         <span class="keywordflow">continue</span>;
<a name="l01388"></a>01388     }
<a name="l01389"></a>01389 
<a name="l01390"></a>01390       <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a84a9697ba7d4b0b1fc67da51a44cc46b">iac</a>)
<a name="l01391"></a>01391     {
<a name="l01392"></a>01392       <span class="comment">/* In case of telnet command */</span>
<a name="l01393"></a>01393       <span class="keywordtype">int</span> ret = 0;
<a name="l01394"></a>01394       ret = <a class="code" href="vty_8c.html#ae1bb46143e465cccc7bc8dd177b3464b">vty_telnet_option</a> (vty, buf + i, nbytes - i);
<a name="l01395"></a>01395       vty-&gt;<a class="code" href="structvty.html#a84a9697ba7d4b0b1fc67da51a44cc46b">iac</a> = 0;
<a name="l01396"></a>01396       i += ret;
<a name="l01397"></a>01397       <span class="keywordflow">continue</span>;
<a name="l01398"></a>01398     }
<a name="l01399"></a>01399             
<a name="l01400"></a>01400 
<a name="l01401"></a>01401       <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> == <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6a77994ab451230a1056115ab3b0c1f6e0">VTY_MORE</a>)
<a name="l01402"></a>01402     {
<a name="l01403"></a>01403       <span class="keywordflow">switch</span> (buf[i])
<a name="l01404"></a>01404         {
<a name="l01405"></a>01405         <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;C&#39;</span>):
<a name="l01406"></a>01406         <span class="keywordflow">case</span> <span class="charliteral">&#39;q&#39;</span>:
<a name="l01407"></a>01407         <span class="keywordflow">case</span> <span class="charliteral">&#39;Q&#39;</span>:
<a name="l01408"></a>01408           <a class="code" href="vty_8c.html#adfdcfb63a06407c35b1c1221fc523a1e">vty_buffer_reset</a> (vty);
<a name="l01409"></a>01409           <span class="keywordflow">break</span>;
<a name="l01410"></a>01410 <span class="preprocessor">#if 0 </span><span class="comment">/* More line does not work for &quot;show ip bgp&quot;.  */</span>
<a name="l01411"></a>01411         <span class="keywordflow">case</span> <span class="charliteral">&#39;\n&#39;</span>:
<a name="l01412"></a>01412         <span class="keywordflow">case</span> <span class="charliteral">&#39;\r&#39;</span>:
<a name="l01413"></a>01413           vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> = <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6a0d0fcf88504c1b17beaca80dfdc842fe">VTY_MORELINE</a>;
<a name="l01414"></a>01414           <span class="keywordflow">break</span>;
<a name="l01415"></a>01415 <span class="preprocessor">#endif</span>
<a name="l01416"></a>01416 <span class="preprocessor"></span>        <span class="keywordflow">default</span>:
<a name="l01417"></a>01417           <span class="keywordflow">break</span>;
<a name="l01418"></a>01418         }
<a name="l01419"></a>01419       <span class="keywordflow">continue</span>;
<a name="l01420"></a>01420     }
<a name="l01421"></a>01421 
<a name="l01422"></a>01422       <span class="comment">/* Escape character. */</span>
<a name="l01423"></a>01423       <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a5b11c8d6a7cc2ff7cad6a62fa26ffde5">escape</a> == <a class="code" href="vty_8c.html#adee5f2176eb8e53a301dd8d0f377251b">VTY_ESCAPE</a>)
<a name="l01424"></a>01424     {
<a name="l01425"></a>01425       <a class="code" href="vty_8c.html#ab9ea51a34c5694514373852230570eb2">vty_escape_map</a> (buf[i], vty);
<a name="l01426"></a>01426       <span class="keywordflow">continue</span>;
<a name="l01427"></a>01427     }
<a name="l01428"></a>01428 
<a name="l01429"></a>01429       <span class="comment">/* Pre-escape status. */</span>
<a name="l01430"></a>01430       <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a5b11c8d6a7cc2ff7cad6a62fa26ffde5">escape</a> == <a class="code" href="vty_8c.html#a3aac53820dc12306e1c0d140f1f7bb56">VTY_PRE_ESCAPE</a>)
<a name="l01431"></a>01431     {
<a name="l01432"></a>01432       <span class="keywordflow">switch</span> (buf[i])
<a name="l01433"></a>01433         {
<a name="l01434"></a>01434         <span class="keywordflow">case</span> <span class="charliteral">&#39;[&#39;</span>:
<a name="l01435"></a>01435           vty-&gt;<a class="code" href="structvty.html#a5b11c8d6a7cc2ff7cad6a62fa26ffde5">escape</a> = <a class="code" href="vty_8c.html#adee5f2176eb8e53a301dd8d0f377251b">VTY_ESCAPE</a>;
<a name="l01436"></a>01436           <span class="keywordflow">break</span>;
<a name="l01437"></a>01437         <span class="keywordflow">case</span> <span class="charliteral">&#39;b&#39;</span>:
<a name="l01438"></a>01438           <a class="code" href="vty_8c.html#ac633697855f1c48d8227645f6fbb624e">vty_backward_word</a> (vty);
<a name="l01439"></a>01439           vty-&gt;<a class="code" href="structvty.html#a5b11c8d6a7cc2ff7cad6a62fa26ffde5">escape</a> = <a class="code" href="vty_8c.html#acf239d95250577af6d34d80d70aac760">VTY_NORMAL</a>;
<a name="l01440"></a>01440           <span class="keywordflow">break</span>;
<a name="l01441"></a>01441         <span class="keywordflow">case</span> <span class="charliteral">&#39;f&#39;</span>:
<a name="l01442"></a>01442           <a class="code" href="vty_8c.html#a50635cc5566b2f49e31e01cb168a83d0">vty_forward_word</a> (vty);
<a name="l01443"></a>01443           vty-&gt;<a class="code" href="structvty.html#a5b11c8d6a7cc2ff7cad6a62fa26ffde5">escape</a> = <a class="code" href="vty_8c.html#acf239d95250577af6d34d80d70aac760">VTY_NORMAL</a>;
<a name="l01444"></a>01444           <span class="keywordflow">break</span>;
<a name="l01445"></a>01445         <span class="keywordflow">case</span> <span class="charliteral">&#39;d&#39;</span>:
<a name="l01446"></a>01446           <a class="code" href="vty_8c.html#a4e12c6d2e92f643659d6c26ff0347aa2">vty_forward_kill_word</a> (vty);
<a name="l01447"></a>01447           vty-&gt;<a class="code" href="structvty.html#a5b11c8d6a7cc2ff7cad6a62fa26ffde5">escape</a> = <a class="code" href="vty_8c.html#acf239d95250577af6d34d80d70aac760">VTY_NORMAL</a>;
<a name="l01448"></a>01448           <span class="keywordflow">break</span>;
<a name="l01449"></a>01449         <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;H&#39;</span>):
<a name="l01450"></a>01450         <span class="keywordflow">case</span> 0x7f:
<a name="l01451"></a>01451           <a class="code" href="vty_8c.html#afd97712a47228ecb91064b09717cc74c">vty_backward_kill_word</a> (vty);
<a name="l01452"></a>01452           vty-&gt;<a class="code" href="structvty.html#a5b11c8d6a7cc2ff7cad6a62fa26ffde5">escape</a> = <a class="code" href="vty_8c.html#acf239d95250577af6d34d80d70aac760">VTY_NORMAL</a>;
<a name="l01453"></a>01453           <span class="keywordflow">break</span>;
<a name="l01454"></a>01454         <span class="keywordflow">default</span>:
<a name="l01455"></a>01455           vty-&gt;<a class="code" href="structvty.html#a5b11c8d6a7cc2ff7cad6a62fa26ffde5">escape</a> = <a class="code" href="vty_8c.html#acf239d95250577af6d34d80d70aac760">VTY_NORMAL</a>;
<a name="l01456"></a>01456           <span class="keywordflow">break</span>;
<a name="l01457"></a>01457         }
<a name="l01458"></a>01458       <span class="keywordflow">continue</span>;
<a name="l01459"></a>01459     }
<a name="l01460"></a>01460 
<a name="l01461"></a>01461       <span class="keywordflow">switch</span> (buf[i])
<a name="l01462"></a>01462     {
<a name="l01463"></a>01463     <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;A&#39;</span>):
<a name="l01464"></a>01464       <a class="code" href="vty_8c.html#ace10a61328b0a67284a43e26d690e735">vty_beginning_of_line</a> (vty);
<a name="l01465"></a>01465       <span class="keywordflow">break</span>;
<a name="l01466"></a>01466     <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;B&#39;</span>):
<a name="l01467"></a>01467       <a class="code" href="vty_8c.html#ae83b887d99a0493283dad484e58d16b8">vty_backward_char</a> (vty);
<a name="l01468"></a>01468       <span class="keywordflow">break</span>;
<a name="l01469"></a>01469     <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;C&#39;</span>):
<a name="l01470"></a>01470       <a class="code" href="vty_8c.html#af1b5a37bcd266695933b5517b0e6d41b">vty_stop_input</a> (vty);
<a name="l01471"></a>01471       <span class="keywordflow">break</span>;
<a name="l01472"></a>01472     <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;D&#39;</span>):
<a name="l01473"></a>01473       <a class="code" href="vty_8c.html#a843699a9603df9fec1f79aa648daeeaa">vty_delete_char</a> (vty);
<a name="l01474"></a>01474       <span class="keywordflow">break</span>;
<a name="l01475"></a>01475     <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;E&#39;</span>):
<a name="l01476"></a>01476       <a class="code" href="vty_8c.html#a396592bed9a5f245d8607e02b27ae861">vty_end_of_line</a> (vty);
<a name="l01477"></a>01477       <span class="keywordflow">break</span>;
<a name="l01478"></a>01478     <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;F&#39;</span>):
<a name="l01479"></a>01479       <a class="code" href="vty_8c.html#adb129e2c5ad62108a56cdacddb7f57b8">vty_forward_char</a> (vty);
<a name="l01480"></a>01480       <span class="keywordflow">break</span>;
<a name="l01481"></a>01481     <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;H&#39;</span>):
<a name="l01482"></a>01482     <span class="keywordflow">case</span> 0x7f:
<a name="l01483"></a>01483       <a class="code" href="vty_8c.html#ad96cb2b5ea01585f597cd584553e5ec6">vty_delete_backward_char</a> (vty);
<a name="l01484"></a>01484       <span class="keywordflow">break</span>;
<a name="l01485"></a>01485     <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;K&#39;</span>):
<a name="l01486"></a>01486       <a class="code" href="vty_8c.html#a62d806365d5e4914bea1e058eefb895a">vty_kill_line</a> (vty);
<a name="l01487"></a>01487       <span class="keywordflow">break</span>;
<a name="l01488"></a>01488     <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;N&#39;</span>):
<a name="l01489"></a>01489       <a class="code" href="vty_8c.html#ac933bc02bc1fcb0c345e08356a1090cc">vty_next_line</a> (vty);
<a name="l01490"></a>01490       <span class="keywordflow">break</span>;
<a name="l01491"></a>01491     <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;P&#39;</span>):
<a name="l01492"></a>01492       <a class="code" href="vty_8c.html#a8bae6998c5a99c023cf77eab3c4b8ce2">vty_previous_line</a> (vty);
<a name="l01493"></a>01493       <span class="keywordflow">break</span>;
<a name="l01494"></a>01494     <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;T&#39;</span>):
<a name="l01495"></a>01495       <a class="code" href="vty_8c.html#afd4a3c3a366c9078aa632e04b34e7d2c">vty_transpose_chars</a> (vty);
<a name="l01496"></a>01496       <span class="keywordflow">break</span>;
<a name="l01497"></a>01497     <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;U&#39;</span>):
<a name="l01498"></a>01498       <a class="code" href="vty_8c.html#a5739e6a00dcae7a4fab7540e19454c3e">vty_kill_line_from_beginning</a> (vty);
<a name="l01499"></a>01499       <span class="keywordflow">break</span>;
<a name="l01500"></a>01500     <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;W&#39;</span>):
<a name="l01501"></a>01501       <a class="code" href="vty_8c.html#afd97712a47228ecb91064b09717cc74c">vty_backward_kill_word</a> (vty);
<a name="l01502"></a>01502       <span class="keywordflow">break</span>;
<a name="l01503"></a>01503     <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;Z&#39;</span>):
<a name="l01504"></a>01504       <a class="code" href="vty_8c.html#a763be1552ab8388b9f9467f363d82049">vty_end_config</a> (vty);
<a name="l01505"></a>01505       <span class="keywordflow">break</span>;
<a name="l01506"></a>01506     <span class="keywordflow">case</span> <span class="charliteral">&#39;\n&#39;</span>:
<a name="l01507"></a>01507     <span class="keywordflow">case</span> <span class="charliteral">&#39;\r&#39;</span>:
<a name="l01508"></a>01508       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01509"></a>01509       <a class="code" href="vty_8c.html#ad051d84b39c71fdbd554626c26f2b8a0">vty_execute</a> (vty);
<a name="l01510"></a>01510       <span class="keywordflow">break</span>;
<a name="l01511"></a>01511     <span class="keywordflow">case</span> <span class="charliteral">&#39;\t&#39;</span>:
<a name="l01512"></a>01512       <a class="code" href="vty_8c.html#ad72e0680a6ba30787728859175d70bc8">vty_complete_command</a> (vty);
<a name="l01513"></a>01513       <span class="keywordflow">break</span>;
<a name="l01514"></a>01514     <span class="keywordflow">case</span> <span class="charliteral">&#39;?&#39;</span>:
<a name="l01515"></a>01515       <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a302e1f38939b1a74bc848007bb70bfdf">AUTH_NODE</a> || vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a96b74116564789f517eef9284f18b472">AUTH_ENABLE_NODE</a>)
<a name="l01516"></a>01516         <a class="code" href="vty_8c.html#a4d876e82ce61720dead15aac07e29c30">vty_self_insert</a> (vty, buf[i]);
<a name="l01517"></a>01517       <span class="keywordflow">else</span>
<a name="l01518"></a>01518         <a class="code" href="vty_8c.html#a39986e2365dcda01161b8497a4a9b83b">vty_describe_command</a> (vty);
<a name="l01519"></a>01519       <span class="keywordflow">break</span>;
<a name="l01520"></a>01520     <span class="keywordflow">case</span> <span class="charliteral">&#39;\033&#39;</span>:
<a name="l01521"></a>01521       <span class="keywordflow">if</span> (i + 1 &lt; nbytes &amp;&amp; buf[i + 1] == <span class="charliteral">&#39;[&#39;</span>)
<a name="l01522"></a>01522         {
<a name="l01523"></a>01523           vty-&gt;<a class="code" href="structvty.html#a5b11c8d6a7cc2ff7cad6a62fa26ffde5">escape</a> = <a class="code" href="vty_8c.html#adee5f2176eb8e53a301dd8d0f377251b">VTY_ESCAPE</a>;
<a name="l01524"></a>01524           i++;
<a name="l01525"></a>01525         }
<a name="l01526"></a>01526       <span class="keywordflow">else</span>
<a name="l01527"></a>01527         vty-&gt;<a class="code" href="structvty.html#a5b11c8d6a7cc2ff7cad6a62fa26ffde5">escape</a> = <a class="code" href="vty_8c.html#a3aac53820dc12306e1c0d140f1f7bb56">VTY_PRE_ESCAPE</a>;
<a name="l01528"></a>01528       <span class="keywordflow">break</span>;
<a name="l01529"></a>01529     <span class="keywordflow">default</span>:
<a name="l01530"></a>01530       <span class="keywordflow">if</span> (buf[i] &gt; 31 &amp;&amp; buf[i] &lt; 127)
<a name="l01531"></a>01531         <a class="code" href="vty_8c.html#a4d876e82ce61720dead15aac07e29c30">vty_self_insert</a> (vty, buf[i]);
<a name="l01532"></a>01532       <span class="keywordflow">break</span>;
<a name="l01533"></a>01533     }
<a name="l01534"></a>01534     }
<a name="l01535"></a>01535 
<a name="l01536"></a>01536   <span class="comment">/* Check status. */</span>
<a name="l01537"></a>01537   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> == <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6ab568d9eaea4e6aa93ae7fb8a7c65d4cb">VTY_CLOSE</a>)
<a name="l01538"></a>01538     <a class="code" href="vty_8c.html#af1d7e2c952dfb90e0a7e2bbe194dedfb">vty_close</a> (vty);
<a name="l01539"></a>01539   <span class="keywordflow">else</span>
<a name="l01540"></a>01540     {
<a name="l01541"></a>01541       <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea73e4d70c7cc9c2560723e639332d7f2d">VTY_WRITE</a>, vty_sock, vty);
<a name="l01542"></a>01542       <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea9ed3db9f85ae6bdc30382d62bc01a807">VTY_READ</a>, vty_sock, vty);
<a name="l01543"></a>01543     }
<a name="l01544"></a>01544   <span class="keywordflow">return</span> 0;
<a name="l01545"></a>01545 }
<a name="l01546"></a>01546 
<a name="l01547"></a>01547 <span class="comment">/* Flush buffer to the vty. */</span>
<a name="l01548"></a>01548 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l01549"></a><a class="code" href="vty_8c.html#a011ab81751a98ad0b5ecb28d6b3a29b2">01549</a> <a class="code" href="vty_8c.html#a011ab81751a98ad0b5ecb28d6b3a29b2">vty_flush</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l01550"></a>01550 {
<a name="l01551"></a>01551   <span class="keywordtype">int</span> erase;
<a name="l01552"></a>01552   <a class="code" href="buffer_8h.html#a11b72623a9601834584c5ecf08dd6e27">buffer_status_t</a> flushrc;
<a name="l01553"></a>01553   <span class="keywordtype">int</span> vty_sock = <a class="code" href="thread_8h.html#a89bd56f991717646441f9dffc010d4f5">THREAD_FD</a> (thread);
<a name="l01554"></a>01554   <span class="keyword">struct </span><a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a> = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l01555"></a>01555 
<a name="l01556"></a>01556   vty-&gt;<a class="code" href="structvty.html#a4feadf59b37669005dd5cdb364a18ccf">t_write</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01557"></a>01557 
<a name="l01558"></a>01558   <span class="comment">/* Tempolary disable read thread. */</span>
<a name="l01559"></a>01559   <span class="keywordflow">if</span> ((vty-&gt;<a class="code" href="structvty.html#af36ed88d29c821bf8aa454cf8a36391a">lines</a> == 0) &amp;&amp; vty-&gt;<a class="code" href="structvty.html#a5d16168af87165fddd2aa6612c9740f1">t_read</a>)
<a name="l01560"></a>01560     {
<a name="l01561"></a>01561       <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (vty-&gt;<a class="code" href="structvty.html#a5d16168af87165fddd2aa6612c9740f1">t_read</a>);
<a name="l01562"></a>01562       vty-&gt;<a class="code" href="structvty.html#a5d16168af87165fddd2aa6612c9740f1">t_read</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01563"></a>01563     }
<a name="l01564"></a>01564 
<a name="l01565"></a>01565   <span class="comment">/* Function execution continue. */</span>
<a name="l01566"></a>01566   erase = ((vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> == <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6a77994ab451230a1056115ab3b0c1f6e0">VTY_MORE</a> || vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> == <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6a0d0fcf88504c1b17beaca80dfdc842fe">VTY_MORELINE</a>));
<a name="l01567"></a>01567 
<a name="l01568"></a>01568   <span class="comment">/* N.B. if width is 0, that means we don&#39;t know the window size. */</span>
<a name="l01569"></a>01569   <span class="keywordflow">if</span> ((vty-&gt;<a class="code" href="structvty.html#af36ed88d29c821bf8aa454cf8a36391a">lines</a> == 0) || (vty-&gt;<a class="code" href="structvty.html#a57c305025545e9f6f58ecc68380cd6de">width</a> == 0))
<a name="l01570"></a>01570     flushrc = <a class="code" href="buffer_8c.html#a3df3e577fcbeec460e3ddab6bc6f59ec">buffer_flush_available</a>(vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>, vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>);
<a name="l01571"></a>01571   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> == <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6a0d0fcf88504c1b17beaca80dfdc842fe">VTY_MORELINE</a>)
<a name="l01572"></a>01572     flushrc = <a class="code" href="buffer_8c.html#ac111697dec4319bed2d0abd7aa32eab7">buffer_flush_window</a>(vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>, vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>, vty-&gt;<a class="code" href="structvty.html#a57c305025545e9f6f58ecc68380cd6de">width</a>,
<a name="l01573"></a>01573                   1, erase, 0);
<a name="l01574"></a>01574   <span class="keywordflow">else</span>
<a name="l01575"></a>01575     flushrc = <a class="code" href="buffer_8c.html#ac111697dec4319bed2d0abd7aa32eab7">buffer_flush_window</a>(vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>, vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>, vty-&gt;<a class="code" href="structvty.html#a57c305025545e9f6f58ecc68380cd6de">width</a>,
<a name="l01576"></a>01576                   vty-&gt;<a class="code" href="structvty.html#af36ed88d29c821bf8aa454cf8a36391a">lines</a> &gt;= 0 ? vty-&gt;<a class="code" href="structvty.html#af36ed88d29c821bf8aa454cf8a36391a">lines</a> :
<a name="l01577"></a>01577                             vty-&gt;<a class="code" href="structvty.html#a89d8052878ac339006922c2151ca4ffa">height</a>,
<a name="l01578"></a>01578                   erase, 0);
<a name="l01579"></a>01579   <span class="keywordflow">switch</span> (flushrc)
<a name="l01580"></a>01580     {
<a name="l01581"></a>01581     <span class="keywordflow">case</span> <a class="code" href="buffer_8h.html#a11b72623a9601834584c5ecf08dd6e27a6185688e62ce527910fd779f2093c6f1">BUFFER_ERROR</a>:
<a name="l01582"></a>01582       vty-&gt;<a class="code" href="structvty.html#ace142d1b856ed1776e4a48684222b01f">monitor</a> = 0; <span class="comment">/* disable monitoring to avoid infinite recursion */</span>
<a name="l01583"></a>01583       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;buffer_flush failed on vty client fd %d, closing&quot;</span>,
<a name="l01584"></a>01584         vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>);
<a name="l01585"></a>01585       <a class="code" href="buffer_8c.html#a91ad0ff694ccef1876a3e8d8a3b05ffa">buffer_reset</a>(vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>);
<a name="l01586"></a>01586       <a class="code" href="vty_8c.html#af1d7e2c952dfb90e0a7e2bbe194dedfb">vty_close</a>(vty);
<a name="l01587"></a>01587       <span class="keywordflow">return</span> 0;
<a name="l01588"></a>01588     <span class="keywordflow">case</span> <a class="code" href="buffer_8h.html#a11b72623a9601834584c5ecf08dd6e27a78d7168c875c46a0fbb5835cd160e2ba">BUFFER_EMPTY</a>:
<a name="l01589"></a>01589       <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> == <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6ab568d9eaea4e6aa93ae7fb8a7c65d4cb">VTY_CLOSE</a>)
<a name="l01590"></a>01590     <a class="code" href="vty_8c.html#af1d7e2c952dfb90e0a7e2bbe194dedfb">vty_close</a> (vty);
<a name="l01591"></a>01591       <span class="keywordflow">else</span>
<a name="l01592"></a>01592     {
<a name="l01593"></a>01593       vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> = <a class="code" href="vty_8c.html#acf239d95250577af6d34d80d70aac760">VTY_NORMAL</a>;
<a name="l01594"></a>01594       <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#af36ed88d29c821bf8aa454cf8a36391a">lines</a> == 0)
<a name="l01595"></a>01595         <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea9ed3db9f85ae6bdc30382d62bc01a807">VTY_READ</a>, vty_sock, vty);
<a name="l01596"></a>01596     }
<a name="l01597"></a>01597       <span class="keywordflow">break</span>;
<a name="l01598"></a>01598     <span class="keywordflow">case</span> <a class="code" href="buffer_8h.html#a11b72623a9601834584c5ecf08dd6e27a6a5c775497aad93877d86b6a334de110">BUFFER_PENDING</a>:
<a name="l01599"></a>01599       <span class="comment">/* There is more data waiting to be written. */</span>
<a name="l01600"></a>01600       vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> = <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6a77994ab451230a1056115ab3b0c1f6e0">VTY_MORE</a>;
<a name="l01601"></a>01601       <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#af36ed88d29c821bf8aa454cf8a36391a">lines</a> == 0)
<a name="l01602"></a>01602     <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea73e4d70c7cc9c2560723e639332d7f2d">VTY_WRITE</a>, vty_sock, vty);
<a name="l01603"></a>01603       <span class="keywordflow">break</span>;
<a name="l01604"></a>01604     }
<a name="l01605"></a>01605 
<a name="l01606"></a>01606   <span class="keywordflow">return</span> 0;
<a name="l01607"></a>01607 }
<a name="l01608"></a>01608 
<a name="l01609"></a>01609 <span class="comment">/* Create new vty structure. */</span>
<a name="l01610"></a>01610 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structvty.html">vty</a> *
<a name="l01611"></a><a class="code" href="vty_8c.html#a911d71ae8d7bfbb16ab75a0f77c05c3c">01611</a> <a class="code" href="vty_8c.html#a911d71ae8d7bfbb16ab75a0f77c05c3c">vty_create</a> (<span class="keywordtype">int</span> vty_sock, <span class="keyword">union</span> <a class="code" href="unionsockunion.html">sockunion</a> *su)
<a name="l01612"></a>01612 {
<a name="l01613"></a>01613   <span class="keyword">struct </span><a class="code" href="structvty.html">vty</a> *<a class="code" href="vtysh_8c.html#a15b2c4e868040617c54eaaba3663b337">vty</a>;
<a name="l01614"></a>01614 
<a name="l01615"></a>01615   <span class="comment">/* Allocate new vty structure and set up default values. */</span>
<a name="l01616"></a>01616   vty = <a class="code" href="vty_8c.html#a5761c76c7eaf421587052c372034cd57">vty_new</a> ();
<a name="l01617"></a>01617   vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a> = vty_sock;
<a name="l01618"></a>01618   vty-&gt;<a class="code" href="structvty.html#a918d01c53936e81c45a177b0ceda3eca">type</a> = <a class="code" href="structvty.html#a6cef26c7c345053bf910a8869d5c3d29adabc52cc2665954eb91c79357821ccb7">VTY_TERM</a>;
<a name="l01619"></a>01619   vty-&gt;<a class="code" href="structvty.html#a9b08efdc39a659f450fdad3ca79a12d8">address</a> = <a class="code" href="sockunion_8c.html#a81204a150d1d4f669bb69fdb0915a727">sockunion_su2str</a> (su);
<a name="l01620"></a>01620   <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#a27b0172ccf3d40051140bb3a04607711">no_password_check</a>)
<a name="l01621"></a>01621     {
<a name="l01622"></a>01622       <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#a78ee728656e5a1528d1b45e94acc23a6">restricted_mode</a>)
<a name="l01623"></a>01623         vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acb0c5ada108352e3e869838b0ee04c3b">RESTRICTED_NODE</a>;
<a name="l01624"></a>01624       <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#af1f270bdc9e34870cc10cf9fe0f5a65e">advanced</a>)
<a name="l01625"></a>01625     vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>;
<a name="l01626"></a>01626       <span class="keywordflow">else</span>
<a name="l01627"></a>01627     vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>;
<a name="l01628"></a>01628     }
<a name="l01629"></a>01629   <span class="keywordflow">else</span>
<a name="l01630"></a>01630     vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a302e1f38939b1a74bc848007bb70bfdf">AUTH_NODE</a>;
<a name="l01631"></a>01631   vty-&gt;<a class="code" href="structvty.html#a2bbfb0bd919de5d12e7636edbe1e60bd">fail</a> = 0;
<a name="l01632"></a>01632   vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> = 0;
<a name="l01633"></a>01633   <a class="code" href="vty_8c.html#a46a8ab71c3c5e63dfe0b7881cfa8f8f8">vty_clear_buf</a> (vty);
<a name="l01634"></a>01634   vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> = 0;
<a name="l01635"></a>01635   memset (vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>, 0, sizeof (vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>));
<a name="l01636"></a>01636   vty-&gt;<a class="code" href="structvty.html#a7baae5746026d42a5c13693d95354b19">hp</a> = 0;
<a name="l01637"></a>01637   vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a> = 0;
<a name="l01638"></a>01638   <a class="code" href="vector_8c.html#a4ab15201b63a93279459a6d3d90600e5">vector_set_index</a> (vtyvec, vty_sock, vty);
<a name="l01639"></a>01639   vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> = <a class="code" href="vty_8c.html#acf239d95250577af6d34d80d70aac760">VTY_NORMAL</a>;
<a name="l01640"></a>01640   vty-&gt;<a class="code" href="structvty.html#aa334d5bb623207305fa72d76151f8096">v_timeout</a> = <a class="code" href="vty_8c.html#a9dc870017884136998187f770ec7851c">vty_timeout_val</a>;
<a name="l01641"></a>01641   <span class="keywordflow">if</span> (<a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#a0bd83ed5d3b108e078077a3d9be64ae1">lines</a> &gt;= 0)
<a name="l01642"></a>01642     vty-&gt;<a class="code" href="structvty.html#af36ed88d29c821bf8aa454cf8a36391a">lines</a> = <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#a0bd83ed5d3b108e078077a3d9be64ae1">lines</a>;
<a name="l01643"></a>01643   <span class="keywordflow">else</span>
<a name="l01644"></a>01644     vty-&gt;<a class="code" href="structvty.html#af36ed88d29c821bf8aa454cf8a36391a">lines</a> = -1;
<a name="l01645"></a>01645   vty-&gt;<a class="code" href="structvty.html#a84a9697ba7d4b0b1fc67da51a44cc46b">iac</a> = 0;
<a name="l01646"></a>01646   vty-&gt;<a class="code" href="structvty.html#af43115c5fffab36e14b77b8a893a361a">iac_sb_in_progress</a> = 0;
<a name="l01647"></a>01647   vty-&gt;<a class="code" href="structvty.html#a8e79b608af5753bb4a493fbaa62e3db1">sb_len</a> = 0;
<a name="l01648"></a>01648 
<a name="l01649"></a>01649   <span class="keywordflow">if</span> (! <a class="code" href="vty_8c.html#a27b0172ccf3d40051140bb3a04607711">no_password_check</a>)
<a name="l01650"></a>01650     {
<a name="l01651"></a>01651       <span class="comment">/* Vty is not available if password isn&#39;t set. */</span>
<a name="l01652"></a>01652       <span class="keywordflow">if</span> (<a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#ad0af28f48e2903d894adc73c3c58469a">password</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#a8c7b6573685405878afa6bd78fb68a9c">password_encrypt</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01653"></a>01653     {
<a name="l01654"></a>01654       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;Vty password is not set.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01655"></a>01655       vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> = <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6ab568d9eaea4e6aa93ae7fb8a7c65d4cb">VTY_CLOSE</a>;
<a name="l01656"></a>01656       <a class="code" href="vty_8c.html#af1d7e2c952dfb90e0a7e2bbe194dedfb">vty_close</a> (vty);
<a name="l01657"></a>01657       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01658"></a>01658     }
<a name="l01659"></a>01659     }
<a name="l01660"></a>01660 
<a name="l01661"></a>01661   <span class="comment">/* Say hello to the world. */</span>
<a name="l01662"></a>01662   <a class="code" href="vty_8c.html#aa2f6866b034e4a3f2e6b9e354ba46d95">vty_hello</a> (vty);
<a name="l01663"></a>01663   <span class="keywordflow">if</span> (! <a class="code" href="vty_8c.html#a27b0172ccf3d40051140bb3a04607711">no_password_check</a>)
<a name="l01664"></a>01664     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%sUser Access Verification%s%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01665"></a>01665 
<a name="l01666"></a>01666   <span class="comment">/* Setting up terminal. */</span>
<a name="l01667"></a>01667   <a class="code" href="vty_8c.html#a90006000348e50410b5a8040b241d411">vty_will_echo</a> (vty);
<a name="l01668"></a>01668   <a class="code" href="vty_8c.html#aee3608a98cb407de696ed4595c5b5d8d">vty_will_suppress_go_ahead</a> (vty);
<a name="l01669"></a>01669 
<a name="l01670"></a>01670   <a class="code" href="vty_8c.html#a61ebacd84553a2a9ba1012388c8f0f75">vty_dont_linemode</a> (vty);
<a name="l01671"></a>01671   <a class="code" href="vty_8c.html#ada289c68b5d15981676e822080e04b41">vty_do_window_size</a> (vty);
<a name="l01672"></a>01672   <span class="comment">/* vty_dont_lflow_ahead (vty); */</span>
<a name="l01673"></a>01673 
<a name="l01674"></a>01674   <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);
<a name="l01675"></a>01675 
<a name="l01676"></a>01676   <span class="comment">/* Add read/write thread. */</span>
<a name="l01677"></a>01677   <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea73e4d70c7cc9c2560723e639332d7f2d">VTY_WRITE</a>, vty_sock, vty);
<a name="l01678"></a>01678   <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea9ed3db9f85ae6bdc30382d62bc01a807">VTY_READ</a>, vty_sock, vty);
<a name="l01679"></a>01679 
<a name="l01680"></a>01680   <span class="keywordflow">return</span> <a class="code" href="vtysh_8c.html#a15b2c4e868040617c54eaaba3663b337">vty</a>;
<a name="l01681"></a>01681 }
<a name="l01682"></a>01682 
<a name="l01683"></a>01683 <span class="comment">/* Accept connection from the network. */</span>
<a name="l01684"></a>01684 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l01685"></a><a class="code" href="vty_8c.html#a06c13020e404fcc818d1d445f9d34a08">01685</a> <a class="code" href="vty_8c.html#a06c13020e404fcc818d1d445f9d34a08">vty_accept</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l01686"></a>01686 {
<a name="l01687"></a>01687   <span class="keywordtype">int</span> vty_sock;
<a name="l01688"></a>01688   <span class="keyword">struct </span><a class="code" href="structvty.html">vty</a> *<a class="code" href="vtysh_8c.html#a15b2c4e868040617c54eaaba3663b337">vty</a>;
<a name="l01689"></a>01689   <span class="keyword">union </span><a class="code" href="unionsockunion.html">sockunion</a> su;
<a name="l01690"></a>01690   <span class="keywordtype">int</span> ret;
<a name="l01691"></a>01691   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> on;
<a name="l01692"></a>01692   <span class="keywordtype">int</span> accept_sock;
<a name="l01693"></a>01693   <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01694"></a>01694   <span class="keyword">struct </span><a class="code" href="structaccess__list.html">access_list</a> *acl = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01695"></a>01695   <span class="keywordtype">char</span> *bufp;
<a name="l01696"></a>01696 
<a name="l01697"></a>01697   accept_sock = <a class="code" href="thread_8h.html#a89bd56f991717646441f9dffc010d4f5">THREAD_FD</a> (thread);
<a name="l01698"></a>01698 
<a name="l01699"></a>01699   <span class="comment">/* We continue hearing vty socket. */</span>
<a name="l01700"></a>01700   <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea8fd18ac65705a12e09a38d18e47d12ec">VTY_SERV</a>, accept_sock, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l01701"></a>01701 
<a name="l01702"></a>01702   memset (&amp;su, 0, <span class="keyword">sizeof</span> (<span class="keyword">union</span> <a class="code" href="unionsockunion.html">sockunion</a>));
<a name="l01703"></a>01703 
<a name="l01704"></a>01704   <span class="comment">/* We can handle IPv4 or IPv6 socket. */</span>
<a name="l01705"></a>01705   vty_sock = <a class="code" href="sockunion_8c.html#a71ffb8b7424679127f0ab7d3ad8c9fd4">sockunion_accept</a> (accept_sock, &amp;su);
<a name="l01706"></a>01706   <span class="keywordflow">if</span> (vty_sock &lt; 0)
<a name="l01707"></a>01707     {
<a name="l01708"></a>01708       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;can&#39;t accept vty socket : %s&quot;</span>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
<a name="l01709"></a>01709       <span class="keywordflow">return</span> -1;
<a name="l01710"></a>01710     }
<a name="l01711"></a>01711   <a class="code" href="network_8c.html#a450a9be7be692d8ac42f64acddbdaadd">set_nonblocking</a>(vty_sock);
<a name="l01712"></a>01712 
<a name="l01713"></a>01713   p = <a class="code" href="prefix_8c.html#a7e9fdfe551fb280a2e9a149a7f742d87">sockunion2hostprefix</a> (&amp;su);
<a name="l01714"></a>01714 
<a name="l01715"></a>01715   <span class="comment">/* VTY&#39;s accesslist apply. */</span>
<a name="l01716"></a>01716   <span class="keywordflow">if</span> (p-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == AF_INET &amp;&amp; <a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a>)
<a name="l01717"></a>01717     {
<a name="l01718"></a>01718       <span class="keywordflow">if</span> ((acl = <a class="code" href="filter_8c.html#a8cb65cd01015f6673c632cb5b8714b3e">access_list_lookup</a> (<a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>, <a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a>)) &amp;&amp;
<a name="l01719"></a>01719       (<a class="code" href="filter_8c.html#a5565f487c65e2bf0308c7fd529f121a0">access_list_apply</a> (acl, p) == <a class="code" href="filter_8h.html#ab3b7281956317556f846daaebf75de72a898abadf6cc2f9d27780782f09d3a3e3">FILTER_DENY</a>))
<a name="l01720"></a>01720     {
<a name="l01721"></a>01721       <span class="keywordtype">char</span> *buf;
<a name="l01722"></a>01722       <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_INFO, <span class="stringliteral">&quot;Vty connection refused from %s&quot;</span>,
<a name="l01723"></a>01723         (buf = <a class="code" href="sockunion_8c.html#a81204a150d1d4f669bb69fdb0915a727">sockunion_su2str</a> (&amp;su)));
<a name="l01724"></a>01724       free (buf);
<a name="l01725"></a>01725       close (vty_sock);
<a name="l01726"></a>01726       
<a name="l01727"></a>01727       <span class="comment">/* continue accepting connections */</span>
<a name="l01728"></a>01728       <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea8fd18ac65705a12e09a38d18e47d12ec">VTY_SERV</a>, accept_sock, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l01729"></a>01729       
<a name="l01730"></a>01730       <a class="code" href="prefix_8c.html#a5d8a68bc25fb973c471e61aaeb76a015">prefix_free</a> (p);
<a name="l01731"></a>01731 
<a name="l01732"></a>01732       <span class="keywordflow">return</span> 0;
<a name="l01733"></a>01733     }
<a name="l01734"></a>01734     }
<a name="l01735"></a>01735 
<a name="l01736"></a>01736 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l01737"></a>01737 <span class="preprocessor"></span>  <span class="comment">/* VTY&#39;s ipv6 accesslist apply. */</span>
<a name="l01738"></a>01738   <span class="keywordflow">if</span> (p-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == AF_INET6 &amp;&amp; <a class="code" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a>)
<a name="l01739"></a>01739     {
<a name="l01740"></a>01740       <span class="keywordflow">if</span> ((acl = <a class="code" href="filter_8c.html#a8cb65cd01015f6673c632cb5b8714b3e">access_list_lookup</a> (<a class="code" href="zebra_8h.html#ad10f30457e426e1d269466d3b6603c3c">AFI_IP6</a>, <a class="code" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a>)) &amp;&amp;
<a name="l01741"></a>01741       (<a class="code" href="filter_8c.html#a5565f487c65e2bf0308c7fd529f121a0">access_list_apply</a> (acl, p) == <a class="code" href="filter_8h.html#ab3b7281956317556f846daaebf75de72a898abadf6cc2f9d27780782f09d3a3e3">FILTER_DENY</a>))
<a name="l01742"></a>01742     {
<a name="l01743"></a>01743       <span class="keywordtype">char</span> *buf;
<a name="l01744"></a>01744       <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_INFO, <span class="stringliteral">&quot;Vty connection refused from %s&quot;</span>,
<a name="l01745"></a>01745         (buf = <a class="code" href="sockunion_8c.html#a81204a150d1d4f669bb69fdb0915a727">sockunion_su2str</a> (&amp;su)));
<a name="l01746"></a>01746       free (buf);
<a name="l01747"></a>01747       close (vty_sock);
<a name="l01748"></a>01748       
<a name="l01749"></a>01749       <span class="comment">/* continue accepting connections */</span>
<a name="l01750"></a>01750       <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea8fd18ac65705a12e09a38d18e47d12ec">VTY_SERV</a>, accept_sock, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l01751"></a>01751       
<a name="l01752"></a>01752       <a class="code" href="prefix_8c.html#a5d8a68bc25fb973c471e61aaeb76a015">prefix_free</a> (p);
<a name="l01753"></a>01753 
<a name="l01754"></a>01754       <span class="keywordflow">return</span> 0;
<a name="l01755"></a>01755     }
<a name="l01756"></a>01756     }
<a name="l01757"></a>01757 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l01758"></a>01758   
<a name="l01759"></a>01759   <a class="code" href="prefix_8c.html#a5d8a68bc25fb973c471e61aaeb76a015">prefix_free</a> (p);
<a name="l01760"></a>01760 
<a name="l01761"></a>01761   on = 1;
<a name="l01762"></a>01762   ret = setsockopt (vty_sock, IPPROTO_TCP, TCP_NODELAY, 
<a name="l01763"></a>01763             (<span class="keywordtype">char</span> *) &amp;on, <span class="keyword">sizeof</span> (on));
<a name="l01764"></a>01764   <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l01765"></a>01765     <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_INFO, <span class="stringliteral">&quot;can&#39;t set sockopt to vty_sock : %s&quot;</span>, 
<a name="l01766"></a>01766       <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
<a name="l01767"></a>01767 
<a name="l01768"></a>01768   <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_INFO, <span class="stringliteral">&quot;Vty connection from %s&quot;</span>,
<a name="l01769"></a>01769     (bufp = <a class="code" href="sockunion_8c.html#a81204a150d1d4f669bb69fdb0915a727">sockunion_su2str</a> (&amp;su)));
<a name="l01770"></a>01770   <span class="keywordflow">if</span> (bufp)
<a name="l01771"></a>01771     <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, bufp);
<a name="l01772"></a>01772 
<a name="l01773"></a>01773   vty = <a class="code" href="vty_8c.html#a911d71ae8d7bfbb16ab75a0f77c05c3c">vty_create</a> (vty_sock, &amp;su);
<a name="l01774"></a>01774 
<a name="l01775"></a>01775   <span class="keywordflow">return</span> 0;
<a name="l01776"></a>01776 }
<a name="l01777"></a>01777 
<a name="l01778"></a>01778 <span class="preprocessor">#if defined(HAVE_IPV6) &amp;&amp; !defined(NRL)</span>
<a name="l01779"></a>01779 <span class="preprocessor"></span><span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01780"></a>01780 vty_serv_sock_addrinfo (<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structhostname.html">hostname</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> port)
<a name="l01781"></a>01781 {
<a name="l01782"></a>01782   <span class="keywordtype">int</span> ret;
<a name="l01783"></a>01783   <span class="keyword">struct </span>addrinfo req;
<a name="l01784"></a>01784   <span class="keyword">struct </span>addrinfo *ainfo;
<a name="l01785"></a>01785   <span class="keyword">struct </span>addrinfo *ainfo_save;
<a name="l01786"></a>01786   <span class="keywordtype">int</span> sock;
<a name="l01787"></a>01787   <span class="keywordtype">char</span> port_str[BUFSIZ];
<a name="l01788"></a>01788 
<a name="l01789"></a>01789   memset (&amp;req, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> addrinfo));
<a name="l01790"></a>01790   req.ai_flags = AI_PASSIVE;
<a name="l01791"></a>01791   req.ai_family = AF_UNSPEC;
<a name="l01792"></a>01792   req.ai_socktype = SOCK_STREAM;
<a name="l01793"></a>01793   sprintf (port_str, <span class="stringliteral">&quot;%d&quot;</span>, port);
<a name="l01794"></a>01794   port_str[<span class="keyword">sizeof</span> (port_str) - 1] = <span class="charliteral">&#39;\0&#39;</span>;
<a name="l01795"></a>01795 
<a name="l01796"></a>01796   ret = getaddrinfo (hostname, port_str, &amp;req, &amp;ainfo);
<a name="l01797"></a>01797 
<a name="l01798"></a>01798   <span class="keywordflow">if</span> (ret != 0)
<a name="l01799"></a>01799     {
<a name="l01800"></a>01800       fprintf (stderr, <span class="stringliteral">&quot;getaddrinfo failed: %s\n&quot;</span>, gai_strerror (ret));
<a name="l01801"></a>01801       <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a> (1);
<a name="l01802"></a>01802     }
<a name="l01803"></a>01803 
<a name="l01804"></a>01804   ainfo_save = ainfo;
<a name="l01805"></a>01805 
<a name="l01806"></a>01806   <span class="keywordflow">do</span>
<a name="l01807"></a>01807     {
<a name="l01808"></a>01808       <span class="keywordflow">if</span> (ainfo-&gt;ai_family != AF_INET
<a name="l01809"></a>01809 #ifdef HAVE_IPV6
<a name="l01810"></a>01810       &amp;&amp; ainfo-&gt;ai_family != AF_INET6
<a name="l01811"></a>01811 #endif <span class="comment">/* HAVE_IPV6 */</span>
<a name="l01812"></a>01812       )
<a name="l01813"></a>01813     <span class="keywordflow">continue</span>;
<a name="l01814"></a>01814 
<a name="l01815"></a>01815       sock = socket (ainfo-&gt;ai_family, ainfo-&gt;ai_socktype, ainfo-&gt;ai_protocol);
<a name="l01816"></a>01816       <span class="keywordflow">if</span> (sock &lt; 0)
<a name="l01817"></a>01817     <span class="keywordflow">continue</span>;
<a name="l01818"></a>01818 
<a name="l01819"></a>01819       <a class="code" href="sockunion_8c.html#aa177c0a1e91bd7ac7af8d703768a56bc">sockopt_reuseaddr</a> (sock);
<a name="l01820"></a>01820       <a class="code" href="sockunion_8c.html#a1910bb0d088e8c63fcf2d1441a0ad4e4">sockopt_reuseport</a> (sock);
<a name="l01821"></a>01821 
<a name="l01822"></a>01822       ret = bind (sock, ainfo-&gt;ai_addr, ainfo-&gt;ai_addrlen);
<a name="l01823"></a>01823       <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l01824"></a>01824     {
<a name="l01825"></a>01825       close (sock); <span class="comment">/* Avoid sd leak. */</span>
<a name="l01826"></a>01826     <span class="keywordflow">continue</span>;
<a name="l01827"></a>01827     }
<a name="l01828"></a>01828 
<a name="l01829"></a>01829       ret = listen (sock, 3);
<a name="l01830"></a>01830       <span class="keywordflow">if</span> (ret &lt; 0) 
<a name="l01831"></a>01831     {
<a name="l01832"></a>01832       close (sock); <span class="comment">/* Avoid sd leak. */</span>
<a name="l01833"></a>01833     <span class="keywordflow">continue</span>;
<a name="l01834"></a>01834     }
<a name="l01835"></a>01835 
<a name="l01836"></a>01836       <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea8fd18ac65705a12e09a38d18e47d12ec">VTY_SERV</a>, sock, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l01837"></a>01837     }
<a name="l01838"></a>01838   <span class="keywordflow">while</span> ((ainfo = ainfo-&gt;ai_next) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l01839"></a>01839 
<a name="l01840"></a>01840   freeaddrinfo (ainfo_save);
<a name="l01841"></a>01841 }
<a name="l01842"></a>01842 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 &amp;&amp; ! NRL */</span>
<a name="l01843"></a>01843 
<a name="l01844"></a>01844 <span class="comment">/* Make vty server socket. */</span>
<a name="l01845"></a>01845 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01846"></a><a class="code" href="vty_8c.html#acf1b5a3deff4b05879a784dd6bfa9a3c">01846</a> <a class="code" href="vty_8c.html#acf1b5a3deff4b05879a784dd6bfa9a3c">vty_serv_sock_family</a> (<span class="keyword">const</span> <span class="keywordtype">char</span>* addr, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> port, <span class="keywordtype">int</span> family)
<a name="l01847"></a>01847 {
<a name="l01848"></a>01848   <span class="keywordtype">int</span> ret;
<a name="l01849"></a>01849   <span class="keyword">union </span><a class="code" href="unionsockunion.html">sockunion</a> su;
<a name="l01850"></a>01850   <span class="keywordtype">int</span> accept_sock;
<a name="l01851"></a>01851   <span class="keywordtype">void</span>* naddr=<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01852"></a>01852 
<a name="l01853"></a>01853   memset (&amp;su, 0, <span class="keyword">sizeof</span> (<span class="keyword">union</span> <a class="code" href="unionsockunion.html">sockunion</a>));
<a name="l01854"></a>01854   su.<a class="code" href="unionsockunion.html#a696d7d44e90274cc3bb86231cd51cfd4">sa</a>.sa_family = family;
<a name="l01855"></a>01855   <span class="keywordflow">if</span>(addr)
<a name="l01856"></a>01856     <span class="keywordflow">switch</span>(family)
<a name="l01857"></a>01857     {
<a name="l01858"></a>01858       <span class="keywordflow">case</span> AF_INET:
<a name="l01859"></a>01859         naddr=&amp;su.<a class="code" href="unionsockunion.html#a50fab1a37b798a49a085f78351680ab7">sin</a>.sin_addr;
<a name="l01860"></a>01860 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l01861"></a>01861 <span class="preprocessor"></span>      <span class="keywordflow">case</span> AF_INET6:
<a name="l01862"></a>01862         naddr=&amp;su.sin6.sin6_addr;
<a name="l01863"></a>01863 <span class="preprocessor">#endif  </span>
<a name="l01864"></a>01864 <span class="preprocessor"></span>    }
<a name="l01865"></a>01865 
<a name="l01866"></a>01866   <span class="keywordflow">if</span>(naddr)
<a name="l01867"></a>01867     <span class="keywordflow">switch</span>(<a class="code" href="sockunion_8c.html#ac13c2042641ea5031bc7e244e8061b84">inet_pton</a>(family,addr,naddr))
<a name="l01868"></a>01868     {
<a name="l01869"></a>01869       <span class="keywordflow">case</span> -1:
<a name="l01870"></a>01870         <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a>(<span class="stringliteral">&quot;bad address %s&quot;</span>,addr);
<a name="l01871"></a>01871     naddr=<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01872"></a>01872     <span class="keywordflow">break</span>;
<a name="l01873"></a>01873       <span class="keywordflow">case</span> 0:
<a name="l01874"></a>01874         <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a>(<span class="stringliteral">&quot;error translating address %s: %s&quot;</span>,addr,<a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a>(errno));
<a name="l01875"></a>01875     naddr=<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01876"></a>01876     }
<a name="l01877"></a>01877 
<a name="l01878"></a>01878   <span class="comment">/* Make new socket. */</span>
<a name="l01879"></a>01879   accept_sock = <a class="code" href="sockunion_8c.html#aa87de7fb2e611ab14eabc9ee0242f53d">sockunion_stream_socket</a> (&amp;su);
<a name="l01880"></a>01880   <span class="keywordflow">if</span> (accept_sock &lt; 0)
<a name="l01881"></a>01881     <span class="keywordflow">return</span>;
<a name="l01882"></a>01882 
<a name="l01883"></a>01883   <span class="comment">/* This is server, so reuse address. */</span>
<a name="l01884"></a>01884   <a class="code" href="sockunion_8c.html#aa177c0a1e91bd7ac7af8d703768a56bc">sockopt_reuseaddr</a> (accept_sock);
<a name="l01885"></a>01885   <a class="code" href="sockunion_8c.html#a1910bb0d088e8c63fcf2d1441a0ad4e4">sockopt_reuseport</a> (accept_sock);
<a name="l01886"></a>01886 
<a name="l01887"></a>01887   <span class="comment">/* Bind socket to universal address and given port. */</span>
<a name="l01888"></a>01888   ret = <a class="code" href="sockunion_8c.html#a12e8d416910e79b142ec1d4fee573073">sockunion_bind</a> (accept_sock, &amp;su, port, naddr);
<a name="l01889"></a>01889   <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l01890"></a>01890     {
<a name="l01891"></a>01891       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;can&#39;t bind socket&quot;</span>);
<a name="l01892"></a>01892       close (accept_sock);  <span class="comment">/* Avoid sd leak. */</span>
<a name="l01893"></a>01893       <span class="keywordflow">return</span>;
<a name="l01894"></a>01894     }
<a name="l01895"></a>01895 
<a name="l01896"></a>01896   <span class="comment">/* Listen socket under queue 3. */</span>
<a name="l01897"></a>01897   ret = listen (accept_sock, 3);
<a name="l01898"></a>01898   <span class="keywordflow">if</span> (ret &lt; 0) 
<a name="l01899"></a>01899     {
<a name="l01900"></a>01900       <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_WARNING, <span class="stringliteral">&quot;can&#39;t listen socket&quot;</span>);
<a name="l01901"></a>01901       close (accept_sock);  <span class="comment">/* Avoid sd leak. */</span>
<a name="l01902"></a>01902       <span class="keywordflow">return</span>;
<a name="l01903"></a>01903     }
<a name="l01904"></a>01904 
<a name="l01905"></a>01905   <span class="comment">/* Add vty server event. */</span>
<a name="l01906"></a>01906   <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea8fd18ac65705a12e09a38d18e47d12ec">VTY_SERV</a>, accept_sock, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l01907"></a>01907 }
<a name="l01908"></a>01908 
<a name="l01909"></a>01909 <span class="preprocessor">#ifdef VTYSH</span>
<a name="l01910"></a>01910 <span class="preprocessor"></span><span class="comment">/* For sockaddr_un. */</span>
<a name="l01911"></a>01911 <span class="preprocessor">#include &lt;sys/un.h&gt;</span>
<a name="l01912"></a>01912 
<a name="l01913"></a>01913 <span class="comment">/* VTY shell UNIX domain socket. */</span>
<a name="l01914"></a>01914 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01915"></a>01915 vty_serv_un (<span class="keyword">const</span> <span class="keywordtype">char</span> *path)
<a name="l01916"></a>01916 {
<a name="l01917"></a>01917   <span class="keywordtype">int</span> ret;
<a name="l01918"></a>01918   <span class="keywordtype">int</span> sock, len;
<a name="l01919"></a>01919   <span class="keyword">struct </span>sockaddr_un serv;
<a name="l01920"></a>01920   mode_t old_mask;
<a name="l01921"></a>01921   <span class="keyword">struct </span><a class="code" href="structzprivs__ids__t.html">zprivs_ids_t</a> ids;
<a name="l01922"></a>01922   
<a name="l01923"></a>01923   <span class="comment">/* First of all, unlink existing socket */</span>
<a name="l01924"></a>01924   unlink (path);
<a name="l01925"></a>01925 
<a name="l01926"></a>01926   <span class="comment">/* Set umask */</span>
<a name="l01927"></a>01927   old_mask = umask (0007);
<a name="l01928"></a>01928 
<a name="l01929"></a>01929   <span class="comment">/* Make UNIX domain socket. */</span>
<a name="l01930"></a>01930   sock = socket (AF_UNIX, SOCK_STREAM, 0);
<a name="l01931"></a>01931   <span class="keywordflow">if</span> (sock &lt; 0)
<a name="l01932"></a>01932     {
<a name="l01933"></a>01933       <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a>(<span class="stringliteral">&quot;Cannot create unix stream socket: %s&quot;</span>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a>(errno));
<a name="l01934"></a>01934       <span class="keywordflow">return</span>;
<a name="l01935"></a>01935     }
<a name="l01936"></a>01936 
<a name="l01937"></a>01937   <span class="comment">/* Make server socket. */</span>
<a name="l01938"></a>01938   memset (&amp;serv, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> sockaddr_un));
<a name="l01939"></a>01939   serv.sun_family = AF_UNIX;
<a name="l01940"></a>01940   strncpy (serv.sun_path, path, strlen (path));
<a name="l01941"></a>01941 <span class="preprocessor">#ifdef HAVE_STRUCT_SOCKADDR_UN_SUN_LEN</span>
<a name="l01942"></a>01942 <span class="preprocessor"></span>  len = serv.sun_len = SUN_LEN(&amp;serv);
<a name="l01943"></a>01943 <span class="preprocessor">#else</span>
<a name="l01944"></a>01944 <span class="preprocessor"></span>  len = <span class="keyword">sizeof</span> (serv.sun_family) + strlen (serv.sun_path);
<a name="l01945"></a>01945 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_STRUCT_SOCKADDR_UN_SUN_LEN */</span>
<a name="l01946"></a>01946 
<a name="l01947"></a>01947   ret = bind (sock, (<span class="keyword">struct</span> sockaddr *) &amp;serv, len);
<a name="l01948"></a>01948   <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l01949"></a>01949     {
<a name="l01950"></a>01950       <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a>(<span class="stringliteral">&quot;Cannot bind path %s: %s&quot;</span>, path, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a>(errno));
<a name="l01951"></a>01951       close (sock); <span class="comment">/* Avoid sd leak. */</span>
<a name="l01952"></a>01952       <span class="keywordflow">return</span>;
<a name="l01953"></a>01953     }
<a name="l01954"></a>01954 
<a name="l01955"></a>01955   ret = listen (sock, 5);
<a name="l01956"></a>01956   <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l01957"></a>01957     {
<a name="l01958"></a>01958       <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a>(<span class="stringliteral">&quot;listen(fd %d) failed: %s&quot;</span>, sock, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a>(errno));
<a name="l01959"></a>01959       close (sock); <span class="comment">/* Avoid sd leak. */</span>
<a name="l01960"></a>01960       <span class="keywordflow">return</span>;
<a name="l01961"></a>01961     }
<a name="l01962"></a>01962 
<a name="l01963"></a>01963   umask (old_mask);
<a name="l01964"></a>01964 
<a name="l01965"></a>01965   <a class="code" href="privs_8c.html#a46943152a1298eca5f10ead2743e284f">zprivs_get_ids</a>(&amp;ids);
<a name="l01966"></a>01966   
<a name="l01967"></a>01967   <span class="keywordflow">if</span> (ids.gid_vty &gt; 0)
<a name="l01968"></a>01968     {
<a name="l01969"></a>01969       <span class="comment">/* set group of socket */</span>
<a name="l01970"></a>01970       <span class="keywordflow">if</span> ( chown (path, -1, ids.gid_vty) )
<a name="l01971"></a>01971         {
<a name="l01972"></a>01972           <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;vty_serv_un: could chown socket, %s&quot;</span>,
<a name="l01973"></a>01973                      <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno) );
<a name="l01974"></a>01974         }
<a name="l01975"></a>01975     }
<a name="l01976"></a>01976 
<a name="l01977"></a>01977   <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (VTYSH_SERV, sock, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l01978"></a>01978 }
<a name="l01979"></a>01979 
<a name="l01980"></a>01980 <span class="comment">/* #define VTYSH_DEBUG 1 */</span>
<a name="l01981"></a>01981 
<a name="l01982"></a>01982 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l01983"></a>01983 vtysh_accept (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l01984"></a>01984 {
<a name="l01985"></a>01985   <span class="keywordtype">int</span> accept_sock;
<a name="l01986"></a>01986   <span class="keywordtype">int</span> sock;
<a name="l01987"></a>01987   <span class="keywordtype">int</span> client_len;
<a name="l01988"></a>01988   <span class="keyword">struct </span>sockaddr_un client;
<a name="l01989"></a>01989   <span class="keyword">struct </span><a class="code" href="structvty.html">vty</a> *<a class="code" href="vtysh_8c.html#a15b2c4e868040617c54eaaba3663b337">vty</a>;
<a name="l01990"></a>01990   
<a name="l01991"></a>01991   accept_sock = <a class="code" href="thread_8h.html#a89bd56f991717646441f9dffc010d4f5">THREAD_FD</a> (thread);
<a name="l01992"></a>01992 
<a name="l01993"></a>01993   <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (VTYSH_SERV, accept_sock, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l01994"></a>01994 
<a name="l01995"></a>01995   memset (&amp;client, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> sockaddr_un));
<a name="l01996"></a>01996   client_len = <span class="keyword">sizeof</span> (<span class="keyword">struct </span>sockaddr_un);
<a name="l01997"></a>01997 
<a name="l01998"></a>01998   sock = accept (accept_sock, (<span class="keyword">struct</span> sockaddr *) &amp;client,
<a name="l01999"></a>01999          (<a class="code" href="zebra_8h.html#a6b82106923cc13b3a9734520ecc29514">socklen_t</a> *) &amp;client_len);
<a name="l02000"></a>02000 
<a name="l02001"></a>02001   <span class="keywordflow">if</span> (sock &lt; 0)
<a name="l02002"></a>02002     {
<a name="l02003"></a>02003       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;can&#39;t accept vty socket : %s&quot;</span>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
<a name="l02004"></a>02004       <span class="keywordflow">return</span> -1;
<a name="l02005"></a>02005     }
<a name="l02006"></a>02006 
<a name="l02007"></a>02007   <span class="keywordflow">if</span> (<a class="code" href="network_8c.html#a450a9be7be692d8ac42f64acddbdaadd">set_nonblocking</a>(sock) &lt; 0)
<a name="l02008"></a>02008     {
<a name="l02009"></a>02009       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;vtysh_accept: could not set vty socket %d to non-blocking,&quot;</span>
<a name="l02010"></a>02010                  <span class="stringliteral">&quot; %s, closing&quot;</span>, sock, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
<a name="l02011"></a>02011       close (sock);
<a name="l02012"></a>02012       <span class="keywordflow">return</span> -1;
<a name="l02013"></a>02013     }
<a name="l02014"></a>02014   
<a name="l02015"></a>02015 <span class="preprocessor">#ifdef VTYSH_DEBUG</span>
<a name="l02016"></a>02016 <span class="preprocessor"></span>  printf (<span class="stringliteral">&quot;VTY shell accept\n&quot;</span>);
<a name="l02017"></a>02017 <span class="preprocessor">#endif </span><span class="comment">/* VTYSH_DEBUG */</span>
<a name="l02018"></a>02018 
<a name="l02019"></a>02019   vty = <a class="code" href="vty_8c.html#a5761c76c7eaf421587052c372034cd57">vty_new</a> ();
<a name="l02020"></a>02020   vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a> = sock;
<a name="l02021"></a>02021   vty-&gt;<a class="code" href="structvty.html#a918d01c53936e81c45a177b0ceda3eca">type</a> = VTY_SHELL_SERV;
<a name="l02022"></a>02022   vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>;
<a name="l02023"></a>02023 
<a name="l02024"></a>02024   <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (VTYSH_READ, sock, vty);
<a name="l02025"></a>02025 
<a name="l02026"></a>02026   <span class="keywordflow">return</span> 0;
<a name="l02027"></a>02027 }
<a name="l02028"></a>02028 
<a name="l02029"></a>02029 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l02030"></a>02030 vtysh_flush(<span class="keyword">struct</span> vty *vty)
<a name="l02031"></a>02031 {
<a name="l02032"></a>02032   <span class="keywordflow">switch</span> (<a class="code" href="buffer_8c.html#a3df3e577fcbeec460e3ddab6bc6f59ec">buffer_flush_available</a>(vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>, vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>))
<a name="l02033"></a>02033     {
<a name="l02034"></a>02034     <span class="keywordflow">case</span> <a class="code" href="buffer_8h.html#a11b72623a9601834584c5ecf08dd6e27a6a5c775497aad93877d86b6a334de110">BUFFER_PENDING</a>:
<a name="l02035"></a>02035       <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a>(VTYSH_WRITE, vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>, vty);
<a name="l02036"></a>02036       <span class="keywordflow">break</span>;
<a name="l02037"></a>02037     <span class="keywordflow">case</span> <a class="code" href="buffer_8h.html#a11b72623a9601834584c5ecf08dd6e27a6185688e62ce527910fd779f2093c6f1">BUFFER_ERROR</a>:
<a name="l02038"></a>02038       vty-&gt;<a class="code" href="structvty.html#ace142d1b856ed1776e4a48684222b01f">monitor</a> = 0; <span class="comment">/* disable monitoring to avoid infinite recursion */</span>
<a name="l02039"></a>02039       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;%s: write error to fd %d, closing&quot;</span>, __func__, vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>);
<a name="l02040"></a>02040       <a class="code" href="buffer_8c.html#a91ad0ff694ccef1876a3e8d8a3b05ffa">buffer_reset</a>(vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>);
<a name="l02041"></a>02041       <a class="code" href="vty_8c.html#af1d7e2c952dfb90e0a7e2bbe194dedfb">vty_close</a>(vty);
<a name="l02042"></a>02042       <span class="keywordflow">return</span> -1;
<a name="l02043"></a>02043       <span class="keywordflow">break</span>;
<a name="l02044"></a>02044     <span class="keywordflow">case</span> <a class="code" href="buffer_8h.html#a11b72623a9601834584c5ecf08dd6e27a78d7168c875c46a0fbb5835cd160e2ba">BUFFER_EMPTY</a>:
<a name="l02045"></a>02045       <span class="keywordflow">break</span>;
<a name="l02046"></a>02046     }
<a name="l02047"></a>02047   <span class="keywordflow">return</span> 0;
<a name="l02048"></a>02048 }
<a name="l02049"></a>02049 
<a name="l02050"></a>02050 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l02051"></a>02051 vtysh_read (<span class="keyword">struct</span> thread *thread)
<a name="l02052"></a>02052 {
<a name="l02053"></a>02053   <span class="keywordtype">int</span> ret;
<a name="l02054"></a>02054   <span class="keywordtype">int</span> sock;
<a name="l02055"></a>02055   <span class="keywordtype">int</span> nbytes;
<a name="l02056"></a>02056   <span class="keyword">struct </span>vty *<a class="code" href="vtysh_8c.html#a15b2c4e868040617c54eaaba3663b337">vty</a>;
<a name="l02057"></a>02057   <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> <a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[<a class="code" href="vty_8h.html#a79b1a7ad718c49feb5febb6a5be6f5e8">VTY_READ_BUFSIZ</a>];
<a name="l02058"></a>02058   <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
<a name="l02059"></a>02059   u_char header[4] = {0, 0, 0, 0};
<a name="l02060"></a>02060 
<a name="l02061"></a>02061   sock = <a class="code" href="thread_8h.html#a89bd56f991717646441f9dffc010d4f5">THREAD_FD</a> (thread);
<a name="l02062"></a>02062   vty = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l02063"></a>02063   vty-&gt;<a class="code" href="structvty.html#a5d16168af87165fddd2aa6612c9740f1">t_read</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02064"></a>02064 
<a name="l02065"></a>02065   <span class="keywordflow">if</span> ((nbytes = read (sock, buf, <a class="code" href="vty_8h.html#a79b1a7ad718c49feb5febb6a5be6f5e8">VTY_READ_BUFSIZ</a>)) &lt;= 0)
<a name="l02066"></a>02066     {
<a name="l02067"></a>02067       <span class="keywordflow">if</span> (nbytes &lt; 0)
<a name="l02068"></a>02068     {
<a name="l02069"></a>02069       <span class="keywordflow">if</span> (<a class="code" href="network_8h.html#a45b38a31650d3cee8087360351384d9e">ERRNO_IO_RETRY</a>(errno))
<a name="l02070"></a>02070         {
<a name="l02071"></a>02071           <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (VTYSH_READ, sock, vty);
<a name="l02072"></a>02072           <span class="keywordflow">return</span> 0;
<a name="l02073"></a>02073         }
<a name="l02074"></a>02074       vty-&gt;<a class="code" href="structvty.html#ace142d1b856ed1776e4a48684222b01f">monitor</a> = 0; <span class="comment">/* disable monitoring to avoid infinite recursion */</span>
<a name="l02075"></a>02075       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;%s: read failed on vtysh client fd %d, closing: %s&quot;</span>,
<a name="l02076"></a>02076             __func__, sock, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a>(errno));
<a name="l02077"></a>02077     }
<a name="l02078"></a>02078       <a class="code" href="buffer_8c.html#a91ad0ff694ccef1876a3e8d8a3b05ffa">buffer_reset</a>(vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>);
<a name="l02079"></a>02079       <a class="code" href="vty_8c.html#af1d7e2c952dfb90e0a7e2bbe194dedfb">vty_close</a> (vty);
<a name="l02080"></a>02080 <span class="preprocessor">#ifdef VTYSH_DEBUG</span>
<a name="l02081"></a>02081 <span class="preprocessor"></span>      printf (<span class="stringliteral">&quot;close vtysh\n&quot;</span>);
<a name="l02082"></a>02082 <span class="preprocessor">#endif </span><span class="comment">/* VTYSH_DEBUG */</span>
<a name="l02083"></a>02083       <span class="keywordflow">return</span> 0;
<a name="l02084"></a>02084     }
<a name="l02085"></a>02085 
<a name="l02086"></a>02086 <span class="preprocessor">#ifdef VTYSH_DEBUG</span>
<a name="l02087"></a>02087 <span class="preprocessor"></span>  printf (<span class="stringliteral">&quot;line: %.*s\n&quot;</span>, nbytes, buf);
<a name="l02088"></a>02088 <span class="preprocessor">#endif </span><span class="comment">/* VTYSH_DEBUG */</span>
<a name="l02089"></a>02089 
<a name="l02090"></a>02090   <span class="keywordflow">for</span> (p = buf; p &lt; buf+nbytes; p++)
<a name="l02091"></a>02091     {
<a name="l02092"></a>02092       <a class="code" href="vty_8c.html#a8609a6dc68804aff15b0d00254a44fa5">vty_ensure</a>(vty, vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>+1);
<a name="l02093"></a>02093       vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>++] = *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
<a name="l02094"></a>02094       <span class="keywordflow">if</span> (*p == <span class="charliteral">&#39;\0&#39;</span>)
<a name="l02095"></a>02095     {
<a name="l02096"></a>02096       <span class="comment">/* Pass this line to parser. */</span>
<a name="l02097"></a>02097       ret = <a class="code" href="vty_8c.html#ad051d84b39c71fdbd554626c26f2b8a0">vty_execute</a> (vty);
<a name="l02098"></a>02098       <span class="comment">/* Note that vty_execute clears the command buffer and resets</span>
<a name="l02099"></a>02099 <span class="comment">         vty-&gt;length to 0. */</span>
<a name="l02100"></a>02100 
<a name="l02101"></a>02101       <span class="comment">/* Return result. */</span>
<a name="l02102"></a>02102 <span class="preprocessor">#ifdef VTYSH_DEBUG</span>
<a name="l02103"></a>02103 <span class="preprocessor"></span>      printf (<span class="stringliteral">&quot;result: %d\n&quot;</span>, ret);
<a name="l02104"></a>02104       printf (<span class="stringliteral">&quot;vtysh node: %d\n&quot;</span>, vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a>);
<a name="l02105"></a>02105 <span class="preprocessor">#endif </span><span class="comment">/* VTYSH_DEBUG */</span>
<a name="l02106"></a>02106 
<a name="l02107"></a>02107       header[3] = ret;
<a name="l02108"></a>02108       <a class="code" href="buffer_8c.html#a6150096c2eaae19e636d2742c3df5b75">buffer_put</a>(vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>, header, 4);
<a name="l02109"></a>02109 
<a name="l02110"></a>02110       <span class="keywordflow">if</span> (!vty-&gt;<a class="code" href="structvty.html#a4feadf59b37669005dd5cdb364a18ccf">t_write</a> &amp;&amp; (vtysh_flush(vty) &lt; 0))
<a name="l02111"></a>02111         <span class="comment">/* Try to flush results; exit if a write error occurs. */</span>
<a name="l02112"></a>02112         <span class="keywordflow">return</span> 0;
<a name="l02113"></a>02113     }
<a name="l02114"></a>02114     }
<a name="l02115"></a>02115 
<a name="l02116"></a>02116   <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (VTYSH_READ, sock, vty);
<a name="l02117"></a>02117 
<a name="l02118"></a>02118   <span class="keywordflow">return</span> 0;
<a name="l02119"></a>02119 }
<a name="l02120"></a>02120 
<a name="l02121"></a>02121 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l02122"></a>02122 vtysh_write (<span class="keyword">struct</span> thread *thread)
<a name="l02123"></a>02123 {
<a name="l02124"></a>02124   <span class="keyword">struct </span>vty *vty = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l02125"></a>02125 
<a name="l02126"></a>02126   vty-&gt;<a class="code" href="structvty.html#a4feadf59b37669005dd5cdb364a18ccf">t_write</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02127"></a>02127   vtysh_flush(vty);
<a name="l02128"></a>02128   <span class="keywordflow">return</span> 0;
<a name="l02129"></a>02129 }
<a name="l02130"></a>02130 
<a name="l02131"></a>02131 <span class="preprocessor">#endif </span><span class="comment">/* VTYSH */</span>
<a name="l02132"></a>02132 
<a name="l02133"></a>02133 <span class="comment">/* Determine address family to bind. */</span>
<a name="l02134"></a>02134 <span class="keywordtype">void</span>
<a name="l02135"></a><a class="code" href="vty_8h.html#a56a84483a57c37a446b074790896e99d">02135</a> <a class="code" href="vty_8c.html#a1247b9d1681382580789652f8dad12a6">vty_serv_sock</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *addr, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> port, <span class="keyword">const</span> <span class="keywordtype">char</span> *path)
<a name="l02136"></a>02136 {
<a name="l02137"></a>02137   <span class="comment">/* If port is set to 0, do not listen on TCP/IP at all! */</span>
<a name="l02138"></a>02138   <span class="keywordflow">if</span> (port)
<a name="l02139"></a>02139     {
<a name="l02140"></a>02140 
<a name="l02141"></a>02141 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l02142"></a>02142 <span class="preprocessor"></span><span class="preprocessor">#ifdef NRL</span>
<a name="l02143"></a>02143 <span class="preprocessor"></span>      <a class="code" href="vty_8c.html#acf1b5a3deff4b05879a784dd6bfa9a3c">vty_serv_sock_family</a> (addr, port, AF_INET);
<a name="l02144"></a>02144       <a class="code" href="vty_8c.html#acf1b5a3deff4b05879a784dd6bfa9a3c">vty_serv_sock_family</a> (addr, port, AF_INET6);
<a name="l02145"></a>02145 <span class="preprocessor">#else </span><span class="comment">/* ! NRL */</span>
<a name="l02146"></a>02146       vty_serv_sock_addrinfo (addr, port);
<a name="l02147"></a>02147 <span class="preprocessor">#endif </span><span class="comment">/* NRL*/</span>
<a name="l02148"></a>02148 <span class="preprocessor">#else </span><span class="comment">/* ! HAVE_IPV6 */</span>
<a name="l02149"></a>02149       <a class="code" href="vty_8c.html#acf1b5a3deff4b05879a784dd6bfa9a3c">vty_serv_sock_family</a> (addr,port, AF_INET);
<a name="l02150"></a>02150 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l02151"></a>02151     }
<a name="l02152"></a>02152 
<a name="l02153"></a>02153 <span class="preprocessor">#ifdef VTYSH</span>
<a name="l02154"></a>02154 <span class="preprocessor"></span>  vty_serv_un (path);
<a name="l02155"></a>02155 <span class="preprocessor">#endif </span><span class="comment">/* VTYSH */</span>
<a name="l02156"></a>02156 }
<a name="l02157"></a>02157 
<a name="l02158"></a>02158 <span class="comment">/* Close vty interface.  Warning: call this only from functions that</span>
<a name="l02159"></a>02159 <span class="comment">   will be careful not to access the vty afterwards (since it has</span>
<a name="l02160"></a>02160 <span class="comment">   now been freed).  This is safest from top-level functions (called</span>
<a name="l02161"></a>02161 <span class="comment">   directly by the thread dispatcher). */</span>
<a name="l02162"></a>02162 <span class="keywordtype">void</span>
<a name="l02163"></a><a class="code" href="vty_8h.html#aaa36e4b5f82f62e8c904b45a1630a19f">02163</a> <a class="code" href="vty_8c.html#af1d7e2c952dfb90e0a7e2bbe194dedfb">vty_close</a> (<span class="keyword">struct</span> vty *vty)
<a name="l02164"></a>02164 {
<a name="l02165"></a>02165   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l02166"></a>02166 
<a name="l02167"></a>02167   <span class="comment">/* Cancel threads.*/</span>
<a name="l02168"></a>02168   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a5d16168af87165fddd2aa6612c9740f1">t_read</a>)
<a name="l02169"></a>02169     <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (vty-&gt;<a class="code" href="structvty.html#a5d16168af87165fddd2aa6612c9740f1">t_read</a>);
<a name="l02170"></a>02170   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a4feadf59b37669005dd5cdb364a18ccf">t_write</a>)
<a name="l02171"></a>02171     <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (vty-&gt;<a class="code" href="structvty.html#a4feadf59b37669005dd5cdb364a18ccf">t_write</a>);
<a name="l02172"></a>02172   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a42012920c9e6ac0e0d5040ac48496d3e">t_timeout</a>)
<a name="l02173"></a>02173     <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (vty-&gt;<a class="code" href="structvty.html#a42012920c9e6ac0e0d5040ac48496d3e">t_timeout</a>);
<a name="l02174"></a>02174 
<a name="l02175"></a>02175   <span class="comment">/* Flush buffer. */</span>
<a name="l02176"></a>02176   <a class="code" href="buffer_8c.html#a191ab7385104a44e13f385e0e6ca1b5d">buffer_flush_all</a> (vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>, vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>);
<a name="l02177"></a>02177 
<a name="l02178"></a>02178   <span class="comment">/* Free input buffer. */</span>
<a name="l02179"></a>02179   <a class="code" href="buffer_8c.html#a33630b21db5f9cda080c24c3175bde5a">buffer_free</a> (vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>);
<a name="l02180"></a>02180 
<a name="l02181"></a>02181   <span class="comment">/* Free command history. */</span>
<a name="l02182"></a>02182   <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="vty_8h.html#a2c7bf19140857545865be759c8960bc4">VTY_MAXHIST</a>; i++)
<a name="l02183"></a>02183     <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[i])
<a name="l02184"></a>02184       <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167baa0c5966641068bad0544ced1b55176b5">MTYPE_VTY_HIST</a>, vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[i]);
<a name="l02185"></a>02185 
<a name="l02186"></a>02186   <span class="comment">/* Unset vector. */</span>
<a name="l02187"></a>02187   <a class="code" href="vector_8c.html#aedb539ef50499b729c8bfb9c2d7989c3">vector_unset</a> (vtyvec, vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>);
<a name="l02188"></a>02188 
<a name="l02189"></a>02189   <span class="comment">/* Close socket. */</span>
<a name="l02190"></a>02190   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a> &gt; 0)
<a name="l02191"></a>02191     close (vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>);
<a name="l02192"></a>02192 
<a name="l02193"></a>02193   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a9b08efdc39a659f450fdad3ca79a12d8">address</a>)
<a name="l02194"></a>02194     <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, vty-&gt;<a class="code" href="structvty.html#a9b08efdc39a659f450fdad3ca79a12d8">address</a>);
<a name="l02195"></a>02195   <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>)
<a name="l02196"></a>02196     <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba05f7d9e133f49a4c7aaa98a318692c88">MTYPE_VTY</a>, vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>);
<a name="l02197"></a>02197 
<a name="l02198"></a>02198   <span class="comment">/* Check configure. */</span>
<a name="l02199"></a>02199   <a class="code" href="vty_8c.html#ae68c17df6974b76d0977fc41adde0f08">vty_config_unlock</a> (vty);
<a name="l02200"></a>02200 
<a name="l02201"></a>02201   <span class="comment">/* OK free vty. */</span>
<a name="l02202"></a>02202   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba05f7d9e133f49a4c7aaa98a318692c88">MTYPE_VTY</a>, vty);
<a name="l02203"></a>02203 }
<a name="l02204"></a>02204 
<a name="l02205"></a>02205 <span class="comment">/* When time out occur output message then close connection. */</span>
<a name="l02206"></a>02206 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l02207"></a><a class="code" href="vty_8c.html#a749b1b1ed2edbfa6c84c27a042e74331">02207</a> <a class="code" href="vty_8c.html#a749b1b1ed2edbfa6c84c27a042e74331">vty_timeout</a> (<span class="keyword">struct</span> thread *thread)
<a name="l02208"></a>02208 {
<a name="l02209"></a>02209   <span class="keyword">struct </span>vty *<a class="code" href="vtysh_8c.html#a15b2c4e868040617c54eaaba3663b337">vty</a>;
<a name="l02210"></a>02210 
<a name="l02211"></a>02211   vty = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l02212"></a>02212   vty-&gt;<a class="code" href="structvty.html#a42012920c9e6ac0e0d5040ac48496d3e">t_timeout</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02213"></a>02213   vty-&gt;<a class="code" href="structvty.html#aa334d5bb623207305fa72d76151f8096">v_timeout</a> = 0;
<a name="l02214"></a>02214 
<a name="l02215"></a>02215   <span class="comment">/* Clear buffer*/</span>
<a name="l02216"></a>02216   <a class="code" href="buffer_8c.html#a91ad0ff694ccef1876a3e8d8a3b05ffa">buffer_reset</a> (vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>);
<a name="l02217"></a>02217   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%sVty connection is timed out.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02218"></a>02218 
<a name="l02219"></a>02219   <span class="comment">/* Close connection. */</span>
<a name="l02220"></a>02220   vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> = <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6ab568d9eaea4e6aa93ae7fb8a7c65d4cb">VTY_CLOSE</a>;
<a name="l02221"></a>02221   <a class="code" href="vty_8c.html#af1d7e2c952dfb90e0a7e2bbe194dedfb">vty_close</a> (vty);
<a name="l02222"></a>02222 
<a name="l02223"></a>02223   <span class="keywordflow">return</span> 0;
<a name="l02224"></a>02224 }
<a name="l02225"></a>02225 
<a name="l02226"></a>02226 <span class="comment">/* Read up configuration file from file_name. */</span>
<a name="l02227"></a>02227 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l02228"></a><a class="code" href="vty_8c.html#a417754c91a13996d56090005c7eecfe0">02228</a> <a class="code" href="vty_8c.html#a417754c91a13996d56090005c7eecfe0">vty_read_file</a> (FILE *confp)
<a name="l02229"></a>02229 {
<a name="l02230"></a>02230   <span class="keywordtype">int</span> ret;
<a name="l02231"></a>02231   <span class="keyword">struct </span>vty *<a class="code" href="vtysh_8c.html#a15b2c4e868040617c54eaaba3663b337">vty</a>;
<a name="l02232"></a>02232 
<a name="l02233"></a>02233   vty = <a class="code" href="vty_8c.html#a5761c76c7eaf421587052c372034cd57">vty_new</a> ();
<a name="l02234"></a>02234   vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a> = 0;          <span class="comment">/* stdout */</span>
<a name="l02235"></a>02235   vty-&gt;<a class="code" href="structvty.html#a918d01c53936e81c45a177b0ceda3eca">type</a> = <a class="code" href="structvty.html#a6cef26c7c345053bf910a8869d5c3d29adabc52cc2665954eb91c79357821ccb7">VTY_TERM</a>;
<a name="l02236"></a>02236   vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>;
<a name="l02237"></a>02237   
<a name="l02238"></a>02238   <span class="comment">/* Execute configuration file */</span>
<a name="l02239"></a>02239   ret = <a class="code" href="command_8c.html#a1b7a57873be9752c0f5bfc50a6f3c9f0">config_from_file</a> (vty, confp);
<a name="l02240"></a>02240 
<a name="l02241"></a>02241   <span class="keywordflow">if</span> ( !((ret == <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>) || (ret == <a class="code" href="command_8h.html#a6f6aa6c6eb58a1df028034d288d79ddf">CMD_ERR_NOTHING_TODO</a>)) ) 
<a name="l02242"></a>02242     {
<a name="l02243"></a>02243       <span class="keywordflow">switch</span> (ret)
<a name="l02244"></a>02244        {
<a name="l02245"></a>02245          <span class="keywordflow">case</span> <a class="code" href="command_8h.html#aaca9c63a322f9ed0311fd20404ce8e9a">CMD_ERR_AMBIGUOUS</a>:
<a name="l02246"></a>02246            fprintf (stderr, <span class="stringliteral">&quot;Ambiguous command.\n&quot;</span>);
<a name="l02247"></a>02247            <span class="keywordflow">break</span>;
<a name="l02248"></a>02248          <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a007b585758677d61751303a88c8914d5">CMD_ERR_NO_MATCH</a>:
<a name="l02249"></a>02249            fprintf (stderr, <span class="stringliteral">&quot;There is no such command.\n&quot;</span>);
<a name="l02250"></a>02250            <span class="keywordflow">break</span>;
<a name="l02251"></a>02251        }
<a name="l02252"></a>02252       fprintf (stderr, <span class="stringliteral">&quot;Error occured during reading below line.\n%s\n&quot;</span>, 
<a name="l02253"></a>02253            vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>);
<a name="l02254"></a>02254       <a class="code" href="vty_8c.html#af1d7e2c952dfb90e0a7e2bbe194dedfb">vty_close</a> (vty);
<a name="l02255"></a>02255       <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a> (1);
<a name="l02256"></a>02256     }
<a name="l02257"></a>02257 
<a name="l02258"></a>02258   <a class="code" href="vty_8c.html#af1d7e2c952dfb90e0a7e2bbe194dedfb">vty_close</a> (vty);
<a name="l02259"></a>02259 }
<a name="l02260"></a>02260 
<a name="l02261"></a>02261 <span class="keyword">static</span> FILE *
<a name="l02262"></a><a class="code" href="vty_8c.html#a1bf1b8ef400521a7521418f4c463a59a">02262</a> <a class="code" href="vty_8c.html#a1bf1b8ef400521a7521418f4c463a59a">vty_use_backup_config</a> (<span class="keywordtype">char</span> *fullpath)
<a name="l02263"></a>02263 {
<a name="l02264"></a>02264   <span class="keywordtype">char</span> *fullpath_sav, *fullpath_tmp;
<a name="l02265"></a>02265   FILE *ret = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02266"></a>02266   <span class="keyword">struct </span>stat buf;
<a name="l02267"></a>02267   <span class="keywordtype">int</span> tmp, sav;
<a name="l02268"></a>02268   <span class="keywordtype">int</span> c;
<a name="l02269"></a>02269   <span class="keywordtype">char</span> <a class="code" href="structbuffer.html">buffer</a>[512];
<a name="l02270"></a>02270   
<a name="l02271"></a>02271   fullpath_sav = <a class="code" href="regex_8c.html#ab7e36af3707843f77cc5b4e831c2fa6d">malloc</a> (strlen (fullpath) + strlen (<a class="code" href="command_8h.html#a0837aaf45e6c54e1340b0d2df36cd599">CONF_BACKUP_EXT</a>) + 1);
<a name="l02272"></a>02272   strcpy (fullpath_sav, fullpath);
<a name="l02273"></a>02273   strcat (fullpath_sav, <a class="code" href="command_8h.html#a0837aaf45e6c54e1340b0d2df36cd599">CONF_BACKUP_EXT</a>);
<a name="l02274"></a>02274   <span class="keywordflow">if</span> (stat (fullpath_sav, &amp;buf) == -1)
<a name="l02275"></a>02275     {
<a name="l02276"></a>02276       free (fullpath_sav);
<a name="l02277"></a>02277       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02278"></a>02278     }
<a name="l02279"></a>02279 
<a name="l02280"></a>02280   fullpath_tmp = <a class="code" href="regex_8c.html#ab7e36af3707843f77cc5b4e831c2fa6d">malloc</a> (strlen (fullpath) + 8);
<a name="l02281"></a>02281   sprintf (fullpath_tmp, <span class="stringliteral">&quot;%s.XXXXXX&quot;</span>, fullpath);
<a name="l02282"></a>02282   
<a name="l02283"></a>02283   <span class="comment">/* Open file to configuration write. */</span>
<a name="l02284"></a>02284   tmp = mkstemp (fullpath_tmp);
<a name="l02285"></a>02285   <span class="keywordflow">if</span> (tmp &lt; 0)
<a name="l02286"></a>02286     {
<a name="l02287"></a>02287       free (fullpath_sav);
<a name="l02288"></a>02288       free (fullpath_tmp);
<a name="l02289"></a>02289       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02290"></a>02290     }
<a name="l02291"></a>02291 
<a name="l02292"></a>02292   sav = open (fullpath_sav, O_RDONLY);
<a name="l02293"></a>02293   <span class="keywordflow">if</span> (sav &lt; 0)
<a name="l02294"></a>02294     {
<a name="l02295"></a>02295       unlink (fullpath_tmp);
<a name="l02296"></a>02296       free (fullpath_sav);
<a name="l02297"></a>02297       free (fullpath_tmp);
<a name="l02298"></a>02298       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02299"></a>02299     }
<a name="l02300"></a>02300   
<a name="l02301"></a>02301   <span class="keywordflow">while</span>((c = read (sav, buffer, 512)) &gt; 0)
<a name="l02302"></a>02302     write (tmp, buffer, c);
<a name="l02303"></a>02303   
<a name="l02304"></a>02304   close (sav);
<a name="l02305"></a>02305   close (tmp);
<a name="l02306"></a>02306   
<a name="l02307"></a>02307   <span class="keywordflow">if</span> (chmod(fullpath_tmp, CONFIGFILE_MASK) != 0)
<a name="l02308"></a>02308     {
<a name="l02309"></a>02309       unlink (fullpath_tmp);
<a name="l02310"></a>02310       free (fullpath_sav);
<a name="l02311"></a>02311       free (fullpath_tmp);
<a name="l02312"></a>02312       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02313"></a>02313     }
<a name="l02314"></a>02314   
<a name="l02315"></a>02315   <span class="keywordflow">if</span> (link (fullpath_tmp, fullpath) == 0)
<a name="l02316"></a>02316     ret = fopen (fullpath, <span class="stringliteral">&quot;r&quot;</span>);
<a name="l02317"></a>02317 
<a name="l02318"></a>02318   unlink (fullpath_tmp);
<a name="l02319"></a>02319   
<a name="l02320"></a>02320   free (fullpath_sav);
<a name="l02321"></a>02321   free (fullpath_tmp);
<a name="l02322"></a>02322   <span class="keywordflow">return</span> ret;
<a name="l02323"></a>02323 }
<a name="l02324"></a>02324 
<a name="l02325"></a>02325 <span class="comment">/* Read up configuration file from file_name. */</span>
<a name="l02326"></a>02326 <span class="keywordtype">void</span>
<a name="l02327"></a><a class="code" href="vty_8h.html#a2aa0ab3514fe5f485d666d636b13af4a">02327</a> <a class="code" href="vty_8c.html#a414904627a8d3bbba1b20d769f836a70">vty_read_config</a> (<span class="keywordtype">char</span> *<a class="code" href="bgp__main_8c.html#ac269be8b91ae4b24df48de5d8ad7e7a7">config_file</a>,
<a name="l02328"></a>02328                  <span class="keywordtype">char</span> *config_default_dir)
<a name="l02329"></a>02329 {
<a name="l02330"></a>02330   <span class="keywordtype">char</span> cwd[MAXPATHLEN];
<a name="l02331"></a>02331   FILE *confp = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02332"></a>02332   <span class="keywordtype">char</span> *fullpath;
<a name="l02333"></a>02333   <span class="keywordtype">char</span> *tmp = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02334"></a>02334 
<a name="l02335"></a>02335   <span class="comment">/* If -f flag specified. */</span>
<a name="l02336"></a>02336   <span class="keywordflow">if</span> (config_file != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02337"></a>02337     {
<a name="l02338"></a>02338       <span class="keywordflow">if</span> (! <a class="code" href="vty_8h.html#ab275a8ecec3850e25e7aaf9ff701e3ac">IS_DIRECTORY_SEP</a> (config_file[0]))
<a name="l02339"></a>02339         {
<a name="l02340"></a>02340           getcwd (cwd, MAXPATHLEN);
<a name="l02341"></a>02341           tmp = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, 
<a name="l02342"></a>02342                   strlen (cwd) + strlen (config_file) + 2);
<a name="l02343"></a>02343           sprintf (tmp, <span class="stringliteral">&quot;%s/%s&quot;</span>, cwd, config_file);
<a name="l02344"></a>02344           fullpath = tmp;
<a name="l02345"></a>02345         }
<a name="l02346"></a>02346       <span class="keywordflow">else</span>
<a name="l02347"></a>02347         fullpath = <a class="code" href="bgp__main_8c.html#ac269be8b91ae4b24df48de5d8ad7e7a7">config_file</a>;
<a name="l02348"></a>02348 
<a name="l02349"></a>02349       confp = fopen (fullpath, <span class="stringliteral">&quot;r&quot;</span>);
<a name="l02350"></a>02350 
<a name="l02351"></a>02351       <span class="keywordflow">if</span> (confp == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02352"></a>02352         {
<a name="l02353"></a>02353           fprintf (stderr, <span class="stringliteral">&quot;%s: failed to open configuration file %s: %s\n&quot;</span>,
<a name="l02354"></a>02354                    __func__, fullpath, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
<a name="l02355"></a>02355           
<a name="l02356"></a>02356           confp = <a class="code" href="vty_8c.html#a1bf1b8ef400521a7521418f4c463a59a">vty_use_backup_config</a> (fullpath);
<a name="l02357"></a>02357           <span class="keywordflow">if</span> (confp)
<a name="l02358"></a>02358             fprintf (stderr, <span class="stringliteral">&quot;WARNING: using backup configuration file!\n&quot;</span>);
<a name="l02359"></a>02359           <span class="keywordflow">else</span>
<a name="l02360"></a>02360             {
<a name="l02361"></a>02361               fprintf (stderr, <span class="stringliteral">&quot;can&#39;t open configuration file [%s]\n&quot;</span>, 
<a name="l02362"></a>02362                    config_file);
<a name="l02363"></a>02363               <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a>(1);
<a name="l02364"></a>02364             }
<a name="l02365"></a>02365         }
<a name="l02366"></a>02366     }
<a name="l02367"></a>02367   <span class="keywordflow">else</span>
<a name="l02368"></a>02368     {
<a name="l02369"></a>02369 <span class="preprocessor">#ifdef VTYSH</span>
<a name="l02370"></a>02370 <span class="preprocessor"></span>      <span class="keywordtype">int</span> ret;
<a name="l02371"></a>02371       <span class="keyword">struct </span>stat conf_stat;
<a name="l02372"></a>02372 
<a name="l02373"></a>02373       <span class="comment">/* !!!!PLEASE LEAVE!!!!</span>
<a name="l02374"></a>02374 <span class="comment">       * This is NEEDED for use with vtysh -b, or else you can get</span>
<a name="l02375"></a>02375 <span class="comment">       * a real configuration food fight with a lot garbage in the</span>
<a name="l02376"></a>02376 <span class="comment">       * merged configuration file it creates coming from the per</span>
<a name="l02377"></a>02377 <span class="comment">       * daemon configuration files.  This also allows the daemons</span>
<a name="l02378"></a>02378 <span class="comment">       * to start if there default configuration file is not</span>
<a name="l02379"></a>02379 <span class="comment">       * present or ignore them, as needed when using vtysh -b to</span>
<a name="l02380"></a>02380 <span class="comment">       * configure the daemons at boot - MAG</span>
<a name="l02381"></a>02381 <span class="comment">       */</span>
<a name="l02382"></a>02382 
<a name="l02383"></a>02383       <span class="comment">/* Stat for vtysh Zebra.conf, if found startup and wait for</span>
<a name="l02384"></a>02384 <span class="comment">       * boot configuration</span>
<a name="l02385"></a>02385 <span class="comment">       */</span>
<a name="l02386"></a>02386 
<a name="l02387"></a>02387       <span class="keywordflow">if</span> ( strstr(config_default_dir, <span class="stringliteral">&quot;vtysh&quot;</span>) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02388"></a>02388         {
<a name="l02389"></a>02389           ret = stat (<a class="code" href="vty_8c.html#a1374f502412fa0cf9bac27528c3739f6">integrate_default</a>, &amp;conf_stat);
<a name="l02390"></a>02390           <span class="keywordflow">if</span> (ret &gt;= 0)
<a name="l02391"></a>02391             <span class="keywordflow">return</span>;
<a name="l02392"></a>02392         }
<a name="l02393"></a>02393 <span class="preprocessor">#endif </span><span class="comment">/* VTYSH */</span>
<a name="l02394"></a>02394 
<a name="l02395"></a>02395       confp = fopen (config_default_dir, <span class="stringliteral">&quot;r&quot;</span>);
<a name="l02396"></a>02396       <span class="keywordflow">if</span> (confp == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02397"></a>02397         {
<a name="l02398"></a>02398           fprintf (stderr, <span class="stringliteral">&quot;%s: failed to open configuration file %s: %s\n&quot;</span>,
<a name="l02399"></a>02399                    __func__, config_default_dir, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
<a name="l02400"></a>02400           
<a name="l02401"></a>02401           confp = <a class="code" href="vty_8c.html#a1bf1b8ef400521a7521418f4c463a59a">vty_use_backup_config</a> (config_default_dir);
<a name="l02402"></a>02402           <span class="keywordflow">if</span> (confp)
<a name="l02403"></a>02403             {
<a name="l02404"></a>02404               fprintf (stderr, <span class="stringliteral">&quot;WARNING: using backup configuration file!\n&quot;</span>);
<a name="l02405"></a>02405               fullpath = config_default_dir;
<a name="l02406"></a>02406             }
<a name="l02407"></a>02407           <span class="keywordflow">else</span>
<a name="l02408"></a>02408             {
<a name="l02409"></a>02409               fprintf (stderr, <span class="stringliteral">&quot;can&#39;t open configuration file [%s]\n&quot;</span>,
<a name="l02410"></a>02410                          config_default_dir);
<a name="l02411"></a>02411               <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a> (1);
<a name="l02412"></a>02412             }
<a name="l02413"></a>02413         }      
<a name="l02414"></a>02414       <span class="keywordflow">else</span>
<a name="l02415"></a>02415         fullpath = config_default_dir;
<a name="l02416"></a>02416     }
<a name="l02417"></a>02417 
<a name="l02418"></a>02418   <a class="code" href="vty_8c.html#a417754c91a13996d56090005c7eecfe0">vty_read_file</a> (confp);
<a name="l02419"></a>02419 
<a name="l02420"></a>02420   fclose (confp);
<a name="l02421"></a>02421 
<a name="l02422"></a>02422   <a class="code" href="command_8h.html#a98321817fecd3351cf782333d614c04f">host_config_set</a> (fullpath);
<a name="l02423"></a>02423   
<a name="l02424"></a>02424   <span class="keywordflow">if</span> (tmp)
<a name="l02425"></a>02425     <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, fullpath);
<a name="l02426"></a>02426 }
<a name="l02427"></a>02427 
<a name="l02428"></a>02428 <span class="comment">/* Small utility function which output log to the VTY. */</span>
<a name="l02429"></a>02429 <span class="keywordtype">void</span>
<a name="l02430"></a><a class="code" href="vty_8h.html#abd94910259e47d55dc83dda41efeb871">02430</a> <a class="code" href="vty_8c.html#adc0f09a34324734b4f87905ae873cc55">vty_log</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *level, <span class="keyword">const</span> <span class="keywordtype">char</span> *proto_str,
<a name="l02431"></a>02431      <span class="keyword">const</span> <span class="keywordtype">char</span> *format, <span class="keyword">struct</span> <a class="code" href="structtimestamp__control.html">timestamp_control</a> *ctl, va_list va)
<a name="l02432"></a>02432 {
<a name="l02433"></a>02433   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l02434"></a>02434   <span class="keyword">struct </span>vty *<a class="code" href="vtysh_8c.html#a15b2c4e868040617c54eaaba3663b337">vty</a>;
<a name="l02435"></a>02435   
<a name="l02436"></a>02436   <span class="keywordflow">if</span> (!vtyvec)
<a name="l02437"></a>02437     <span class="keywordflow">return</span>;
<a name="l02438"></a>02438 
<a name="l02439"></a>02439   <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="vector_8h.html#ac96b7beddf251a81df131543d06d63c7">vector_active</a> (vtyvec); i++)
<a name="l02440"></a>02440     <span class="keywordflow">if</span> ((vty = <a class="code" href="vector_8h.html#a34cb4a77fbd6ab6cb23707cdd1c4c0d2">vector_slot</a> (vtyvec, i)) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02441"></a>02441       <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#ace142d1b856ed1776e4a48684222b01f">monitor</a>)
<a name="l02442"></a>02442     {
<a name="l02443"></a>02443       va_list ac;
<a name="l02444"></a>02444       <a class="code" href="zebra_8h.html#a3a33fef6728dc26a7e3fd47ad35ad3ae">va_copy</a>(ac, va);
<a name="l02445"></a>02445       <a class="code" href="vty_8c.html#a1c349ce48acd7ad68f569644292d38f1">vty_log_out</a> (vty, level, proto_str, format, ctl, ac);
<a name="l02446"></a>02446       va_end(ac);
<a name="l02447"></a>02447     }
<a name="l02448"></a>02448 }
<a name="l02449"></a>02449 
<a name="l02450"></a>02450 <span class="comment">/* Async-signal-safe version of vty_log for fixed strings. */</span>
<a name="l02451"></a>02451 <span class="keywordtype">void</span>
<a name="l02452"></a><a class="code" href="vty_8h.html#ac0b3f6add8b1af732eb0289a31c58f87">02452</a> <a class="code" href="vty_8c.html#ac0b3f6add8b1af732eb0289a31c58f87">vty_log_fixed</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *buf, <span class="keywordtype">size_t</span> len)
<a name="l02453"></a>02453 {
<a name="l02454"></a>02454   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l02455"></a>02455   <span class="keyword">struct </span>iovec iov[2];
<a name="l02456"></a>02456 
<a name="l02457"></a>02457   <span class="comment">/* vty may not have been initialised */</span>
<a name="l02458"></a>02458   <span class="keywordflow">if</span> (!vtyvec)
<a name="l02459"></a>02459     <span class="keywordflow">return</span>;
<a name="l02460"></a>02460   
<a name="l02461"></a>02461   iov[0].iov_base = (<span class="keywordtype">void</span> *)buf;
<a name="l02462"></a>02462   iov[0].iov_len = len;
<a name="l02463"></a>02463   iov[1].iov_base = (<span class="keywordtype">void</span> *)<span class="stringliteral">&quot;\r\n&quot;</span>;
<a name="l02464"></a>02464   iov[1].iov_len = 2;
<a name="l02465"></a>02465 
<a name="l02466"></a>02466   <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="vector_8h.html#ac96b7beddf251a81df131543d06d63c7">vector_active</a> (vtyvec); i++)
<a name="l02467"></a>02467     {
<a name="l02468"></a>02468       <span class="keyword">struct </span>vty *<a class="code" href="vtysh_8c.html#a15b2c4e868040617c54eaaba3663b337">vty</a>;
<a name="l02469"></a>02469       <span class="keywordflow">if</span> (((vty = <a class="code" href="vector_8h.html#a34cb4a77fbd6ab6cb23707cdd1c4c0d2">vector_slot</a> (vtyvec, i)) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) &amp;&amp; vty-&gt;<a class="code" href="structvty.html#ace142d1b856ed1776e4a48684222b01f">monitor</a>)
<a name="l02470"></a>02470     <span class="comment">/* N.B. We don&#39;t care about the return code, since process is</span>
<a name="l02471"></a>02471 <span class="comment">       most likely just about to die anyway. */</span>
<a name="l02472"></a>02472     writev(vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>, iov, 2);
<a name="l02473"></a>02473     }
<a name="l02474"></a>02474 }
<a name="l02475"></a>02475 
<a name="l02476"></a>02476 <span class="keywordtype">int</span>
<a name="l02477"></a><a class="code" href="vty_8h.html#a0a03a6ecf793cea8d20bd829fcd3fbb4">02477</a> <a class="code" href="vty_8c.html#ae9113e4324d8e142ea8efd2402667b72">vty_config_lock</a> (<span class="keyword">struct</span> vty *vty)
<a name="l02478"></a>02478 {
<a name="l02479"></a>02479   <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#a472109ecd35a2f4a2953e6ca76a5824d">vty_config</a> == 0)
<a name="l02480"></a>02480     {
<a name="l02481"></a>02481       vty-&gt;<a class="code" href="structvty.html#a2dceb86fc008314e2f573e3880f7fbfc">config</a> = 1;
<a name="l02482"></a>02482       <a class="code" href="vty_8c.html#a472109ecd35a2f4a2953e6ca76a5824d">vty_config</a> = 1;
<a name="l02483"></a>02483     }
<a name="l02484"></a>02484   <span class="keywordflow">return</span> vty-&gt;<a class="code" href="structvty.html#a2dceb86fc008314e2f573e3880f7fbfc">config</a>;
<a name="l02485"></a>02485 }
<a name="l02486"></a>02486 
<a name="l02487"></a>02487 <span class="keywordtype">int</span>
<a name="l02488"></a><a class="code" href="vty_8h.html#ab7fcdcad544e949350edbf205748e694">02488</a> <a class="code" href="vty_8c.html#ae68c17df6974b76d0977fc41adde0f08">vty_config_unlock</a> (<span class="keyword">struct</span> vty *vty)
<a name="l02489"></a>02489 {
<a name="l02490"></a>02490   <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#a472109ecd35a2f4a2953e6ca76a5824d">vty_config</a> == 1 &amp;&amp; vty-&gt;<a class="code" href="structvty.html#a2dceb86fc008314e2f573e3880f7fbfc">config</a> == 1)
<a name="l02491"></a>02491     {
<a name="l02492"></a>02492       vty-&gt;<a class="code" href="structvty.html#a2dceb86fc008314e2f573e3880f7fbfc">config</a> = 0;
<a name="l02493"></a>02493       <a class="code" href="vty_8c.html#a472109ecd35a2f4a2953e6ca76a5824d">vty_config</a> = 0;
<a name="l02494"></a>02494     }
<a name="l02495"></a>02495   <span class="keywordflow">return</span> vty-&gt;<a class="code" href="structvty.html#a2dceb86fc008314e2f573e3880f7fbfc">config</a>;
<a name="l02496"></a>02496 }
<a name="l02497"></a>02497 
<a name="l02498"></a>02498 <span class="comment">/* Master of the threads. */</span>
<a name="l02499"></a><a class="code" href="vty_8c.html#af7f9077bc08df049beb65a1c09cde5fa">02499</a> <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structthread__master.html">thread_master</a> *<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>;
<a name="l02500"></a>02500 
<a name="l02501"></a>02501 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l02502"></a>02502 <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<span class="keyword">enum</span> <a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a> <a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a>, <span class="keywordtype">int</span> sock, <span class="keyword">struct</span> vty *vty)
<a name="l02503"></a>02503 {
<a name="l02504"></a>02504   <span class="keyword">struct </span>thread *vty_serv_thread;
<a name="l02505"></a>02505 
<a name="l02506"></a>02506   <span class="keywordflow">switch</span> (event)
<a name="l02507"></a>02507     {
<a name="l02508"></a>02508     <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea8fd18ac65705a12e09a38d18e47d12ec">VTY_SERV</a>:
<a name="l02509"></a>02509       vty_serv_thread = <a class="code" href="thread_8h.html#abd1714f11834a150c84b040c0c69b620">thread_add_read</a> (master, <a class="code" href="vty_8c.html#a06c13020e404fcc818d1d445f9d34a08">vty_accept</a>, vty, sock);
<a name="l02510"></a>02510       <a class="code" href="vector_8c.html#a4ab15201b63a93279459a6d3d90600e5">vector_set_index</a> (Vvty_serv_thread, sock, vty_serv_thread);
<a name="l02511"></a>02511       <span class="keywordflow">break</span>;
<a name="l02512"></a>02512 <span class="preprocessor">#ifdef VTYSH</span>
<a name="l02513"></a>02513 <span class="preprocessor"></span>    <span class="keywordflow">case</span> VTYSH_SERV:
<a name="l02514"></a>02514       <a class="code" href="thread_8h.html#abd1714f11834a150c84b040c0c69b620">thread_add_read</a> (master, vtysh_accept, vty, sock);
<a name="l02515"></a>02515       <span class="keywordflow">break</span>;
<a name="l02516"></a>02516     <span class="keywordflow">case</span> VTYSH_READ:
<a name="l02517"></a>02517       vty-&gt;<a class="code" href="structvty.html#a5d16168af87165fddd2aa6612c9740f1">t_read</a> = <a class="code" href="thread_8h.html#abd1714f11834a150c84b040c0c69b620">thread_add_read</a> (master, vtysh_read, vty, sock);
<a name="l02518"></a>02518       <span class="keywordflow">break</span>;
<a name="l02519"></a>02519     <span class="keywordflow">case</span> VTYSH_WRITE:
<a name="l02520"></a>02520       vty-&gt;<a class="code" href="structvty.html#a4feadf59b37669005dd5cdb364a18ccf">t_write</a> = <a class="code" href="thread_8h.html#a8a2f048ba94722b1e88f08254fbd4444">thread_add_write</a> (master, vtysh_write, vty, sock);
<a name="l02521"></a>02521       <span class="keywordflow">break</span>;
<a name="l02522"></a>02522 <span class="preprocessor">#endif </span><span class="comment">/* VTYSH */</span>
<a name="l02523"></a>02523     <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea9ed3db9f85ae6bdc30382d62bc01a807">VTY_READ</a>:
<a name="l02524"></a>02524       vty-&gt;<a class="code" href="structvty.html#a5d16168af87165fddd2aa6612c9740f1">t_read</a> = <a class="code" href="thread_8h.html#abd1714f11834a150c84b040c0c69b620">thread_add_read</a> (master, <a class="code" href="vty_8c.html#aef96c1c84762b295bd4eb8149b8c7cd7">vty_read</a>, vty, sock);
<a name="l02525"></a>02525 
<a name="l02526"></a>02526       <span class="comment">/* Time out treatment. */</span>
<a name="l02527"></a>02527       <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#aa334d5bb623207305fa72d76151f8096">v_timeout</a>)
<a name="l02528"></a>02528     {
<a name="l02529"></a>02529       <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a42012920c9e6ac0e0d5040ac48496d3e">t_timeout</a>)
<a name="l02530"></a>02530         <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (vty-&gt;<a class="code" href="structvty.html#a42012920c9e6ac0e0d5040ac48496d3e">t_timeout</a>);
<a name="l02531"></a>02531       vty-&gt;<a class="code" href="structvty.html#a42012920c9e6ac0e0d5040ac48496d3e">t_timeout</a> = 
<a name="l02532"></a>02532         <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (master, <a class="code" href="vty_8c.html#a749b1b1ed2edbfa6c84c27a042e74331">vty_timeout</a>, vty, vty-&gt;<a class="code" href="structvty.html#aa334d5bb623207305fa72d76151f8096">v_timeout</a>);
<a name="l02533"></a>02533     }
<a name="l02534"></a>02534       <span class="keywordflow">break</span>;
<a name="l02535"></a>02535     <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea73e4d70c7cc9c2560723e639332d7f2d">VTY_WRITE</a>:
<a name="l02536"></a>02536       <span class="keywordflow">if</span> (! vty-&gt;<a class="code" href="structvty.html#a4feadf59b37669005dd5cdb364a18ccf">t_write</a>)
<a name="l02537"></a>02537     vty-&gt;<a class="code" href="structvty.html#a4feadf59b37669005dd5cdb364a18ccf">t_write</a> = <a class="code" href="thread_8h.html#a8a2f048ba94722b1e88f08254fbd4444">thread_add_write</a> (master, <a class="code" href="vty_8c.html#a011ab81751a98ad0b5ecb28d6b3a29b2">vty_flush</a>, vty, sock);
<a name="l02538"></a>02538       <span class="keywordflow">break</span>;
<a name="l02539"></a>02539     <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9eada5cbc98f077a6a603d7c200d654042c">VTY_TIMEOUT_RESET</a>:
<a name="l02540"></a>02540       <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a42012920c9e6ac0e0d5040ac48496d3e">t_timeout</a>)
<a name="l02541"></a>02541     {
<a name="l02542"></a>02542       <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (vty-&gt;<a class="code" href="structvty.html#a42012920c9e6ac0e0d5040ac48496d3e">t_timeout</a>);
<a name="l02543"></a>02543       vty-&gt;<a class="code" href="structvty.html#a42012920c9e6ac0e0d5040ac48496d3e">t_timeout</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02544"></a>02544     }
<a name="l02545"></a>02545       <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#aa334d5bb623207305fa72d76151f8096">v_timeout</a>)
<a name="l02546"></a>02546     {
<a name="l02547"></a>02547       vty-&gt;<a class="code" href="structvty.html#a42012920c9e6ac0e0d5040ac48496d3e">t_timeout</a> = 
<a name="l02548"></a>02548         <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (master, <a class="code" href="vty_8c.html#a749b1b1ed2edbfa6c84c27a042e74331">vty_timeout</a>, vty, vty-&gt;<a class="code" href="structvty.html#aa334d5bb623207305fa72d76151f8096">v_timeout</a>);
<a name="l02549"></a>02549     }
<a name="l02550"></a>02550       <span class="keywordflow">break</span>;
<a name="l02551"></a>02551     }
<a name="l02552"></a>02552 }
<a name="l02553"></a>02553 
<a name="l02554"></a><a class="code" href="vty_8c.html#a1931f4b8055fd071f654574b62d83b62">02554</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (config_who,
<a name="l02555"></a>02555        config_who_cmd,
<a name="l02556"></a>02556        <span class="stringliteral">&quot;who&quot;</span>,
<a name="l02557"></a>02557        <span class="stringliteral">&quot;Display who is on vty\n&quot;</span>)
<a name="l02558"></a>02558 {
<a name="l02559"></a>02559   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l02560"></a>02560   <span class="keyword">struct </span>vty *v;
<a name="l02561"></a>02561 
<a name="l02562"></a>02562   <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="vector_8h.html#ac96b7beddf251a81df131543d06d63c7">vector_active</a> (vtyvec); i++)
<a name="l02563"></a>02563     <span class="keywordflow">if</span> ((v = <a class="code" href="vector_8h.html#a34cb4a77fbd6ab6cb23707cdd1c4c0d2">vector_slot</a> (vtyvec, i)) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02564"></a>02564       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%svty[%d] connected from %s.%s&quot;</span>,
<a name="l02565"></a>02565            v-&gt;<a class="code" href="structvty.html#a2dceb86fc008314e2f573e3880f7fbfc">config</a> ? <span class="stringliteral">&quot;*&quot;</span> : <span class="stringliteral">&quot; &quot;</span>,
<a name="l02566"></a>02566            i, v-&gt;<a class="code" href="structvty.html#a9b08efdc39a659f450fdad3ca79a12d8">address</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02567"></a>02567   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02568"></a>02568 }
<a name="l02569"></a>02569 
<a name="l02570"></a>02570 <span class="comment">/* Move to vty configuration mode. */</span>
<a name="l02571"></a><a class="code" href="vty_8c.html#acab3ff871216eb7fbfa8b54c5a423d67">02571</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (line_vty,
<a name="l02572"></a>02572        line_vty_cmd,
<a name="l02573"></a>02573        <span class="stringliteral">&quot;line vty&quot;</span>,
<a name="l02574"></a>02574        <span class="stringliteral">&quot;Configure a terminal line\n&quot;</span>
<a name="l02575"></a>02575        <span class="stringliteral">&quot;Virtual terminal\n&quot;</span>)
<a name="l02576"></a>02576 {
<a name="l02577"></a>02577   vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>;
<a name="l02578"></a>02578   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02579"></a>02579 }
<a name="l02580"></a>02580 
<a name="l02581"></a>02581 <span class="comment">/* Set time out value. */</span>
<a name="l02582"></a>02582 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l02583"></a><a class="code" href="vty_8c.html#a5b1707211c50c8f95a3c93f52017b1d3">02583</a> <a class="code" href="vty_8c.html#a5b1707211c50c8f95a3c93f52017b1d3">exec_timeout</a> (<span class="keyword">struct</span> vty *vty, <span class="keyword">const</span> <span class="keywordtype">char</span> *min_str, <span class="keyword">const</span> <span class="keywordtype">char</span> *sec_str)
<a name="l02584"></a>02584 {
<a name="l02585"></a>02585   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> timeout = 0;
<a name="l02586"></a>02586 
<a name="l02587"></a>02587   <span class="comment">/* min_str and sec_str are already checked by parser.  So it must be</span>
<a name="l02588"></a>02588 <span class="comment">     all digit string. */</span>
<a name="l02589"></a>02589   <span class="keywordflow">if</span> (min_str)
<a name="l02590"></a>02590     {
<a name="l02591"></a>02591       timeout = strtol (min_str, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 10);
<a name="l02592"></a>02592       timeout *= 60;
<a name="l02593"></a>02593     }
<a name="l02594"></a>02594   <span class="keywordflow">if</span> (sec_str)
<a name="l02595"></a>02595     timeout += strtol (sec_str, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 10);
<a name="l02596"></a>02596 
<a name="l02597"></a>02597   <a class="code" href="vty_8c.html#a9dc870017884136998187f770ec7851c">vty_timeout_val</a> = timeout;
<a name="l02598"></a>02598   vty-&gt;<a class="code" href="structvty.html#aa334d5bb623207305fa72d76151f8096">v_timeout</a> = timeout;
<a name="l02599"></a>02599   <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9eada5cbc98f077a6a603d7c200d654042c">VTY_TIMEOUT_RESET</a>, 0, vty);
<a name="l02600"></a>02600 
<a name="l02601"></a>02601 
<a name="l02602"></a>02602   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02603"></a>02603 }
<a name="l02604"></a>02604 
<a name="l02605"></a><a class="code" href="vty_8c.html#aa3d382bca4b236be16a8b630dd023728">02605</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (exec_timeout_min,
<a name="l02606"></a>02606        exec_timeout_min_cmd,
<a name="l02607"></a>02607        <span class="stringliteral">&quot;exec-timeout &lt;0-35791&gt;&quot;</span>,
<a name="l02608"></a>02608        <span class="stringliteral">&quot;Set timeout value\n&quot;</span>
<a name="l02609"></a>02609        <span class="stringliteral">&quot;Timeout value in minutes\n&quot;</span>)
<a name="l02610"></a>02610 {
<a name="l02611"></a>02611   <span class="keywordflow">return</span> <a class="code" href="vty_8c.html#a5b1707211c50c8f95a3c93f52017b1d3">exec_timeout</a> (vty, argv[0], <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l02612"></a>02612 }
<a name="l02613"></a>02613 
<a name="l02614"></a><a class="code" href="vty_8c.html#ac3e172a6eefc89d7439f4da31ce429e2">02614</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (exec_timeout_sec,
<a name="l02615"></a>02615        exec_timeout_sec_cmd,
<a name="l02616"></a>02616        <span class="stringliteral">&quot;exec-timeout &lt;0-35791&gt; &lt;0-2147483&gt;&quot;</span>,
<a name="l02617"></a>02617        <span class="stringliteral">&quot;Set the EXEC timeout\n&quot;</span>
<a name="l02618"></a>02618        <span class="stringliteral">&quot;Timeout in minutes\n&quot;</span>
<a name="l02619"></a>02619        <span class="stringliteral">&quot;Timeout in seconds\n&quot;</span>)
<a name="l02620"></a>02620 {
<a name="l02621"></a>02621   <span class="keywordflow">return</span> <a class="code" href="vty_8c.html#a5b1707211c50c8f95a3c93f52017b1d3">exec_timeout</a> (vty, argv[0], argv[1]);
<a name="l02622"></a>02622 }
<a name="l02623"></a>02623 
<a name="l02624"></a><a class="code" href="vty_8c.html#aa6e7816a40a2200ddf4070dbee7492a2">02624</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_exec_timeout,
<a name="l02625"></a>02625        no_exec_timeout_cmd,
<a name="l02626"></a>02626        <span class="stringliteral">&quot;no exec-timeout&quot;</span>,
<a name="l02627"></a>02627        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02628"></a>02628        <span class="stringliteral">&quot;Set the EXEC timeout\n&quot;</span>)
<a name="l02629"></a>02629 {
<a name="l02630"></a>02630   <span class="keywordflow">return</span> <a class="code" href="vty_8c.html#a5b1707211c50c8f95a3c93f52017b1d3">exec_timeout</a> (vty, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l02631"></a>02631 }
<a name="l02632"></a>02632 
<a name="l02633"></a>02633 <span class="comment">/* Set vty access class. */</span>
<a name="l02634"></a><a class="code" href="vty_8c.html#a1d5a3faec6c38257fce65380233a8437">02634</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (vty_access_class,
<a name="l02635"></a>02635        vty_access_class_cmd,
<a name="l02636"></a>02636        <span class="stringliteral">&quot;access-class WORD&quot;</span>,
<a name="l02637"></a>02637        <span class="stringliteral">&quot;Filter connections based on an IP access list\n&quot;</span>
<a name="l02638"></a>02638        <span class="stringliteral">&quot;IP access list\n&quot;</span>)
<a name="l02639"></a>02639 {
<a name="l02640"></a>02640   <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a>)
<a name="l02641"></a>02641     <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a>(<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba05f7d9e133f49a4c7aaa98a318692c88">MTYPE_VTY</a>, <a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a>);
<a name="l02642"></a>02642 
<a name="l02643"></a>02643   <a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a> = <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a>(<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba05f7d9e133f49a4c7aaa98a318692c88">MTYPE_VTY</a>, argv[0]);
<a name="l02644"></a>02644 
<a name="l02645"></a>02645   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02646"></a>02646 }
<a name="l02647"></a>02647 
<a name="l02648"></a>02648 <span class="comment">/* Clear vty access class. */</span>
<a name="l02649"></a><a class="code" href="vty_8c.html#aaadb67dc0374e419ddbbf8acf5646d82">02649</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_vty_access_class,
<a name="l02650"></a>02650        no_vty_access_class_cmd,
<a name="l02651"></a>02651        <span class="stringliteral">&quot;no access-class [WORD]&quot;</span>,
<a name="l02652"></a>02652        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02653"></a>02653        <span class="stringliteral">&quot;Filter connections based on an IP access list\n&quot;</span>
<a name="l02654"></a>02654        <span class="stringliteral">&quot;IP access list\n&quot;</span>)
<a name="l02655"></a>02655 {
<a name="l02656"></a>02656   <span class="keywordflow">if</span> (! <a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a> || (argc &amp;&amp; strcmp(<a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a>, argv[0])))
<a name="l02657"></a>02657     {
<a name="l02658"></a>02658       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;Access-class is not currently applied to vty%s&quot;</span>,
<a name="l02659"></a>02659            <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02660"></a>02660       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02661"></a>02661     }
<a name="l02662"></a>02662 
<a name="l02663"></a>02663   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a>(<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba05f7d9e133f49a4c7aaa98a318692c88">MTYPE_VTY</a>, <a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a>);
<a name="l02664"></a>02664 
<a name="l02665"></a>02665   <a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02666"></a>02666 
<a name="l02667"></a>02667   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02668"></a>02668 }
<a name="l02669"></a>02669 
<a name="l02670"></a>02670 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l02671"></a>02671 <span class="preprocessor"></span><span class="comment">/* Set vty access class. */</span>
<a name="l02672"></a>02672 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (vty_ipv6_access_class,
<a name="l02673"></a>02673        vty_ipv6_access_class_cmd,
<a name="l02674"></a>02674        <span class="stringliteral">&quot;ipv6 access-class WORD&quot;</span>,
<a name="l02675"></a>02675        <a class="code" href="command_8h.html#a97fa3de206286c30e3efe26747c25352">IPV6_STR</a>
<a name="l02676"></a>02676        <span class="stringliteral">&quot;Filter connections based on an IP access list\n&quot;</span>
<a name="l02677"></a>02677        <span class="stringliteral">&quot;IPv6 access list\n&quot;</span>)
<a name="l02678"></a>02678 {
<a name="l02679"></a>02679   <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a>)
<a name="l02680"></a>02680     <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a>(<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba05f7d9e133f49a4c7aaa98a318692c88">MTYPE_VTY</a>, <a class="code" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a>);
<a name="l02681"></a>02681 
<a name="l02682"></a>02682   <a class="code" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a> = <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a>(<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba05f7d9e133f49a4c7aaa98a318692c88">MTYPE_VTY</a>, argv[0]);
<a name="l02683"></a>02683 
<a name="l02684"></a>02684   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02685"></a>02685 }
<a name="l02686"></a>02686 
<a name="l02687"></a>02687 <span class="comment">/* Clear vty access class. */</span>
<a name="l02688"></a>02688 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_vty_ipv6_access_class,
<a name="l02689"></a>02689        no_vty_ipv6_access_class_cmd,
<a name="l02690"></a>02690        <span class="stringliteral">&quot;no ipv6 access-class [WORD]&quot;</span>,
<a name="l02691"></a>02691        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02692"></a>02692        <a class="code" href="command_8h.html#a97fa3de206286c30e3efe26747c25352">IPV6_STR</a>
<a name="l02693"></a>02693        <span class="stringliteral">&quot;Filter connections based on an IP access list\n&quot;</span>
<a name="l02694"></a>02694        <span class="stringliteral">&quot;IPv6 access list\n&quot;</span>)
<a name="l02695"></a>02695 {
<a name="l02696"></a>02696   <span class="keywordflow">if</span> (! <a class="code" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a> ||
<a name="l02697"></a>02697       (argc &amp;&amp; strcmp(<a class="code" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a>, argv[0])))
<a name="l02698"></a>02698     {
<a name="l02699"></a>02699       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;IPv6 access-class is not currently applied to vty%s&quot;</span>,
<a name="l02700"></a>02700            <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02701"></a>02701       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02702"></a>02702     }
<a name="l02703"></a>02703 
<a name="l02704"></a>02704   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a>(<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba05f7d9e133f49a4c7aaa98a318692c88">MTYPE_VTY</a>, <a class="code" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a>);
<a name="l02705"></a>02705 
<a name="l02706"></a>02706   <a class="code" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02707"></a>02707 
<a name="l02708"></a>02708   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02709"></a>02709 }
<a name="l02710"></a>02710 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l02711"></a>02711 
<a name="l02712"></a>02712 <span class="comment">/* vty login. */</span>
<a name="l02713"></a><a class="code" href="vty_8c.html#a44366d0f6b78ffeafed1bd40303770e8">02713</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (vty_login,
<a name="l02714"></a>02714        vty_login_cmd,
<a name="l02715"></a>02715        <span class="stringliteral">&quot;login&quot;</span>,
<a name="l02716"></a>02716        <span class="stringliteral">&quot;Enable password checking\n&quot;</span>)
<a name="l02717"></a>02717 {
<a name="l02718"></a>02718   <a class="code" href="vty_8c.html#a27b0172ccf3d40051140bb3a04607711">no_password_check</a> = 0;
<a name="l02719"></a>02719   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02720"></a>02720 }
<a name="l02721"></a>02721 
<a name="l02722"></a><a class="code" href="vty_8c.html#ae17bb2559d2a183b1a5cb0f2247bf965">02722</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_vty_login,
<a name="l02723"></a>02723        no_vty_login_cmd,
<a name="l02724"></a>02724        <span class="stringliteral">&quot;no login&quot;</span>,
<a name="l02725"></a>02725        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02726"></a>02726        <span class="stringliteral">&quot;Enable password checking\n&quot;</span>)
<a name="l02727"></a>02727 {
<a name="l02728"></a>02728   <a class="code" href="vty_8c.html#a27b0172ccf3d40051140bb3a04607711">no_password_check</a> = 1;
<a name="l02729"></a>02729   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02730"></a>02730 }
<a name="l02731"></a>02731 
<a name="l02732"></a>02732 <span class="comment">/* initial mode. */</span>
<a name="l02733"></a><a class="code" href="vty_8c.html#aac27a0111c177a498300b66a223f7455">02733</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (vty_restricted_mode,
<a name="l02734"></a>02734        vty_restricted_mode_cmd,
<a name="l02735"></a>02735        <span class="stringliteral">&quot;anonymous restricted&quot;</span>,
<a name="l02736"></a>02736        <span class="stringliteral">&quot;Restrict view commands available in anonymous, unauthenticated vty\n&quot;</span>)
<a name="l02737"></a>02737 {
<a name="l02738"></a>02738   <a class="code" href="vty_8c.html#a78ee728656e5a1528d1b45e94acc23a6">restricted_mode</a> = 1;
<a name="l02739"></a>02739   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02740"></a>02740 }
<a name="l02741"></a>02741 
<a name="l02742"></a><a class="code" href="vty_8c.html#a6f8fc638efb47924a6384479ab7fef50">02742</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (vty_no_restricted_mode,
<a name="l02743"></a>02743        vty_no_restricted_mode_cmd,
<a name="l02744"></a>02744        <span class="stringliteral">&quot;no anonymous restricted&quot;</span>,
<a name="l02745"></a>02745        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02746"></a>02746        <span class="stringliteral">&quot;Enable password checking\n&quot;</span>)
<a name="l02747"></a>02747 {
<a name="l02748"></a>02748   <a class="code" href="vty_8c.html#a78ee728656e5a1528d1b45e94acc23a6">restricted_mode</a> = 0;
<a name="l02749"></a>02749   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02750"></a>02750 }
<a name="l02751"></a>02751 
<a name="l02752"></a><a class="code" href="vty_8c.html#aefc8f986c6a8caf9f2c9fa1fcb726440">02752</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (service_advanced_vty,
<a name="l02753"></a>02753        service_advanced_vty_cmd,
<a name="l02754"></a>02754        <span class="stringliteral">&quot;service advanced-vty&quot;</span>,
<a name="l02755"></a>02755        <span class="stringliteral">&quot;Set up miscellaneous service\n&quot;</span>
<a name="l02756"></a>02756        <span class="stringliteral">&quot;Enable advanced mode vty interface\n&quot;</span>)
<a name="l02757"></a>02757 {
<a name="l02758"></a>02758   <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#af1f270bdc9e34870cc10cf9fe0f5a65e">advanced</a> = 1;
<a name="l02759"></a>02759   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02760"></a>02760 }
<a name="l02761"></a>02761 
<a name="l02762"></a><a class="code" href="vty_8c.html#a20ab7719343daaa96a530e5f27ab1f93">02762</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_service_advanced_vty,
<a name="l02763"></a>02763        no_service_advanced_vty_cmd,
<a name="l02764"></a>02764        <span class="stringliteral">&quot;no service advanced-vty&quot;</span>,
<a name="l02765"></a>02765        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02766"></a>02766        <span class="stringliteral">&quot;Set up miscellaneous service\n&quot;</span>
<a name="l02767"></a>02767        <span class="stringliteral">&quot;Enable advanced mode vty interface\n&quot;</span>)
<a name="l02768"></a>02768 {
<a name="l02769"></a>02769   <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#af1f270bdc9e34870cc10cf9fe0f5a65e">advanced</a> = 0;
<a name="l02770"></a>02770   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02771"></a>02771 }
<a name="l02772"></a>02772 
<a name="l02773"></a><a class="code" href="vty_8c.html#a421f4a0ef65e56fff578eee7fde03d48">02773</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (terminal_monitor,
<a name="l02774"></a>02774        terminal_monitor_cmd,
<a name="l02775"></a>02775        <span class="stringliteral">&quot;terminal monitor&quot;</span>,
<a name="l02776"></a>02776        <span class="stringliteral">&quot;Set terminal line parameters\n&quot;</span>
<a name="l02777"></a>02777        <span class="stringliteral">&quot;Copy debug output to the current terminal line\n&quot;</span>)
<a name="l02778"></a>02778 {
<a name="l02779"></a>02779   vty-&gt;<a class="code" href="structvty.html#ace142d1b856ed1776e4a48684222b01f">monitor</a> = 1;
<a name="l02780"></a>02780   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02781"></a>02781 }
<a name="l02782"></a>02782 
<a name="l02783"></a><a class="code" href="vty_8c.html#a75273639e22c856822661223443dd234">02783</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (terminal_no_monitor,
<a name="l02784"></a>02784        terminal_no_monitor_cmd,
<a name="l02785"></a>02785        <span class="stringliteral">&quot;terminal no monitor&quot;</span>,
<a name="l02786"></a>02786        <span class="stringliteral">&quot;Set terminal line parameters\n&quot;</span>
<a name="l02787"></a>02787        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02788"></a>02788        <span class="stringliteral">&quot;Copy debug output to the current terminal line\n&quot;</span>)
<a name="l02789"></a>02789 {
<a name="l02790"></a>02790   vty-&gt;<a class="code" href="structvty.html#ace142d1b856ed1776e4a48684222b01f">monitor</a> = 0;
<a name="l02791"></a>02791   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02792"></a>02792 }
<a name="l02793"></a>02793 
<a name="l02794"></a><a class="code" href="vty_8c.html#a1414cdd07405b9561c364b71a9fcdc31">02794</a> <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (terminal_no_monitor,
<a name="l02795"></a>02795        no_terminal_monitor_cmd,
<a name="l02796"></a>02796        <span class="stringliteral">&quot;no terminal monitor&quot;</span>,
<a name="l02797"></a>02797        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02798"></a>02798        <span class="stringliteral">&quot;Set terminal line parameters\n&quot;</span>
<a name="l02799"></a>02799        <span class="stringliteral">&quot;Copy debug output to the current terminal line\n&quot;</span>)
<a name="l02800"></a>02800 
<a name="l02801"></a>02801 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (show_history,
<a name="l02802"></a>02802        show_history_cmd,
<a name="l02803"></a>02803        &quot;show history&quot;,
<a name="l02804"></a>02804        <a class="code" href="command_8h.html#aa19b6d5257cb6f7622eb6b3da8966b32">SHOW_STR</a>
<a name="l02805"></a>02805        &quot;Display the session command history\<a class="code" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)
<a name="l02806"></a>02806 {
<a name="l02807"></a>02807   <span class="keywordtype">int</span> <a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
<a name="l02808"></a>02808 
<a name="l02809"></a>02809   <span class="keywordflow">for</span> (index = vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a> + 1; index != vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a>;)
<a name="l02810"></a>02810     {
<a name="l02811"></a>02811       <span class="keywordflow">if</span> (index == <a class="code" href="vty_8h.html#a2c7bf19140857545865be759c8960bc4">VTY_MAXHIST</a>)
<a name="l02812"></a>02812     {
<a name="l02813"></a>02813       index = 0;
<a name="l02814"></a>02814       <span class="keywordflow">continue</span>;
<a name="l02815"></a>02815     }
<a name="l02816"></a>02816 
<a name="l02817"></a>02817       <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[index] != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02818"></a>02818     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  %s%s&quot;</span>, vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[index], <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02819"></a>02819 
<a name="l02820"></a>02820       index++;
<a name="l02821"></a>02821     }
<a name="l02822"></a>02822 
<a name="l02823"></a>02823   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02824"></a>02824 }
<a name="l02825"></a>02825 
<a name="l02826"></a>02826 <span class="comment">/* Display current configuration. */</span>
<a name="l02827"></a>02827 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l02828"></a><a class="code" href="vty_8c.html#af80aee0d6f35fb79eb960743cfa18a1e">02828</a> <a class="code" href="vty_8c.html#af80aee0d6f35fb79eb960743cfa18a1e">vty_config_write</a> (<span class="keyword">struct</span> vty *vty)
<a name="l02829"></a>02829 {
<a name="l02830"></a>02830   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;line vty%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02831"></a>02831 
<a name="l02832"></a>02832   <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a>)
<a name="l02833"></a>02833     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; access-class %s%s&quot;</span>,
<a name="l02834"></a>02834          <a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02835"></a>02835 
<a name="l02836"></a>02836   <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a>)
<a name="l02837"></a>02837     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; ipv6 access-class %s%s&quot;</span>,
<a name="l02838"></a>02838          <a class="code" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02839"></a>02839 
<a name="l02840"></a>02840   <span class="comment">/* exec-timeout */</span>
<a name="l02841"></a>02841   <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#a9dc870017884136998187f770ec7851c">vty_timeout_val</a> != <a class="code" href="vty_8h.html#a03e48199ba963901e8a24ebc553c4a64">VTY_TIMEOUT_DEFAULT</a>)
<a name="l02842"></a>02842     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; exec-timeout %ld %ld%s&quot;</span>, 
<a name="l02843"></a>02843          <a class="code" href="vty_8c.html#a9dc870017884136998187f770ec7851c">vty_timeout_val</a> / 60,
<a name="l02844"></a>02844          <a class="code" href="vty_8c.html#a9dc870017884136998187f770ec7851c">vty_timeout_val</a> % 60, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02845"></a>02845 
<a name="l02846"></a>02846   <span class="comment">/* login */</span>
<a name="l02847"></a>02847   <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#a27b0172ccf3d40051140bb3a04607711">no_password_check</a>)
<a name="l02848"></a>02848     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; no login%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02849"></a>02849     
<a name="l02850"></a>02850   <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#a78ee728656e5a1528d1b45e94acc23a6">restricted_mode</a> != <a class="code" href="vty_8c.html#a4af47f7385ea1ddf6492f7bfcb37cd7e">restricted_mode_default</a>)
<a name="l02851"></a>02851     {
<a name="l02852"></a>02852       <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#a4af47f7385ea1ddf6492f7bfcb37cd7e">restricted_mode_default</a>)
<a name="l02853"></a>02853         <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; no anonymous restricted%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02854"></a>02854       <span class="keywordflow">else</span>
<a name="l02855"></a>02855         <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; anonymous restricted%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02856"></a>02856     }
<a name="l02857"></a>02857   
<a name="l02858"></a>02858   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;!%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02859"></a>02859 
<a name="l02860"></a>02860   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02861"></a>02861 }
<a name="l02862"></a>02862 
<a name="l02863"></a><a class="code" href="vtysh_8c.html#a4515b7730ee408bb977cce603b51ce57">02863</a> <span class="keyword">struct </span><a class="code" href="structcmd__node.html">cmd_node</a> <a class="code" href="vty_8c.html#a4515b7730ee408bb977cce603b51ce57">vty_node</a> =
<a name="l02864"></a>02864 {
<a name="l02865"></a>02865   <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>,
<a name="l02866"></a>02866   <span class="stringliteral">&quot;%s(config-line)# &quot;</span>,
<a name="l02867"></a>02867   1,
<a name="l02868"></a>02868 };
<a name="l02869"></a>02869 
<a name="l02870"></a>02870 <span class="comment">/* Reset all VTY status. */</span>
<a name="l02871"></a>02871 <span class="keywordtype">void</span>
<a name="l02872"></a><a class="code" href="vty_8h.html#a2c45f9113ebc6f73172cdd2758fd0761">02872</a> <a class="code" href="vty_8c.html#a637ad9b0152e5e5559bc0c05db07318e">vty_reset</a> ()
<a name="l02873"></a>02873 {
<a name="l02874"></a>02874   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l02875"></a>02875   <span class="keyword">struct </span>vty *<a class="code" href="vtysh_8c.html#a15b2c4e868040617c54eaaba3663b337">vty</a>;
<a name="l02876"></a>02876   <span class="keyword">struct </span>thread *vty_serv_thread;
<a name="l02877"></a>02877 
<a name="l02878"></a>02878   <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="vector_8h.html#ac96b7beddf251a81df131543d06d63c7">vector_active</a> (vtyvec); i++)
<a name="l02879"></a>02879     <span class="keywordflow">if</span> ((vty = <a class="code" href="vector_8h.html#a34cb4a77fbd6ab6cb23707cdd1c4c0d2">vector_slot</a> (vtyvec, i)) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02880"></a>02880       {
<a name="l02881"></a>02881     <a class="code" href="buffer_8c.html#a91ad0ff694ccef1876a3e8d8a3b05ffa">buffer_reset</a> (vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>);
<a name="l02882"></a>02882     vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> = VTY_CLOSE;
<a name="l02883"></a>02883     <a class="code" href="vty_8c.html#af1d7e2c952dfb90e0a7e2bbe194dedfb">vty_close</a> (vty);
<a name="l02884"></a>02884       }
<a name="l02885"></a>02885 
<a name="l02886"></a>02886   <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="vector_8h.html#ac96b7beddf251a81df131543d06d63c7">vector_active</a> (Vvty_serv_thread); i++)
<a name="l02887"></a>02887     <span class="keywordflow">if</span> ((vty_serv_thread = <a class="code" href="vector_8h.html#a34cb4a77fbd6ab6cb23707cdd1c4c0d2">vector_slot</a> (Vvty_serv_thread, i)) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02888"></a>02888       {
<a name="l02889"></a>02889     <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (vty_serv_thread);
<a name="l02890"></a>02890     <a class="code" href="vector_8h.html#a34cb4a77fbd6ab6cb23707cdd1c4c0d2">vector_slot</a> (Vvty_serv_thread, i) = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02891"></a>02891         close (i);
<a name="l02892"></a>02892       }
<a name="l02893"></a>02893 
<a name="l02894"></a>02894   <a class="code" href="vty_8c.html#a9dc870017884136998187f770ec7851c">vty_timeout_val</a> = <a class="code" href="vty_8h.html#a03e48199ba963901e8a24ebc553c4a64">VTY_TIMEOUT_DEFAULT</a>;
<a name="l02895"></a>02895 
<a name="l02896"></a>02896   <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a>)
<a name="l02897"></a>02897     {
<a name="l02898"></a>02898       <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a>(<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba05f7d9e133f49a4c7aaa98a318692c88">MTYPE_VTY</a>, <a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a>);
<a name="l02899"></a>02899       <a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02900"></a>02900     }
<a name="l02901"></a>02901 
<a name="l02902"></a>02902   <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a>)
<a name="l02903"></a>02903     {
<a name="l02904"></a>02904       <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a>(<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba05f7d9e133f49a4c7aaa98a318692c88">MTYPE_VTY</a>, <a class="code" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a>);
<a name="l02905"></a>02905       <a class="code" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02906"></a>02906     }
<a name="l02907"></a>02907 }
<a name="l02908"></a>02908 
<a name="l02909"></a>02909 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l02910"></a><a class="code" href="vty_8c.html#a773ccf9db9a99a1412fe1c138e01279b">02910</a> <a class="code" href="vty_8c.html#a773ccf9db9a99a1412fe1c138e01279b">vty_save_cwd</a> (<span class="keywordtype">void</span>)
<a name="l02911"></a>02911 {
<a name="l02912"></a>02912   <span class="keywordtype">char</span> cwd[MAXPATHLEN];
<a name="l02913"></a>02913   <span class="keywordtype">char</span> *c;
<a name="l02914"></a>02914 
<a name="l02915"></a>02915   c = getcwd (cwd, MAXPATHLEN);
<a name="l02916"></a>02916 
<a name="l02917"></a>02917   <span class="keywordflow">if</span> (!c)
<a name="l02918"></a>02918     {
<a name="l02919"></a>02919       chdir (SYSCONFDIR);
<a name="l02920"></a>02920       getcwd (cwd, MAXPATHLEN);
<a name="l02921"></a>02921     }
<a name="l02922"></a>02922 
<a name="l02923"></a>02923   <a class="code" href="vty_8c.html#aa5e6e7a16dd20bf5e749f0d0bd403f33">vty_cwd</a> = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, strlen (cwd) + 1);
<a name="l02924"></a>02924   strcpy (<a class="code" href="vty_8c.html#aa5e6e7a16dd20bf5e749f0d0bd403f33">vty_cwd</a>, cwd);
<a name="l02925"></a>02925 }
<a name="l02926"></a>02926 
<a name="l02927"></a>02927 <span class="keywordtype">char</span> *
<a name="l02928"></a><a class="code" href="vty_8h.html#a2d957daf558e9fc532fe51c6786cd990">02928</a> <a class="code" href="vty_8c.html#a6f4339c73034bde3cba10481ee9d5286">vty_get_cwd</a> ()
<a name="l02929"></a>02929 {
<a name="l02930"></a>02930   <span class="keywordflow">return</span> <a class="code" href="vty_8c.html#aa5e6e7a16dd20bf5e749f0d0bd403f33">vty_cwd</a>;
<a name="l02931"></a>02931 }
<a name="l02932"></a>02932 
<a name="l02933"></a>02933 <span class="keywordtype">int</span>
<a name="l02934"></a><a class="code" href="vty_8h.html#a9b1edcfb420884aeca1b7bdd29ccaced">02934</a> <a class="code" href="vty_8c.html#a34f77731bee7dcf980c6b344a9fff210">vty_shell</a> (<span class="keyword">struct</span> vty *vty)
<a name="l02935"></a>02935 {
<a name="l02936"></a>02936   <span class="keywordflow">return</span> vty-&gt;<a class="code" href="structvty.html#a918d01c53936e81c45a177b0ceda3eca">type</a> == VTY_SHELL ? 1 : 0;
<a name="l02937"></a>02937 }
<a name="l02938"></a>02938 
<a name="l02939"></a>02939 <span class="keywordtype">int</span>
<a name="l02940"></a><a class="code" href="vty_8h.html#a3237e741f1477116d22636f36555d563">02940</a> <a class="code" href="vty_8c.html#a239f7551b7a3441e41c9123e6fe72e87">vty_shell_serv</a> (<span class="keyword">struct</span> vty *vty)
<a name="l02941"></a>02941 {
<a name="l02942"></a>02942   <span class="keywordflow">return</span> vty-&gt;<a class="code" href="structvty.html#a918d01c53936e81c45a177b0ceda3eca">type</a> == VTY_SHELL_SERV ? 1 : 0;
<a name="l02943"></a>02943 }
<a name="l02944"></a>02944 
<a name="l02945"></a>02945 <span class="keywordtype">void</span>
<a name="l02946"></a><a class="code" href="vty_8h.html#a82800309da29029c5ab98f2adfcd6baa">02946</a> <a class="code" href="vty_8c.html#a29fb84300cd3b9daac807011dba67651">vty_init_vtysh</a> ()
<a name="l02947"></a>02947 {
<a name="l02948"></a>02948   vtyvec = <a class="code" href="vector_8c.html#ae6a929ac3530de06eee1df3629d15247">vector_init</a> (<a class="code" href="vector_8h.html#ac45f1c13e55842e7dc958c379b0efcf4">VECTOR_MIN_SIZE</a>);
<a name="l02949"></a>02949 }
<a name="l02950"></a>02950 
<a name="l02951"></a>02951 <span class="comment">/* Install vty&#39;s own commands like `who&#39; command. */</span>
<a name="l02952"></a>02952 <span class="keywordtype">void</span>
<a name="l02953"></a><a class="code" href="vty_8h.html#a8210870c3552deede11d41843bb088f3">02953</a> <a class="code" href="vty_8c.html#a4e3540690dccdae165218c9597b311eb">vty_init</a> (<span class="keyword">struct</span> <a class="code" href="structthread__master.html">thread_master</a> *master_thread)
<a name="l02954"></a>02954 {
<a name="l02955"></a>02955   <span class="comment">/* For further configuration read, preserve current directory. */</span>
<a name="l02956"></a>02956   <a class="code" href="vty_8c.html#a773ccf9db9a99a1412fe1c138e01279b">vty_save_cwd</a> ();
<a name="l02957"></a>02957 
<a name="l02958"></a>02958   vtyvec = <a class="code" href="vector_8c.html#ae6a929ac3530de06eee1df3629d15247">vector_init</a> (<a class="code" href="vector_8h.html#ac45f1c13e55842e7dc958c379b0efcf4">VECTOR_MIN_SIZE</a>);
<a name="l02959"></a>02959 
<a name="l02960"></a>02960   master = master_thread;
<a name="l02961"></a>02961 
<a name="l02962"></a>02962   <span class="comment">/* Initilize server thread vector. */</span>
<a name="l02963"></a>02963   Vvty_serv_thread = <a class="code" href="vector_8c.html#ae6a929ac3530de06eee1df3629d15247">vector_init</a> (<a class="code" href="vector_8h.html#ac45f1c13e55842e7dc958c379b0efcf4">VECTOR_MIN_SIZE</a>);
<a name="l02964"></a>02964 
<a name="l02965"></a>02965   <span class="comment">/* Install bgp top node. */</span>
<a name="l02966"></a>02966   <a class="code" href="command_8c.html#a7ee8a7c258e1e5a6e3ff6173dd1658e3">install_node</a> (&amp;vty_node, <a class="code" href="vty_8c.html#af80aee0d6f35fb79eb960743cfa18a1e">vty_config_write</a>);
<a name="l02967"></a>02967 
<a name="l02968"></a>02968   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acb0c5ada108352e3e869838b0ee04c3b">RESTRICTED_NODE</a>, &amp;config_who_cmd);
<a name="l02969"></a>02969   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acb0c5ada108352e3e869838b0ee04c3b">RESTRICTED_NODE</a>, &amp;show_history_cmd);
<a name="l02970"></a>02970   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;config_who_cmd);
<a name="l02971"></a>02971   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;show_history_cmd);
<a name="l02972"></a>02972   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;config_who_cmd);
<a name="l02973"></a>02973   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;line_vty_cmd);
<a name="l02974"></a>02974   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;service_advanced_vty_cmd);
<a name="l02975"></a>02975   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;no_service_advanced_vty_cmd);
<a name="l02976"></a>02976   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;show_history_cmd);
<a name="l02977"></a>02977   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;terminal_monitor_cmd);
<a name="l02978"></a>02978   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;terminal_no_monitor_cmd);
<a name="l02979"></a>02979   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;no_terminal_monitor_cmd);
<a name="l02980"></a>02980   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;show_history_cmd);
<a name="l02981"></a>02981 
<a name="l02982"></a>02982   <a class="code" href="command_8h.html#affb2f399c88b8a225b2719bbe928e4de">install_default</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>);
<a name="l02983"></a>02983   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>, &amp;exec_timeout_min_cmd);
<a name="l02984"></a>02984   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>, &amp;exec_timeout_sec_cmd);
<a name="l02985"></a>02985   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>, &amp;no_exec_timeout_cmd);
<a name="l02986"></a>02986   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>, &amp;vty_access_class_cmd);
<a name="l02987"></a>02987   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>, &amp;no_vty_access_class_cmd);
<a name="l02988"></a>02988   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>, &amp;vty_login_cmd);
<a name="l02989"></a>02989   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>, &amp;no_vty_login_cmd);
<a name="l02990"></a>02990   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>, &amp;vty_restricted_mode_cmd);
<a name="l02991"></a>02991   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>, &amp;vty_no_restricted_mode_cmd);
<a name="l02992"></a>02992 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l02993"></a>02993 <span class="preprocessor"></span>  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>, &amp;vty_ipv6_access_class_cmd);
<a name="l02994"></a>02994   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>, &amp;no_vty_ipv6_access_class_cmd);
<a name="l02995"></a>02995 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l02996"></a>02996 }
<a name="l02997"></a>02997 
<a name="l02998"></a>02998 <span class="keywordtype">void</span>
<a name="l02999"></a><a class="code" href="vty_8h.html#a9bf707340481507f599db15db0e79e85">02999</a> <a class="code" href="vty_8c.html#a9bf707340481507f599db15db0e79e85">vty_terminate</a> (<span class="keywordtype">void</span>)
<a name="l03000"></a>03000 {
<a name="l03001"></a>03001   <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#aa5e6e7a16dd20bf5e749f0d0bd403f33">vty_cwd</a>)
<a name="l03002"></a>03002     <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, <a class="code" href="vty_8c.html#aa5e6e7a16dd20bf5e749f0d0bd403f33">vty_cwd</a>);
<a name="l03003"></a>03003 
<a name="l03004"></a>03004   <span class="keywordflow">if</span> (vtyvec &amp;&amp; Vvty_serv_thread)
<a name="l03005"></a>03005     {
<a name="l03006"></a>03006       <a class="code" href="vty_8c.html#a637ad9b0152e5e5559bc0c05db07318e">vty_reset</a> ();
<a name="l03007"></a>03007       <a class="code" href="vector_8c.html#af535d7daaa1dc88a3ac5c4451a6296f0">vector_free</a> (vtyvec);
<a name="l03008"></a>03008       <a class="code" href="vector_8c.html#af535d7daaa1dc88a3ac5c4451a6296f0">vector_free</a> (Vvty_serv_thread);
<a name="l03009"></a>03009     }
<a name="l03010"></a>03010 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="vty_8c.html">vty.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:06 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
