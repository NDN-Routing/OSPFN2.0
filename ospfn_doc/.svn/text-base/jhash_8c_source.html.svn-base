<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: lib/jhash.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('jhash_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">lib/jhash.c</div>  </div>
</div>
<div class="contents">
<a href="jhash_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* jhash.h: Jenkins hash support.</span>
<a name="l00002"></a>00002 <span class="comment"> *</span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 1996 Bob Jenkins (bob_jenkins@burtleburtle.net)</span>
<a name="l00004"></a>00004 <span class="comment"> *</span>
<a name="l00005"></a>00005 <span class="comment"> * http://burtleburtle.net/bob/hash/</span>
<a name="l00006"></a>00006 <span class="comment"> *</span>
<a name="l00007"></a>00007 <span class="comment"> * These are the credits from Bob&#39;s sources:</span>
<a name="l00008"></a>00008 <span class="comment"> *</span>
<a name="l00009"></a>00009 <span class="comment"> * lookup2.c, by Bob Jenkins, December 1996, Public Domain.</span>
<a name="l00010"></a>00010 <span class="comment"> * hash(), hash2(), hash3, and mix() are externally useful functions.</span>
<a name="l00011"></a>00011 <span class="comment"> * Routines to test the hash are included if SELF_TEST is defined.</span>
<a name="l00012"></a>00012 <span class="comment"> * You can use this free for any purpose.  It has no warranty.</span>
<a name="l00013"></a>00013 <span class="comment"> *</span>
<a name="l00014"></a>00014 <span class="comment"> * Copyright (C) 2003 David S. Miller (davem@redhat.com)</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> * I&#39;ve modified Bob&#39;s hash to be useful in the Linux kernel, and</span>
<a name="l00017"></a>00017 <span class="comment"> * any bugs present are surely my fault.  -DaveM</span>
<a name="l00018"></a>00018 <span class="comment"> */</span>
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 <span class="preprocessor">#include &quot;<a class="code" href="zebra_8h.html">zebra.h</a>&quot;</span>
<a name="l00021"></a>00021 <span class="preprocessor">#include &quot;<a class="code" href="jhash_8h.html">jhash.h</a>&quot;</span>
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="comment">/* The golden ration: an arbitrary value */</span>
<a name="l00024"></a><a class="code" href="jhash_8c.html#a4c6395eb6f46a5e1d9f9881798829e95">00024</a> <span class="preprocessor">#define JHASH_GOLDEN_RATIO  0x9e3779b9</span>
<a name="l00025"></a>00025 <span class="preprocessor"></span>
<a name="l00026"></a>00026 <span class="comment">/* NOTE: Arguments are modified. */</span>
<a name="l00027"></a><a class="code" href="jhash_8c.html#aa21edcb0c773a2fb2a1a691166ae3ee3">00027</a> <span class="preprocessor">#define __jhash_mix(a, b, c) \</span>
<a name="l00028"></a>00028 <span class="preprocessor">{ \</span>
<a name="l00029"></a>00029 <span class="preprocessor">  a -= b; a -= c; a ^= (c&gt;&gt;13); \</span>
<a name="l00030"></a>00030 <span class="preprocessor">  b -= c; b -= a; b ^= (a&lt;&lt;8); \</span>
<a name="l00031"></a>00031 <span class="preprocessor">  c -= a; c -= b; c ^= (b&gt;&gt;13); \</span>
<a name="l00032"></a>00032 <span class="preprocessor">  a -= b; a -= c; a ^= (c&gt;&gt;12);  \</span>
<a name="l00033"></a>00033 <span class="preprocessor">  b -= c; b -= a; b ^= (a&lt;&lt;16); \</span>
<a name="l00034"></a>00034 <span class="preprocessor">  c -= a; c -= b; c ^= (b&gt;&gt;5); \</span>
<a name="l00035"></a>00035 <span class="preprocessor">  a -= b; a -= c; a ^= (c&gt;&gt;3);  \</span>
<a name="l00036"></a>00036 <span class="preprocessor">  b -= c; b -= a; b ^= (a&lt;&lt;10); \</span>
<a name="l00037"></a>00037 <span class="preprocessor">  c -= a; c -= b; c ^= (b&gt;&gt;15); \</span>
<a name="l00038"></a>00038 <span class="preprocessor">}</span>
<a name="l00039"></a>00039 <span class="preprocessor"></span>
<a name="l00040"></a>00040 <span class="comment">/* The most generic version, hashes an arbitrary sequence</span>
<a name="l00041"></a>00041 <span class="comment"> * of bytes.  No alignment or length assumptions are made about</span>
<a name="l00042"></a>00042 <span class="comment"> * the input key.</span>
<a name="l00043"></a>00043 <span class="comment"> */</span>
<a name="l00044"></a>00044 u_int32_t
<a name="l00045"></a><a class="code" href="jhash_8h.html#acbd0055c1aca2b1ec110501e32191835">00045</a> <a class="code" href="jhash_8c.html#acbd0055c1aca2b1ec110501e32191835">jhash</a> (<span class="keywordtype">void</span> *<a class="code" href="structkey.html">key</a>, u_int32_t <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>, u_int32_t initval)
<a name="l00046"></a>00046 {
<a name="l00047"></a>00047   u_int32_t <a class="code" href="ripng__nexthop_8h.html#aa9b8e98b3989bdffd7f36b281c72a693">a</a>, <a class="code" href="ripng__nexthop_8h.html#a337ad8a7e52da2d584c2018f2ec2c81e">b</a>, c, len;
<a name="l00048"></a>00048   u_int8_t *<a class="code" href="spgrid_8c.html#a166d56cfd4c4c4d27db0bd3cd0fe81d9">k</a> = <a class="code" href="zebra__rib_8c.html#a35af0be900467fedbb610bd6ea65ed78">key</a>;
<a name="l00049"></a>00049 
<a name="l00050"></a>00050   len = <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>;
<a name="l00051"></a>00051   a = b = <a class="code" href="jhash_8c.html#a4c6395eb6f46a5e1d9f9881798829e95">JHASH_GOLDEN_RATIO</a>;
<a name="l00052"></a>00052   c = initval;
<a name="l00053"></a>00053 
<a name="l00054"></a>00054   <span class="keywordflow">while</span> (len &gt;= 12)
<a name="l00055"></a>00055     {
<a name="l00056"></a>00056       a +=
<a name="l00057"></a>00057         (k[0] + ((u_int32_t) k[1] &lt;&lt; 8) + ((u_int32_t) k[2] &lt;&lt; 16) +
<a name="l00058"></a>00058          ((u_int32_t) k[3] &lt;&lt; 24));
<a name="l00059"></a>00059       b +=
<a name="l00060"></a>00060         (k[4] + ((u_int32_t) k[5] &lt;&lt; 8) + ((u_int32_t) k[6] &lt;&lt; 16) +
<a name="l00061"></a>00061          ((u_int32_t) k[7] &lt;&lt; 24));
<a name="l00062"></a>00062       c +=
<a name="l00063"></a>00063         (k[8] + ((u_int32_t) k[9] &lt;&lt; 8) + ((u_int32_t) k[10] &lt;&lt; 16) +
<a name="l00064"></a>00064          ((u_int32_t) k[11] &lt;&lt; 24));
<a name="l00065"></a>00065 
<a name="l00066"></a>00066       <a class="code" href="jhash_8c.html#aa21edcb0c773a2fb2a1a691166ae3ee3">__jhash_mix</a> (a, b, c);
<a name="l00067"></a>00067 
<a name="l00068"></a>00068       k += 12;
<a name="l00069"></a>00069       len -= 12;
<a name="l00070"></a>00070     }
<a name="l00071"></a>00071 
<a name="l00072"></a>00072   c += <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>;
<a name="l00073"></a>00073   <span class="keywordflow">switch</span> (len)
<a name="l00074"></a>00074     {
<a name="l00075"></a>00075     <span class="keywordflow">case</span> 11:
<a name="l00076"></a>00076       c += ((u_int32_t) k[10] &lt;&lt; 24);
<a name="l00077"></a>00077     <span class="keywordflow">case</span> 10:
<a name="l00078"></a>00078       c += ((u_int32_t) k[9] &lt;&lt; 16);
<a name="l00079"></a>00079     <span class="keywordflow">case</span> 9:
<a name="l00080"></a>00080       c += ((u_int32_t) k[8] &lt;&lt; 8);
<a name="l00081"></a>00081     <span class="keywordflow">case</span> 8:
<a name="l00082"></a>00082       b += ((u_int32_t) k[7] &lt;&lt; 24);
<a name="l00083"></a>00083     <span class="keywordflow">case</span> 7:
<a name="l00084"></a>00084       b += ((u_int32_t) k[6] &lt;&lt; 16);
<a name="l00085"></a>00085     <span class="keywordflow">case</span> 6:
<a name="l00086"></a>00086       b += ((u_int32_t) k[5] &lt;&lt; 8);
<a name="l00087"></a>00087     <span class="keywordflow">case</span> 5:
<a name="l00088"></a>00088       b += k[4];
<a name="l00089"></a>00089     <span class="keywordflow">case</span> 4:
<a name="l00090"></a>00090       a += ((u_int32_t) k[3] &lt;&lt; 24);
<a name="l00091"></a>00091     <span class="keywordflow">case</span> 3:
<a name="l00092"></a>00092       a += ((u_int32_t) k[2] &lt;&lt; 16);
<a name="l00093"></a>00093     <span class="keywordflow">case</span> 2:
<a name="l00094"></a>00094       a += ((u_int32_t) k[1] &lt;&lt; 8);
<a name="l00095"></a>00095     <span class="keywordflow">case</span> 1:
<a name="l00096"></a>00096       a += k[0];
<a name="l00097"></a>00097     };
<a name="l00098"></a>00098 
<a name="l00099"></a>00099   <a class="code" href="jhash_8c.html#aa21edcb0c773a2fb2a1a691166ae3ee3">__jhash_mix</a> (a, b, c);
<a name="l00100"></a>00100 
<a name="l00101"></a>00101   <span class="keywordflow">return</span> c;
<a name="l00102"></a>00102 }
<a name="l00103"></a>00103 
<a name="l00104"></a>00104 <span class="comment">/* A special optimized version that handles 1 or more of u_int32_ts.</span>
<a name="l00105"></a>00105 <span class="comment"> * The length parameter here is the number of u_int32_ts in the key.</span>
<a name="l00106"></a>00106 <span class="comment"> */</span>
<a name="l00107"></a>00107 u_int32_t
<a name="l00108"></a><a class="code" href="jhash_8h.html#ad7cfa2795bdd4f16195480ad10d3e93c">00108</a> <a class="code" href="jhash_8c.html#ad7cfa2795bdd4f16195480ad10d3e93c">jhash2</a> (u_int32_t * <a class="code" href="spgrid_8c.html#a166d56cfd4c4c4d27db0bd3cd0fe81d9">k</a>, u_int32_t <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>, u_int32_t initval)
<a name="l00109"></a>00109 {
<a name="l00110"></a>00110   u_int32_t <a class="code" href="ripng__nexthop_8h.html#aa9b8e98b3989bdffd7f36b281c72a693">a</a>, <a class="code" href="ripng__nexthop_8h.html#a337ad8a7e52da2d584c2018f2ec2c81e">b</a>, c, len;
<a name="l00111"></a>00111 
<a name="l00112"></a>00112   a = b = <a class="code" href="jhash_8c.html#a4c6395eb6f46a5e1d9f9881798829e95">JHASH_GOLDEN_RATIO</a>;
<a name="l00113"></a>00113   c = initval;
<a name="l00114"></a>00114   len = <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>;
<a name="l00115"></a>00115 
<a name="l00116"></a>00116   <span class="keywordflow">while</span> (len &gt;= 3)
<a name="l00117"></a>00117     {
<a name="l00118"></a>00118       a += k[0];
<a name="l00119"></a>00119       b += k[1];
<a name="l00120"></a>00120       c += k[2];
<a name="l00121"></a>00121       <a class="code" href="jhash_8c.html#aa21edcb0c773a2fb2a1a691166ae3ee3">__jhash_mix</a> (a, b, c);
<a name="l00122"></a>00122       k += 3;
<a name="l00123"></a>00123       len -= 3;
<a name="l00124"></a>00124     }
<a name="l00125"></a>00125 
<a name="l00126"></a>00126   c += length * 4;
<a name="l00127"></a>00127 
<a name="l00128"></a>00128   <span class="keywordflow">switch</span> (len)
<a name="l00129"></a>00129     {
<a name="l00130"></a>00130     <span class="keywordflow">case</span> 2:
<a name="l00131"></a>00131       b += k[1];
<a name="l00132"></a>00132     <span class="keywordflow">case</span> 1:
<a name="l00133"></a>00133       a += k[0];
<a name="l00134"></a>00134     };
<a name="l00135"></a>00135 
<a name="l00136"></a>00136   <a class="code" href="jhash_8c.html#aa21edcb0c773a2fb2a1a691166ae3ee3">__jhash_mix</a> (a, b, c);
<a name="l00137"></a>00137 
<a name="l00138"></a>00138   <span class="keywordflow">return</span> c;
<a name="l00139"></a>00139 }
<a name="l00140"></a>00140 
<a name="l00141"></a>00141 
<a name="l00142"></a>00142 <span class="comment">/* A special ultra-optimized versions that knows they are hashing exactly</span>
<a name="l00143"></a>00143 <span class="comment"> * 3, 2 or 1 word(s).</span>
<a name="l00144"></a>00144 <span class="comment"> *</span>
<a name="l00145"></a>00145 <span class="comment"> * NOTE: In partilar the &quot;c += length; __jhash_mix(a,b,c);&quot; normally</span>
<a name="l00146"></a>00146 <span class="comment"> *       done at the end is not done here.</span>
<a name="l00147"></a>00147 <span class="comment"> */</span>
<a name="l00148"></a>00148 u_int32_t
<a name="l00149"></a><a class="code" href="jhash_8h.html#a9afc939c7c3ad47418b9aafaa020606c">00149</a> <a class="code" href="jhash_8c.html#a9afc939c7c3ad47418b9aafaa020606c">jhash_3words</a> (u_int32_t a, u_int32_t b, u_int32_t c, u_int32_t initval)
<a name="l00150"></a>00150 {
<a name="l00151"></a>00151   a += <a class="code" href="jhash_8c.html#a4c6395eb6f46a5e1d9f9881798829e95">JHASH_GOLDEN_RATIO</a>;
<a name="l00152"></a>00152   b += <a class="code" href="jhash_8c.html#a4c6395eb6f46a5e1d9f9881798829e95">JHASH_GOLDEN_RATIO</a>;
<a name="l00153"></a>00153   c += initval;
<a name="l00154"></a>00154 
<a name="l00155"></a>00155   <a class="code" href="jhash_8c.html#aa21edcb0c773a2fb2a1a691166ae3ee3">__jhash_mix</a> (a, b, c);
<a name="l00156"></a>00156 
<a name="l00157"></a>00157   <span class="keywordflow">return</span> c;
<a name="l00158"></a>00158 }
<a name="l00159"></a>00159 
<a name="l00160"></a>00160 u_int32_t
<a name="l00161"></a><a class="code" href="jhash_8h.html#a978876014b005d68139d30477cc9e400">00161</a> <a class="code" href="jhash_8c.html#a978876014b005d68139d30477cc9e400">jhash_2words</a> (u_int32_t a, u_int32_t b, u_int32_t initval)
<a name="l00162"></a>00162 {
<a name="l00163"></a>00163   <span class="keywordflow">return</span> <a class="code" href="jhash_8c.html#a9afc939c7c3ad47418b9aafaa020606c">jhash_3words</a> (a, b, 0, initval);
<a name="l00164"></a>00164 }
<a name="l00165"></a>00165 
<a name="l00166"></a>00166 u_int32_t
<a name="l00167"></a><a class="code" href="jhash_8h.html#a3e8a6bbf6f07677210cfb45bfd4d1763">00167</a> <a class="code" href="jhash_8c.html#a3e8a6bbf6f07677210cfb45bfd4d1763">jhash_1word</a> (u_int32_t a, u_int32_t initval)
<a name="l00168"></a>00168 {
<a name="l00169"></a>00169   <span class="keywordflow">return</span> <a class="code" href="jhash_8c.html#a9afc939c7c3ad47418b9aafaa020606c">jhash_3words</a> (a, 0, 0, initval);
<a name="l00170"></a>00170 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="jhash_8c.html">jhash.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:05 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
