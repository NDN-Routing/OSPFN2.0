<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: bgpd/bgp_network.h File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('bgp__network_8h.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">bgpd/bgp_network.h File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><img src="bgp__network_8h__dep__incl.png" border="0" usemap="#bgpd_2bgp__network_8hdep" alt=""/></div>
<map name="bgpd_2bgp__network_8hdep" id="bgpd_2bgp__network_8hdep">
<area shape="rect" id="node3" href="bgp__fsm_8c.html" title="bgpd/bgp_fsm.c" alt="" coords="5,80,125,107"/><area shape="rect" id="node5" href="bgp__network_8c.html" title="bgpd/bgp_network.c" alt="" coords="150,80,297,107"/><area shape="rect" id="node7" href="bgp__packet_8c.html" title="bgpd/bgp_packet.c" alt="" coords="322,80,461,107"/><area shape="rect" id="node9" href="bgpd_8c.html" title="bgpd/bgpd.c" alt="" coords="486,80,585,107"/></map>
</div>
</div>
<p><a href="bgp__network_8h_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__network_8h.html#ada26283257d3e7704712a8b77bd55459">bgp_socket</a> (unsigned short, const char *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__network_8h.html#a9d9d59ff98a77c9b4b2c3d3c2b467ec5">bgp_close</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__network_8h.html#ab33e558393dc51c1889e65ad03221d47">bgp_connect</a> (struct <a class="el" href="structpeer.html">peer</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__network_8h.html#ad997eba68ec5340c6328ecc3ef814b1b">bgp_getsockname</a> (struct <a class="el" href="structpeer.html">peer</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__network_8h.html#aac1e3fb8bca38b955c5aba8444b0e32f">bgp_md5_set</a> (struct <a class="el" href="structpeer.html">peer</a> *)</td></tr>
</table>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a9d9d59ff98a77c9b4b2c3d3c2b467ec5"></a><!-- doxytag: member="bgp_network.h::bgp_close" ref="a9d9d59ff98a77c9b4b2c3d3c2b467ec5" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bgp_close </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__network_8c_source.html#l00523">523</a> of file <a class="el" href="bgp__network_8c_source.html">bgp_network.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
  <span class="keyword">struct </span><a class="code" href="structbgp__listener.html">bgp_listener</a> *listener;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (<a class="code" href="bgpd_8c.html#adeab9451f33cb80e3dad19688138d378">bm</a>-&gt;<a class="code" href="structbgp__master.html#a60e757cc6f7fa531e9d15f919ebfded7">listen_sockets</a>, node, next, listener))
    {
      <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (listener-&gt;<a class="code" href="structbgp__listener.html#a7a7e0cac05f8c67bdc5c35975cd5b2d6">thread</a>);
      close (listener-&gt;<a class="code" href="structbgp__listener.html#ac191c7d66eee4ad4947bdd7d51b23b9d">fd</a>);
      <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (<a class="code" href="bgpd_8c.html#adeab9451f33cb80e3dad19688138d378">bm</a>-&gt;<a class="code" href="structbgp__master.html#a60e757cc6f7fa531e9d15f919ebfded7">listen_sockets</a>, listener);
      <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba8953cc2ae5d012b7c4e92fbd18e5c447">MTYPE_BGP_LISTENER</a>, listener);
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab33e558393dc51c1889e65ad03221d47"></a><!-- doxytag: member="bgp_network.h::bgp_connect" ref="ab33e558393dc51c1889e65ad03221d47" args="(struct peer *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int bgp_connect </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structpeer.html">peer</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__network_8c_source.html#l00306">306</a> of file <a class="el" href="bgp__network_8c_source.html">bgp_network.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> ifindex = 0;

  <span class="comment">/* Make socket for the peer. */</span>
  <a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a593c49b1167d88eb2d2900db47eb5d9d">fd</a> = <a class="code" href="sockunion_8c.html#a75e4776386c27ca33e5c5d86eafd4b99">sockunion_socket</a> (&amp;<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#ab793b0acdca7d325f32edc25503b83b9">su</a>);
  <span class="keywordflow">if</span> (<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a593c49b1167d88eb2d2900db47eb5d9d">fd</a> &lt; 0)
    <span class="keywordflow">return</span> -1;

  <span class="comment">/* If we can get socket for the peer, adjest TTL and make connection. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="bgpd_8c.html#af16a840274ca5f244f25c1ce3aa70aa2">peer_sort</a> (<a class="code" href="structpeer.html">peer</a>) == <a class="code" href="bgpd_8h.html#a726ca809ffd3d67ab4b8476646f26635ad00e75d3926c01967f5debfa4f9c4654">BGP_PEER_EBGP</a>)
    <a class="code" href="sockunion_8c.html#abaf662d1724513469c375f264ccb4668">sockopt_ttl</a> (<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#ab793b0acdca7d325f32edc25503b83b9">su</a>.<a class="code" href="unionsockunion.html#a696d7d44e90274cc3bb86231cd51cfd4">sa</a>.sa_family, <a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a593c49b1167d88eb2d2900db47eb5d9d">fd</a>, <a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#adb765fb0aec575c436ba1e465e9eb4bd">ttl</a>);

  <a class="code" href="sockunion_8c.html#aa177c0a1e91bd7ac7af8d703768a56bc">sockopt_reuseaddr</a> (<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a593c49b1167d88eb2d2900db47eb5d9d">fd</a>);
  <a class="code" href="sockunion_8c.html#a1910bb0d088e8c63fcf2d1441a0ad4e4">sockopt_reuseport</a> (<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a593c49b1167d88eb2d2900db47eb5d9d">fd</a>);
  
<span class="preprocessor">#ifdef IPTOS_PREC_INTERNETCONTROL</span>
<span class="preprocessor"></span>  <span class="keywordflow">if</span> (<a class="code" href="sockunion_8h.html#ac361ce9c3dca3e5b0e903c2c4fcc300c">sockunion_family</a> (&amp;<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#ab793b0acdca7d325f32edc25503b83b9">su</a>) == AF_INET)
    <a class="code" href="sockopt_8c.html#a3ea00b83444773c5162871266744a286">setsockopt_ipv4_tos</a> (<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a593c49b1167d88eb2d2900db47eb5d9d">fd</a>, <a class="code" href="ospfd_8h.html#aad2536be3b05d82e79158c07c0d26142">IPTOS_PREC_INTERNETCONTROL</a>);
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>
  <span class="keywordflow">if</span> (<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a0c4dbb0d1d1e4fef09eac66d9dc04eb1">password</a>)
    <a class="code" href="bgp__network_8c.html#a5031970b2ab4471895201dfd511c9879">bgp_md5_set_connect</a> (<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a593c49b1167d88eb2d2900db47eb5d9d">fd</a>, &amp;<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#ab793b0acdca7d325f32edc25503b83b9">su</a>, <a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a0c4dbb0d1d1e4fef09eac66d9dc04eb1">password</a>);

  <span class="comment">/* Bind socket. */</span>
  <a class="code" href="bgp__network_8c.html#a46101d7e0c5f900b0ff07c02a7c826f1">bgp_bind</a> (<a class="code" href="structpeer.html">peer</a>);

  <span class="comment">/* Update source bind. */</span>
  <a class="code" href="bgp__network_8c.html#ac2f0ed623429f6a7d88cda54a9aa073a">bgp_update_source</a> (<a class="code" href="structpeer.html">peer</a>);

<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <span class="keywordflow">if</span> (<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a8e4c2a0f676f9c1debe5adb6f15a1945">ifname</a>)
    ifindex = <a class="code" href="if_8c.html#a957921d44ba446eb52b305bb270ca2df">if_nametoindex</a> (<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a8e4c2a0f676f9c1debe5adb6f15a1945">ifname</a>);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>

  <span class="keywordflow">if</span> (<a class="code" href="bgp__debug_8h.html#a3652951eb4451c498ae4be9890d4b7a4">BGP_DEBUG</a> (events, EVENTS))
    <a class="code" href="log_8h.html#a901efa2487b25c3a74846a52de919565">plog_debug</a> (<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a8042cd53718885196f47ee66b471ec3d">log</a>, <span class="stringliteral">&quot;%s [Event] Connect start to %s fd %d&quot;</span>,
           <a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>, <a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>, <a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a593c49b1167d88eb2d2900db47eb5d9d">fd</a>);

  <span class="comment">/* Connect to the remote peer. */</span>
  <span class="keywordflow">return</span> <a class="code" href="sockunion_8c.html#a31e80aeef8aa1c434ff7fe4ae8188450">sockunion_connect</a> (<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a593c49b1167d88eb2d2900db47eb5d9d">fd</a>, &amp;<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#ab793b0acdca7d325f32edc25503b83b9">su</a>, htons (<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a8f97f35a3a7289e4935c11b9e040a1da">port</a>), ifindex);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad997eba68ec5340c6328ecc3ef814b1b"></a><!-- doxytag: member="bgp_network.h::bgp_getsockname" ref="ad997eba68ec5340c6328ecc3ef814b1b" args="(struct peer *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bgp_getsockname </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structpeer.html">peer</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__network_8c_source.html#l00351">351</a> of file <a class="el" href="bgp__network_8c_source.html">bgp_network.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a063537a13602c890880e9c4f1d6fccd3">su_local</a>)
    {
      <a class="code" href="sockunion_8c.html#a4c9c2ea65e1c9058a61db60a5ae8dbaf">sockunion_free</a> (<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a063537a13602c890880e9c4f1d6fccd3">su_local</a>);
      <a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a063537a13602c890880e9c4f1d6fccd3">su_local</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }

  <span class="keywordflow">if</span> (<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a9ab7f1f3e48a3027c0f8a92fa6e2de28">su_remote</a>)
    {
      <a class="code" href="sockunion_8c.html#a4c9c2ea65e1c9058a61db60a5ae8dbaf">sockunion_free</a> (<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a9ab7f1f3e48a3027c0f8a92fa6e2de28">su_remote</a>);
      <a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a9ab7f1f3e48a3027c0f8a92fa6e2de28">su_remote</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }

  <a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a063537a13602c890880e9c4f1d6fccd3">su_local</a> = <a class="code" href="sockunion_8c.html#a983f6545771518eb72da0089c1ffb798">sockunion_getsockname</a> (<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a593c49b1167d88eb2d2900db47eb5d9d">fd</a>);
  <a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a9ab7f1f3e48a3027c0f8a92fa6e2de28">su_remote</a> = <a class="code" href="sockunion_8c.html#a9e1235f351839c7c8b5075c335db605c">sockunion_getpeername</a> (<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a593c49b1167d88eb2d2900db47eb5d9d">fd</a>);

  <a class="code" href="bgp__zebra_8c.html#a2f418d523b44f752454834fffa11670c">bgp_nexthop_set</a> (<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a063537a13602c890880e9c4f1d6fccd3">su_local</a>, <a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a9ab7f1f3e48a3027c0f8a92fa6e2de28">su_remote</a>, &amp;<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#acf0de33545a449bafcefaefd963f1995">nexthop</a>, <a class="code" href="structpeer.html">peer</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="aac1e3fb8bca38b955c5aba8444b0e32f"></a><!-- doxytag: member="bgp_network.h::bgp_md5_set" ref="aac1e3fb8bca38b955c5aba8444b0e32f" args="(struct peer *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int bgp_md5_set </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structpeer.html">peer</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__network_8c_source.html#l00097">97</a> of file <a class="el" href="bgp__network_8c_source.html">bgp_network.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keywordtype">int</span> ret = 0;
  <span class="keyword">struct </span><a class="code" href="structbgp__listener.html">bgp_listener</a> *listener;

  <span class="keywordflow">if</span> ( <a class="code" href="bgp__main_8c.html#a9120cbf0c7555febc6bce222b5a38d42">bgpd_privs</a>.<a class="code" href="structzebra__privs__t.html#a0c59dbc0ec6187b60a824ec421cc34c1">change</a> (<a class="code" href="privs_8h.html#aae029fe88e2d02bee4d46a2f458bd3e5a5395269196ee9bd07257f8b2b35c25fa">ZPRIVS_RAISE</a>) )
    {
      <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;%s: could not raise privs&quot;</span>, __func__);
      <span class="keywordflow">return</span> -1;
    }
  
  <span class="comment">/* Just set the password on the listen socket(s). Outbound connections</span>
<span class="comment">   * are taken care of in bgp_connect() below.</span>
<span class="comment">   */</span>
  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a>(<a class="code" href="bgpd_8c.html#adeab9451f33cb80e3dad19688138d378">bm</a>-&gt;<a class="code" href="structbgp__master.html#a60e757cc6f7fa531e9d15f919ebfded7">listen_sockets</a>, node, listener))
    <span class="keywordflow">if</span> (listener-&gt;<a class="code" href="structbgp__listener.html#a1d03958172e7fc83548e3711071832bc">su</a>.<a class="code" href="unionsockunion.html#a696d7d44e90274cc3bb86231cd51cfd4">sa</a>.sa_family == <a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#ab793b0acdca7d325f32edc25503b83b9">su</a>.<a class="code" href="unionsockunion.html#a696d7d44e90274cc3bb86231cd51cfd4">sa</a>.sa_family)
      {
    ret = <a class="code" href="bgp__network_8c.html#af7bca247cdeb3696b146e50ed510973e">bgp_md5_set_socket</a> (listener-&gt;<a class="code" href="structbgp__listener.html#ac191c7d66eee4ad4947bdd7d51b23b9d">fd</a>, &amp;<a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#ab793b0acdca7d325f32edc25503b83b9">su</a>, <a class="code" href="structpeer.html">peer</a>-&gt;<a class="code" href="structpeer.html#a0c4dbb0d1d1e4fef09eac66d9dc04eb1">password</a>);
    <span class="keywordflow">break</span>;
      }

  <span class="keywordflow">if</span> (<a class="code" href="bgp__main_8c.html#a9120cbf0c7555febc6bce222b5a38d42">bgpd_privs</a>.<a class="code" href="structzebra__privs__t.html#a0c59dbc0ec6187b60a824ec421cc34c1">change</a> (<a class="code" href="privs_8h.html#aae029fe88e2d02bee4d46a2f458bd3e5a7da2c6956cf712f8adc04ff2b0f072c5">ZPRIVS_LOWER</a>) )
    <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;%s: could not lower privs&quot;</span>, __func__);
  
  <span class="keywordflow">return</span> ret;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ada26283257d3e7704712a8b77bd55459"></a><!-- doxytag: member="bgp_network.h::bgp_socket" ref="ada26283257d3e7704712a8b77bd55459" args="(unsigned short, const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int bgp_socket </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>short</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__network_8c_source.html#l00483">483</a> of file <a class="el" href="bgp__network_8c_source.html">bgp_network.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> sock;
  <span class="keywordtype">int</span> socklen;
  <span class="keyword">struct </span>sockaddr_in sin;
  <span class="keywordtype">int</span> ret, en;

  sock = socket (AF_INET, SOCK_STREAM, 0);
  <span class="keywordflow">if</span> (sock &lt; 0)
    {
      <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;socket: %s&quot;</span>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
      <span class="keywordflow">return</span> sock;
    }

  memset (&amp;sin, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> sockaddr_in));
  sin.sin_family = AF_INET;
  sin.sin_port = htons (port);
  socklen = <span class="keyword">sizeof</span> (<span class="keyword">struct </span>sockaddr_in);

  <span class="keywordflow">if</span> (address &amp;&amp; ((ret = <a class="code" href="sockunion_8c.html#a4203367afaacee3fa5cc1626b2ef63c0">inet_aton</a>(address, &amp;sin.sin_addr)) &lt; 1))
    {
      <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a>(<span class="stringliteral">&quot;bgp_socket: could not parse ip address %s: %s&quot;</span>,
                address, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
      <span class="keywordflow">return</span> ret;
    }
<span class="preprocessor">#ifdef HAVE_STRUCT_SOCKADDR_IN_SIN_LEN</span>
<span class="preprocessor"></span>  sin.sin_len = socklen;
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_STRUCT_SOCKADDR_IN_SIN_LEN */</span>

  ret = <a class="code" href="bgp__network_8c.html#a45a3a97769a01f0b35e869fd78aebadf">bgp_listener</a> (sock, (<span class="keyword">struct</span> sockaddr *) &amp;sin, socklen);
  <span class="keywordflow">if</span> (ret &lt; 0) 
    {
      close (sock);
      <span class="keywordflow">return</span> ret;
    }
  <span class="keywordflow">return</span> sock;
}
</pre></div>
</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="bgp__network_8h.html">bgp_network.h</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:12 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
