<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: zebra/zebra_routemap.c File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('zebra__routemap_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">zebra/zebra_routemap.c File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="zebra_8h_source.html">zebra.h</a>&gt;</code><br/>
<code>#include &quot;<a class="el" href="memory_8h_source.html">memory.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="prefix_8h_source.html">prefix.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="rib_8h_source.html">rib.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="routemap_8h_source.html">routemap.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="command_8h_source.html">command.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="filter_8h_source.html">filter.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="plist_8h_source.html">plist.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="zserv_8h_source.html">zebra/zserv.h</a>&quot;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for zebra_routemap.c:</div>
<div class="dyncontent">
<div class="center"><img src="zebra__routemap_8c__incl.png" border="0" usemap="#zebra_2zebra__routemap_8c" alt=""/></div>
<map name="zebra_2zebra__routemap_8c" id="zebra_2zebra__routemap_8c">
<area shape="rect" id="node3" href="zebra_8h.html" title="zebra.h" alt="" coords="1345,80,1412,107"/><area shape="rect" id="node61" href="memory_8h.html" title="memory.h" alt="" coords="3144,80,3227,107"/><area shape="rect" id="node65" href="prefix_8h.html" title="prefix.h" alt="" coords="3269,229,3336,256"/><area shape="rect" id="node69" href="rib_8h.html" title="rib.h" alt="" coords="3309,155,3357,181"/><area shape="rect" id="node72" href="routemap_8h.html" title="routemap.h" alt="" coords="3571,80,3661,107"/><area shape="rect" id="node74" href="command_8h.html" title="command.h" alt="" coords="2926,80,3017,107"/><area shape="rect" id="node87" href="filter_8h.html" title="filter.h" alt="" coords="3486,80,3545,107"/><area shape="rect" id="node93" href="plist_8h.html" title="plist.h" alt="" coords="3685,80,3744,107"/><area shape="rect" id="node95" href="zserv_8h.html" title="zebra/zserv.h" alt="" coords="3360,80,3461,107"/><area shape="rect" id="node57" href="zassert_8h.html" title="zassert.h" alt="" coords="2623,155,2700,181"/><area shape="rect" id="node59" href="str_8h.html" title="str.h" alt="" coords="2725,155,2773,181"/><area shape="rect" id="node63" href="memtypes_8h.html" title="lib/memtypes.h" alt="" coords="3120,155,3235,181"/><area shape="rect" id="node67" href="sockunion_8h.html" title="sockunion.h" alt="" coords="3256,304,3349,331"/><area shape="rect" id="node76" href="vector_8h.html" title="vector.h" alt="" coords="2875,155,2947,181"/><area shape="rect" id="node78" href="vty_8h.html" title="vty.h" alt="" coords="2798,155,2849,181"/><area shape="rect" id="node85" href="route__types_8h.html" title="lib/route_types.h" alt="" coords="2971,155,3095,181"/><area shape="rect" id="node80" href="thread_8h.html" title="thread.h" alt="" coords="2788,229,2860,256"/><area shape="rect" id="node82" href="log_8h.html" title="log.h" alt="" coords="2103,229,2155,256"/><area shape="rect" id="node89" href="if_8h.html" title="if.h" alt="" coords="3507,155,3547,181"/><area shape="rect" id="node91" href="linklist_8h.html" title="linklist.h" alt="" coords="3491,229,3561,256"/><area shape="rect" id="node99" href="workqueue_8h.html" title="workqueue.h" alt="" coords="3382,155,3481,181"/></map>
</div>
</div>
<p><a href="zebra__routemap_8c_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a33f8da8527b85206301a648800d7ba6e">zebra_route_match_add</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>, struct <a class="el" href="structroute__map__index.html">route_map_index</a> *index, const char *command, const char *arg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a0abd440782943689c96f4fd85fa15696">zebra_route_match_delete</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>, struct <a class="el" href="structroute__map__index.html">route_map_index</a> *index, const char *command, const char *arg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#afce63cd03f228a323c84f1a3601e9980">zebra_route_set_add</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>, struct <a class="el" href="structroute__map__index.html">route_map_index</a> *index, const char *command, const char *arg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a66c0c2f89eb4b14bdeff6b61b9c8e6d3">zebra_route_set_delete</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>, struct <a class="el" href="structroute__map__index.html">route_map_index</a> *index, const char *command, const char *arg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static <a class="el" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a499620e3bd21398f88d3b754ff551ac9">route_match_interface</a> (void *rule, struct <a class="el" href="structprefix.html">prefix</a> *<a class="el" href="structprefix.html">prefix</a>, <a class="el" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a>, void *object)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a3851c3bf636d008f2cbfb9c3bf8de16e">route_match_interface_compile</a> (const char *arg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a6c8e256b43038748f5420f9d00c0d439">route_match_interface_free</a> (void *rule)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a80eb4522a0c8c769cdc82ca73e78db60">DEFUN</a> (match_interface, match_interface_cmd,&quot;match <a class="el" href="structinterface.html">interface</a> <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;, MATCH_STR&quot;match first <a class="el" href="structhop.html">hop</a> <a class="el" href="structinterface.html">interface</a> of route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Interface <a class="el" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#afcce849e82501782703560291fb248bc">DEFUN</a> (no_match_interface, no_match_interface_cmd,&quot;no match <a class="el" href="structinterface.html">interface</a>&quot;, NO_STR MATCH_STR&quot;Match first <a class="el" href="structhop.html">hop</a> <a class="el" href="structinterface.html">interface</a> of route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#ad75c3e6f949c031198fdcf819a11b760">ALIAS</a> (no_match_interface, no_match_interface_val_cmd,&quot;no match <a class="el" href="structinterface.html">interface</a> <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;, NO_STR MATCH_STR&quot;Match first <a class="el" href="structhop.html">hop</a> <a class="el" href="structinterface.html">interface</a> of route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Interface <a class="el" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#ae0c6f994052afa505759af5b006ddd4c">DEFUN</a> (no_match_ip_next_hop, no_match_ip_next_hop_cmd,&quot;no match <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> next-<a class="el" href="structhop.html">hop</a>&quot;, NO_STR MATCH_STR IP_STR&quot;Match next-<a class="el" href="structhop.html">hop</a> address of route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#aebd00cb1b7e6216079c67b6ffc55e5d6">ALIAS</a> (no_match_ip_next_hop, no_match_ip_next_hop_val_cmd,&quot;no match <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> next-<a class="el" href="structhop.html">hop</a> (&lt;1-199&gt;|&lt;1300-2699&gt;|<a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>)&quot;, NO_STR MATCH_STR IP_STR&quot;Match next-<a class="el" href="structhop.html">hop</a> address of route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP access-<a class="el" href="structlist.html">list</a> number\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP access-<a class="el" href="structlist.html">list</a> number (expanded range)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP Access-<a class="el" href="structlist.html">list</a> <a class="el" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a9fd5dafea2efffb29c77e6a093804afc">DEFUN</a> (no_match_ip_next_hop_prefix_list, no_match_ip_next_hop_prefix_list_cmd,&quot;no match <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> next-<a class="el" href="structhop.html">hop</a> <a class="el" href="structprefix.html">prefix</a>-<a class="el" href="structlist.html">list</a>&quot;, NO_STR MATCH_STR IP_STR&quot;Match next-<a class="el" href="structhop.html">hop</a> address of route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Match entries of <a class="el" href="structprefix.html">prefix</a>-lists\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#adb54a87ee0a1e2938497beddc92275db">ALIAS</a> (no_match_ip_next_hop_prefix_list, no_match_ip_next_hop_prefix_list_val_cmd,&quot;no match <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> next-<a class="el" href="structhop.html">hop</a> <a class="el" href="structprefix.html">prefix</a>-<a class="el" href="structlist.html">list</a> <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;, NO_STR MATCH_STR IP_STR&quot;Match next-<a class="el" href="structhop.html">hop</a> address of route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Match entries of <a class="el" href="structprefix.html">prefix</a>-lists\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP <a class="el" href="structprefix.html">prefix</a>-<a class="el" href="structlist.html">list</a> <a class="el" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a5b6ae6bb488ba18a86b08db912f39829">DEFUN</a> (no_match_ip_address, no_match_ip_address_cmd,&quot;no match <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> address&quot;, NO_STR MATCH_STR IP_STR&quot;Match address of route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#aab6bcc1671d7c88b040cec767f1149a1">ALIAS</a> (no_match_ip_address, no_match_ip_address_val_cmd,&quot;no match <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> address (&lt;1-199&gt;|&lt;1300-2699&gt;|<a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>)&quot;, NO_STR MATCH_STR IP_STR&quot;Match address of route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP access-<a class="el" href="structlist.html">list</a> number\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP access-<a class="el" href="structlist.html">list</a> number (expanded range)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP Access-<a class="el" href="structlist.html">list</a> <a class="el" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#aab70487a63da097c6c729931ede3a992">DEFUN</a> (no_match_ip_address_prefix_list, no_match_ip_address_prefix_list_cmd,&quot;no match <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> address <a class="el" href="structprefix.html">prefix</a>-<a class="el" href="structlist.html">list</a>&quot;, NO_STR MATCH_STR IP_STR&quot;Match address of route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Match entries of <a class="el" href="structprefix.html">prefix</a>-lists\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a4e0c64b78b49e9f9970eca9f761bae84">ALIAS</a> (no_match_ip_address_prefix_list, no_match_ip_address_prefix_list_val_cmd,&quot;no match <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> address <a class="el" href="structprefix.html">prefix</a>-<a class="el" href="structlist.html">list</a> <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;, NO_STR MATCH_STR IP_STR&quot;Match address of route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Match entries of <a class="el" href="structprefix.html">prefix</a>-lists\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP <a class="el" href="structprefix.html">prefix</a>-<a class="el" href="structlist.html">list</a> <a class="el" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a36bea4c7031f695743daedc8a8705009">DEFUN</a> (no_set_src, no_set_src_cmd,&quot;no set src&quot;, NO_STR SET_STR&quot;Source address for route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#ac033e1faa6a15f11d9263e63f6470ab2">ALIAS</a> (no_set_src, no_set_src_val_cmd,&quot;no set src (A.B.C.D)&quot;, NO_STR SET_STR&quot;src address for route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;src address\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a14f8816ef71301455d7d32f60bc7f0a1">route_match_ip_next_hop_compile</a> (const char *arg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a67cc6d2f3a81cda76f6498141daca4eb">route_match_ip_next_hop_free</a> (void *rule)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static <a class="el" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a0f39691b144b762b915622e0231b5c89">route_match_ip_next_hop_prefix_list</a> (void *rule, struct <a class="el" href="structprefix.html">prefix</a> *<a class="el" href="structprefix.html">prefix</a>, <a class="el" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a>, void *object)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#ad7eefdbb6b55a3fadb06a2879d42e6d7">route_match_ip_next_hop_prefix_list_compile</a> (const char *arg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a73fa2fda9f18c79e7e649e46cc04091a">route_match_ip_next_hop_prefix_list_free</a> (void *rule)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static <a class="el" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a50e099f0579cd1ed464169b0bb05864e">route_match_ip_address</a> (void *rule, struct <a class="el" href="structprefix.html">prefix</a> *<a class="el" href="structprefix.html">prefix</a>, <a class="el" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a>, void *object)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#acdb04a95f237610a06cb0d9b748336dc">route_match_ip_address_compile</a> (const char *arg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a108db5bf6d49a5e9881cd7db44b41704">route_match_ip_address_free</a> (void *rule)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static <a class="el" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a058294016ee46cffc91fa4c78391f568">route_match_ip_address_prefix_list</a> (void *rule, struct <a class="el" href="structprefix.html">prefix</a> *<a class="el" href="structprefix.html">prefix</a>, <a class="el" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a>, void *object)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a8926c41485695d842675f84b834a9242">route_match_ip_address_prefix_list_compile</a> (const char *arg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a327f0894285ba35b135f6bf8ee42e3a0">route_match_ip_address_prefix_list_free</a> (void *rule)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static <a class="el" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a251709e74e03f71d27b30ef88affe62f">route_set_src</a> (void *rule, struct <a class="el" href="structprefix.html">prefix</a> *<a class="el" href="structprefix.html">prefix</a>, <a class="el" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a>, void *object)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#abead9afbb295d67bd9ffd0bbe5ff7360">route_set_src_compile</a> (const char *arg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a9afe381dfa9b06135b5c4fc43e5e3126">route_set_src_free</a> (void *rule)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a99142c32fa04dce8d1882651f99c3c48">zebra_route_map_init</a> ()</td></tr>
<tr><td colspan="2"><h2><a name="var-members"></a>
Variables</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a34aab1ca2c1c66235b50eefe7164f203">route_match_interface_cmd</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a8619edb19ac3fd44c2ed4ebc03f086f3">route_match_ip_next_hop_cmd</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a06056721d860a9d94bed1441a308907d">route_match_ip_next_hop_prefix_list_cmd</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a64c2cc0eb31fc4e32ff2472150ce0624">route_match_ip_address_cmd</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a87e4289828c25006001339780c3b810b">route_match_ip_address_prefix_list_cmd</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra__routemap_8c.html#a644993ce2209b38d7070be68447d73d5">route_set_src_cmd</a></td></tr>
</table>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ad75c3e6f949c031198fdcf819a11b760"></a><!-- doxytag: member="zebra_routemap.c::ALIAS" ref="ad75c3e6f949c031198fdcf819a11b760" args="(no_match_interface, no_match_interface_val_cmd,&quot;no match interface WORD&quot;, NO_STR MATCH_STR&quot;Match first hop interface of route\n&quot;&quot;Interface name\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ALIAS </td>
          <td>(</td>
          <td class="paramtype">no_match_interface&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_match_interface_val_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no match <a class="el" href="structinterface.html">interface</a> <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR MATCH_STR&quot;Match first <a class="el" href="structhop.html">hop</a> <a class="el" href="structinterface.html">interface</a> of route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Interface <a class="el" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00199">199</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="zebra__routemap_8c.html#a33f8da8527b85206301a648800d7ba6e">zebra_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip next-hop&quot;</span>, argv[0]);
}
</pre></div>
</div>
</div>
<a class="anchor" id="aebd00cb1b7e6216079c67b6ffc55e5d6"></a><!-- doxytag: member="zebra_routemap.c::ALIAS" ref="aebd00cb1b7e6216079c67b6ffc55e5d6" args="(no_match_ip_next_hop, no_match_ip_next_hop_val_cmd,&quot;no match ip next&#45;hop (&lt;1&#45;199&gt;|&lt;1300&#45;2699&gt;|WORD)&quot;, NO_STR MATCH_STR IP_STR&quot;Match next&#45;hop address of route\n&quot;&quot;IP access&#45;list number\n&quot;&quot;IP access&#45;list number (expanded range)\n&quot;&quot;IP Access&#45;list name\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ALIAS </td>
          <td>(</td>
          <td class="paramtype">no_match_ip_next_hop&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_match_ip_next_hop_val_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no match <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> next-<a class="el" href="structhop.html">hop</a> (&lt;1-199&gt;|&lt;1300-2699&gt;|<a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>)&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR MATCH_STR IP_STR&quot;Match next-<a class="el" href="structhop.html">hop</a> address of route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP access-<a class="el" href="structlist.html">list</a> number\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP access-<a class="el" href="structlist.html">list</a> number (expanded range)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP Access-<a class="el" href="structlist.html">list</a> <a class="el" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00234">234</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="zebra__routemap_8c.html#a33f8da8527b85206301a648800d7ba6e">zebra_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip next-hop prefix-list&quot;</span>, argv[0]);
}
</pre></div>
</div>
</div>
<a class="anchor" id="adb54a87ee0a1e2938497beddc92275db"></a><!-- doxytag: member="zebra_routemap.c::ALIAS" ref="adb54a87ee0a1e2938497beddc92275db" args="(no_match_ip_next_hop_prefix_list, no_match_ip_next_hop_prefix_list_val_cmd,&quot;no match ip next&#45;hop prefix&#45;list WORD&quot;, NO_STR MATCH_STR IP_STR&quot;Match next&#45;hop address of route\n&quot;&quot;Match entries of prefix&#45;lists\n&quot;&quot;IP prefix&#45;list name\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ALIAS </td>
          <td>(</td>
          <td class="paramtype">no_match_ip_next_hop_prefix_list&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_match_ip_next_hop_prefix_list_val_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no match <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> next-<a class="el" href="structhop.html">hop</a> <a class="el" href="structprefix.html">prefix</a>-<a class="el" href="structlist.html">list</a> <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR MATCH_STR IP_STR&quot;Match next-<a class="el" href="structhop.html">hop</a> address of route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Match entries of <a class="el" href="structprefix.html">prefix</a>-lists\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP <a class="el" href="structprefix.html">prefix</a>-<a class="el" href="structlist.html">list</a> <a class="el" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00272">272</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="zebra__routemap_8c.html#a33f8da8527b85206301a648800d7ba6e">zebra_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip address&quot;</span>, argv[0]);
}
</pre></div>
</div>
</div>
<a class="anchor" id="aab6bcc1671d7c88b040cec767f1149a1"></a><!-- doxytag: member="zebra_routemap.c::ALIAS" ref="aab6bcc1671d7c88b040cec767f1149a1" args="(no_match_ip_address, no_match_ip_address_val_cmd,&quot;no match ip address (&lt;1&#45;199&gt;|&lt;1300&#45;2699&gt;|WORD)&quot;, NO_STR MATCH_STR IP_STR&quot;Match address of route\n&quot;&quot;IP access&#45;list number\n&quot;&quot;IP access&#45;list number (expanded range)\n&quot;&quot;IP Access&#45;list name\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ALIAS </td>
          <td>(</td>
          <td class="paramtype">no_match_ip_address&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_match_ip_address_val_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no match <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> address (&lt;1-199&gt;|&lt;1300-2699&gt;|<a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>)&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR MATCH_STR IP_STR&quot;Match address of route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP access-<a class="el" href="structlist.html">list</a> number\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP access-<a class="el" href="structlist.html">list</a> number (expanded range)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP Access-<a class="el" href="structlist.html">list</a> <a class="el" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00310">310</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="zebra__routemap_8c.html#a33f8da8527b85206301a648800d7ba6e">zebra_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip address prefix-list&quot;</span>, argv[0]);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4e0c64b78b49e9f9970eca9f761bae84"></a><!-- doxytag: member="zebra_routemap.c::ALIAS" ref="a4e0c64b78b49e9f9970eca9f761bae84" args="(no_match_ip_address_prefix_list, no_match_ip_address_prefix_list_val_cmd,&quot;no match ip address prefix&#45;list WORD&quot;, NO_STR MATCH_STR IP_STR&quot;Match address of route\n&quot;&quot;Match entries of prefix&#45;lists\n&quot;&quot;IP prefix&#45;list name\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ALIAS </td>
          <td>(</td>
          <td class="paramtype">no_match_ip_address_prefix_list&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_match_ip_address_prefix_list_val_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no match <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> address <a class="el" href="structprefix.html">prefix</a>-<a class="el" href="structlist.html">list</a> <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR MATCH_STR IP_STR&quot;Match address of route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Match entries of <a class="el" href="structprefix.html">prefix</a>-lists\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP <a class="el" href="structprefix.html">prefix</a>-<a class="el" href="structlist.html">list</a> <a class="el" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00348">348</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span>in_addr src;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *pif;

  <span class="keywordflow">if</span> (<a class="code" href="sockunion_8c.html#ac13c2042641ea5031bc7e244e8061b84">inet_pton</a>(AF_INET, argv[0], &amp;src) &lt;= 0)
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;%% not a local address%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }

    pif = <a class="code" href="if_8c.html#a48cb8d5af59fd0e8f723797aa11ccbf2">if_lookup_exact_address</a> (src);
    <span class="keywordflow">if</span> (!pif)
      {
        <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;%% not a local address%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
        <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
      }
  <span class="keywordflow">return</span> <a class="code" href="zebra__routemap_8c.html#afce63cd03f228a323c84f1a3601e9980">zebra_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;src&quot;</span>, argv[0]);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac033e1faa6a15f11d9263e63f6470ab2"></a><!-- doxytag: member="zebra_routemap.c::ALIAS" ref="ac033e1faa6a15f11d9263e63f6470ab2" args="(no_set_src, no_set_src_val_cmd,&quot;no set src (A.B.C.D)&quot;, NO_STR SET_STR&quot;src address for route\n&quot;&quot;src address\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ALIAS </td>
          <td>(</td>
          <td class="paramtype">no_set_src&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_set_src_val_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no set src (A.B.C.D)&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR SET_STR&quot;src address for route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;src address\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00398">398</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structaccess__list.html">access_list</a> *alist;
  <span class="keyword">struct </span><a class="code" href="structnexthop.html">nexthop</a> *<a class="code" href="structnexthop.html">nexthop</a>;
  <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;

  <span class="keywordflow">if</span> (<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a> == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370aed5a3d6c0f7329ba83c52473152a65ad">RMAP_ZEBRA</a>)
    {
      nexthop = object;
      <span class="keywordflow">switch</span> (nexthop-&gt;<a class="code" href="structnexthop.html#a2945ec57f56526f142592f4f578b4522">type</a>) {
      <span class="keywordflow">case</span> <a class="code" href="rib_8h.html#a0db77aa28c8e805e8621931fd0385158a6e00834b26663ce5eb68fb6f7068b5c9">NEXTHOP_TYPE_IFINDEX</a>:
      <span class="keywordflow">case</span> <a class="code" href="rib_8h.html#a0db77aa28c8e805e8621931fd0385158aa12d01eb5d47a34e54792bb02c81dbcb">NEXTHOP_TYPE_IFNAME</a>:
      <span class="keywordflow">case</span> <a class="code" href="rib_8h.html#a0db77aa28c8e805e8621931fd0385158a3147798b072558593867a8772925d9ba">NEXTHOP_TYPE_IPV4_IFINDEX</a>:
      <span class="keywordflow">case</span> <a class="code" href="rib_8h.html#a0db77aa28c8e805e8621931fd0385158ade3f7c373a6291ced38ce796b8a493c9">NEXTHOP_TYPE_IPV4_IFNAME</a>:
        <span class="keywordflow">if</span> (nexthop-&gt;<a class="code" href="structnexthop.html#a50eb39bc450246638a981d46d3c4a579">rtype</a> != <a class="code" href="rib_8h.html#a0db77aa28c8e805e8621931fd0385158a9909d19d3bd1cf79727d0c809424d1e0">NEXTHOP_TYPE_IPV4</a>)
        <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
        <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.family = AF_INET;
        <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix = nexthop-&gt;<a class="code" href="structnexthop.html#aa401c5819c47323f95f25287ab4b8f4b">rgate</a>.<a class="code" href="uniong__addr.html#a3120e936e9b15510a8775865868a61d3">ipv4</a>;
        <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;
        <span class="keywordflow">break</span>;
      <span class="keywordflow">case</span> <a class="code" href="rib_8h.html#a0db77aa28c8e805e8621931fd0385158a9909d19d3bd1cf79727d0c809424d1e0">NEXTHOP_TYPE_IPV4</a>:
        <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.family = AF_INET;
        <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix = nexthop-&gt;<a class="code" href="structnexthop.html#af19e05e5dd51b578246ff51322b6b6dd">gate</a>.<a class="code" href="uniong__addr.html#a3120e936e9b15510a8775865868a61d3">ipv4</a>;
        <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;
        <span class="keywordflow">break</span>;
      <span class="keywordflow">default</span>:
        <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
      }
      alist = <a class="code" href="filter_8c.html#a8cb65cd01015f6673c632cb5b8714b3e">access_list_lookup</a> (<a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>, (<span class="keywordtype">char</span> *) rule);
      <span class="keywordflow">if</span> (alist == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;

      <span class="keywordflow">return</span> (<a class="code" href="filter_8c.html#a5565f487c65e2bf0308c7fd529f121a0">access_list_apply</a> (alist, &amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>) == <a class="code" href="filter_8h.html#ab3b7281956317556f846daaebf75de72a898abadf6cc2f9d27780782f09d3a3e3">FILTER_DENY</a> ?
          <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a> : <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>);
    }
  <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a80eb4522a0c8c769cdc82ca73e78db60"></a><!-- doxytag: member="zebra_routemap.c::DEFUN" ref="a80eb4522a0c8c769cdc82ca73e78db60" args="(match_interface, match_interface_cmd,&quot;match interface WORD&quot;, MATCH_STR&quot;match first hop interface of route\n&quot;&quot;Interface name\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">match_interface&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">match_interface_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;match <a class="el" href="structinterface.html">interface</a> <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MATCH_STR&quot;match first <a class="el" href="structhop.html">hop</a> <a class="el" href="structinterface.html">interface</a> of route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Interface <a class="el" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00176">176</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="zebra__routemap_8c.html#a33f8da8527b85206301a648800d7ba6e">zebra_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;interface&quot;</span>, argv[0]);
}
</pre></div>
</div>
</div>
<a class="anchor" id="afcce849e82501782703560291fb248bc"></a><!-- doxytag: member="zebra_routemap.c::DEFUN" ref="afcce849e82501782703560291fb248bc" args="(no_match_interface, no_match_interface_cmd,&quot;no match interface&quot;, NO_STR MATCH_STR&quot;Match first hop interface of route\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_match_interface&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_match_interface_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no match <a class="el" href="structinterface.html">interface</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR MATCH_STR&quot;Match first <a class="el" href="structhop.html">hop</a> <a class="el" href="structinterface.html">interface</a> of route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00186">186</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (argc == 0)
    <span class="keywordflow">return</span> <a class="code" href="zebra__routemap_8c.html#a0abd440782943689c96f4fd85fa15696">zebra_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;interface&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);

  <span class="keywordflow">return</span> <a class="code" href="zebra__routemap_8c.html#a0abd440782943689c96f4fd85fa15696">zebra_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;interface&quot;</span>, argv[0]);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae0c6f994052afa505759af5b006ddd4c"></a><!-- doxytag: member="zebra_routemap.c::DEFUN" ref="ae0c6f994052afa505759af5b006ddd4c" args="(no_match_ip_next_hop, no_match_ip_next_hop_cmd,&quot;no match ip next&#45;hop&quot;, NO_STR MATCH_STR IP_STR&quot;Match next&#45;hop address of route\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_match_ip_next_hop&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_match_ip_next_hop_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no match <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> next-<a class="el" href="structhop.html">hop</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR MATCH_STR IP_STR&quot;Match next-<a class="el" href="structhop.html">hop</a> address of route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00220">220</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (argc == 0)
    <span class="keywordflow">return</span> <a class="code" href="zebra__routemap_8c.html#a0abd440782943689c96f4fd85fa15696">zebra_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip next-hop&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);

  <span class="keywordflow">return</span> <a class="code" href="zebra__routemap_8c.html#a0abd440782943689c96f4fd85fa15696">zebra_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip next-hop&quot;</span>, argv[0]);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9fd5dafea2efffb29c77e6a093804afc"></a><!-- doxytag: member="zebra_routemap.c::DEFUN" ref="a9fd5dafea2efffb29c77e6a093804afc" args="(no_match_ip_next_hop_prefix_list, no_match_ip_next_hop_prefix_list_cmd,&quot;no match ip next&#45;hop prefix&#45;list&quot;, NO_STR MATCH_STR IP_STR&quot;Match next&#45;hop address of route\n&quot;&quot;Match entries of prefix&#45;lists\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_match_ip_next_hop_prefix_list&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_match_ip_next_hop_prefix_list_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no match <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> next-<a class="el" href="structhop.html">hop</a> <a class="el" href="structprefix.html">prefix</a>-<a class="el" href="structlist.html">list</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR MATCH_STR IP_STR&quot;Match next-<a class="el" href="structhop.html">hop</a> address of route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Match entries of <a class="el" href="structprefix.html">prefix</a>-lists\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00257">257</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (argc == 0)
    <span class="keywordflow">return</span> <a class="code" href="zebra__routemap_8c.html#a0abd440782943689c96f4fd85fa15696">zebra_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip next-hop prefix-list&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);

  <span class="keywordflow">return</span> <a class="code" href="zebra__routemap_8c.html#a0abd440782943689c96f4fd85fa15696">zebra_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip next-hop prefix-list&quot;</span>, argv[0]);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5b6ae6bb488ba18a86b08db912f39829"></a><!-- doxytag: member="zebra_routemap.c::DEFUN" ref="a5b6ae6bb488ba18a86b08db912f39829" args="(no_match_ip_address, no_match_ip_address_cmd,&quot;no match ip address&quot;, NO_STR MATCH_STR IP_STR&quot;Match address of route\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_match_ip_address&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_match_ip_address_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no match <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> address&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR MATCH_STR IP_STR&quot;Match address of route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00296">296</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (argc == 0)
    <span class="keywordflow">return</span> <a class="code" href="zebra__routemap_8c.html#a0abd440782943689c96f4fd85fa15696">zebra_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip address&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);

  <span class="keywordflow">return</span> <a class="code" href="zebra__routemap_8c.html#a0abd440782943689c96f4fd85fa15696">zebra_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip address&quot;</span>, argv[0]);
}
</pre></div>
</div>
</div>
<a class="anchor" id="aab70487a63da097c6c729931ede3a992"></a><!-- doxytag: member="zebra_routemap.c::DEFUN" ref="aab70487a63da097c6c729931ede3a992" args="(no_match_ip_address_prefix_list, no_match_ip_address_prefix_list_cmd,&quot;no match ip address prefix&#45;list&quot;, NO_STR MATCH_STR IP_STR&quot;Match address of route\n&quot;&quot;Match entries of prefix&#45;lists\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_match_ip_address_prefix_list&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_match_ip_address_prefix_list_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no match <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> address <a class="el" href="structprefix.html">prefix</a>-<a class="el" href="structlist.html">list</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR MATCH_STR IP_STR&quot;Match address of route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Match entries of <a class="el" href="structprefix.html">prefix</a>-lists\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00333">333</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (argc == 0)
    <span class="keywordflow">return</span> <a class="code" href="zebra__routemap_8c.html#a0abd440782943689c96f4fd85fa15696">zebra_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip address prefix-list&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);

  <span class="keywordflow">return</span> <a class="code" href="zebra__routemap_8c.html#a0abd440782943689c96f4fd85fa15696">zebra_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip address prefix-list&quot;</span>, argv[0]);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a36bea4c7031f695743daedc8a8705009"></a><!-- doxytag: member="zebra_routemap.c::DEFUN" ref="a36bea4c7031f695743daedc8a8705009" args="(no_set_src, no_set_src_cmd,&quot;no set src&quot;, NO_STR SET_STR&quot;Source address for route\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_set_src&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_set_src_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no set src&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR SET_STR&quot;Source address for route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00385">385</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (argc == 0)
    <span class="keywordflow">return</span> <a class="code" href="zebra__routemap_8c.html#a66c0c2f89eb4b14bdeff6b61b9c8e6d3">zebra_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;src&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);

  <span class="keywordflow">return</span> <a class="code" href="zebra__routemap_8c.html#a66c0c2f89eb4b14bdeff6b61b9c8e6d3">zebra_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;src&quot;</span>, argv[0]);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a499620e3bd21398f88d3b754ff551ac9"></a><!-- doxytag: member="zebra_routemap.c::route_match_interface" ref="a499620e3bd21398f88d3b754ff551ac9" args="(void *rule, struct prefix *prefix, route_map_object_t type, void *object)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a> route_match_interface </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>rule</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structprefix.html">prefix</a> *&#160;</td>
          <td class="paramname"><em>prefix</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a>&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>object</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00130">130</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structnexthop.html">nexthop</a> *<a class="code" href="structnexthop.html">nexthop</a>;
  <span class="keywordtype">char</span> *<a class="code" href="structnexthop.html#a66af3f237417d5a411d4eb6fe6c8c23d">ifname</a> = rule;
  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structnexthop.html#a4bc2f1e33f239d2d817c205460a24daa">ifindex</a>;

  <span class="keywordflow">if</span> (<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a> == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370aed5a3d6c0f7329ba83c52473152a65ad">RMAP_ZEBRA</a>)
    {
      <span class="keywordflow">if</span> (strcasecmp(ifname, <span class="stringliteral">&quot;any&quot;</span>) == 0)
    <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>;
      ifindex = <a class="code" href="if_8c.html#a5167773d3552390b1652214c6dbbb1b7">ifname2ifindex</a>(ifname);
      <span class="keywordflow">if</span> (ifindex == 0)
    <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
      nexthop = object;
      <span class="keywordflow">if</span> (!nexthop)
    <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
      <span class="keywordflow">if</span> (nexthop-&gt;<a class="code" href="structnexthop.html#a4bc2f1e33f239d2d817c205460a24daa">ifindex</a> == ifindex)
    <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>;
    }
  <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3851c3bf636d008f2cbfb9c3bf8de16e"></a><!-- doxytag: member="zebra_routemap.c::route_match_interface_compile" ref="a3851c3bf636d008f2cbfb9c3bf8de16e" args="(const char *arg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void* route_match_interface_compile </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>arg</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00155">155</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, arg);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6c8e256b43038748f5420f9d00c0d439"></a><!-- doxytag: member="zebra_routemap.c::route_match_interface_free" ref="a6c8e256b43038748f5420f9d00c0d439" args="(void *rule)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void route_match_interface_free </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>rule</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00162">162</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a50e099f0579cd1ed464169b0bb05864e"></a><!-- doxytag: member="zebra_routemap.c::route_match_ip_address" ref="a50e099f0579cd1ed464169b0bb05864e" args="(void *rule, struct prefix *prefix, route_map_object_t type, void *object)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a> route_match_ip_address </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>rule</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structprefix.html">prefix</a> *&#160;</td>
          <td class="paramname"><em>prefix</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a>&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>object</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00542">542</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structaccess__list.html">access_list</a> *alist;

  <span class="keywordflow">if</span> (<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a> == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370aed5a3d6c0f7329ba83c52473152a65ad">RMAP_ZEBRA</a>)
    {
      alist = <a class="code" href="filter_8c.html#a8cb65cd01015f6673c632cb5b8714b3e">access_list_lookup</a> (<a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>, (<span class="keywordtype">char</span> *) rule);
      <span class="keywordflow">if</span> (alist == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
    
      <span class="keywordflow">return</span> (<a class="code" href="filter_8c.html#a5565f487c65e2bf0308c7fd529f121a0">access_list_apply</a> (alist, prefix) == <a class="code" href="filter_8h.html#ab3b7281956317556f846daaebf75de72a898abadf6cc2f9d27780782f09d3a3e3">FILTER_DENY</a> ?
          <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a> : <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>);
    }
  <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="acdb04a95f237610a06cb0d9b748336dc"></a><!-- doxytag: member="zebra_routemap.c::route_match_ip_address_compile" ref="acdb04a95f237610a06cb0d9b748336dc" args="(const char *arg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void* route_match_ip_address_compile </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>arg</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00562">562</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, arg);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a108db5bf6d49a5e9881cd7db44b41704"></a><!-- doxytag: member="zebra_routemap.c::route_match_ip_address_free" ref="a108db5bf6d49a5e9881cd7db44b41704" args="(void *rule)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void route_match_ip_address_free </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>rule</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00569">569</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a058294016ee46cffc91fa4c78391f568"></a><!-- doxytag: member="zebra_routemap.c::route_match_ip_address_prefix_list" ref="a058294016ee46cffc91fa4c78391f568" args="(void *rule, struct prefix *prefix, route_map_object_t type, void *object)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a> route_match_ip_address_prefix_list </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>rule</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structprefix.html">prefix</a> *&#160;</td>
          <td class="paramname"><em>prefix</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a>&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>object</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00586">586</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structprefix__list.html">prefix_list</a> *plist;

  <span class="keywordflow">if</span> (<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a> == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370aed5a3d6c0f7329ba83c52473152a65ad">RMAP_ZEBRA</a>)
    {
      plist = <a class="code" href="plist_8c.html#adfce5b38dccccdc141ffd3571b73a656">prefix_list_lookup</a> (<a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>, (<span class="keywordtype">char</span> *) rule);
      <span class="keywordflow">if</span> (plist == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
    
      <span class="keywordflow">return</span> (<a class="code" href="plist_8c.html#a6fd9bac08d2cb3d2e315d88af146a7f0">prefix_list_apply</a> (plist, prefix) == <a class="code" href="plist_8h.html#a3bda5ec3d1202bc8eb472b4d97633cf9a697cf8d0db0ead308a6ef01301f9543c">PREFIX_DENY</a> ?
          <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a> : <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>);
    }
  <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a8926c41485695d842675f84b834a9242"></a><!-- doxytag: member="zebra_routemap.c::route_match_ip_address_prefix_list_compile" ref="a8926c41485695d842675f84b834a9242" args="(const char *arg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void* route_match_ip_address_prefix_list_compile </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>arg</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00604">604</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, arg);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a327f0894285ba35b135f6bf8ee42e3a0"></a><!-- doxytag: member="zebra_routemap.c::route_match_ip_address_prefix_list_free" ref="a327f0894285ba35b135f6bf8ee42e3a0" args="(void *rule)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void route_match_ip_address_prefix_list_free </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>rule</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00610">610</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a14f8816ef71301455d7d32f60bc7f0a1"></a><!-- doxytag: member="zebra_routemap.c::route_match_ip_next_hop_compile" ref="a14f8816ef71301455d7d32f60bc7f0a1" args="(const char *arg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void* route_match_ip_next_hop_compile </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>arg</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00454">454</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, arg);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a67cc6d2f3a81cda76f6498141daca4eb"></a><!-- doxytag: member="zebra_routemap.c::route_match_ip_next_hop_free" ref="a67cc6d2f3a81cda76f6498141daca4eb" args="(void *rule)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void route_match_ip_next_hop_free </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>rule</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00461">461</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a0f39691b144b762b915622e0231b5c89"></a><!-- doxytag: member="zebra_routemap.c::route_match_ip_next_hop_prefix_list" ref="a0f39691b144b762b915622e0231b5c89" args="(void *rule, struct prefix *prefix, route_map_object_t type, void *object)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a> route_match_ip_next_hop_prefix_list </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>rule</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structprefix.html">prefix</a> *&#160;</td>
          <td class="paramname"><em>prefix</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a>&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>object</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00478">478</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structprefix__list.html">prefix_list</a> *plist;
  <span class="keyword">struct </span><a class="code" href="structnexthop.html">nexthop</a> *<a class="code" href="structnexthop.html">nexthop</a>;
  <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;

  <span class="keywordflow">if</span> (<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a> == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370aed5a3d6c0f7329ba83c52473152a65ad">RMAP_ZEBRA</a>)
    {
      nexthop = object;
      <span class="keywordflow">switch</span> (nexthop-&gt;<a class="code" href="structnexthop.html#a2945ec57f56526f142592f4f578b4522">type</a>) {
      <span class="keywordflow">case</span> <a class="code" href="rib_8h.html#a0db77aa28c8e805e8621931fd0385158a6e00834b26663ce5eb68fb6f7068b5c9">NEXTHOP_TYPE_IFINDEX</a>:
      <span class="keywordflow">case</span> <a class="code" href="rib_8h.html#a0db77aa28c8e805e8621931fd0385158aa12d01eb5d47a34e54792bb02c81dbcb">NEXTHOP_TYPE_IFNAME</a>:
      <span class="keywordflow">case</span> <a class="code" href="rib_8h.html#a0db77aa28c8e805e8621931fd0385158a3147798b072558593867a8772925d9ba">NEXTHOP_TYPE_IPV4_IFINDEX</a>:
      <span class="keywordflow">case</span> <a class="code" href="rib_8h.html#a0db77aa28c8e805e8621931fd0385158ade3f7c373a6291ced38ce796b8a493c9">NEXTHOP_TYPE_IPV4_IFNAME</a>:
        <span class="keywordflow">if</span> (nexthop-&gt;<a class="code" href="structnexthop.html#a50eb39bc450246638a981d46d3c4a579">rtype</a> != <a class="code" href="rib_8h.html#a0db77aa28c8e805e8621931fd0385158a9909d19d3bd1cf79727d0c809424d1e0">NEXTHOP_TYPE_IPV4</a>)
        <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
        <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.family = AF_INET;
        <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix = nexthop-&gt;<a class="code" href="structnexthop.html#aa401c5819c47323f95f25287ab4b8f4b">rgate</a>.<a class="code" href="uniong__addr.html#a3120e936e9b15510a8775865868a61d3">ipv4</a>;
        <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;
        <span class="keywordflow">break</span>;
      <span class="keywordflow">case</span> <a class="code" href="rib_8h.html#a0db77aa28c8e805e8621931fd0385158a9909d19d3bd1cf79727d0c809424d1e0">NEXTHOP_TYPE_IPV4</a>:
        <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.family = AF_INET;
        <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix = nexthop-&gt;<a class="code" href="structnexthop.html#af19e05e5dd51b578246ff51322b6b6dd">gate</a>.<a class="code" href="uniong__addr.html#a3120e936e9b15510a8775865868a61d3">ipv4</a>;
        <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;
        <span class="keywordflow">break</span>;
      <span class="keywordflow">default</span>:
        <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
      }
      plist = <a class="code" href="plist_8c.html#adfce5b38dccccdc141ffd3571b73a656">prefix_list_lookup</a> (<a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>, (<span class="keywordtype">char</span> *) rule);
      <span class="keywordflow">if</span> (plist == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
        <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;

      <span class="keywordflow">return</span> (<a class="code" href="plist_8c.html#a6fd9bac08d2cb3d2e315d88af146a7f0">prefix_list_apply</a> (plist, &amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>) == <a class="code" href="plist_8h.html#a3bda5ec3d1202bc8eb472b4d97633cf9a697cf8d0db0ead308a6ef01301f9543c">PREFIX_DENY</a> ?
              <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a> : <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>);
    }
  <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad7eefdbb6b55a3fadb06a2879d42e6d7"></a><!-- doxytag: member="zebra_routemap.c::route_match_ip_next_hop_prefix_list_compile" ref="ad7eefdbb6b55a3fadb06a2879d42e6d7" args="(const char *arg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void* route_match_ip_next_hop_prefix_list_compile </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>arg</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00518">518</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, arg);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a73fa2fda9f18c79e7e649e46cc04091a"></a><!-- doxytag: member="zebra_routemap.c::route_match_ip_next_hop_prefix_list_free" ref="a73fa2fda9f18c79e7e649e46cc04091a" args="(void *rule)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void route_match_ip_next_hop_prefix_list_free </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>rule</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00524">524</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a251709e74e03f71d27b30ef88affe62f"></a><!-- doxytag: member="zebra_routemap.c::route_set_src" ref="a251709e74e03f71d27b30ef88affe62f" args="(void *rule, struct prefix *prefix, route_map_object_t type, void *object)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a> route_set_src </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>rule</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structprefix.html">prefix</a> *&#160;</td>
          <td class="paramname"><em>prefix</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a>&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>object</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00628">628</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a> == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370aed5a3d6c0f7329ba83c52473152a65ad">RMAP_ZEBRA</a>)
    {
      <span class="keyword">struct </span><a class="code" href="structnexthop.html">nexthop</a> *<a class="code" href="structnexthop.html">nexthop</a>;

      nexthop = object;
      nexthop-&gt;<a class="code" href="structnexthop.html#ac60200501fb60e37f0cf3ab7fa553f7c">src</a> = *(<span class="keyword">union </span><a class="code" href="uniong__addr.html">g_addr</a> *)rule;
    }
  <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516a1215cf356f29000968d958c014b559d5">RMAP_OKAY</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="abead9afbb295d67bd9ffd0bbe5ff7360"></a><!-- doxytag: member="zebra_routemap.c::route_set_src_compile" ref="abead9afbb295d67bd9ffd0bbe5ff7360" args="(const char *arg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void* route_set_src_compile </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>arg</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00643">643</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  sa_family_t family;
  <span class="keyword">union </span><a class="code" href="uniong__addr.html">g_addr</a> src, *psrc;

  <span class="keywordflow">if</span> (<a class="code" href="sockunion_8c.html#ac13c2042641ea5031bc7e244e8061b84">inet_pton</a>(AF_INET, arg, &amp;src.ipv4) &gt; 0)
    family = AF_INET;
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="sockunion_8c.html#ac13c2042641ea5031bc7e244e8061b84">inet_pton</a>(AF_INET6, arg, &amp;src.ipv6) &gt; 0)
    family = AF_INET6;
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
  <span class="keywordflow">else</span>
   <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  psrc = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, <span class="keyword">sizeof</span> (<span class="keyword">union</span> <a class="code" href="uniong__addr.html">g_addr</a>));
  *psrc = src;

  <span class="keywordflow">return</span> psrc;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9afe381dfa9b06135b5c4fc43e5e3126"></a><!-- doxytag: member="zebra_routemap.c::route_set_src_free" ref="a9afe381dfa9b06135b5c4fc43e5e3126" args="(void *rule)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void route_set_src_free </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>rule</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00665">665</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a99142c32fa04dce8d1882651f99c3c48"></a><!-- doxytag: member="zebra_routemap.c::zebra_route_map_init" ref="a99142c32fa04dce8d1882651f99c3c48" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void zebra_route_map_init </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00680">680</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="routemap_8c.html#a4e07135a4ac1643e0a3c2e9460322636">route_map_init</a> ();
  <a class="code" href="routemap_8c.html#a09855551d0ef6f569e32d56cc4bb2857">route_map_init_vty</a> ();

  <a class="code" href="routemap_8c.html#ada69b48e1c884e20ef5a90dc1d0a0b82">route_map_install_match</a> (&amp;<a class="code" href="ospf__routemap_8c.html#a34aab1ca2c1c66235b50eefe7164f203">route_match_interface_cmd</a>);
  <a class="code" href="routemap_8c.html#ada69b48e1c884e20ef5a90dc1d0a0b82">route_map_install_match</a> (&amp;<a class="code" href="bgp__routemap_8c.html#a8619edb19ac3fd44c2ed4ebc03f086f3">route_match_ip_next_hop_cmd</a>);
  <a class="code" href="routemap_8c.html#ada69b48e1c884e20ef5a90dc1d0a0b82">route_map_install_match</a> (&amp;<a class="code" href="bgp__routemap_8c.html#a06056721d860a9d94bed1441a308907d">route_match_ip_next_hop_prefix_list_cmd</a>);
  <a class="code" href="routemap_8c.html#ada69b48e1c884e20ef5a90dc1d0a0b82">route_map_install_match</a> (&amp;<a class="code" href="bgp__routemap_8c.html#a64c2cc0eb31fc4e32ff2472150ce0624">route_match_ip_address_cmd</a>);
  <a class="code" href="routemap_8c.html#ada69b48e1c884e20ef5a90dc1d0a0b82">route_map_install_match</a> (&amp;<a class="code" href="bgp__routemap_8c.html#a87e4289828c25006001339780c3b810b">route_match_ip_address_prefix_list_cmd</a>);
<span class="comment">/* */</span>
  <a class="code" href="routemap_8c.html#a13c839a968e8eba43c4e83ce35929d41">route_map_install_set</a> (&amp;<a class="code" href="zebra__routemap_8c.html#a644993ce2209b38d7070be68447d73d5">route_set_src_cmd</a>);
<span class="comment">/* */</span>
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;match_interface_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_interface_cmd); 
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_interface_val_cmd); 
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;match_ip_next_hop_cmd); 
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ip_next_hop_cmd); 
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ip_next_hop_val_cmd); 
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;match_ip_next_hop_prefix_list_cmd); 
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ip_next_hop_prefix_list_cmd); 
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ip_next_hop_prefix_list_val_cmd); 
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;match_ip_address_cmd); 
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ip_address_cmd); 
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ip_address_val_cmd); 
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;match_ip_address_prefix_list_cmd); 
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ip_address_prefix_list_cmd); 
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ip_address_prefix_list_val_cmd);
<span class="comment">/* */</span>
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;set_src_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_src_cmd);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a33f8da8527b85206301a648800d7ba6e"></a><!-- doxytag: member="zebra_routemap.c::zebra_route_match_add" ref="a33f8da8527b85206301a648800d7ba6e" args="(struct vty *vty, struct route_map_index *index, const char *command, const char *arg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int zebra_route_match_add </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structroute__map__index.html">route_map_index</a> *&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>command</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>arg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00036">36</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret;

  ret = <a class="code" href="routemap_8c.html#ad681bdbc1826c0d017ff19a4315f4691">route_map_add_match</a> (index, command, arg);
  <span class="keywordflow">if</span> (ret)
    {
      <span class="keywordflow">switch</span> (ret)
    {
    <span class="keywordflow">case</span> <a class="code" href="routemap_8h.html#a0944a4353780132eeab7b06e3e42291da26f041059a9ab0d72a8fdfd1e2f43041">RMAP_RULE_MISSING</a>:
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Can&#39;t find rule.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    <span class="keywordflow">case</span> <a class="code" href="routemap_8h.html#a0944a4353780132eeab7b06e3e42291da91019d02c673a0a43dcbb38d88d8c11b">RMAP_COMPILE_ERROR</a>:
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Argument is malformed.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }
    }
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a0abd440782943689c96f4fd85fa15696"></a><!-- doxytag: member="zebra_routemap.c::zebra_route_match_delete" ref="a0abd440782943689c96f4fd85fa15696" args="(struct vty *vty, struct route_map_index *index, const char *command, const char *arg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int zebra_route_match_delete </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structroute__map__index.html">route_map_index</a> *&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>command</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>arg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00059">59</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret;

  ret = <a class="code" href="routemap_8c.html#a884d3e1e22cd928a1e894005199f46c8">route_map_delete_match</a> (index, command, arg);
  <span class="keywordflow">if</span> (ret)
    {
      <span class="keywordflow">switch</span> (ret)
    {
    <span class="keywordflow">case</span> <a class="code" href="routemap_8h.html#a0944a4353780132eeab7b06e3e42291da26f041059a9ab0d72a8fdfd1e2f43041">RMAP_RULE_MISSING</a>:
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Can&#39;t find rule.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    <span class="keywordflow">case</span> <a class="code" href="routemap_8h.html#a0944a4353780132eeab7b06e3e42291da91019d02c673a0a43dcbb38d88d8c11b">RMAP_COMPILE_ERROR</a>:
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Argument is malformed.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }
    }
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="afce63cd03f228a323c84f1a3601e9980"></a><!-- doxytag: member="zebra_routemap.c::zebra_route_set_add" ref="afce63cd03f228a323c84f1a3601e9980" args="(struct vty *vty, struct route_map_index *index, const char *command, const char *arg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int zebra_route_set_add </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structroute__map__index.html">route_map_index</a> *&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>command</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>arg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00082">82</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret;

  ret = <a class="code" href="routemap_8c.html#a8219e7b29162a411fbadd874ec4d7c0a">route_map_add_set</a> (index, command, arg);
  <span class="keywordflow">if</span> (ret)
    {
      <span class="keywordflow">switch</span> (ret)
    {
    <span class="keywordflow">case</span> <a class="code" href="routemap_8h.html#a0944a4353780132eeab7b06e3e42291da26f041059a9ab0d72a8fdfd1e2f43041">RMAP_RULE_MISSING</a>:
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Can&#39;t find rule.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    <span class="keywordflow">case</span> <a class="code" href="routemap_8h.html#a0944a4353780132eeab7b06e3e42291da91019d02c673a0a43dcbb38d88d8c11b">RMAP_COMPILE_ERROR</a>:
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Argument is malformed.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }
    }
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a66c0c2f89eb4b14bdeff6b61b9c8e6d3"></a><!-- doxytag: member="zebra_routemap.c::zebra_route_set_delete" ref="a66c0c2f89eb4b14bdeff6b61b9c8e6d3" args="(struct vty *vty, struct route_map_index *index, const char *command, const char *arg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int zebra_route_set_delete </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structroute__map__index.html">route_map_index</a> *&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>command</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>arg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00105">105</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret;

  ret = <a class="code" href="routemap_8c.html#af03929ed1dd4f46e3284412d6ec1e30e">route_map_delete_set</a> (index, command, arg);
  <span class="keywordflow">if</span> (ret)
    {
      <span class="keywordflow">switch</span> (ret)
    {
    <span class="keywordflow">case</span> <a class="code" href="routemap_8h.html#a0944a4353780132eeab7b06e3e42291da26f041059a9ab0d72a8fdfd1e2f43041">RMAP_RULE_MISSING</a>:
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Can&#39;t find rule.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    <span class="keywordflow">case</span> <a class="code" href="routemap_8h.html#a0944a4353780132eeab7b06e3e42291da91019d02c673a0a43dcbb38d88d8c11b">RMAP_COMPILE_ERROR</a>:
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Argument is malformed.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }
    }
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<hr/><h2>Variable Documentation</h2>
<a class="anchor" id="a34aab1ca2c1c66235b50eefe7164f203"></a><!-- doxytag: member="zebra_routemap.c::route_match_interface_cmd" ref="a34aab1ca2c1c66235b50eefe7164f203" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="el" href="zebra__routemap_8c.html#a34aab1ca2c1c66235b50eefe7164f203">route_match_interface_cmd</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment">
{
   <span class="stringliteral">&quot;interface&quot;</span>,
   <a class="code" href="zebra__routemap_8c.html#a499620e3bd21398f88d3b754ff551ac9">route_match_interface</a>,
   <a class="code" href="zebra__routemap_8c.html#a3851c3bf636d008f2cbfb9c3bf8de16e">route_match_interface_compile</a>,
   <a class="code" href="zebra__routemap_8c.html#a6c8e256b43038748f5420f9d00c0d439">route_match_interface_free</a>
}
</pre></div>
<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00168">168</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>

</div>
</div>
<a class="anchor" id="a64c2cc0eb31fc4e32ff2472150ce0624"></a><!-- doxytag: member="zebra_routemap.c::route_match_ip_address_cmd" ref="a64c2cc0eb31fc4e32ff2472150ce0624" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="el" href="zebra__routemap_8c.html#a64c2cc0eb31fc4e32ff2472150ce0624">route_match_ip_address_cmd</a><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment">
{
  <span class="stringliteral">&quot;ip address&quot;</span>,
  <a class="code" href="zebra__routemap_8c.html#a50e099f0579cd1ed464169b0bb05864e">route_match_ip_address</a>,
  <a class="code" href="zebra__routemap_8c.html#acdb04a95f237610a06cb0d9b748336dc">route_match_ip_address_compile</a>,
  <a class="code" href="zebra__routemap_8c.html#a108db5bf6d49a5e9881cd7db44b41704">route_match_ip_address_free</a>
}
</pre></div>
<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00575">575</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>

</div>
</div>
<a class="anchor" id="a87e4289828c25006001339780c3b810b"></a><!-- doxytag: member="zebra_routemap.c::route_match_ip_address_prefix_list_cmd" ref="a87e4289828c25006001339780c3b810b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="el" href="zebra__routemap_8c.html#a87e4289828c25006001339780c3b810b">route_match_ip_address_prefix_list_cmd</a><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment">
{
  <span class="stringliteral">&quot;ip address prefix-list&quot;</span>,
  <a class="code" href="zebra__routemap_8c.html#a058294016ee46cffc91fa4c78391f568">route_match_ip_address_prefix_list</a>,
  <a class="code" href="zebra__routemap_8c.html#a8926c41485695d842675f84b834a9242">route_match_ip_address_prefix_list_compile</a>,
  <a class="code" href="zebra__routemap_8c.html#a327f0894285ba35b135f6bf8ee42e3a0">route_match_ip_address_prefix_list_free</a>
}
</pre></div>
<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00615">615</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>

</div>
</div>
<a class="anchor" id="a8619edb19ac3fd44c2ed4ebc03f086f3"></a><!-- doxytag: member="zebra_routemap.c::route_match_ip_next_hop_cmd" ref="a8619edb19ac3fd44c2ed4ebc03f086f3" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="el" href="zebra__routemap_8c.html#a8619edb19ac3fd44c2ed4ebc03f086f3">route_match_ip_next_hop_cmd</a><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment">
{
  <span class="stringliteral">&quot;ip next-hop&quot;</span>,
  <a class="code" href="bgp__routemap_8c.html#a6223df9ef6187464ca21e5631441ee22">route_match_ip_next_hop</a>,
  <a class="code" href="zebra__routemap_8c.html#a14f8816ef71301455d7d32f60bc7f0a1">route_match_ip_next_hop_compile</a>,
  <a class="code" href="zebra__routemap_8c.html#a67cc6d2f3a81cda76f6498141daca4eb">route_match_ip_next_hop_free</a>
}
</pre></div>
<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00467">467</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>

</div>
</div>
<a class="anchor" id="a06056721d860a9d94bed1441a308907d"></a><!-- doxytag: member="zebra_routemap.c::route_match_ip_next_hop_prefix_list_cmd" ref="a06056721d860a9d94bed1441a308907d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="el" href="zebra__routemap_8c.html#a06056721d860a9d94bed1441a308907d">route_match_ip_next_hop_prefix_list_cmd</a><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment">
{
  <span class="stringliteral">&quot;ip next-hop prefix-list&quot;</span>,
  <a class="code" href="zebra__routemap_8c.html#a0f39691b144b762b915622e0231b5c89">route_match_ip_next_hop_prefix_list</a>,
  <a class="code" href="zebra__routemap_8c.html#ad7eefdbb6b55a3fadb06a2879d42e6d7">route_match_ip_next_hop_prefix_list_compile</a>,
  <a class="code" href="zebra__routemap_8c.html#a73fa2fda9f18c79e7e649e46cc04091a">route_match_ip_next_hop_prefix_list_free</a>
}
</pre></div>
<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00529">529</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>

</div>
</div>
<a class="anchor" id="a644993ce2209b38d7070be68447d73d5"></a><!-- doxytag: member="zebra_routemap.c::route_set_src_cmd" ref="a644993ce2209b38d7070be68447d73d5" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="el" href="zebra__routemap_8c.html#a644993ce2209b38d7070be68447d73d5">route_set_src_cmd</a><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment"> 
{
  <span class="stringliteral">&quot;src&quot;</span>,
  <a class="code" href="zebra__routemap_8c.html#a251709e74e03f71d27b30ef88affe62f">route_set_src</a>,
  <a class="code" href="zebra__routemap_8c.html#abead9afbb295d67bd9ffd0bbe5ff7360">route_set_src_compile</a>,
  <a class="code" href="zebra__routemap_8c.html#a9afe381dfa9b06135b5c4fc43e5e3126">route_set_src_free</a>,
}
</pre></div>
<p>Definition at line <a class="el" href="zebra__routemap_8c_source.html#l00671">671</a> of file <a class="el" href="zebra__routemap_8c_source.html">zebra_routemap.c</a>.</p>

</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="zebra__routemap_8c.html">zebra_routemap.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:38 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
