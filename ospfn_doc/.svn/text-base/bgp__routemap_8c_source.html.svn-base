<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: bgpd/bgp_routemap.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('bgp__routemap_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">bgpd/bgp_routemap.c</div>  </div>
</div>
<div class="contents">
<a href="bgp__routemap_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* Route map function of bgpd.</span>
<a name="l00002"></a>00002 <span class="comment">   Copyright (C) 1998, 1999 Kunihiro Ishiguro</span>
<a name="l00003"></a>00003 <span class="comment"></span>
<a name="l00004"></a>00004 <span class="comment">This file is part of GNU Zebra.</span>
<a name="l00005"></a>00005 <span class="comment"></span>
<a name="l00006"></a>00006 <span class="comment">GNU Zebra is free software; you can redistribute it and/or modify it</span>
<a name="l00007"></a>00007 <span class="comment">under the terms of the GNU General Public License as published by the</span>
<a name="l00008"></a>00008 <span class="comment">Free Software Foundation; either version 2, or (at your option) any</span>
<a name="l00009"></a>00009 <span class="comment">later version.</span>
<a name="l00010"></a>00010 <span class="comment"></span>
<a name="l00011"></a>00011 <span class="comment">GNU Zebra is distributed in the hope that it will be useful, but</span>
<a name="l00012"></a>00012 <span class="comment">WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00014"></a>00014 <span class="comment">General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"></span>
<a name="l00016"></a>00016 <span class="comment">You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment">along with GNU Zebra; see the file COPYING.  If not, write to the Free</span>
<a name="l00018"></a>00018 <span class="comment">Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA</span>
<a name="l00019"></a>00019 <span class="comment">02111-1307, USA.  */</span>
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 <span class="preprocessor">#include &lt;<a class="code" href="zebra_8h.html">zebra.h</a>&gt;</span>
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="preprocessor">#include &quot;<a class="code" href="prefix_8h.html">prefix.h</a>&quot;</span>
<a name="l00024"></a>00024 <span class="preprocessor">#include &quot;<a class="code" href="filter_8h.html">filter.h</a>&quot;</span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="routemap_8h.html">routemap.h</a>&quot;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="command_8h.html">command.h</a>&quot;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="linklist_8h.html">linklist.h</a>&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="plist_8h.html">plist.h</a>&quot;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="memory_8h.html">memory.h</a>&quot;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="log_8h.html">log.h</a>&quot;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#ifdef HAVE_LIBPCREPOSIX</span>
<a name="l00032"></a>00032 <span class="preprocessor"></span><span class="preprocessor"># include &lt;pcreposix.h&gt;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#else</span>
<a name="l00034"></a>00034 <span class="preprocessor"></span><span class="preprocessor"># ifdef HAVE_GNU_REGEX</span>
<a name="l00035"></a>00035 <span class="preprocessor"></span><span class="preprocessor">#  include &lt;regex.h&gt;</span>
<a name="l00036"></a>00036 <span class="preprocessor"># else</span>
<a name="l00037"></a>00037 <span class="preprocessor"></span><span class="preprocessor">#  include &quot;<a class="code" href="regex-gnu_8h.html">regex-gnu.h</a>&quot;</span>
<a name="l00038"></a>00038 <span class="preprocessor"># endif </span><span class="comment">/* HAVE_GNU_REGEX */</span>
<a name="l00039"></a>00039 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_LIBPCREPOSIX */</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include &quot;<a class="code" href="buffer_8h.html">buffer.h</a>&quot;</span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &quot;<a class="code" href="sockunion_8h.html">sockunion.h</a>&quot;</span>
<a name="l00042"></a>00042 
<a name="l00043"></a>00043 <span class="preprocessor">#include &quot;<a class="code" href="bgpd_8h.html">bgpd/bgpd.h</a>&quot;</span>
<a name="l00044"></a>00044 <span class="preprocessor">#include &quot;<a class="code" href="bgp__table_8h.html">bgpd/bgp_table.h</a>&quot;</span>
<a name="l00045"></a>00045 <span class="preprocessor">#include &quot;<a class="code" href="bgp__attr_8h.html">bgpd/bgp_attr.h</a>&quot;</span>
<a name="l00046"></a>00046 <span class="preprocessor">#include &quot;<a class="code" href="bgp__aspath_8h.html">bgpd/bgp_aspath.h</a>&quot;</span>
<a name="l00047"></a>00047 <span class="preprocessor">#include &quot;<a class="code" href="bgp__route_8h.html">bgpd/bgp_route.h</a>&quot;</span>
<a name="l00048"></a>00048 <span class="preprocessor">#include &quot;<a class="code" href="bgp__regex_8h.html">bgpd/bgp_regex.h</a>&quot;</span>
<a name="l00049"></a>00049 <span class="preprocessor">#include &quot;<a class="code" href="bgp__community_8h.html">bgpd/bgp_community.h</a>&quot;</span>
<a name="l00050"></a>00050 <span class="preprocessor">#include &quot;<a class="code" href="bgp__clist_8h.html">bgpd/bgp_clist.h</a>&quot;</span>
<a name="l00051"></a>00051 <span class="preprocessor">#include &quot;<a class="code" href="bgp__filter_8h.html">bgpd/bgp_filter.h</a>&quot;</span>
<a name="l00052"></a>00052 <span class="preprocessor">#include &quot;<a class="code" href="bgp__mplsvpn_8h.html">bgpd/bgp_mplsvpn.h</a>&quot;</span>
<a name="l00053"></a>00053 <span class="preprocessor">#include &quot;<a class="code" href="bgp__ecommunity_8h.html">bgpd/bgp_ecommunity.h</a>&quot;</span>
<a name="l00054"></a>00054 <span class="preprocessor">#include &quot;<a class="code" href="bgp__vty_8h.html">bgpd/bgp_vty.h</a>&quot;</span>
<a name="l00055"></a>00055 
<a name="l00056"></a>00056 <span class="comment">/* Memo of route-map commands.</span>
<a name="l00057"></a>00057 <span class="comment"></span>
<a name="l00058"></a>00058 <span class="comment">o Cisco route-map</span>
<a name="l00059"></a>00059 <span class="comment"></span>
<a name="l00060"></a>00060 <span class="comment"> match as-path          :  Done</span>
<a name="l00061"></a>00061 <span class="comment">       community        :  Done</span>
<a name="l00062"></a>00062 <span class="comment">       interface        :  Not yet</span>
<a name="l00063"></a>00063 <span class="comment">       ip address       :  Done</span>
<a name="l00064"></a>00064 <span class="comment">       ip next-hop      :  Done</span>
<a name="l00065"></a>00065 <span class="comment">       ip route-source  :  Done</span>
<a name="l00066"></a>00066 <span class="comment">       ip prefix-list   :  Done</span>
<a name="l00067"></a>00067 <span class="comment">       ipv6 address     :  Done</span>
<a name="l00068"></a>00068 <span class="comment">       ipv6 next-hop    :  Done</span>
<a name="l00069"></a>00069 <span class="comment">       ipv6 route-source:  (This will not be implemented by bgpd)</span>
<a name="l00070"></a>00070 <span class="comment">       ipv6 prefix-list :  Done</span>
<a name="l00071"></a>00071 <span class="comment">       length           :  (This will not be implemented by bgpd)</span>
<a name="l00072"></a>00072 <span class="comment">       metric           :  Done</span>
<a name="l00073"></a>00073 <span class="comment">       route-type       :  (This will not be implemented by bgpd)</span>
<a name="l00074"></a>00074 <span class="comment">       tag              :  (This will not be implemented by bgpd)</span>
<a name="l00075"></a>00075 <span class="comment"></span>
<a name="l00076"></a>00076 <span class="comment"> set  as-path prepend   :  Done</span>
<a name="l00077"></a>00077 <span class="comment">      as-path tag       :  Not yet</span>
<a name="l00078"></a>00078 <span class="comment">      automatic-tag     :  (This will not be implemented by bgpd)</span>
<a name="l00079"></a>00079 <span class="comment">      community         :  Done</span>
<a name="l00080"></a>00080 <span class="comment">      comm-list         :  Not yet</span>
<a name="l00081"></a>00081 <span class="comment">      dampning          :  Not yet</span>
<a name="l00082"></a>00082 <span class="comment">      default           :  (This will not be implemented by bgpd)</span>
<a name="l00083"></a>00083 <span class="comment">      interface         :  (This will not be implemented by bgpd)</span>
<a name="l00084"></a>00084 <span class="comment">      ip default        :  (This will not be implemented by bgpd)</span>
<a name="l00085"></a>00085 <span class="comment">      ip next-hop       :  Done</span>
<a name="l00086"></a>00086 <span class="comment">      ip precedence     :  (This will not be implemented by bgpd)</span>
<a name="l00087"></a>00087 <span class="comment">      ip tos            :  (This will not be implemented by bgpd)</span>
<a name="l00088"></a>00088 <span class="comment">      level             :  (This will not be implemented by bgpd)</span>
<a name="l00089"></a>00089 <span class="comment">      local-preference  :  Done</span>
<a name="l00090"></a>00090 <span class="comment">      metric            :  Done</span>
<a name="l00091"></a>00091 <span class="comment">      metric-type       :  Not yet</span>
<a name="l00092"></a>00092 <span class="comment">      origin            :  Done</span>
<a name="l00093"></a>00093 <span class="comment">      tag               :  (This will not be implemented by bgpd)</span>
<a name="l00094"></a>00094 <span class="comment">      weight            :  Done</span>
<a name="l00095"></a>00095 <span class="comment">      pathlimit     :  Done</span>
<a name="l00096"></a>00096 <span class="comment"></span>
<a name="l00097"></a>00097 <span class="comment">o Local extention</span>
<a name="l00098"></a>00098 <span class="comment"></span>
<a name="l00099"></a>00099 <span class="comment">  set ipv6 next-hop global: Done</span>
<a name="l00100"></a>00100 <span class="comment">  set ipv6 next-hop local : Done</span>
<a name="l00101"></a>00101 <span class="comment">  set pathlimit ttl       : Done</span>
<a name="l00102"></a>00102 <span class="comment">  set as-path exclude     : Done</span>
<a name="l00103"></a>00103 <span class="comment">  match pathlimit as     : Done</span>
<a name="l00104"></a>00104 <span class="comment"></span>
<a name="l00105"></a>00105 <span class="comment">*/</span> 
<a name="l00106"></a>00106 
<a name="l00107"></a>00107 <span class="comment">/* Compiles either AS or TTL argument. It is amused the VTY code</span>
<a name="l00108"></a>00108 <span class="comment"> * has already range-checked the values to be suitable as TTL or ASN</span>
<a name="l00109"></a>00109 <span class="comment"> */</span>
<a name="l00110"></a>00110 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l00111"></a><a class="code" href="bgp__routemap_8c.html#a896ce07a04d551467481053fa2d0f3af">00111</a> <a class="code" href="bgp__routemap_8c.html#a896ce07a04d551467481053fa2d0f3af">route_pathlimit_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l00112"></a>00112 {
<a name="l00113"></a>00113   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> tmp;
<a name="l00114"></a>00114   u_int32_t *<a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>;
<a name="l00115"></a>00115   <span class="keywordtype">char</span> *endptr = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00116"></a>00116 
<a name="l00117"></a>00117   <span class="comment">/* TTL or AS value shoud be integer. */</span>
<a name="l00118"></a>00118   <span class="keywordflow">if</span> (! <a class="code" href="prefix_8c.html#abca8c8e6c67ae2442bbdbb028e6b11c8">all_digit</a> (arg))
<a name="l00119"></a>00119     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00120"></a>00120   
<a name="l00121"></a>00121   tmp = strtoul (arg, &amp;endptr, 10);
<a name="l00122"></a>00122   <span class="keywordflow">if</span> (*endptr != <span class="charliteral">&#39;\0&#39;</span> || tmp == ULONG_MAX || tmp &gt; <a class="code" href="zebra_8h.html#ab5eb23180f7cc12b7d6c04a8ec067fdd">UINT32_MAX</a>)
<a name="l00123"></a>00123     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00124"></a>00124    
<a name="l00125"></a>00125   <span class="keywordflow">if</span> (!(val = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, <span class="keyword">sizeof</span> (u_int32_t))))
<a name="l00126"></a>00126     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00127"></a>00127   
<a name="l00128"></a>00128   *val = tmp;
<a name="l00129"></a>00129   
<a name="l00130"></a>00130   <span class="keywordflow">return</span> <a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>;
<a name="l00131"></a>00131 }
<a name="l00132"></a>00132 
<a name="l00133"></a>00133 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00134"></a><a class="code" href="bgp__routemap_8c.html#ae69d09536dee62b21f2f8870acf82b6c">00134</a> <a class="code" href="bgp__routemap_8c.html#ae69d09536dee62b21f2f8870acf82b6c">route_pathlimit_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l00135"></a>00135 {
<a name="l00136"></a>00136   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l00137"></a>00137 }
<a name="l00138"></a>00138 
<a name="l00139"></a>00139 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l00140"></a><a class="code" href="bgp__routemap_8c.html#ac05b99eefb2eeca152afa463b0fbd92e">00140</a> <a class="code" href="bgp__routemap_8c.html#ac05b99eefb2eeca152afa463b0fbd92e">route_match_pathlimit_as</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>, <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>,
<a name="l00141"></a>00141       <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l00142"></a>00142 {
<a name="l00143"></a>00143   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *info = object;
<a name="l00144"></a>00144   <span class="keyword">struct </span><a class="code" href="structattr.html">attr</a> *<a class="code" href="structattr.html">attr</a> = info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>;
<a name="l00145"></a>00145   uint32_t <a class="code" href="structattr.html#a8a6b5eec215a881c600ce5556b6a91db">as</a> = *(uint32_t *)rule;
<a name="l00146"></a>00146   
<a name="l00147"></a>00147   <span class="keywordflow">if</span> (type != <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l00148"></a>00148     <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00149"></a>00149   
<a name="l00150"></a>00150   <span class="keywordflow">if</span> (!attr-&gt;<a class="code" href="structattr.html#a3f18193ca657879db94778fdcbe1762a">pathlimit</a>.<a class="code" href="structattr.html#a8a6b5eec215a881c600ce5556b6a91db">as</a>)
<a name="l00151"></a>00151     <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00152"></a>00152   
<a name="l00153"></a>00153   <span class="keywordflow">if</span> (as == attr-&gt;<a class="code" href="structattr.html#a3f18193ca657879db94778fdcbe1762a">pathlimit</a>.<a class="code" href="structattr.html#a8a6b5eec215a881c600ce5556b6a91db">as</a>)
<a name="l00154"></a>00154     <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>;
<a name="l00155"></a>00155   
<a name="l00156"></a>00156   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00157"></a>00157 }
<a name="l00158"></a>00158 
<a name="l00159"></a>00159 <span class="comment">/* &#39;match pathlimit as&#39; */</span>
<a name="l00160"></a><a class="code" href="bgp__routemap_8c.html#a087ae48acb557627337a4fff64fd565b">00160</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#a087ae48acb557627337a4fff64fd565b">route_match_pathlimit_as_cmd</a> =
<a name="l00161"></a>00161 {
<a name="l00162"></a>00162   <span class="stringliteral">&quot;pathlimit as&quot;</span>,
<a name="l00163"></a>00163   <a class="code" href="bgp__routemap_8c.html#ac05b99eefb2eeca152afa463b0fbd92e">route_match_pathlimit_as</a>,
<a name="l00164"></a>00164   <a class="code" href="bgp__routemap_8c.html#a896ce07a04d551467481053fa2d0f3af">route_pathlimit_compile</a>,
<a name="l00165"></a>00165   <a class="code" href="bgp__routemap_8c.html#ae69d09536dee62b21f2f8870acf82b6c">route_pathlimit_free</a>
<a name="l00166"></a>00166 };
<a name="l00167"></a>00167 
<a name="l00168"></a>00168 <span class="comment">/* Set pathlimit TTL. */</span>
<a name="l00169"></a>00169 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l00170"></a><a class="code" href="bgp__routemap_8c.html#ae02a9d92108b55990a838361f9c9398a">00170</a> <a class="code" href="bgp__routemap_8c.html#ae02a9d92108b55990a838361f9c9398a">route_set_pathlimit_ttl</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>,
<a name="l00171"></a>00171                  <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l00172"></a>00172 {
<a name="l00173"></a>00173   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *info = object;
<a name="l00174"></a>00174   <span class="keyword">struct </span><a class="code" href="structattr.html">attr</a> *<a class="code" href="structattr.html">attr</a> = info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>;
<a name="l00175"></a>00175   u_char <a class="code" href="structattr.html#a0f7b3d80060491aa2bc639577e660089">ttl</a> = *(uint32_t *)rule;
<a name="l00176"></a>00176   
<a name="l00177"></a>00177   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l00178"></a>00178     {
<a name="l00179"></a>00179       attr-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a> |= <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#a50c0b7675e41454193cd4e22cb448a99">BGP_ATTR_AS_PATHLIMIT</a>);
<a name="l00180"></a>00180       attr-&gt;<a class="code" href="structattr.html#a3f18193ca657879db94778fdcbe1762a">pathlimit</a>.<a class="code" href="structattr.html#a0f7b3d80060491aa2bc639577e660089">ttl</a> = <a class="code" href="structattr.html#a0f7b3d80060491aa2bc639577e660089">ttl</a>;
<a name="l00181"></a>00181       attr-&gt;<a class="code" href="structattr.html#a3f18193ca657879db94778fdcbe1762a">pathlimit</a>.<a class="code" href="structattr.html#a8a6b5eec215a881c600ce5556b6a91db">as</a> = 0;
<a name="l00182"></a>00182     }
<a name="l00183"></a>00183 
<a name="l00184"></a>00184   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516a1215cf356f29000968d958c014b559d5">RMAP_OKAY</a>;
<a name="l00185"></a>00185 }
<a name="l00186"></a>00186 
<a name="l00187"></a>00187 <span class="comment">/* Set local preference rule structure. */</span>
<a name="l00188"></a><a class="code" href="bgp__routemap_8c.html#a605b5a20a903cb2d93d665b63943f46f">00188</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#a605b5a20a903cb2d93d665b63943f46f">route_set_pathlimit_ttl_cmd</a> = 
<a name="l00189"></a>00189 {
<a name="l00190"></a>00190   <span class="stringliteral">&quot;pathlimit ttl&quot;</span>,
<a name="l00191"></a>00191   <a class="code" href="bgp__routemap_8c.html#ae02a9d92108b55990a838361f9c9398a">route_set_pathlimit_ttl</a>,
<a name="l00192"></a>00192   <a class="code" href="bgp__routemap_8c.html#a896ce07a04d551467481053fa2d0f3af">route_pathlimit_compile</a>,
<a name="l00193"></a>00193   <a class="code" href="bgp__routemap_8c.html#ae69d09536dee62b21f2f8870acf82b6c">route_pathlimit_free</a>,
<a name="l00194"></a>00194 };
<a name="l00195"></a>00195 
<a name="l00196"></a>00196  <span class="comment">/* &#39;match peer (A.B.C.D|X:X::X:X)&#39; */</span>
<a name="l00197"></a>00197 
<a name="l00198"></a>00198 <span class="comment">/* Compares the peer specified in the &#39;match peer&#39; clause with the peer</span>
<a name="l00199"></a>00199 <span class="comment">    received in bgp_info-&gt;peer. If it is the same, or if the peer structure</span>
<a name="l00200"></a>00200 <span class="comment">    received is a peer_group containing it, returns RMAP_MATCH. */</span>
<a name="l00201"></a>00201 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l00202"></a><a class="code" href="bgp__routemap_8c.html#aa44b458031b15e329431001e9679a0aa">00202</a> <a class="code" href="bgp__routemap_8c.html#aa44b458031b15e329431001e9679a0aa">route_match_peer</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>, <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>,
<a name="l00203"></a>00203       <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l00204"></a>00204 {
<a name="l00205"></a>00205   <span class="keyword">union </span><a class="code" href="unionsockunion.html">sockunion</a> *su;
<a name="l00206"></a>00206   <span class="keyword">union </span><a class="code" href="unionsockunion.html">sockunion</a> *su2;
<a name="l00207"></a>00207   <span class="keyword">struct </span><a class="code" href="structpeer__group.html">peer_group</a> *group;
<a name="l00208"></a>00208   <span class="keyword">struct </span><a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>;
<a name="l00209"></a>00209   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
<a name="l00210"></a>00210 
<a name="l00211"></a>00211   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l00212"></a>00212     {
<a name="l00213"></a>00213       su = rule;
<a name="l00214"></a>00214       peer = ((<span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *) <span class="keywordtype">object</span>)-&gt;peer;
<a name="l00215"></a>00215 
<a name="l00216"></a>00216       <span class="keywordflow">if</span> ( ! <a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#afad0d7ca0b1d0d8bdea5bb8eaba1ef65">rmap_type</a>, <a class="code" href="bgpd_8h.html#a02dc8b409a25e5e440fd4f9b580fcdf7">PEER_RMAP_TYPE_IMPORT</a>) &amp;&amp;
<a name="l00217"></a>00217            ! <a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#afad0d7ca0b1d0d8bdea5bb8eaba1ef65">rmap_type</a>, <a class="code" href="bgpd_8h.html#a5d239df7c366c66f144cac26eea3c7f9">PEER_RMAP_TYPE_EXPORT</a>) )
<a name="l00218"></a>00218         <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00219"></a>00219 
<a name="l00220"></a>00220       <span class="comment">/* If su=&#39;0.0.0.0&#39; (command &#39;match peer local&#39;), and it&#39;s a NETWORK,</span>
<a name="l00221"></a>00221 <span class="comment">          REDISTRIBUTE or DEFAULT_GENERATED route =&gt; return RMAP_MATCH */</span>
<a name="l00222"></a>00222       su2 = <a class="code" href="sockunion_8c.html#a3dffcd96d7fff7136a7a35d44727ca0d">sockunion_str2su</a> (<span class="stringliteral">&quot;0.0.0.0&quot;</span>);
<a name="l00223"></a>00223       <span class="keywordflow">if</span> ( <a class="code" href="sockunion_8c.html#afbcb327baabeb77f356791b1551e51b8">sockunion_same</a> (su, su2) )
<a name="l00224"></a>00224         {
<a name="l00225"></a>00225           <span class="keywordtype">int</span> ret;
<a name="l00226"></a>00226           <span class="keywordflow">if</span> ( <a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#afad0d7ca0b1d0d8bdea5bb8eaba1ef65">rmap_type</a>, <a class="code" href="bgpd_8h.html#a28df478bfbd24d69abf01dcee51aaa48">PEER_RMAP_TYPE_NETWORK</a>) ||
<a name="l00227"></a>00227                <a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#afad0d7ca0b1d0d8bdea5bb8eaba1ef65">rmap_type</a>, <a class="code" href="bgpd_8h.html#aba4df425743f00b0b48bfb45194cd524">PEER_RMAP_TYPE_REDISTRIBUTE</a>) ||
<a name="l00228"></a>00228                <a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#afad0d7ca0b1d0d8bdea5bb8eaba1ef65">rmap_type</a>, <a class="code" href="bgpd_8h.html#aa2464065e408b72a051e299c8b11e1f9">PEER_RMAP_TYPE_DEFAULT</a>))
<a name="l00229"></a>00229             ret = <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>;
<a name="l00230"></a>00230           <span class="keywordflow">else</span>
<a name="l00231"></a>00231             ret = <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00232"></a>00232           
<a name="l00233"></a>00233           <a class="code" href="sockunion_8c.html#a4c9c2ea65e1c9058a61db60a5ae8dbaf">sockunion_free</a> (su2);
<a name="l00234"></a>00234           <span class="keywordflow">return</span> ret;
<a name="l00235"></a>00235         }
<a name="l00236"></a>00236       <a class="code" href="sockunion_8c.html#a4c9c2ea65e1c9058a61db60a5ae8dbaf">sockunion_free</a> (su2);
<a name="l00237"></a>00237       
<a name="l00238"></a>00238       <span class="keywordflow">if</span> (! <a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#a8dd1d16a0890967ee343e1bc70292e4f">sflags</a>, <a class="code" href="bgpd_8h.html#af3313c9e7a5b086f04fac1d8b4832b32">PEER_STATUS_GROUP</a>))
<a name="l00239"></a>00239         {
<a name="l00240"></a>00240           <span class="keywordflow">if</span> (<a class="code" href="sockunion_8c.html#afbcb327baabeb77f356791b1551e51b8">sockunion_same</a> (su, &amp;peer-&gt;<a class="code" href="structpeer.html#ab793b0acdca7d325f32edc25503b83b9">su</a>))
<a name="l00241"></a>00241             <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>;
<a name="l00242"></a>00242 
<a name="l00243"></a>00243           <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00244"></a>00244         }
<a name="l00245"></a>00245       <span class="keywordflow">else</span>
<a name="l00246"></a>00246         {
<a name="l00247"></a>00247           group = peer-&gt;<a class="code" href="structpeer.html#ad0971faeae0a4cd91222b60a7629a686">group</a>;
<a name="l00248"></a>00248           <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (group-&gt;<a class="code" href="structpeer__group.html#a82be4a6eec4816e8e6290fab0bc91b4d">peer</a>, node, nnode, peer))
<a name="l00249"></a>00249             {
<a name="l00250"></a>00250               <span class="keywordflow">if</span> (<a class="code" href="sockunion_8c.html#afbcb327baabeb77f356791b1551e51b8">sockunion_same</a> (su, &amp;peer-&gt;<a class="code" href="structpeer.html#ab793b0acdca7d325f32edc25503b83b9">su</a>))
<a name="l00251"></a>00251                 <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>;
<a name="l00252"></a>00252             }
<a name="l00253"></a>00253           <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00254"></a>00254         }
<a name="l00255"></a>00255     }
<a name="l00256"></a>00256   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00257"></a>00257 }
<a name="l00258"></a>00258 
<a name="l00259"></a>00259 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l00260"></a><a class="code" href="bgp__routemap_8c.html#ab5233f28b3bde3f0cfcf2ec6bdf20038">00260</a> <a class="code" href="bgp__routemap_8c.html#ab5233f28b3bde3f0cfcf2ec6bdf20038">route_match_peer_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l00261"></a>00261 {
<a name="l00262"></a>00262   <span class="keyword">union </span><a class="code" href="unionsockunion.html">sockunion</a> *su;
<a name="l00263"></a>00263   <span class="keywordtype">int</span> ret;
<a name="l00264"></a>00264 
<a name="l00265"></a>00265   su = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, <span class="keyword">sizeof</span> (<span class="keyword">union</span> <a class="code" href="unionsockunion.html">sockunion</a>));
<a name="l00266"></a>00266 
<a name="l00267"></a>00267   ret = <a class="code" href="sockunion_8c.html#aaa4fbd35d2f9346b70e0d6c9e66cae79">str2sockunion</a> ( (arg)? arg : <span class="stringliteral">&quot;0.0.0.0&quot;</span>, su);
<a name="l00268"></a>00268   <span class="keywordflow">if</span> (ret &lt; 0) {
<a name="l00269"></a>00269     <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, su);
<a name="l00270"></a>00270     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00271"></a>00271   }
<a name="l00272"></a>00272 
<a name="l00273"></a>00273   <span class="keywordflow">return</span> su;
<a name="l00274"></a>00274 }
<a name="l00275"></a>00275 
<a name="l00276"></a>00276 <span class="comment">/* Free route map&#39;s compiled `ip address&#39; value. */</span>
<a name="l00277"></a>00277 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00278"></a><a class="code" href="bgp__routemap_8c.html#a96c5bcc91cd522f52b77ff5efd3a41b2">00278</a> <a class="code" href="bgp__routemap_8c.html#a96c5bcc91cd522f52b77ff5efd3a41b2">route_match_peer_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l00279"></a>00279 {
<a name="l00280"></a>00280   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l00281"></a>00281 }
<a name="l00282"></a>00282 
<a name="l00283"></a>00283 <span class="comment">/* Route map commands for ip address matching. */</span>
<a name="l00284"></a><a class="code" href="bgp__routemap_8c.html#af9237d6729cdf8f29667bbd181279342">00284</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#af9237d6729cdf8f29667bbd181279342">route_match_peer_cmd</a> =
<a name="l00285"></a>00285 {
<a name="l00286"></a>00286   <span class="stringliteral">&quot;peer&quot;</span>,
<a name="l00287"></a>00287   <a class="code" href="bgp__routemap_8c.html#aa44b458031b15e329431001e9679a0aa">route_match_peer</a>,
<a name="l00288"></a>00288   <a class="code" href="bgp__routemap_8c.html#ab5233f28b3bde3f0cfcf2ec6bdf20038">route_match_peer_compile</a>,
<a name="l00289"></a>00289   <a class="code" href="bgp__routemap_8c.html#a96c5bcc91cd522f52b77ff5efd3a41b2">route_match_peer_free</a>
<a name="l00290"></a>00290 };
<a name="l00291"></a>00291 
<a name="l00292"></a>00292 <span class="comment">/* `match ip address IP_ACCESS_LIST&#39; */</span>
<a name="l00293"></a>00293 
<a name="l00294"></a>00294 <span class="comment">/* Match function should return 1 if match is success else return</span>
<a name="l00295"></a>00295 <span class="comment">   zero. */</span>
<a name="l00296"></a>00296 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l00297"></a><a class="code" href="bgp__routemap_8c.html#a50e099f0579cd1ed464169b0bb05864e">00297</a> <a class="code" href="bgp__routemap_8c.html#a50e099f0579cd1ed464169b0bb05864e">route_match_ip_address</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>, 
<a name="l00298"></a>00298             <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l00299"></a>00299 {
<a name="l00300"></a>00300   <span class="keyword">struct </span><a class="code" href="structaccess__list.html">access_list</a> *alist;
<a name="l00301"></a>00301   <span class="comment">/* struct prefix_ipv4 match; */</span>
<a name="l00302"></a>00302 
<a name="l00303"></a>00303   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l00304"></a>00304     {
<a name="l00305"></a>00305       alist = <a class="code" href="filter_8c.html#a8cb65cd01015f6673c632cb5b8714b3e">access_list_lookup</a> (<a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>, (<span class="keywordtype">char</span> *) rule);
<a name="l00306"></a>00306       <span class="keywordflow">if</span> (alist == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00307"></a>00307     <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00308"></a>00308     
<a name="l00309"></a>00309       <span class="keywordflow">return</span> (<a class="code" href="filter_8c.html#a5565f487c65e2bf0308c7fd529f121a0">access_list_apply</a> (alist, prefix) == <a class="code" href="filter_8h.html#ab3b7281956317556f846daaebf75de72a898abadf6cc2f9d27780782f09d3a3e3">FILTER_DENY</a> ?
<a name="l00310"></a>00310           <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a> : <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>);
<a name="l00311"></a>00311     }
<a name="l00312"></a>00312   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00313"></a>00313 }
<a name="l00314"></a>00314 
<a name="l00315"></a>00315 <span class="comment">/* Route map `ip address&#39; match statement.  `arg&#39; should be</span>
<a name="l00316"></a>00316 <span class="comment">   access-list name. */</span>
<a name="l00317"></a>00317 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l00318"></a><a class="code" href="bgp__routemap_8c.html#acdb04a95f237610a06cb0d9b748336dc">00318</a> <a class="code" href="bgp__routemap_8c.html#acdb04a95f237610a06cb0d9b748336dc">route_match_ip_address_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l00319"></a>00319 {
<a name="l00320"></a>00320   <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, arg);
<a name="l00321"></a>00321 }
<a name="l00322"></a>00322 
<a name="l00323"></a>00323 <span class="comment">/* Free route map&#39;s compiled `ip address&#39; value. */</span>
<a name="l00324"></a>00324 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00325"></a><a class="code" href="bgp__routemap_8c.html#a108db5bf6d49a5e9881cd7db44b41704">00325</a> <a class="code" href="bgp__routemap_8c.html#a108db5bf6d49a5e9881cd7db44b41704">route_match_ip_address_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l00326"></a>00326 {
<a name="l00327"></a>00327   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l00328"></a>00328 }
<a name="l00329"></a>00329 
<a name="l00330"></a>00330 <span class="comment">/* Route map commands for ip address matching. */</span>
<a name="l00331"></a><a class="code" href="bgp__routemap_8c.html#a64c2cc0eb31fc4e32ff2472150ce0624">00331</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#a64c2cc0eb31fc4e32ff2472150ce0624">route_match_ip_address_cmd</a> =
<a name="l00332"></a>00332 {
<a name="l00333"></a>00333   <span class="stringliteral">&quot;ip address&quot;</span>,
<a name="l00334"></a>00334   <a class="code" href="bgp__routemap_8c.html#a50e099f0579cd1ed464169b0bb05864e">route_match_ip_address</a>,
<a name="l00335"></a>00335   <a class="code" href="bgp__routemap_8c.html#acdb04a95f237610a06cb0d9b748336dc">route_match_ip_address_compile</a>,
<a name="l00336"></a>00336   <a class="code" href="bgp__routemap_8c.html#a108db5bf6d49a5e9881cd7db44b41704">route_match_ip_address_free</a>
<a name="l00337"></a>00337 };
<a name="l00338"></a>00338 
<a name="l00339"></a>00339 <span class="comment">/* `match ip next-hop IP_ADDRESS&#39; */</span>
<a name="l00340"></a>00340 
<a name="l00341"></a>00341 <span class="comment">/* Match function return 1 if match is success else return zero. */</span>
<a name="l00342"></a>00342 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l00343"></a><a class="code" href="bgp__routemap_8c.html#a6223df9ef6187464ca21e5631441ee22">00343</a> <a class="code" href="bgp__routemap_8c.html#a6223df9ef6187464ca21e5631441ee22">route_match_ip_next_hop</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>, 
<a name="l00344"></a>00344              <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l00345"></a>00345 {
<a name="l00346"></a>00346   <span class="keyword">struct </span><a class="code" href="structaccess__list.html">access_list</a> *alist;
<a name="l00347"></a>00347   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *<a class="code" href="structbgp__info.html">bgp_info</a>;
<a name="l00348"></a>00348   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> p;
<a name="l00349"></a>00349 
<a name="l00350"></a>00350   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l00351"></a>00351     {
<a name="l00352"></a>00352       bgp_info = object;
<a name="l00353"></a>00353       p.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
<a name="l00354"></a>00354       p.prefix = bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#ab23f9ed5b7c55ea658ab6dc729bc9e63">nexthop</a>;
<a name="l00355"></a>00355       p.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;
<a name="l00356"></a>00356 
<a name="l00357"></a>00357       alist = <a class="code" href="filter_8c.html#a8cb65cd01015f6673c632cb5b8714b3e">access_list_lookup</a> (<a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>, (<span class="keywordtype">char</span> *) rule);
<a name="l00358"></a>00358       <span class="keywordflow">if</span> (alist == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00359"></a>00359     <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00360"></a>00360 
<a name="l00361"></a>00361       <span class="keywordflow">return</span> (<a class="code" href="filter_8c.html#a5565f487c65e2bf0308c7fd529f121a0">access_list_apply</a> (alist, &amp;p) == <a class="code" href="filter_8h.html#ab3b7281956317556f846daaebf75de72a898abadf6cc2f9d27780782f09d3a3e3">FILTER_DENY</a> ?
<a name="l00362"></a>00362               <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a> : <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>);
<a name="l00363"></a>00363     }
<a name="l00364"></a>00364   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00365"></a>00365 }
<a name="l00366"></a>00366 
<a name="l00367"></a>00367 <span class="comment">/* Route map `ip next-hop&#39; match statement. `arg&#39; is</span>
<a name="l00368"></a>00368 <span class="comment">   access-list name. */</span>
<a name="l00369"></a>00369 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l00370"></a><a class="code" href="bgp__routemap_8c.html#a14f8816ef71301455d7d32f60bc7f0a1">00370</a> <a class="code" href="bgp__routemap_8c.html#a14f8816ef71301455d7d32f60bc7f0a1">route_match_ip_next_hop_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l00371"></a>00371 {
<a name="l00372"></a>00372   <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, arg);
<a name="l00373"></a>00373 }
<a name="l00374"></a>00374 
<a name="l00375"></a>00375 <span class="comment">/* Free route map&#39;s compiled `ip address&#39; value. */</span>
<a name="l00376"></a>00376 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00377"></a><a class="code" href="bgp__routemap_8c.html#a67cc6d2f3a81cda76f6498141daca4eb">00377</a> <a class="code" href="bgp__routemap_8c.html#a67cc6d2f3a81cda76f6498141daca4eb">route_match_ip_next_hop_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l00378"></a>00378 {
<a name="l00379"></a>00379   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l00380"></a>00380 }
<a name="l00381"></a>00381 
<a name="l00382"></a>00382 <span class="comment">/* Route map commands for ip next-hop matching. */</span>
<a name="l00383"></a><a class="code" href="bgp__routemap_8c.html#a8619edb19ac3fd44c2ed4ebc03f086f3">00383</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#a8619edb19ac3fd44c2ed4ebc03f086f3">route_match_ip_next_hop_cmd</a> =
<a name="l00384"></a>00384 {
<a name="l00385"></a>00385   <span class="stringliteral">&quot;ip next-hop&quot;</span>,
<a name="l00386"></a>00386   <a class="code" href="bgp__routemap_8c.html#a6223df9ef6187464ca21e5631441ee22">route_match_ip_next_hop</a>,
<a name="l00387"></a>00387   <a class="code" href="bgp__routemap_8c.html#a14f8816ef71301455d7d32f60bc7f0a1">route_match_ip_next_hop_compile</a>,
<a name="l00388"></a>00388   <a class="code" href="bgp__routemap_8c.html#a67cc6d2f3a81cda76f6498141daca4eb">route_match_ip_next_hop_free</a>
<a name="l00389"></a>00389 };
<a name="l00390"></a>00390 
<a name="l00391"></a>00391 <span class="comment">/* `match ip route-source ACCESS-LIST&#39; */</span>
<a name="l00392"></a>00392 
<a name="l00393"></a>00393 <span class="comment">/* Match function return 1 if match is success else return zero. */</span>
<a name="l00394"></a>00394 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l00395"></a><a class="code" href="bgp__routemap_8c.html#ae739b1e4b4abfc8da91d37aeaea22636">00395</a> <a class="code" href="bgp__routemap_8c.html#ae739b1e4b4abfc8da91d37aeaea22636">route_match_ip_route_source</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>, 
<a name="l00396"></a>00396                  <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l00397"></a>00397 {
<a name="l00398"></a>00398   <span class="keyword">struct </span><a class="code" href="structaccess__list.html">access_list</a> *alist;
<a name="l00399"></a>00399   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *<a class="code" href="structbgp__info.html">bgp_info</a>;
<a name="l00400"></a>00400   <span class="keyword">struct </span><a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>;
<a name="l00401"></a>00401   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> p;
<a name="l00402"></a>00402 
<a name="l00403"></a>00403   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l00404"></a>00404     {
<a name="l00405"></a>00405       bgp_info = object;
<a name="l00406"></a>00406       peer = bgp_info-&gt;<a class="code" href="structbgp__info.html#a367917f671400c20f33e512fa2c435dc">peer</a>;
<a name="l00407"></a>00407 
<a name="l00408"></a>00408       <span class="keywordflow">if</span> (! peer || <a class="code" href="sockunion_8h.html#ac361ce9c3dca3e5b0e903c2c4fcc300c">sockunion_family</a> (&amp;peer-&gt;<a class="code" href="structpeer.html#ab793b0acdca7d325f32edc25503b83b9">su</a>) != AF_INET)
<a name="l00409"></a>00409     <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00410"></a>00410 
<a name="l00411"></a>00411       p.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
<a name="l00412"></a>00412       p.prefix = peer-&gt;<a class="code" href="structpeer.html#ab793b0acdca7d325f32edc25503b83b9">su</a>.<a class="code" href="unionsockunion.html#a50fab1a37b798a49a085f78351680ab7">sin</a>.sin_addr;
<a name="l00413"></a>00413       p.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;
<a name="l00414"></a>00414 
<a name="l00415"></a>00415       alist = <a class="code" href="filter_8c.html#a8cb65cd01015f6673c632cb5b8714b3e">access_list_lookup</a> (<a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>, (<span class="keywordtype">char</span> *) rule);
<a name="l00416"></a>00416       <span class="keywordflow">if</span> (alist == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00417"></a>00417     <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00418"></a>00418 
<a name="l00419"></a>00419       <span class="keywordflow">return</span> (<a class="code" href="filter_8c.html#a5565f487c65e2bf0308c7fd529f121a0">access_list_apply</a> (alist, &amp;p) == <a class="code" href="filter_8h.html#ab3b7281956317556f846daaebf75de72a898abadf6cc2f9d27780782f09d3a3e3">FILTER_DENY</a> ?
<a name="l00420"></a>00420               <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a> : <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>);
<a name="l00421"></a>00421     }
<a name="l00422"></a>00422   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00423"></a>00423 }
<a name="l00424"></a>00424 
<a name="l00425"></a>00425 <span class="comment">/* Route map `ip route-source&#39; match statement. `arg&#39; is</span>
<a name="l00426"></a>00426 <span class="comment">   access-list name. */</span>
<a name="l00427"></a>00427 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l00428"></a><a class="code" href="bgp__routemap_8c.html#a1b1f30fe93f0fd1e728a74966c445b91">00428</a> <a class="code" href="bgp__routemap_8c.html#a1b1f30fe93f0fd1e728a74966c445b91">route_match_ip_route_source_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l00429"></a>00429 {
<a name="l00430"></a>00430   <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, arg);
<a name="l00431"></a>00431 }
<a name="l00432"></a>00432 
<a name="l00433"></a>00433 <span class="comment">/* Free route map&#39;s compiled `ip address&#39; value. */</span>
<a name="l00434"></a>00434 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00435"></a><a class="code" href="bgp__routemap_8c.html#aba5bfe3063f705dbbdea5f8bc43033a8">00435</a> <a class="code" href="bgp__routemap_8c.html#aba5bfe3063f705dbbdea5f8bc43033a8">route_match_ip_route_source_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l00436"></a>00436 {
<a name="l00437"></a>00437   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l00438"></a>00438 }
<a name="l00439"></a>00439 
<a name="l00440"></a>00440 <span class="comment">/* Route map commands for ip route-source matching. */</span>
<a name="l00441"></a><a class="code" href="bgp__routemap_8c.html#aa505a5516c73d1d7daef578f15c8674c">00441</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#aa505a5516c73d1d7daef578f15c8674c">route_match_ip_route_source_cmd</a> =
<a name="l00442"></a>00442 {
<a name="l00443"></a>00443   <span class="stringliteral">&quot;ip route-source&quot;</span>,
<a name="l00444"></a>00444   <a class="code" href="bgp__routemap_8c.html#ae739b1e4b4abfc8da91d37aeaea22636">route_match_ip_route_source</a>,
<a name="l00445"></a>00445   <a class="code" href="bgp__routemap_8c.html#a1b1f30fe93f0fd1e728a74966c445b91">route_match_ip_route_source_compile</a>,
<a name="l00446"></a>00446   <a class="code" href="bgp__routemap_8c.html#aba5bfe3063f705dbbdea5f8bc43033a8">route_match_ip_route_source_free</a>
<a name="l00447"></a>00447 };
<a name="l00448"></a>00448 
<a name="l00449"></a>00449 <span class="comment">/* `match ip address prefix-list PREFIX_LIST&#39; */</span>
<a name="l00450"></a>00450 
<a name="l00451"></a>00451 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l00452"></a><a class="code" href="bgp__routemap_8c.html#a058294016ee46cffc91fa4c78391f568">00452</a> <a class="code" href="bgp__routemap_8c.html#a058294016ee46cffc91fa4c78391f568">route_match_ip_address_prefix_list</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>, 
<a name="l00453"></a>00453                     <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l00454"></a>00454 {
<a name="l00455"></a>00455   <span class="keyword">struct </span><a class="code" href="structprefix__list.html">prefix_list</a> *plist;
<a name="l00456"></a>00456 
<a name="l00457"></a>00457   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l00458"></a>00458     {
<a name="l00459"></a>00459       plist = <a class="code" href="plist_8c.html#adfce5b38dccccdc141ffd3571b73a656">prefix_list_lookup</a> (<a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>, (<span class="keywordtype">char</span> *) rule);
<a name="l00460"></a>00460       <span class="keywordflow">if</span> (plist == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00461"></a>00461     <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00462"></a>00462     
<a name="l00463"></a>00463       <span class="keywordflow">return</span> (<a class="code" href="plist_8c.html#a6fd9bac08d2cb3d2e315d88af146a7f0">prefix_list_apply</a> (plist, prefix) == <a class="code" href="plist_8h.html#a3bda5ec3d1202bc8eb472b4d97633cf9a697cf8d0db0ead308a6ef01301f9543c">PREFIX_DENY</a> ?
<a name="l00464"></a>00464           <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a> : <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>);
<a name="l00465"></a>00465     }
<a name="l00466"></a>00466   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00467"></a>00467 }
<a name="l00468"></a>00468 
<a name="l00469"></a>00469 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l00470"></a><a class="code" href="bgp__routemap_8c.html#a8926c41485695d842675f84b834a9242">00470</a> <a class="code" href="bgp__routemap_8c.html#a8926c41485695d842675f84b834a9242">route_match_ip_address_prefix_list_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l00471"></a>00471 {
<a name="l00472"></a>00472   <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, arg);
<a name="l00473"></a>00473 }
<a name="l00474"></a>00474 
<a name="l00475"></a>00475 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00476"></a><a class="code" href="bgp__routemap_8c.html#a327f0894285ba35b135f6bf8ee42e3a0">00476</a> <a class="code" href="bgp__routemap_8c.html#a327f0894285ba35b135f6bf8ee42e3a0">route_match_ip_address_prefix_list_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l00477"></a>00477 {
<a name="l00478"></a>00478   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l00479"></a>00479 }
<a name="l00480"></a>00480 
<a name="l00481"></a><a class="code" href="bgp__routemap_8c.html#a87e4289828c25006001339780c3b810b">00481</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#a87e4289828c25006001339780c3b810b">route_match_ip_address_prefix_list_cmd</a> =
<a name="l00482"></a>00482 {
<a name="l00483"></a>00483   <span class="stringliteral">&quot;ip address prefix-list&quot;</span>,
<a name="l00484"></a>00484   <a class="code" href="bgp__routemap_8c.html#a058294016ee46cffc91fa4c78391f568">route_match_ip_address_prefix_list</a>,
<a name="l00485"></a>00485   <a class="code" href="bgp__routemap_8c.html#a8926c41485695d842675f84b834a9242">route_match_ip_address_prefix_list_compile</a>,
<a name="l00486"></a>00486   <a class="code" href="bgp__routemap_8c.html#a327f0894285ba35b135f6bf8ee42e3a0">route_match_ip_address_prefix_list_free</a>
<a name="l00487"></a>00487 };
<a name="l00488"></a>00488 
<a name="l00489"></a>00489 <span class="comment">/* `match ip next-hop prefix-list PREFIX_LIST&#39; */</span>
<a name="l00490"></a>00490 
<a name="l00491"></a>00491 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l00492"></a><a class="code" href="bgp__routemap_8c.html#a0f39691b144b762b915622e0231b5c89">00492</a> <a class="code" href="bgp__routemap_8c.html#a0f39691b144b762b915622e0231b5c89">route_match_ip_next_hop_prefix_list</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>,
<a name="l00493"></a>00493                                     <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l00494"></a>00494 {
<a name="l00495"></a>00495   <span class="keyword">struct </span><a class="code" href="structprefix__list.html">prefix_list</a> *plist;
<a name="l00496"></a>00496   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *<a class="code" href="structbgp__info.html">bgp_info</a>;
<a name="l00497"></a>00497   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> p;
<a name="l00498"></a>00498 
<a name="l00499"></a>00499   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l00500"></a>00500     {
<a name="l00501"></a>00501       bgp_info = object;
<a name="l00502"></a>00502       p.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
<a name="l00503"></a>00503       p.prefix = bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#ab23f9ed5b7c55ea658ab6dc729bc9e63">nexthop</a>;
<a name="l00504"></a>00504       p.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;
<a name="l00505"></a>00505 
<a name="l00506"></a>00506       plist = <a class="code" href="plist_8c.html#adfce5b38dccccdc141ffd3571b73a656">prefix_list_lookup</a> (<a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>, (<span class="keywordtype">char</span> *) rule);
<a name="l00507"></a>00507       <span class="keywordflow">if</span> (plist == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00508"></a>00508         <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00509"></a>00509 
<a name="l00510"></a>00510       <span class="keywordflow">return</span> (<a class="code" href="plist_8c.html#a6fd9bac08d2cb3d2e315d88af146a7f0">prefix_list_apply</a> (plist, &amp;p) == <a class="code" href="plist_8h.html#a3bda5ec3d1202bc8eb472b4d97633cf9a697cf8d0db0ead308a6ef01301f9543c">PREFIX_DENY</a> ?
<a name="l00511"></a>00511               <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a> : <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>);
<a name="l00512"></a>00512     }
<a name="l00513"></a>00513   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00514"></a>00514 }
<a name="l00515"></a>00515 
<a name="l00516"></a>00516 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l00517"></a><a class="code" href="bgp__routemap_8c.html#ad7eefdbb6b55a3fadb06a2879d42e6d7">00517</a> <a class="code" href="bgp__routemap_8c.html#ad7eefdbb6b55a3fadb06a2879d42e6d7">route_match_ip_next_hop_prefix_list_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l00518"></a>00518 {
<a name="l00519"></a>00519   <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, arg);
<a name="l00520"></a>00520 }
<a name="l00521"></a>00521 
<a name="l00522"></a>00522 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00523"></a><a class="code" href="bgp__routemap_8c.html#a73fa2fda9f18c79e7e649e46cc04091a">00523</a> <a class="code" href="bgp__routemap_8c.html#a73fa2fda9f18c79e7e649e46cc04091a">route_match_ip_next_hop_prefix_list_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l00524"></a>00524 {
<a name="l00525"></a>00525   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l00526"></a>00526 }
<a name="l00527"></a>00527 
<a name="l00528"></a><a class="code" href="bgp__routemap_8c.html#a06056721d860a9d94bed1441a308907d">00528</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#a06056721d860a9d94bed1441a308907d">route_match_ip_next_hop_prefix_list_cmd</a> =
<a name="l00529"></a>00529 {
<a name="l00530"></a>00530   <span class="stringliteral">&quot;ip next-hop prefix-list&quot;</span>,
<a name="l00531"></a>00531   <a class="code" href="bgp__routemap_8c.html#a0f39691b144b762b915622e0231b5c89">route_match_ip_next_hop_prefix_list</a>,
<a name="l00532"></a>00532   <a class="code" href="bgp__routemap_8c.html#ad7eefdbb6b55a3fadb06a2879d42e6d7">route_match_ip_next_hop_prefix_list_compile</a>,
<a name="l00533"></a>00533   <a class="code" href="bgp__routemap_8c.html#a73fa2fda9f18c79e7e649e46cc04091a">route_match_ip_next_hop_prefix_list_free</a>
<a name="l00534"></a>00534 };
<a name="l00535"></a>00535 
<a name="l00536"></a>00536 <span class="comment">/* `match ip route-source prefix-list PREFIX_LIST&#39; */</span>
<a name="l00537"></a>00537 
<a name="l00538"></a>00538 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l00539"></a><a class="code" href="bgp__routemap_8c.html#ac61bb0fde51d08aeb6cfee3c67b6980e">00539</a> <a class="code" href="bgp__routemap_8c.html#ac61bb0fde51d08aeb6cfee3c67b6980e">route_match_ip_route_source_prefix_list</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>,
<a name="l00540"></a>00540                      <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l00541"></a>00541 {
<a name="l00542"></a>00542   <span class="keyword">struct </span><a class="code" href="structprefix__list.html">prefix_list</a> *plist;
<a name="l00543"></a>00543   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *<a class="code" href="structbgp__info.html">bgp_info</a>;
<a name="l00544"></a>00544   <span class="keyword">struct </span><a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>;
<a name="l00545"></a>00545   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> p;
<a name="l00546"></a>00546 
<a name="l00547"></a>00547   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l00548"></a>00548     {
<a name="l00549"></a>00549       bgp_info = object;
<a name="l00550"></a>00550       peer = bgp_info-&gt;<a class="code" href="structbgp__info.html#a367917f671400c20f33e512fa2c435dc">peer</a>;
<a name="l00551"></a>00551 
<a name="l00552"></a>00552       <span class="keywordflow">if</span> (! peer || <a class="code" href="sockunion_8h.html#ac361ce9c3dca3e5b0e903c2c4fcc300c">sockunion_family</a> (&amp;peer-&gt;<a class="code" href="structpeer.html#ab793b0acdca7d325f32edc25503b83b9">su</a>) != AF_INET)
<a name="l00553"></a>00553     <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00554"></a>00554 
<a name="l00555"></a>00555       p.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
<a name="l00556"></a>00556       p.prefix = peer-&gt;<a class="code" href="structpeer.html#ab793b0acdca7d325f32edc25503b83b9">su</a>.<a class="code" href="unionsockunion.html#a50fab1a37b798a49a085f78351680ab7">sin</a>.sin_addr;
<a name="l00557"></a>00557       p.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;
<a name="l00558"></a>00558 
<a name="l00559"></a>00559       plist = <a class="code" href="plist_8c.html#adfce5b38dccccdc141ffd3571b73a656">prefix_list_lookup</a> (<a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>, (<span class="keywordtype">char</span> *) rule);
<a name="l00560"></a>00560       <span class="keywordflow">if</span> (plist == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00561"></a>00561         <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00562"></a>00562 
<a name="l00563"></a>00563       <span class="keywordflow">return</span> (<a class="code" href="plist_8c.html#a6fd9bac08d2cb3d2e315d88af146a7f0">prefix_list_apply</a> (plist, &amp;p) == <a class="code" href="plist_8h.html#a3bda5ec3d1202bc8eb472b4d97633cf9a697cf8d0db0ead308a6ef01301f9543c">PREFIX_DENY</a> ?
<a name="l00564"></a>00564               <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a> : <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>);
<a name="l00565"></a>00565     }
<a name="l00566"></a>00566   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00567"></a>00567 }
<a name="l00568"></a>00568 
<a name="l00569"></a>00569 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l00570"></a><a class="code" href="bgp__routemap_8c.html#adc5b221c1337044c3ce4755fcdc9b7c8">00570</a> <a class="code" href="bgp__routemap_8c.html#adc5b221c1337044c3ce4755fcdc9b7c8">route_match_ip_route_source_prefix_list_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l00571"></a>00571 {
<a name="l00572"></a>00572   <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, arg);
<a name="l00573"></a>00573 }
<a name="l00574"></a>00574 
<a name="l00575"></a>00575 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00576"></a><a class="code" href="bgp__routemap_8c.html#a8320f9d5b6a430495b70a0de42cdb4fb">00576</a> <a class="code" href="bgp__routemap_8c.html#a8320f9d5b6a430495b70a0de42cdb4fb">route_match_ip_route_source_prefix_list_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l00577"></a>00577 {
<a name="l00578"></a>00578   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l00579"></a>00579 }
<a name="l00580"></a>00580 
<a name="l00581"></a><a class="code" href="bgp__routemap_8c.html#ad526376641c0fa92bf478819a8aedb66">00581</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#ad526376641c0fa92bf478819a8aedb66">route_match_ip_route_source_prefix_list_cmd</a> =
<a name="l00582"></a>00582 {
<a name="l00583"></a>00583   <span class="stringliteral">&quot;ip route-source prefix-list&quot;</span>,
<a name="l00584"></a>00584   <a class="code" href="bgp__routemap_8c.html#ac61bb0fde51d08aeb6cfee3c67b6980e">route_match_ip_route_source_prefix_list</a>,
<a name="l00585"></a>00585   <a class="code" href="bgp__routemap_8c.html#adc5b221c1337044c3ce4755fcdc9b7c8">route_match_ip_route_source_prefix_list_compile</a>,
<a name="l00586"></a>00586   <a class="code" href="bgp__routemap_8c.html#a8320f9d5b6a430495b70a0de42cdb4fb">route_match_ip_route_source_prefix_list_free</a>
<a name="l00587"></a>00587 };
<a name="l00588"></a>00588 
<a name="l00589"></a>00589 <span class="comment">/* `match metric METRIC&#39; */</span>
<a name="l00590"></a>00590 
<a name="l00591"></a>00591 <span class="comment">/* Match function return 1 if match is success else return zero. */</span>
<a name="l00592"></a>00592 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l00593"></a><a class="code" href="bgp__routemap_8c.html#a98742877a7792f123b2e6959919301ea">00593</a> <a class="code" href="bgp__routemap_8c.html#a98742877a7792f123b2e6959919301ea">route_match_metric</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>, 
<a name="l00594"></a>00594             <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l00595"></a>00595 {
<a name="l00596"></a>00596   u_int32_t *med;
<a name="l00597"></a>00597   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *<a class="code" href="structbgp__info.html">bgp_info</a>;
<a name="l00598"></a>00598 
<a name="l00599"></a>00599   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l00600"></a>00600     {
<a name="l00601"></a>00601       med = rule;
<a name="l00602"></a>00602       bgp_info = object;
<a name="l00603"></a>00603     
<a name="l00604"></a>00604       <span class="keywordflow">if</span> (bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a2dc4bc77a20816cd457a2040b05e316f">med</a> == *med)
<a name="l00605"></a>00605     <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>;
<a name="l00606"></a>00606       <span class="keywordflow">else</span>
<a name="l00607"></a>00607     <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00608"></a>00608     }
<a name="l00609"></a>00609   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00610"></a>00610 }
<a name="l00611"></a>00611 
<a name="l00612"></a>00612 <span class="comment">/* Route map `match metric&#39; match statement. `arg&#39; is MED value */</span>
<a name="l00613"></a>00613 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l00614"></a><a class="code" href="bgp__routemap_8c.html#ab9f0866254e21284adef4f100e75b0ed">00614</a> <a class="code" href="bgp__routemap_8c.html#ab9f0866254e21284adef4f100e75b0ed">route_match_metric_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l00615"></a>00615 {
<a name="l00616"></a>00616   u_int32_t *med;
<a name="l00617"></a>00617   <span class="keywordtype">char</span> *endptr = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00618"></a>00618   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> tmpval;
<a name="l00619"></a>00619 
<a name="l00620"></a>00620   tmpval = strtoul (arg, &amp;endptr, 10);
<a name="l00621"></a>00621   <span class="keywordflow">if</span> (*endptr != <span class="charliteral">&#39;\0&#39;</span> || tmpval == ULONG_MAX || tmpval &gt; <a class="code" href="zebra_8h.html#ab5eb23180f7cc12b7d6c04a8ec067fdd">UINT32_MAX</a>)
<a name="l00622"></a>00622     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00623"></a>00623     
<a name="l00624"></a>00624   med = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, <span class="keyword">sizeof</span> (u_int32_t));
<a name="l00625"></a>00625   
<a name="l00626"></a>00626   <span class="keywordflow">if</span> (!med)
<a name="l00627"></a>00627     <span class="keywordflow">return</span> med;
<a name="l00628"></a>00628   
<a name="l00629"></a>00629   *med = tmpval;
<a name="l00630"></a>00630   <span class="keywordflow">return</span> med;
<a name="l00631"></a>00631 }
<a name="l00632"></a>00632 
<a name="l00633"></a>00633 <span class="comment">/* Free route map&#39;s compiled `match metric&#39; value. */</span>
<a name="l00634"></a>00634 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00635"></a><a class="code" href="bgp__routemap_8c.html#abfae80db388a50a31959bdc32fa00742">00635</a> <a class="code" href="bgp__routemap_8c.html#abfae80db388a50a31959bdc32fa00742">route_match_metric_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l00636"></a>00636 {
<a name="l00637"></a>00637   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l00638"></a>00638 }
<a name="l00639"></a>00639 
<a name="l00640"></a>00640 <span class="comment">/* Route map commands for metric matching. */</span>
<a name="l00641"></a><a class="code" href="bgp__routemap_8c.html#adbf97408a650061778df100fe9e28925">00641</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#adbf97408a650061778df100fe9e28925">route_match_metric_cmd</a> =
<a name="l00642"></a>00642 {
<a name="l00643"></a>00643   <span class="stringliteral">&quot;metric&quot;</span>,
<a name="l00644"></a>00644   <a class="code" href="bgp__routemap_8c.html#a98742877a7792f123b2e6959919301ea">route_match_metric</a>,
<a name="l00645"></a>00645   <a class="code" href="bgp__routemap_8c.html#ab9f0866254e21284adef4f100e75b0ed">route_match_metric_compile</a>,
<a name="l00646"></a>00646   <a class="code" href="bgp__routemap_8c.html#abfae80db388a50a31959bdc32fa00742">route_match_metric_free</a>
<a name="l00647"></a>00647 };
<a name="l00648"></a>00648 
<a name="l00649"></a>00649 <span class="comment">/* `match as-path ASPATH&#39; */</span>
<a name="l00650"></a>00650 
<a name="l00651"></a>00651 <span class="comment">/* Match function for as-path match.  I assume given object is */</span>
<a name="l00652"></a>00652 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l00653"></a><a class="code" href="bgp__routemap_8c.html#aa1b41a5b21913d82bfcaa3b27b53d50e">00653</a> <a class="code" href="bgp__routemap_8c.html#aa1b41a5b21913d82bfcaa3b27b53d50e">route_match_aspath</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>, 
<a name="l00654"></a>00654             <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l00655"></a>00655 {
<a name="l00656"></a>00656   
<a name="l00657"></a>00657   <span class="keyword">struct </span><a class="code" href="structas__list.html">as_list</a> *<a class="code" href="structas__list.html">as_list</a>;
<a name="l00658"></a>00658   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *<a class="code" href="structbgp__info.html">bgp_info</a>;
<a name="l00659"></a>00659 
<a name="l00660"></a>00660   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l00661"></a>00661     {
<a name="l00662"></a>00662       as_list = <a class="code" href="bgp__filter_8c.html#ac58e5d18060e65504b9355e9b40bc82d">as_list_lookup</a> ((<span class="keywordtype">char</span> *) rule);
<a name="l00663"></a>00663       <span class="keywordflow">if</span> (as_list == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00664"></a>00664     <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00665"></a>00665     
<a name="l00666"></a>00666       bgp_info = object;
<a name="l00667"></a>00667     
<a name="l00668"></a>00668       <span class="comment">/* Perform match. */</span>
<a name="l00669"></a>00669       <span class="keywordflow">return</span> ((<a class="code" href="bgp__filter_8c.html#a3c54cce31fdf945adf395324469658c5">as_list_apply</a> (as_list, bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a89311608450bb3b97bccc835e9b004f0">aspath</a>) == <a class="code" href="bgp__filter_8h.html#a2e45819ce90a8f1b29bad627c87bef8ba5d37f9a4db61d8f7ef503e8582aba781">AS_FILTER_DENY</a>) ? <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a> : <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>);
<a name="l00670"></a>00670     }
<a name="l00671"></a>00671   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00672"></a>00672 }
<a name="l00673"></a>00673 
<a name="l00674"></a>00674 <span class="comment">/* Compile function for as-path match. */</span>
<a name="l00675"></a>00675 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l00676"></a><a class="code" href="bgp__routemap_8c.html#af0b55fdcea903cd537a2f9f0ceef04aa">00676</a> <a class="code" href="bgp__routemap_8c.html#af0b55fdcea903cd537a2f9f0ceef04aa">route_match_aspath_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l00677"></a>00677 {
<a name="l00678"></a>00678   <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, arg);
<a name="l00679"></a>00679 }
<a name="l00680"></a>00680 
<a name="l00681"></a>00681 <span class="comment">/* Compile function for as-path match. */</span>
<a name="l00682"></a>00682 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00683"></a><a class="code" href="bgp__routemap_8c.html#ababec2856e6244c6319ed79ce5040a00">00683</a> <a class="code" href="bgp__routemap_8c.html#ababec2856e6244c6319ed79ce5040a00">route_match_aspath_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l00684"></a>00684 {
<a name="l00685"></a>00685   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l00686"></a>00686 }
<a name="l00687"></a>00687 
<a name="l00688"></a>00688 <span class="comment">/* Route map commands for aspath matching. */</span>
<a name="l00689"></a><a class="code" href="bgp__routemap_8c.html#ae6d290370bf64b7ef03b056b0e828462">00689</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#ae6d290370bf64b7ef03b056b0e828462">route_match_aspath_cmd</a> = 
<a name="l00690"></a>00690 {
<a name="l00691"></a>00691   <span class="stringliteral">&quot;as-path&quot;</span>,
<a name="l00692"></a>00692   <a class="code" href="bgp__routemap_8c.html#aa1b41a5b21913d82bfcaa3b27b53d50e">route_match_aspath</a>,
<a name="l00693"></a>00693   <a class="code" href="bgp__routemap_8c.html#af0b55fdcea903cd537a2f9f0ceef04aa">route_match_aspath_compile</a>,
<a name="l00694"></a>00694   <a class="code" href="bgp__routemap_8c.html#ababec2856e6244c6319ed79ce5040a00">route_match_aspath_free</a>
<a name="l00695"></a>00695 };
<a name="l00696"></a>00696 
<a name="l00697"></a>00697 <span class="comment">/* `match community COMMUNIY&#39; */</span>
<a name="l00698"></a><a class="code" href="structrmap__community.html">00698</a> <span class="keyword">struct </span><a class="code" href="structrmap__community.html">rmap_community</a>
<a name="l00699"></a>00699 {
<a name="l00700"></a><a class="code" href="structrmap__community.html#a7e79b65dbb595d6dddc4433b2a05acd0">00700</a>   <span class="keywordtype">char</span> *<a class="code" href="structrmap__community.html#a7e79b65dbb595d6dddc4433b2a05acd0">name</a>;
<a name="l00701"></a><a class="code" href="structrmap__community.html#a417e8cc1cf4f0789c1f254584d4d5b9e">00701</a>   <span class="keywordtype">int</span> <a class="code" href="structrmap__community.html#a417e8cc1cf4f0789c1f254584d4d5b9e">exact</a>;
<a name="l00702"></a>00702 };
<a name="l00703"></a>00703 
<a name="l00704"></a>00704 <span class="comment">/* Match function for community match. */</span>
<a name="l00705"></a>00705 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l00706"></a><a class="code" href="bgp__routemap_8c.html#a982c2c61f8f49da7c74796d54faf3286">00706</a> <a class="code" href="bgp__routemap_8c.html#a982c2c61f8f49da7c74796d54faf3286">route_match_community</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>, 
<a name="l00707"></a>00707                <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l00708"></a>00708 {
<a name="l00709"></a>00709   <span class="keyword">struct </span><a class="code" href="structcommunity__list.html">community_list</a> *<a class="code" href="structlist.html">list</a>;
<a name="l00710"></a>00710   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *<a class="code" href="structbgp__info.html">bgp_info</a>;
<a name="l00711"></a>00711   <span class="keyword">struct </span><a class="code" href="structrmap__community.html">rmap_community</a> *rcom;
<a name="l00712"></a>00712 
<a name="l00713"></a>00713   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>) 
<a name="l00714"></a>00714     {
<a name="l00715"></a>00715       bgp_info = object;
<a name="l00716"></a>00716       rcom = rule;
<a name="l00717"></a>00717 
<a name="l00718"></a>00718       list = <a class="code" href="bgp__clist_8c.html#a2c0159e743b11dc2143b7f74a65ce156">community_list_lookup</a> (<a class="code" href="bgp__clist_8h.html#a8ce0bedf381f9a751d2544b7b3bdcd4a">bgp_clist</a>, rcom-&gt;<a class="code" href="structrmap__community.html#a7e79b65dbb595d6dddc4433b2a05acd0">name</a>, <a class="code" href="bgp__clist_8h.html#a71bf5583c66d28746342ec73632efe06">COMMUNITY_LIST_MASTER</a>);
<a name="l00719"></a>00719       <span class="keywordflow">if</span> (! list)
<a name="l00720"></a>00720     <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00721"></a>00721 
<a name="l00722"></a>00722       <span class="keywordflow">if</span> (rcom-&gt;<a class="code" href="structrmap__community.html#a417e8cc1cf4f0789c1f254584d4d5b9e">exact</a>)
<a name="l00723"></a>00723     {
<a name="l00724"></a>00724       <span class="keywordflow">if</span> (<a class="code" href="bgp__clist_8c.html#a9c54ba0c7f95697b7a6ce9e0eafa6db3">community_list_exact_match</a> (bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#ac892e1f95a0c26d39a47eb12d021072b">community</a>, list))
<a name="l00725"></a>00725         <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>;
<a name="l00726"></a>00726     }
<a name="l00727"></a>00727       <span class="keywordflow">else</span>
<a name="l00728"></a>00728     {
<a name="l00729"></a>00729       <span class="keywordflow">if</span> (<a class="code" href="bgp__clist_8c.html#a12f4fa6dfed00f5e25a73b79368151fd">community_list_match</a> (bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#ac892e1f95a0c26d39a47eb12d021072b">community</a>, list))
<a name="l00730"></a>00730         <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>;
<a name="l00731"></a>00731     }
<a name="l00732"></a>00732     }
<a name="l00733"></a>00733   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00734"></a>00734 }
<a name="l00735"></a>00735 
<a name="l00736"></a>00736 <span class="comment">/* Compile function for community match. */</span>
<a name="l00737"></a>00737 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l00738"></a><a class="code" href="bgp__routemap_8c.html#a60b577b3bcd52cd36be53913d2d1f456">00738</a> <a class="code" href="bgp__routemap_8c.html#a60b577b3bcd52cd36be53913d2d1f456">route_match_community_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l00739"></a>00739 {
<a name="l00740"></a>00740   <span class="keyword">struct </span><a class="code" href="structrmap__community.html">rmap_community</a> *rcom;
<a name="l00741"></a>00741   <span class="keywordtype">int</span> len;
<a name="l00742"></a>00742   <span class="keywordtype">char</span> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
<a name="l00743"></a>00743 
<a name="l00744"></a>00744   rcom = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structrmap__community.html">rmap_community</a>));
<a name="l00745"></a>00745 
<a name="l00746"></a>00746   p = strchr (arg, <span class="charliteral">&#39; &#39;</span>);
<a name="l00747"></a>00747   <span class="keywordflow">if</span> (p)
<a name="l00748"></a>00748     {
<a name="l00749"></a>00749       len = p - arg;
<a name="l00750"></a>00750       rcom-&gt;<a class="code" href="structrmap__community.html#a7e79b65dbb595d6dddc4433b2a05acd0">name</a> = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, len + 1);
<a name="l00751"></a>00751       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (rcom-&gt;<a class="code" href="structrmap__community.html#a7e79b65dbb595d6dddc4433b2a05acd0">name</a>, arg, len);
<a name="l00752"></a>00752       rcom-&gt;<a class="code" href="structrmap__community.html#a417e8cc1cf4f0789c1f254584d4d5b9e">exact</a> = 1;
<a name="l00753"></a>00753     }
<a name="l00754"></a>00754   <span class="keywordflow">else</span>
<a name="l00755"></a>00755     {
<a name="l00756"></a>00756       rcom-&gt;<a class="code" href="structrmap__community.html#a7e79b65dbb595d6dddc4433b2a05acd0">name</a> = <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, arg);
<a name="l00757"></a>00757       rcom-&gt;<a class="code" href="structrmap__community.html#a417e8cc1cf4f0789c1f254584d4d5b9e">exact</a> = 0;
<a name="l00758"></a>00758     }
<a name="l00759"></a>00759   <span class="keywordflow">return</span> rcom;
<a name="l00760"></a>00760 }
<a name="l00761"></a>00761 
<a name="l00762"></a>00762 <span class="comment">/* Compile function for community match. */</span>
<a name="l00763"></a>00763 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00764"></a><a class="code" href="bgp__routemap_8c.html#a80524f6941fe20e88ceceb914991e115">00764</a> <a class="code" href="bgp__routemap_8c.html#a80524f6941fe20e88ceceb914991e115">route_match_community_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l00765"></a>00765 {
<a name="l00766"></a>00766   <span class="keyword">struct </span><a class="code" href="structrmap__community.html">rmap_community</a> *rcom = rule;
<a name="l00767"></a>00767 
<a name="l00768"></a>00768   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rcom-&gt;<a class="code" href="structrmap__community.html#a7e79b65dbb595d6dddc4433b2a05acd0">name</a>); 
<a name="l00769"></a>00769   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rcom);
<a name="l00770"></a>00770 }
<a name="l00771"></a>00771 
<a name="l00772"></a>00772 <span class="comment">/* Route map commands for community matching. */</span>
<a name="l00773"></a><a class="code" href="bgp__routemap_8c.html#ae3fe570ceef1788fba64aa6556efec92">00773</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#ae3fe570ceef1788fba64aa6556efec92">route_match_community_cmd</a> = 
<a name="l00774"></a>00774 {
<a name="l00775"></a>00775   <span class="stringliteral">&quot;community&quot;</span>,
<a name="l00776"></a>00776   <a class="code" href="bgp__routemap_8c.html#a982c2c61f8f49da7c74796d54faf3286">route_match_community</a>,
<a name="l00777"></a>00777   <a class="code" href="bgp__routemap_8c.html#a60b577b3bcd52cd36be53913d2d1f456">route_match_community_compile</a>,
<a name="l00778"></a>00778   <a class="code" href="bgp__routemap_8c.html#a80524f6941fe20e88ceceb914991e115">route_match_community_free</a>
<a name="l00779"></a>00779 };
<a name="l00780"></a>00780 
<a name="l00781"></a>00781 <span class="comment">/* Match function for extcommunity match. */</span>
<a name="l00782"></a>00782 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l00783"></a><a class="code" href="bgp__routemap_8c.html#a83576d66eee53d02e24eadd6324f501c">00783</a> <a class="code" href="bgp__routemap_8c.html#a83576d66eee53d02e24eadd6324f501c">route_match_ecommunity</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>, 
<a name="l00784"></a>00784             <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l00785"></a>00785 {
<a name="l00786"></a>00786   <span class="keyword">struct </span><a class="code" href="structcommunity__list.html">community_list</a> *<a class="code" href="structlist.html">list</a>;
<a name="l00787"></a>00787   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *<a class="code" href="structbgp__info.html">bgp_info</a>;
<a name="l00788"></a>00788 
<a name="l00789"></a>00789   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>) 
<a name="l00790"></a>00790     {
<a name="l00791"></a>00791       bgp_info = object;
<a name="l00792"></a>00792       
<a name="l00793"></a>00793       <span class="keywordflow">if</span> (!bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>)
<a name="l00794"></a>00794         <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00795"></a>00795       
<a name="l00796"></a>00796       list = <a class="code" href="bgp__clist_8c.html#a2c0159e743b11dc2143b7f74a65ce156">community_list_lookup</a> (<a class="code" href="bgp__clist_8h.html#a8ce0bedf381f9a751d2544b7b3bdcd4a">bgp_clist</a>, (<span class="keywordtype">char</span> *) rule,
<a name="l00797"></a>00797                     <a class="code" href="bgp__clist_8h.html#a61c5d68dcb2d87b3cf5a0ef283a881fc">EXTCOMMUNITY_LIST_MASTER</a>);
<a name="l00798"></a>00798       <span class="keywordflow">if</span> (! list)
<a name="l00799"></a>00799     <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00800"></a>00800 
<a name="l00801"></a>00801       <span class="keywordflow">if</span> (<a class="code" href="bgp__clist_8c.html#a98125eca200d5e9e26b9f87df48e37ed">ecommunity_list_match</a> (bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>-&gt;<a class="code" href="structattr__extra.html#a406b2e10deaef8dadf35a1436d053244">ecommunity</a>, list))
<a name="l00802"></a>00802     <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>;
<a name="l00803"></a>00803     }
<a name="l00804"></a>00804   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00805"></a>00805 }
<a name="l00806"></a>00806 
<a name="l00807"></a>00807 <span class="comment">/* Compile function for extcommunity match. */</span>
<a name="l00808"></a>00808 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l00809"></a><a class="code" href="bgp__routemap_8c.html#a0a283861d060ad08c6afbcdc9d406337">00809</a> <a class="code" href="bgp__routemap_8c.html#a0a283861d060ad08c6afbcdc9d406337">route_match_ecommunity_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l00810"></a>00810 {
<a name="l00811"></a>00811   <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, arg);
<a name="l00812"></a>00812 }
<a name="l00813"></a>00813 
<a name="l00814"></a>00814 <span class="comment">/* Compile function for extcommunity match. */</span>
<a name="l00815"></a>00815 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00816"></a><a class="code" href="bgp__routemap_8c.html#ae3c0985390576d08da3fd8829f73718e">00816</a> <a class="code" href="bgp__routemap_8c.html#ae3c0985390576d08da3fd8829f73718e">route_match_ecommunity_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l00817"></a>00817 {
<a name="l00818"></a>00818   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l00819"></a>00819 }
<a name="l00820"></a>00820 
<a name="l00821"></a>00821 <span class="comment">/* Route map commands for community matching. */</span>
<a name="l00822"></a><a class="code" href="bgp__routemap_8c.html#a249a7cc1855d89eec56ca1e0c2149a35">00822</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#a249a7cc1855d89eec56ca1e0c2149a35">route_match_ecommunity_cmd</a> = 
<a name="l00823"></a>00823 {
<a name="l00824"></a>00824   <span class="stringliteral">&quot;extcommunity&quot;</span>,
<a name="l00825"></a>00825   <a class="code" href="bgp__routemap_8c.html#a83576d66eee53d02e24eadd6324f501c">route_match_ecommunity</a>,
<a name="l00826"></a>00826   <a class="code" href="bgp__routemap_8c.html#a0a283861d060ad08c6afbcdc9d406337">route_match_ecommunity_compile</a>,
<a name="l00827"></a>00827   <a class="code" href="bgp__routemap_8c.html#ae3c0985390576d08da3fd8829f73718e">route_match_ecommunity_free</a>
<a name="l00828"></a>00828 };
<a name="l00829"></a>00829 
<a name="l00830"></a>00830 <span class="comment">/* `match nlri` and `set nlri` are replaced by `address-family ipv4`</span>
<a name="l00831"></a>00831 <span class="comment">   and `address-family vpnv4&#39;.  */</span>
<a name="l00832"></a>00832 
<a name="l00833"></a>00833 <span class="comment">/* `match origin&#39; */</span>
<a name="l00834"></a>00834 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l00835"></a><a class="code" href="bgp__routemap_8c.html#a227561f86aaa04713e5156142c99e467">00835</a> <a class="code" href="bgp__routemap_8c.html#a227561f86aaa04713e5156142c99e467">route_match_origin</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>, 
<a name="l00836"></a>00836             <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l00837"></a>00837 {
<a name="l00838"></a>00838   u_char *origin;
<a name="l00839"></a>00839   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *<a class="code" href="structbgp__info.html">bgp_info</a>;
<a name="l00840"></a>00840 
<a name="l00841"></a>00841   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l00842"></a>00842     {
<a name="l00843"></a>00843       origin = rule;
<a name="l00844"></a>00844       bgp_info = object;
<a name="l00845"></a>00845     
<a name="l00846"></a>00846       <span class="keywordflow">if</span> (bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a17e152c15e3bd7a54475086d762e76ec">origin</a> == *origin)
<a name="l00847"></a>00847     <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>;
<a name="l00848"></a>00848     }
<a name="l00849"></a>00849 
<a name="l00850"></a>00850   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l00851"></a>00851 }
<a name="l00852"></a>00852 
<a name="l00853"></a>00853 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l00854"></a><a class="code" href="bgp__routemap_8c.html#a66db9ed90a072b2873be12a0b26818f7">00854</a> <a class="code" href="bgp__routemap_8c.html#a66db9ed90a072b2873be12a0b26818f7">route_match_origin_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l00855"></a>00855 {
<a name="l00856"></a>00856   u_char *origin;
<a name="l00857"></a>00857 
<a name="l00858"></a>00858   origin = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, <span class="keyword">sizeof</span> (u_char));
<a name="l00859"></a>00859 
<a name="l00860"></a>00860   <span class="keywordflow">if</span> (strcmp (arg, <span class="stringliteral">&quot;igp&quot;</span>) == 0)
<a name="l00861"></a>00861     *origin = 0;
<a name="l00862"></a>00862   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (strcmp (arg, <span class="stringliteral">&quot;egp&quot;</span>) == 0)
<a name="l00863"></a>00863     *origin = 1;
<a name="l00864"></a>00864   <span class="keywordflow">else</span>
<a name="l00865"></a>00865     *origin = 2;
<a name="l00866"></a>00866 
<a name="l00867"></a>00867   <span class="keywordflow">return</span> origin;
<a name="l00868"></a>00868 }
<a name="l00869"></a>00869 
<a name="l00870"></a>00870 <span class="comment">/* Free route map&#39;s compiled `ip address&#39; value. */</span>
<a name="l00871"></a>00871 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00872"></a><a class="code" href="bgp__routemap_8c.html#a7e545bf14da11794f8e414f6b13215c2">00872</a> <a class="code" href="bgp__routemap_8c.html#a7e545bf14da11794f8e414f6b13215c2">route_match_origin_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l00873"></a>00873 {
<a name="l00874"></a>00874   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l00875"></a>00875 }
<a name="l00876"></a>00876 
<a name="l00877"></a>00877 <span class="comment">/* Route map commands for origin matching. */</span>
<a name="l00878"></a><a class="code" href="bgp__routemap_8c.html#aeccf7fcb7007ed25394d0194c142dd72">00878</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#aeccf7fcb7007ed25394d0194c142dd72">route_match_origin_cmd</a> =
<a name="l00879"></a>00879 {
<a name="l00880"></a>00880   <span class="stringliteral">&quot;origin&quot;</span>,
<a name="l00881"></a>00881   <a class="code" href="bgp__routemap_8c.html#a227561f86aaa04713e5156142c99e467">route_match_origin</a>,
<a name="l00882"></a>00882   <a class="code" href="bgp__routemap_8c.html#a66db9ed90a072b2873be12a0b26818f7">route_match_origin_compile</a>,
<a name="l00883"></a>00883   <a class="code" href="bgp__routemap_8c.html#a7e545bf14da11794f8e414f6b13215c2">route_match_origin_free</a>
<a name="l00884"></a>00884 };
<a name="l00885"></a>00885 <span class="comment">/* `set ip next-hop IP_ADDRESS&#39; */</span>
<a name="l00886"></a>00886 
<a name="l00887"></a>00887 <span class="comment">/* Set nexthop to object.  ojbect must be pointer to struct attr. */</span>
<a name="l00888"></a><a class="code" href="structrmap__ip__nexthop__set.html">00888</a> <span class="keyword">struct </span><a class="code" href="structrmap__ip__nexthop__set.html">rmap_ip_nexthop_set</a>
<a name="l00889"></a>00889 {
<a name="l00890"></a><a class="code" href="structrmap__ip__nexthop__set.html#acfbeba1598eab4e59a948049d74fe882">00890</a>   <span class="keyword">struct </span>in_addr *<a class="code" href="structrmap__ip__nexthop__set.html#acfbeba1598eab4e59a948049d74fe882">address</a>;
<a name="l00891"></a><a class="code" href="structrmap__ip__nexthop__set.html#a7e2f4ea385443c5ac593af1b494ba04e">00891</a>   <span class="keywordtype">int</span> <a class="code" href="structrmap__ip__nexthop__set.html#a7e2f4ea385443c5ac593af1b494ba04e">peer_address</a>;
<a name="l00892"></a>00892 };
<a name="l00893"></a>00893 
<a name="l00894"></a>00894 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l00895"></a><a class="code" href="bgp__routemap_8c.html#a4a9ba22a2d79223cdcd261fc509195b7">00895</a> <a class="code" href="bgp__routemap_8c.html#a4a9ba22a2d79223cdcd261fc509195b7">route_set_ip_nexthop</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>,
<a name="l00896"></a>00896               <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l00897"></a>00897 {
<a name="l00898"></a>00898   <span class="keyword">struct </span><a class="code" href="structrmap__ip__nexthop__set.html">rmap_ip_nexthop_set</a> *rins = rule;
<a name="l00899"></a>00899   <span class="keyword">struct </span>in_addr peer_address;
<a name="l00900"></a>00900   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *<a class="code" href="structbgp__info.html">bgp_info</a>;
<a name="l00901"></a>00901   <span class="keyword">struct </span><a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>;
<a name="l00902"></a>00902 
<a name="l00903"></a>00903   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l00904"></a>00904     {
<a name="l00905"></a>00905       bgp_info = object;
<a name="l00906"></a>00906       peer = bgp_info-&gt;<a class="code" href="structbgp__info.html#a367917f671400c20f33e512fa2c435dc">peer</a>;
<a name="l00907"></a>00907 
<a name="l00908"></a>00908       <span class="keywordflow">if</span> (rins-&gt;<a class="code" href="structrmap__ip__nexthop__set.html#a7e2f4ea385443c5ac593af1b494ba04e">peer_address</a>)
<a name="l00909"></a>00909     {
<a name="l00910"></a>00910          <span class="keywordflow">if</span> ((<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#afad0d7ca0b1d0d8bdea5bb8eaba1ef65">rmap_type</a>, <a class="code" href="bgpd_8h.html#ac0c69451f1b38928f7e90bbf7ea7f2df">PEER_RMAP_TYPE_IN</a>) ||
<a name="l00911"></a>00911            <a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#afad0d7ca0b1d0d8bdea5bb8eaba1ef65">rmap_type</a>, <a class="code" href="bgpd_8h.html#a02dc8b409a25e5e440fd4f9b580fcdf7">PEER_RMAP_TYPE_IMPORT</a>))
<a name="l00912"></a>00912           &amp;&amp; peer-&gt;<a class="code" href="structpeer.html#a9ab7f1f3e48a3027c0f8a92fa6e2de28">su_remote</a> 
<a name="l00913"></a>00913           &amp;&amp; <a class="code" href="sockunion_8h.html#ac361ce9c3dca3e5b0e903c2c4fcc300c">sockunion_family</a> (peer-&gt;<a class="code" href="structpeer.html#a9ab7f1f3e48a3027c0f8a92fa6e2de28">su_remote</a>) == AF_INET)
<a name="l00914"></a>00914         {
<a name="l00915"></a>00915               <a class="code" href="sockunion_8c.html#a4203367afaacee3fa5cc1626b2ef63c0">inet_aton</a> (<a class="code" href="sockunion_8c.html#a81204a150d1d4f669bb69fdb0915a727">sockunion_su2str</a> (peer-&gt;<a class="code" href="structpeer.html#a9ab7f1f3e48a3027c0f8a92fa6e2de28">su_remote</a>), &amp;peer_address);
<a name="l00916"></a>00916               bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#ab23f9ed5b7c55ea658ab6dc729bc9e63">nexthop</a> = peer_address;
<a name="l00917"></a>00917           bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a> |= <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#a65c2bdaaa2a62a73db7f100ece5ea66f">BGP_ATTR_NEXT_HOP</a>);
<a name="l00918"></a>00918         }
<a name="l00919"></a>00919       <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (peer-&gt;<a class="code" href="structpeer.html#afad0d7ca0b1d0d8bdea5bb8eaba1ef65">rmap_type</a>, <a class="code" href="bgpd_8h.html#a8936848c8f5360ec5b4544e3cd86cda1">PEER_RMAP_TYPE_OUT</a>)
<a name="l00920"></a>00920            &amp;&amp; peer-&gt;<a class="code" href="structpeer.html#a063537a13602c890880e9c4f1d6fccd3">su_local</a>
<a name="l00921"></a>00921            &amp;&amp; <a class="code" href="sockunion_8h.html#ac361ce9c3dca3e5b0e903c2c4fcc300c">sockunion_family</a> (peer-&gt;<a class="code" href="structpeer.html#a063537a13602c890880e9c4f1d6fccd3">su_local</a>) == AF_INET)
<a name="l00922"></a>00922         {
<a name="l00923"></a>00923               <a class="code" href="sockunion_8c.html#a4203367afaacee3fa5cc1626b2ef63c0">inet_aton</a> (<a class="code" href="sockunion_8c.html#a81204a150d1d4f669bb69fdb0915a727">sockunion_su2str</a> (peer-&gt;<a class="code" href="structpeer.html#a063537a13602c890880e9c4f1d6fccd3">su_local</a>), &amp;peer_address);
<a name="l00924"></a>00924               bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#ab23f9ed5b7c55ea658ab6dc729bc9e63">nexthop</a> = peer_address;
<a name="l00925"></a>00925           bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a> |= <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#a65c2bdaaa2a62a73db7f100ece5ea66f">BGP_ATTR_NEXT_HOP</a>);
<a name="l00926"></a>00926         }
<a name="l00927"></a>00927     }
<a name="l00928"></a>00928       <span class="keywordflow">else</span>
<a name="l00929"></a>00929     {
<a name="l00930"></a>00930       <span class="comment">/* Set next hop value. */</span> 
<a name="l00931"></a>00931       bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a> |= <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#a65c2bdaaa2a62a73db7f100ece5ea66f">BGP_ATTR_NEXT_HOP</a>);
<a name="l00932"></a>00932       bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#ab23f9ed5b7c55ea658ab6dc729bc9e63">nexthop</a> = *rins-&gt;<a class="code" href="structrmap__ip__nexthop__set.html#acfbeba1598eab4e59a948049d74fe882">address</a>;
<a name="l00933"></a>00933     }
<a name="l00934"></a>00934     }
<a name="l00935"></a>00935 
<a name="l00936"></a>00936   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516a1215cf356f29000968d958c014b559d5">RMAP_OKAY</a>;
<a name="l00937"></a>00937 }
<a name="l00938"></a>00938 
<a name="l00939"></a>00939 <span class="comment">/* Route map `ip nexthop&#39; compile function.  Given string is converted</span>
<a name="l00940"></a>00940 <span class="comment">   to struct in_addr structure. */</span>
<a name="l00941"></a>00941 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l00942"></a><a class="code" href="bgp__routemap_8c.html#a0e664e2431d4623f908c72ab7c3f8045">00942</a> <a class="code" href="bgp__routemap_8c.html#a0e664e2431d4623f908c72ab7c3f8045">route_set_ip_nexthop_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l00943"></a>00943 {
<a name="l00944"></a>00944   <span class="keyword">struct </span><a class="code" href="structrmap__ip__nexthop__set.html">rmap_ip_nexthop_set</a> *rins;
<a name="l00945"></a>00945   <span class="keyword">struct </span>in_addr *address = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00946"></a>00946   <span class="keywordtype">int</span> peer_address = 0;
<a name="l00947"></a>00947   <span class="keywordtype">int</span> ret;
<a name="l00948"></a>00948 
<a name="l00949"></a>00949   <span class="keywordflow">if</span> (strcmp (arg, <span class="stringliteral">&quot;peer-address&quot;</span>) == 0)
<a name="l00950"></a>00950     peer_address = 1;
<a name="l00951"></a>00951   <span class="keywordflow">else</span>
<a name="l00952"></a>00952     {
<a name="l00953"></a>00953       address = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> in_addr));
<a name="l00954"></a>00954       ret = <a class="code" href="sockunion_8c.html#a4203367afaacee3fa5cc1626b2ef63c0">inet_aton</a> (arg, address);
<a name="l00955"></a>00955 
<a name="l00956"></a>00956       <span class="keywordflow">if</span> (ret == 0)
<a name="l00957"></a>00957     {
<a name="l00958"></a>00958       <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, address);
<a name="l00959"></a>00959       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00960"></a>00960     }
<a name="l00961"></a>00961     }
<a name="l00962"></a>00962 
<a name="l00963"></a>00963   rins = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structrmap__ip__nexthop__set.html">rmap_ip_nexthop_set</a>));
<a name="l00964"></a>00964 
<a name="l00965"></a>00965   rins-&gt;<a class="code" href="structrmap__ip__nexthop__set.html#acfbeba1598eab4e59a948049d74fe882">address</a> = address;
<a name="l00966"></a>00966   rins-&gt;<a class="code" href="structrmap__ip__nexthop__set.html#a7e2f4ea385443c5ac593af1b494ba04e">peer_address</a> = peer_address;
<a name="l00967"></a>00967 
<a name="l00968"></a>00968   <span class="keywordflow">return</span> rins;
<a name="l00969"></a>00969 }
<a name="l00970"></a>00970 
<a name="l00971"></a>00971 <span class="comment">/* Free route map&#39;s compiled `ip nexthop&#39; value. */</span>
<a name="l00972"></a>00972 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00973"></a><a class="code" href="bgp__routemap_8c.html#ac15ce731a00081e34591fd3034be7c16">00973</a> <a class="code" href="bgp__routemap_8c.html#ac15ce731a00081e34591fd3034be7c16">route_set_ip_nexthop_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l00974"></a>00974 {
<a name="l00975"></a>00975   <span class="keyword">struct </span><a class="code" href="structrmap__ip__nexthop__set.html">rmap_ip_nexthop_set</a> *rins = rule;
<a name="l00976"></a>00976 
<a name="l00977"></a>00977   <span class="keywordflow">if</span> (rins-&gt;<a class="code" href="structrmap__ip__nexthop__set.html#acfbeba1598eab4e59a948049d74fe882">address</a>)
<a name="l00978"></a>00978     <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rins-&gt;<a class="code" href="structrmap__ip__nexthop__set.html#acfbeba1598eab4e59a948049d74fe882">address</a>);
<a name="l00979"></a>00979     
<a name="l00980"></a>00980   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rins);
<a name="l00981"></a>00981 }
<a name="l00982"></a>00982 
<a name="l00983"></a>00983 <span class="comment">/* Route map commands for ip nexthop set. */</span>
<a name="l00984"></a><a class="code" href="bgp__routemap_8c.html#ab85e74bd60462e90ed7dc731d1a6d327">00984</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#ab85e74bd60462e90ed7dc731d1a6d327">route_set_ip_nexthop_cmd</a> =
<a name="l00985"></a>00985 {
<a name="l00986"></a>00986   <span class="stringliteral">&quot;ip next-hop&quot;</span>,
<a name="l00987"></a>00987   <a class="code" href="bgp__routemap_8c.html#a4a9ba22a2d79223cdcd261fc509195b7">route_set_ip_nexthop</a>,
<a name="l00988"></a>00988   <a class="code" href="bgp__routemap_8c.html#a0e664e2431d4623f908c72ab7c3f8045">route_set_ip_nexthop_compile</a>,
<a name="l00989"></a>00989   <a class="code" href="bgp__routemap_8c.html#ac15ce731a00081e34591fd3034be7c16">route_set_ip_nexthop_free</a>
<a name="l00990"></a>00990 };
<a name="l00991"></a>00991 
<a name="l00992"></a>00992 <span class="comment">/* `set local-preference LOCAL_PREF&#39; */</span>
<a name="l00993"></a>00993 
<a name="l00994"></a>00994 <span class="comment">/* Set local preference. */</span>
<a name="l00995"></a>00995 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l00996"></a><a class="code" href="bgp__routemap_8c.html#ad675ebd76b096d75650501be774e6a19">00996</a> <a class="code" href="bgp__routemap_8c.html#ad675ebd76b096d75650501be774e6a19">route_set_local_pref</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>,
<a name="l00997"></a>00997               <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l00998"></a>00998 {
<a name="l00999"></a>00999   u_int32_t *local_pref;
<a name="l01000"></a>01000   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *<a class="code" href="structbgp__info.html">bgp_info</a>;
<a name="l01001"></a>01001 
<a name="l01002"></a>01002   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l01003"></a>01003     {
<a name="l01004"></a>01004       <span class="comment">/* Fetch routemap&#39;s rule information. */</span>
<a name="l01005"></a>01005       local_pref = rule;
<a name="l01006"></a>01006       bgp_info = object;
<a name="l01007"></a>01007     
<a name="l01008"></a>01008       <span class="comment">/* Set local preference value. */</span> 
<a name="l01009"></a>01009       bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a> |= <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#afb9037d30bc0d4b42c7960ffefcbd299">BGP_ATTR_LOCAL_PREF</a>);
<a name="l01010"></a>01010       bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#aa7caa960ced4e67e8aec2b0ab3d9b0b0">local_pref</a> = *local_pref;
<a name="l01011"></a>01011     }
<a name="l01012"></a>01012 
<a name="l01013"></a>01013   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516a1215cf356f29000968d958c014b559d5">RMAP_OKAY</a>;
<a name="l01014"></a>01014 }
<a name="l01015"></a>01015 
<a name="l01016"></a>01016 <span class="comment">/* set local preference compilation. */</span>
<a name="l01017"></a>01017 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l01018"></a><a class="code" href="bgp__routemap_8c.html#a994f0365fa9a5db1bc80090b9982a66f">01018</a> <a class="code" href="bgp__routemap_8c.html#a994f0365fa9a5db1bc80090b9982a66f">route_set_local_pref_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l01019"></a>01019 {
<a name="l01020"></a>01020   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> tmp;
<a name="l01021"></a>01021   u_int32_t *local_pref;
<a name="l01022"></a>01022   <span class="keywordtype">char</span> *endptr = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01023"></a>01023 
<a name="l01024"></a>01024   <span class="comment">/* Local preference value shoud be integer. */</span>
<a name="l01025"></a>01025   <span class="keywordflow">if</span> (! <a class="code" href="prefix_8c.html#abca8c8e6c67ae2442bbdbb028e6b11c8">all_digit</a> (arg))
<a name="l01026"></a>01026     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01027"></a>01027   
<a name="l01028"></a>01028   tmp = strtoul (arg, &amp;endptr, 10);
<a name="l01029"></a>01029   <span class="keywordflow">if</span> (*endptr != <span class="charliteral">&#39;\0&#39;</span> || tmp == ULONG_MAX || tmp &gt; <a class="code" href="zebra_8h.html#ab5eb23180f7cc12b7d6c04a8ec067fdd">UINT32_MAX</a>)
<a name="l01030"></a>01030     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01031"></a>01031    
<a name="l01032"></a>01032   local_pref = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, <span class="keyword">sizeof</span> (u_int32_t)); 
<a name="l01033"></a>01033   
<a name="l01034"></a>01034   <span class="keywordflow">if</span> (!local_pref)
<a name="l01035"></a>01035     <span class="keywordflow">return</span> local_pref;
<a name="l01036"></a>01036   
<a name="l01037"></a>01037   *local_pref = tmp;
<a name="l01038"></a>01038   
<a name="l01039"></a>01039   <span class="keywordflow">return</span> local_pref;
<a name="l01040"></a>01040 }
<a name="l01041"></a>01041 
<a name="l01042"></a>01042 <span class="comment">/* Free route map&#39;s local preference value. */</span>
<a name="l01043"></a>01043 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01044"></a><a class="code" href="bgp__routemap_8c.html#a28ccdd12b0469022a1227ce5b9dc6e35">01044</a> <a class="code" href="bgp__routemap_8c.html#a28ccdd12b0469022a1227ce5b9dc6e35">route_set_local_pref_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l01045"></a>01045 {
<a name="l01046"></a>01046   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l01047"></a>01047 }
<a name="l01048"></a>01048 
<a name="l01049"></a>01049 <span class="comment">/* Set local preference rule structure. */</span>
<a name="l01050"></a><a class="code" href="bgp__routemap_8c.html#ab87cc64cbe9befde199ec7b3c5687b97">01050</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#ab87cc64cbe9befde199ec7b3c5687b97">route_set_local_pref_cmd</a> = 
<a name="l01051"></a>01051 {
<a name="l01052"></a>01052   <span class="stringliteral">&quot;local-preference&quot;</span>,
<a name="l01053"></a>01053   <a class="code" href="bgp__routemap_8c.html#ad675ebd76b096d75650501be774e6a19">route_set_local_pref</a>,
<a name="l01054"></a>01054   <a class="code" href="bgp__routemap_8c.html#a994f0365fa9a5db1bc80090b9982a66f">route_set_local_pref_compile</a>,
<a name="l01055"></a>01055   <a class="code" href="bgp__routemap_8c.html#a28ccdd12b0469022a1227ce5b9dc6e35">route_set_local_pref_free</a>,
<a name="l01056"></a>01056 };
<a name="l01057"></a>01057 
<a name="l01058"></a>01058 <span class="comment">/* `set weight WEIGHT&#39; */</span>
<a name="l01059"></a>01059 
<a name="l01060"></a>01060 <span class="comment">/* Set weight. */</span>
<a name="l01061"></a>01061 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l01062"></a><a class="code" href="bgp__routemap_8c.html#abb72d6afac273d11da6167cd0e8fdb2e">01062</a> <a class="code" href="bgp__routemap_8c.html#abb72d6afac273d11da6167cd0e8fdb2e">route_set_weight</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>, <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>,
<a name="l01063"></a>01063           <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l01064"></a>01064 {
<a name="l01065"></a>01065   u_int32_t *weight;
<a name="l01066"></a>01066   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *<a class="code" href="structbgp__info.html">bgp_info</a>;
<a name="l01067"></a>01067 
<a name="l01068"></a>01068   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l01069"></a>01069     {
<a name="l01070"></a>01070       <span class="comment">/* Fetch routemap&#39;s rule information. */</span>
<a name="l01071"></a>01071       weight = rule;
<a name="l01072"></a>01072       bgp_info = object;
<a name="l01073"></a>01073     
<a name="l01074"></a>01074       <span class="comment">/* Set weight value. */</span> 
<a name="l01075"></a>01075       <span class="keywordflow">if</span> (*weight)
<a name="l01076"></a>01076         (<a class="code" href="bgp__attr_8c.html#a31ef3828cd7a1375f7b7dfe02aab705f">bgp_attr_extra_get</a> (bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>))-&gt;weight = *weight;
<a name="l01077"></a>01077       <span class="keywordflow">else</span> <span class="keywordflow">if</span> (bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>)
<a name="l01078"></a>01078         bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>-&gt;<a class="code" href="structattr__extra.html#a83e07fadc622d7c68bf1aff668371f18">weight</a> = 0;
<a name="l01079"></a>01079     }
<a name="l01080"></a>01080 
<a name="l01081"></a>01081   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516a1215cf356f29000968d958c014b559d5">RMAP_OKAY</a>;
<a name="l01082"></a>01082 }
<a name="l01083"></a>01083 
<a name="l01084"></a>01084 <span class="comment">/* set local preference compilation. */</span>
<a name="l01085"></a>01085 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l01086"></a><a class="code" href="bgp__routemap_8c.html#a6e5d8498e19b6a634adb1f838ac74369">01086</a> <a class="code" href="bgp__routemap_8c.html#a6e5d8498e19b6a634adb1f838ac74369">route_set_weight_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l01087"></a>01087 {
<a name="l01088"></a>01088   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> tmp;
<a name="l01089"></a>01089   u_int32_t *weight;
<a name="l01090"></a>01090   <span class="keywordtype">char</span> *endptr = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01091"></a>01091 
<a name="l01092"></a>01092   <span class="comment">/* Local preference value shoud be integer. */</span>
<a name="l01093"></a>01093   <span class="keywordflow">if</span> (! <a class="code" href="prefix_8c.html#abca8c8e6c67ae2442bbdbb028e6b11c8">all_digit</a> (arg))
<a name="l01094"></a>01094     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01095"></a>01095 
<a name="l01096"></a>01096 
<a name="l01097"></a>01097   tmp = strtoul (arg, &amp;endptr, 10);
<a name="l01098"></a>01098   <span class="keywordflow">if</span> (*endptr != <span class="charliteral">&#39;\0&#39;</span> || tmp == ULONG_MAX || tmp &gt; <a class="code" href="zebra_8h.html#ab5eb23180f7cc12b7d6c04a8ec067fdd">UINT32_MAX</a>)
<a name="l01099"></a>01099     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01100"></a>01100   
<a name="l01101"></a>01101   weight = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, <span class="keyword">sizeof</span> (u_int32_t));
<a name="l01102"></a>01102   
<a name="l01103"></a>01103   <span class="keywordflow">if</span> (weight == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01104"></a>01104     <span class="keywordflow">return</span> weight;
<a name="l01105"></a>01105   
<a name="l01106"></a>01106   *weight = tmp;  
<a name="l01107"></a>01107   
<a name="l01108"></a>01108   <span class="keywordflow">return</span> weight;
<a name="l01109"></a>01109 }
<a name="l01110"></a>01110 
<a name="l01111"></a>01111 <span class="comment">/* Free route map&#39;s local preference value. */</span>
<a name="l01112"></a>01112 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01113"></a><a class="code" href="bgp__routemap_8c.html#a6cf3391294878050622c471a0071544e">01113</a> <a class="code" href="bgp__routemap_8c.html#a6cf3391294878050622c471a0071544e">route_set_weight_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l01114"></a>01114 {
<a name="l01115"></a>01115   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l01116"></a>01116 }
<a name="l01117"></a>01117 
<a name="l01118"></a>01118 <span class="comment">/* Set local preference rule structure. */</span>
<a name="l01119"></a><a class="code" href="bgp__routemap_8c.html#a5ec1dfa7d4c6bbaea6b8d7d6bf6707e6">01119</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#a5ec1dfa7d4c6bbaea6b8d7d6bf6707e6">route_set_weight_cmd</a> = 
<a name="l01120"></a>01120 {
<a name="l01121"></a>01121   <span class="stringliteral">&quot;weight&quot;</span>,
<a name="l01122"></a>01122   <a class="code" href="bgp__routemap_8c.html#abb72d6afac273d11da6167cd0e8fdb2e">route_set_weight</a>,
<a name="l01123"></a>01123   <a class="code" href="bgp__routemap_8c.html#a6e5d8498e19b6a634adb1f838ac74369">route_set_weight_compile</a>,
<a name="l01124"></a>01124   <a class="code" href="bgp__routemap_8c.html#a6cf3391294878050622c471a0071544e">route_set_weight_free</a>,
<a name="l01125"></a>01125 };
<a name="l01126"></a>01126 
<a name="l01127"></a>01127 <span class="comment">/* `set metric METRIC&#39; */</span>
<a name="l01128"></a>01128 
<a name="l01129"></a>01129 <span class="comment">/* Set metric to attribute. */</span>
<a name="l01130"></a>01130 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l01131"></a><a class="code" href="bgp__routemap_8c.html#a6403cc9a0e6a1b7df24fc6e7a70736fa">01131</a> <a class="code" href="bgp__routemap_8c.html#a6403cc9a0e6a1b7df24fc6e7a70736fa">route_set_metric</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>, 
<a name="l01132"></a>01132           <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l01133"></a>01133 {
<a name="l01134"></a>01134   <span class="keywordtype">char</span> *<a class="code" href="structmetric.html">metric</a>;
<a name="l01135"></a>01135   u_int32_t metric_val;
<a name="l01136"></a>01136   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *<a class="code" href="structbgp__info.html">bgp_info</a>;
<a name="l01137"></a>01137 
<a name="l01138"></a>01138   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l01139"></a>01139     {
<a name="l01140"></a>01140       <span class="comment">/* Fetch routemap&#39;s rule information. */</span>
<a name="l01141"></a>01141       metric = rule;
<a name="l01142"></a>01142       bgp_info = object;
<a name="l01143"></a>01143 
<a name="l01144"></a>01144       <span class="keywordflow">if</span> (! (bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a> &amp; <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#a2f0c3d68f255eba5612c46147522334e">BGP_ATTR_MULTI_EXIT_DISC</a>)))
<a name="l01145"></a>01145     bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a2dc4bc77a20816cd457a2040b05e316f">med</a> = 0;
<a name="l01146"></a>01146       bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a> |= <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#a2f0c3d68f255eba5612c46147522334e">BGP_ATTR_MULTI_EXIT_DISC</a>);
<a name="l01147"></a>01147 
<a name="l01148"></a>01148       <span class="keywordflow">if</span> (<a class="code" href="prefix_8c.html#abca8c8e6c67ae2442bbdbb028e6b11c8">all_digit</a> (metric))
<a name="l01149"></a>01149     {
<a name="l01150"></a>01150       metric_val = strtoul (metric, (<span class="keywordtype">char</span> **)<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 10);
<a name="l01151"></a>01151       bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a2dc4bc77a20816cd457a2040b05e316f">med</a> = metric_val;
<a name="l01152"></a>01152     }
<a name="l01153"></a>01153       <span class="keywordflow">else</span>
<a name="l01154"></a>01154     {
<a name="l01155"></a>01155       metric_val = strtoul (metric+1, (<span class="keywordtype">char</span> **)<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 10);
<a name="l01156"></a>01156 
<a name="l01157"></a>01157       <span class="keywordflow">if</span> (strncmp (metric, <span class="stringliteral">&quot;+&quot;</span>, 1) == 0)
<a name="l01158"></a>01158         {
<a name="l01159"></a>01159           <span class="keywordflow">if</span> (bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a2dc4bc77a20816cd457a2040b05e316f">med</a>/2 + metric_val/2 &gt; <a class="code" href="bgp__attr_8h.html#afd4e8f98deac933c51048df75bf14c22">BGP_MED_MAX</a>/2)
<a name="l01160"></a>01160             bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a2dc4bc77a20816cd457a2040b05e316f">med</a> = <a class="code" href="bgp__attr_8h.html#afd4e8f98deac933c51048df75bf14c22">BGP_MED_MAX</a> - 1;
<a name="l01161"></a>01161           <span class="keywordflow">else</span>
<a name="l01162"></a>01162             bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a2dc4bc77a20816cd457a2040b05e316f">med</a> += metric_val;
<a name="l01163"></a>01163         }
<a name="l01164"></a>01164       <span class="keywordflow">else</span> <span class="keywordflow">if</span> (strncmp (metric, <span class="stringliteral">&quot;-&quot;</span>, 1) == 0)
<a name="l01165"></a>01165         {
<a name="l01166"></a>01166           <span class="keywordflow">if</span> (bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a2dc4bc77a20816cd457a2040b05e316f">med</a> &lt;= metric_val)
<a name="l01167"></a>01167             bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a2dc4bc77a20816cd457a2040b05e316f">med</a> = 0;
<a name="l01168"></a>01168           <span class="keywordflow">else</span>
<a name="l01169"></a>01169             bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a2dc4bc77a20816cd457a2040b05e316f">med</a> -= metric_val;
<a name="l01170"></a>01170         }
<a name="l01171"></a>01171     }
<a name="l01172"></a>01172     }
<a name="l01173"></a>01173   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516a1215cf356f29000968d958c014b559d5">RMAP_OKAY</a>;
<a name="l01174"></a>01174 }
<a name="l01175"></a>01175 
<a name="l01176"></a>01176 <span class="comment">/* set metric compilation. */</span>
<a name="l01177"></a>01177 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l01178"></a><a class="code" href="bgp__routemap_8c.html#aaf2da1195fcbf618501202a72789e2d4">01178</a> <a class="code" href="bgp__routemap_8c.html#aaf2da1195fcbf618501202a72789e2d4">route_set_metric_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l01179"></a>01179 {
<a name="l01180"></a>01180   u_int32_t <a class="code" href="structmetric.html">metric</a>;
<a name="l01181"></a>01181   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> larg;
<a name="l01182"></a>01182   <span class="keywordtype">char</span> *endptr = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01183"></a>01183 
<a name="l01184"></a>01184   <span class="keywordflow">if</span> (<a class="code" href="prefix_8c.html#abca8c8e6c67ae2442bbdbb028e6b11c8">all_digit</a> (arg))
<a name="l01185"></a>01185     {
<a name="l01186"></a>01186       <span class="comment">/* set metric value check*/</span>
<a name="l01187"></a>01187       larg = strtoul (arg, &amp;endptr, 10);
<a name="l01188"></a>01188       <span class="keywordflow">if</span> (*endptr != <span class="charliteral">&#39;\0&#39;</span> || larg == ULONG_MAX || larg &gt; <a class="code" href="zebra_8h.html#ab5eb23180f7cc12b7d6c04a8ec067fdd">UINT32_MAX</a>)
<a name="l01189"></a>01189         <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01190"></a>01190       metric = larg;
<a name="l01191"></a>01191     }
<a name="l01192"></a>01192   <span class="keywordflow">else</span>
<a name="l01193"></a>01193     {
<a name="l01194"></a>01194       <span class="comment">/* set metric +/-value check */</span>
<a name="l01195"></a>01195       <span class="keywordflow">if</span> ((strncmp (arg, <span class="stringliteral">&quot;+&quot;</span>, 1) != 0
<a name="l01196"></a>01196        &amp;&amp; strncmp (arg, <span class="stringliteral">&quot;-&quot;</span>, 1) != 0)
<a name="l01197"></a>01197        || (! <a class="code" href="prefix_8c.html#abca8c8e6c67ae2442bbdbb028e6b11c8">all_digit</a> (arg+1)))
<a name="l01198"></a>01198     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01199"></a>01199 
<a name="l01200"></a>01200       larg = strtoul (arg+1, &amp;endptr, 10);
<a name="l01201"></a>01201       <span class="keywordflow">if</span> (*endptr != <span class="charliteral">&#39;\0&#39;</span> || larg == ULONG_MAX || larg &gt; <a class="code" href="zebra_8h.html#ab5eb23180f7cc12b7d6c04a8ec067fdd">UINT32_MAX</a>)
<a name="l01202"></a>01202     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01203"></a>01203       metric = larg;
<a name="l01204"></a>01204     }
<a name="l01205"></a>01205 
<a name="l01206"></a>01206   <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, arg);
<a name="l01207"></a>01207 }
<a name="l01208"></a>01208 
<a name="l01209"></a>01209 <span class="comment">/* Free route map&#39;s compiled `set metric&#39; value. */</span>
<a name="l01210"></a>01210 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01211"></a><a class="code" href="bgp__routemap_8c.html#a80c83233f56cb3672619e253a2bc9152">01211</a> <a class="code" href="bgp__routemap_8c.html#a80c83233f56cb3672619e253a2bc9152">route_set_metric_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l01212"></a>01212 {
<a name="l01213"></a>01213   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l01214"></a>01214 }
<a name="l01215"></a>01215 
<a name="l01216"></a>01216 <span class="comment">/* Set metric rule structure. */</span>
<a name="l01217"></a><a class="code" href="bgp__routemap_8c.html#a0d1158a15b3f98d0cb717421eb9ed25d">01217</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#a0d1158a15b3f98d0cb717421eb9ed25d">route_set_metric_cmd</a> = 
<a name="l01218"></a>01218 {
<a name="l01219"></a>01219   <span class="stringliteral">&quot;metric&quot;</span>,
<a name="l01220"></a>01220   <a class="code" href="bgp__routemap_8c.html#a6403cc9a0e6a1b7df24fc6e7a70736fa">route_set_metric</a>,
<a name="l01221"></a>01221   <a class="code" href="bgp__routemap_8c.html#aaf2da1195fcbf618501202a72789e2d4">route_set_metric_compile</a>,
<a name="l01222"></a>01222   <a class="code" href="bgp__routemap_8c.html#a80c83233f56cb3672619e253a2bc9152">route_set_metric_free</a>,
<a name="l01223"></a>01223 };
<a name="l01224"></a>01224 
<a name="l01225"></a>01225 <span class="comment">/* `set as-path prepend ASPATH&#39; */</span>
<a name="l01226"></a>01226 
<a name="l01227"></a>01227 <span class="comment">/* For AS path prepend mechanism. */</span>
<a name="l01228"></a>01228 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l01229"></a><a class="code" href="bgp__routemap_8c.html#a246264835303cc70579c9da8a0ecd3fb">01229</a> <a class="code" href="bgp__routemap_8c.html#a246264835303cc70579c9da8a0ecd3fb">route_set_aspath_prepend</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>, <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l01230"></a>01230 {
<a name="l01231"></a>01231   <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *<a class="code" href="structaspath.html">aspath</a>;
<a name="l01232"></a>01232   <span class="keyword">struct </span>aspath *<span class="keyword">new</span>;
<a name="l01233"></a>01233   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *binfo;
<a name="l01234"></a>01234 
<a name="l01235"></a>01235   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l01236"></a>01236     {
<a name="l01237"></a>01237       aspath = rule;
<a name="l01238"></a>01238       binfo = object;
<a name="l01239"></a>01239     
<a name="l01240"></a>01240       <span class="keywordflow">if</span> (binfo-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a89311608450bb3b97bccc835e9b004f0">aspath</a>-&gt;<a class="code" href="structaspath.html#ad4ebb184cbb394e06b78340af8cbb336">refcnt</a>)
<a name="l01241"></a>01241     <span class="keyword">new</span> = <a class="code" href="bgp__aspath_8c.html#a2de7834df2eead0bfa5a117ce265e6ca">aspath_dup</a> (binfo-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a89311608450bb3b97bccc835e9b004f0">aspath</a>);
<a name="l01242"></a>01242       <span class="keywordflow">else</span>
<a name="l01243"></a>01243     <span class="keyword">new</span> = binfo-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a89311608450bb3b97bccc835e9b004f0">aspath</a>;
<a name="l01244"></a>01244 
<a name="l01245"></a>01245       <a class="code" href="bgp__aspath_8c.html#a042b5a8463ffb3adedffa05e69640726">aspath_prepend</a> (aspath, <span class="keyword">new</span>);
<a name="l01246"></a>01246       binfo-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a89311608450bb3b97bccc835e9b004f0">aspath</a> = <span class="keyword">new</span>;
<a name="l01247"></a>01247     }
<a name="l01248"></a>01248 
<a name="l01249"></a>01249   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516a1215cf356f29000968d958c014b559d5">RMAP_OKAY</a>;
<a name="l01250"></a>01250 }
<a name="l01251"></a>01251 
<a name="l01252"></a>01252 <span class="comment">/* Compile function for as-path prepend. */</span>
<a name="l01253"></a>01253 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l01254"></a><a class="code" href="bgp__routemap_8c.html#aa45ff45acc335372d5740a170aa0a05b">01254</a> <a class="code" href="bgp__routemap_8c.html#aa45ff45acc335372d5740a170aa0a05b">route_set_aspath_prepend_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l01255"></a>01255 {
<a name="l01256"></a>01256   <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *<a class="code" href="structaspath.html">aspath</a>;
<a name="l01257"></a>01257 
<a name="l01258"></a>01258   aspath = <a class="code" href="bgp__aspath_8c.html#aa2514807244e353a19d3f48316cc7885">aspath_str2aspath</a> (arg);
<a name="l01259"></a>01259   <span class="keywordflow">if</span> (! aspath)
<a name="l01260"></a>01260     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01261"></a>01261   <span class="keywordflow">return</span> aspath;
<a name="l01262"></a>01262 }
<a name="l01263"></a>01263 
<a name="l01264"></a>01264 <span class="comment">/* Compile function for as-path prepend. */</span>
<a name="l01265"></a>01265 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01266"></a><a class="code" href="bgp__routemap_8c.html#a22e93947ac9b4483fb80b36116f17356">01266</a> <a class="code" href="bgp__routemap_8c.html#a22e93947ac9b4483fb80b36116f17356">route_set_aspath_prepend_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l01267"></a>01267 {
<a name="l01268"></a>01268   <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *<a class="code" href="structaspath.html">aspath</a> = rule;
<a name="l01269"></a>01269   <a class="code" href="bgp__aspath_8c.html#af8db79f3e25ae5a01dfec9070557c21a">aspath_free</a> (aspath);
<a name="l01270"></a>01270 }
<a name="l01271"></a>01271 
<a name="l01272"></a>01272 <span class="comment">/* Set metric rule structure. */</span>
<a name="l01273"></a><a class="code" href="bgp__routemap_8c.html#a96537de62d456318d75465618eee34d4">01273</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#a96537de62d456318d75465618eee34d4">route_set_aspath_prepend_cmd</a> = 
<a name="l01274"></a>01274 {
<a name="l01275"></a>01275   <span class="stringliteral">&quot;as-path prepend&quot;</span>,
<a name="l01276"></a>01276   <a class="code" href="bgp__routemap_8c.html#a246264835303cc70579c9da8a0ecd3fb">route_set_aspath_prepend</a>,
<a name="l01277"></a>01277   <a class="code" href="bgp__routemap_8c.html#aa45ff45acc335372d5740a170aa0a05b">route_set_aspath_prepend_compile</a>,
<a name="l01278"></a>01278   <a class="code" href="bgp__routemap_8c.html#a22e93947ac9b4483fb80b36116f17356">route_set_aspath_prepend_free</a>,
<a name="l01279"></a>01279 };
<a name="l01280"></a>01280 
<a name="l01281"></a>01281 <span class="comment">/* `set as-path exclude ASn&#39; */</span>
<a name="l01282"></a>01282 
<a name="l01283"></a>01283 <span class="comment">/* For ASN exclude mechanism.</span>
<a name="l01284"></a>01284 <span class="comment"> * Iterate over ASns requested and filter them from the given AS_PATH one by one.</span>
<a name="l01285"></a>01285 <span class="comment"> * Make a deep copy of existing AS_PATH, but for the first ASn only.</span>
<a name="l01286"></a>01286 <span class="comment"> */</span>
<a name="l01287"></a>01287 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l01288"></a><a class="code" href="bgp__routemap_8c.html#ab129f67ca1de9a50bc8fadebb78a5a50">01288</a> <a class="code" href="bgp__routemap_8c.html#ab129f67ca1de9a50bc8fadebb78a5a50">route_set_aspath_exclude</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *dummy, <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l01289"></a>01289 {
<a name="l01290"></a>01290   <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> * new_path, * exclude_path;
<a name="l01291"></a>01291   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *binfo;
<a name="l01292"></a>01292 
<a name="l01293"></a>01293   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l01294"></a>01294   {
<a name="l01295"></a>01295     exclude_path = rule;
<a name="l01296"></a>01296     binfo = object;
<a name="l01297"></a>01297     <span class="keywordflow">if</span> (binfo-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a89311608450bb3b97bccc835e9b004f0">aspath</a>-&gt;<a class="code" href="structaspath.html#ad4ebb184cbb394e06b78340af8cbb336">refcnt</a>)
<a name="l01298"></a>01298       new_path = <a class="code" href="bgp__aspath_8c.html#a2de7834df2eead0bfa5a117ce265e6ca">aspath_dup</a> (binfo-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a89311608450bb3b97bccc835e9b004f0">aspath</a>);
<a name="l01299"></a>01299     <span class="keywordflow">else</span>
<a name="l01300"></a>01300       new_path = binfo-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a89311608450bb3b97bccc835e9b004f0">aspath</a>;
<a name="l01301"></a>01301     binfo-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a89311608450bb3b97bccc835e9b004f0">aspath</a> = <a class="code" href="bgp__aspath_8c.html#ac7f9ae7aa66eb067701e37c65edd2e78">aspath_filter_exclude</a> (new_path, exclude_path);
<a name="l01302"></a>01302   }
<a name="l01303"></a>01303   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516a1215cf356f29000968d958c014b559d5">RMAP_OKAY</a>;
<a name="l01304"></a>01304 }
<a name="l01305"></a>01305 
<a name="l01306"></a>01306 <span class="comment">/* FIXME: consider using route_set_aspath_prepend_compile() and</span>
<a name="l01307"></a>01307 <span class="comment"> * route_set_aspath_prepend_free(), which two below function are</span>
<a name="l01308"></a>01308 <span class="comment"> * exact clones of.</span>
<a name="l01309"></a>01309 <span class="comment"> */</span>
<a name="l01310"></a>01310 
<a name="l01311"></a>01311 <span class="comment">/* Compile function for as-path exclude. */</span>
<a name="l01312"></a>01312 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l01313"></a><a class="code" href="bgp__routemap_8c.html#a13af362e5fafc971b83510f851affa81">01313</a> <a class="code" href="bgp__routemap_8c.html#a13af362e5fafc971b83510f851affa81">route_set_aspath_exclude_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l01314"></a>01314 {
<a name="l01315"></a>01315   <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *<a class="code" href="structaspath.html">aspath</a>;
<a name="l01316"></a>01316 
<a name="l01317"></a>01317   aspath = <a class="code" href="bgp__aspath_8c.html#aa2514807244e353a19d3f48316cc7885">aspath_str2aspath</a> (arg);
<a name="l01318"></a>01318   <span class="keywordflow">if</span> (! aspath)
<a name="l01319"></a>01319     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01320"></a>01320   <span class="keywordflow">return</span> aspath;
<a name="l01321"></a>01321 }
<a name="l01322"></a>01322 
<a name="l01323"></a>01323 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01324"></a><a class="code" href="bgp__routemap_8c.html#aaea055bc59c190ee5ff31d419a65dd62">01324</a> <a class="code" href="bgp__routemap_8c.html#aaea055bc59c190ee5ff31d419a65dd62">route_set_aspath_exclude_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l01325"></a>01325 {
<a name="l01326"></a>01326   <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *<a class="code" href="structaspath.html">aspath</a> = rule;
<a name="l01327"></a>01327   <a class="code" href="bgp__aspath_8c.html#af8db79f3e25ae5a01dfec9070557c21a">aspath_free</a> (aspath);
<a name="l01328"></a>01328 }
<a name="l01329"></a>01329 
<a name="l01330"></a>01330 <span class="comment">/* Set ASn exlude rule structure. */</span>
<a name="l01331"></a><a class="code" href="bgp__routemap_8c.html#a232581538f241d18bbf259b637e28b49">01331</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#a232581538f241d18bbf259b637e28b49">route_set_aspath_exclude_cmd</a> = 
<a name="l01332"></a>01332 {
<a name="l01333"></a>01333   <span class="stringliteral">&quot;as-path exclude&quot;</span>,
<a name="l01334"></a>01334   <a class="code" href="bgp__routemap_8c.html#ab129f67ca1de9a50bc8fadebb78a5a50">route_set_aspath_exclude</a>,
<a name="l01335"></a>01335   <a class="code" href="bgp__routemap_8c.html#a13af362e5fafc971b83510f851affa81">route_set_aspath_exclude_compile</a>,
<a name="l01336"></a>01336   <a class="code" href="bgp__routemap_8c.html#aaea055bc59c190ee5ff31d419a65dd62">route_set_aspath_exclude_free</a>,
<a name="l01337"></a>01337 };
<a name="l01338"></a>01338 
<a name="l01339"></a>01339 <span class="comment">/* `set community COMMUNITY&#39; */</span>
<a name="l01340"></a><a class="code" href="structrmap__com__set.html">01340</a> <span class="keyword">struct </span><a class="code" href="structrmap__com__set.html">rmap_com_set</a>
<a name="l01341"></a>01341 {
<a name="l01342"></a><a class="code" href="structrmap__com__set.html#ad9a3cc657de6eb82d07e30567302edf4">01342</a>   <span class="keyword">struct </span><a class="code" href="structcommunity.html">community</a> *<a class="code" href="structrmap__com__set.html#ad9a3cc657de6eb82d07e30567302edf4">com</a>;
<a name="l01343"></a><a class="code" href="structrmap__com__set.html#ae2c4108060e5db6a5ae343cd660da884">01343</a>   <span class="keywordtype">int</span> <a class="code" href="structrmap__com__set.html#ae2c4108060e5db6a5ae343cd660da884">additive</a>;
<a name="l01344"></a><a class="code" href="structrmap__com__set.html#a4ba144f2686395466b97aea5520d709b">01344</a>   <span class="keywordtype">int</span> <a class="code" href="structrmap__com__set.html#a4ba144f2686395466b97aea5520d709b">none</a>;
<a name="l01345"></a>01345 };
<a name="l01346"></a>01346 
<a name="l01347"></a>01347 <span class="comment">/* For community set mechanism. */</span>
<a name="l01348"></a>01348 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l01349"></a><a class="code" href="bgp__routemap_8c.html#aaab999ae1241908c4d2beb7e2c6d278c">01349</a> <a class="code" href="bgp__routemap_8c.html#aaab999ae1241908c4d2beb7e2c6d278c">route_set_community</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>,
<a name="l01350"></a>01350              <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l01351"></a>01351 {
<a name="l01352"></a>01352   <span class="keyword">struct </span><a class="code" href="structrmap__com__set.html">rmap_com_set</a> *rcs;
<a name="l01353"></a>01353   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *binfo;
<a name="l01354"></a>01354   <span class="keyword">struct </span><a class="code" href="structattr.html">attr</a> *<a class="code" href="structattr.html">attr</a>;
<a name="l01355"></a>01355   <span class="keyword">struct </span><a class="code" href="structcommunity.html">community</a> *<span class="keyword">new</span> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01356"></a>01356   <span class="keyword">struct </span><a class="code" href="structcommunity.html">community</a> *old;
<a name="l01357"></a>01357   <span class="keyword">struct </span><a class="code" href="structcommunity.html">community</a> *merge;
<a name="l01358"></a>01358   
<a name="l01359"></a>01359   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l01360"></a>01360     {
<a name="l01361"></a>01361       rcs = rule;
<a name="l01362"></a>01362       binfo = object;
<a name="l01363"></a>01363       attr = binfo-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>;
<a name="l01364"></a>01364       old = attr-&gt;<a class="code" href="structattr.html#ac892e1f95a0c26d39a47eb12d021072b">community</a>;
<a name="l01365"></a>01365 
<a name="l01366"></a>01366       <span class="comment">/* &quot;none&quot; case.  */</span>
<a name="l01367"></a>01367       <span class="keywordflow">if</span> (rcs-&gt;<a class="code" href="structrmap__com__set.html#a4ba144f2686395466b97aea5520d709b">none</a>)
<a name="l01368"></a>01368     {
<a name="l01369"></a>01369       attr-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a> &amp;= ~(<a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#aae424d4be52b9b65e6d1cb41c1145a4d">BGP_ATTR_COMMUNITIES</a>));
<a name="l01370"></a>01370       attr-&gt;<a class="code" href="structattr.html#ac892e1f95a0c26d39a47eb12d021072b">community</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01371"></a>01371       <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516a1215cf356f29000968d958c014b559d5">RMAP_OKAY</a>;
<a name="l01372"></a>01372     }
<a name="l01373"></a>01373 
<a name="l01374"></a>01374       <span class="comment">/* &quot;additive&quot; case.  */</span>
<a name="l01375"></a>01375       <span class="keywordflow">if</span> (rcs-&gt;<a class="code" href="structrmap__com__set.html#ae2c4108060e5db6a5ae343cd660da884">additive</a> &amp;&amp; old)
<a name="l01376"></a>01376     {
<a name="l01377"></a>01377       merge = <a class="code" href="bgp__community_8c.html#a973ecafb48d259e461d935a0a6a94ea4">community_merge</a> (<a class="code" href="bgp__community_8c.html#ad93ae545ec0b6971e4cc5b1eb2fbd5eb">community_dup</a> (old), rcs-&gt;<a class="code" href="structrmap__com__set.html#ad9a3cc657de6eb82d07e30567302edf4">com</a>);
<a name="l01378"></a>01378       
<a name="l01379"></a>01379       <span class="comment">/* HACK: if the old community is not intern&#39;d, </span>
<a name="l01380"></a>01380 <span class="comment">           * we should free it here, or all reference to it may be lost.</span>
<a name="l01381"></a>01381 <span class="comment">           * Really need to cleanup attribute caching sometime.</span>
<a name="l01382"></a>01382 <span class="comment">           */</span>
<a name="l01383"></a>01383       <span class="keywordflow">if</span> (old-&gt;<a class="code" href="structcommunity.html#a52dd7a5a975af9d21ad9f93a91deb739">refcnt</a> == 0)
<a name="l01384"></a>01384         <a class="code" href="bgp__community_8c.html#a890bdfd2f7517c0fe7f30687d1d4d825">community_free</a> (old);
<a name="l01385"></a>01385       <span class="keyword">new</span> = <a class="code" href="bgp__community_8c.html#a7bab71e747c1164320fd14c061956516">community_uniq_sort</a> (merge);
<a name="l01386"></a>01386       <a class="code" href="bgp__community_8c.html#a890bdfd2f7517c0fe7f30687d1d4d825">community_free</a> (merge);
<a name="l01387"></a>01387     }
<a name="l01388"></a>01388       <span class="keywordflow">else</span>
<a name="l01389"></a>01389     <span class="keyword">new</span> = <a class="code" href="bgp__community_8c.html#ad93ae545ec0b6971e4cc5b1eb2fbd5eb">community_dup</a> (rcs-&gt;<a class="code" href="structrmap__com__set.html#ad9a3cc657de6eb82d07e30567302edf4">com</a>);
<a name="l01390"></a>01390       
<a name="l01391"></a>01391       <span class="comment">/* will be interned by caller if required */</span>
<a name="l01392"></a>01392       attr-&gt;<a class="code" href="structattr.html#ac892e1f95a0c26d39a47eb12d021072b">community</a> = <span class="keyword">new</span>;
<a name="l01393"></a>01393 
<a name="l01394"></a>01394       attr-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a> |= <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#aae424d4be52b9b65e6d1cb41c1145a4d">BGP_ATTR_COMMUNITIES</a>);
<a name="l01395"></a>01395     }
<a name="l01396"></a>01396 
<a name="l01397"></a>01397   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516a1215cf356f29000968d958c014b559d5">RMAP_OKAY</a>;
<a name="l01398"></a>01398 }
<a name="l01399"></a>01399 
<a name="l01400"></a>01400 <span class="comment">/* Compile function for set community. */</span>
<a name="l01401"></a>01401 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l01402"></a><a class="code" href="bgp__routemap_8c.html#a02b0743752276404f716af41dc3307e7">01402</a> <a class="code" href="bgp__routemap_8c.html#a02b0743752276404f716af41dc3307e7">route_set_community_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l01403"></a>01403 {
<a name="l01404"></a>01404   <span class="keyword">struct </span><a class="code" href="structrmap__com__set.html">rmap_com_set</a> *rcs;
<a name="l01405"></a>01405   <span class="keyword">struct </span><a class="code" href="structcommunity.html">community</a> *com = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01406"></a>01406   <span class="keywordtype">char</span> *sp;
<a name="l01407"></a>01407   <span class="keywordtype">int</span> additive = 0;
<a name="l01408"></a>01408   <span class="keywordtype">int</span> none = 0;
<a name="l01409"></a>01409   
<a name="l01410"></a>01410   <span class="keywordflow">if</span> (strcmp (arg, <span class="stringliteral">&quot;none&quot;</span>) == 0)
<a name="l01411"></a>01411     none = 1;
<a name="l01412"></a>01412   <span class="keywordflow">else</span>
<a name="l01413"></a>01413     {
<a name="l01414"></a>01414       sp = strstr (arg, <span class="stringliteral">&quot;additive&quot;</span>);
<a name="l01415"></a>01415 
<a name="l01416"></a>01416       <span class="keywordflow">if</span> (sp &amp;&amp; sp &gt; arg)
<a name="l01417"></a>01417     {
<a name="l01418"></a>01418       <span class="comment">/* &quot;additive&quot; keyworkd is included.  */</span>
<a name="l01419"></a>01419       additive = 1;
<a name="l01420"></a>01420       *(sp - 1) = <span class="charliteral">&#39;\0&#39;</span>;
<a name="l01421"></a>01421     }
<a name="l01422"></a>01422 
<a name="l01423"></a>01423       com = <a class="code" href="bgp__community_8c.html#ae6b14a28bd7622ffb1b9f5b20897e648">community_str2com</a> (arg);
<a name="l01424"></a>01424 
<a name="l01425"></a>01425       <span class="keywordflow">if</span> (additive)
<a name="l01426"></a>01426     *(sp - 1) = <span class="charliteral">&#39; &#39;</span>;
<a name="l01427"></a>01427 
<a name="l01428"></a>01428       <span class="keywordflow">if</span> (! com)
<a name="l01429"></a>01429     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01430"></a>01430     }
<a name="l01431"></a>01431   
<a name="l01432"></a>01432   rcs = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structrmap__com__set.html">rmap_com_set</a>));
<a name="l01433"></a>01433   rcs-&gt;<a class="code" href="structrmap__com__set.html#ad9a3cc657de6eb82d07e30567302edf4">com</a> = com;
<a name="l01434"></a>01434   rcs-&gt;<a class="code" href="structrmap__com__set.html#ae2c4108060e5db6a5ae343cd660da884">additive</a> = additive;
<a name="l01435"></a>01435   rcs-&gt;<a class="code" href="structrmap__com__set.html#a4ba144f2686395466b97aea5520d709b">none</a> = none;
<a name="l01436"></a>01436   
<a name="l01437"></a>01437   <span class="keywordflow">return</span> rcs;
<a name="l01438"></a>01438 }
<a name="l01439"></a>01439 
<a name="l01440"></a>01440 <span class="comment">/* Free function for set community. */</span>
<a name="l01441"></a>01441 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01442"></a><a class="code" href="bgp__routemap_8c.html#a10f25b4d763811fbfb87093722b6cd9b">01442</a> <a class="code" href="bgp__routemap_8c.html#a10f25b4d763811fbfb87093722b6cd9b">route_set_community_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l01443"></a>01443 {
<a name="l01444"></a>01444   <span class="keyword">struct </span><a class="code" href="structrmap__com__set.html">rmap_com_set</a> *rcs = rule;
<a name="l01445"></a>01445 
<a name="l01446"></a>01446   <span class="keywordflow">if</span> (rcs-&gt;<a class="code" href="structrmap__com__set.html#ad9a3cc657de6eb82d07e30567302edf4">com</a>)
<a name="l01447"></a>01447     <a class="code" href="bgp__community_8c.html#a890bdfd2f7517c0fe7f30687d1d4d825">community_free</a> (rcs-&gt;<a class="code" href="structrmap__com__set.html#ad9a3cc657de6eb82d07e30567302edf4">com</a>);
<a name="l01448"></a>01448   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rcs);
<a name="l01449"></a>01449 }
<a name="l01450"></a>01450 
<a name="l01451"></a>01451 <span class="comment">/* Set community rule structure. */</span>
<a name="l01452"></a><a class="code" href="bgp__routemap_8c.html#a385e7e07bfbe267a238876b33e497097">01452</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#a385e7e07bfbe267a238876b33e497097">route_set_community_cmd</a> = 
<a name="l01453"></a>01453 {
<a name="l01454"></a>01454   <span class="stringliteral">&quot;community&quot;</span>,
<a name="l01455"></a>01455   <a class="code" href="bgp__routemap_8c.html#aaab999ae1241908c4d2beb7e2c6d278c">route_set_community</a>,
<a name="l01456"></a>01456   <a class="code" href="bgp__routemap_8c.html#a02b0743752276404f716af41dc3307e7">route_set_community_compile</a>,
<a name="l01457"></a>01457   <a class="code" href="bgp__routemap_8c.html#a10f25b4d763811fbfb87093722b6cd9b">route_set_community_free</a>,
<a name="l01458"></a>01458 };
<a name="l01459"></a>01459 
<a name="l01460"></a>01460 <span class="comment">/* `set comm-list (&lt;1-99&gt;|&lt;100-500&gt;|WORD) delete&#39; */</span>
<a name="l01461"></a>01461 
<a name="l01462"></a>01462 <span class="comment">/* For community set mechanism. */</span>
<a name="l01463"></a>01463 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l01464"></a><a class="code" href="bgp__routemap_8c.html#a3a5e85b9633a072170bffa45a4e5d74a">01464</a> <a class="code" href="bgp__routemap_8c.html#a3a5e85b9633a072170bffa45a4e5d74a">route_set_community_delete</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>,
<a name="l01465"></a>01465                 <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l01466"></a>01466 {
<a name="l01467"></a>01467   <span class="keyword">struct </span><a class="code" href="structcommunity__list.html">community_list</a> *<a class="code" href="structlist.html">list</a>;
<a name="l01468"></a>01468   <span class="keyword">struct </span><a class="code" href="structcommunity.html">community</a> *merge;
<a name="l01469"></a>01469   <span class="keyword">struct </span><a class="code" href="structcommunity.html">community</a> *<span class="keyword">new</span>;
<a name="l01470"></a>01470   <span class="keyword">struct </span><a class="code" href="structcommunity.html">community</a> *old;
<a name="l01471"></a>01471   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *binfo;
<a name="l01472"></a>01472 
<a name="l01473"></a>01473   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l01474"></a>01474     {
<a name="l01475"></a>01475       <span class="keywordflow">if</span> (! rule)
<a name="l01476"></a>01476     <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516a1215cf356f29000968d958c014b559d5">RMAP_OKAY</a>;
<a name="l01477"></a>01477 
<a name="l01478"></a>01478       binfo = object;
<a name="l01479"></a>01479       list = <a class="code" href="bgp__clist_8c.html#a2c0159e743b11dc2143b7f74a65ce156">community_list_lookup</a> (<a class="code" href="bgp__clist_8h.html#a8ce0bedf381f9a751d2544b7b3bdcd4a">bgp_clist</a>, rule, <a class="code" href="bgp__clist_8h.html#a71bf5583c66d28746342ec73632efe06">COMMUNITY_LIST_MASTER</a>);
<a name="l01480"></a>01480       old = binfo-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#ac892e1f95a0c26d39a47eb12d021072b">community</a>;
<a name="l01481"></a>01481 
<a name="l01482"></a>01482       <span class="keywordflow">if</span> (list &amp;&amp; old)
<a name="l01483"></a>01483     {
<a name="l01484"></a>01484       merge = <a class="code" href="bgp__clist_8c.html#aaa3ebe16a5e105a177be4f76d40fcc69">community_list_match_delete</a> (<a class="code" href="bgp__community_8c.html#ad93ae545ec0b6971e4cc5b1eb2fbd5eb">community_dup</a> (old), list);
<a name="l01485"></a>01485       <span class="keyword">new</span> = <a class="code" href="bgp__community_8c.html#a7bab71e747c1164320fd14c061956516">community_uniq_sort</a> (merge);
<a name="l01486"></a>01486       <a class="code" href="bgp__community_8c.html#a890bdfd2f7517c0fe7f30687d1d4d825">community_free</a> (merge);
<a name="l01487"></a>01487 
<a name="l01488"></a>01488       <span class="keywordflow">if</span> (new-&gt;size == 0)
<a name="l01489"></a>01489         {
<a name="l01490"></a>01490           binfo-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#ac892e1f95a0c26d39a47eb12d021072b">community</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01491"></a>01491           binfo-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a> &amp;= ~<a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#aae424d4be52b9b65e6d1cb41c1145a4d">BGP_ATTR_COMMUNITIES</a>);
<a name="l01492"></a>01492           <a class="code" href="bgp__community_8c.html#a890bdfd2f7517c0fe7f30687d1d4d825">community_free</a> (<span class="keyword">new</span>);
<a name="l01493"></a>01493         }
<a name="l01494"></a>01494       <span class="keywordflow">else</span>
<a name="l01495"></a>01495         {
<a name="l01496"></a>01496           binfo-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#ac892e1f95a0c26d39a47eb12d021072b">community</a> = <span class="keyword">new</span>;
<a name="l01497"></a>01497           binfo-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a> |= <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#aae424d4be52b9b65e6d1cb41c1145a4d">BGP_ATTR_COMMUNITIES</a>);
<a name="l01498"></a>01498         }
<a name="l01499"></a>01499     }
<a name="l01500"></a>01500     }
<a name="l01501"></a>01501 
<a name="l01502"></a>01502   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516a1215cf356f29000968d958c014b559d5">RMAP_OKAY</a>;
<a name="l01503"></a>01503 }
<a name="l01504"></a>01504 
<a name="l01505"></a>01505 <span class="comment">/* Compile function for set community. */</span>
<a name="l01506"></a>01506 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l01507"></a><a class="code" href="bgp__routemap_8c.html#aa088356f06ad51e5b53dbcb19b391ff0">01507</a> <a class="code" href="bgp__routemap_8c.html#aa088356f06ad51e5b53dbcb19b391ff0">route_set_community_delete_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l01508"></a>01508 {
<a name="l01509"></a>01509   <span class="keywordtype">char</span> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
<a name="l01510"></a>01510   <span class="keywordtype">char</span> *<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>;
<a name="l01511"></a>01511   <span class="keywordtype">int</span> len;
<a name="l01512"></a>01512 
<a name="l01513"></a>01513   p = strchr (arg, <span class="charliteral">&#39; &#39;</span>);
<a name="l01514"></a>01514   <span class="keywordflow">if</span> (p)
<a name="l01515"></a>01515     {
<a name="l01516"></a>01516       len = p - arg;
<a name="l01517"></a>01517       str = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, len + 1);
<a name="l01518"></a>01518       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (str, arg, len);
<a name="l01519"></a>01519     }
<a name="l01520"></a>01520   <span class="keywordflow">else</span>
<a name="l01521"></a>01521     str = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01522"></a>01522 
<a name="l01523"></a>01523   <span class="keywordflow">return</span> <a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>;
<a name="l01524"></a>01524 }
<a name="l01525"></a>01525 
<a name="l01526"></a>01526 <span class="comment">/* Free function for set community. */</span>
<a name="l01527"></a>01527 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01528"></a><a class="code" href="bgp__routemap_8c.html#a892cf3a93c424bd716c5259d125c7c7e">01528</a> <a class="code" href="bgp__routemap_8c.html#a892cf3a93c424bd716c5259d125c7c7e">route_set_community_delete_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l01529"></a>01529 {
<a name="l01530"></a>01530   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l01531"></a>01531 }
<a name="l01532"></a>01532 
<a name="l01533"></a>01533 <span class="comment">/* Set community rule structure. */</span>
<a name="l01534"></a><a class="code" href="bgp__routemap_8c.html#a4927d9a619f67ea616f05a74e8e1f46e">01534</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#a4927d9a619f67ea616f05a74e8e1f46e">route_set_community_delete_cmd</a> =
<a name="l01535"></a>01535 {
<a name="l01536"></a>01536   <span class="stringliteral">&quot;comm-list&quot;</span>,
<a name="l01537"></a>01537   <a class="code" href="bgp__routemap_8c.html#a3a5e85b9633a072170bffa45a4e5d74a">route_set_community_delete</a>,
<a name="l01538"></a>01538   <a class="code" href="bgp__routemap_8c.html#aa088356f06ad51e5b53dbcb19b391ff0">route_set_community_delete_compile</a>,
<a name="l01539"></a>01539   <a class="code" href="bgp__routemap_8c.html#a892cf3a93c424bd716c5259d125c7c7e">route_set_community_delete_free</a>,
<a name="l01540"></a>01540 };
<a name="l01541"></a>01541 
<a name="l01542"></a>01542 <span class="comment">/* `set extcommunity rt COMMUNITY&#39; */</span>
<a name="l01543"></a>01543 
<a name="l01544"></a>01544 <span class="comment">/* For community set mechanism. */</span>
<a name="l01545"></a>01545 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l01546"></a><a class="code" href="bgp__routemap_8c.html#a502008dd20b616797477e3bab8c09c32">01546</a> <a class="code" href="bgp__routemap_8c.html#a502008dd20b616797477e3bab8c09c32">route_set_ecommunity_rt</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>, 
<a name="l01547"></a>01547              <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l01548"></a>01548 {
<a name="l01549"></a>01549   <span class="keyword">struct </span><a class="code" href="structecommunity.html">ecommunity</a> *ecom;
<a name="l01550"></a>01550   <span class="keyword">struct </span><a class="code" href="structecommunity.html">ecommunity</a> *new_ecom;
<a name="l01551"></a>01551   <span class="keyword">struct </span><a class="code" href="structecommunity.html">ecommunity</a> *old_ecom;
<a name="l01552"></a>01552   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *<a class="code" href="structbgp__info.html">bgp_info</a>;
<a name="l01553"></a>01553 
<a name="l01554"></a>01554   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l01555"></a>01555     {
<a name="l01556"></a>01556       ecom = rule;
<a name="l01557"></a>01557       bgp_info = object;
<a name="l01558"></a>01558     
<a name="l01559"></a>01559       <span class="keywordflow">if</span> (! ecom)
<a name="l01560"></a>01560     <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516a1215cf356f29000968d958c014b559d5">RMAP_OKAY</a>;
<a name="l01561"></a>01561     
<a name="l01562"></a>01562       <span class="comment">/* We assume additive for Extended Community. */</span>
<a name="l01563"></a>01563       old_ecom = (<a class="code" href="bgp__attr_8c.html#a31ef3828cd7a1375f7b7dfe02aab705f">bgp_attr_extra_get</a> (bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>))-&gt;<a class="code" href="structecommunity.html">ecommunity</a>;
<a name="l01564"></a>01564 
<a name="l01565"></a>01565       <span class="keywordflow">if</span> (old_ecom)
<a name="l01566"></a>01566     new_ecom = <a class="code" href="bgp__ecommunity_8c.html#acaf75691d0751ca4418b498415cd0aec">ecommunity_merge</a> (<a class="code" href="bgp__ecommunity_8c.html#a7b33bca36537fc5e96127cfb7e3f5601">ecommunity_dup</a> (old_ecom), ecom);
<a name="l01567"></a>01567       <span class="keywordflow">else</span>
<a name="l01568"></a>01568     new_ecom = <a class="code" href="bgp__ecommunity_8c.html#a7b33bca36537fc5e96127cfb7e3f5601">ecommunity_dup</a> (ecom);
<a name="l01569"></a>01569 
<a name="l01570"></a>01570       bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>-&gt;<a class="code" href="structattr__extra.html#a406b2e10deaef8dadf35a1436d053244">ecommunity</a> = new_ecom;
<a name="l01571"></a>01571 
<a name="l01572"></a>01572       <span class="keywordflow">if</span> (old_ecom)
<a name="l01573"></a>01573     <a class="code" href="bgp__ecommunity_8c.html#a56f7dda58051cbec7fd56238196dcfc2">ecommunity_free</a> (old_ecom);
<a name="l01574"></a>01574 
<a name="l01575"></a>01575       bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a> |= <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#a95748968a0a411dcc05643ffc4f61c6f">BGP_ATTR_EXT_COMMUNITIES</a>);
<a name="l01576"></a>01576     }
<a name="l01577"></a>01577   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516a1215cf356f29000968d958c014b559d5">RMAP_OKAY</a>;
<a name="l01578"></a>01578 }
<a name="l01579"></a>01579 
<a name="l01580"></a>01580 <span class="comment">/* Compile function for set community. */</span>
<a name="l01581"></a>01581 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l01582"></a><a class="code" href="bgp__routemap_8c.html#a7a0a40e078efb24a652c0a981ef4d27f">01582</a> <a class="code" href="bgp__routemap_8c.html#a7a0a40e078efb24a652c0a981ef4d27f">route_set_ecommunity_rt_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l01583"></a>01583 {
<a name="l01584"></a>01584   <span class="keyword">struct </span><a class="code" href="structecommunity.html">ecommunity</a> *ecom;
<a name="l01585"></a>01585 
<a name="l01586"></a>01586   ecom = <a class="code" href="bgp__ecommunity_8c.html#a6da70afe62091b6c7ead2e602cfc03fd">ecommunity_str2com</a> (arg, <a class="code" href="bgp__ecommunity_8h.html#aec21b73c39c6171daf21da2bc83d8b80">ECOMMUNITY_ROUTE_TARGET</a>, 0);
<a name="l01587"></a>01587   <span class="keywordflow">if</span> (! ecom)
<a name="l01588"></a>01588     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01589"></a>01589   <span class="keywordflow">return</span> ecom;
<a name="l01590"></a>01590 }
<a name="l01591"></a>01591 
<a name="l01592"></a>01592 <span class="comment">/* Free function for set community. */</span>
<a name="l01593"></a>01593 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01594"></a><a class="code" href="bgp__routemap_8c.html#afcca7db183d69d7274dab00ba47f7d38">01594</a> <a class="code" href="bgp__routemap_8c.html#afcca7db183d69d7274dab00ba47f7d38">route_set_ecommunity_rt_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l01595"></a>01595 {
<a name="l01596"></a>01596   <span class="keyword">struct </span><a class="code" href="structecommunity.html">ecommunity</a> *ecom = rule;
<a name="l01597"></a>01597   <a class="code" href="bgp__ecommunity_8c.html#a56f7dda58051cbec7fd56238196dcfc2">ecommunity_free</a> (ecom);
<a name="l01598"></a>01598 }
<a name="l01599"></a>01599 
<a name="l01600"></a>01600 <span class="comment">/* Set community rule structure. */</span>
<a name="l01601"></a><a class="code" href="bgp__routemap_8c.html#ac6a1e889f7665f65d88dbb21deb9cb86">01601</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#ac6a1e889f7665f65d88dbb21deb9cb86">route_set_ecommunity_rt_cmd</a> = 
<a name="l01602"></a>01602 {
<a name="l01603"></a>01603   <span class="stringliteral">&quot;extcommunity rt&quot;</span>,
<a name="l01604"></a>01604   <a class="code" href="bgp__routemap_8c.html#a502008dd20b616797477e3bab8c09c32">route_set_ecommunity_rt</a>,
<a name="l01605"></a>01605   <a class="code" href="bgp__routemap_8c.html#a7a0a40e078efb24a652c0a981ef4d27f">route_set_ecommunity_rt_compile</a>,
<a name="l01606"></a>01606   <a class="code" href="bgp__routemap_8c.html#afcca7db183d69d7274dab00ba47f7d38">route_set_ecommunity_rt_free</a>,
<a name="l01607"></a>01607 };
<a name="l01608"></a>01608 
<a name="l01609"></a>01609 <span class="comment">/* `set extcommunity soo COMMUNITY&#39; */</span>
<a name="l01610"></a>01610 
<a name="l01611"></a>01611 <span class="comment">/* For community set mechanism. */</span>
<a name="l01612"></a>01612 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l01613"></a><a class="code" href="bgp__routemap_8c.html#a2bc1c9613b404f1b0f26ca6f03a44fd4">01613</a> <a class="code" href="bgp__routemap_8c.html#a2bc1c9613b404f1b0f26ca6f03a44fd4">route_set_ecommunity_soo</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>, 
<a name="l01614"></a>01614              <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l01615"></a>01615 {
<a name="l01616"></a>01616   <span class="keyword">struct </span><a class="code" href="structecommunity.html">ecommunity</a> *ecom;
<a name="l01617"></a>01617   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *<a class="code" href="structbgp__info.html">bgp_info</a>;
<a name="l01618"></a>01618 
<a name="l01619"></a>01619   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l01620"></a>01620     {
<a name="l01621"></a>01621       ecom = rule;
<a name="l01622"></a>01622       bgp_info = object;
<a name="l01623"></a>01623     
<a name="l01624"></a>01624       <span class="keywordflow">if</span> (! ecom)
<a name="l01625"></a>01625     <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516a1215cf356f29000968d958c014b559d5">RMAP_OKAY</a>;
<a name="l01626"></a>01626     
<a name="l01627"></a>01627       bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a> |= <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#a95748968a0a411dcc05643ffc4f61c6f">BGP_ATTR_EXT_COMMUNITIES</a>);
<a name="l01628"></a>01628       (<a class="code" href="bgp__attr_8c.html#a31ef3828cd7a1375f7b7dfe02aab705f">bgp_attr_extra_get</a> (bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>))-&gt;<a class="code" href="structecommunity.html">ecommunity</a> = <a class="code" href="bgp__ecommunity_8c.html#a7b33bca36537fc5e96127cfb7e3f5601">ecommunity_dup</a> (ecom);
<a name="l01629"></a>01629     }
<a name="l01630"></a>01630   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516a1215cf356f29000968d958c014b559d5">RMAP_OKAY</a>;
<a name="l01631"></a>01631 }
<a name="l01632"></a>01632 
<a name="l01633"></a>01633 <span class="comment">/* Compile function for set community. */</span>
<a name="l01634"></a>01634 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l01635"></a><a class="code" href="bgp__routemap_8c.html#a993942cbc48c892e6f9f673485981f24">01635</a> <a class="code" href="bgp__routemap_8c.html#a993942cbc48c892e6f9f673485981f24">route_set_ecommunity_soo_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l01636"></a>01636 {
<a name="l01637"></a>01637   <span class="keyword">struct </span><a class="code" href="structecommunity.html">ecommunity</a> *ecom;
<a name="l01638"></a>01638 
<a name="l01639"></a>01639   ecom = <a class="code" href="bgp__ecommunity_8c.html#a6da70afe62091b6c7ead2e602cfc03fd">ecommunity_str2com</a> (arg, <a class="code" href="bgp__ecommunity_8h.html#afc5aa27c7ca7236b4ff369bf01828f73">ECOMMUNITY_SITE_ORIGIN</a>, 0);
<a name="l01640"></a>01640   <span class="keywordflow">if</span> (! ecom)
<a name="l01641"></a>01641     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01642"></a>01642   
<a name="l01643"></a>01643   <span class="keywordflow">return</span> ecom;
<a name="l01644"></a>01644 }
<a name="l01645"></a>01645 
<a name="l01646"></a>01646 <span class="comment">/* Free function for set community. */</span>
<a name="l01647"></a>01647 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01648"></a><a class="code" href="bgp__routemap_8c.html#a16939d5a3c779725543e3cfc245a8fd7">01648</a> <a class="code" href="bgp__routemap_8c.html#a16939d5a3c779725543e3cfc245a8fd7">route_set_ecommunity_soo_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l01649"></a>01649 {
<a name="l01650"></a>01650   <span class="keyword">struct </span><a class="code" href="structecommunity.html">ecommunity</a> *ecom = rule;
<a name="l01651"></a>01651   <a class="code" href="bgp__ecommunity_8c.html#a56f7dda58051cbec7fd56238196dcfc2">ecommunity_free</a> (ecom);
<a name="l01652"></a>01652 }
<a name="l01653"></a>01653 
<a name="l01654"></a>01654 <span class="comment">/* Set community rule structure. */</span>
<a name="l01655"></a><a class="code" href="bgp__routemap_8c.html#af9560e03702fae4f868b803d7916edaf">01655</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#af9560e03702fae4f868b803d7916edaf">route_set_ecommunity_soo_cmd</a> = 
<a name="l01656"></a>01656 {
<a name="l01657"></a>01657   <span class="stringliteral">&quot;extcommunity soo&quot;</span>,
<a name="l01658"></a>01658   <a class="code" href="bgp__routemap_8c.html#a2bc1c9613b404f1b0f26ca6f03a44fd4">route_set_ecommunity_soo</a>,
<a name="l01659"></a>01659   <a class="code" href="bgp__routemap_8c.html#a993942cbc48c892e6f9f673485981f24">route_set_ecommunity_soo_compile</a>,
<a name="l01660"></a>01660   <a class="code" href="bgp__routemap_8c.html#a16939d5a3c779725543e3cfc245a8fd7">route_set_ecommunity_soo_free</a>,
<a name="l01661"></a>01661 };
<a name="l01662"></a>01662 
<a name="l01663"></a>01663 <span class="comment">/* `set origin ORIGIN&#39; */</span>
<a name="l01664"></a>01664 
<a name="l01665"></a>01665 <span class="comment">/* For origin set. */</span>
<a name="l01666"></a>01666 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l01667"></a><a class="code" href="bgp__routemap_8c.html#adf9275ee818aaee194391010cf15d945">01667</a> <a class="code" href="bgp__routemap_8c.html#adf9275ee818aaee194391010cf15d945">route_set_origin</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>, <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l01668"></a>01668 {
<a name="l01669"></a>01669   u_char *origin;
<a name="l01670"></a>01670   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *<a class="code" href="structbgp__info.html">bgp_info</a>;
<a name="l01671"></a>01671 
<a name="l01672"></a>01672   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l01673"></a>01673     {
<a name="l01674"></a>01674       origin = rule;
<a name="l01675"></a>01675       bgp_info = object;
<a name="l01676"></a>01676     
<a name="l01677"></a>01677       bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a17e152c15e3bd7a54475086d762e76ec">origin</a> = *origin;
<a name="l01678"></a>01678     }
<a name="l01679"></a>01679 
<a name="l01680"></a>01680   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516a1215cf356f29000968d958c014b559d5">RMAP_OKAY</a>;
<a name="l01681"></a>01681 }
<a name="l01682"></a>01682 
<a name="l01683"></a>01683 <span class="comment">/* Compile function for origin set. */</span>
<a name="l01684"></a>01684 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l01685"></a><a class="code" href="bgp__routemap_8c.html#ab5c28f63f44041a7a5ea07a77e7dc56c">01685</a> <a class="code" href="bgp__routemap_8c.html#ab5c28f63f44041a7a5ea07a77e7dc56c">route_set_origin_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l01686"></a>01686 {
<a name="l01687"></a>01687   u_char *origin;
<a name="l01688"></a>01688 
<a name="l01689"></a>01689   origin = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, <span class="keyword">sizeof</span> (u_char));
<a name="l01690"></a>01690 
<a name="l01691"></a>01691   <span class="keywordflow">if</span> (strcmp (arg, <span class="stringliteral">&quot;igp&quot;</span>) == 0)
<a name="l01692"></a>01692     *origin = 0;
<a name="l01693"></a>01693   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (strcmp (arg, <span class="stringliteral">&quot;egp&quot;</span>) == 0)
<a name="l01694"></a>01694     *origin = 1;
<a name="l01695"></a>01695   <span class="keywordflow">else</span>
<a name="l01696"></a>01696     *origin = 2;
<a name="l01697"></a>01697 
<a name="l01698"></a>01698   <span class="keywordflow">return</span> origin;
<a name="l01699"></a>01699 }
<a name="l01700"></a>01700 
<a name="l01701"></a>01701 <span class="comment">/* Compile function for origin set. */</span>
<a name="l01702"></a>01702 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01703"></a><a class="code" href="bgp__routemap_8c.html#a85aae25d83bb7c01ddd87944d92fb0d6">01703</a> <a class="code" href="bgp__routemap_8c.html#a85aae25d83bb7c01ddd87944d92fb0d6">route_set_origin_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l01704"></a>01704 {
<a name="l01705"></a>01705   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l01706"></a>01706 }
<a name="l01707"></a>01707 
<a name="l01708"></a>01708 <span class="comment">/* Set metric rule structure. */</span>
<a name="l01709"></a><a class="code" href="bgp__routemap_8c.html#a3b04119e2310b467b9dc381a3d9cc28d">01709</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#a3b04119e2310b467b9dc381a3d9cc28d">route_set_origin_cmd</a> = 
<a name="l01710"></a>01710 {
<a name="l01711"></a>01711   <span class="stringliteral">&quot;origin&quot;</span>,
<a name="l01712"></a>01712   <a class="code" href="bgp__routemap_8c.html#adf9275ee818aaee194391010cf15d945">route_set_origin</a>,
<a name="l01713"></a>01713   <a class="code" href="bgp__routemap_8c.html#ab5c28f63f44041a7a5ea07a77e7dc56c">route_set_origin_compile</a>,
<a name="l01714"></a>01714   <a class="code" href="bgp__routemap_8c.html#a85aae25d83bb7c01ddd87944d92fb0d6">route_set_origin_free</a>,
<a name="l01715"></a>01715 };
<a name="l01716"></a>01716 
<a name="l01717"></a>01717 <span class="comment">/* `set atomic-aggregate&#39; */</span>
<a name="l01718"></a>01718 
<a name="l01719"></a>01719 <span class="comment">/* For atomic aggregate set. */</span>
<a name="l01720"></a>01720 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l01721"></a><a class="code" href="bgp__routemap_8c.html#a48f4920a0acdba0c80e8a112dcdec7c9">01721</a> <a class="code" href="bgp__routemap_8c.html#a48f4920a0acdba0c80e8a112dcdec7c9">route_set_atomic_aggregate</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>,
<a name="l01722"></a>01722                 <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l01723"></a>01723 {
<a name="l01724"></a>01724   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *<a class="code" href="structbgp__info.html">bgp_info</a>;
<a name="l01725"></a>01725 
<a name="l01726"></a>01726   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l01727"></a>01727     {
<a name="l01728"></a>01728       bgp_info = object;
<a name="l01729"></a>01729       bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a> |= <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#ac9dd85ed3793e51210453da60a8734b9">BGP_ATTR_ATOMIC_AGGREGATE</a>);
<a name="l01730"></a>01730     }
<a name="l01731"></a>01731 
<a name="l01732"></a>01732   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516a1215cf356f29000968d958c014b559d5">RMAP_OKAY</a>;
<a name="l01733"></a>01733 }
<a name="l01734"></a>01734 
<a name="l01735"></a>01735 <span class="comment">/* Compile function for atomic aggregate. */</span>
<a name="l01736"></a>01736 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l01737"></a><a class="code" href="bgp__routemap_8c.html#a83062709bc60da242d9ad0053d203691">01737</a> <a class="code" href="bgp__routemap_8c.html#a83062709bc60da242d9ad0053d203691">route_set_atomic_aggregate_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l01738"></a>01738 {
<a name="l01739"></a>01739   <span class="keywordflow">return</span> (<span class="keywordtype">void</span> *)1;
<a name="l01740"></a>01740 }
<a name="l01741"></a>01741 
<a name="l01742"></a>01742 <span class="comment">/* Compile function for atomic aggregate. */</span>
<a name="l01743"></a>01743 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01744"></a><a class="code" href="bgp__routemap_8c.html#a561ac57a0045f7b22584b8102e2a7843">01744</a> <a class="code" href="bgp__routemap_8c.html#a561ac57a0045f7b22584b8102e2a7843">route_set_atomic_aggregate_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l01745"></a>01745 {
<a name="l01746"></a>01746   <span class="keywordflow">return</span>;
<a name="l01747"></a>01747 }
<a name="l01748"></a>01748 
<a name="l01749"></a>01749 <span class="comment">/* Set atomic aggregate rule structure. */</span>
<a name="l01750"></a><a class="code" href="bgp__routemap_8c.html#ab6c4c4eb41cb70e4cdad00997def3783">01750</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#ab6c4c4eb41cb70e4cdad00997def3783">route_set_atomic_aggregate_cmd</a> = 
<a name="l01751"></a>01751 {
<a name="l01752"></a>01752   <span class="stringliteral">&quot;atomic-aggregate&quot;</span>,
<a name="l01753"></a>01753   <a class="code" href="bgp__routemap_8c.html#a48f4920a0acdba0c80e8a112dcdec7c9">route_set_atomic_aggregate</a>,
<a name="l01754"></a>01754   <a class="code" href="bgp__routemap_8c.html#a83062709bc60da242d9ad0053d203691">route_set_atomic_aggregate_compile</a>,
<a name="l01755"></a>01755   <a class="code" href="bgp__routemap_8c.html#a561ac57a0045f7b22584b8102e2a7843">route_set_atomic_aggregate_free</a>,
<a name="l01756"></a>01756 };
<a name="l01757"></a>01757 
<a name="l01758"></a>01758 <span class="comment">/* `set aggregator as AS A.B.C.D&#39; */</span>
<a name="l01759"></a><a class="code" href="structaggregator.html">01759</a> <span class="keyword">struct </span><a class="code" href="structaggregator.html">aggregator</a>
<a name="l01760"></a>01760 {
<a name="l01761"></a><a class="code" href="structaggregator.html#ad26161bb4d857c0cbcef42abb42bd9df">01761</a>   <a class="code" href="bgpd_8h.html#ae54756b75cc699532543e4e2214c1c57">as_t</a> <a class="code" href="structaggregator.html#ad26161bb4d857c0cbcef42abb42bd9df">as</a>;
<a name="l01762"></a><a class="code" href="structaggregator.html#a8f11ca8e4d54747c85bf99b6440a70b5">01762</a>   <span class="keyword">struct </span>in_addr <a class="code" href="structaggregator.html#a8f11ca8e4d54747c85bf99b6440a70b5">address</a>;
<a name="l01763"></a>01763 };
<a name="l01764"></a>01764 
<a name="l01765"></a>01765 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l01766"></a><a class="code" href="bgp__routemap_8c.html#ae8ee002d8c8800a2fe1b476d411e19af">01766</a> <a class="code" href="bgp__routemap_8c.html#ae8ee002d8c8800a2fe1b476d411e19af">route_set_aggregator_as</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>, 
<a name="l01767"></a>01767              <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l01768"></a>01768 {
<a name="l01769"></a>01769   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *<a class="code" href="structbgp__info.html">bgp_info</a>;
<a name="l01770"></a>01770   <span class="keyword">struct </span><a class="code" href="structaggregator.html">aggregator</a> *<a class="code" href="structaggregator.html">aggregator</a>;
<a name="l01771"></a>01771   <span class="keyword">struct </span><a class="code" href="structattr__extra.html">attr_extra</a> *ae;
<a name="l01772"></a>01772 
<a name="l01773"></a>01773   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l01774"></a>01774     {
<a name="l01775"></a>01775       bgp_info = object;
<a name="l01776"></a>01776       aggregator = rule;
<a name="l01777"></a>01777       ae = <a class="code" href="bgp__attr_8c.html#a31ef3828cd7a1375f7b7dfe02aab705f">bgp_attr_extra_get</a> (bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>);
<a name="l01778"></a>01778       
<a name="l01779"></a>01779       ae-&gt;<a class="code" href="structattr__extra.html#af91c71fee1beb30ae9f0d878f508bfbc">aggregator_as</a> = aggregator-&gt;<a class="code" href="structaggregator.html#ad26161bb4d857c0cbcef42abb42bd9df">as</a>;
<a name="l01780"></a>01780       ae-&gt;<a class="code" href="structattr__extra.html#a14c33c8295683eff20b2964e4b321622">aggregator_addr</a> = aggregator-&gt;<a class="code" href="structaggregator.html#a8f11ca8e4d54747c85bf99b6440a70b5">address</a>;
<a name="l01781"></a>01781       bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a> |= <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#ae1607a30c55c82c55f3b12fdcdf1dc8c">BGP_ATTR_AGGREGATOR</a>);
<a name="l01782"></a>01782     }
<a name="l01783"></a>01783 
<a name="l01784"></a>01784   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516a1215cf356f29000968d958c014b559d5">RMAP_OKAY</a>;
<a name="l01785"></a>01785 }
<a name="l01786"></a>01786 
<a name="l01787"></a>01787 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l01788"></a><a class="code" href="bgp__routemap_8c.html#a20c45a17b5b104bf49322152c856b500">01788</a> <a class="code" href="bgp__routemap_8c.html#a20c45a17b5b104bf49322152c856b500">route_set_aggregator_as_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l01789"></a>01789 {
<a name="l01790"></a>01790   <span class="keyword">struct </span><a class="code" href="structaggregator.html">aggregator</a> *<a class="code" href="structaggregator.html">aggregator</a>;
<a name="l01791"></a>01791   <span class="keywordtype">char</span> <a class="code" href="structaggregator.html#ad26161bb4d857c0cbcef42abb42bd9df">as</a>[10];
<a name="l01792"></a>01792   <span class="keywordtype">char</span> <a class="code" href="structaggregator.html#a8f11ca8e4d54747c85bf99b6440a70b5">address</a>[20];
<a name="l01793"></a>01793 
<a name="l01794"></a>01794   aggregator = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> aggregator));
<a name="l01795"></a>01795   sscanf (arg, <span class="stringliteral">&quot;%s %s&quot;</span>, as, address);
<a name="l01796"></a>01796 
<a name="l01797"></a>01797   aggregator-&gt;<a class="code" href="structaggregator.html#ad26161bb4d857c0cbcef42abb42bd9df">as</a> = strtoul (as, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 10);
<a name="l01798"></a>01798   <a class="code" href="sockunion_8c.html#a4203367afaacee3fa5cc1626b2ef63c0">inet_aton</a> (address, &amp;aggregator-&gt;<a class="code" href="structaggregator.html#a8f11ca8e4d54747c85bf99b6440a70b5">address</a>);
<a name="l01799"></a>01799 
<a name="l01800"></a>01800   <span class="keywordflow">return</span> aggregator;
<a name="l01801"></a>01801 }
<a name="l01802"></a>01802 
<a name="l01803"></a>01803 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01804"></a><a class="code" href="bgp__routemap_8c.html#a51019fb2284e11ff119d98ef033fd95c">01804</a> <a class="code" href="bgp__routemap_8c.html#a51019fb2284e11ff119d98ef033fd95c">route_set_aggregator_as_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l01805"></a>01805 {
<a name="l01806"></a>01806   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l01807"></a>01807 }
<a name="l01808"></a>01808 
<a name="l01809"></a><a class="code" href="bgp__routemap_8c.html#a0a900567d56041ebf0acc3ac9e15b757">01809</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#a0a900567d56041ebf0acc3ac9e15b757">route_set_aggregator_as_cmd</a> = 
<a name="l01810"></a>01810 {
<a name="l01811"></a>01811   <span class="stringliteral">&quot;aggregator as&quot;</span>,
<a name="l01812"></a>01812   <a class="code" href="bgp__routemap_8c.html#ae8ee002d8c8800a2fe1b476d411e19af">route_set_aggregator_as</a>,
<a name="l01813"></a>01813   <a class="code" href="bgp__routemap_8c.html#a20c45a17b5b104bf49322152c856b500">route_set_aggregator_as_compile</a>,
<a name="l01814"></a>01814   <a class="code" href="bgp__routemap_8c.html#a51019fb2284e11ff119d98ef033fd95c">route_set_aggregator_as_free</a>,
<a name="l01815"></a>01815 };
<a name="l01816"></a>01816 
<a name="l01817"></a>01817 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l01818"></a>01818 <span class="preprocessor"></span><span class="comment">/* `match ipv6 address IP_ACCESS_LIST&#39; */</span>
<a name="l01819"></a>01819 
<a name="l01820"></a>01820 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l01821"></a>01821 route_match_ipv6_address (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>, 
<a name="l01822"></a>01822               <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l01823"></a>01823 {
<a name="l01824"></a>01824   <span class="keyword">struct </span><a class="code" href="structaccess__list.html">access_list</a> *alist;
<a name="l01825"></a>01825 
<a name="l01826"></a>01826   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l01827"></a>01827     {
<a name="l01828"></a>01828       alist = <a class="code" href="filter_8c.html#a8cb65cd01015f6673c632cb5b8714b3e">access_list_lookup</a> (<a class="code" href="zebra_8h.html#ad10f30457e426e1d269466d3b6603c3c">AFI_IP6</a>, (<span class="keywordtype">char</span> *) rule);
<a name="l01829"></a>01829       <span class="keywordflow">if</span> (alist == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01830"></a>01830     <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l01831"></a>01831     
<a name="l01832"></a>01832       <span class="keywordflow">return</span> (<a class="code" href="filter_8c.html#a5565f487c65e2bf0308c7fd529f121a0">access_list_apply</a> (alist, prefix) == <a class="code" href="filter_8h.html#ab3b7281956317556f846daaebf75de72a898abadf6cc2f9d27780782f09d3a3e3">FILTER_DENY</a> ?
<a name="l01833"></a>01833           <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a> : <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>);
<a name="l01834"></a>01834     }
<a name="l01835"></a>01835   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l01836"></a>01836 }
<a name="l01837"></a>01837 
<a name="l01838"></a>01838 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l01839"></a>01839 route_match_ipv6_address_compile (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l01840"></a>01840 {
<a name="l01841"></a>01841   <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, arg);
<a name="l01842"></a>01842 }
<a name="l01843"></a>01843 
<a name="l01844"></a>01844 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01845"></a>01845 route_match_ipv6_address_free (<span class="keywordtype">void</span> *rule)
<a name="l01846"></a>01846 {
<a name="l01847"></a>01847   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l01848"></a>01848 }
<a name="l01849"></a>01849 
<a name="l01850"></a>01850 <span class="comment">/* Route map commands for ip address matching. */</span>
<a name="l01851"></a>01851 <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> route_match_ipv6_address_cmd =
<a name="l01852"></a>01852 {
<a name="l01853"></a>01853   <span class="stringliteral">&quot;ipv6 address&quot;</span>,
<a name="l01854"></a>01854   route_match_ipv6_address,
<a name="l01855"></a>01855   route_match_ipv6_address_compile,
<a name="l01856"></a>01856   route_match_ipv6_address_free
<a name="l01857"></a>01857 };
<a name="l01858"></a>01858 
<a name="l01859"></a>01859 <span class="comment">/* `match ipv6 next-hop IP_ADDRESS&#39; */</span>
<a name="l01860"></a>01860 
<a name="l01861"></a>01861 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l01862"></a>01862 route_match_ipv6_next_hop (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> prefix *prefix, 
<a name="l01863"></a>01863                <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> type, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l01864"></a>01864 {
<a name="l01865"></a>01865   <span class="keyword">struct </span>in6_addr *addr;
<a name="l01866"></a>01866   <span class="keyword">struct </span><a class="code" href="structbgp__info.html">bgp_info</a> *<a class="code" href="structbgp__info.html">bgp_info</a>;
<a name="l01867"></a>01867 
<a name="l01868"></a>01868   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l01869"></a>01869     {
<a name="l01870"></a>01870       addr = rule;
<a name="l01871"></a>01871       bgp_info = object;
<a name="l01872"></a>01872       
<a name="l01873"></a>01873       <span class="keywordflow">if</span> (!bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>)
<a name="l01874"></a>01874         <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l01875"></a>01875       
<a name="l01876"></a>01876       <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a5f1eaa85b153050a498dacc958ab8283">IPV6_ADDR_SAME</a> (&amp;bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>-&gt;mp_nexthop_global, rule))
<a name="l01877"></a>01877     <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>;
<a name="l01878"></a>01878 
<a name="l01879"></a>01879       <span class="keywordflow">if</span> (bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>-&gt;<a class="code" href="structattr__extra.html#aa9572231b6d45822cd1af557583cdba5">mp_nexthop_len</a> == 32 &amp;&amp;
<a name="l01880"></a>01880       <a class="code" href="prefix_8h.html#a5f1eaa85b153050a498dacc958ab8283">IPV6_ADDR_SAME</a> (&amp;bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>-&gt;mp_nexthop_local, rule))
<a name="l01881"></a>01881     <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>;
<a name="l01882"></a>01882 
<a name="l01883"></a>01883       <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l01884"></a>01884     }
<a name="l01885"></a>01885 
<a name="l01886"></a>01886   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l01887"></a>01887 }
<a name="l01888"></a>01888 
<a name="l01889"></a>01889 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l01890"></a>01890 route_match_ipv6_next_hop_compile (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l01891"></a>01891 {
<a name="l01892"></a>01892   <span class="keyword">struct </span>in6_addr *address;
<a name="l01893"></a>01893   <span class="keywordtype">int</span> ret;
<a name="l01894"></a>01894 
<a name="l01895"></a>01895   address = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> in6_addr));
<a name="l01896"></a>01896 
<a name="l01897"></a>01897   ret = <a class="code" href="sockunion_8c.html#ac13c2042641ea5031bc7e244e8061b84">inet_pton</a> (AF_INET6, arg, address);
<a name="l01898"></a>01898   <span class="keywordflow">if</span> (!ret)
<a name="l01899"></a>01899     {
<a name="l01900"></a>01900       <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, address);
<a name="l01901"></a>01901       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01902"></a>01902     }
<a name="l01903"></a>01903 
<a name="l01904"></a>01904   <span class="keywordflow">return</span> address;
<a name="l01905"></a>01905 }
<a name="l01906"></a>01906 
<a name="l01907"></a>01907 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01908"></a>01908 route_match_ipv6_next_hop_free (<span class="keywordtype">void</span> *rule)
<a name="l01909"></a>01909 {
<a name="l01910"></a>01910   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l01911"></a>01911 }
<a name="l01912"></a>01912 
<a name="l01913"></a>01913 <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> route_match_ipv6_next_hop_cmd =
<a name="l01914"></a>01914 {
<a name="l01915"></a>01915   <span class="stringliteral">&quot;ipv6 next-hop&quot;</span>,
<a name="l01916"></a>01916   route_match_ipv6_next_hop,
<a name="l01917"></a>01917   route_match_ipv6_next_hop_compile,
<a name="l01918"></a>01918   route_match_ipv6_next_hop_free
<a name="l01919"></a>01919 };
<a name="l01920"></a>01920 
<a name="l01921"></a>01921 <span class="comment">/* `match ipv6 address prefix-list PREFIX_LIST&#39; */</span>
<a name="l01922"></a>01922 
<a name="l01923"></a>01923 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l01924"></a>01924 route_match_ipv6_address_prefix_list (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> prefix *prefix, 
<a name="l01925"></a>01925                   <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> type, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l01926"></a>01926 {
<a name="l01927"></a>01927   <span class="keyword">struct </span><a class="code" href="structprefix__list.html">prefix_list</a> *plist;
<a name="l01928"></a>01928 
<a name="l01929"></a>01929   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l01930"></a>01930     {
<a name="l01931"></a>01931       plist = <a class="code" href="plist_8c.html#adfce5b38dccccdc141ffd3571b73a656">prefix_list_lookup</a> (<a class="code" href="zebra_8h.html#ad10f30457e426e1d269466d3b6603c3c">AFI_IP6</a>, (<span class="keywordtype">char</span> *) rule);
<a name="l01932"></a>01932       <span class="keywordflow">if</span> (plist == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01933"></a>01933     <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l01934"></a>01934     
<a name="l01935"></a>01935       <span class="keywordflow">return</span> (<a class="code" href="plist_8c.html#a6fd9bac08d2cb3d2e315d88af146a7f0">prefix_list_apply</a> (plist, prefix) == <a class="code" href="plist_8h.html#a3bda5ec3d1202bc8eb472b4d97633cf9a697cf8d0db0ead308a6ef01301f9543c">PREFIX_DENY</a> ?
<a name="l01936"></a>01936           <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a> : <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516acce76d634db613fd27f63c57d4438e3f">RMAP_MATCH</a>);
<a name="l01937"></a>01937     }
<a name="l01938"></a>01938   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516ad7644e3e4542899815c7e987cb7bd604">RMAP_NOMATCH</a>;
<a name="l01939"></a>01939 }
<a name="l01940"></a>01940 
<a name="l01941"></a>01941 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l01942"></a>01942 route_match_ipv6_address_prefix_list_compile (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l01943"></a>01943 {
<a name="l01944"></a>01944   <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, arg);
<a name="l01945"></a>01945 }
<a name="l01946"></a>01946 
<a name="l01947"></a>01947 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01948"></a>01948 route_match_ipv6_address_prefix_list_free (<span class="keywordtype">void</span> *rule)
<a name="l01949"></a>01949 {
<a name="l01950"></a>01950   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l01951"></a>01951 }
<a name="l01952"></a>01952 
<a name="l01953"></a>01953 <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> route_match_ipv6_address_prefix_list_cmd =
<a name="l01954"></a>01954 {
<a name="l01955"></a>01955   <span class="stringliteral">&quot;ipv6 address prefix-list&quot;</span>,
<a name="l01956"></a>01956   route_match_ipv6_address_prefix_list,
<a name="l01957"></a>01957   route_match_ipv6_address_prefix_list_compile,
<a name="l01958"></a>01958   route_match_ipv6_address_prefix_list_free
<a name="l01959"></a>01959 };
<a name="l01960"></a>01960 
<a name="l01961"></a>01961 <span class="comment">/* `set ipv6 nexthop global IP_ADDRESS&#39; */</span>
<a name="l01962"></a>01962 
<a name="l01963"></a>01963 <span class="comment">/* Set nexthop to object.  ojbect must be pointer to struct attr. */</span>
<a name="l01964"></a>01964 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l01965"></a>01965 route_set_ipv6_nexthop_global (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> prefix *prefix, 
<a name="l01966"></a>01966                    <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> type, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l01967"></a>01967 {
<a name="l01968"></a>01968   <span class="keyword">struct </span>in6_addr *address;
<a name="l01969"></a>01969   <span class="keyword">struct </span>bgp_info *bgp_info;
<a name="l01970"></a>01970 
<a name="l01971"></a>01971   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l01972"></a>01972     {
<a name="l01973"></a>01973       <span class="comment">/* Fetch routemap&#39;s rule information. */</span>
<a name="l01974"></a>01974       address = rule;
<a name="l01975"></a>01975       bgp_info = object;
<a name="l01976"></a>01976     
<a name="l01977"></a>01977       <span class="comment">/* Set next hop value. */</span> 
<a name="l01978"></a>01978       (<a class="code" href="bgp__attr_8c.html#a31ef3828cd7a1375f7b7dfe02aab705f">bgp_attr_extra_get</a> (bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>))-&gt;mp_nexthop_global = *address;
<a name="l01979"></a>01979     
<a name="l01980"></a>01980       <span class="comment">/* Set nexthop length. */</span>
<a name="l01981"></a>01981       <span class="keywordflow">if</span> (bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>-&gt;<a class="code" href="structattr__extra.html#aa9572231b6d45822cd1af557583cdba5">mp_nexthop_len</a> == 0)
<a name="l01982"></a>01982     bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>-&gt;<a class="code" href="structattr__extra.html#aa9572231b6d45822cd1af557583cdba5">mp_nexthop_len</a> = 16;
<a name="l01983"></a>01983     }
<a name="l01984"></a>01984 
<a name="l01985"></a>01985   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516a1215cf356f29000968d958c014b559d5">RMAP_OKAY</a>;
<a name="l01986"></a>01986 }
<a name="l01987"></a>01987 
<a name="l01988"></a>01988 <span class="comment">/* Route map `ip next-hop&#39; compile function.  Given string is converted</span>
<a name="l01989"></a>01989 <span class="comment">   to struct in_addr structure. */</span>
<a name="l01990"></a>01990 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l01991"></a>01991 route_set_ipv6_nexthop_global_compile (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l01992"></a>01992 {
<a name="l01993"></a>01993   <span class="keywordtype">int</span> ret;
<a name="l01994"></a>01994   <span class="keyword">struct </span>in6_addr *address;
<a name="l01995"></a>01995 
<a name="l01996"></a>01996   address = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> in6_addr));
<a name="l01997"></a>01997 
<a name="l01998"></a>01998   ret = <a class="code" href="sockunion_8c.html#ac13c2042641ea5031bc7e244e8061b84">inet_pton</a> (AF_INET6, arg, address);
<a name="l01999"></a>01999 
<a name="l02000"></a>02000   <span class="keywordflow">if</span> (ret == 0)
<a name="l02001"></a>02001     {
<a name="l02002"></a>02002       <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, address);
<a name="l02003"></a>02003       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02004"></a>02004     }
<a name="l02005"></a>02005 
<a name="l02006"></a>02006   <span class="keywordflow">return</span> address;
<a name="l02007"></a>02007 }
<a name="l02008"></a>02008 
<a name="l02009"></a>02009 <span class="comment">/* Free route map&#39;s compiled `ip next-hop&#39; value. */</span>
<a name="l02010"></a>02010 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l02011"></a>02011 route_set_ipv6_nexthop_global_free (<span class="keywordtype">void</span> *rule)
<a name="l02012"></a>02012 {
<a name="l02013"></a>02013   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l02014"></a>02014 }
<a name="l02015"></a>02015 
<a name="l02016"></a>02016 <span class="comment">/* Route map commands for ip nexthop set. */</span>
<a name="l02017"></a>02017 <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> route_set_ipv6_nexthop_global_cmd =
<a name="l02018"></a>02018 {
<a name="l02019"></a>02019   <span class="stringliteral">&quot;ipv6 next-hop global&quot;</span>,
<a name="l02020"></a>02020   route_set_ipv6_nexthop_global,
<a name="l02021"></a>02021   route_set_ipv6_nexthop_global_compile,
<a name="l02022"></a>02022   route_set_ipv6_nexthop_global_free
<a name="l02023"></a>02023 };
<a name="l02024"></a>02024 
<a name="l02025"></a>02025 <span class="comment">/* `set ipv6 nexthop local IP_ADDRESS&#39; */</span>
<a name="l02026"></a>02026 
<a name="l02027"></a>02027 <span class="comment">/* Set nexthop to object.  ojbect must be pointer to struct attr. */</span>
<a name="l02028"></a>02028 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l02029"></a>02029 <a class="code" href="ripng__routemap_8c.html#a72e75f5c04c03e4f9b477617865276bb">route_set_ipv6_nexthop_local</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> prefix *prefix, 
<a name="l02030"></a>02030                   <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> type, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l02031"></a>02031 {
<a name="l02032"></a>02032   <span class="keyword">struct </span>in6_addr *address;
<a name="l02033"></a>02033   <span class="keyword">struct </span>bgp_info *bgp_info;
<a name="l02034"></a>02034 
<a name="l02035"></a>02035   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l02036"></a>02036     {
<a name="l02037"></a>02037       <span class="comment">/* Fetch routemap&#39;s rule information. */</span>
<a name="l02038"></a>02038       address = rule;
<a name="l02039"></a>02039       bgp_info = object;
<a name="l02040"></a>02040     
<a name="l02041"></a>02041       <span class="comment">/* Set next hop value. */</span> 
<a name="l02042"></a>02042       (<a class="code" href="bgp__attr_8c.html#a31ef3828cd7a1375f7b7dfe02aab705f">bgp_attr_extra_get</a> (bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>))-&gt;mp_nexthop_local = *address;
<a name="l02043"></a>02043     
<a name="l02044"></a>02044       <span class="comment">/* Set nexthop length. */</span>
<a name="l02045"></a>02045       <span class="keywordflow">if</span> (bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>-&gt;<a class="code" href="structattr__extra.html#aa9572231b6d45822cd1af557583cdba5">mp_nexthop_len</a> != 32)
<a name="l02046"></a>02046     bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>-&gt;<a class="code" href="structattr__extra.html#aa9572231b6d45822cd1af557583cdba5">mp_nexthop_len</a> = 32;
<a name="l02047"></a>02047     }
<a name="l02048"></a>02048 
<a name="l02049"></a>02049   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516a1215cf356f29000968d958c014b559d5">RMAP_OKAY</a>;
<a name="l02050"></a>02050 }
<a name="l02051"></a>02051 
<a name="l02052"></a>02052 <span class="comment">/* Route map `ip nexthop&#39; compile function.  Given string is converted</span>
<a name="l02053"></a>02053 <span class="comment">   to struct in_addr structure. */</span>
<a name="l02054"></a>02054 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l02055"></a>02055 <a class="code" href="ripng__routemap_8c.html#a5e94d457e9bd69d7e7bb46d392a953dc">route_set_ipv6_nexthop_local_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l02056"></a>02056 {
<a name="l02057"></a>02057   <span class="keywordtype">int</span> ret;
<a name="l02058"></a>02058   <span class="keyword">struct </span>in6_addr *address;
<a name="l02059"></a>02059 
<a name="l02060"></a>02060   address = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> in6_addr));
<a name="l02061"></a>02061 
<a name="l02062"></a>02062   ret = <a class="code" href="sockunion_8c.html#ac13c2042641ea5031bc7e244e8061b84">inet_pton</a> (AF_INET6, arg, address);
<a name="l02063"></a>02063 
<a name="l02064"></a>02064   <span class="keywordflow">if</span> (ret == 0)
<a name="l02065"></a>02065     {
<a name="l02066"></a>02066       <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, address);
<a name="l02067"></a>02067       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02068"></a>02068     }
<a name="l02069"></a>02069 
<a name="l02070"></a>02070   <span class="keywordflow">return</span> address;
<a name="l02071"></a>02071 }
<a name="l02072"></a>02072 
<a name="l02073"></a>02073 <span class="comment">/* Free route map&#39;s compiled `ip nexthop&#39; value. */</span>
<a name="l02074"></a>02074 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l02075"></a>02075 <a class="code" href="ripng__routemap_8c.html#a25f033020f0cc7d268210d733b8ac2db">route_set_ipv6_nexthop_local_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l02076"></a>02076 {
<a name="l02077"></a>02077   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l02078"></a>02078 }
<a name="l02079"></a>02079 
<a name="l02080"></a>02080 <span class="comment">/* Route map commands for ip nexthop set. */</span>
<a name="l02081"></a>02081 <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="ripng__routemap_8c.html#a37ea0683fc681161534fe4b6db020555">route_set_ipv6_nexthop_local_cmd</a> =
<a name="l02082"></a>02082 {
<a name="l02083"></a>02083   <span class="stringliteral">&quot;ipv6 next-hop local&quot;</span>,
<a name="l02084"></a>02084   <a class="code" href="ripng__routemap_8c.html#a72e75f5c04c03e4f9b477617865276bb">route_set_ipv6_nexthop_local</a>,
<a name="l02085"></a>02085   <a class="code" href="ripng__routemap_8c.html#a5e94d457e9bd69d7e7bb46d392a953dc">route_set_ipv6_nexthop_local_compile</a>,
<a name="l02086"></a>02086   <a class="code" href="ripng__routemap_8c.html#a25f033020f0cc7d268210d733b8ac2db">route_set_ipv6_nexthop_local_free</a>
<a name="l02087"></a>02087 };
<a name="l02088"></a>02088 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l02089"></a>02089 
<a name="l02090"></a>02090 <span class="comment">/* `set vpnv4 nexthop A.B.C.D&#39; */</span>
<a name="l02091"></a>02091 
<a name="l02092"></a>02092 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l02093"></a><a class="code" href="bgp__routemap_8c.html#afef6cd868ee39764492fb43fee5248a9">02093</a> <a class="code" href="bgp__routemap_8c.html#afef6cd868ee39764492fb43fee5248a9">route_set_vpnv4_nexthop</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> prefix *prefix, 
<a name="l02094"></a>02094              <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> type, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l02095"></a>02095 {
<a name="l02096"></a>02096   <span class="keyword">struct </span>in_addr *address;
<a name="l02097"></a>02097   <span class="keyword">struct </span>bgp_info *bgp_info;
<a name="l02098"></a>02098 
<a name="l02099"></a>02099   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>)
<a name="l02100"></a>02100     {
<a name="l02101"></a>02101       <span class="comment">/* Fetch routemap&#39;s rule information. */</span>
<a name="l02102"></a>02102       address = rule;
<a name="l02103"></a>02103       bgp_info = object;
<a name="l02104"></a>02104     
<a name="l02105"></a>02105       <span class="comment">/* Set next hop value. */</span> 
<a name="l02106"></a>02106       (<a class="code" href="bgp__attr_8c.html#a31ef3828cd7a1375f7b7dfe02aab705f">bgp_attr_extra_get</a> (bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>))-&gt;mp_nexthop_global_in = *address;
<a name="l02107"></a>02107     }
<a name="l02108"></a>02108 
<a name="l02109"></a>02109   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516a1215cf356f29000968d958c014b559d5">RMAP_OKAY</a>;
<a name="l02110"></a>02110 }
<a name="l02111"></a>02111 
<a name="l02112"></a>02112 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l02113"></a><a class="code" href="bgp__routemap_8c.html#a17ce165f9e49591f7a015c7511c74208">02113</a> <a class="code" href="bgp__routemap_8c.html#a17ce165f9e49591f7a015c7511c74208">route_set_vpnv4_nexthop_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l02114"></a>02114 {
<a name="l02115"></a>02115   <span class="keywordtype">int</span> ret;
<a name="l02116"></a>02116   <span class="keyword">struct </span>in_addr *address;
<a name="l02117"></a>02117 
<a name="l02118"></a>02118   address = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> in_addr));
<a name="l02119"></a>02119 
<a name="l02120"></a>02120   ret = <a class="code" href="sockunion_8c.html#a4203367afaacee3fa5cc1626b2ef63c0">inet_aton</a> (arg, address);
<a name="l02121"></a>02121 
<a name="l02122"></a>02122   <span class="keywordflow">if</span> (ret == 0)
<a name="l02123"></a>02123     {
<a name="l02124"></a>02124       <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, address);
<a name="l02125"></a>02125       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02126"></a>02126     }
<a name="l02127"></a>02127 
<a name="l02128"></a>02128   <span class="keywordflow">return</span> address;
<a name="l02129"></a>02129 }
<a name="l02130"></a>02130 
<a name="l02131"></a>02131 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l02132"></a><a class="code" href="bgp__routemap_8c.html#a41e5d2d7364133c962f3e04d683c2ea0">02132</a> <a class="code" href="bgp__routemap_8c.html#a41e5d2d7364133c962f3e04d683c2ea0">route_set_vpnv4_nexthop_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l02133"></a>02133 {
<a name="l02134"></a>02134   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l02135"></a>02135 }
<a name="l02136"></a>02136 
<a name="l02137"></a>02137 <span class="comment">/* Route map commands for ip nexthop set. */</span>
<a name="l02138"></a><a class="code" href="bgp__routemap_8c.html#a590ce66b6ebb83a0a293a2350a263917">02138</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#a590ce66b6ebb83a0a293a2350a263917">route_set_vpnv4_nexthop_cmd</a> =
<a name="l02139"></a>02139 {
<a name="l02140"></a>02140   <span class="stringliteral">&quot;vpnv4 next-hop&quot;</span>,
<a name="l02141"></a>02141   <a class="code" href="bgp__routemap_8c.html#afef6cd868ee39764492fb43fee5248a9">route_set_vpnv4_nexthop</a>,
<a name="l02142"></a>02142   <a class="code" href="bgp__routemap_8c.html#a17ce165f9e49591f7a015c7511c74208">route_set_vpnv4_nexthop_compile</a>,
<a name="l02143"></a>02143   <a class="code" href="bgp__routemap_8c.html#a41e5d2d7364133c962f3e04d683c2ea0">route_set_vpnv4_nexthop_free</a>
<a name="l02144"></a>02144 };
<a name="l02145"></a>02145 
<a name="l02146"></a>02146 <span class="comment">/* `set originator-id&#39; */</span>
<a name="l02147"></a>02147 
<a name="l02148"></a>02148 <span class="comment">/* For origin set. */</span>
<a name="l02149"></a>02149 <span class="keyword">static</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516">route_map_result_t</a>
<a name="l02150"></a><a class="code" href="bgp__routemap_8c.html#ac13fe9ca29c9d4da69d3f54c86c3e580">02150</a> <a class="code" href="bgp__routemap_8c.html#ac13fe9ca29c9d4da69d3f54c86c3e580">route_set_originator_id</a> (<span class="keywordtype">void</span> *rule, <span class="keyword">struct</span> prefix *prefix, <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370">route_map_object_t</a> type, <span class="keywordtype">void</span> *<span class="keywordtype">object</span>)
<a name="l02151"></a>02151 {
<a name="l02152"></a>02152   <span class="keyword">struct </span>in_addr *address;
<a name="l02153"></a>02153   <span class="keyword">struct </span>bgp_info *bgp_info;
<a name="l02154"></a>02154 
<a name="l02155"></a>02155   <span class="keywordflow">if</span> (type == <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370adcb3bc0f6448923a387dfe3658ca7bda">RMAP_BGP</a>) 
<a name="l02156"></a>02156     {
<a name="l02157"></a>02157       address = rule;
<a name="l02158"></a>02158       bgp_info = object;
<a name="l02159"></a>02159     
<a name="l02160"></a>02160       bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a> |= <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#a4c57fcfdf8e83e8d6dce5369a9697244">BGP_ATTR_ORIGINATOR_ID</a>);
<a name="l02161"></a>02161       (<a class="code" href="bgp__attr_8c.html#a31ef3828cd7a1375f7b7dfe02aab705f">bgp_attr_extra_get</a> (bgp_info-&gt;<a class="code" href="structbgp__info.html#ac08a1276a0597228115a0f26aa9fe27a">attr</a>))-&gt;originator_id = *address;
<a name="l02162"></a>02162     }
<a name="l02163"></a>02163 
<a name="l02164"></a>02164   <span class="keywordflow">return</span> <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516a1215cf356f29000968d958c014b559d5">RMAP_OKAY</a>;
<a name="l02165"></a>02165 }
<a name="l02166"></a>02166 
<a name="l02167"></a>02167 <span class="comment">/* Compile function for originator-id set. */</span>
<a name="l02168"></a>02168 <span class="keyword">static</span> <span class="keywordtype">void</span> *
<a name="l02169"></a><a class="code" href="bgp__routemap_8c.html#ae27e7b9c7eeb8e23def1bd777ddee03b">02169</a> <a class="code" href="bgp__routemap_8c.html#ae27e7b9c7eeb8e23def1bd777ddee03b">route_set_originator_id_compile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l02170"></a>02170 {
<a name="l02171"></a>02171   <span class="keywordtype">int</span> ret;
<a name="l02172"></a>02172   <span class="keyword">struct </span>in_addr *address;
<a name="l02173"></a>02173 
<a name="l02174"></a>02174   address = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> in_addr));
<a name="l02175"></a>02175 
<a name="l02176"></a>02176   ret = <a class="code" href="sockunion_8c.html#a4203367afaacee3fa5cc1626b2ef63c0">inet_aton</a> (arg, address);
<a name="l02177"></a>02177 
<a name="l02178"></a>02178   <span class="keywordflow">if</span> (ret == 0)
<a name="l02179"></a>02179     {
<a name="l02180"></a>02180       <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, address);
<a name="l02181"></a>02181       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02182"></a>02182     }
<a name="l02183"></a>02183 
<a name="l02184"></a>02184   <span class="keywordflow">return</span> address;
<a name="l02185"></a>02185 }
<a name="l02186"></a>02186 
<a name="l02187"></a>02187 <span class="comment">/* Compile function for originator_id set. */</span>
<a name="l02188"></a>02188 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l02189"></a><a class="code" href="bgp__routemap_8c.html#a84a7197af47012226d6ad9c8dd0a3ba4">02189</a> <a class="code" href="bgp__routemap_8c.html#a84a7197af47012226d6ad9c8dd0a3ba4">route_set_originator_id_free</a> (<span class="keywordtype">void</span> *rule)
<a name="l02190"></a>02190 {
<a name="l02191"></a>02191   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, rule);
<a name="l02192"></a>02192 }
<a name="l02193"></a>02193 
<a name="l02194"></a>02194 <span class="comment">/* Set metric rule structure. */</span>
<a name="l02195"></a><a class="code" href="bgp__routemap_8c.html#a23f1b1ac4e6356f9581b2d0abd5f81e7">02195</a> <span class="keyword">struct </span><a class="code" href="structroute__map__rule__cmd.html">route_map_rule_cmd</a> <a class="code" href="bgp__routemap_8c.html#a23f1b1ac4e6356f9581b2d0abd5f81e7">route_set_originator_id_cmd</a> = 
<a name="l02196"></a>02196 {
<a name="l02197"></a>02197   <span class="stringliteral">&quot;originator-id&quot;</span>,
<a name="l02198"></a>02198   <a class="code" href="bgp__routemap_8c.html#ac13fe9ca29c9d4da69d3f54c86c3e580">route_set_originator_id</a>,
<a name="l02199"></a>02199   <a class="code" href="bgp__routemap_8c.html#ae27e7b9c7eeb8e23def1bd777ddee03b">route_set_originator_id_compile</a>,
<a name="l02200"></a>02200   <a class="code" href="bgp__routemap_8c.html#a84a7197af47012226d6ad9c8dd0a3ba4">route_set_originator_id_free</a>,
<a name="l02201"></a>02201 };
<a name="l02202"></a>02202 
<a name="l02203"></a>02203 <span class="comment">/* Add bgp route map rule. */</span>
<a name="l02204"></a>02204 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l02205"></a><a class="code" href="bgp__routemap_8c.html#a7f975ecf7ca6870c8978f6aa042e30af">02205</a> <a class="code" href="bgp__routemap_8c.html#a7f975ecf7ca6870c8978f6aa042e30af">bgp_route_match_add</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>, <span class="keyword">struct</span> <a class="code" href="structroute__map__index.html">route_map_index</a> *index,
<a name="l02206"></a>02206              <span class="keyword">const</span> <span class="keywordtype">char</span> *command, <span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l02207"></a>02207 {
<a name="l02208"></a>02208   <span class="keywordtype">int</span> ret;
<a name="l02209"></a>02209 
<a name="l02210"></a>02210   ret = <a class="code" href="routemap_8c.html#ad681bdbc1826c0d017ff19a4315f4691">route_map_add_match</a> (index, command, arg);
<a name="l02211"></a>02211   <span class="keywordflow">if</span> (ret)
<a name="l02212"></a>02212     {
<a name="l02213"></a>02213       <span class="keywordflow">switch</span> (ret)
<a name="l02214"></a>02214     {
<a name="l02215"></a>02215     <span class="keywordflow">case</span> <a class="code" href="routemap_8h.html#a0944a4353780132eeab7b06e3e42291da26f041059a9ab0d72a8fdfd1e2f43041">RMAP_RULE_MISSING</a>:
<a name="l02216"></a>02216       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Can&#39;t find rule.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02217"></a>02217       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02218"></a>02218     <span class="keywordflow">case</span> <a class="code" href="routemap_8h.html#a0944a4353780132eeab7b06e3e42291da91019d02c673a0a43dcbb38d88d8c11b">RMAP_COMPILE_ERROR</a>:
<a name="l02219"></a>02219       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Argument is malformed.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02220"></a>02220       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02221"></a>02221     }
<a name="l02222"></a>02222     }
<a name="l02223"></a>02223   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02224"></a>02224 }
<a name="l02225"></a>02225 
<a name="l02226"></a>02226 <span class="comment">/* Delete bgp route map rule. */</span>
<a name="l02227"></a>02227 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l02228"></a><a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">02228</a> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>, <span class="keyword">struct</span> <a class="code" href="structroute__map__index.html">route_map_index</a> *index,
<a name="l02229"></a>02229             <span class="keyword">const</span> <span class="keywordtype">char</span> *command, <span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l02230"></a>02230 {
<a name="l02231"></a>02231   <span class="keywordtype">int</span> ret;
<a name="l02232"></a>02232 
<a name="l02233"></a>02233   ret = <a class="code" href="routemap_8c.html#a884d3e1e22cd928a1e894005199f46c8">route_map_delete_match</a> (index, command, arg);
<a name="l02234"></a>02234   <span class="keywordflow">if</span> (ret)
<a name="l02235"></a>02235     {
<a name="l02236"></a>02236       <span class="keywordflow">switch</span> (ret)
<a name="l02237"></a>02237     {
<a name="l02238"></a>02238     <span class="keywordflow">case</span> <a class="code" href="routemap_8h.html#a0944a4353780132eeab7b06e3e42291da26f041059a9ab0d72a8fdfd1e2f43041">RMAP_RULE_MISSING</a>:
<a name="l02239"></a>02239       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Can&#39;t find rule.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02240"></a>02240       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02241"></a>02241     <span class="keywordflow">case</span> <a class="code" href="routemap_8h.html#a0944a4353780132eeab7b06e3e42291da91019d02c673a0a43dcbb38d88d8c11b">RMAP_COMPILE_ERROR</a>:
<a name="l02242"></a>02242       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Argument is malformed.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02243"></a>02243       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02244"></a>02244     }
<a name="l02245"></a>02245     }
<a name="l02246"></a>02246   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02247"></a>02247 }
<a name="l02248"></a>02248 
<a name="l02249"></a>02249 <span class="comment">/* Add bgp route map rule. */</span>
<a name="l02250"></a>02250 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l02251"></a><a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">02251</a> <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>, <span class="keyword">struct</span> <a class="code" href="structroute__map__index.html">route_map_index</a> *index,
<a name="l02252"></a>02252            <span class="keyword">const</span> <span class="keywordtype">char</span> *command, <span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l02253"></a>02253 {
<a name="l02254"></a>02254   <span class="keywordtype">int</span> ret;
<a name="l02255"></a>02255 
<a name="l02256"></a>02256   ret = <a class="code" href="routemap_8c.html#a8219e7b29162a411fbadd874ec4d7c0a">route_map_add_set</a> (index, command, arg);
<a name="l02257"></a>02257   <span class="keywordflow">if</span> (ret)
<a name="l02258"></a>02258     {
<a name="l02259"></a>02259       <span class="keywordflow">switch</span> (ret)
<a name="l02260"></a>02260     {
<a name="l02261"></a>02261     <span class="keywordflow">case</span> <a class="code" href="routemap_8h.html#a0944a4353780132eeab7b06e3e42291da26f041059a9ab0d72a8fdfd1e2f43041">RMAP_RULE_MISSING</a>:
<a name="l02262"></a>02262       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Can&#39;t find rule.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02263"></a>02263       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02264"></a>02264     <span class="keywordflow">case</span> <a class="code" href="routemap_8h.html#a0944a4353780132eeab7b06e3e42291da91019d02c673a0a43dcbb38d88d8c11b">RMAP_COMPILE_ERROR</a>:
<a name="l02265"></a>02265       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Argument is malformed.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02266"></a>02266       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02267"></a>02267     }
<a name="l02268"></a>02268     }
<a name="l02269"></a>02269   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02270"></a>02270 }
<a name="l02271"></a>02271 
<a name="l02272"></a>02272 <span class="comment">/* Delete bgp route map rule. */</span>
<a name="l02273"></a>02273 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l02274"></a><a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">02274</a> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>, <span class="keyword">struct</span> <a class="code" href="structroute__map__index.html">route_map_index</a> *index,
<a name="l02275"></a>02275               <span class="keyword">const</span> <span class="keywordtype">char</span> *command, <span class="keyword">const</span> <span class="keywordtype">char</span> *arg)
<a name="l02276"></a>02276 {
<a name="l02277"></a>02277   <span class="keywordtype">int</span> ret;
<a name="l02278"></a>02278 
<a name="l02279"></a>02279   ret = <a class="code" href="routemap_8c.html#af03929ed1dd4f46e3284412d6ec1e30e">route_map_delete_set</a> (index, command, arg);
<a name="l02280"></a>02280   <span class="keywordflow">if</span> (ret)
<a name="l02281"></a>02281     {
<a name="l02282"></a>02282       <span class="keywordflow">switch</span> (ret)
<a name="l02283"></a>02283     {
<a name="l02284"></a>02284     <span class="keywordflow">case</span> <a class="code" href="routemap_8h.html#a0944a4353780132eeab7b06e3e42291da26f041059a9ab0d72a8fdfd1e2f43041">RMAP_RULE_MISSING</a>:
<a name="l02285"></a>02285       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Can&#39;t find rule.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02286"></a>02286       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02287"></a>02287     <span class="keywordflow">case</span> <a class="code" href="routemap_8h.html#a0944a4353780132eeab7b06e3e42291da91019d02c673a0a43dcbb38d88d8c11b">RMAP_COMPILE_ERROR</a>:
<a name="l02288"></a>02288       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Argument is malformed.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02289"></a>02289       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02290"></a>02290     }
<a name="l02291"></a>02291     }
<a name="l02292"></a>02292   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02293"></a>02293 }
<a name="l02294"></a>02294 
<a name="l02295"></a>02295 <span class="comment">/* Hook function for updating route_map assignment. */</span>
<a name="l02296"></a>02296 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l02297"></a><a class="code" href="bgp__routemap_8c.html#a135105c6576a3a6ab8726a78d48b6522">02297</a> <a class="code" href="bgp__routemap_8c.html#a135105c6576a3a6ab8726a78d48b6522">bgp_route_map_update</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *unused)
<a name="l02298"></a>02298 {
<a name="l02299"></a>02299   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l02300"></a>02300   <a class="code" href="zebra_8h.html#a0a34f9bd6bbc49876614d274005c6ff1">afi_t</a> afi;
<a name="l02301"></a>02301   <a class="code" href="zebra_8h.html#a195af4129e055b63a1b67529674bb998">safi_t</a> safi;
<a name="l02302"></a>02302   <span class="keywordtype">int</span> direct;
<a name="l02303"></a>02303   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
<a name="l02304"></a>02304   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *mnode, *mnnode;
<a name="l02305"></a>02305   <span class="keyword">struct </span><a class="code" href="structbgp.html">bgp</a> *<a class="code" href="bgp__capability__test_8c.html#a528a1146825f30f8df2ae2e9d61dd7be">bgp</a>;
<a name="l02306"></a>02306   <span class="keyword">struct </span><a class="code" href="structpeer.html">peer</a> *<a class="code" href="structpeer.html">peer</a>;
<a name="l02307"></a>02307   <span class="keyword">struct </span><a class="code" href="structpeer__group.html">peer_group</a> *group;
<a name="l02308"></a>02308   <span class="keyword">struct </span><a class="code" href="structbgp__filter.html">bgp_filter</a> *<a class="code" href="structfilter.html">filter</a>;
<a name="l02309"></a>02309   <span class="keyword">struct </span><a class="code" href="structbgp__node.html">bgp_node</a> *bn;
<a name="l02310"></a>02310   <span class="keyword">struct </span><a class="code" href="structbgp__static.html">bgp_static</a> *<a class="code" href="structbgp__static.html">bgp_static</a>;
<a name="l02311"></a>02311 
<a name="l02312"></a>02312   <span class="comment">/* For neighbor route-map updates. */</span>
<a name="l02313"></a>02313   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (<a class="code" href="bgpd_8c.html#adeab9451f33cb80e3dad19688138d378">bm</a>-&gt;<a class="code" href="structbgp__master.html#a781eb39eeb74ba12d8cb78f887d4d755">bgp</a>, mnode, mnnode, bgp))
<a name="l02314"></a>02314     {
<a name="l02315"></a>02315       <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (bgp-&gt;<a class="code" href="structbgp.html#a99704607de62cd6d36eb8674f921ba8a">peer</a>, node, nnode, peer))
<a name="l02316"></a>02316     {
<a name="l02317"></a>02317       <span class="keywordflow">for</span> (afi = <a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>; afi &lt; <a class="code" href="zebra_8h.html#abf129a17e985713a26a6181a198d5f1a">AFI_MAX</a>; afi++)
<a name="l02318"></a>02318         <span class="keywordflow">for</span> (safi = <a class="code" href="zebra_8h.html#afb8a63d76f4951ff8d73c32256b4a497">SAFI_UNICAST</a>; safi &lt; <a class="code" href="zebra_8h.html#a82fe6f63e822f7bf9e4567873d809ed8">SAFI_MAX</a>; safi++)
<a name="l02319"></a>02319           {
<a name="l02320"></a>02320         filter = &amp;peer-&gt;<a class="code" href="structpeer.html#a8ae54829ca91f5860216eb326f264727">filter</a>[afi][safi];
<a name="l02321"></a>02321       
<a name="l02322"></a>02322                <span class="keywordflow">for</span> (direct = <a class="code" href="bgpd_8h.html#a4d723b3238e0d2249fba0457bf41ff5c">RMAP_IN</a>; direct &lt; <a class="code" href="bgpd_8h.html#a0211cf02136115bf6674f56fedfc1ea1">RMAP_MAX</a>; direct++)
<a name="l02323"></a>02323           {
<a name="l02324"></a>02324             <span class="keywordflow">if</span> (filter-&gt;<a class="code" href="structbgp__filter.html#a785085014262ebd9ebb11f8bf5e0e21a">map</a>[direct].<a class="code" href="structroute__map.html#aab1f24e4c71014a5f78afe3d80ee7d40">name</a>)
<a name="l02325"></a>02325               filter-&gt;<a class="code" href="structbgp__filter.html#a785085014262ebd9ebb11f8bf5e0e21a">map</a>[direct].map = 
<a name="l02326"></a>02326             <a class="code" href="routemap_8c.html#a52006340e589dda4244d35cafc9f6f10">route_map_lookup_by_name</a> (filter-&gt;<a class="code" href="structbgp__filter.html#a785085014262ebd9ebb11f8bf5e0e21a">map</a>[direct].<a class="code" href="structroute__map.html#aab1f24e4c71014a5f78afe3d80ee7d40">name</a>);
<a name="l02327"></a>02327             <span class="keywordflow">else</span>
<a name="l02328"></a>02328               filter-&gt;<a class="code" href="structbgp__filter.html#a785085014262ebd9ebb11f8bf5e0e21a">map</a>[direct].map = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02329"></a>02329           }
<a name="l02330"></a>02330 
<a name="l02331"></a>02331         <span class="keywordflow">if</span> (filter-&gt;<a class="code" href="structbgp__filter.html#a6862728a994cf295dfa8cf6311dc8427">usmap</a>.<a class="code" href="structbgp__filter.html#a983e08ddde678af08d486e01e911eb89">name</a>)
<a name="l02332"></a>02332           filter-&gt;<a class="code" href="structbgp__filter.html#a6862728a994cf295dfa8cf6311dc8427">usmap</a>.<a class="code" href="structbgp__filter.html#a785085014262ebd9ebb11f8bf5e0e21a">map</a> = <a class="code" href="routemap_8c.html#a52006340e589dda4244d35cafc9f6f10">route_map_lookup_by_name</a> (filter-&gt;<a class="code" href="structbgp__filter.html#a6862728a994cf295dfa8cf6311dc8427">usmap</a>.<a class="code" href="structbgp__filter.html#a983e08ddde678af08d486e01e911eb89">name</a>);
<a name="l02333"></a>02333         <span class="keywordflow">else</span>
<a name="l02334"></a>02334           filter-&gt;<a class="code" href="structbgp__filter.html#a6862728a994cf295dfa8cf6311dc8427">usmap</a>.<a class="code" href="structbgp__filter.html#a785085014262ebd9ebb11f8bf5e0e21a">map</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02335"></a>02335           }
<a name="l02336"></a>02336     }
<a name="l02337"></a>02337       <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (bgp-&gt;<a class="code" href="structbgp.html#acd1f7a41a28ad719e127cbf0f917110a">group</a>, node, nnode, group))
<a name="l02338"></a>02338     {
<a name="l02339"></a>02339       <span class="keywordflow">for</span> (afi = <a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>; afi &lt; <a class="code" href="zebra_8h.html#abf129a17e985713a26a6181a198d5f1a">AFI_MAX</a>; afi++)
<a name="l02340"></a>02340         <span class="keywordflow">for</span> (safi = <a class="code" href="zebra_8h.html#afb8a63d76f4951ff8d73c32256b4a497">SAFI_UNICAST</a>; safi &lt; <a class="code" href="zebra_8h.html#a82fe6f63e822f7bf9e4567873d809ed8">SAFI_MAX</a>; safi++)
<a name="l02341"></a>02341           {
<a name="l02342"></a>02342         filter = &amp;group-&gt;<a class="code" href="structpeer__group.html#a2cc68fffcac06f7d6c26ed208cb33768">conf</a>-&gt;<a class="code" href="structpeer.html#a8ae54829ca91f5860216eb326f264727">filter</a>[afi][safi];
<a name="l02343"></a>02343       
<a name="l02344"></a>02344                <span class="keywordflow">for</span> (direct = <a class="code" href="bgpd_8h.html#a4d723b3238e0d2249fba0457bf41ff5c">RMAP_IN</a>; direct &lt; <a class="code" href="bgpd_8h.html#a0211cf02136115bf6674f56fedfc1ea1">RMAP_MAX</a>; direct++)
<a name="l02345"></a>02345           {
<a name="l02346"></a>02346             <span class="keywordflow">if</span> (filter-&gt;<a class="code" href="structbgp__filter.html#a785085014262ebd9ebb11f8bf5e0e21a">map</a>[direct].<a class="code" href="structroute__map.html#aab1f24e4c71014a5f78afe3d80ee7d40">name</a>)
<a name="l02347"></a>02347               filter-&gt;<a class="code" href="structbgp__filter.html#a785085014262ebd9ebb11f8bf5e0e21a">map</a>[direct].map = 
<a name="l02348"></a>02348             <a class="code" href="routemap_8c.html#a52006340e589dda4244d35cafc9f6f10">route_map_lookup_by_name</a> (filter-&gt;<a class="code" href="structbgp__filter.html#a785085014262ebd9ebb11f8bf5e0e21a">map</a>[direct].<a class="code" href="structroute__map.html#aab1f24e4c71014a5f78afe3d80ee7d40">name</a>);
<a name="l02349"></a>02349             <span class="keywordflow">else</span>
<a name="l02350"></a>02350               filter-&gt;<a class="code" href="structbgp__filter.html#a785085014262ebd9ebb11f8bf5e0e21a">map</a>[direct].map = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02351"></a>02351           }
<a name="l02352"></a>02352 
<a name="l02353"></a>02353         <span class="keywordflow">if</span> (filter-&gt;<a class="code" href="structbgp__filter.html#a6862728a994cf295dfa8cf6311dc8427">usmap</a>.<a class="code" href="structbgp__filter.html#a983e08ddde678af08d486e01e911eb89">name</a>)
<a name="l02354"></a>02354           filter-&gt;<a class="code" href="structbgp__filter.html#a6862728a994cf295dfa8cf6311dc8427">usmap</a>.<a class="code" href="structbgp__filter.html#a785085014262ebd9ebb11f8bf5e0e21a">map</a> = <a class="code" href="routemap_8c.html#a52006340e589dda4244d35cafc9f6f10">route_map_lookup_by_name</a> (filter-&gt;<a class="code" href="structbgp__filter.html#a6862728a994cf295dfa8cf6311dc8427">usmap</a>.<a class="code" href="structbgp__filter.html#a983e08ddde678af08d486e01e911eb89">name</a>);
<a name="l02355"></a>02355         <span class="keywordflow">else</span>
<a name="l02356"></a>02356           filter-&gt;<a class="code" href="structbgp__filter.html#a6862728a994cf295dfa8cf6311dc8427">usmap</a>.<a class="code" href="structbgp__filter.html#a785085014262ebd9ebb11f8bf5e0e21a">map</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02357"></a>02357           }
<a name="l02358"></a>02358     }
<a name="l02359"></a>02359     }
<a name="l02360"></a>02360 
<a name="l02361"></a>02361   <span class="comment">/* For default-originate route-map updates. */</span>
<a name="l02362"></a>02362   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (<a class="code" href="bgpd_8c.html#adeab9451f33cb80e3dad19688138d378">bm</a>-&gt;<a class="code" href="structbgp__master.html#a781eb39eeb74ba12d8cb78f887d4d755">bgp</a>, mnode, mnnode, bgp))
<a name="l02363"></a>02363     {
<a name="l02364"></a>02364       <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (bgp-&gt;<a class="code" href="structbgp.html#a99704607de62cd6d36eb8674f921ba8a">peer</a>, node, nnode, peer))
<a name="l02365"></a>02365     {
<a name="l02366"></a>02366       <span class="keywordflow">for</span> (afi = <a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>; afi &lt; <a class="code" href="zebra_8h.html#abf129a17e985713a26a6181a198d5f1a">AFI_MAX</a>; afi++)
<a name="l02367"></a>02367         <span class="keywordflow">for</span> (safi = <a class="code" href="zebra_8h.html#afb8a63d76f4951ff8d73c32256b4a497">SAFI_UNICAST</a>; safi &lt; <a class="code" href="zebra_8h.html#a82fe6f63e822f7bf9e4567873d809ed8">SAFI_MAX</a>; safi++)
<a name="l02368"></a>02368           {
<a name="l02369"></a>02369         <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structpeer.html#adaa47d231b6aae95157727ddbb836886">default_rmap</a>[afi][safi].<a class="code" href="structpeer.html#a72e35e12b6a073cd627df5e012038c16">name</a>)
<a name="l02370"></a>02370           peer-&gt;<a class="code" href="structpeer.html#adaa47d231b6aae95157727ddbb836886">default_rmap</a>[afi][safi].<a class="code" href="structpeer.html#a4e3fea3d9cdc1addc3615f1906220a54">map</a> =
<a name="l02371"></a>02371             <a class="code" href="routemap_8c.html#a52006340e589dda4244d35cafc9f6f10">route_map_lookup_by_name</a> (peer-&gt;<a class="code" href="structpeer.html#adaa47d231b6aae95157727ddbb836886">default_rmap</a>[afi][safi].<a class="code" href="structpeer.html#a72e35e12b6a073cd627df5e012038c16">name</a>);
<a name="l02372"></a>02372         <span class="keywordflow">else</span>
<a name="l02373"></a>02373           peer-&gt;<a class="code" href="structpeer.html#adaa47d231b6aae95157727ddbb836886">default_rmap</a>[afi][safi].<a class="code" href="structpeer.html#a4e3fea3d9cdc1addc3615f1906220a54">map</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02374"></a>02374           }
<a name="l02375"></a>02375     }
<a name="l02376"></a>02376     }
<a name="l02377"></a>02377 
<a name="l02378"></a>02378   <span class="comment">/* For network route-map updates. */</span>
<a name="l02379"></a>02379   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (<a class="code" href="bgpd_8c.html#adeab9451f33cb80e3dad19688138d378">bm</a>-&gt;<a class="code" href="structbgp__master.html#a781eb39eeb74ba12d8cb78f887d4d755">bgp</a>, mnode, mnnode, bgp))
<a name="l02380"></a>02380     {
<a name="l02381"></a>02381       <span class="keywordflow">for</span> (afi = <a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>; afi &lt; <a class="code" href="zebra_8h.html#abf129a17e985713a26a6181a198d5f1a">AFI_MAX</a>; afi++)
<a name="l02382"></a>02382     <span class="keywordflow">for</span> (safi = <a class="code" href="zebra_8h.html#afb8a63d76f4951ff8d73c32256b4a497">SAFI_UNICAST</a>; safi &lt; <a class="code" href="zebra_8h.html#a82fe6f63e822f7bf9e4567873d809ed8">SAFI_MAX</a>; safi++)
<a name="l02383"></a>02383       <span class="keywordflow">for</span> (bn = <a class="code" href="bgp__table_8c.html#af8ce42494729d03a8c7ca41ded487bb2">bgp_table_top</a> (bgp-&gt;<a class="code" href="structbgp.html#af06132502d1bbb4584e996e978254e34">route</a>[afi][safi]); bn;
<a name="l02384"></a>02384            bn = <a class="code" href="bgp__table_8c.html#abdeced48b9b4aad614c88dc63ea0a4cf">bgp_route_next</a> (bn))
<a name="l02385"></a>02385         <span class="keywordflow">if</span> ((bgp_static = bn-&gt;<a class="code" href="structbgp__node.html#aa7efb6473eab6666b1aba83e4da90429">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02386"></a>02386           {
<a name="l02387"></a>02387         <span class="keywordflow">if</span> (bgp_static-&gt;<a class="code" href="structbgp__static.html#acd6110748ccb4b1b26d292f02ede2a16">rmap</a>.<a class="code" href="structbgp__static.html#ad76c828cf9c061f483a3ed7220649b51">name</a>)
<a name="l02388"></a>02388           bgp_static-&gt;<a class="code" href="structbgp__static.html#acd6110748ccb4b1b26d292f02ede2a16">rmap</a>.<a class="code" href="structbgp__static.html#a66a99ae86e2b6f3496a481b7bfd300e9">map</a> =
<a name="l02389"></a>02389              <a class="code" href="routemap_8c.html#a52006340e589dda4244d35cafc9f6f10">route_map_lookup_by_name</a> (bgp_static-&gt;<a class="code" href="structbgp__static.html#acd6110748ccb4b1b26d292f02ede2a16">rmap</a>.<a class="code" href="structbgp__static.html#ad76c828cf9c061f483a3ed7220649b51">name</a>);
<a name="l02390"></a>02390         <span class="keywordflow">else</span>
<a name="l02391"></a>02391           bgp_static-&gt;<a class="code" href="structbgp__static.html#acd6110748ccb4b1b26d292f02ede2a16">rmap</a>.<a class="code" href="structbgp__static.html#a66a99ae86e2b6f3496a481b7bfd300e9">map</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02392"></a>02392           }
<a name="l02393"></a>02393     }
<a name="l02394"></a>02394 
<a name="l02395"></a>02395   <span class="comment">/* For redistribute route-map updates. */</span>
<a name="l02396"></a>02396   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (<a class="code" href="bgpd_8c.html#adeab9451f33cb80e3dad19688138d378">bm</a>-&gt;<a class="code" href="structbgp__master.html#a781eb39eeb74ba12d8cb78f887d4d755">bgp</a>, mnode, mnnode, bgp))
<a name="l02397"></a>02397     {
<a name="l02398"></a>02398       <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="zebra_8h.html#aec97442680d773fd62f9af5c9426b842">ZEBRA_ROUTE_MAX</a>; i++)
<a name="l02399"></a>02399     {
<a name="l02400"></a>02400       <span class="keywordflow">if</span> (bgp-&gt;<a class="code" href="structbgp.html#acaab0bed60f887d8de2414e5dcc01a25">rmap</a>[<a class="code" href="zebra_8h.html#ad07bdde9b1dfccbdad79e5d9d0d66795">ZEBRA_FAMILY_IPV4</a>][i].<a class="code" href="structbgp.html#ac321205b3775d3cf7c70affd935c3a72">name</a>)
<a name="l02401"></a>02401         bgp-&gt;<a class="code" href="structbgp.html#acaab0bed60f887d8de2414e5dcc01a25">rmap</a>[<a class="code" href="zebra_8h.html#ad07bdde9b1dfccbdad79e5d9d0d66795">ZEBRA_FAMILY_IPV4</a>][<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].<a class="code" href="structbgp.html#a8b49a178b9734b1b1a04847a9c5bf3fe">map</a> = 
<a name="l02402"></a>02402           <a class="code" href="routemap_8c.html#a52006340e589dda4244d35cafc9f6f10">route_map_lookup_by_name</a> (bgp-&gt;<a class="code" href="structbgp.html#acaab0bed60f887d8de2414e5dcc01a25">rmap</a>[<a class="code" href="zebra_8h.html#ad07bdde9b1dfccbdad79e5d9d0d66795">ZEBRA_FAMILY_IPV4</a>][i].<a class="code" href="structbgp.html#ac321205b3775d3cf7c70affd935c3a72">name</a>);
<a name="l02403"></a>02403 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l02404"></a>02404 <span class="preprocessor"></span>      <span class="keywordflow">if</span> (bgp-&gt;<a class="code" href="structbgp.html#acaab0bed60f887d8de2414e5dcc01a25">rmap</a>[<a class="code" href="zebra_8h.html#a880c6359e730008667679201498c41b4">ZEBRA_FAMILY_IPV6</a>][i].<a class="code" href="structbgp.html#ac321205b3775d3cf7c70affd935c3a72">name</a>)
<a name="l02405"></a>02405         bgp-&gt;<a class="code" href="structbgp.html#acaab0bed60f887d8de2414e5dcc01a25">rmap</a>[<a class="code" href="zebra_8h.html#a880c6359e730008667679201498c41b4">ZEBRA_FAMILY_IPV6</a>][<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].<a class="code" href="structbgp.html#a8b49a178b9734b1b1a04847a9c5bf3fe">map</a> =
<a name="l02406"></a>02406           <a class="code" href="routemap_8c.html#a52006340e589dda4244d35cafc9f6f10">route_map_lookup_by_name</a> (bgp-&gt;<a class="code" href="structbgp.html#acaab0bed60f887d8de2414e5dcc01a25">rmap</a>[<a class="code" href="zebra_8h.html#a880c6359e730008667679201498c41b4">ZEBRA_FAMILY_IPV6</a>][i].<a class="code" href="structbgp.html#ac321205b3775d3cf7c70affd935c3a72">name</a>);
<a name="l02407"></a>02407 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l02408"></a>02408     }
<a name="l02409"></a>02409     }
<a name="l02410"></a>02410 }
<a name="l02411"></a>02411 
<a name="l02412"></a><a class="code" href="bgp__routemap_8c.html#ab77006733142f7e8d48f6d6691ae4c35">02412</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (match_peer,
<a name="l02413"></a>02413        match_peer_cmd,
<a name="l02414"></a>02414        <span class="stringliteral">&quot;match peer (A.B.C.D|X:X::X:X)&quot;</span>,
<a name="l02415"></a>02415        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02416"></a>02416        <span class="stringliteral">&quot;Match peer address\n&quot;</span>
<a name="l02417"></a>02417        <span class="stringliteral">&quot;IPv6 address of peer\n&quot;</span>
<a name="l02418"></a>02418        <span class="stringliteral">&quot;IP address of peer\n&quot;</span>)
<a name="l02419"></a>02419 {
<a name="l02420"></a>02420   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a7f975ecf7ca6870c8978f6aa042e30af">bgp_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;peer&quot;</span>, argv[0]);
<a name="l02421"></a>02421 }
<a name="l02422"></a>02422 
<a name="l02423"></a><a class="code" href="bgp__routemap_8c.html#a35c95b058705668838369f3e00b244f7">02423</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (match_peer_local,
<a name="l02424"></a>02424         match_peer_local_cmd,
<a name="l02425"></a>02425         <span class="stringliteral">&quot;match peer local&quot;</span>,
<a name="l02426"></a>02426         <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02427"></a>02427         <span class="stringliteral">&quot;Match peer address\n&quot;</span>
<a name="l02428"></a>02428         <span class="stringliteral">&quot;Static or Redistributed routes\n&quot;</span>)
<a name="l02429"></a>02429 {
<a name="l02430"></a>02430   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a7f975ecf7ca6870c8978f6aa042e30af">bgp_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;peer&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l02431"></a>02431 }
<a name="l02432"></a>02432 
<a name="l02433"></a><a class="code" href="bgp__routemap_8c.html#af9ad42c9bf17421f7a0c1c834105a5a7">02433</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_match_peer,
<a name="l02434"></a>02434        no_match_peer_cmd,
<a name="l02435"></a>02435        <span class="stringliteral">&quot;no match peer&quot;</span>,
<a name="l02436"></a>02436        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02437"></a>02437        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02438"></a>02438        <span class="stringliteral">&quot;Match peer address\n&quot;</span>)
<a name="l02439"></a>02439 {
<a name="l02440"></a>02440  <span class="keywordflow">if</span> (argc == 0)
<a name="l02441"></a>02441    <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;peer&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l02442"></a>02442 
<a name="l02443"></a>02443   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;peer&quot;</span>, argv[0]);
<a name="l02444"></a>02444 }
<a name="l02445"></a>02445 
<a name="l02446"></a><a class="code" href="bgp__routemap_8c.html#a03ab3e3b549afef99bf2bdeeb0f197ba">02446</a> <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_match_peer,
<a name="l02447"></a>02447        no_match_peer_val_cmd,
<a name="l02448"></a>02448        <span class="stringliteral">&quot;no match peer (A.B.C.D|X:X::X:X)&quot;</span>,
<a name="l02449"></a>02449        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02450"></a>02450        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02451"></a>02451        <span class="stringliteral">&quot;Match peer address\n&quot;</span>
<a name="l02452"></a>02452        <span class="stringliteral">&quot;IPv6 address of peer\n&quot;</span>
<a name="l02453"></a>02453        <span class="stringliteral">&quot;IP address of peer\n&quot;</span>)
<a name="l02454"></a>02454 
<a name="l02455"></a>02455 <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_match_peer,
<a name="l02456"></a>02456        no_match_peer_local_cmd,
<a name="l02457"></a>02457        <span class="stringliteral">&quot;no match peer local&quot;</span>,
<a name="l02458"></a>02458        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02459"></a>02459        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02460"></a>02460        <span class="stringliteral">&quot;Match peer address\n&quot;</span>
<a name="l02461"></a>02461        <span class="stringliteral">&quot;Static or Redistributed routes\n&quot;</span>)
<a name="l02462"></a>02462 
<a name="l02463"></a>02463 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (match_ip_address, 
<a name="l02464"></a>02464        match_ip_address_cmd,
<a name="l02465"></a>02465        <span class="stringliteral">&quot;match ip address (&lt;1-199&gt;|&lt;1300-2699&gt;|WORD)&quot;</span>,
<a name="l02466"></a>02466        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02467"></a>02467        <a class="code" href="command_8h.html#af45438f811eb6711be47ea2555b12f75">IP_STR</a>
<a name="l02468"></a>02468        <span class="stringliteral">&quot;Match address of route\n&quot;</span>
<a name="l02469"></a>02469        <span class="stringliteral">&quot;IP access-list number\n&quot;</span>
<a name="l02470"></a>02470        <span class="stringliteral">&quot;IP access-list number (expanded range)\n&quot;</span>
<a name="l02471"></a>02471        <span class="stringliteral">&quot;IP Access-list name\n&quot;</span>)
<a name="l02472"></a>02472 {
<a name="l02473"></a>02473   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a7f975ecf7ca6870c8978f6aa042e30af">bgp_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip address&quot;</span>, argv[0]);
<a name="l02474"></a>02474 }
<a name="l02475"></a>02475 
<a name="l02476"></a><a class="code" href="bgp__routemap_8c.html#a5b6ae6bb488ba18a86b08db912f39829">02476</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_match_ip_address, 
<a name="l02477"></a>02477        no_match_ip_address_cmd,
<a name="l02478"></a>02478        <span class="stringliteral">&quot;no match ip address&quot;</span>,
<a name="l02479"></a>02479        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02480"></a>02480        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02481"></a>02481        <a class="code" href="command_8h.html#af45438f811eb6711be47ea2555b12f75">IP_STR</a>
<a name="l02482"></a>02482        <span class="stringliteral">&quot;Match address of route\n&quot;</span>)
<a name="l02483"></a>02483 {
<a name="l02484"></a>02484   <span class="keywordflow">if</span> (argc == 0)
<a name="l02485"></a>02485     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip address&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l02486"></a>02486 
<a name="l02487"></a>02487   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip address&quot;</span>, argv[0]);
<a name="l02488"></a>02488 }
<a name="l02489"></a>02489 
<a name="l02490"></a><a class="code" href="bgp__routemap_8c.html#aab6bcc1671d7c88b040cec767f1149a1">02490</a> <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_match_ip_address, 
<a name="l02491"></a>02491        no_match_ip_address_val_cmd,
<a name="l02492"></a>02492        <span class="stringliteral">&quot;no match ip address (&lt;1-199&gt;|&lt;1300-2699&gt;|WORD)&quot;</span>,
<a name="l02493"></a>02493        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02494"></a>02494        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02495"></a>02495        <a class="code" href="command_8h.html#af45438f811eb6711be47ea2555b12f75">IP_STR</a>
<a name="l02496"></a>02496        <span class="stringliteral">&quot;Match address of route\n&quot;</span>
<a name="l02497"></a>02497        <span class="stringliteral">&quot;IP access-list number\n&quot;</span>
<a name="l02498"></a>02498        <span class="stringliteral">&quot;IP access-list number (expanded range)\n&quot;</span>
<a name="l02499"></a>02499        <span class="stringliteral">&quot;IP Access-list name\n&quot;</span>)
<a name="l02500"></a>02500 
<a name="l02501"></a>02501 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (match_ip_next_hop, 
<a name="l02502"></a>02502        match_ip_next_hop_cmd,
<a name="l02503"></a>02503        <span class="stringliteral">&quot;match ip next-hop (&lt;1-199&gt;|&lt;1300-2699&gt;|WORD)&quot;</span>,
<a name="l02504"></a>02504        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02505"></a>02505        <a class="code" href="command_8h.html#af45438f811eb6711be47ea2555b12f75">IP_STR</a>
<a name="l02506"></a>02506        <span class="stringliteral">&quot;Match next-hop address of route\n&quot;</span>
<a name="l02507"></a>02507        <span class="stringliteral">&quot;IP access-list number\n&quot;</span>
<a name="l02508"></a>02508        <span class="stringliteral">&quot;IP access-list number (expanded range)\n&quot;</span>
<a name="l02509"></a>02509        <span class="stringliteral">&quot;IP Access-list name\n&quot;</span>)
<a name="l02510"></a>02510 {
<a name="l02511"></a>02511   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a7f975ecf7ca6870c8978f6aa042e30af">bgp_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip next-hop&quot;</span>, argv[0]);
<a name="l02512"></a>02512 }
<a name="l02513"></a>02513 
<a name="l02514"></a><a class="code" href="bgp__routemap_8c.html#ae0c6f994052afa505759af5b006ddd4c">02514</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_match_ip_next_hop,
<a name="l02515"></a>02515        no_match_ip_next_hop_cmd,
<a name="l02516"></a>02516        <span class="stringliteral">&quot;no match ip next-hop&quot;</span>,
<a name="l02517"></a>02517        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02518"></a>02518        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02519"></a>02519        <a class="code" href="command_8h.html#af45438f811eb6711be47ea2555b12f75">IP_STR</a>
<a name="l02520"></a>02520        <span class="stringliteral">&quot;Match next-hop address of route\n&quot;</span>)
<a name="l02521"></a>02521 {
<a name="l02522"></a>02522   <span class="keywordflow">if</span> (argc == 0)
<a name="l02523"></a>02523     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip next-hop&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l02524"></a>02524 
<a name="l02525"></a>02525   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip next-hop&quot;</span>, argv[0]);
<a name="l02526"></a>02526 }
<a name="l02527"></a>02527 
<a name="l02528"></a><a class="code" href="bgp__routemap_8c.html#aebd00cb1b7e6216079c67b6ffc55e5d6">02528</a> <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_match_ip_next_hop,
<a name="l02529"></a>02529        no_match_ip_next_hop_val_cmd,
<a name="l02530"></a>02530        <span class="stringliteral">&quot;no match ip next-hop (&lt;1-199&gt;|&lt;1300-2699&gt;|WORD)&quot;</span>,
<a name="l02531"></a>02531        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02532"></a>02532        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02533"></a>02533        <a class="code" href="command_8h.html#af45438f811eb6711be47ea2555b12f75">IP_STR</a>
<a name="l02534"></a>02534        <span class="stringliteral">&quot;Match next-hop address of route\n&quot;</span>
<a name="l02535"></a>02535        <span class="stringliteral">&quot;IP access-list number\n&quot;</span>
<a name="l02536"></a>02536        <span class="stringliteral">&quot;IP access-list number (expanded range)\n&quot;</span>
<a name="l02537"></a>02537        <span class="stringliteral">&quot;IP Access-list name\n&quot;</span>)
<a name="l02538"></a>02538 
<a name="l02539"></a>02539 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (match_ip_route_source, 
<a name="l02540"></a>02540        match_ip_route_source_cmd,
<a name="l02541"></a>02541        <span class="stringliteral">&quot;match ip route-source (&lt;1-199&gt;|&lt;1300-2699&gt;|WORD)&quot;</span>,
<a name="l02542"></a>02542        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02543"></a>02543        <a class="code" href="command_8h.html#af45438f811eb6711be47ea2555b12f75">IP_STR</a>
<a name="l02544"></a>02544        <span class="stringliteral">&quot;Match advertising source address of route\n&quot;</span>
<a name="l02545"></a>02545        <span class="stringliteral">&quot;IP access-list number\n&quot;</span>
<a name="l02546"></a>02546        <span class="stringliteral">&quot;IP access-list number (expanded range)\n&quot;</span>
<a name="l02547"></a>02547        <span class="stringliteral">&quot;IP standard access-list name\n&quot;</span>)
<a name="l02548"></a>02548 {
<a name="l02549"></a>02549   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a7f975ecf7ca6870c8978f6aa042e30af">bgp_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip route-source&quot;</span>, argv[0]);
<a name="l02550"></a>02550 }
<a name="l02551"></a>02551 
<a name="l02552"></a><a class="code" href="bgp__routemap_8c.html#ab42c512101405582177df6146fd39078">02552</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_match_ip_route_source,
<a name="l02553"></a>02553        no_match_ip_route_source_cmd,
<a name="l02554"></a>02554        <span class="stringliteral">&quot;no match ip route-source&quot;</span>,
<a name="l02555"></a>02555        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02556"></a>02556        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02557"></a>02557        <a class="code" href="command_8h.html#af45438f811eb6711be47ea2555b12f75">IP_STR</a>
<a name="l02558"></a>02558        <span class="stringliteral">&quot;Match advertising source address of route\n&quot;</span>)
<a name="l02559"></a>02559 {
<a name="l02560"></a>02560   <span class="keywordflow">if</span> (argc == 0)
<a name="l02561"></a>02561     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip route-source&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l02562"></a>02562 
<a name="l02563"></a>02563   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip route-source&quot;</span>, argv[0]);
<a name="l02564"></a>02564 }
<a name="l02565"></a>02565 
<a name="l02566"></a><a class="code" href="bgp__routemap_8c.html#af4b777416558b6be493b08164ac488ef">02566</a> <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_match_ip_route_source,
<a name="l02567"></a>02567        no_match_ip_route_source_val_cmd,
<a name="l02568"></a>02568        <span class="stringliteral">&quot;no match ip route-source (&lt;1-199&gt;|&lt;1300-2699&gt;|WORD)&quot;</span>,
<a name="l02569"></a>02569        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02570"></a>02570        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02571"></a>02571        <a class="code" href="command_8h.html#af45438f811eb6711be47ea2555b12f75">IP_STR</a>
<a name="l02572"></a>02572        <span class="stringliteral">&quot;Match advertising source address of route\n&quot;</span>
<a name="l02573"></a>02573        <span class="stringliteral">&quot;IP access-list number\n&quot;</span>
<a name="l02574"></a>02574        <span class="stringliteral">&quot;IP access-list number (expanded range)\n&quot;</span>
<a name="l02575"></a>02575        <span class="stringliteral">&quot;IP standard access-list name\n&quot;</span>)
<a name="l02576"></a>02576 
<a name="l02577"></a>02577 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (match_ip_address_prefix_list, 
<a name="l02578"></a>02578        match_ip_address_prefix_list_cmd,
<a name="l02579"></a>02579        <span class="stringliteral">&quot;match ip address prefix-list WORD&quot;</span>,
<a name="l02580"></a>02580        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02581"></a>02581        <a class="code" href="command_8h.html#af45438f811eb6711be47ea2555b12f75">IP_STR</a>
<a name="l02582"></a>02582        <span class="stringliteral">&quot;Match address of route\n&quot;</span>
<a name="l02583"></a>02583        <span class="stringliteral">&quot;Match entries of prefix-lists\n&quot;</span>
<a name="l02584"></a>02584        <span class="stringliteral">&quot;IP prefix-list name\n&quot;</span>)
<a name="l02585"></a>02585 {
<a name="l02586"></a>02586   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a7f975ecf7ca6870c8978f6aa042e30af">bgp_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip address prefix-list&quot;</span>, argv[0]);
<a name="l02587"></a>02587 }
<a name="l02588"></a>02588 
<a name="l02589"></a><a class="code" href="bgp__routemap_8c.html#aab70487a63da097c6c729931ede3a992">02589</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_match_ip_address_prefix_list,
<a name="l02590"></a>02590        no_match_ip_address_prefix_list_cmd,
<a name="l02591"></a>02591        <span class="stringliteral">&quot;no match ip address prefix-list&quot;</span>,
<a name="l02592"></a>02592        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02593"></a>02593        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02594"></a>02594        <a class="code" href="command_8h.html#af45438f811eb6711be47ea2555b12f75">IP_STR</a>
<a name="l02595"></a>02595        <span class="stringliteral">&quot;Match address of route\n&quot;</span>
<a name="l02596"></a>02596        <span class="stringliteral">&quot;Match entries of prefix-lists\n&quot;</span>)
<a name="l02597"></a>02597 {
<a name="l02598"></a>02598   <span class="keywordflow">if</span> (argc == 0)
<a name="l02599"></a>02599     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip address prefix-list&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l02600"></a>02600 
<a name="l02601"></a>02601   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip address prefix-list&quot;</span>, argv[0]);
<a name="l02602"></a>02602 }
<a name="l02603"></a>02603 
<a name="l02604"></a><a class="code" href="bgp__routemap_8c.html#a4e0c64b78b49e9f9970eca9f761bae84">02604</a> <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_match_ip_address_prefix_list,
<a name="l02605"></a>02605        no_match_ip_address_prefix_list_val_cmd,
<a name="l02606"></a>02606        <span class="stringliteral">&quot;no match ip address prefix-list WORD&quot;</span>,
<a name="l02607"></a>02607        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02608"></a>02608        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02609"></a>02609        <a class="code" href="command_8h.html#af45438f811eb6711be47ea2555b12f75">IP_STR</a>
<a name="l02610"></a>02610        <span class="stringliteral">&quot;Match address of route\n&quot;</span>
<a name="l02611"></a>02611        <span class="stringliteral">&quot;Match entries of prefix-lists\n&quot;</span>
<a name="l02612"></a>02612        <span class="stringliteral">&quot;IP prefix-list name\n&quot;</span>)
<a name="l02613"></a>02613 
<a name="l02614"></a>02614 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (match_ip_next_hop_prefix_list, 
<a name="l02615"></a>02615        match_ip_next_hop_prefix_list_cmd,
<a name="l02616"></a>02616        <span class="stringliteral">&quot;match ip next-hop prefix-list WORD&quot;</span>,
<a name="l02617"></a>02617        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02618"></a>02618        <a class="code" href="command_8h.html#af45438f811eb6711be47ea2555b12f75">IP_STR</a>
<a name="l02619"></a>02619        <span class="stringliteral">&quot;Match next-hop address of route\n&quot;</span>
<a name="l02620"></a>02620        <span class="stringliteral">&quot;Match entries of prefix-lists\n&quot;</span>
<a name="l02621"></a>02621        <span class="stringliteral">&quot;IP prefix-list name\n&quot;</span>)
<a name="l02622"></a>02622 {
<a name="l02623"></a>02623   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a7f975ecf7ca6870c8978f6aa042e30af">bgp_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip next-hop prefix-list&quot;</span>, argv[0]);
<a name="l02624"></a>02624 }
<a name="l02625"></a>02625 
<a name="l02626"></a><a class="code" href="bgp__routemap_8c.html#a9fd5dafea2efffb29c77e6a093804afc">02626</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_match_ip_next_hop_prefix_list,
<a name="l02627"></a>02627        no_match_ip_next_hop_prefix_list_cmd,
<a name="l02628"></a>02628        <span class="stringliteral">&quot;no match ip next-hop prefix-list&quot;</span>,
<a name="l02629"></a>02629        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02630"></a>02630        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02631"></a>02631        <a class="code" href="command_8h.html#af45438f811eb6711be47ea2555b12f75">IP_STR</a>
<a name="l02632"></a>02632        <span class="stringliteral">&quot;Match next-hop address of route\n&quot;</span>
<a name="l02633"></a>02633        <span class="stringliteral">&quot;Match entries of prefix-lists\n&quot;</span>)
<a name="l02634"></a>02634 {
<a name="l02635"></a>02635   <span class="keywordflow">if</span> (argc == 0)
<a name="l02636"></a>02636     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip next-hop prefix-list&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l02637"></a>02637 
<a name="l02638"></a>02638   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip next-hop prefix-list&quot;</span>, argv[0]);
<a name="l02639"></a>02639 }
<a name="l02640"></a>02640 
<a name="l02641"></a><a class="code" href="bgp__routemap_8c.html#adb54a87ee0a1e2938497beddc92275db">02641</a> <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_match_ip_next_hop_prefix_list,
<a name="l02642"></a>02642        no_match_ip_next_hop_prefix_list_val_cmd,
<a name="l02643"></a>02643        <span class="stringliteral">&quot;no match ip next-hop prefix-list WORD&quot;</span>,
<a name="l02644"></a>02644        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02645"></a>02645        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02646"></a>02646        <a class="code" href="command_8h.html#af45438f811eb6711be47ea2555b12f75">IP_STR</a>
<a name="l02647"></a>02647        <span class="stringliteral">&quot;Match next-hop address of route\n&quot;</span>
<a name="l02648"></a>02648        <span class="stringliteral">&quot;Match entries of prefix-lists\n&quot;</span>
<a name="l02649"></a>02649        <span class="stringliteral">&quot;IP prefix-list name\n&quot;</span>)
<a name="l02650"></a>02650 
<a name="l02651"></a>02651 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (match_ip_route_source_prefix_list, 
<a name="l02652"></a>02652        match_ip_route_source_prefix_list_cmd,
<a name="l02653"></a>02653        <span class="stringliteral">&quot;match ip route-source prefix-list WORD&quot;</span>,
<a name="l02654"></a>02654        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02655"></a>02655        <a class="code" href="command_8h.html#af45438f811eb6711be47ea2555b12f75">IP_STR</a>
<a name="l02656"></a>02656        <span class="stringliteral">&quot;Match advertising source address of route\n&quot;</span>
<a name="l02657"></a>02657        <span class="stringliteral">&quot;Match entries of prefix-lists\n&quot;</span>
<a name="l02658"></a>02658        <span class="stringliteral">&quot;IP prefix-list name\n&quot;</span>)
<a name="l02659"></a>02659 {
<a name="l02660"></a>02660   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a7f975ecf7ca6870c8978f6aa042e30af">bgp_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip route-source prefix-list&quot;</span>, argv[0]);
<a name="l02661"></a>02661 }
<a name="l02662"></a>02662 
<a name="l02663"></a><a class="code" href="bgp__routemap_8c.html#a05429e10e870406e4abbaa58bc34c60d">02663</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_match_ip_route_source_prefix_list,
<a name="l02664"></a>02664        no_match_ip_route_source_prefix_list_cmd,
<a name="l02665"></a>02665        <span class="stringliteral">&quot;no match ip route-source prefix-list&quot;</span>,
<a name="l02666"></a>02666        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02667"></a>02667        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02668"></a>02668        <a class="code" href="command_8h.html#af45438f811eb6711be47ea2555b12f75">IP_STR</a>
<a name="l02669"></a>02669        <span class="stringliteral">&quot;Match advertising source address of route\n&quot;</span>
<a name="l02670"></a>02670        <span class="stringliteral">&quot;Match entries of prefix-lists\n&quot;</span>)
<a name="l02671"></a>02671 {
<a name="l02672"></a>02672   <span class="keywordflow">if</span> (argc == 0)
<a name="l02673"></a>02673     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip route-source prefix-list&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l02674"></a>02674 
<a name="l02675"></a>02675   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip route-source prefix-list&quot;</span>, argv[0]);
<a name="l02676"></a>02676 }
<a name="l02677"></a>02677 
<a name="l02678"></a><a class="code" href="bgp__routemap_8c.html#af019d9c4290e6ac3d214d62852f5f718">02678</a> <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_match_ip_route_source_prefix_list,
<a name="l02679"></a>02679        no_match_ip_route_source_prefix_list_val_cmd,
<a name="l02680"></a>02680        <span class="stringliteral">&quot;no match ip route-source prefix-list WORD&quot;</span>,
<a name="l02681"></a>02681        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02682"></a>02682        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02683"></a>02683        <a class="code" href="command_8h.html#af45438f811eb6711be47ea2555b12f75">IP_STR</a>
<a name="l02684"></a>02684        <span class="stringliteral">&quot;Match advertising source address of route\n&quot;</span>
<a name="l02685"></a>02685        <span class="stringliteral">&quot;Match entries of prefix-lists\n&quot;</span>
<a name="l02686"></a>02686        <span class="stringliteral">&quot;IP prefix-list name\n&quot;</span>)
<a name="l02687"></a>02687 
<a name="l02688"></a>02688 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (match_metric, 
<a name="l02689"></a>02689        match_metric_cmd,
<a name="l02690"></a>02690        <span class="stringliteral">&quot;match metric &lt;0-4294967295&gt;&quot;</span>,
<a name="l02691"></a>02691        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02692"></a>02692        <span class="stringliteral">&quot;Match metric of route\n&quot;</span>
<a name="l02693"></a>02693        <span class="stringliteral">&quot;Metric value\n&quot;</span>)
<a name="l02694"></a>02694 {
<a name="l02695"></a>02695   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a7f975ecf7ca6870c8978f6aa042e30af">bgp_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;metric&quot;</span>, argv[0]);
<a name="l02696"></a>02696 }
<a name="l02697"></a>02697 
<a name="l02698"></a><a class="code" href="bgp__routemap_8c.html#a5fea227ab1796cb562d897b7b0217e57">02698</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_match_metric,
<a name="l02699"></a>02699        no_match_metric_cmd,
<a name="l02700"></a>02700        <span class="stringliteral">&quot;no match metric&quot;</span>,
<a name="l02701"></a>02701        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02702"></a>02702        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02703"></a>02703        <span class="stringliteral">&quot;Match metric of route\n&quot;</span>)
<a name="l02704"></a>02704 {
<a name="l02705"></a>02705   <span class="keywordflow">if</span> (argc == 0)
<a name="l02706"></a>02706     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;metric&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l02707"></a>02707 
<a name="l02708"></a>02708   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;metric&quot;</span>, argv[0]);
<a name="l02709"></a>02709 }
<a name="l02710"></a>02710 
<a name="l02711"></a><a class="code" href="bgp__routemap_8c.html#ac46a45c4d86de0f39b4c58d521bcf743">02711</a> <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_match_metric,
<a name="l02712"></a>02712        no_match_metric_val_cmd,
<a name="l02713"></a>02713        <span class="stringliteral">&quot;no match metric &lt;0-4294967295&gt;&quot;</span>,
<a name="l02714"></a>02714        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02715"></a>02715        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02716"></a>02716        <span class="stringliteral">&quot;Match metric of route\n&quot;</span>
<a name="l02717"></a>02717        <span class="stringliteral">&quot;Metric value\n&quot;</span>)
<a name="l02718"></a>02718 
<a name="l02719"></a>02719 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (match_community, 
<a name="l02720"></a>02720        match_community_cmd,
<a name="l02721"></a>02721        <span class="stringliteral">&quot;match community (&lt;1-99&gt;|&lt;100-500&gt;|WORD)&quot;</span>,
<a name="l02722"></a>02722        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02723"></a>02723        <span class="stringliteral">&quot;Match BGP community list\n&quot;</span>
<a name="l02724"></a>02724        <span class="stringliteral">&quot;Community-list number (standard)\n&quot;</span>
<a name="l02725"></a>02725        <span class="stringliteral">&quot;Community-list number (expanded)\n&quot;</span>
<a name="l02726"></a>02726        <span class="stringliteral">&quot;Community-list name\n&quot;</span>)
<a name="l02727"></a>02727 {
<a name="l02728"></a>02728   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a7f975ecf7ca6870c8978f6aa042e30af">bgp_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;community&quot;</span>, argv[0]);
<a name="l02729"></a>02729 }
<a name="l02730"></a>02730 
<a name="l02731"></a><a class="code" href="bgp__routemap_8c.html#a468630b05821737a38593bb87bf8b0ff">02731</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (match_community_exact, 
<a name="l02732"></a>02732        match_community_exact_cmd,
<a name="l02733"></a>02733        <span class="stringliteral">&quot;match community (&lt;1-99&gt;|&lt;100-500&gt;|WORD) exact-match&quot;</span>,
<a name="l02734"></a>02734        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02735"></a>02735        <span class="stringliteral">&quot;Match BGP community list\n&quot;</span>
<a name="l02736"></a>02736        <span class="stringliteral">&quot;Community-list number (standard)\n&quot;</span>
<a name="l02737"></a>02737        <span class="stringliteral">&quot;Community-list number (expanded)\n&quot;</span>
<a name="l02738"></a>02738        <span class="stringliteral">&quot;Community-list name\n&quot;</span>
<a name="l02739"></a>02739        <span class="stringliteral">&quot;Do exact matching of communities\n&quot;</span>)
<a name="l02740"></a>02740 {
<a name="l02741"></a>02741   <span class="keywordtype">int</span> ret;
<a name="l02742"></a>02742   <span class="keywordtype">char</span> *argstr;
<a name="l02743"></a>02743 
<a name="l02744"></a>02744   argstr = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>,
<a name="l02745"></a>02745             strlen (argv[0]) + strlen (<span class="stringliteral">&quot;exact-match&quot;</span>) + 2);
<a name="l02746"></a>02746 
<a name="l02747"></a>02747   sprintf (argstr, <span class="stringliteral">&quot;%s exact-match&quot;</span>, argv[0]);
<a name="l02748"></a>02748 
<a name="l02749"></a>02749   ret = <a class="code" href="bgp__routemap_8c.html#a7f975ecf7ca6870c8978f6aa042e30af">bgp_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;community&quot;</span>, argstr);
<a name="l02750"></a>02750 
<a name="l02751"></a>02751   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, argstr);
<a name="l02752"></a>02752 
<a name="l02753"></a>02753   <span class="keywordflow">return</span> ret;
<a name="l02754"></a>02754 }
<a name="l02755"></a>02755 
<a name="l02756"></a><a class="code" href="bgp__routemap_8c.html#a338be1414c5ab19b90b624b12bd1417d">02756</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_match_community,
<a name="l02757"></a>02757        no_match_community_cmd,
<a name="l02758"></a>02758        <span class="stringliteral">&quot;no match community&quot;</span>,
<a name="l02759"></a>02759        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02760"></a>02760        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02761"></a>02761        <span class="stringliteral">&quot;Match BGP community list\n&quot;</span>)
<a name="l02762"></a>02762 {
<a name="l02763"></a>02763   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;community&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l02764"></a>02764 }
<a name="l02765"></a>02765 
<a name="l02766"></a><a class="code" href="bgp__routemap_8c.html#ab4649525affdf955181cc2b9e4445aa4">02766</a> <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_match_community,
<a name="l02767"></a>02767        no_match_community_val_cmd,
<a name="l02768"></a>02768        <span class="stringliteral">&quot;no match community (&lt;1-99&gt;|&lt;100-500&gt;|WORD)&quot;</span>,
<a name="l02769"></a>02769        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02770"></a>02770        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02771"></a>02771        <span class="stringliteral">&quot;Match BGP community list\n&quot;</span>
<a name="l02772"></a>02772        <span class="stringliteral">&quot;Community-list number (standard)\n&quot;</span>
<a name="l02773"></a>02773        <span class="stringliteral">&quot;Community-list number (expanded)\n&quot;</span>
<a name="l02774"></a>02774        <span class="stringliteral">&quot;Community-list name\n&quot;</span>)
<a name="l02775"></a>02775 
<a name="l02776"></a>02776 <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_match_community,
<a name="l02777"></a>02777        no_match_community_exact_cmd,
<a name="l02778"></a>02778        <span class="stringliteral">&quot;no match community (&lt;1-99&gt;|&lt;100-500&gt;|WORD) exact-match&quot;</span>,
<a name="l02779"></a>02779        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02780"></a>02780        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02781"></a>02781        <span class="stringliteral">&quot;Match BGP community list\n&quot;</span>
<a name="l02782"></a>02782        <span class="stringliteral">&quot;Community-list number (standard)\n&quot;</span>
<a name="l02783"></a>02783        <span class="stringliteral">&quot;Community-list number (expanded)\n&quot;</span>
<a name="l02784"></a>02784        <span class="stringliteral">&quot;Community-list name\n&quot;</span>
<a name="l02785"></a>02785        <span class="stringliteral">&quot;Do exact matching of communities\n&quot;</span>)
<a name="l02786"></a>02786 
<a name="l02787"></a>02787 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (match_ecommunity, 
<a name="l02788"></a>02788        match_ecommunity_cmd,
<a name="l02789"></a>02789        <span class="stringliteral">&quot;match extcommunity (&lt;1-99&gt;|&lt;100-500&gt;|WORD)&quot;</span>,
<a name="l02790"></a>02790        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02791"></a>02791        <span class="stringliteral">&quot;Match BGP/VPN extended community list\n&quot;</span>
<a name="l02792"></a>02792        <span class="stringliteral">&quot;Extended community-list number (standard)\n&quot;</span>
<a name="l02793"></a>02793        <span class="stringliteral">&quot;Extended community-list number (expanded)\n&quot;</span>
<a name="l02794"></a>02794        <span class="stringliteral">&quot;Extended community-list name\n&quot;</span>)
<a name="l02795"></a>02795 {
<a name="l02796"></a>02796   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a7f975ecf7ca6870c8978f6aa042e30af">bgp_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;extcommunity&quot;</span>, argv[0]);
<a name="l02797"></a>02797 }
<a name="l02798"></a>02798 
<a name="l02799"></a><a class="code" href="bgp__routemap_8c.html#a009ee4da1b584bd0017af5d0cc78d1fa">02799</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_match_ecommunity,
<a name="l02800"></a>02800        no_match_ecommunity_cmd,
<a name="l02801"></a>02801        <span class="stringliteral">&quot;no match extcommunity&quot;</span>,
<a name="l02802"></a>02802        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02803"></a>02803        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02804"></a>02804        <span class="stringliteral">&quot;Match BGP/VPN extended community list\n&quot;</span>)
<a name="l02805"></a>02805 {
<a name="l02806"></a>02806   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;extcommunity&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l02807"></a>02807 }
<a name="l02808"></a>02808 
<a name="l02809"></a><a class="code" href="bgp__routemap_8c.html#aedb3af8d7b4bca03d30eb1f07de48b84">02809</a> <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_match_ecommunity,
<a name="l02810"></a>02810        no_match_ecommunity_val_cmd,
<a name="l02811"></a>02811        <span class="stringliteral">&quot;no match extcommunity (&lt;1-99&gt;|&lt;100-500&gt;|WORD)&quot;</span>,
<a name="l02812"></a>02812        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02813"></a>02813        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02814"></a>02814        <span class="stringliteral">&quot;Match BGP/VPN extended community list\n&quot;</span>
<a name="l02815"></a>02815        <span class="stringliteral">&quot;Extended community-list number (standard)\n&quot;</span>
<a name="l02816"></a>02816        <span class="stringliteral">&quot;Extended community-list number (expanded)\n&quot;</span>
<a name="l02817"></a>02817        <span class="stringliteral">&quot;Extended community-list name\n&quot;</span>)
<a name="l02818"></a>02818 
<a name="l02819"></a>02819 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (match_aspath,
<a name="l02820"></a>02820        match_aspath_cmd,
<a name="l02821"></a>02821        <span class="stringliteral">&quot;match as-path WORD&quot;</span>,
<a name="l02822"></a>02822        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02823"></a>02823        <span class="stringliteral">&quot;Match BGP AS path list\n&quot;</span>
<a name="l02824"></a>02824        <span class="stringliteral">&quot;AS path access-list name\n&quot;</span>)
<a name="l02825"></a>02825 {
<a name="l02826"></a>02826   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a7f975ecf7ca6870c8978f6aa042e30af">bgp_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;as-path&quot;</span>, argv[0]);
<a name="l02827"></a>02827 }
<a name="l02828"></a>02828 
<a name="l02829"></a><a class="code" href="bgp__routemap_8c.html#a23df84b868aa19fe75e99b72ffd499b4">02829</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_match_aspath,
<a name="l02830"></a>02830        no_match_aspath_cmd,
<a name="l02831"></a>02831        <span class="stringliteral">&quot;no match as-path&quot;</span>,
<a name="l02832"></a>02832        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02833"></a>02833        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02834"></a>02834        <span class="stringliteral">&quot;Match BGP AS path list\n&quot;</span>)
<a name="l02835"></a>02835 {
<a name="l02836"></a>02836   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;as-path&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l02837"></a>02837 }
<a name="l02838"></a>02838 
<a name="l02839"></a><a class="code" href="bgp__routemap_8c.html#addb4bdfd275b956e9713f9382c9a18fe">02839</a> <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_match_aspath,
<a name="l02840"></a>02840        no_match_aspath_val_cmd,
<a name="l02841"></a>02841        <span class="stringliteral">&quot;no match as-path WORD&quot;</span>,
<a name="l02842"></a>02842        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02843"></a>02843        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02844"></a>02844        <span class="stringliteral">&quot;Match BGP AS path list\n&quot;</span>
<a name="l02845"></a>02845        <span class="stringliteral">&quot;AS path access-list name\n&quot;</span>)
<a name="l02846"></a>02846 
<a name="l02847"></a>02847 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (match_origin,
<a name="l02848"></a>02848        match_origin_cmd,
<a name="l02849"></a>02849        <span class="stringliteral">&quot;match origin (egp|igp|incomplete)&quot;</span>,
<a name="l02850"></a>02850        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02851"></a>02851        <span class="stringliteral">&quot;BGP origin code\n&quot;</span>
<a name="l02852"></a>02852        <span class="stringliteral">&quot;remote EGP\n&quot;</span>
<a name="l02853"></a>02853        <span class="stringliteral">&quot;local IGP\n&quot;</span>
<a name="l02854"></a>02854        <span class="stringliteral">&quot;unknown heritage\n&quot;</span>)
<a name="l02855"></a>02855 {
<a name="l02856"></a>02856   <span class="keywordflow">if</span> (strncmp (argv[0], <span class="stringliteral">&quot;igp&quot;</span>, 2) == 0)
<a name="l02857"></a>02857     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a7f975ecf7ca6870c8978f6aa042e30af">bgp_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;origin&quot;</span>, <span class="stringliteral">&quot;igp&quot;</span>);
<a name="l02858"></a>02858   <span class="keywordflow">if</span> (strncmp (argv[0], <span class="stringliteral">&quot;egp&quot;</span>, 1) == 0)
<a name="l02859"></a>02859     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a7f975ecf7ca6870c8978f6aa042e30af">bgp_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;origin&quot;</span>, <span class="stringliteral">&quot;egp&quot;</span>);
<a name="l02860"></a>02860   <span class="keywordflow">if</span> (strncmp (argv[0], <span class="stringliteral">&quot;incomplete&quot;</span>, 2) == 0)
<a name="l02861"></a>02861     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a7f975ecf7ca6870c8978f6aa042e30af">bgp_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;origin&quot;</span>, <span class="stringliteral">&quot;incomplete&quot;</span>);
<a name="l02862"></a>02862 
<a name="l02863"></a>02863   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02864"></a>02864 }
<a name="l02865"></a>02865 
<a name="l02866"></a><a class="code" href="bgp__routemap_8c.html#a404ff4f922df95e1e20909669cdb8946">02866</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_match_origin,
<a name="l02867"></a>02867        no_match_origin_cmd,
<a name="l02868"></a>02868        <span class="stringliteral">&quot;no match origin&quot;</span>,
<a name="l02869"></a>02869        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02870"></a>02870        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02871"></a>02871        <span class="stringliteral">&quot;BGP origin code\n&quot;</span>)
<a name="l02872"></a>02872 {
<a name="l02873"></a>02873   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;origin&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l02874"></a>02874 }
<a name="l02875"></a>02875 
<a name="l02876"></a><a class="code" href="bgp__routemap_8c.html#af54d37da2a60a7136f796d99a433e50b">02876</a> <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_match_origin,
<a name="l02877"></a>02877        no_match_origin_val_cmd,
<a name="l02878"></a>02878        <span class="stringliteral">&quot;no match origin (egp|igp|incomplete)&quot;</span>,
<a name="l02879"></a>02879        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02880"></a>02880        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l02881"></a>02881        <span class="stringliteral">&quot;BGP origin code\n&quot;</span>
<a name="l02882"></a>02882        <span class="stringliteral">&quot;remote EGP\n&quot;</span>
<a name="l02883"></a>02883        <span class="stringliteral">&quot;local IGP\n&quot;</span>
<a name="l02884"></a>02884        <span class="stringliteral">&quot;unknown heritage\n&quot;</span>)
<a name="l02885"></a>02885 
<a name="l02886"></a>02886 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (set_ip_nexthop,
<a name="l02887"></a>02887        set_ip_nexthop_cmd,
<a name="l02888"></a>02888        <span class="stringliteral">&quot;set ip next-hop A.B.C.D&quot;</span>,
<a name="l02889"></a>02889        <a class="code" href="command_8h.html#a8a545523858bf4d634f845185fc5dc83">SET_STR</a>
<a name="l02890"></a>02890        <a class="code" href="command_8h.html#af45438f811eb6711be47ea2555b12f75">IP_STR</a>
<a name="l02891"></a>02891        <span class="stringliteral">&quot;Next hop address\n&quot;</span>
<a name="l02892"></a>02892        <span class="stringliteral">&quot;IP address of next hop\n&quot;</span>)
<a name="l02893"></a>02893 {
<a name="l02894"></a>02894   <span class="keyword">union </span><a class="code" href="unionsockunion.html">sockunion</a> su;
<a name="l02895"></a>02895   <span class="keywordtype">int</span> ret;
<a name="l02896"></a>02896 
<a name="l02897"></a>02897   ret = <a class="code" href="sockunion_8c.html#aaa4fbd35d2f9346b70e0d6c9e66cae79">str2sockunion</a> (argv[0], &amp;su);
<a name="l02898"></a>02898   <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l02899"></a>02899     {
<a name="l02900"></a>02900       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;%% Malformed Next-hop address%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02901"></a>02901       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02902"></a>02902     }
<a name="l02903"></a>02903  
<a name="l02904"></a>02904   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip next-hop&quot;</span>, argv[0]);
<a name="l02905"></a>02905 }
<a name="l02906"></a>02906 
<a name="l02907"></a><a class="code" href="bgp__routemap_8c.html#aee44ac9fef96f20dd0144bc508fd9ac9">02907</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (set_ip_nexthop_peer,
<a name="l02908"></a>02908        set_ip_nexthop_peer_cmd,
<a name="l02909"></a>02909        <span class="stringliteral">&quot;set ip next-hop peer-address&quot;</span>,
<a name="l02910"></a>02910        <a class="code" href="command_8h.html#a8a545523858bf4d634f845185fc5dc83">SET_STR</a>
<a name="l02911"></a>02911        <a class="code" href="command_8h.html#af45438f811eb6711be47ea2555b12f75">IP_STR</a>
<a name="l02912"></a>02912        <span class="stringliteral">&quot;Next hop address\n&quot;</span>
<a name="l02913"></a>02913        <span class="stringliteral">&quot;Use peer address (for BGP only)\n&quot;</span>)
<a name="l02914"></a>02914 {
<a name="l02915"></a>02915   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip next-hop&quot;</span>, <span class="stringliteral">&quot;peer-address&quot;</span>);
<a name="l02916"></a>02916 }
<a name="l02917"></a>02917 
<a name="l02918"></a><a class="code" href="bgp__routemap_8c.html#a940a00d772ad21c5ed37990be56b4763">02918</a> <a class="code" href="command_8h.html#a58016d03af2b708a14d8067e4e1c0aa9">DEFUN_DEPRECATED</a> (no_set_ip_nexthop_peer,
<a name="l02919"></a>02919        no_set_ip_nexthop_peer_cmd,
<a name="l02920"></a>02920        <span class="stringliteral">&quot;no set ip next-hop peer-address&quot;</span>,
<a name="l02921"></a>02921        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02922"></a>02922        <a class="code" href="command_8h.html#a8a545523858bf4d634f845185fc5dc83">SET_STR</a>
<a name="l02923"></a>02923        <a class="code" href="command_8h.html#af45438f811eb6711be47ea2555b12f75">IP_STR</a>
<a name="l02924"></a>02924        <span class="stringliteral">&quot;Next hop address\n&quot;</span>
<a name="l02925"></a>02925        <span class="stringliteral">&quot;Use peer address (for BGP only)\n&quot;</span>)
<a name="l02926"></a>02926 {
<a name="l02927"></a>02927   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip next-hop&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l02928"></a>02928 }
<a name="l02929"></a>02929 
<a name="l02930"></a>02930 
<a name="l02931"></a><a class="code" href="bgp__routemap_8c.html#a894bfc684fb6287b3ac2a2b0e4f9a0d6">02931</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_set_ip_nexthop,
<a name="l02932"></a>02932        no_set_ip_nexthop_cmd,
<a name="l02933"></a>02933        <span class="stringliteral">&quot;no set ip next-hop&quot;</span>,
<a name="l02934"></a>02934        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02935"></a>02935        <a class="code" href="command_8h.html#a8a545523858bf4d634f845185fc5dc83">SET_STR</a>
<a name="l02936"></a>02936        <span class="stringliteral">&quot;Next hop address\n&quot;</span>)
<a name="l02937"></a>02937 {
<a name="l02938"></a>02938   <span class="keywordflow">if</span> (argc == 0)
<a name="l02939"></a>02939     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip next-hop&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l02940"></a>02940 
<a name="l02941"></a>02941   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ip next-hop&quot;</span>, argv[0]);
<a name="l02942"></a>02942 }
<a name="l02943"></a>02943 
<a name="l02944"></a><a class="code" href="bgp__routemap_8c.html#a492e339e5567c035dbf7539eb3ae0896">02944</a> <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_set_ip_nexthop,
<a name="l02945"></a>02945        no_set_ip_nexthop_val_cmd,
<a name="l02946"></a>02946        <span class="stringliteral">&quot;no set ip next-hop A.B.C.D&quot;</span>,
<a name="l02947"></a>02947        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02948"></a>02948        <a class="code" href="command_8h.html#a8a545523858bf4d634f845185fc5dc83">SET_STR</a>
<a name="l02949"></a>02949        <a class="code" href="command_8h.html#af45438f811eb6711be47ea2555b12f75">IP_STR</a>
<a name="l02950"></a>02950        <span class="stringliteral">&quot;Next hop address\n&quot;</span>
<a name="l02951"></a>02951        <span class="stringliteral">&quot;IP address of next hop\n&quot;</span>)
<a name="l02952"></a>02952 
<a name="l02953"></a>02953 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (<a class="code" href="ospf__abr_8c.html#a57499501cfdfc7c1a078bb1c74f54ca5">set_metric</a>,
<a name="l02954"></a>02954        set_metric_cmd,
<a name="l02955"></a>02955        <span class="stringliteral">&quot;set metric &lt;0-4294967295&gt;&quot;</span>,
<a name="l02956"></a>02956        <a class="code" href="command_8h.html#a8a545523858bf4d634f845185fc5dc83">SET_STR</a>
<a name="l02957"></a>02957        <span class="stringliteral">&quot;Metric value for destination routing protocol\n&quot;</span>
<a name="l02958"></a>02958        <span class="stringliteral">&quot;Metric value\n&quot;</span>)
<a name="l02959"></a>02959 {
<a name="l02960"></a>02960   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;metric&quot;</span>, argv[0]);
<a name="l02961"></a>02961 }
<a name="l02962"></a>02962 
<a name="l02963"></a><a class="code" href="bgp__routemap_8c.html#a9561c39c8d6b2d5d54175aadefcd4213">02963</a> <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (<a class="code" href="ospf__abr_8c.html#a57499501cfdfc7c1a078bb1c74f54ca5">set_metric</a>,
<a name="l02964"></a>02964        set_metric_addsub_cmd,
<a name="l02965"></a>02965        <span class="stringliteral">&quot;set metric &lt;+/-metric&gt;&quot;</span>,
<a name="l02966"></a>02966        <a class="code" href="command_8h.html#a8a545523858bf4d634f845185fc5dc83">SET_STR</a>
<a name="l02967"></a>02967        <span class="stringliteral">&quot;Metric value for destination routing protocol\n&quot;</span>
<a name="l02968"></a>02968        <span class="stringliteral">&quot;Add or subtract metric\n&quot;</span>)
<a name="l02969"></a>02969 
<a name="l02970"></a>02970 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_set_metric,
<a name="l02971"></a>02971        no_set_metric_cmd,
<a name="l02972"></a>02972        &quot;no set <a class="code" href="structmetric.html">metric</a>&quot;,
<a name="l02973"></a>02973        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02974"></a>02974        <a class="code" href="command_8h.html#a8a545523858bf4d634f845185fc5dc83">SET_STR</a>
<a name="l02975"></a>02975        &quot;Metric value for destination routing protocol\<a class="code" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)
<a name="l02976"></a>02976 {
<a name="l02977"></a>02977   <span class="keywordflow">if</span> (argc == 0)
<a name="l02978"></a>02978     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;metric&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l02979"></a>02979 
<a name="l02980"></a>02980   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;metric&quot;</span>, argv[0]);
<a name="l02981"></a>02981 }
<a name="l02982"></a>02982 
<a name="l02983"></a><a class="code" href="bgp__routemap_8c.html#a1f7fbd682e1206cf2819bfb707f4700b">02983</a> <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_set_metric,
<a name="l02984"></a>02984        no_set_metric_val_cmd,
<a name="l02985"></a>02985        <span class="stringliteral">&quot;no set metric &lt;0-4294967295&gt;&quot;</span>,
<a name="l02986"></a>02986        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02987"></a>02987        <a class="code" href="command_8h.html#a8a545523858bf4d634f845185fc5dc83">SET_STR</a>
<a name="l02988"></a>02988        <span class="stringliteral">&quot;Metric value for destination routing protocol\n&quot;</span>
<a name="l02989"></a>02989        <span class="stringliteral">&quot;Metric value\n&quot;</span>)
<a name="l02990"></a>02990 
<a name="l02991"></a>02991 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (set_local_pref,
<a name="l02992"></a>02992        set_local_pref_cmd,
<a name="l02993"></a>02993        <span class="stringliteral">&quot;set local-preference &lt;0-4294967295&gt;&quot;</span>,
<a name="l02994"></a>02994        <a class="code" href="command_8h.html#a8a545523858bf4d634f845185fc5dc83">SET_STR</a>
<a name="l02995"></a>02995        <span class="stringliteral">&quot;BGP local preference path attribute\n&quot;</span>
<a name="l02996"></a>02996        <span class="stringliteral">&quot;Preference value\n&quot;</span>)
<a name="l02997"></a>02997 {
<a name="l02998"></a>02998   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;local-preference&quot;</span>, argv[0]);
<a name="l02999"></a>02999 }
<a name="l03000"></a>03000 
<a name="l03001"></a><a class="code" href="bgp__routemap_8c.html#af5fa0e1901db49ea1e014820d2ae7119">03001</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_set_local_pref,
<a name="l03002"></a>03002        no_set_local_pref_cmd,
<a name="l03003"></a>03003        <span class="stringliteral">&quot;no set local-preference&quot;</span>,
<a name="l03004"></a>03004        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03005"></a>03005        <a class="code" href="command_8h.html#a8a545523858bf4d634f845185fc5dc83">SET_STR</a>
<a name="l03006"></a>03006        <span class="stringliteral">&quot;BGP local preference path attribute\n&quot;</span>)
<a name="l03007"></a>03007 {
<a name="l03008"></a>03008   <span class="keywordflow">if</span> (argc == 0)
<a name="l03009"></a>03009     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;local-preference&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l03010"></a>03010 
<a name="l03011"></a>03011   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;local-preference&quot;</span>, argv[0]);
<a name="l03012"></a>03012 }
<a name="l03013"></a>03013 
<a name="l03014"></a><a class="code" href="bgp__routemap_8c.html#ac3cc0b7cd69064c0e9ee56d9a4078a85">03014</a> <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_set_local_pref,
<a name="l03015"></a>03015        no_set_local_pref_val_cmd,
<a name="l03016"></a>03016        <span class="stringliteral">&quot;no set local-preference &lt;0-4294967295&gt;&quot;</span>,
<a name="l03017"></a>03017        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03018"></a>03018        <a class="code" href="command_8h.html#a8a545523858bf4d634f845185fc5dc83">SET_STR</a>
<a name="l03019"></a>03019        <span class="stringliteral">&quot;BGP local preference path attribute\n&quot;</span>
<a name="l03020"></a>03020        <span class="stringliteral">&quot;Preference value\n&quot;</span>)
<a name="l03021"></a>03021 
<a name="l03022"></a>03022 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (set_weight,
<a name="l03023"></a>03023        set_weight_cmd,
<a name="l03024"></a>03024        <span class="stringliteral">&quot;set weight &lt;0-4294967295&gt;&quot;</span>,
<a name="l03025"></a>03025        <a class="code" href="command_8h.html#a8a545523858bf4d634f845185fc5dc83">SET_STR</a>
<a name="l03026"></a>03026        <span class="stringliteral">&quot;BGP weight for routing table\n&quot;</span>
<a name="l03027"></a>03027        <span class="stringliteral">&quot;Weight value\n&quot;</span>)
<a name="l03028"></a>03028 {
<a name="l03029"></a>03029   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;weight&quot;</span>, argv[0]);
<a name="l03030"></a>03030 }
<a name="l03031"></a>03031 
<a name="l03032"></a><a class="code" href="bgp__routemap_8c.html#a1deed0eeb5490a4d732fdf000200ef6b">03032</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_set_weight,
<a name="l03033"></a>03033        no_set_weight_cmd,
<a name="l03034"></a>03034        <span class="stringliteral">&quot;no set weight&quot;</span>,
<a name="l03035"></a>03035        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03036"></a>03036        <a class="code" href="command_8h.html#a8a545523858bf4d634f845185fc5dc83">SET_STR</a>
<a name="l03037"></a>03037        <span class="stringliteral">&quot;BGP weight for routing table\n&quot;</span>)
<a name="l03038"></a>03038 {
<a name="l03039"></a>03039   <span class="keywordflow">if</span> (argc == 0)
<a name="l03040"></a>03040     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;weight&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l03041"></a>03041   
<a name="l03042"></a>03042   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;weight&quot;</span>, argv[0]);
<a name="l03043"></a>03043 }
<a name="l03044"></a>03044 
<a name="l03045"></a><a class="code" href="bgp__routemap_8c.html#a60b11f8bf030c0ca7574c37be1942a52">03045</a> <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_set_weight,
<a name="l03046"></a>03046        no_set_weight_val_cmd,
<a name="l03047"></a>03047        <span class="stringliteral">&quot;no set weight &lt;0-4294967295&gt;&quot;</span>,
<a name="l03048"></a>03048        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03049"></a>03049        <a class="code" href="command_8h.html#a8a545523858bf4d634f845185fc5dc83">SET_STR</a>
<a name="l03050"></a>03050        <span class="stringliteral">&quot;BGP weight for routing table\n&quot;</span>
<a name="l03051"></a>03051        <span class="stringliteral">&quot;Weight value\n&quot;</span>)
<a name="l03052"></a>03052 
<a name="l03053"></a>03053 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (set_aspath_prepend,
<a name="l03054"></a>03054        set_aspath_prepend_cmd,
<a name="l03055"></a>03055        <span class="stringliteral">&quot;set as-path prepend .&quot;</span> <a class="code" href="bgp__vty_8h.html#a8799f670368c0af42774d6a740556afe">CMD_AS_RANGE</a>,
<a name="l03056"></a>03056        <a class="code" href="command_8h.html#a8a545523858bf4d634f845185fc5dc83">SET_STR</a>
<a name="l03057"></a>03057        <span class="stringliteral">&quot;Transform BGP AS_PATH attribute\n&quot;</span>
<a name="l03058"></a>03058        <span class="stringliteral">&quot;Prepend to the as-path\n&quot;</span>
<a name="l03059"></a>03059        <span class="stringliteral">&quot;AS number\n&quot;</span>)
<a name="l03060"></a>03060 {
<a name="l03061"></a>03061   <span class="keywordtype">int</span> ret;
<a name="l03062"></a>03062   <span class="keywordtype">char</span> *<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>;
<a name="l03063"></a>03063 
<a name="l03064"></a>03064   str = <a class="code" href="command_8c.html#a262c4f7766ffb060fe8b5012d58367a2">argv_concat</a> (argv, argc, 0);
<a name="l03065"></a>03065   ret = <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;as-path prepend&quot;</span>, str);
<a name="l03066"></a>03066   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, str);
<a name="l03067"></a>03067 
<a name="l03068"></a>03068   <span class="keywordflow">return</span> ret;
<a name="l03069"></a>03069 }
<a name="l03070"></a>03070 
<a name="l03071"></a><a class="code" href="bgp__routemap_8c.html#a2df355770ef17d9a2f0e4bf0ebd08196">03071</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_set_aspath_prepend,
<a name="l03072"></a>03072        no_set_aspath_prepend_cmd,
<a name="l03073"></a>03073        <span class="stringliteral">&quot;no set as-path prepend&quot;</span>,
<a name="l03074"></a>03074        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03075"></a>03075        <a class="code" href="command_8h.html#a8a545523858bf4d634f845185fc5dc83">SET_STR</a>
<a name="l03076"></a>03076        <span class="stringliteral">&quot;Transform BGP AS_PATH attribute\n&quot;</span>
<a name="l03077"></a>03077        <span class="stringliteral">&quot;Prepend to the as-path\n&quot;</span>)
<a name="l03078"></a>03078 {
<a name="l03079"></a>03079   <span class="keywordtype">int</span> ret;
<a name="l03080"></a>03080   <span class="keywordtype">char</span> *<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>;
<a name="l03081"></a>03081 
<a name="l03082"></a>03082   <span class="keywordflow">if</span> (argc == 0)
<a name="l03083"></a>03083     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;as-path prepend&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l03084"></a>03084 
<a name="l03085"></a>03085   str = <a class="code" href="command_8c.html#a262c4f7766ffb060fe8b5012d58367a2">argv_concat</a> (argv, argc, 0);
<a name="l03086"></a>03086   ret = <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;as-path prepend&quot;</span>, str);
<a name="l03087"></a>03087   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, str);
<a name="l03088"></a>03088   <span class="keywordflow">return</span> ret;
<a name="l03089"></a>03089 }
<a name="l03090"></a>03090 
<a name="l03091"></a>03091 <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_set_aspath_prepend,
<a name="l03092"></a>03092        no_set_aspath_prepend_val_cmd,
<a name="l03093"></a>03093        <span class="stringliteral">&quot;no set as-path prepend .&quot;</span> <a class="code" href="bgp__vty_8h.html#a8799f670368c0af42774d6a740556afe">CMD_AS_RANGE</a>,
<a name="l03094"></a>03094        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03095"></a>03095        <a class="code" href="command_8h.html#a8a545523858bf4d634f845185fc5dc83">SET_STR</a>
<a name="l03096"></a>03096        <span class="stringliteral">&quot;Transform BGP AS_PATH attribute\n&quot;</span>
<a name="l03097"></a>03097        <span class="stringliteral">&quot;Prepend to the as-path\n&quot;</span>
<a name="l03098"></a>03098        <span class="stringliteral">&quot;AS number\n&quot;</span>)
<a name="l03099"></a>03099 
<a name="l03100"></a>03100 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (set_aspath_exclude,
<a name="l03101"></a><a class="code" href="bgp__routemap_8c.html#ab933edaacd16fdb03a3ef99db77d0433">03101</a>        <a class="code" href="bgp__routemap_8c.html#ab933edaacd16fdb03a3ef99db77d0433">set_aspath_exclude_cmd</a>,
<a name="l03102"></a>03102        <span class="stringliteral">&quot;set as-path exclude .&quot;</span> <a class="code" href="bgp__vty_8h.html#a8799f670368c0af42774d6a740556afe">CMD_AS_RANGE</a>,
<a name="l03103"></a>03103        <a class="code" href="command_8h.html#a8a545523858bf4d634f845185fc5dc83">SET_STR</a>
<a name="l03104"></a>03104        <span class="stringliteral">&quot;Transform BGP AS-path attribute\n&quot;</span>
<a name="l03105"></a>03105        <span class="stringliteral">&quot;Exclude from the as-path\n&quot;</span>
<a name="l03106"></a>03106        <span class="stringliteral">&quot;AS number\n&quot;</span>)
<a name="l03107"></a>03107 {
<a name="l03108"></a>03108   <span class="keywordtype">int</span> ret;
<a name="l03109"></a>03109   <span class="keywordtype">char</span> *<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>;
<a name="l03110"></a>03110 
<a name="l03111"></a>03111   str = <a class="code" href="command_8c.html#a262c4f7766ffb060fe8b5012d58367a2">argv_concat</a> (argv, argc, 0);
<a name="l03112"></a>03112   ret = <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;as-path exclude&quot;</span>, str);
<a name="l03113"></a>03113   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, str);
<a name="l03114"></a>03114   <span class="keywordflow">return</span> ret;
<a name="l03115"></a>03115 }
<a name="l03116"></a>03116 
<a name="l03117"></a>03117 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_set_aspath_exclude,
<a name="l03118"></a>03118        no_set_aspath_exclude_cmd,
<a name="l03119"></a>03119        <span class="stringliteral">&quot;no set as-path exclude&quot;</span>,
<a name="l03120"></a>03120        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03121"></a>03121        <a class="code" href="command_8h.html#a8a545523858bf4d634f845185fc5dc83">SET_STR</a>
<a name="l03122"></a>03122        <span class="stringliteral">&quot;Transform BGP AS_PATH attribute\n&quot;</span>
<a name="l03123"></a>03123        <span class="stringliteral">&quot;Exclude from the as-path\n&quot;</span>)
<a name="l03124"></a>03124 {
<a name="l03125"></a>03125   <span class="keywordtype">int</span> ret;
<a name="l03126"></a>03126   <span class="keywordtype">char</span> *<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>;
<a name="l03127"></a>03127 
<a name="l03128"></a>03128   <span class="keywordflow">if</span> (argc == 0)
<a name="l03129"></a>03129     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;as-path exclude&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l03130"></a>03130 
<a name="l03131"></a>03131   str = <a class="code" href="command_8c.html#a262c4f7766ffb060fe8b5012d58367a2">argv_concat</a> (argv, argc, 0);
<a name="l03132"></a>03132   ret = <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;as-path exclude&quot;</span>, str);
<a name="l03133"></a>03133   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, str);
<a name="l03134"></a>03134   <span class="keywordflow">return</span> ret;
<a name="l03135"></a>03135 }
<a name="l03136"></a>03136 
<a name="l03137"></a>03137 <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_set_aspath_exclude,
<a name="l03138"></a>03138        no_set_aspath_exclude_val_cmd,
<a name="l03139"></a>03139        <span class="stringliteral">&quot;no set as-path exclude .&quot;</span> <a class="code" href="bgp__vty_8h.html#a8799f670368c0af42774d6a740556afe">CMD_AS_RANGE</a>,
<a name="l03140"></a>03140        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03141"></a>03141        SET_STR
<a name="l03142"></a>03142        <span class="stringliteral">&quot;Transform BGP AS_PATH attribute\n&quot;</span>
<a name="l03143"></a>03143        <span class="stringliteral">&quot;Exclude from the as-path\n&quot;</span>
<a name="l03144"></a>03144        <span class="stringliteral">&quot;AS number\n&quot;</span>)
<a name="l03145"></a>03145 
<a name="l03146"></a>03146 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (set_community,
<a name="l03147"></a>03147        set_community_cmd,
<a name="l03148"></a>03148        <span class="stringliteral">&quot;set community .AA:NN&quot;</span>,
<a name="l03149"></a>03149        SET_STR
<a name="l03150"></a>03150        <span class="stringliteral">&quot;BGP community attribute\n&quot;</span>
<a name="l03151"></a>03151        <span class="stringliteral">&quot;Community number in aa:nn format or local-AS|no-advertise|no-export|internet or additive\n&quot;</span>)
<a name="l03152"></a>03152 {
<a name="l03153"></a>03153   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l03154"></a>03154   <span class="keywordtype">int</span> first = 0;
<a name="l03155"></a>03155   <span class="keywordtype">int</span> additive = 0;
<a name="l03156"></a>03156   <span class="keyword">struct </span><a class="code" href="structbuffer.html">buffer</a> *<a class="code" href="ripng__nexthop_8h.html#a337ad8a7e52da2d584c2018f2ec2c81e">b</a>;
<a name="l03157"></a>03157   <span class="keyword">struct </span><a class="code" href="structcommunity.html">community</a> *com = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l03158"></a>03158   <span class="keywordtype">char</span> *<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>;
<a name="l03159"></a>03159   <span class="keywordtype">char</span> *argstr;
<a name="l03160"></a>03160   <span class="keywordtype">int</span> ret;
<a name="l03161"></a>03161 
<a name="l03162"></a>03162   b = <a class="code" href="buffer_8c.html#a277b94d1c81d4e5ac2e5c59ede1abed9">buffer_new</a> (1024);
<a name="l03163"></a>03163 
<a name="l03164"></a>03164   <span class="keywordflow">for</span> (i = 0; i &lt; argc; i++)
<a name="l03165"></a>03165     {
<a name="l03166"></a>03166       <span class="keywordflow">if</span> (strncmp (argv[i], <span class="stringliteral">&quot;additive&quot;</span>, strlen (argv[i])) == 0)
<a name="l03167"></a>03167     {
<a name="l03168"></a>03168       additive = 1;
<a name="l03169"></a>03169       <span class="keywordflow">continue</span>;
<a name="l03170"></a>03170     }
<a name="l03171"></a>03171 
<a name="l03172"></a>03172       <span class="keywordflow">if</span> (first)
<a name="l03173"></a>03173     <a class="code" href="buffer_8c.html#a3734e531dc5995ac29c055c4b66822d4">buffer_putc</a> (b, <span class="charliteral">&#39; &#39;</span>);
<a name="l03174"></a>03174       <span class="keywordflow">else</span>
<a name="l03175"></a>03175     first = 1;
<a name="l03176"></a>03176 
<a name="l03177"></a>03177       <span class="keywordflow">if</span> (strncmp (argv[i], <span class="stringliteral">&quot;internet&quot;</span>, strlen (argv[i])) == 0)
<a name="l03178"></a>03178     {
<a name="l03179"></a>03179       <a class="code" href="buffer_8c.html#a23f67bdda323e69158b6e4587ad19649">buffer_putstr</a> (b, <span class="stringliteral">&quot;internet&quot;</span>);
<a name="l03180"></a>03180       <span class="keywordflow">continue</span>;
<a name="l03181"></a>03181     }
<a name="l03182"></a>03182       <span class="keywordflow">if</span> (strncmp (argv[i], <span class="stringliteral">&quot;local-AS&quot;</span>, strlen (argv[i])) == 0)
<a name="l03183"></a>03183     {
<a name="l03184"></a>03184       <a class="code" href="buffer_8c.html#a23f67bdda323e69158b6e4587ad19649">buffer_putstr</a> (b, <span class="stringliteral">&quot;local-AS&quot;</span>);
<a name="l03185"></a>03185       <span class="keywordflow">continue</span>;
<a name="l03186"></a>03186     }
<a name="l03187"></a>03187       <span class="keywordflow">if</span> (strncmp (argv[i], <span class="stringliteral">&quot;no-a&quot;</span>, strlen (<span class="stringliteral">&quot;no-a&quot;</span>)) == 0
<a name="l03188"></a>03188       &amp;&amp; strncmp (argv[i], <span class="stringliteral">&quot;no-advertise&quot;</span>, strlen (argv[i])) == 0)
<a name="l03189"></a>03189     {
<a name="l03190"></a>03190       <a class="code" href="buffer_8c.html#a23f67bdda323e69158b6e4587ad19649">buffer_putstr</a> (b, <span class="stringliteral">&quot;no-advertise&quot;</span>);
<a name="l03191"></a>03191       <span class="keywordflow">continue</span>;
<a name="l03192"></a>03192     }
<a name="l03193"></a>03193       <span class="keywordflow">if</span> (strncmp (argv[i], <span class="stringliteral">&quot;no-e&quot;</span>, strlen (<span class="stringliteral">&quot;no-e&quot;</span>))== 0
<a name="l03194"></a>03194       &amp;&amp; strncmp (argv[i], <span class="stringliteral">&quot;no-export&quot;</span>, strlen (argv[i])) == 0)
<a name="l03195"></a>03195     {
<a name="l03196"></a>03196       <a class="code" href="buffer_8c.html#a23f67bdda323e69158b6e4587ad19649">buffer_putstr</a> (b, <span class="stringliteral">&quot;no-export&quot;</span>);
<a name="l03197"></a>03197       <span class="keywordflow">continue</span>;
<a name="l03198"></a>03198     }
<a name="l03199"></a>03199       <a class="code" href="buffer_8c.html#a23f67bdda323e69158b6e4587ad19649">buffer_putstr</a> (b, argv[i]);
<a name="l03200"></a>03200     }
<a name="l03201"></a>03201   <a class="code" href="buffer_8c.html#a3734e531dc5995ac29c055c4b66822d4">buffer_putc</a> (b, <span class="charliteral">&#39;\0&#39;</span>);
<a name="l03202"></a>03202 
<a name="l03203"></a>03203   <span class="comment">/* Fetch result string then compile it to communities attribute.  */</span>
<a name="l03204"></a>03204   str = <a class="code" href="buffer_8c.html#a75902fea80bfc9527677a70130208480">buffer_getstr</a> (b);
<a name="l03205"></a>03205   <a class="code" href="buffer_8c.html#a33630b21db5f9cda080c24c3175bde5a">buffer_free</a> (b);
<a name="l03206"></a>03206 
<a name="l03207"></a>03207   <span class="keywordflow">if</span> (str)
<a name="l03208"></a>03208     {
<a name="l03209"></a>03209       com = <a class="code" href="bgp__community_8c.html#ae6b14a28bd7622ffb1b9f5b20897e648">community_str2com</a> (str);
<a name="l03210"></a>03210       <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, str);
<a name="l03211"></a>03211     }
<a name="l03212"></a>03212 
<a name="l03213"></a>03213   <span class="comment">/* Can&#39;t compile user input into communities attribute.  */</span>
<a name="l03214"></a>03214   <span class="keywordflow">if</span> (! com)
<a name="l03215"></a>03215     {
<a name="l03216"></a>03216       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;%% Malformed communities attribute%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l03217"></a>03217       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l03218"></a>03218     }
<a name="l03219"></a>03219 
<a name="l03220"></a>03220   <span class="comment">/* Set communites attribute string.  */</span>
<a name="l03221"></a>03221   str = <a class="code" href="bgp__community_8c.html#a46ddc4b676977762237ba3c27f9ff98e">community_str</a> (com);
<a name="l03222"></a>03222 
<a name="l03223"></a>03223   <span class="keywordflow">if</span> (additive)
<a name="l03224"></a>03224     {
<a name="l03225"></a>03225       argstr = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, strlen (str) + strlen (<span class="stringliteral">&quot; additive&quot;</span>) + 1);
<a name="l03226"></a>03226       strcpy (argstr, str);
<a name="l03227"></a>03227       strcpy (argstr + strlen (str), <span class="stringliteral">&quot; additive&quot;</span>);
<a name="l03228"></a>03228       ret =  <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;community&quot;</span>, argstr);
<a name="l03229"></a>03229       <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, argstr);
<a name="l03230"></a>03230     }
<a name="l03231"></a>03231   <span class="keywordflow">else</span>
<a name="l03232"></a>03232     ret =  <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;community&quot;</span>, str);
<a name="l03233"></a>03233 
<a name="l03234"></a>03234   <a class="code" href="bgp__community_8c.html#a890bdfd2f7517c0fe7f30687d1d4d825">community_free</a> (com);
<a name="l03235"></a>03235 
<a name="l03236"></a>03236   <span class="keywordflow">return</span> ret;
<a name="l03237"></a>03237 }
<a name="l03238"></a>03238 
<a name="l03239"></a>03239 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (set_community_none,
<a name="l03240"></a>03240        set_community_none_cmd,
<a name="l03241"></a>03241        <span class="stringliteral">&quot;set community none&quot;</span>,
<a name="l03242"></a>03242        SET_STR
<a name="l03243"></a>03243        <span class="stringliteral">&quot;BGP community attribute\n&quot;</span>
<a name="l03244"></a>03244        <span class="stringliteral">&quot;No community attribute\n&quot;</span>)
<a name="l03245"></a>03245 {
<a name="l03246"></a>03246   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;community&quot;</span>, <span class="stringliteral">&quot;none&quot;</span>);
<a name="l03247"></a>03247 }
<a name="l03248"></a>03248 
<a name="l03249"></a>03249 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_set_community,
<a name="l03250"></a>03250        no_set_community_cmd,
<a name="l03251"></a>03251        <span class="stringliteral">&quot;no set community&quot;</span>,
<a name="l03252"></a>03252        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03253"></a>03253        SET_STR
<a name="l03254"></a>03254        <span class="stringliteral">&quot;BGP community attribute\n&quot;</span>)
<a name="l03255"></a>03255 {
<a name="l03256"></a>03256   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;community&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l03257"></a>03257 }
<a name="l03258"></a>03258 
<a name="l03259"></a>03259 <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_set_community,
<a name="l03260"></a>03260        no_set_community_val_cmd,
<a name="l03261"></a>03261        <span class="stringliteral">&quot;no set community .AA:NN&quot;</span>,
<a name="l03262"></a>03262        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03263"></a>03263        SET_STR
<a name="l03264"></a>03264        <span class="stringliteral">&quot;BGP community attribute\n&quot;</span>
<a name="l03265"></a>03265        <span class="stringliteral">&quot;Community number in aa:nn format or local-AS|no-advertise|no-export|internet or additive\n&quot;</span>)
<a name="l03266"></a>03266 
<a name="l03267"></a>03267 <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_set_community,
<a name="l03268"></a>03268        no_set_community_none_cmd,
<a name="l03269"></a>03269        <span class="stringliteral">&quot;no set community none&quot;</span>,
<a name="l03270"></a>03270        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03271"></a>03271        SET_STR
<a name="l03272"></a>03272        <span class="stringliteral">&quot;BGP community attribute\n&quot;</span>
<a name="l03273"></a>03273        <span class="stringliteral">&quot;No community attribute\n&quot;</span>)
<a name="l03274"></a>03274 
<a name="l03275"></a>03275 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (set_community_delete,
<a name="l03276"></a>03276        set_community_delete_cmd,
<a name="l03277"></a>03277        <span class="stringliteral">&quot;set comm-list (&lt;1-99&gt;|&lt;100-500&gt;|WORD) delete&quot;</span>,
<a name="l03278"></a>03278        SET_STR
<a name="l03279"></a>03279        <span class="stringliteral">&quot;set BGP community list (for deletion)\n&quot;</span>
<a name="l03280"></a>03280        <span class="stringliteral">&quot;Community-list number (standard)\n&quot;</span>
<a name="l03281"></a>03281        <span class="stringliteral">&quot;Communitly-list number (expanded)\n&quot;</span>
<a name="l03282"></a>03282        <span class="stringliteral">&quot;Community-list name\n&quot;</span>
<a name="l03283"></a>03283        <span class="stringliteral">&quot;Delete matching communities\n&quot;</span>)
<a name="l03284"></a>03284 {
<a name="l03285"></a>03285   <span class="keywordtype">char</span> *<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>;
<a name="l03286"></a>03286 
<a name="l03287"></a>03287   str = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, strlen (argv[0]) + strlen (<span class="stringliteral">&quot; delete&quot;</span>) + 1);
<a name="l03288"></a>03288   strcpy (str, argv[0]);
<a name="l03289"></a>03289   strcpy (str + strlen (argv[0]), <span class="stringliteral">&quot; delete&quot;</span>);
<a name="l03290"></a>03290 
<a name="l03291"></a>03291   <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;comm-list&quot;</span>, str);
<a name="l03292"></a>03292 
<a name="l03293"></a>03293   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, str);
<a name="l03294"></a>03294   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l03295"></a>03295 }
<a name="l03296"></a>03296 
<a name="l03297"></a>03297 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_set_community_delete,
<a name="l03298"></a>03298        no_set_community_delete_cmd,
<a name="l03299"></a>03299        <span class="stringliteral">&quot;no set comm-list&quot;</span>,
<a name="l03300"></a>03300        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03301"></a>03301        SET_STR
<a name="l03302"></a>03302        <span class="stringliteral">&quot;set BGP community list (for deletion)\n&quot;</span>)
<a name="l03303"></a>03303 {
<a name="l03304"></a>03304   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;comm-list&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l03305"></a>03305 }
<a name="l03306"></a>03306 
<a name="l03307"></a>03307 <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_set_community_delete,
<a name="l03308"></a>03308        no_set_community_delete_val_cmd,
<a name="l03309"></a>03309        <span class="stringliteral">&quot;no set comm-list (&lt;1-99&gt;|&lt;100-500&gt;|WORD) delete&quot;</span>,
<a name="l03310"></a>03310        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03311"></a>03311        SET_STR
<a name="l03312"></a>03312        <span class="stringliteral">&quot;set BGP community list (for deletion)\n&quot;</span>
<a name="l03313"></a>03313        <span class="stringliteral">&quot;Community-list number (standard)\n&quot;</span>
<a name="l03314"></a>03314        <span class="stringliteral">&quot;Communitly-list number (expanded)\n&quot;</span>
<a name="l03315"></a>03315        <span class="stringliteral">&quot;Community-list name\n&quot;</span>
<a name="l03316"></a>03316        <span class="stringliteral">&quot;Delete matching communities\n&quot;</span>)
<a name="l03317"></a>03317 
<a name="l03318"></a>03318 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (set_ecommunity_rt,
<a name="l03319"></a>03319        set_ecommunity_rt_cmd,
<a name="l03320"></a>03320        <span class="stringliteral">&quot;set extcommunity rt .ASN:nn_or_IP-address:nn&quot;</span>,
<a name="l03321"></a>03321        SET_STR
<a name="l03322"></a>03322        <span class="stringliteral">&quot;BGP extended community attribute\n&quot;</span>
<a name="l03323"></a>03323        <span class="stringliteral">&quot;Route Target extended community\n&quot;</span>
<a name="l03324"></a>03324        <span class="stringliteral">&quot;VPN extended community\n&quot;</span>)
<a name="l03325"></a>03325 {
<a name="l03326"></a>03326   <span class="keywordtype">int</span> ret;
<a name="l03327"></a>03327   <span class="keywordtype">char</span> *<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>;
<a name="l03328"></a>03328 
<a name="l03329"></a>03329   str = <a class="code" href="command_8c.html#a262c4f7766ffb060fe8b5012d58367a2">argv_concat</a> (argv, argc, 0);
<a name="l03330"></a>03330   ret = <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;extcommunity rt&quot;</span>, str);
<a name="l03331"></a>03331   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, str);
<a name="l03332"></a>03332 
<a name="l03333"></a>03333   <span class="keywordflow">return</span> ret;
<a name="l03334"></a>03334 }
<a name="l03335"></a>03335 
<a name="l03336"></a>03336 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_set_ecommunity_rt,
<a name="l03337"></a>03337        no_set_ecommunity_rt_cmd,
<a name="l03338"></a>03338        <span class="stringliteral">&quot;no set extcommunity rt&quot;</span>,
<a name="l03339"></a>03339        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03340"></a>03340        SET_STR
<a name="l03341"></a>03341        <span class="stringliteral">&quot;BGP extended community attribute\n&quot;</span>
<a name="l03342"></a>03342        <span class="stringliteral">&quot;Route Target extended community\n&quot;</span>)
<a name="l03343"></a>03343 {
<a name="l03344"></a>03344   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;extcommunity rt&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l03345"></a>03345 }
<a name="l03346"></a>03346 
<a name="l03347"></a>03347 <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_set_ecommunity_rt,
<a name="l03348"></a>03348        no_set_ecommunity_rt_val_cmd,
<a name="l03349"></a>03349        <span class="stringliteral">&quot;no set extcommunity rt .ASN:nn_or_IP-address:nn&quot;</span>,
<a name="l03350"></a>03350        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03351"></a>03351        SET_STR
<a name="l03352"></a>03352        <span class="stringliteral">&quot;BGP extended community attribute\n&quot;</span>
<a name="l03353"></a>03353        <span class="stringliteral">&quot;Route Target extended community\n&quot;</span>
<a name="l03354"></a>03354        <span class="stringliteral">&quot;VPN extended community\n&quot;</span>)
<a name="l03355"></a>03355 
<a name="l03356"></a>03356 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (set_ecommunity_soo,
<a name="l03357"></a>03357        set_ecommunity_soo_cmd,
<a name="l03358"></a>03358        <span class="stringliteral">&quot;set extcommunity soo .ASN:nn_or_IP-address:nn&quot;</span>,
<a name="l03359"></a>03359        SET_STR
<a name="l03360"></a>03360        <span class="stringliteral">&quot;BGP extended community attribute\n&quot;</span>
<a name="l03361"></a>03361        <span class="stringliteral">&quot;Site-of-Origin extended community\n&quot;</span>
<a name="l03362"></a>03362        <span class="stringliteral">&quot;VPN extended community\n&quot;</span>)
<a name="l03363"></a>03363 {
<a name="l03364"></a>03364   <span class="keywordtype">int</span> ret;
<a name="l03365"></a>03365   <span class="keywordtype">char</span> *<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>;
<a name="l03366"></a>03366 
<a name="l03367"></a>03367   str = <a class="code" href="command_8c.html#a262c4f7766ffb060fe8b5012d58367a2">argv_concat</a> (argv, argc, 0);
<a name="l03368"></a>03368   ret = <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;extcommunity soo&quot;</span>, str);
<a name="l03369"></a>03369   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, str);
<a name="l03370"></a>03370   <span class="keywordflow">return</span> ret;
<a name="l03371"></a>03371 }
<a name="l03372"></a>03372 
<a name="l03373"></a>03373 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_set_ecommunity_soo,
<a name="l03374"></a>03374        no_set_ecommunity_soo_cmd,
<a name="l03375"></a>03375        <span class="stringliteral">&quot;no set extcommunity soo&quot;</span>,
<a name="l03376"></a>03376        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03377"></a>03377        SET_STR
<a name="l03378"></a>03378        <span class="stringliteral">&quot;BGP extended community attribute\n&quot;</span>
<a name="l03379"></a>03379        <span class="stringliteral">&quot;Site-of-Origin extended community\n&quot;</span>)
<a name="l03380"></a>03380 {
<a name="l03381"></a>03381   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;extcommunity soo&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l03382"></a>03382 }
<a name="l03383"></a>03383 
<a name="l03384"></a>03384 <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_set_ecommunity_soo,
<a name="l03385"></a>03385        no_set_ecommunity_soo_val_cmd,
<a name="l03386"></a>03386        <span class="stringliteral">&quot;no set extcommunity soo .ASN:nn_or_IP-address:nn&quot;</span>,
<a name="l03387"></a>03387        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03388"></a>03388        SET_STR
<a name="l03389"></a>03389        <span class="stringliteral">&quot;BGP extended community attribute\n&quot;</span>
<a name="l03390"></a>03390        <span class="stringliteral">&quot;Site-of-Origin extended community\n&quot;</span>
<a name="l03391"></a>03391        <span class="stringliteral">&quot;VPN extended community\n&quot;</span>)
<a name="l03392"></a>03392 
<a name="l03393"></a>03393 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (set_origin,
<a name="l03394"></a>03394        set_origin_cmd,
<a name="l03395"></a>03395        <span class="stringliteral">&quot;set origin (egp|igp|incomplete)&quot;</span>,
<a name="l03396"></a>03396        SET_STR
<a name="l03397"></a>03397        <span class="stringliteral">&quot;BGP origin code\n&quot;</span>
<a name="l03398"></a>03398        <span class="stringliteral">&quot;remote EGP\n&quot;</span>
<a name="l03399"></a>03399        <span class="stringliteral">&quot;local IGP\n&quot;</span>
<a name="l03400"></a>03400        <span class="stringliteral">&quot;unknown heritage\n&quot;</span>)
<a name="l03401"></a>03401 {
<a name="l03402"></a>03402   <span class="keywordflow">if</span> (strncmp (argv[0], <span class="stringliteral">&quot;igp&quot;</span>, 2) == 0)
<a name="l03403"></a>03403     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;origin&quot;</span>, <span class="stringliteral">&quot;igp&quot;</span>);
<a name="l03404"></a>03404   <span class="keywordflow">if</span> (strncmp (argv[0], <span class="stringliteral">&quot;egp&quot;</span>, 1) == 0)
<a name="l03405"></a>03405     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;origin&quot;</span>, <span class="stringliteral">&quot;egp&quot;</span>);
<a name="l03406"></a>03406   <span class="keywordflow">if</span> (strncmp (argv[0], <span class="stringliteral">&quot;incomplete&quot;</span>, 2) == 0)
<a name="l03407"></a>03407     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;origin&quot;</span>, <span class="stringliteral">&quot;incomplete&quot;</span>);
<a name="l03408"></a>03408 
<a name="l03409"></a>03409   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l03410"></a>03410 }
<a name="l03411"></a>03411 
<a name="l03412"></a>03412 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_set_origin,
<a name="l03413"></a>03413        no_set_origin_cmd,
<a name="l03414"></a>03414        <span class="stringliteral">&quot;no set origin&quot;</span>,
<a name="l03415"></a>03415        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03416"></a>03416        SET_STR
<a name="l03417"></a>03417        <span class="stringliteral">&quot;BGP origin code\n&quot;</span>)
<a name="l03418"></a>03418 {
<a name="l03419"></a>03419   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;origin&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l03420"></a>03420 }
<a name="l03421"></a>03421 
<a name="l03422"></a>03422 <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_set_origin,
<a name="l03423"></a>03423        no_set_origin_val_cmd,
<a name="l03424"></a>03424        <span class="stringliteral">&quot;no set origin (egp|igp|incomplete)&quot;</span>,
<a name="l03425"></a>03425        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03426"></a>03426        SET_STR
<a name="l03427"></a>03427        <span class="stringliteral">&quot;BGP origin code\n&quot;</span>
<a name="l03428"></a>03428        <span class="stringliteral">&quot;remote EGP\n&quot;</span>
<a name="l03429"></a>03429        <span class="stringliteral">&quot;local IGP\n&quot;</span>
<a name="l03430"></a>03430        <span class="stringliteral">&quot;unknown heritage\n&quot;</span>)
<a name="l03431"></a>03431 
<a name="l03432"></a>03432 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (set_atomic_aggregate,
<a name="l03433"></a>03433        set_atomic_aggregate_cmd,
<a name="l03434"></a>03434        <span class="stringliteral">&quot;set atomic-aggregate&quot;</span>,
<a name="l03435"></a>03435        SET_STR
<a name="l03436"></a>03436        <span class="stringliteral">&quot;BGP atomic aggregate attribute\n&quot;</span> )
<a name="l03437"></a>03437 {
<a name="l03438"></a>03438   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;atomic-aggregate&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l03439"></a>03439 }
<a name="l03440"></a>03440 
<a name="l03441"></a>03441 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_set_atomic_aggregate,
<a name="l03442"></a>03442        no_set_atomic_aggregate_cmd,
<a name="l03443"></a>03443        <span class="stringliteral">&quot;no set atomic-aggregate&quot;</span>,
<a name="l03444"></a>03444        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03445"></a>03445        SET_STR
<a name="l03446"></a>03446        <span class="stringliteral">&quot;BGP atomic aggregate attribute\n&quot;</span> )
<a name="l03447"></a>03447 {
<a name="l03448"></a>03448   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;atomic-aggregate&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l03449"></a>03449 }
<a name="l03450"></a>03450 
<a name="l03451"></a>03451 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (set_aggregator_as,
<a name="l03452"></a>03452        set_aggregator_as_cmd,
<a name="l03453"></a>03453        <span class="stringliteral">&quot;set aggregator as &quot;</span> <a class="code" href="bgp__vty_8h.html#a8799f670368c0af42774d6a740556afe">CMD_AS_RANGE</a> <span class="stringliteral">&quot; A.B.C.D&quot;</span>,
<a name="l03454"></a>03454        SET_STR
<a name="l03455"></a>03455        <span class="stringliteral">&quot;BGP aggregator attribute\n&quot;</span>
<a name="l03456"></a>03456        <span class="stringliteral">&quot;AS number of aggregator\n&quot;</span>
<a name="l03457"></a>03457        <span class="stringliteral">&quot;AS number\n&quot;</span>
<a name="l03458"></a>03458        <span class="stringliteral">&quot;IP address of aggregator\n&quot;</span>)
<a name="l03459"></a>03459 {
<a name="l03460"></a>03460   <span class="keywordtype">int</span> ret;
<a name="l03461"></a>03461   <a class="code" href="bgpd_8h.html#ae54756b75cc699532543e4e2214c1c57">as_t</a> as;
<a name="l03462"></a>03462   <span class="keyword">struct </span>in_addr address;
<a name="l03463"></a>03463   <span class="keywordtype">char</span> *argstr;
<a name="l03464"></a>03464 
<a name="l03465"></a>03465   <a class="code" href="vty_8h.html#afa25f32d4ba1649dd82cdd80434ac6ac">VTY_GET_INTEGER_RANGE</a> (<span class="stringliteral">&quot;AS&quot;</span>, as, argv[0], 1, <a class="code" href="bgp__aspath_8h.html#acd90833d0f197c0d00067713d06777e5">BGP_AS4_MAX</a>);
<a name="l03466"></a>03466   
<a name="l03467"></a>03467   ret = <a class="code" href="sockunion_8c.html#a4203367afaacee3fa5cc1626b2ef63c0">inet_aton</a> (argv[1], &amp;address);
<a name="l03468"></a>03468   <span class="keywordflow">if</span> (ret == 0)
<a name="l03469"></a>03469     {
<a name="l03470"></a>03470       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Aggregator IP address is invalid%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l03471"></a>03471       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l03472"></a>03472     }
<a name="l03473"></a>03473 
<a name="l03474"></a>03474   argstr = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>,
<a name="l03475"></a>03475             strlen (argv[0]) + strlen (argv[1]) + 2);
<a name="l03476"></a>03476 
<a name="l03477"></a>03477   sprintf (argstr, <span class="stringliteral">&quot;%s %s&quot;</span>, argv[0], argv[1]);
<a name="l03478"></a>03478 
<a name="l03479"></a>03479   ret = <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;aggregator as&quot;</span>, argstr);
<a name="l03480"></a>03480 
<a name="l03481"></a>03481   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, argstr);
<a name="l03482"></a>03482 
<a name="l03483"></a>03483   <span class="keywordflow">return</span> ret;
<a name="l03484"></a>03484 }
<a name="l03485"></a>03485 
<a name="l03486"></a>03486 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_set_aggregator_as,
<a name="l03487"></a>03487        no_set_aggregator_as_cmd,
<a name="l03488"></a>03488        <span class="stringliteral">&quot;no set aggregator as&quot;</span>,
<a name="l03489"></a>03489        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03490"></a>03490        SET_STR
<a name="l03491"></a>03491        <span class="stringliteral">&quot;BGP aggregator attribute\n&quot;</span>
<a name="l03492"></a>03492        <span class="stringliteral">&quot;AS number of aggregator\n&quot;</span>)
<a name="l03493"></a>03493 {
<a name="l03494"></a>03494   <span class="keywordtype">int</span> ret;
<a name="l03495"></a>03495   <a class="code" href="bgpd_8h.html#ae54756b75cc699532543e4e2214c1c57">as_t</a> as;
<a name="l03496"></a>03496   <span class="keyword">struct </span>in_addr address;
<a name="l03497"></a>03497   <span class="keywordtype">char</span> *argstr;
<a name="l03498"></a>03498 
<a name="l03499"></a>03499   <span class="keywordflow">if</span> (argv == 0)
<a name="l03500"></a>03500     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;aggregator as&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l03501"></a>03501   
<a name="l03502"></a>03502   <a class="code" href="vty_8h.html#afa25f32d4ba1649dd82cdd80434ac6ac">VTY_GET_INTEGER_RANGE</a> (<span class="stringliteral">&quot;AS&quot;</span>, as, argv[0], 1, <a class="code" href="bgp__aspath_8h.html#acd90833d0f197c0d00067713d06777e5">BGP_AS4_MAX</a>);
<a name="l03503"></a>03503 
<a name="l03504"></a>03504   ret = <a class="code" href="sockunion_8c.html#a4203367afaacee3fa5cc1626b2ef63c0">inet_aton</a> (argv[1], &amp;address);
<a name="l03505"></a>03505   <span class="keywordflow">if</span> (ret == 0)
<a name="l03506"></a>03506     {
<a name="l03507"></a>03507       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Aggregator IP address is invalid%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l03508"></a>03508       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l03509"></a>03509     }
<a name="l03510"></a>03510 
<a name="l03511"></a>03511   argstr = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>,
<a name="l03512"></a>03512             strlen (argv[0]) + strlen (argv[1]) + 2);
<a name="l03513"></a>03513 
<a name="l03514"></a>03514   sprintf (argstr, <span class="stringliteral">&quot;%s %s&quot;</span>, argv[0], argv[1]);
<a name="l03515"></a>03515 
<a name="l03516"></a>03516   ret = <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;aggregator as&quot;</span>, argstr);
<a name="l03517"></a>03517 
<a name="l03518"></a>03518   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167badaa0e7b6df403ff7d348d982d77dc7c3">MTYPE_ROUTE_MAP_COMPILED</a>, argstr);
<a name="l03519"></a>03519 
<a name="l03520"></a>03520   <span class="keywordflow">return</span> ret;
<a name="l03521"></a>03521 }
<a name="l03522"></a>03522 
<a name="l03523"></a>03523 <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_set_aggregator_as,
<a name="l03524"></a>03524        no_set_aggregator_as_val_cmd,
<a name="l03525"></a>03525        <span class="stringliteral">&quot;no set aggregator as &quot;</span> <a class="code" href="bgp__vty_8h.html#a8799f670368c0af42774d6a740556afe">CMD_AS_RANGE</a> <span class="stringliteral">&quot; A.B.C.D&quot;</span>,
<a name="l03526"></a>03526        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03527"></a>03527        SET_STR
<a name="l03528"></a>03528        <span class="stringliteral">&quot;BGP aggregator attribute\n&quot;</span>
<a name="l03529"></a>03529        <span class="stringliteral">&quot;AS number of aggregator\n&quot;</span>
<a name="l03530"></a>03530        <span class="stringliteral">&quot;AS number\n&quot;</span>
<a name="l03531"></a>03531        <span class="stringliteral">&quot;IP address of aggregator\n&quot;</span>)
<a name="l03532"></a>03532 
<a name="l03533"></a>03533 
<a name="l03534"></a>03534 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l03535"></a>03535 <span class="preprocessor"></span><a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (match_ipv6_address, 
<a name="l03536"></a>03536        match_ipv6_address_cmd,
<a name="l03537"></a>03537        <span class="stringliteral">&quot;match ipv6 address WORD&quot;</span>,
<a name="l03538"></a>03538        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l03539"></a>03539        <a class="code" href="command_8h.html#a97fa3de206286c30e3efe26747c25352">IPV6_STR</a>
<a name="l03540"></a>03540        <span class="stringliteral">&quot;Match IPv6 address of route\n&quot;</span>
<a name="l03541"></a>03541        <span class="stringliteral">&quot;IPv6 access-list name\n&quot;</span>)
<a name="l03542"></a>03542 {
<a name="l03543"></a>03543   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a7f975ecf7ca6870c8978f6aa042e30af">bgp_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ipv6 address&quot;</span>, argv[0]);
<a name="l03544"></a>03544 }
<a name="l03545"></a>03545 
<a name="l03546"></a>03546 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_match_ipv6_address, 
<a name="l03547"></a>03547        no_match_ipv6_address_cmd,
<a name="l03548"></a>03548        <span class="stringliteral">&quot;no match ipv6 address WORD&quot;</span>,
<a name="l03549"></a>03549        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03550"></a>03550        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l03551"></a>03551        <a class="code" href="command_8h.html#a97fa3de206286c30e3efe26747c25352">IPV6_STR</a>
<a name="l03552"></a>03552        <span class="stringliteral">&quot;Match IPv6 address of route\n&quot;</span>
<a name="l03553"></a>03553        <span class="stringliteral">&quot;IPv6 access-list name\n&quot;</span>)
<a name="l03554"></a>03554 {
<a name="l03555"></a>03555   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ipv6 address&quot;</span>, argv[0]);
<a name="l03556"></a>03556 }
<a name="l03557"></a>03557 
<a name="l03558"></a>03558 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (match_ipv6_next_hop, 
<a name="l03559"></a>03559        match_ipv6_next_hop_cmd,
<a name="l03560"></a>03560        <span class="stringliteral">&quot;match ipv6 next-hop X:X::X:X&quot;</span>,
<a name="l03561"></a>03561        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l03562"></a>03562        <a class="code" href="command_8h.html#a97fa3de206286c30e3efe26747c25352">IPV6_STR</a>
<a name="l03563"></a>03563        <span class="stringliteral">&quot;Match IPv6 next-hop address of route\n&quot;</span>
<a name="l03564"></a>03564        <span class="stringliteral">&quot;IPv6 address of next hop\n&quot;</span>)
<a name="l03565"></a>03565 {
<a name="l03566"></a>03566   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a7f975ecf7ca6870c8978f6aa042e30af">bgp_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ipv6 next-hop&quot;</span>, argv[0]);
<a name="l03567"></a>03567 }
<a name="l03568"></a>03568 
<a name="l03569"></a>03569 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_match_ipv6_next_hop,
<a name="l03570"></a>03570        no_match_ipv6_next_hop_cmd,
<a name="l03571"></a>03571        <span class="stringliteral">&quot;no match ipv6 next-hop X:X::X:X&quot;</span>,
<a name="l03572"></a>03572        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03573"></a>03573        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l03574"></a>03574        <a class="code" href="command_8h.html#a97fa3de206286c30e3efe26747c25352">IPV6_STR</a>
<a name="l03575"></a>03575        <span class="stringliteral">&quot;Match IPv6 next-hop address of route\n&quot;</span>
<a name="l03576"></a>03576        <span class="stringliteral">&quot;IPv6 address of next hop\n&quot;</span>)
<a name="l03577"></a>03577 {
<a name="l03578"></a>03578   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ipv6 next-hop&quot;</span>, argv[0]);
<a name="l03579"></a>03579 }
<a name="l03580"></a>03580 
<a name="l03581"></a>03581 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (match_ipv6_address_prefix_list, 
<a name="l03582"></a>03582        match_ipv6_address_prefix_list_cmd,
<a name="l03583"></a>03583        <span class="stringliteral">&quot;match ipv6 address prefix-list WORD&quot;</span>,
<a name="l03584"></a>03584        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l03585"></a>03585        <a class="code" href="command_8h.html#a97fa3de206286c30e3efe26747c25352">IPV6_STR</a>
<a name="l03586"></a>03586        <span class="stringliteral">&quot;Match address of route\n&quot;</span>
<a name="l03587"></a>03587        <span class="stringliteral">&quot;Match entries of prefix-lists\n&quot;</span>
<a name="l03588"></a>03588        <span class="stringliteral">&quot;IP prefix-list name\n&quot;</span>)
<a name="l03589"></a>03589 {
<a name="l03590"></a>03590   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a7f975ecf7ca6870c8978f6aa042e30af">bgp_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ipv6 address prefix-list&quot;</span>, argv[0]);
<a name="l03591"></a>03591 }
<a name="l03592"></a>03592 
<a name="l03593"></a>03593 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_match_ipv6_address_prefix_list,
<a name="l03594"></a>03594        no_match_ipv6_address_prefix_list_cmd,
<a name="l03595"></a>03595        <span class="stringliteral">&quot;no match ipv6 address prefix-list WORD&quot;</span>,
<a name="l03596"></a>03596        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03597"></a>03597        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l03598"></a>03598        <a class="code" href="command_8h.html#a97fa3de206286c30e3efe26747c25352">IPV6_STR</a>
<a name="l03599"></a>03599        <span class="stringliteral">&quot;Match address of route\n&quot;</span>
<a name="l03600"></a>03600        <span class="stringliteral">&quot;Match entries of prefix-lists\n&quot;</span>
<a name="l03601"></a>03601        <span class="stringliteral">&quot;IP prefix-list name\n&quot;</span>)
<a name="l03602"></a>03602 {
<a name="l03603"></a>03603   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ipv6 address prefix-list&quot;</span>, argv[0]);
<a name="l03604"></a>03604 }
<a name="l03605"></a>03605 
<a name="l03606"></a>03606 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (set_ipv6_nexthop_global,
<a name="l03607"></a>03607        set_ipv6_nexthop_global_cmd,
<a name="l03608"></a>03608        <span class="stringliteral">&quot;set ipv6 next-hop global X:X::X:X&quot;</span>,
<a name="l03609"></a>03609        SET_STR
<a name="l03610"></a>03610        <a class="code" href="command_8h.html#a97fa3de206286c30e3efe26747c25352">IPV6_STR</a>
<a name="l03611"></a>03611        <span class="stringliteral">&quot;IPv6 next-hop address\n&quot;</span>
<a name="l03612"></a>03612        <span class="stringliteral">&quot;IPv6 global address\n&quot;</span>
<a name="l03613"></a>03613        <span class="stringliteral">&quot;IPv6 address of next hop\n&quot;</span>)
<a name="l03614"></a>03614 {
<a name="l03615"></a>03615   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ipv6 next-hop global&quot;</span>, argv[0]);
<a name="l03616"></a>03616 }
<a name="l03617"></a>03617 
<a name="l03618"></a>03618 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_set_ipv6_nexthop_global,
<a name="l03619"></a>03619        no_set_ipv6_nexthop_global_cmd,
<a name="l03620"></a>03620        <span class="stringliteral">&quot;no set ipv6 next-hop global&quot;</span>,
<a name="l03621"></a>03621        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03622"></a>03622        SET_STR
<a name="l03623"></a>03623        <a class="code" href="command_8h.html#a97fa3de206286c30e3efe26747c25352">IPV6_STR</a>
<a name="l03624"></a>03624        <span class="stringliteral">&quot;IPv6 next-hop address\n&quot;</span>
<a name="l03625"></a>03625        <span class="stringliteral">&quot;IPv6 global address\n&quot;</span>)
<a name="l03626"></a>03626 {
<a name="l03627"></a>03627   <span class="keywordflow">if</span> (argc == 0)
<a name="l03628"></a>03628     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ipv6 next-hop global&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l03629"></a>03629 
<a name="l03630"></a>03630   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ipv6 next-hop global&quot;</span>, argv[0]);
<a name="l03631"></a>03631 }
<a name="l03632"></a>03632 
<a name="l03633"></a>03633 <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_set_ipv6_nexthop_global,
<a name="l03634"></a>03634        no_set_ipv6_nexthop_global_val_cmd,
<a name="l03635"></a>03635        <span class="stringliteral">&quot;no set ipv6 next-hop global X:X::X:X&quot;</span>,
<a name="l03636"></a>03636        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03637"></a>03637        SET_STR
<a name="l03638"></a>03638        IPV6_STR
<a name="l03639"></a>03639        <span class="stringliteral">&quot;IPv6 next-hop address\n&quot;</span>
<a name="l03640"></a>03640        <span class="stringliteral">&quot;IPv6 global address\n&quot;</span>
<a name="l03641"></a>03641        <span class="stringliteral">&quot;IPv6 address of next hop\n&quot;</span>)
<a name="l03642"></a>03642 
<a name="l03643"></a>03643 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (set_ipv6_nexthop_local,
<a name="l03644"></a>03644        set_ipv6_nexthop_local_cmd,
<a name="l03645"></a>03645        <span class="stringliteral">&quot;set ipv6 next-hop local X:X::X:X&quot;</span>,
<a name="l03646"></a>03646        SET_STR
<a name="l03647"></a>03647        IPV6_STR
<a name="l03648"></a>03648        <span class="stringliteral">&quot;IPv6 next-hop address\n&quot;</span>
<a name="l03649"></a>03649        <span class="stringliteral">&quot;IPv6 local address\n&quot;</span>
<a name="l03650"></a>03650        <span class="stringliteral">&quot;IPv6 address of next hop\n&quot;</span>)
<a name="l03651"></a>03651 {
<a name="l03652"></a>03652   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ipv6 next-hop local&quot;</span>, argv[0]);
<a name="l03653"></a>03653 }
<a name="l03654"></a>03654 
<a name="l03655"></a>03655 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_set_ipv6_nexthop_local,
<a name="l03656"></a>03656        no_set_ipv6_nexthop_local_cmd,
<a name="l03657"></a>03657        <span class="stringliteral">&quot;no set ipv6 next-hop local&quot;</span>,
<a name="l03658"></a>03658        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03659"></a>03659        SET_STR
<a name="l03660"></a>03660        IPV6_STR
<a name="l03661"></a>03661        <span class="stringliteral">&quot;IPv6 next-hop address\n&quot;</span>
<a name="l03662"></a>03662        <span class="stringliteral">&quot;IPv6 local address\n&quot;</span>)
<a name="l03663"></a>03663 {
<a name="l03664"></a>03664   <span class="keywordflow">if</span> (argc == 0)
<a name="l03665"></a>03665     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ipv6 next-hop local&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l03666"></a>03666   
<a name="l03667"></a>03667   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;ipv6 next-hop local&quot;</span>, argv[0]);
<a name="l03668"></a>03668 }
<a name="l03669"></a>03669 
<a name="l03670"></a>03670 <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_set_ipv6_nexthop_local,
<a name="l03671"></a>03671        no_set_ipv6_nexthop_local_val_cmd,
<a name="l03672"></a>03672        <span class="stringliteral">&quot;no set ipv6 next-hop local X:X::X:X&quot;</span>,
<a name="l03673"></a>03673        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03674"></a>03674        SET_STR
<a name="l03675"></a>03675        IPV6_STR
<a name="l03676"></a>03676        <span class="stringliteral">&quot;IPv6 next-hop address\n&quot;</span>
<a name="l03677"></a>03677        <span class="stringliteral">&quot;IPv6 local address\n&quot;</span>
<a name="l03678"></a>03678        <span class="stringliteral">&quot;IPv6 address of next hop\n&quot;</span>)
<a name="l03679"></a>03679 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l03680"></a>03680 
<a name="l03681"></a>03681 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (set_vpnv4_nexthop,
<a name="l03682"></a>03682        set_vpnv4_nexthop_cmd,
<a name="l03683"></a>03683        <span class="stringliteral">&quot;set vpnv4 next-hop A.B.C.D&quot;</span>,
<a name="l03684"></a>03684        SET_STR
<a name="l03685"></a>03685        <span class="stringliteral">&quot;VPNv4 information\n&quot;</span>
<a name="l03686"></a>03686        <span class="stringliteral">&quot;VPNv4 next-hop address\n&quot;</span>
<a name="l03687"></a>03687        <span class="stringliteral">&quot;IP address of next hop\n&quot;</span>)
<a name="l03688"></a>03688 {
<a name="l03689"></a>03689   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;vpnv4 next-hop&quot;</span>, argv[0]);
<a name="l03690"></a>03690 }
<a name="l03691"></a>03691 
<a name="l03692"></a>03692 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_set_vpnv4_nexthop,
<a name="l03693"></a>03693        no_set_vpnv4_nexthop_cmd,
<a name="l03694"></a>03694        <span class="stringliteral">&quot;no set vpnv4 next-hop&quot;</span>,
<a name="l03695"></a>03695        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03696"></a>03696        SET_STR
<a name="l03697"></a>03697        <span class="stringliteral">&quot;VPNv4 information\n&quot;</span>
<a name="l03698"></a>03698        <span class="stringliteral">&quot;VPNv4 next-hop address\n&quot;</span>)
<a name="l03699"></a>03699 {
<a name="l03700"></a>03700   <span class="keywordflow">if</span> (argc == 0)
<a name="l03701"></a>03701     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;vpnv4 next-hop&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l03702"></a>03702 
<a name="l03703"></a>03703   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;vpnv4 next-hop&quot;</span>, argv[0]);
<a name="l03704"></a>03704 }
<a name="l03705"></a>03705 
<a name="l03706"></a>03706 <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_set_vpnv4_nexthop,
<a name="l03707"></a>03707        no_set_vpnv4_nexthop_val_cmd,
<a name="l03708"></a>03708        <span class="stringliteral">&quot;no set vpnv4 next-hop A.B.C.D&quot;</span>,
<a name="l03709"></a>03709        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03710"></a>03710        SET_STR
<a name="l03711"></a>03711        <span class="stringliteral">&quot;VPNv4 information\n&quot;</span>
<a name="l03712"></a>03712        <span class="stringliteral">&quot;VPNv4 next-hop address\n&quot;</span>
<a name="l03713"></a>03713        <span class="stringliteral">&quot;IP address of next hop\n&quot;</span>)
<a name="l03714"></a>03714 
<a name="l03715"></a>03715 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (set_originator_id,
<a name="l03716"></a>03716        set_originator_id_cmd,
<a name="l03717"></a>03717        <span class="stringliteral">&quot;set originator-id A.B.C.D&quot;</span>,
<a name="l03718"></a>03718        SET_STR
<a name="l03719"></a>03719        <span class="stringliteral">&quot;BGP originator ID attribute\n&quot;</span>
<a name="l03720"></a>03720        <span class="stringliteral">&quot;IP address of originator\n&quot;</span>)
<a name="l03721"></a>03721 {
<a name="l03722"></a>03722   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;originator-id&quot;</span>, argv[0]);
<a name="l03723"></a>03723 }
<a name="l03724"></a>03724 
<a name="l03725"></a>03725 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_set_originator_id,
<a name="l03726"></a>03726        no_set_originator_id_cmd,
<a name="l03727"></a>03727        <span class="stringliteral">&quot;no set originator-id&quot;</span>,
<a name="l03728"></a>03728        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03729"></a>03729        SET_STR
<a name="l03730"></a>03730        <span class="stringliteral">&quot;BGP originator ID attribute\n&quot;</span>)
<a name="l03731"></a>03731 {
<a name="l03732"></a>03732   <span class="keywordflow">if</span> (argc == 0)
<a name="l03733"></a>03733     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;originator-id&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l03734"></a>03734   
<a name="l03735"></a>03735   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;originator-id&quot;</span>, argv[0]);
<a name="l03736"></a>03736 }
<a name="l03737"></a>03737 
<a name="l03738"></a>03738 <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_set_originator_id,
<a name="l03739"></a>03739        no_set_originator_id_val_cmd,
<a name="l03740"></a>03740        <span class="stringliteral">&quot;no set originator-id A.B.C.D&quot;</span>,
<a name="l03741"></a>03741        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03742"></a>03742        SET_STR
<a name="l03743"></a>03743        <span class="stringliteral">&quot;BGP originator ID attribute\n&quot;</span>
<a name="l03744"></a>03744        <span class="stringliteral">&quot;IP address of originator\n&quot;</span>)
<a name="l03745"></a>03745 
<a name="l03746"></a>03746 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (set_pathlimit_ttl,
<a name="l03747"></a>03747        set_pathlimit_ttl_cmd,
<a name="l03748"></a>03748        <span class="stringliteral">&quot;set pathlimit ttl &lt;1-255&gt;&quot;</span>,
<a name="l03749"></a>03749        SET_STR
<a name="l03750"></a>03750        <span class="stringliteral">&quot;BGP AS-Pathlimit attribute\n&quot;</span>
<a name="l03751"></a>03751        <span class="stringliteral">&quot;Set AS-Path Hop-count TTL\n&quot;</span>)
<a name="l03752"></a>03752 {
<a name="l03753"></a>03753   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#ab9626731fd687516b9d924bc45523d08">bgp_route_set_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;pathlimit ttl&quot;</span>, argv[0]);
<a name="l03754"></a>03754 }
<a name="l03755"></a>03755 
<a name="l03756"></a>03756 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_set_pathlimit_ttl,
<a name="l03757"></a>03757        no_set_pathlimit_ttl_cmd,
<a name="l03758"></a>03758        <span class="stringliteral">&quot;no set pathlimit ttl&quot;</span>,
<a name="l03759"></a>03759        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03760"></a>03760        SET_STR
<a name="l03761"></a>03761        <span class="stringliteral">&quot;BGP AS-Pathlimit attribute\n&quot;</span>
<a name="l03762"></a>03762        <span class="stringliteral">&quot;Set AS-Path Hop-count TTL\n&quot;</span>)
<a name="l03763"></a>03763 {
<a name="l03764"></a>03764   <span class="keywordflow">if</span> (argc == 0)
<a name="l03765"></a>03765     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;pathlimit ttl&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l03766"></a>03766   
<a name="l03767"></a>03767   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a6b5791d1190e0d6ac607e70d723b3e7e">bgp_route_set_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;pathlimit ttl&quot;</span>, argv[0]);
<a name="l03768"></a>03768 }
<a name="l03769"></a>03769 
<a name="l03770"></a>03770 <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_set_pathlimit_ttl,
<a name="l03771"></a>03771        no_set_pathlimit_ttl_val_cmd,
<a name="l03772"></a>03772        <span class="stringliteral">&quot;no set pathlimit ttl &lt;1-255&gt;&quot;</span>,
<a name="l03773"></a>03773        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03774"></a>03774        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l03775"></a>03775        <span class="stringliteral">&quot;BGP AS-Pathlimit attribute\n&quot;</span>
<a name="l03776"></a>03776        <span class="stringliteral">&quot;Set AS-Path Hop-count TTL\n&quot;</span>)
<a name="l03777"></a>03777 
<a name="l03778"></a>03778 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (match_pathlimit_as,
<a name="l03779"></a>03779        match_pathlimit_as_cmd,
<a name="l03780"></a>03780        <span class="stringliteral">&quot;match pathlimit as &lt;1-65535&gt;&quot;</span>,
<a name="l03781"></a>03781        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l03782"></a>03782        <span class="stringliteral">&quot;BGP AS-Pathlimit attribute\n&quot;</span>
<a name="l03783"></a>03783        <span class="stringliteral">&quot;Match Pathlimit AS number\n&quot;</span>)
<a name="l03784"></a>03784 {
<a name="l03785"></a>03785   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a7f975ecf7ca6870c8978f6aa042e30af">bgp_route_match_add</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;pathlimit as&quot;</span>, argv[0]);
<a name="l03786"></a>03786 }
<a name="l03787"></a>03787 
<a name="l03788"></a>03788 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_match_pathlimit_as,
<a name="l03789"></a>03789        no_match_pathlimit_as_cmd,
<a name="l03790"></a>03790        <span class="stringliteral">&quot;no match pathlimit as&quot;</span>,
<a name="l03791"></a>03791        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03792"></a>03792        <a class="code" href="command_8h.html#aa209fb522314dc6fe1a295ae25d24a51">MATCH_STR</a>
<a name="l03793"></a>03793        <span class="stringliteral">&quot;BGP AS-Pathlimit attribute\n&quot;</span>
<a name="l03794"></a>03794        <span class="stringliteral">&quot;Match Pathlimit AS number\n&quot;</span>)
<a name="l03795"></a>03795 {
<a name="l03796"></a>03796   <span class="keywordflow">if</span> (argc == 0)
<a name="l03797"></a>03797     <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;pathlimit as&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l03798"></a>03798   
<a name="l03799"></a>03799   <span class="keywordflow">return</span> <a class="code" href="bgp__routemap_8c.html#a3233ab3ab66412643f252819904bfc53">bgp_route_match_delete</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>, <span class="stringliteral">&quot;pathlimit as&quot;</span>, argv[0]);
<a name="l03800"></a>03800 }
<a name="l03801"></a>03801 
<a name="l03802"></a>03802 <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_match_pathlimit_as,
<a name="l03803"></a>03803        no_match_pathlimit_as_val_cmd,
<a name="l03804"></a>03804        <span class="stringliteral">&quot;no match pathlimit as &lt;1-65535&gt;&quot;</span>,
<a name="l03805"></a>03805        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l03806"></a>03806        MATCH_STR
<a name="l03807"></a>03807        <span class="stringliteral">&quot;BGP AS-Pathlimit attribute\n&quot;</span>
<a name="l03808"></a>03808        <span class="stringliteral">&quot;Match Pathlimit ASN\n&quot;</span>)
<a name="l03809"></a>03809 
<a name="l03810"></a>03810 
<a name="l03811"></a>03811 <span class="comment">/* Initialization of route map. */</span>
<a name="l03812"></a>03812 <span class="keywordtype">void</span>
<a name="l03813"></a>03813 <a class="code" href="bgpd_8h.html#aa3569ed6d1d4fe9c81f9f241cc165868">bgp_route_map_init</a> (<span class="keywordtype">void</span>)
<a name="l03814"></a>03814 {
<a name="l03815"></a>03815   <a class="code" href="routemap_8c.html#a4e07135a4ac1643e0a3c2e9460322636">route_map_init</a> ();
<a name="l03816"></a>03816   <a class="code" href="routemap_8c.html#a09855551d0ef6f569e32d56cc4bb2857">route_map_init_vty</a> ();
<a name="l03817"></a>03817   <a class="code" href="routemap_8c.html#afd64a010c9f8f9cf35788b065f540eea">route_map_add_hook</a> (<a class="code" href="bgp__routemap_8c.html#a135105c6576a3a6ab8726a78d48b6522">bgp_route_map_update</a>);
<a name="l03818"></a>03818   <a class="code" href="routemap_8c.html#a60b69b789fa511ded8504c5b20fb63d4">route_map_delete_hook</a> (<a class="code" href="bgp__routemap_8c.html#a135105c6576a3a6ab8726a78d48b6522">bgp_route_map_update</a>);
<a name="l03819"></a>03819 
<a name="l03820"></a>03820   <a class="code" href="routemap_8c.html#ada69b48e1c884e20ef5a90dc1d0a0b82">route_map_install_match</a> (&amp;route_match_peer_cmd);
<a name="l03821"></a>03821   <a class="code" href="routemap_8c.html#ada69b48e1c884e20ef5a90dc1d0a0b82">route_map_install_match</a> (&amp;route_match_ip_address_cmd);
<a name="l03822"></a>03822   <a class="code" href="routemap_8c.html#ada69b48e1c884e20ef5a90dc1d0a0b82">route_map_install_match</a> (&amp;route_match_ip_next_hop_cmd);
<a name="l03823"></a>03823   <a class="code" href="routemap_8c.html#ada69b48e1c884e20ef5a90dc1d0a0b82">route_map_install_match</a> (&amp;route_match_ip_route_source_cmd);
<a name="l03824"></a>03824   <a class="code" href="routemap_8c.html#ada69b48e1c884e20ef5a90dc1d0a0b82">route_map_install_match</a> (&amp;route_match_ip_address_prefix_list_cmd);
<a name="l03825"></a>03825   <a class="code" href="routemap_8c.html#ada69b48e1c884e20ef5a90dc1d0a0b82">route_map_install_match</a> (&amp;route_match_ip_next_hop_prefix_list_cmd);
<a name="l03826"></a>03826   <a class="code" href="routemap_8c.html#ada69b48e1c884e20ef5a90dc1d0a0b82">route_map_install_match</a> (&amp;route_match_ip_route_source_prefix_list_cmd);
<a name="l03827"></a>03827   <a class="code" href="routemap_8c.html#ada69b48e1c884e20ef5a90dc1d0a0b82">route_map_install_match</a> (&amp;route_match_aspath_cmd);
<a name="l03828"></a>03828   <a class="code" href="routemap_8c.html#ada69b48e1c884e20ef5a90dc1d0a0b82">route_map_install_match</a> (&amp;route_match_community_cmd);
<a name="l03829"></a>03829   <a class="code" href="routemap_8c.html#ada69b48e1c884e20ef5a90dc1d0a0b82">route_map_install_match</a> (&amp;route_match_ecommunity_cmd);
<a name="l03830"></a>03830   <a class="code" href="routemap_8c.html#ada69b48e1c884e20ef5a90dc1d0a0b82">route_map_install_match</a> (&amp;route_match_metric_cmd);
<a name="l03831"></a>03831   <a class="code" href="routemap_8c.html#ada69b48e1c884e20ef5a90dc1d0a0b82">route_map_install_match</a> (&amp;route_match_origin_cmd);
<a name="l03832"></a>03832 
<a name="l03833"></a>03833   <a class="code" href="routemap_8c.html#a13c839a968e8eba43c4e83ce35929d41">route_map_install_set</a> (&amp;route_set_ip_nexthop_cmd);
<a name="l03834"></a>03834   <a class="code" href="routemap_8c.html#a13c839a968e8eba43c4e83ce35929d41">route_map_install_set</a> (&amp;route_set_local_pref_cmd);
<a name="l03835"></a>03835   <a class="code" href="routemap_8c.html#a13c839a968e8eba43c4e83ce35929d41">route_map_install_set</a> (&amp;route_set_weight_cmd);
<a name="l03836"></a>03836   <a class="code" href="routemap_8c.html#a13c839a968e8eba43c4e83ce35929d41">route_map_install_set</a> (&amp;route_set_metric_cmd);
<a name="l03837"></a>03837   <a class="code" href="routemap_8c.html#a13c839a968e8eba43c4e83ce35929d41">route_map_install_set</a> (&amp;route_set_aspath_prepend_cmd);
<a name="l03838"></a>03838   <a class="code" href="routemap_8c.html#a13c839a968e8eba43c4e83ce35929d41">route_map_install_set</a> (&amp;route_set_aspath_exclude_cmd);
<a name="l03839"></a>03839   <a class="code" href="routemap_8c.html#a13c839a968e8eba43c4e83ce35929d41">route_map_install_set</a> (&amp;route_set_origin_cmd);
<a name="l03840"></a>03840   <a class="code" href="routemap_8c.html#a13c839a968e8eba43c4e83ce35929d41">route_map_install_set</a> (&amp;route_set_atomic_aggregate_cmd);
<a name="l03841"></a>03841   <a class="code" href="routemap_8c.html#a13c839a968e8eba43c4e83ce35929d41">route_map_install_set</a> (&amp;route_set_aggregator_as_cmd);
<a name="l03842"></a>03842   <a class="code" href="routemap_8c.html#a13c839a968e8eba43c4e83ce35929d41">route_map_install_set</a> (&amp;route_set_community_cmd);
<a name="l03843"></a>03843   <a class="code" href="routemap_8c.html#a13c839a968e8eba43c4e83ce35929d41">route_map_install_set</a> (&amp;route_set_community_delete_cmd);
<a name="l03844"></a>03844   <a class="code" href="routemap_8c.html#a13c839a968e8eba43c4e83ce35929d41">route_map_install_set</a> (&amp;route_set_vpnv4_nexthop_cmd);
<a name="l03845"></a>03845   <a class="code" href="routemap_8c.html#a13c839a968e8eba43c4e83ce35929d41">route_map_install_set</a> (&amp;route_set_originator_id_cmd);
<a name="l03846"></a>03846   <a class="code" href="routemap_8c.html#a13c839a968e8eba43c4e83ce35929d41">route_map_install_set</a> (&amp;route_set_ecommunity_rt_cmd);
<a name="l03847"></a>03847   <a class="code" href="routemap_8c.html#a13c839a968e8eba43c4e83ce35929d41">route_map_install_set</a> (&amp;route_set_ecommunity_soo_cmd);
<a name="l03848"></a>03848 
<a name="l03849"></a>03849   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;match_peer_cmd);
<a name="l03850"></a>03850   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;match_peer_local_cmd);
<a name="l03851"></a>03851   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_peer_cmd);
<a name="l03852"></a>03852   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_peer_val_cmd);
<a name="l03853"></a>03853   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_peer_local_cmd);
<a name="l03854"></a>03854   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;match_ip_address_cmd);
<a name="l03855"></a>03855   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ip_address_cmd);
<a name="l03856"></a>03856   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ip_address_val_cmd);
<a name="l03857"></a>03857   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;match_ip_next_hop_cmd);
<a name="l03858"></a>03858   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ip_next_hop_cmd);
<a name="l03859"></a>03859   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ip_next_hop_val_cmd);
<a name="l03860"></a>03860   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;match_ip_route_source_cmd);
<a name="l03861"></a>03861   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ip_route_source_cmd);
<a name="l03862"></a>03862   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ip_route_source_val_cmd);
<a name="l03863"></a>03863 
<a name="l03864"></a>03864   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;match_ip_address_prefix_list_cmd);
<a name="l03865"></a>03865   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ip_address_prefix_list_cmd);
<a name="l03866"></a>03866   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ip_address_prefix_list_val_cmd);
<a name="l03867"></a>03867   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;match_ip_next_hop_prefix_list_cmd);
<a name="l03868"></a>03868   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ip_next_hop_prefix_list_cmd);
<a name="l03869"></a>03869   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ip_next_hop_prefix_list_val_cmd);
<a name="l03870"></a>03870   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;match_ip_route_source_prefix_list_cmd);
<a name="l03871"></a>03871   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ip_route_source_prefix_list_cmd);
<a name="l03872"></a>03872   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ip_route_source_prefix_list_val_cmd);
<a name="l03873"></a>03873 
<a name="l03874"></a>03874   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;match_aspath_cmd);
<a name="l03875"></a>03875   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_aspath_cmd);
<a name="l03876"></a>03876   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_aspath_val_cmd);
<a name="l03877"></a>03877   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;match_metric_cmd);
<a name="l03878"></a>03878   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_metric_cmd);
<a name="l03879"></a>03879   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_metric_val_cmd);
<a name="l03880"></a>03880   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;match_community_cmd);
<a name="l03881"></a>03881   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;match_community_exact_cmd);
<a name="l03882"></a>03882   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_community_cmd);
<a name="l03883"></a>03883   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_community_val_cmd);
<a name="l03884"></a>03884   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_community_exact_cmd);
<a name="l03885"></a>03885   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;match_ecommunity_cmd);
<a name="l03886"></a>03886   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ecommunity_cmd);
<a name="l03887"></a>03887   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ecommunity_val_cmd);
<a name="l03888"></a>03888   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;match_origin_cmd);
<a name="l03889"></a>03889   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_origin_cmd);
<a name="l03890"></a>03890   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_origin_val_cmd);
<a name="l03891"></a>03891 
<a name="l03892"></a>03892   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;set_ip_nexthop_cmd);
<a name="l03893"></a>03893   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;set_ip_nexthop_peer_cmd);
<a name="l03894"></a>03894   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_ip_nexthop_cmd);
<a name="l03895"></a>03895   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_ip_nexthop_val_cmd);
<a name="l03896"></a>03896   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;set_local_pref_cmd);
<a name="l03897"></a>03897   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_local_pref_cmd);
<a name="l03898"></a>03898   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_local_pref_val_cmd);
<a name="l03899"></a>03899   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;set_weight_cmd);
<a name="l03900"></a>03900   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_weight_cmd);
<a name="l03901"></a>03901   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_weight_val_cmd);
<a name="l03902"></a>03902   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;set_metric_cmd);
<a name="l03903"></a>03903   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;set_metric_addsub_cmd);
<a name="l03904"></a>03904   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_metric_cmd);
<a name="l03905"></a>03905   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_metric_val_cmd);
<a name="l03906"></a>03906   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;set_aspath_prepend_cmd);
<a name="l03907"></a>03907   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;<a class="code" href="bgp__routemap_8c.html#ab933edaacd16fdb03a3ef99db77d0433">set_aspath_exclude_cmd</a>);
<a name="l03908"></a>03908   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_aspath_prepend_cmd);
<a name="l03909"></a>03909   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_aspath_prepend_val_cmd);
<a name="l03910"></a>03910   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_aspath_exclude_cmd);
<a name="l03911"></a>03911   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_aspath_exclude_val_cmd);
<a name="l03912"></a>03912   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;set_origin_cmd);
<a name="l03913"></a>03913   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_origin_cmd);
<a name="l03914"></a>03914   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_origin_val_cmd);
<a name="l03915"></a>03915   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;set_atomic_aggregate_cmd);
<a name="l03916"></a>03916   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_atomic_aggregate_cmd);
<a name="l03917"></a>03917   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;set_aggregator_as_cmd);
<a name="l03918"></a>03918   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_aggregator_as_cmd);
<a name="l03919"></a>03919   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_aggregator_as_val_cmd);
<a name="l03920"></a>03920   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;set_community_cmd);
<a name="l03921"></a>03921   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;set_community_none_cmd);
<a name="l03922"></a>03922   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_community_cmd);
<a name="l03923"></a>03923   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_community_val_cmd);
<a name="l03924"></a>03924   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_community_none_cmd);
<a name="l03925"></a>03925   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;set_community_delete_cmd);
<a name="l03926"></a>03926   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_community_delete_cmd);
<a name="l03927"></a>03927   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_community_delete_val_cmd);
<a name="l03928"></a>03928   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;set_ecommunity_rt_cmd);
<a name="l03929"></a>03929   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_ecommunity_rt_cmd);
<a name="l03930"></a>03930   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_ecommunity_rt_val_cmd);
<a name="l03931"></a>03931   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;set_ecommunity_soo_cmd);
<a name="l03932"></a>03932   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_ecommunity_soo_cmd);
<a name="l03933"></a>03933   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_ecommunity_soo_val_cmd);
<a name="l03934"></a>03934   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;set_vpnv4_nexthop_cmd);
<a name="l03935"></a>03935   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_vpnv4_nexthop_cmd);
<a name="l03936"></a>03936   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_vpnv4_nexthop_val_cmd);
<a name="l03937"></a>03937   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;set_originator_id_cmd);
<a name="l03938"></a>03938   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_originator_id_cmd);
<a name="l03939"></a>03939   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_originator_id_val_cmd);
<a name="l03940"></a>03940 
<a name="l03941"></a>03941 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l03942"></a>03942 <span class="preprocessor"></span>  <a class="code" href="routemap_8c.html#ada69b48e1c884e20ef5a90dc1d0a0b82">route_map_install_match</a> (&amp;route_match_ipv6_address_cmd);
<a name="l03943"></a>03943   <a class="code" href="routemap_8c.html#ada69b48e1c884e20ef5a90dc1d0a0b82">route_map_install_match</a> (&amp;route_match_ipv6_next_hop_cmd);
<a name="l03944"></a>03944   <a class="code" href="routemap_8c.html#ada69b48e1c884e20ef5a90dc1d0a0b82">route_map_install_match</a> (&amp;route_match_ipv6_address_prefix_list_cmd);
<a name="l03945"></a>03945   <a class="code" href="routemap_8c.html#a13c839a968e8eba43c4e83ce35929d41">route_map_install_set</a> (&amp;route_set_ipv6_nexthop_global_cmd);
<a name="l03946"></a>03946   <a class="code" href="routemap_8c.html#a13c839a968e8eba43c4e83ce35929d41">route_map_install_set</a> (&amp;route_set_ipv6_nexthop_local_cmd);
<a name="l03947"></a>03947   
<a name="l03948"></a>03948   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;match_ipv6_address_cmd);
<a name="l03949"></a>03949   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ipv6_address_cmd);
<a name="l03950"></a>03950   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;match_ipv6_next_hop_cmd);
<a name="l03951"></a>03951   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ipv6_next_hop_cmd);
<a name="l03952"></a>03952   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;match_ipv6_address_prefix_list_cmd);
<a name="l03953"></a>03953   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_ipv6_address_prefix_list_cmd);
<a name="l03954"></a>03954   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;set_ipv6_nexthop_global_cmd);
<a name="l03955"></a>03955   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_ipv6_nexthop_global_cmd);
<a name="l03956"></a>03956   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_ipv6_nexthop_global_val_cmd);
<a name="l03957"></a>03957   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;set_ipv6_nexthop_local_cmd);
<a name="l03958"></a>03958   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_ipv6_nexthop_local_cmd);
<a name="l03959"></a>03959   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_ipv6_nexthop_local_val_cmd);
<a name="l03960"></a>03960 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l03961"></a>03961 
<a name="l03962"></a>03962   <span class="comment">/* AS-Pathlimit */</span>
<a name="l03963"></a>03963   <a class="code" href="routemap_8c.html#ada69b48e1c884e20ef5a90dc1d0a0b82">route_map_install_match</a> (&amp;route_match_pathlimit_as_cmd);
<a name="l03964"></a>03964   <a class="code" href="routemap_8c.html#a13c839a968e8eba43c4e83ce35929d41">route_map_install_set</a> (&amp;route_set_pathlimit_ttl_cmd);
<a name="l03965"></a>03965 
<a name="l03966"></a>03966   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;set_pathlimit_ttl_cmd);
<a name="l03967"></a>03967   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_pathlimit_ttl_cmd);
<a name="l03968"></a>03968   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_set_pathlimit_ttl_val_cmd);
<a name="l03969"></a>03969   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;match_pathlimit_as_cmd);
<a name="l03970"></a>03970   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_pathlimit_as_cmd);
<a name="l03971"></a>03971   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>, &amp;no_match_pathlimit_as_val_cmd);
<a name="l03972"></a>03972 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="bgp__routemap_8c.html">bgp_routemap.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:03 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
