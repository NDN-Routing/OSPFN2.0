<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: lib/zclient.h Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('zclient_8h.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">lib/zclient.h</div>  </div>
</div>
<div class="contents">
<a href="zclient_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* Zebra&#39;s client header.</span>
<a name="l00002"></a>00002 <span class="comment"> * Copyright (C) 1999 Kunihiro Ishiguro</span>
<a name="l00003"></a>00003 <span class="comment"> *</span>
<a name="l00004"></a>00004 <span class="comment"> * This file is part of GNU Zebra.</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * GNU Zebra is free software; you can redistribute it and/or modify it</span>
<a name="l00007"></a>00007 <span class="comment"> * under the terms of the GNU General Public License as published by</span>
<a name="l00008"></a>00008 <span class="comment"> * the Free Software Foundation; either version 2, or (at your option)</span>
<a name="l00009"></a>00009 <span class="comment"> * any later version.</span>
<a name="l00010"></a>00010 <span class="comment"> * </span>
<a name="l00011"></a>00011 <span class="comment"> * GNU Zebra is distributed in the hope that it will be useful, but</span>
<a name="l00012"></a>00012 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00014"></a>00014 <span class="comment"> * General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"> * </span>
<a name="l00016"></a>00016 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment"> * along with GNU Zebra; see the file COPYING.  If not, write to the</span>
<a name="l00018"></a>00018 <span class="comment"> * Free Software Foundation, Inc., 59 Temple Place - Suite 330,</span>
<a name="l00019"></a>00019 <span class="comment"> * Boston, MA 02111-1307, USA.</span>
<a name="l00020"></a>00020 <span class="comment"> */</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="preprocessor">#ifndef _ZEBRA_ZCLIENT_H</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span><span class="preprocessor">#define _ZEBRA_ZCLIENT_H</span>
<a name="l00024"></a>00024 <span class="preprocessor"></span>
<a name="l00025"></a>00025 <span class="comment">/* For struct interface and struct connected. */</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="if_8h.html">if.h</a>&quot;</span>
<a name="l00027"></a>00027 
<a name="l00028"></a>00028 <span class="comment">/* For input/output buffer to zebra. */</span>
<a name="l00029"></a><a class="code" href="zclient_8h.html#aeebd7bc37965845d7accd7ce370febf9">00029</a> <span class="preprocessor">#define ZEBRA_MAX_PACKET_SIZ          4096</span>
<a name="l00030"></a>00030 <span class="preprocessor"></span>
<a name="l00031"></a>00031 <span class="comment">/* Zebra header size. */</span>
<a name="l00032"></a><a class="code" href="zclient_8h.html#a31ddba642897aac3d80c91cdfdb5deb1">00032</a> <span class="preprocessor">#define ZEBRA_HEADER_SIZE             6</span>
<a name="l00033"></a>00033 <span class="preprocessor"></span>
<a name="l00034"></a>00034 <span class="comment">/* Structure for the zebra client. */</span>
<a name="l00035"></a><a class="code" href="structzclient.html">00035</a> <span class="keyword">struct </span><a class="code" href="structzclient.html">zclient</a>
<a name="l00036"></a>00036 {
<a name="l00037"></a>00037   <span class="comment">/* Socket to zebra daemon. */</span>
<a name="l00038"></a><a class="code" href="structzclient.html#a53dfb4d4cfc1331edf8a62d04d99f08f">00038</a>   <span class="keywordtype">int</span> <a class="code" href="structzclient.html#a53dfb4d4cfc1331edf8a62d04d99f08f">sock</a>;
<a name="l00039"></a>00039 
<a name="l00040"></a>00040   <span class="comment">/* Flag of communication to zebra is enabled or not.  Default is on.</span>
<a name="l00041"></a>00041 <span class="comment">     This flag is disabled by `no router zebra&#39; statement. */</span>
<a name="l00042"></a><a class="code" href="structzclient.html#a7867dfbcd3b504d2edd22f70ef4277b6">00042</a>   <span class="keywordtype">int</span> <a class="code" href="structzclient.html#a7867dfbcd3b504d2edd22f70ef4277b6">enable</a>;
<a name="l00043"></a>00043 
<a name="l00044"></a>00044   <span class="comment">/* Connection failure count. */</span>
<a name="l00045"></a><a class="code" href="structzclient.html#af497cf3a311b3ffc692e874564d99f20">00045</a>   <span class="keywordtype">int</span> <a class="code" href="structzclient.html#af497cf3a311b3ffc692e874564d99f20">fail</a>;
<a name="l00046"></a>00046 
<a name="l00047"></a>00047   <span class="comment">/* Input buffer for zebra message. */</span>
<a name="l00048"></a><a class="code" href="structzclient.html#a1b9d2a1e869c1008c2bc70d14ce2bf49">00048</a>   <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="structzclient.html#a1b9d2a1e869c1008c2bc70d14ce2bf49">ibuf</a>;
<a name="l00049"></a>00049 
<a name="l00050"></a>00050   <span class="comment">/* Output buffer for zebra message. */</span>
<a name="l00051"></a><a class="code" href="structzclient.html#a6ad60dd1b329d25af807f1517634b71f">00051</a>   <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="structzclient.html#a6ad60dd1b329d25af807f1517634b71f">obuf</a>;
<a name="l00052"></a>00052 
<a name="l00053"></a>00053   <span class="comment">/* Buffer of data waiting to be written to zebra. */</span>
<a name="l00054"></a><a class="code" href="structzclient.html#a7d80b83ca9d6306e93880e228c53e99f">00054</a>   <span class="keyword">struct </span><a class="code" href="structbuffer.html">buffer</a> *<a class="code" href="structzclient.html#a7d80b83ca9d6306e93880e228c53e99f">wb</a>;
<a name="l00055"></a>00055 
<a name="l00056"></a>00056   <span class="comment">/* Read and connect thread. */</span>
<a name="l00057"></a><a class="code" href="structzclient.html#a50e437ba261d04154d21f0411bad12b0">00057</a>   <span class="keyword">struct </span><a class="code" href="structthread.html">thread</a> *<a class="code" href="structzclient.html#a50e437ba261d04154d21f0411bad12b0">t_read</a>;
<a name="l00058"></a><a class="code" href="structzclient.html#acf3591fb899408dc58cfe71cb2035571">00058</a>   <span class="keyword">struct </span><a class="code" href="structthread.html">thread</a> *<a class="code" href="structzclient.html#acf3591fb899408dc58cfe71cb2035571">t_connect</a>;
<a name="l00059"></a>00059 
<a name="l00060"></a>00060   <span class="comment">/* Thread to write buffered data to zebra. */</span>
<a name="l00061"></a><a class="code" href="structzclient.html#aeac07252bd304a7b2e557fb2d84d7b53">00061</a>   <span class="keyword">struct </span><a class="code" href="structthread.html">thread</a> *<a class="code" href="structzclient.html#aeac07252bd304a7b2e557fb2d84d7b53">t_write</a>;
<a name="l00062"></a>00062 
<a name="l00063"></a>00063   <span class="comment">/* Redistribute information. */</span>
<a name="l00064"></a><a class="code" href="structzclient.html#a7c2ac97dd71c8f3a0db036c6c0216208">00064</a>   u_char <a class="code" href="structzclient.html#a7c2ac97dd71c8f3a0db036c6c0216208">redist_default</a>;
<a name="l00065"></a><a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">00065</a>   u_char <a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="zebra_8h.html#aec97442680d773fd62f9af5c9426b842">ZEBRA_ROUTE_MAX</a>];
<a name="l00066"></a>00066 
<a name="l00067"></a>00067   <span class="comment">/* Redistribute defauilt. */</span>
<a name="l00068"></a><a class="code" href="structzclient.html#a9d77c71b907f0f130f467edaefed93e9">00068</a>   u_char <a class="code" href="structzclient.html#a9d77c71b907f0f130f467edaefed93e9">default_information</a>;
<a name="l00069"></a>00069 
<a name="l00070"></a>00070   <span class="comment">/* Pointer to the callback functions. */</span>
<a name="l00071"></a><a class="code" href="structzclient.html#a91ae88d0aa9ff087af5b7567334197f6">00071</a>   int (*<a class="code" href="structzclient.html#a91ae88d0aa9ff087af5b7567334197f6">router_id_update</a>) (int, <span class="keyword">struct </span><a class="code" href="structzclient.html">zclient</a> *, uint16_t);
<a name="l00072"></a><a class="code" href="structzclient.html#a42e63c358fc87552ca16a1eea8b69c4f">00072</a>   int (*<a class="code" href="structzclient.html#a42e63c358fc87552ca16a1eea8b69c4f">interface_add</a>) (int, <span class="keyword">struct </span><a class="code" href="structzclient.html">zclient</a> *, uint16_t);
<a name="l00073"></a><a class="code" href="structzclient.html#a59d608db28363c236285c6323d5697ab">00073</a>   int (*<a class="code" href="structzclient.html#a59d608db28363c236285c6323d5697ab">interface_delete</a>) (int, <span class="keyword">struct </span><a class="code" href="structzclient.html">zclient</a> *, uint16_t);
<a name="l00074"></a><a class="code" href="structzclient.html#a45465702e655472187e9efc3c1734daa">00074</a>   int (*<a class="code" href="structzclient.html#a45465702e655472187e9efc3c1734daa">interface_up</a>) (int, <span class="keyword">struct </span><a class="code" href="structzclient.html">zclient</a> *, uint16_t);
<a name="l00075"></a><a class="code" href="structzclient.html#a426b5e0ec3b5ad8843eb42deaa4fe335">00075</a>   int (*<a class="code" href="structzclient.html#a426b5e0ec3b5ad8843eb42deaa4fe335">interface_down</a>) (int, <span class="keyword">struct </span><a class="code" href="structzclient.html">zclient</a> *, uint16_t);
<a name="l00076"></a><a class="code" href="structzclient.html#a75ee908bb229653f271356b982fa76e7">00076</a>   int (*<a class="code" href="structzclient.html#a75ee908bb229653f271356b982fa76e7">interface_address_add</a>) (int, <span class="keyword">struct </span><a class="code" href="structzclient.html">zclient</a> *, uint16_t);
<a name="l00077"></a><a class="code" href="structzclient.html#a3494b722f85fe14ff8c99ddae54bad94">00077</a>   int (*<a class="code" href="structzclient.html#a3494b722f85fe14ff8c99ddae54bad94">interface_address_delete</a>) (int, <span class="keyword">struct </span><a class="code" href="structzclient.html">zclient</a> *, uint16_t);
<a name="l00078"></a><a class="code" href="structzclient.html#ac2fe2ea5a7f820e1ac572f7629be997f">00078</a>   int (*<a class="code" href="structzclient.html#ac2fe2ea5a7f820e1ac572f7629be997f">ipv4_route_add</a>) (int, <span class="keyword">struct </span><a class="code" href="structzclient.html">zclient</a> *, uint16_t);
<a name="l00079"></a><a class="code" href="structzclient.html#a2fa1fdde8885665490f46edc8c102d4a">00079</a>   int (*<a class="code" href="structzclient.html#a2fa1fdde8885665490f46edc8c102d4a">ipv4_route_delete</a>) (int, <span class="keyword">struct </span><a class="code" href="structzclient.html">zclient</a> *, uint16_t);
<a name="l00080"></a><a class="code" href="structzclient.html#a9d185464cca684ac3d024ec4be7b9881">00080</a>   int (*<a class="code" href="structzclient.html#a9d185464cca684ac3d024ec4be7b9881">ipv6_route_add</a>) (int, <span class="keyword">struct </span><a class="code" href="structzclient.html">zclient</a> *, uint16_t);
<a name="l00081"></a><a class="code" href="structzclient.html#a86d1ece8718111eee4bdd79ca320e8ea">00081</a>   int (*<a class="code" href="structzclient.html#a86d1ece8718111eee4bdd79ca320e8ea">ipv6_route_delete</a>) (int, <span class="keyword">struct </span><a class="code" href="structzclient.html">zclient</a> *, uint16_t);
<a name="l00082"></a>00082 };
<a name="l00083"></a>00083 
<a name="l00084"></a>00084 <span class="comment">/* Zebra API message flag. */</span>
<a name="l00085"></a><a class="code" href="zclient_8h.html#a321bbeaddad8bc9bffaf57f7ac6cf8fd">00085</a> <span class="preprocessor">#define ZAPI_MESSAGE_NEXTHOP  0x01</span>
<a name="l00086"></a><a class="code" href="zclient_8h.html#ae8d1e48f6c2858ecda1c3aee4219a0e6">00086</a> <span class="preprocessor"></span><span class="preprocessor">#define ZAPI_MESSAGE_IFINDEX  0x02</span>
<a name="l00087"></a><a class="code" href="zclient_8h.html#abe498bb81bfbda17757173ef23e25179">00087</a> <span class="preprocessor"></span><span class="preprocessor">#define ZAPI_MESSAGE_DISTANCE 0x04</span>
<a name="l00088"></a><a class="code" href="zclient_8h.html#a4a5d60df1ef02f794476ea1daa6ba024">00088</a> <span class="preprocessor"></span><span class="preprocessor">#define ZAPI_MESSAGE_METRIC   0x08</span>
<a name="l00089"></a>00089 <span class="preprocessor"></span>
<a name="l00090"></a>00090 <span class="comment">/* Zserv protocol message header */</span>
<a name="l00091"></a><a class="code" href="structzserv__header.html">00091</a> <span class="keyword">struct </span><a class="code" href="structzserv__header.html">zserv_header</a>
<a name="l00092"></a>00092 {
<a name="l00093"></a><a class="code" href="structzserv__header.html#af324bb95079f947f48e5b0db0a74167d">00093</a>   uint16_t <a class="code" href="structzserv__header.html#af324bb95079f947f48e5b0db0a74167d">length</a>;
<a name="l00094"></a><a class="code" href="structzserv__header.html#aa15c29c51939c816b78ad90fcb78410a">00094</a>   uint8_t <a class="code" href="structzserv__header.html#aa15c29c51939c816b78ad90fcb78410a">marker</a>;   <span class="comment">/* corresponds to command field in old zserv</span>
<a name="l00095"></a>00095 <span class="comment">                         * always set to 255 in new zserv.</span>
<a name="l00096"></a>00096 <span class="comment">                         */</span>
<a name="l00097"></a><a class="code" href="structzserv__header.html#a33489ec50d352230a31a9e28707eb0b0">00097</a>   uint8_t <a class="code" href="structzserv__header.html#a33489ec50d352230a31a9e28707eb0b0">version</a>;
<a name="l00098"></a><a class="code" href="zclient_8h.html#a353879f7a2fe9365a57041c8870e8dec">00098</a> <span class="preprocessor">#define ZSERV_VERSION   1</span>
<a name="l00099"></a><a class="code" href="structzserv__header.html#afbe51f932f624a3db99b416999ded243">00099</a> <span class="preprocessor"></span>  uint16_t <a class="code" href="structzserv__header.html#afbe51f932f624a3db99b416999ded243">command</a>;
<a name="l00100"></a>00100 };
<a name="l00101"></a>00101 
<a name="l00102"></a>00102 <span class="comment">/* Zebra IPv4 route message API. */</span>
<a name="l00103"></a><a class="code" href="structzapi__ipv4.html">00103</a> <span class="keyword">struct </span><a class="code" href="structzapi__ipv4.html">zapi_ipv4</a>
<a name="l00104"></a>00104 {
<a name="l00105"></a><a class="code" href="structzapi__ipv4.html#ae4c29fc6652367a6546104010802ac2f">00105</a>   u_char <a class="code" href="structzapi__ipv4.html#ae4c29fc6652367a6546104010802ac2f">type</a>;
<a name="l00106"></a>00106 
<a name="l00107"></a><a class="code" href="structzapi__ipv4.html#af27235a3df3f1e86cdbd91bce4e0a2c9">00107</a>   u_char <a class="code" href="structzapi__ipv4.html#af27235a3df3f1e86cdbd91bce4e0a2c9">flags</a>;
<a name="l00108"></a>00108 
<a name="l00109"></a><a class="code" href="structzapi__ipv4.html#a5d958982406b8e5c5792fa61d30dad2d">00109</a>   u_char <a class="code" href="structzapi__ipv4.html#a5d958982406b8e5c5792fa61d30dad2d">message</a>;
<a name="l00110"></a>00110 
<a name="l00111"></a><a class="code" href="structzapi__ipv4.html#a7af9e3fe513c80387289b433e33dfd7b">00111</a>   u_char <a class="code" href="structzapi__ipv4.html#a7af9e3fe513c80387289b433e33dfd7b">nexthop_num</a>;
<a name="l00112"></a><a class="code" href="structzapi__ipv4.html#a3864c7fed7dfc94e19405d9d0fef2f9c">00112</a>   <span class="keyword">struct </span>in_addr **<a class="code" href="structzapi__ipv4.html#a3864c7fed7dfc94e19405d9d0fef2f9c">nexthop</a>;
<a name="l00113"></a>00113 
<a name="l00114"></a><a class="code" href="structzapi__ipv4.html#ae831960c79c5bbf79345fe148c202641">00114</a>   u_char <a class="code" href="structzapi__ipv4.html#ae831960c79c5bbf79345fe148c202641">ifindex_num</a>;
<a name="l00115"></a><a class="code" href="structzapi__ipv4.html#a7043b2c08d10a58daa5e6e7800ff8a29">00115</a>   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> *<a class="code" href="structzapi__ipv4.html#a7043b2c08d10a58daa5e6e7800ff8a29">ifindex</a>;
<a name="l00116"></a>00116 
<a name="l00117"></a><a class="code" href="structzapi__ipv4.html#a78e8151136680e3bd6160864426f4ab3">00117</a>   u_char <a class="code" href="structzapi__ipv4.html#a78e8151136680e3bd6160864426f4ab3">distance</a>;
<a name="l00118"></a>00118 
<a name="l00119"></a><a class="code" href="structzapi__ipv4.html#a4894d78fb0f8be44470318b265e5a487">00119</a>   u_int32_t <a class="code" href="structzapi__ipv4.html#a4894d78fb0f8be44470318b265e5a487">metric</a>;
<a name="l00120"></a>00120 };
<a name="l00121"></a>00121 
<a name="l00122"></a>00122 <span class="comment">/* Prototypes of zebra client service functions. */</span>
<a name="l00123"></a>00123 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structzclient.html">zclient</a> *<a class="code" href="zclient_8c.html#aa521f2a71596b1dc50f76fcb57dff30b">zclient_new</a> (<span class="keywordtype">void</span>);
<a name="l00124"></a>00124 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="zclient_8c.html#ac649a246f405850a3ade72de002745e3">zclient_init</a> (<span class="keyword">struct</span> <a class="code" href="structzclient.html">zclient</a> *, <span class="keywordtype">int</span>);
<a name="l00125"></a>00125 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="zclient_8c.html#a9c8f7389bb01919b00e7f95403a3c112">zclient_start</a> (<span class="keyword">struct</span> <a class="code" href="structzclient.html">zclient</a> *);
<a name="l00126"></a>00126 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="zclient_8c.html#a380163204583292d5924050e26a8989d">zclient_stop</a> (<span class="keyword">struct</span> <a class="code" href="structzclient.html">zclient</a> *);
<a name="l00127"></a>00127 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="zclient_8c.html#ad002f3a9a797ab41ed60505ed5007ae7">zclient_reset</a> (<span class="keyword">struct</span> <a class="code" href="structzclient.html">zclient</a> *);
<a name="l00128"></a>00128 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="zclient_8c.html#aa6b9a9327c5b3842f3a91e0464a4af7a">zclient_free</a> (<span class="keyword">struct</span> <a class="code" href="structzclient.html">zclient</a> *);
<a name="l00129"></a>00129 
<a name="l00130"></a>00130 <span class="comment">/* Get TCP socket connection to zebra daemon at loopback address. */</span>
<a name="l00131"></a>00131 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="zclient_8c.html#ac937966a23dbff10b311175341da2d57">zclient_socket</a> (<span class="keywordtype">void</span>);
<a name="l00132"></a>00132 
<a name="l00133"></a>00133 <span class="comment">/* Get unix stream socket connection to zebra daemon at given path. */</span>
<a name="l00134"></a>00134 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="zclient_8c.html#a1a87f3eaa2f08161b64feebfda6bf3fd">zclient_socket_un</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *);
<a name="l00135"></a>00135 
<a name="l00136"></a>00136 <span class="comment">/* Send redistribute command to zebra daemon. Do not update zclient state. */</span>
<a name="l00137"></a>00137 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="zclient_8c.html#a0ed1704cde688d0575a1394a34f6fc82">zebra_redistribute_send</a> (<span class="keywordtype">int</span> command, <span class="keyword">struct</span> <a class="code" href="structzclient.html">zclient</a> *, <span class="keywordtype">int</span> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>);
<a name="l00138"></a>00138 
<a name="l00139"></a>00139 <span class="comment">/* If state has changed, update state and call zebra_redistribute_send. */</span>
<a name="l00140"></a>00140 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="zclient_8c.html#a4381afa78256a1211fe7881394d7e666">zclient_redistribute</a> (<span class="keywordtype">int</span> command, <span class="keyword">struct</span> <a class="code" href="structzclient.html">zclient</a> *, <span class="keywordtype">int</span> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>);
<a name="l00141"></a>00141 
<a name="l00142"></a>00142 <span class="comment">/* If state has changed, update state and send the command to zebra. */</span>
<a name="l00143"></a>00143 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="zclient_8c.html#a2d2c4a009144e592b06b55055ab9c38e">zclient_redistribute_default</a> (<span class="keywordtype">int</span> command, <span class="keyword">struct</span> <a class="code" href="structzclient.html">zclient</a> *);
<a name="l00144"></a>00144 
<a name="l00145"></a>00145 <span class="comment">/* Send the message in zclient-&gt;obuf to the zebra daemon (or enqueue it).</span>
<a name="l00146"></a>00146 <span class="comment">   Returns 0 for success or -1 on an I/O error. */</span>
<a name="l00147"></a>00147 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="zclient_8c.html#ad395166e549bd33dcc253052ac0bbd7d">zclient_send_message</a>(<span class="keyword">struct</span> <a class="code" href="structzclient.html">zclient</a> *);
<a name="l00148"></a>00148 
<a name="l00149"></a>00149 <span class="comment">/* create header for command, length to be filled in by user later */</span>
<a name="l00150"></a>00150 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="zclient_8c.html#a70fa712bf570d588ea3b3c464bc5156f">zclient_create_header</a> (<span class="keyword">struct</span> <a class="code" href="structstream.html">stream</a> *, uint16_t);
<a name="l00151"></a>00151 
<a name="l00152"></a>00152 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *<a class="code" href="zclient_8c.html#af2dbed49848c57eaae1185751ec18648">zebra_interface_add_read</a> (<span class="keyword">struct</span> <a class="code" href="structstream.html">stream</a> *);
<a name="l00153"></a>00153 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *<a class="code" href="zclient_8c.html#a989f3e044d41b4e18463027a94b846e7">zebra_interface_state_read</a> (<span class="keyword">struct</span> <a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>);
<a name="l00154"></a>00154 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structconnected.html">connected</a> *<a class="code" href="zclient_8c.html#a361d54ec3dad267afc3335fe155367a2">zebra_interface_address_read</a> (<span class="keywordtype">int</span>, <span class="keyword">struct</span> <a class="code" href="structstream.html">stream</a> *);
<a name="l00155"></a>00155 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="zclient_8c.html#a2366afba487613909591ecadd8985f1a">zebra_interface_if_set_value</a> (<span class="keyword">struct</span> <a class="code" href="structstream.html">stream</a> *, <span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *);
<a name="l00156"></a>00156 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="zclient_8c.html#a6adcd87e46d205582c81673f669067f3">zebra_router_id_update_read</a> (<span class="keyword">struct</span> <a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *rid);
<a name="l00157"></a>00157 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="zclient_8c.html#ad9a398f43faa79a0bab620c985fb476a">zapi_ipv4_route</a> (u_char, <span class="keyword">struct</span> <a class="code" href="structzclient.html">zclient</a> *, <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *, 
<a name="l00158"></a>00158                             <span class="keyword">struct</span> <a class="code" href="structzapi__ipv4.html">zapi_ipv4</a> *);
<a name="l00159"></a>00159 
<a name="l00160"></a>00160 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00161"></a>00161 <span class="preprocessor"></span><span class="comment">/* IPv6 prefix add and delete function prototype. */</span>
<a name="l00162"></a>00162 
<a name="l00163"></a>00163 <span class="keyword">struct </span>zapi_ipv6
<a name="l00164"></a>00164 {
<a name="l00165"></a>00165   u_char <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>;
<a name="l00166"></a>00166 
<a name="l00167"></a>00167   u_char <a class="code" href="structflags.html">flags</a>;
<a name="l00168"></a>00168 
<a name="l00169"></a>00169   u_char <a class="code" href="structmessage.html">message</a>;
<a name="l00170"></a>00170 
<a name="l00171"></a>00171   u_char nexthop_num;
<a name="l00172"></a>00172   <span class="keyword">struct </span>in6_addr **<a class="code" href="structnexthop.html">nexthop</a>;
<a name="l00173"></a>00173 
<a name="l00174"></a>00174   u_char ifindex_num;
<a name="l00175"></a>00175   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> *ifindex;
<a name="l00176"></a>00176 
<a name="l00177"></a>00177   u_char <a class="code" href="zebra__rib_8c.html#afb9412686cd344ad61757c1c19ba8a87">distance</a>;
<a name="l00178"></a>00178 
<a name="l00179"></a>00179   u_int32_t <a class="code" href="structmetric.html">metric</a>;
<a name="l00180"></a>00180 };
<a name="l00181"></a>00181 
<a name="l00182"></a>00182 <span class="keyword">extern</span> <span class="keywordtype">int</span> zapi_ipv6_route (u_char cmd, <span class="keyword">struct</span> <a class="code" href="structzclient.html">zclient</a> *<a class="code" href="structzclient.html">zclient</a>, 
<a name="l00183"></a>00183                      <span class="keyword">struct</span> prefix_ipv6 *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, <span class="keyword">struct</span> zapi_ipv6 *api);
<a name="l00184"></a>00184 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l00185"></a>00185 
<a name="l00186"></a>00186 <span class="preprocessor">#endif </span><span class="comment">/* _ZEBRA_ZCLIENT_H */</span>
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="zclient_8h.html">zclient.h</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:06 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
