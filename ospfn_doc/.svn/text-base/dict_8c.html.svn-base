<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: isisd/dict.c File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('dict_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#define-members">Defines</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">isisd/dict.c File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &lt;stdlib.h&gt;</code><br/>
<code>#include &lt;stddef.h&gt;</code><br/>
<code>#include &quot;<a class="el" href="zebra_8h_source.html">zebra.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="zassert_8h_source.html">zassert.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="dict_8h_source.html">dict.h</a>&quot;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for dict.c:</div>
<div class="dyncontent">
<div class="center"><img src="dict_8c__incl.png" border="0" usemap="#isisd_2dict_8c" alt=""/></div>
<map name="isisd_2dict_8c" id="isisd_2dict_8c">
<area shape="rect" id="node7" href="zebra_8h.html" title="zebra.h" alt="" coords="1347,80,1413,107"/><area shape="rect" id="node60" href="zassert_8h.html" title="zassert.h" alt="" coords="2745,155,2823,181"/><area shape="rect" id="node65" href="dict_8h.html" title="dict.h" alt="" coords="2511,80,2567,107"/><area shape="rect" id="node62" href="str_8h.html" title="str.h" alt="" coords="2671,155,2720,181"/></map>
</div>
</div>
<p><a href="dict_8c_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a725f18cc5457f08f8d2ac6365d4f00e7">DICT_IMPLEMENTATION</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a428f8207615465afdfcf1d31547ffef3">left</a>&#160;&#160;&#160;dict_left</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#ae545bf658b2c876abbbae55a7d12875f">right</a>&#160;&#160;&#160;dict_right</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>&#160;&#160;&#160;dict_parent</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#addc0ea0a88e0ea5e051be50e479d1bad">color</a>&#160;&#160;&#160;dict_color</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#ae57736c8a0ddeb64dc394712624d8209">key</a>&#160;&#160;&#160;dict_key</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a43a278d13284fb3412e9eee1db1d967e">data</a>&#160;&#160;&#160;dict_data</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a650566742df447f6f5c2cf9044004228">nilnode</a>&#160;&#160;&#160;dict_nilnode</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a6c4460881d4f0e0099ca771141c157d6">nodecount</a>&#160;&#160;&#160;dict_nodecount</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#aab843860735df831cb06670bfdf0f3c3">maxcount</a>&#160;&#160;&#160;dict_maxcount</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a5fac2fe9e231e8133c76205adfa4d506">compare</a>&#160;&#160;&#160;dict_compare</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#aace0a1a94bbab224570abb63fc2c602e">allocnode</a>&#160;&#160;&#160;dict_allocnode</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a30440a97a3a6b753a35a4b55b474e828">freenode</a>&#160;&#160;&#160;dict_freenode</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#aad81e1d3f9fe24703a4d3c856a75cda6">context</a>&#160;&#160;&#160;dict_context</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a13cdf4d03b345ad34e6f837e53d4ca9e">dupes</a>&#160;&#160;&#160;dict_dupes</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a30e410d8ef50c273861b999a00d20c33">dictptr</a>&#160;&#160;&#160;dict_dictptr</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(D)&#160;&#160;&#160;((D)-&gt;nilnode.left)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(D)&#160;&#160;&#160;(&amp;(D)-&gt;nilnode)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#ab7dc78ce3c539dfab8f0e4e5506666c2">DICT_DEPTH_MAX</a>&#160;&#160;&#160;64</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static <a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a0d63f8b9a1a39f8b3edfef544497265b">dnode_alloc</a> (void *context)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a0816722a1a33c537793c38eaac3233cb">dnode_free</a> (<a class="el" href="structdnode__t.html">dnode_t</a> *node, void *context)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a6c3000c0249a91cb54c68c2aad08ea03">rotate_left</a> (<a class="el" href="structdnode__t.html">dnode_t</a> *upper)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#affc1c26c10656d2aacf662d7750f61fd">rotate_right</a> (<a class="el" href="structdnode__t.html">dnode_t</a> *upper)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a0fd13b499b544b23aa94217bbf9d1189">free_nodes</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict, <a class="el" href="structdnode__t.html">dnode_t</a> *node, <a class="el" href="structdnode__t.html">dnode_t</a> *nil)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a7af8b0b9796e50e8770a517959b64364">verify_bintree</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a8b56a42ae2278cc21494e098f4e7a541">verify_redblack</a> (<a class="el" href="structdnode__t.html">dnode_t</a> *nil, <a class="el" href="structdnode__t.html">dnode_t</a> *root)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static <a class="el" href="dict_8h.html#a0ccdd0435aed173cb756dbb8f6ed27c5">dictcount_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#aa85e6dc41f8a5804b4a1c80dc5a7666d">verify_node_count</a> (<a class="el" href="structdnode__t.html">dnode_t</a> *nil, <a class="el" href="structdnode__t.html">dnode_t</a> *root)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#ae986d29f8534fae1d89db38aacd48d24">verify_dict_has_node</a> (<a class="el" href="structdnode__t.html">dnode_t</a> *nil, <a class="el" href="structdnode__t.html">dnode_t</a> *root, <a class="el" href="structdnode__t.html">dnode_t</a> *node)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a1a1783c8987d21d1d1078f80cb614679">dict_create</a> (<a class="el" href="dict_8h.html#a0ccdd0435aed173cb756dbb8f6ed27c5">dictcount_t</a> maxcount, <a class="el" href="dict_8h.html#a92a0ce54764499eee8e3584a7b8795d9">dict_comp_t</a> comp)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a5c2f075814bbc9660b670547a991ac33">dict_set_allocator</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict, <a class="el" href="dict_8h.html#a9622bc12328ca0820a2b75ddd368e742">dnode_alloc_t</a> <a class="el" href="spgrid_8c.html#a7c4593313d1839d57c28594a69357bab">al</a>, <a class="el" href="dict_8h.html#aab7503760ea3aa9d811d19c8acd425c8">dnode_free_t</a> fr, void *context)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#afa278bdf2a5b96347df1013d7c61c60c">dict_destroy</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#abbb87db71ff5da8f7881d347dba70e59">dict_free_nodes</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#ab1d4e786dee93b4dc601d2f339ff81fd">dict_free</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#adce7f1ed114712b1ec095cfa86988053">dict_init</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict, <a class="el" href="dict_8h.html#a0ccdd0435aed173cb756dbb8f6ed27c5">dictcount_t</a> maxcount, <a class="el" href="dict_8h.html#a92a0ce54764499eee8e3584a7b8795d9">dict_comp_t</a> comp)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a6ceb0e0e60d65f9de7645223a34e499e">dict_init_like</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict, const <a class="el" href="structdict__t.html">dict_t</a> *template)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#acc7ef43b7d72d6c2818274acc8bbf494">dict_clear</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a8fd61b9b13f52b4d1e0d34a8f2178f13">dict_verify</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a39327af6a2025edf54bd553dfaca6eed">dict_similar</a> (const <a class="el" href="structdict__t.html">dict_t</a> *left, const <a class="el" href="structdict__t.html">dict_t</a> *right)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a9b4c0968674a4ff436bb8180aa56e522">dict_lookup</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict, const void *<a class="el" href="structkey.html">key</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#aaee9b7ed8b80f9f2dfab916a22c173ee">dict_lower_bound</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict, const void *<a class="el" href="structkey.html">key</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a6d6f2d4cc66e3859fe47d39b82cfd7ee">dict_upper_bound</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict, const void *<a class="el" href="structkey.html">key</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a761d921fc86ec6bfbb8f77f15a48662f">dict_insert</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict, <a class="el" href="structdnode__t.html">dnode_t</a> *node, const void *<a class="el" href="structkey.html">key</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#ad51f28cd1829e1fd66caf58f553d794e">dict_delete</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict, <a class="el" href="structdnode__t.html">dnode_t</a> *delete)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a914a77195b15984573e3dac49f38e5f2">dict_alloc_insert</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict, const void *<a class="el" href="structkey.html">key</a>, void *data)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#ad820577e4fba81f761665f16356823ab">dict_delete_free</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict, <a class="el" href="structdnode__t.html">dnode_t</a> *node)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a2b439ffb63f9b3089d0306ec3b26672f">dict_first</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a4d069737fa8ee7fb7b8d775df86e9492">dict_last</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict, <a class="el" href="structdnode__t.html">dnode_t</a> *curr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a2404cd70f965a01f782b3bf667924a92">dict_prev</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict, <a class="el" href="structdnode__t.html">dnode_t</a> *curr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a78b4a23fb87446171d7c816461d1ab62">dict_allow_dupes</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="dict_8h.html#a0ccdd0435aed173cb756dbb8f6ed27c5">dictcount_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a252115a7ebd98382002ebd8c5069e235">dict_count</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#ab02d8ba14f3b003f843d2bb88e7a1673">dict_isempty</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a14df3da32672d00f8a781d6a7d8d174a">dict_isfull</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a41876a53021479360b7fcebf009c1bbd">dict_contains</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict, <a class="el" href="structdnode__t.html">dnode_t</a> *node)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a26d3d46b0aafb0103a6e4f169475f4c1">dnode_create</a> (void *data)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a7d2886945deceaa6b594007adc771ec0">dnode_init</a> (<a class="el" href="structdnode__t.html">dnode_t</a> *dnode, void *data)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#ae494e63c2ce90dee35c2abdd940ec8cf">dnode_destroy</a> (<a class="el" href="structdnode__t.html">dnode_t</a> *dnode)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#adcf7e356887e56df2505e28e9f8e0721">dnode_get</a> (<a class="el" href="structdnode__t.html">dnode_t</a> *dnode)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a892d1fefb0a9ed70338744794ed351f1">dnode_getkey</a> (<a class="el" href="structdnode__t.html">dnode_t</a> *dnode)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a627a1a8809684a0470c947b7379ec920">dnode_put</a> (<a class="el" href="structdnode__t.html">dnode_t</a> *dnode, void *data)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#ae38201fa011e3412fd8ae3f6e935c5a2">dnode_is_in_a_dict</a> (<a class="el" href="structdnode__t.html">dnode_t</a> *dnode)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a2b3c224bd5d6a4a8c74c09fa14ca0875">dict_process</a> (<a class="el" href="structdict__t.html">dict_t</a> *dict, void *context, <a class="el" href="dict_8h.html#af6c238eee1552793065cbec20b1aafcb">dnode_process_t</a> function)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a9cd0da20fb7f904098a94425e689aea6">load_begin_internal</a> (<a class="el" href="structdict__load__t.html">dict_load_t</a> *load, <a class="el" href="structdict__t.html">dict_t</a> *dict)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a28bbce4e85c8b66bab512934c30da705">dict_load_begin</a> (<a class="el" href="structdict__load__t.html">dict_load_t</a> *load, <a class="el" href="structdict__t.html">dict_t</a> *dict)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a3721d6ba3ea6a36f2c8b49b4e72fe8f7">dict_load_next</a> (<a class="el" href="structdict__load__t.html">dict_load_t</a> *load, <a class="el" href="structdnode__t.html">dnode_t</a> *newnode, const void *<a class="el" href="structkey.html">key</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#a5c70e94507e52999ef2c8a2ffce9a917">dict_load_end</a> (<a class="el" href="structdict__load__t.html">dict_load_t</a> *load)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dict_8c.html#ab46a82871283a72d456c76151cd46b96">dict_merge</a> (<a class="el" href="structdict__t.html">dict_t</a> *dest, <a class="el" href="structdict__t.html">dict_t</a> *<a class="el" href="spgrid_8c.html#acef278b54e17ed729da5acd28bda6daf">source</a>)</td></tr>
</table>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="aace0a1a94bbab224570abb63fc2c602e"></a><!-- doxytag: member="dict.c::allocnode" ref="aace0a1a94bbab224570abb63fc2c602e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define allocnode&#160;&#160;&#160;dict_allocnode</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00055">55</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>

</div>
</div>
<a class="anchor" id="addc0ea0a88e0ea5e051be50e479d1bad"></a><!-- doxytag: member="dict.c::color" ref="addc0ea0a88e0ea5e051be50e479d1bad" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define color&#160;&#160;&#160;dict_color</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00047">47</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>

</div>
</div>
<a class="anchor" id="a5fac2fe9e231e8133c76205adfa4d506"></a><!-- doxytag: member="dict.c::compare" ref="a5fac2fe9e231e8133c76205adfa4d506" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define compare&#160;&#160;&#160;dict_compare</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00054">54</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>

</div>
</div>
<a class="anchor" id="aad81e1d3f9fe24703a4d3c856a75cda6"></a><!-- doxytag: member="dict.c::context" ref="aad81e1d3f9fe24703a4d3c856a75cda6" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define context&#160;&#160;&#160;dict_context</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00057">57</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>

</div>
</div>
<a class="anchor" id="a43a278d13284fb3412e9eee1db1d967e"></a><!-- doxytag: member="dict.c::data" ref="a43a278d13284fb3412e9eee1db1d967e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define data&#160;&#160;&#160;dict_data</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00049">49</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>

</div>
</div>
<a class="anchor" id="ab7dc78ce3c539dfab8f0e4e5506666c2"></a><!-- doxytag: member="dict.c::DICT_DEPTH_MAX" ref="ab7dc78ce3c539dfab8f0e4e5506666c2" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DICT_DEPTH_MAX&#160;&#160;&#160;64</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00064">64</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>

</div>
</div>
<a class="anchor" id="a725f18cc5457f08f8d2ac6365d4f00e7"></a><!-- doxytag: member="dict.c::DICT_IMPLEMENTATION" ref="a725f18cc5457f08f8d2ac6365d4f00e7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DICT_IMPLEMENTATION</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00025">25</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>

</div>
</div>
<a class="anchor" id="a5a5c9300878d7ff68c174a9446d3ec10"></a><!-- doxytag: member="dict.c::dict_nil" ref="a5a5c9300878d7ff68c174a9446d3ec10" args="(D)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define dict_nil</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">D</td><td>)</td>
          <td>&#160;&#160;&#160;(&amp;(D)-&gt;nilnode)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00063">63</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>

</div>
</div>
<a class="anchor" id="aa2e1d6d03a1ee5a926a769ece7075f6a"></a><!-- doxytag: member="dict.c::dict_root" ref="aa2e1d6d03a1ee5a926a769ece7075f6a" args="(D)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define dict_root</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">D</td><td>)</td>
          <td>&#160;&#160;&#160;((D)-&gt;nilnode.left)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00062">62</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>

</div>
</div>
<a class="anchor" id="a30e410d8ef50c273861b999a00d20c33"></a><!-- doxytag: member="dict.c::dictptr" ref="a30e410d8ef50c273861b999a00d20c33" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define dictptr&#160;&#160;&#160;dict_dictptr</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00060">60</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>

</div>
</div>
<a class="anchor" id="a13cdf4d03b345ad34e6f837e53d4ca9e"></a><!-- doxytag: member="dict.c::dupes" ref="a13cdf4d03b345ad34e6f837e53d4ca9e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define dupes&#160;&#160;&#160;dict_dupes</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00058">58</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>

</div>
</div>
<a class="anchor" id="a30440a97a3a6b753a35a4b55b474e828"></a><!-- doxytag: member="dict.c::freenode" ref="a30440a97a3a6b753a35a4b55b474e828" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define freenode&#160;&#160;&#160;dict_freenode</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00056">56</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>

</div>
</div>
<a class="anchor" id="ae57736c8a0ddeb64dc394712624d8209"></a><!-- doxytag: member="dict.c::key" ref="ae57736c8a0ddeb64dc394712624d8209" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define <a class="el" href="structkey.html">key</a>&#160;&#160;&#160;dict_key</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00048">48</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>

</div>
</div>
<a class="anchor" id="a428f8207615465afdfcf1d31547ffef3"></a><!-- doxytag: member="dict.c::left" ref="a428f8207615465afdfcf1d31547ffef3" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define left&#160;&#160;&#160;dict_left</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00044">44</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>

</div>
</div>
<a class="anchor" id="aab843860735df831cb06670bfdf0f3c3"></a><!-- doxytag: member="dict.c::maxcount" ref="aab843860735df831cb06670bfdf0f3c3" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define maxcount&#160;&#160;&#160;dict_maxcount</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00053">53</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>

</div>
</div>
<a class="anchor" id="a650566742df447f6f5c2cf9044004228"></a><!-- doxytag: member="dict.c::nilnode" ref="a650566742df447f6f5c2cf9044004228" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define nilnode&#160;&#160;&#160;dict_nilnode</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00051">51</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>

</div>
</div>
<a class="anchor" id="a6c4460881d4f0e0099ca771141c157d6"></a><!-- doxytag: member="dict.c::nodecount" ref="a6c4460881d4f0e0099ca771141c157d6" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define nodecount&#160;&#160;&#160;dict_nodecount</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00052">52</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>

</div>
</div>
<a class="anchor" id="a9d4418feaea5490d8afb9c25c34fba4d"></a><!-- doxytag: member="dict.c::parent" ref="a9d4418feaea5490d8afb9c25c34fba4d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define parent&#160;&#160;&#160;dict_parent</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00046">46</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>

</div>
</div>
<a class="anchor" id="ae545bf658b2c876abbbae55a7d12875f"></a><!-- doxytag: member="dict.c::right" ref="ae545bf658b2c876abbbae55a7d12875f" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define right&#160;&#160;&#160;dict_right</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00045">45</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a914a77195b15984573e3dac49f38e5f2"></a><!-- doxytag: member="dict.c::dict_alloc_insert" ref="a914a77195b15984573e3dac49f38e5f2" args="(dict_t *dict, const void *key, void *data)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int dict_alloc_insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00814">814</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *node = dict-&gt;allocnode(dict-&gt;context);

    <span class="keywordflow">if</span> (node) {
    <a class="code" href="dict_8c.html#a7d2886945deceaa6b594007adc771ec0">dnode_init</a>(node, <a class="code" href="dict_8c.html#a43a278d13284fb3412e9eee1db1d967e">data</a>);
    <a class="code" href="dict_8c.html#a761d921fc86ec6bfbb8f77f15a48662f">dict_insert</a>(dict, node, <a class="code" href="structkey.html">key</a>);
    <span class="keywordflow">return</span> 1;
    }
    <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a78b4a23fb87446171d7c816461d1ab62"></a><!-- doxytag: member="dict.c::dict_allow_dupes" ref="a78b4a23fb87446171d7c816461d1ab62" args="(dict_t *dict)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_allow_dupes </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00918">918</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    dict-&gt;dupes = 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="acc7ef43b7d72d6c2818274acc8bbf494"></a><!-- doxytag: member="dict.c::dict_clear" ref="acc7ef43b7d72d6c2818274acc8bbf494" args="(dict_t *dict)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void dict_clear </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00364">364</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    dict-&gt;nodecount = 0;
    dict-&gt;nilnode.left = &amp;dict-&gt;nilnode;
    dict-&gt;nilnode.right = &amp;dict-&gt;nilnode;
    dict-&gt;nilnode.parent = &amp;dict-&gt;nilnode;
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (dict-&gt;nilnode.color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a41876a53021479360b7fcebf009c1bbd"></a><!-- doxytag: member="dict.c::dict_contains" ref="a41876a53021479360b7fcebf009c1bbd" args="(dict_t *dict, dnode_t *node)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int dict_contains </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>node</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00945">945</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> <a class="code" href="dict_8c.html#ae986d29f8534fae1d89db38aacd48d24">verify_dict_has_node</a>(<a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict), <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict), node);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a252115a7ebd98382002ebd8c5069e235"></a><!-- doxytag: member="dict.c::dict_count" ref="a252115a7ebd98382002ebd8c5069e235" args="(dict_t *dict)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="dict_8h.html#a0ccdd0435aed173cb756dbb8f6ed27c5">dictcount_t</a> dict_count </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00930">930</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> dict-&gt;nodecount;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a1a1783c8987d21d1d1078f80cb614679"></a><!-- doxytag: member="dict.c::dict_create" ref="a1a1783c8987d21d1d1078f80cb614679" args="(dictcount_t maxcount, dict_comp_t comp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdict__t.html">dict_t</a>* dict_create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="dict_8h.html#a0ccdd0435aed173cb756dbb8f6ed27c5">dictcount_t</a>&#160;</td>
          <td class="paramname"><em>maxcount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="dict_8h.html#a92a0ce54764499eee8e3584a7b8795d9">dict_comp_t</a>&#160;</td>
          <td class="paramname"><em>comp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00247">247</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdict__t.html">dict_t</a> *<span class="keyword">new</span> = <a class="code" href="regex_8c.html#ab7e36af3707843f77cc5b4e831c2fa6d">malloc</a>(<span class="keyword">sizeof</span> *<span class="keyword">new</span>);

    <span class="keywordflow">if</span> (<span class="keyword">new</span>) {
    <span class="keyword">new</span>-&gt;compare = comp;
    <span class="keyword">new</span>-&gt;allocnode = <a class="code" href="dict_8c.html#a0d63f8b9a1a39f8b3edfef544497265b">dnode_alloc</a>;
    <span class="keyword">new</span>-&gt;freenode = <a class="code" href="dict_8c.html#a0816722a1a33c537793c38eaac3233cb">dnode_free</a>;
    <span class="keyword">new</span>-&gt;context = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    <span class="keyword">new</span>-&gt;nodecount = 0;
    <span class="keyword">new</span>-&gt;maxcount = <a class="code" href="dict_8c.html#aab843860735df831cb06670bfdf0f3c3">maxcount</a>;
    <span class="keyword">new</span>-&gt;nilnode.left = &amp;<span class="keyword">new</span>-&gt;nilnode;
    <span class="keyword">new</span>-&gt;nilnode.right = &amp;<span class="keyword">new</span>-&gt;nilnode;
    <span class="keyword">new</span>-&gt;nilnode.parent = &amp;<span class="keyword">new</span>-&gt;nilnode;
    <span class="keyword">new</span>-&gt;nilnode.color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
    <span class="keyword">new</span>-&gt;dupes = 0;
    }
    <span class="keywordflow">return</span> <span class="keyword">new</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad51f28cd1829e1fd66caf58f553d794e"></a><!-- doxytag: member="dict.c::dict_delete" ref="ad51f28cd1829e1fd66caf58f553d794e" args="(dict_t *dict, dnode_t *delete)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdnode__t.html">dnode_t</a>* dict_delete </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>delete</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00640">640</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *nil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict), *child, *delparent = <span class="keyword">delete</span>-&gt;parent;

    <span class="comment">/* basic deletion */</span>

    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (!<a class="code" href="dict_8h.html#a71f54a3dc27888df31631db89e956195">dict_isempty</a>(dict));
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8c.html#a41876a53021479360b7fcebf009c1bbd">dict_contains</a>(dict, <span class="keyword">delete</span>));

    <span class="comment">/*</span>
<span class="comment">     * If the node being deleted has two children, then we replace it with its</span>
<span class="comment">     * successor (i.e. the leftmost node in the right subtree.) By doing this,</span>
<span class="comment">     * we avoid the traditional algorithm under which the successor&#39;s key and</span>
<span class="comment">     * value *only* move to the deleted node and the successor is spliced out</span>
<span class="comment">     * from the tree. We cannot use this approach because the user may hold</span>
<span class="comment">     * pointers to the successor, or nodes may be inextricably tied to some</span>
<span class="comment">     * other structures by way of embedding, etc. So we must splice out the</span>
<span class="comment">     * node we are given, not some other node, and must not move contents from</span>
<span class="comment">     * one node to another behind the user&#39;s back.</span>
<span class="comment">     */</span>

    <span class="keywordflow">if</span> (delete-&gt;left != nil &amp;&amp; delete-&gt;right != nil) {
    <a class="code" href="structdnode__t.html">dnode_t</a> *<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a>(dict, <span class="keyword">delete</span>);
    <a class="code" href="structdnode__t.html">dnode_t</a> *nextparent = next-&gt;parent;
    <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762c">dnode_color_t</a> nextcolor = next-&gt;color;

    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (next != nil);
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (next-&gt;parent != nil);
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (next-&gt;left == nil);

    <span class="comment">/*</span>
<span class="comment">     * First, splice out the successor from the tree completely, by</span>
<span class="comment">     * moving up its right child into its place.</span>
<span class="comment">     */</span>

    child = next-&gt;right;
    child-&gt;parent = nextparent;

    <span class="keywordflow">if</span> (nextparent-&gt;left == next) {
        nextparent-&gt;left = child;
    } <span class="keywordflow">else</span> {
        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (nextparent-&gt;right == next);
        nextparent-&gt;right = child;
    }

    <span class="comment">/*</span>
<span class="comment">     * Now that the successor has been extricated from the tree, install it</span>
<span class="comment">     * in place of the node that we want deleted.</span>
<span class="comment">     */</span>

    next-&gt;parent = delparent;
    next-&gt;left = <span class="keyword">delete</span>-&gt;left;
    next-&gt;right = <span class="keyword">delete</span>-&gt;right;
    next-&gt;left-&gt;parent = <a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
    next-&gt;right-&gt;parent = <a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
    next-&gt;color = <span class="keyword">delete</span>-&gt;color;
    <span class="keyword">delete</span>-&gt;color = nextcolor;

    <span class="keywordflow">if</span> (delparent-&gt;left == <span class="keyword">delete</span>) {
        delparent-&gt;left = <a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
    } <span class="keywordflow">else</span> {
        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (delparent-&gt;right == <span class="keyword">delete</span>);
        delparent-&gt;right = <a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
    }

    } <span class="keywordflow">else</span> {
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<span class="keyword">delete</span> != nil);
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (delete-&gt;left == nil || delete-&gt;right == nil);

    child = (<span class="keyword">delete</span>-&gt;left != nil) ? delete-&gt;left : delete-&gt;right;

    child-&gt;parent = delparent = delete-&gt;parent;     

    if (<span class="keyword">delete</span> == delparent-&gt;left) {
        delparent-&gt;left = child;    
    } <span class="keywordflow">else</span> {
        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<span class="keyword">delete</span> == delparent-&gt;right);
        delparent-&gt;right = child;
    }
    }

    <span class="keyword">delete</span>-&gt;parent = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    <span class="keyword">delete</span>-&gt;right = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    <span class="keyword">delete</span>-&gt;left = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

    dict-&gt;nodecount--;

    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8c.html#a7af8b0b9796e50e8770a517959b64364">verify_bintree</a>(dict));

    <span class="comment">/* red-black adjustments */</span>

    <span class="keywordflow">if</span> (delete-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>) {
    <a class="code" href="structdnode__t.html">dnode_t</a> *<a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>, *sister;

    <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict)-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;

    <span class="keywordflow">while</span> (child-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>) {
        parent = child-&gt;parent;
        <span class="keywordflow">if</span> (child == parent-&gt;left) {
        sister = parent-&gt;right;
        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (sister != nil);
        <span class="keywordflow">if</span> (sister-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>) {
            sister-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
            parent-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;
            <a class="code" href="dict_8c.html#a6c3000c0249a91cb54c68c2aad08ea03">rotate_left</a>(parent);
            sister = parent-&gt;right;
            <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (sister != nil);
        }
        <span class="keywordflow">if</span> (sister-&gt;left-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>
            &amp;&amp; sister-&gt;right-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>) {
            sister-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;
            child = <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>;
        } <span class="keywordflow">else</span> {
            <span class="keywordflow">if</span> (sister-&gt;right-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>) {
            <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (sister-&gt;left-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>);
            sister-&gt;left-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
            sister-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;
            <a class="code" href="dict_8c.html#affc1c26c10656d2aacf662d7750f61fd">rotate_right</a>(sister);
            sister = parent-&gt;right;
            <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (sister != nil);
            }
            sister-&gt;color = parent-&gt;color;
            sister-&gt;right-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
            parent-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
            <a class="code" href="dict_8c.html#a6c3000c0249a91cb54c68c2aad08ea03">rotate_left</a>(parent);
            <span class="keywordflow">break</span>;
        }
        } <span class="keywordflow">else</span> {    <span class="comment">/* symmetric case: child == child-&gt;parent-&gt;right */</span>
        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (child == parent-&gt;right);
        sister = parent-&gt;left;
        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (sister != nil);
        <span class="keywordflow">if</span> (sister-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>) {
            sister-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
            parent-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;
            <a class="code" href="dict_8c.html#affc1c26c10656d2aacf662d7750f61fd">rotate_right</a>(parent);
            sister = parent-&gt;left;
            <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (sister != nil);
        }
        <span class="keywordflow">if</span> (sister-&gt;right-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>
            &amp;&amp; sister-&gt;left-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>) {
            sister-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;
            child = <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>;
        } <span class="keywordflow">else</span> {
            <span class="keywordflow">if</span> (sister-&gt;left-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>) {
            <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (sister-&gt;right-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>);
            sister-&gt;right-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
            sister-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;
            <a class="code" href="dict_8c.html#a6c3000c0249a91cb54c68c2aad08ea03">rotate_left</a>(sister);
            sister = parent-&gt;left;
            <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (sister != nil);
            }
            sister-&gt;color = parent-&gt;color;
            sister-&gt;left-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
            parent-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
            <a class="code" href="dict_8c.html#affc1c26c10656d2aacf662d7750f61fd">rotate_right</a>(parent);
            <span class="keywordflow">break</span>;
        }
        }
    }

    child-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
    <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict)-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
    }

    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8c.html#a8fd61b9b13f52b4d1e0d34a8f2178f13">dict_verify</a>(dict));

    <span class="keywordflow">return</span> <span class="keyword">delete</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad820577e4fba81f761665f16356823ab"></a><!-- doxytag: member="dict.c::dict_delete_free" ref="ad820577e4fba81f761665f16356823ab" args="(dict_t *dict, dnode_t *node)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_delete_free </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>node</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00826">826</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="dict_8c.html#ad51f28cd1829e1fd66caf58f553d794e">dict_delete</a>(dict, node);
    dict-&gt;freenode(node, dict-&gt;context);
}
</pre></div>
</div>
</div>
<a class="anchor" id="afa278bdf2a5b96347df1013d7c61c60c"></a><!-- doxytag: member="dict.c::dict_destroy" ref="afa278bdf2a5b96347df1013d7c61c60c" args="(dict_t *dict)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00287">287</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8h.html#a71f54a3dc27888df31631db89e956195">dict_isempty</a>(dict));
    free(dict);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a2b439ffb63f9b3089d0306ec3b26672f"></a><!-- doxytag: member="dict.c::dict_first" ref="a2b439ffb63f9b3089d0306ec3b26672f" args="(dict_t *dict)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdnode__t.html">dnode_t</a>* dict_first </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00837">837</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *nil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict), *root = <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict), *<a class="code" href="dict_8c.html#a428f8207615465afdfcf1d31547ffef3">left</a>;

    <span class="keywordflow">if</span> (root != nil)
    <span class="keywordflow">while</span> ((<a class="code" href="dict_8c.html#a428f8207615465afdfcf1d31547ffef3">left</a> = root-&gt;left) != nil)
        root = <a class="code" href="dict_8c.html#a428f8207615465afdfcf1d31547ffef3">left</a>;

    <span class="keywordflow">return</span> (root == nil) ? <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> : root;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab1d4e786dee93b4dc601d2f339ff81fd"></a><!-- doxytag: member="dict.c::dict_free" ref="ab1d4e786dee93b4dc601d2f339ff81fd" args="(dict_t *dict)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_free </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00311">311</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
<span class="preprocessor">#ifdef KAZLIB_OBSOLESCENT_DEBUG</span>
<span class="preprocessor"></span>    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<span class="stringliteral">&quot;call to obsolescent function dict_free()&quot;</span> &amp;&amp; 0);
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>    <a class="code" href="dict_8c.html#abbb87db71ff5da8f7881d347dba70e59">dict_free_nodes</a>(dict);
}
</pre></div>
</div>
</div>
<a class="anchor" id="abbb87db71ff5da8f7881d347dba70e59"></a><!-- doxytag: member="dict.c::dict_free_nodes" ref="abbb87db71ff5da8f7881d347dba70e59" args="(dict_t *dict)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_free_nodes </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00298">298</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *nil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict), *root = <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict);
    <a class="code" href="dict_8c.html#a0fd13b499b544b23aa94217bbf9d1189">free_nodes</a>(dict, root, nil);
    dict-&gt;nodecount = 0;
    dict-&gt;nilnode.left = &amp;dict-&gt;nilnode;
    dict-&gt;nilnode.right = &amp;dict-&gt;nilnode;
}
</pre></div>
</div>
</div>
<a class="anchor" id="adce7f1ed114712b1ec095cfa86988053"></a><!-- doxytag: member="dict.c::dict_init" ref="adce7f1ed114712b1ec095cfa86988053" args="(dict_t *dict, dictcount_t maxcount, dict_comp_t comp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdict__t.html">dict_t</a>* dict_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="dict_8h.html#a0ccdd0435aed173cb756dbb8f6ed27c5">dictcount_t</a>&#160;</td>
          <td class="paramname"><em>maxcount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="dict_8h.html#a92a0ce54764499eee8e3584a7b8795d9">dict_comp_t</a>&#160;</td>
          <td class="paramname"><em>comp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00323">323</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    dict-&gt;compare = comp;
    dict-&gt;allocnode = <a class="code" href="dict_8c.html#a0d63f8b9a1a39f8b3edfef544497265b">dnode_alloc</a>;
    dict-&gt;freenode = <a class="code" href="dict_8c.html#a0816722a1a33c537793c38eaac3233cb">dnode_free</a>;
    dict-&gt;context = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    dict-&gt;nodecount = 0;
    dict-&gt;maxcount = <a class="code" href="dict_8c.html#aab843860735df831cb06670bfdf0f3c3">maxcount</a>;
    dict-&gt;nilnode.left = &amp;dict-&gt;nilnode;
    dict-&gt;nilnode.right = &amp;dict-&gt;nilnode;
    dict-&gt;nilnode.parent = &amp;dict-&gt;nilnode;
    dict-&gt;nilnode.color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
    dict-&gt;dupes = 0;
    <span class="keywordflow">return</span> dict;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6ceb0e0e60d65f9de7645223a34e499e"></a><!-- doxytag: member="dict.c::dict_init_like" ref="a6ceb0e0e60d65f9de7645223a34e499e" args="(dict_t *dict, const dict_t *template)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_init_like </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>template</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00343">343</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    dict-&gt;compare = <span class="keyword">template</span>-&gt;compare;
    dict-&gt;allocnode = <span class="keyword">template</span>-&gt;allocnode;
    dict-&gt;freenode = <span class="keyword">template</span>-&gt;freenode;
    dict-&gt;context = <span class="keyword">template</span>-&gt;context;
    dict-&gt;nodecount = 0;
    dict-&gt;maxcount = <span class="keyword">template</span>-&gt;maxcount;
    dict-&gt;nilnode.left = &amp;dict-&gt;nilnode;
    dict-&gt;nilnode.right = &amp;dict-&gt;nilnode;
    dict-&gt;nilnode.parent = &amp;dict-&gt;nilnode;
    dict-&gt;nilnode.color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
    dict-&gt;dupes = <span class="keyword">template</span>-&gt;dupes;

    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8c.html#a39327af6a2025edf54bd553dfaca6eed">dict_similar</a>(dict, <span class="keyword">template</span>));
}
</pre></div>
</div>
</div>
<a class="anchor" id="a761d921fc86ec6bfbb8f77f15a48662f"></a><!-- doxytag: member="dict.c::dict_insert" ref="a761d921fc86ec6bfbb8f77f15a48662f" args="(dict_t *dict, dnode_t *node, const void *key)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>node</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>key</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00543">543</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *where = <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict), *nil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict);
    <a class="code" href="structdnode__t.html">dnode_t</a> *<a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a> = nil, *uncle, *grandpa;
    <span class="keywordtype">int</span> result = -1;

    node-&gt;key = <a class="code" href="dict_8c.html#ae57736c8a0ddeb64dc394712624d8209">key</a>;

    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (!<a class="code" href="dict_8h.html#a8ee82117d61f5699b4a4bcd8dbc1623b">dict_isfull</a>(dict));
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (!<a class="code" href="dict_8c.html#a41876a53021479360b7fcebf009c1bbd">dict_contains</a>(dict, node));
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (!<a class="code" href="dict_8c.html#ae38201fa011e3412fd8ae3f6e935c5a2">dnode_is_in_a_dict</a>(node));

    <span class="comment">/* basic binary tree insert */</span>

    <span class="keywordflow">while</span> (where != nil) {
    parent = where;
    result = dict-&gt;compare(<a class="code" href="structkey.html">key</a>, where-&gt;key);
    <span class="comment">/* trap attempts at duplicate key insertion unless it&#39;s explicitly allowed */</span>
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (dict-&gt;dupes || result != 0);
    <span class="keywordflow">if</span> (result &lt; 0)
        where = where-&gt;left;
    <span class="keywordflow">else</span>
        where = where-&gt;right;
    }

    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (where == nil);

    <span class="keywordflow">if</span> (result &lt; 0)
    parent-&gt;left = node;
    <span class="keywordflow">else</span>
    parent-&gt;right = node;

    node-&gt;parent = <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>;
    node-&gt;left = nil;
    node-&gt;right = nil;

    dict-&gt;nodecount++;

    <span class="comment">/* red black adjustments */</span>

    node-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;

    <span class="keywordflow">while</span> (parent-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>) {
    grandpa = parent-&gt;parent;
    <span class="keywordflow">if</span> (parent == grandpa-&gt;left) {
        uncle = grandpa-&gt;right;
        <span class="keywordflow">if</span> (uncle-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>) {    <span class="comment">/* red parent, red uncle */</span>
        parent-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
        uncle-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
        grandpa-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;
        node = grandpa;
        parent = grandpa-&gt;parent;
        } <span class="keywordflow">else</span> {                <span class="comment">/* red parent, black uncle */</span>
            <span class="keywordflow">if</span> (node == parent-&gt;right) {
            <a class="code" href="dict_8c.html#a6c3000c0249a91cb54c68c2aad08ea03">rotate_left</a>(parent);
            parent = node;
            <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (grandpa == parent-&gt;parent);
            <span class="comment">/* rotation between parent and child preserves grandpa */</span>
        }
        parent-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
        grandpa-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;
        <a class="code" href="dict_8c.html#affc1c26c10656d2aacf662d7750f61fd">rotate_right</a>(grandpa);
        <span class="keywordflow">break</span>;
        }
    } <span class="keywordflow">else</span> {    <span class="comment">/* symmetric cases: parent == parent-&gt;parent-&gt;right */</span>
        uncle = grandpa-&gt;left;
        <span class="keywordflow">if</span> (uncle-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>) {
        parent-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
        uncle-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
        grandpa-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;
        node = grandpa;
        parent = grandpa-&gt;parent;
        } <span class="keywordflow">else</span> {
            <span class="keywordflow">if</span> (node == parent-&gt;left) {
            <a class="code" href="dict_8c.html#affc1c26c10656d2aacf662d7750f61fd">rotate_right</a>(parent);
            parent = node;
            <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (grandpa == parent-&gt;parent);
        }
        parent-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
        grandpa-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>;
        <a class="code" href="dict_8c.html#a6c3000c0249a91cb54c68c2aad08ea03">rotate_left</a>(grandpa);
        <span class="keywordflow">break</span>;
        }
    }
    }

    <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict)-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;

    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8c.html#a8fd61b9b13f52b4d1e0d34a8f2178f13">dict_verify</a>(dict));
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab02d8ba14f3b003f843d2bb88e7a1673"></a><!-- doxytag: member="dict.c::dict_isempty" ref="ab02d8ba14f3b003f843d2bb88e7a1673" args="(dict_t *dict)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int dict_isempty </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00935">935</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> dict-&gt;nodecount == 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a14df3da32672d00f8a781d6a7d8d174a"></a><!-- doxytag: member="dict.c::dict_isfull" ref="a14df3da32672d00f8a781d6a7d8d174a" args="(dict_t *dict)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int dict_isfull </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00940">940</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> dict-&gt;nodecount == dict-&gt;maxcount;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4d069737fa8ee7fb7b8d775df86e9492"></a><!-- doxytag: member="dict.c::dict_last" ref="a4d069737fa8ee7fb7b8d775df86e9492" args="(dict_t *dict)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdnode__t.html">dnode_t</a>* dict_last </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00853">853</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *nil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict), *root = <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict), *<a class="code" href="dict_8c.html#ae545bf658b2c876abbbae55a7d12875f">right</a>;

    <span class="keywordflow">if</span> (root != nil)
    <span class="keywordflow">while</span> ((<a class="code" href="dict_8c.html#ae545bf658b2c876abbbae55a7d12875f">right</a> = root-&gt;right) != nil)
        root = <a class="code" href="dict_8c.html#ae545bf658b2c876abbbae55a7d12875f">right</a>;

    <span class="keywordflow">return</span> (root == nil) ? <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> : root;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a28bbce4e85c8b66bab512934c30da705"></a><!-- doxytag: member="dict.c::dict_load_begin" ref="a28bbce4e85c8b66bab512934c30da705" args="(dict_load_t *load, dict_t *dict)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_load_begin </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__load__t.html">dict_load_t</a> *&#160;</td>
          <td class="paramname"><em>load</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l01028">1028</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8h.html#a71f54a3dc27888df31631db89e956195">dict_isempty</a>(dict));
    <a class="code" href="dict_8c.html#a9cd0da20fb7f904098a94425e689aea6">load_begin_internal</a>(load, dict);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5c70e94507e52999ef2c8a2ffce9a917"></a><!-- doxytag: member="dict.c::dict_load_end" ref="a5c70e94507e52999ef2c8a2ffce9a917" args="(dict_load_t *load)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_load_end </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__load__t.html">dict_load_t</a> *&#160;</td>
          <td class="paramname"><em>load</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l01058">1058</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdict__t.html">dict_t</a> *dict = load-&gt;dictptr;
    <a class="code" href="structdnode__t.html">dnode_t</a> *tree[<a class="code" href="dict_8c.html#ab7dc78ce3c539dfab8f0e4e5506666c2">DICT_DEPTH_MAX</a>] = { 0 };
    <a class="code" href="structdnode__t.html">dnode_t</a> *curr, *dictnil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict), *loadnil = &amp;load-&gt;nilnode, *<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
    <a class="code" href="structdnode__t.html">dnode_t</a> *complete = 0;
    <a class="code" href="dict_8h.html#a0ccdd0435aed173cb756dbb8f6ed27c5">dictcount_t</a> fullcount = <a class="code" href="dict_8h.html#a7cc0c7f4164b72cfc0c8e543d6fd3951">DICTCOUNT_T_MAX</a>, <a class="code" href="dict_8c.html#a6c4460881d4f0e0099ca771141c157d6">nodecount</a> = dict-&gt;nodecount;
    <a class="code" href="dict_8h.html#a0ccdd0435aed173cb756dbb8f6ed27c5">dictcount_t</a> botrowcount;
    <span class="keywordtype">unsigned</span> baselevel = 0, level = 0, <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a> == 0 &amp;&amp; <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a> == 1);

    <span class="keywordflow">while</span> (fullcount &gt;= nodecount &amp;&amp; fullcount)
    fullcount &gt;&gt;= 1;

    botrowcount = nodecount - fullcount;

    <span class="keywordflow">for</span> (curr = loadnil-&gt;left; curr != loadnil; curr = <a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>) {
    <a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> = curr-&gt;left;

    <span class="keywordflow">if</span> (complete == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; botrowcount-- == 0) {
        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (baselevel == 0);
        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (level == 0);
        baselevel = level = 1;
        complete = tree[0];

        <span class="keywordflow">if</span> (complete != 0) {
        tree[0] = 0;
        complete-&gt;right = dictnil;
        <span class="keywordflow">while</span> (tree[level] != 0) {
            tree[level]-&gt;right = complete;
            complete-&gt;parent = tree[level];
            complete = tree[level];
            tree[level++] = 0;
        }
        }
    }

    <span class="keywordflow">if</span> (complete == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) {
        curr-&gt;left = dictnil;
        curr-&gt;right = dictnil;
        curr-&gt;color = level % 2;
        complete = curr;

        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (level == baselevel);
        <span class="keywordflow">while</span> (tree[level] != 0) {
        tree[level]-&gt;right = complete;
        complete-&gt;parent = tree[level];
        complete = tree[level];
        tree[level++] = 0;
        }
    } <span class="keywordflow">else</span> {
        curr-&gt;left = complete;
        curr-&gt;color = (level + 1) % 2;
        complete-&gt;parent = curr;
        tree[level] = curr;
        complete = 0;
        level = baselevel;
    }
    }

    <span class="keywordflow">if</span> (complete == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    complete = dictnil;

    <span class="keywordflow">for</span> (<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a> = 0; <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a> &lt; <a class="code" href="dict_8c.html#ab7dc78ce3c539dfab8f0e4e5506666c2">DICT_DEPTH_MAX</a>; <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>++) {
    <span class="keywordflow">if</span> (tree[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] != 0) {
        tree[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>]-&gt;right = complete;
        complete-&gt;parent = tree[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>];
        complete = tree[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>];
    }
    }

    dictnil-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
    dictnil-&gt;right = dictnil;
    complete-&gt;parent = dictnil;
    complete-&gt;color = <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>;
    <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict) = complete;

    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8c.html#a8fd61b9b13f52b4d1e0d34a8f2178f13">dict_verify</a>(dict));
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3721d6ba3ea6a36f2c8b49b4e72fe8f7"></a><!-- doxytag: member="dict.c::dict_load_next" ref="a3721d6ba3ea6a36f2c8b49b4e72fe8f7" args="(dict_load_t *load, dnode_t *newnode, const void *key)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_load_next </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__load__t.html">dict_load_t</a> *&#160;</td>
          <td class="paramname"><em>load</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>newnode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>key</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l01034">1034</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdict__t.html">dict_t</a> *dict = load-&gt;dictptr;
    <a class="code" href="structdnode__t.html">dnode_t</a> *nil = &amp;load-&gt;nilnode;
   
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (!<a class="code" href="dict_8c.html#ae38201fa011e3412fd8ae3f6e935c5a2">dnode_is_in_a_dict</a>(newnode));
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (dict-&gt;nodecount &lt; dict-&gt;maxcount);

<span class="preprocessor">    #ifndef NDEBUG</span>
<span class="preprocessor"></span>    <span class="keywordflow">if</span> (dict-&gt;nodecount &gt; 0) {
    <span class="keywordflow">if</span> (dict-&gt;dupes)
        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (dict-&gt;compare(nil-&gt;left-&gt;key, <a class="code" href="structkey.html">key</a>) &lt;= 0);
    <span class="keywordflow">else</span>
        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (dict-&gt;compare(nil-&gt;left-&gt;key, <a class="code" href="structkey.html">key</a>) &lt; 0);
    }
<span class="preprocessor">    #endif</span>
<span class="preprocessor"></span>
    newnode-&gt;key = <a class="code" href="dict_8c.html#ae57736c8a0ddeb64dc394712624d8209">key</a>;
    nil-&gt;right-&gt;left = newnode;
    nil-&gt;right = newnode;
    newnode-&gt;left = nil;
    dict-&gt;nodecount++;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9b4c0968674a4ff436bb8180aa56e522"></a><!-- doxytag: member="dict.c::dict_lookup" ref="a9b4c0968674a4ff436bb8180aa56e522" args="(dict_t *dict, const void *key)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdnode__t.html">dnode_t</a>* dict_lookup </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>key</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00438">438</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *root = <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict);
    <a class="code" href="structdnode__t.html">dnode_t</a> *nil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict);
    <a class="code" href="structdnode__t.html">dnode_t</a> *saved;
    <span class="keywordtype">int</span> result;

    <span class="comment">/* simple binary search adapted for trees that contain duplicate keys */</span>

    <span class="keywordflow">while</span> (root != nil) {
    result = dict-&gt;compare(<a class="code" href="structkey.html">key</a>, root-&gt;key);
    <span class="keywordflow">if</span> (result &lt; 0)
        root = root-&gt;left;
    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (result &gt; 0)
        root = root-&gt;right;
    <span class="keywordflow">else</span> {
        <span class="keywordflow">if</span> (!dict-&gt;dupes) { <span class="comment">/* no duplicates, return match      */</span>
        <span class="keywordflow">return</span> root;
        } <span class="keywordflow">else</span> {        <span class="comment">/* could be dupes, find leftmost one    */</span>
        <span class="keywordflow">do</span> {
            saved = root;
            root = root-&gt;left;
            <span class="keywordflow">while</span> (root != nil &amp;&amp; dict-&gt;compare(<a class="code" href="structkey.html">key</a>, root-&gt;key))
            root = root-&gt;right;
        } <span class="keywordflow">while</span> (root != nil);
        <span class="keywordflow">return</span> saved;
        }
    }
    }

    <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aaee9b7ed8b80f9f2dfab916a22c173ee"></a><!-- doxytag: member="dict.c::dict_lower_bound" ref="aaee9b7ed8b80f9f2dfab916a22c173ee" args="(dict_t *dict, const void *key)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdnode__t.html">dnode_t</a>* dict_lower_bound </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>key</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00476">476</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *root = <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict);
    <a class="code" href="structdnode__t.html">dnode_t</a> *nil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict);
    <a class="code" href="structdnode__t.html">dnode_t</a> *tentative = 0;

    <span class="keywordflow">while</span> (root != nil) {
    <span class="keywordtype">int</span> result = dict-&gt;compare(<a class="code" href="structkey.html">key</a>, root-&gt;key);

    <span class="keywordflow">if</span> (result &gt; 0) {
        root = root-&gt;right;
    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (result &lt; 0) {
        tentative = root;
        root = root-&gt;left;
    } <span class="keywordflow">else</span> {
        <span class="keywordflow">if</span> (!dict-&gt;dupes) {
            <span class="keywordflow">return</span> root;
        } <span class="keywordflow">else</span> {
        tentative = root;
        root = root-&gt;left;
        }
    } 
    }
    
    <span class="keywordflow">return</span> tentative;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab46a82871283a72d456c76151cd46b96"></a><!-- doxytag: member="dict.c::dict_merge" ref="ab46a82871283a72d456c76151cd46b96" args="(dict_t *dest, dict_t *source)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_merge </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>source</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l01139">1139</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdict__load__t.html">dict_load_t</a> load;
    <a class="code" href="structdnode__t.html">dnode_t</a> *leftnode = <a class="code" href="dict_8c.html#a2b439ffb63f9b3089d0306ec3b26672f">dict_first</a>(dest), *rightnode = <a class="code" href="dict_8c.html#a2b439ffb63f9b3089d0306ec3b26672f">dict_first</a>(source);

    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8c.html#a39327af6a2025edf54bd553dfaca6eed">dict_similar</a>(dest, source));    

    <span class="keywordflow">if</span> (source == dest)
    <span class="keywordflow">return</span>;

    dest-&gt;nodecount = 0;
    <a class="code" href="dict_8c.html#a9cd0da20fb7f904098a94425e689aea6">load_begin_internal</a>(&amp;load, dest);

    <span class="keywordflow">for</span> (;;) {
    <span class="keywordflow">if</span> (leftnode != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; rightnode != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) {
        <span class="keywordflow">if</span> (dest-&gt;compare(leftnode-&gt;key, rightnode-&gt;key) &lt; 0)
        <span class="keywordflow">goto</span> copyleft;
        <span class="keywordflow">else</span>
        <span class="keywordflow">goto</span> copyright;
    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (leftnode != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) {
        <span class="keywordflow">goto</span> copyleft;
    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (rightnode != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) {
        <span class="keywordflow">goto</span> copyright;
    } <span class="keywordflow">else</span> {
        <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (leftnode == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; rightnode == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
        <span class="keywordflow">break</span>;
    }

    copyleft:
    {
        <a class="code" href="structdnode__t.html">dnode_t</a> *<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a>(dest, leftnode);
<span class="preprocessor">        #ifndef NDEBUG</span>
<span class="preprocessor"></span>        leftnode-&gt;left = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;  <span class="comment">/* suppress assertion in dict_load_next */</span>
<span class="preprocessor">        #endif</span>
<span class="preprocessor"></span>        <a class="code" href="dict_8c.html#a3721d6ba3ea6a36f2c8b49b4e72fe8f7">dict_load_next</a>(&amp;load, leftnode, leftnode-&gt;key);
        leftnode = <a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
        <span class="keywordflow">continue</span>;
    }
    
    copyright:
    {
        <a class="code" href="structdnode__t.html">dnode_t</a> *<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a>(source, rightnode);
<span class="preprocessor">        #ifndef NDEBUG</span>
<span class="preprocessor"></span>        rightnode-&gt;left = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<span class="preprocessor">        #endif</span>
<span class="preprocessor"></span>        <a class="code" href="dict_8c.html#a3721d6ba3ea6a36f2c8b49b4e72fe8f7">dict_load_next</a>(&amp;load, rightnode, rightnode-&gt;key);
        rightnode = <a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
        <span class="keywordflow">continue</span>;
    }
    }

    <a class="code" href="dict_8c.html#acc7ef43b7d72d6c2818274acc8bbf494">dict_clear</a>(source);
    <a class="code" href="dict_8c.html#a5c70e94507e52999ef2c8a2ffce9a917">dict_load_end</a>(&amp;load);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a1f32888c49577ec2b2dc9d16922bf487"></a><!-- doxytag: member="dict.c::dict_next" ref="a1f32888c49577ec2b2dc9d16922bf487" args="(dict_t *dict, dnode_t *curr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdnode__t.html">dnode_t</a>* dict_next </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>curr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00871">871</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *nil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict), *<a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>, *<a class="code" href="dict_8c.html#a428f8207615465afdfcf1d31547ffef3">left</a>;

    <span class="keywordflow">if</span> (curr-&gt;right != nil) {
    curr = curr-&gt;right;
    <span class="keywordflow">while</span> ((left = curr-&gt;left) != nil)
        curr = <a class="code" href="dict_8c.html#a428f8207615465afdfcf1d31547ffef3">left</a>;
    <span class="keywordflow">return</span> curr;
    }

    <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a> = curr-&gt;parent;

    <span class="keywordflow">while</span> (<a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a> != nil &amp;&amp; curr == <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>-&gt;right) {
    curr = <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>;
    <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a> = curr-&gt;parent;
    }

    <span class="keywordflow">return</span> (<a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a> == nil) ? <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> : <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a2404cd70f965a01f782b3bf667924a92"></a><!-- doxytag: member="dict.c::dict_prev" ref="a2404cd70f965a01f782b3bf667924a92" args="(dict_t *dict, dnode_t *curr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdnode__t.html">dnode_t</a>* dict_prev </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>curr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00897">897</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *nil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict), *<a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>, *<a class="code" href="dict_8c.html#ae545bf658b2c876abbbae55a7d12875f">right</a>;

    <span class="keywordflow">if</span> (curr-&gt;left != nil) {
    curr = curr-&gt;left;
    <span class="keywordflow">while</span> ((right = curr-&gt;right) != nil)
        curr = <a class="code" href="dict_8c.html#ae545bf658b2c876abbbae55a7d12875f">right</a>;
    <span class="keywordflow">return</span> curr;
    }

    <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a> = curr-&gt;parent;

    <span class="keywordflow">while</span> (<a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a> != nil &amp;&amp; curr == <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>-&gt;left) {
    curr = <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>;
    <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a> = curr-&gt;parent;
    }

    <span class="keywordflow">return</span> (<a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a> == nil) ? <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> : <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a2b3c224bd5d6a4a8c74c09fa14ca0875"></a><!-- doxytag: member="dict.c::dict_process" ref="a2b3c224bd5d6a4a8c74c09fa14ca0875" args="(dict_t *dict, void *context, dnode_process_t function)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_process </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="dict_8h.html#af6c238eee1552793065cbec20b1aafcb">dnode_process_t</a>&#160;</td>
          <td class="paramname"><em>function</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l01007">1007</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *node = <a class="code" href="dict_8c.html#a2b439ffb63f9b3089d0306ec3b26672f">dict_first</a>(dict), *<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;

    <span class="keywordflow">while</span> (node != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) {
    <span class="comment">/* check for callback function deleting */</span>
    <span class="comment">/* the next node from under us      */</span>
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8c.html#a41876a53021479360b7fcebf009c1bbd">dict_contains</a>(dict, node));
    <a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a>(dict, node);
    <span class="keyword">function</span>(dict, node, <a class="code" href="dict_8c.html#aad81e1d3f9fe24703a4d3c856a75cda6">context</a>);
    node = <a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5c2f075814bbc9660b670547a991ac33"></a><!-- doxytag: member="dict.c::dict_set_allocator" ref="a5c2f075814bbc9660b670547a991ac33" args="(dict_t *dict, dnode_alloc_t al, dnode_free_t fr, void *context)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dict_set_allocator </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="dict_8h.html#a9622bc12328ca0820a2b75ddd368e742">dnode_alloc_t</a>&#160;</td>
          <td class="paramname"><em>al</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="dict_8h.html#aab7503760ea3aa9d811d19c8acd425c8">dnode_free_t</a>&#160;</td>
          <td class="paramname"><em>fr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>context</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00271">271</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="dict_8h.html#a392c768130a1c7ed5a6c2f299cd0d2e8">dict_count</a>(dict) == 0);
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> ((<a class="code" href="spgrid_8c.html#a7c4593313d1839d57c28594a69357bab">al</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; fr == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) || (<a class="code" href="spgrid_8c.html#a7c4593313d1839d57c28594a69357bab">al</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; fr != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>));

    dict-&gt;allocnode = <a class="code" href="spgrid_8c.html#a7c4593313d1839d57c28594a69357bab">al</a> ? <a class="code" href="spgrid_8c.html#a7c4593313d1839d57c28594a69357bab">al</a> : <a class="code" href="dict_8c.html#a0d63f8b9a1a39f8b3edfef544497265b">dnode_alloc</a>;
    dict-&gt;freenode = fr ? fr : <a class="code" href="dict_8c.html#a0816722a1a33c537793c38eaac3233cb">dnode_free</a>;
    dict-&gt;context = <a class="code" href="dict_8c.html#aad81e1d3f9fe24703a4d3c856a75cda6">context</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a39327af6a2025edf54bd553dfaca6eed"></a><!-- doxytag: member="dict.c::dict_similar" ref="a39327af6a2025edf54bd553dfaca6eed" args="(const dict_t *left, const dict_t *right)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int dict_similar </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>right</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00411">411</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">if</span> (left-&gt;compare != right-&gt;compare)
    <span class="keywordflow">return</span> 0;

    <span class="keywordflow">if</span> (left-&gt;allocnode != right-&gt;allocnode)
    <span class="keywordflow">return</span> 0;

    <span class="keywordflow">if</span> (left-&gt;freenode != right-&gt;freenode)
    <span class="keywordflow">return</span> 0;

    <span class="keywordflow">if</span> (left-&gt;context != right-&gt;context)
    <span class="keywordflow">return</span> 0;

    <span class="keywordflow">if</span> (left-&gt;dupes != right-&gt;dupes)
    <span class="keywordflow">return</span> 0;

    <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6d6f2d4cc66e3859fe47d39b82cfd7ee"></a><!-- doxytag: member="dict.c::dict_upper_bound" ref="a6d6f2d4cc66e3859fe47d39b82cfd7ee" args="(dict_t *dict, const void *key)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdnode__t.html">dnode_t</a>* dict_upper_bound </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>key</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00508">508</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *root = <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict);
    <a class="code" href="structdnode__t.html">dnode_t</a> *nil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict);
    <a class="code" href="structdnode__t.html">dnode_t</a> *tentative = 0;

    <span class="keywordflow">while</span> (root != nil) {
    <span class="keywordtype">int</span> result = dict-&gt;compare(<a class="code" href="structkey.html">key</a>, root-&gt;key);

    <span class="keywordflow">if</span> (result &lt; 0) {
        root = root-&gt;left;
    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (result &gt; 0) {
        tentative = root;
        root = root-&gt;right;
    } <span class="keywordflow">else</span> {
        <span class="keywordflow">if</span> (!dict-&gt;dupes) {
            <span class="keywordflow">return</span> root;
        } <span class="keywordflow">else</span> {
        tentative = root;
        root = root-&gt;right;
        }
    } 
    }
    
    <span class="keywordflow">return</span> tentative;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a8fd61b9b13f52b4d1e0d34a8f2178f13"></a><!-- doxytag: member="dict.c::dict_verify" ref="a8fd61b9b13f52b4d1e0d34a8f2178f13" args="(dict_t *dict)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int dict_verify </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00381">381</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *nil = <a class="code" href="dict_8c.html#a5a5c9300878d7ff68c174a9446d3ec10">dict_nil</a>(dict), *root = <a class="code" href="dict_8c.html#aa2e1d6d03a1ee5a926a769ece7075f6a">dict_root</a>(dict);

    <span class="comment">/* check that the sentinel node and root node are black */</span>
    <span class="keywordflow">if</span> (root-&gt;color != <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>)
    <span class="keywordflow">return</span> 0;
    <span class="keywordflow">if</span> (nil-&gt;color != <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>)
    <span class="keywordflow">return</span> 0;
    <span class="keywordflow">if</span> (nil-&gt;right != nil)
    <span class="keywordflow">return</span> 0;
    <span class="comment">/* nil-&gt;left is the root node; check that its parent pointer is nil */</span>
    <span class="keywordflow">if</span> (nil-&gt;left-&gt;parent != nil)
    <span class="keywordflow">return</span> 0;
    <span class="comment">/* perform a weak test that the tree is a binary search tree */</span>
    <span class="keywordflow">if</span> (!<a class="code" href="dict_8c.html#a7af8b0b9796e50e8770a517959b64364">verify_bintree</a>(dict))
    <span class="keywordflow">return</span> 0;
    <span class="comment">/* verify that the tree is a red-black tree */</span>
    <span class="keywordflow">if</span> (!<a class="code" href="dict_8c.html#a8b56a42ae2278cc21494e098f4e7a541">verify_redblack</a>(nil, root))
    <span class="keywordflow">return</span> 0;
    <span class="keywordflow">if</span> (<a class="code" href="dict_8c.html#aa85e6dc41f8a5804b4a1c80dc5a7666d">verify_node_count</a>(nil, root) != <a class="code" href="dict_8h.html#a392c768130a1c7ed5a6c2f299cd0d2e8">dict_count</a>(dict))
    <span class="keywordflow">return</span> 0;
    <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a0d63f8b9a1a39f8b3edfef544497265b"></a><!-- doxytag: member="dict.c::dnode_alloc" ref="a0d63f8b9a1a39f8b3edfef544497265b" args="(void *context)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="structdnode__t.html">dnode_t</a> * dnode_alloc </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>context</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00950">950</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> <a class="code" href="regex_8c.html#ab7e36af3707843f77cc5b4e831c2fa6d">malloc</a>(<span class="keyword">sizeof</span> *<a class="code" href="dict_8c.html#a0d63f8b9a1a39f8b3edfef544497265b">dnode_alloc</a>(<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>));
}
</pre></div>
</div>
</div>
<a class="anchor" id="a26d3d46b0aafb0103a6e4f169475f4c1"></a><!-- doxytag: member="dict.c::dnode_create" ref="a26d3d46b0aafb0103a6e4f169475f4c1" args="(void *data)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdnode__t.html">dnode_t</a>* dnode_create </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00960">960</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *<span class="keyword">new</span> = <a class="code" href="regex_8c.html#ab7e36af3707843f77cc5b4e831c2fa6d">malloc</a>(<span class="keyword">sizeof</span> *<span class="keyword">new</span>);
    <span class="keywordflow">if</span> (<span class="keyword">new</span>) {
    <span class="keyword">new</span>-&gt;data = <a class="code" href="dict_8c.html#a43a278d13284fb3412e9eee1db1d967e">data</a>;
    <span class="keyword">new</span>-&gt;parent = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    <span class="keyword">new</span>-&gt;left = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    <span class="keyword">new</span>-&gt;right = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }
    <span class="keywordflow">return</span> <span class="keyword">new</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae494e63c2ce90dee35c2abdd940ec8cf"></a><!-- doxytag: member="dict.c::dnode_destroy" ref="ae494e63c2ce90dee35c2abdd940ec8cf" args="(dnode_t *dnode)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dnode_destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>dnode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00981">981</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (!<a class="code" href="dict_8c.html#ae38201fa011e3412fd8ae3f6e935c5a2">dnode_is_in_a_dict</a>(dnode));
    free(dnode);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a0816722a1a33c537793c38eaac3233cb"></a><!-- doxytag: member="dict.c::dnode_free" ref="a0816722a1a33c537793c38eaac3233cb" args="(dnode_t *node, void *context)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void dnode_free </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>node</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>context</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00955">955</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    free(node);
}
</pre></div>
</div>
</div>
<a class="anchor" id="adcf7e356887e56df2505e28e9f8e0721"></a><!-- doxytag: member="dict.c::dnode_get" ref="adcf7e356887e56df2505e28e9f8e0721" args="(dnode_t *dnode)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* dnode_get </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>dnode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00987">987</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> dnode-&gt;data;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a892d1fefb0a9ed70338744794ed351f1"></a><!-- doxytag: member="dict.c::dnode_getkey" ref="a892d1fefb0a9ed70338744794ed351f1" args="(dnode_t *dnode)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const void* dnode_getkey </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>dnode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00992">992</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> dnode-&gt;key;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a7d2886945deceaa6b594007adc771ec0"></a><!-- doxytag: member="dict.c::dnode_init" ref="a7d2886945deceaa6b594007adc771ec0" args="(dnode_t *dnode, void *data)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdnode__t.html">dnode_t</a>* dnode_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>dnode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00972">972</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    dnode-&gt;data = <a class="code" href="dict_8c.html#a43a278d13284fb3412e9eee1db1d967e">data</a>;
    dnode-&gt;parent = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    dnode-&gt;left = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    dnode-&gt;right = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    <span class="keywordflow">return</span> dnode;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae38201fa011e3412fd8ae3f6e935c5a2"></a><!-- doxytag: member="dict.c::dnode_is_in_a_dict" ref="ae38201fa011e3412fd8ae3f6e935c5a2" args="(dnode_t *dnode)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int dnode_is_in_a_dict </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>dnode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l01002">1002</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">return</span> (dnode-&gt;parent &amp;&amp; dnode-&gt;left &amp;&amp; dnode-&gt;right);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a627a1a8809684a0470c947b7379ec920"></a><!-- doxytag: member="dict.c::dnode_put" ref="a627a1a8809684a0470c947b7379ec920" args="(dnode_t *dnode, void *data)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dnode_put </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>dnode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00997">997</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    dnode-&gt;data = <a class="code" href="dict_8c.html#a43a278d13284fb3412e9eee1db1d967e">data</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a0fd13b499b544b23aa94217bbf9d1189"></a><!-- doxytag: member="dict.c::free_nodes" ref="a0fd13b499b544b23aa94217bbf9d1189" args="(dict_t *dict, dnode_t *node, dnode_t *nil)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void free_nodes </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>node</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>nil</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00131">131</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">if</span> (node == nil)
    <span class="keywordflow">return</span>;
    <a class="code" href="dict_8c.html#a0fd13b499b544b23aa94217bbf9d1189">free_nodes</a>(dict, node-&gt;left, nil);
    <a class="code" href="dict_8c.html#a0fd13b499b544b23aa94217bbf9d1189">free_nodes</a>(dict, node-&gt;right, nil);
    dict-&gt;freenode(node, dict-&gt;context);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9cd0da20fb7f904098a94425e689aea6"></a><!-- doxytag: member="dict.c::load_begin_internal" ref="a9cd0da20fb7f904098a94425e689aea6" args="(dict_load_t *load, dict_t *dict)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void load_begin_internal </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__load__t.html">dict_load_t</a> *&#160;</td>
          <td class="paramname"><em>load</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l01021">1021</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    load-&gt;dictptr = dict;
    load-&gt;nilnode.left = &amp;load-&gt;nilnode;
    load-&gt;nilnode.right = &amp;load-&gt;nilnode;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6c3000c0249a91cb54c68c2aad08ea03"></a><!-- doxytag: member="dict.c::rotate_left" ref="a6c3000c0249a91cb54c68c2aad08ea03" args="(dnode_t *upper)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void rotate_left </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>upper</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00076">76</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *lower, *lowleft, *upparent;

    lower = upper-&gt;right;
    upper-&gt;right = lowleft = lower-&gt;left;
    lowleft-&gt;parent = upper;

    lower-&gt;parent = upparent = upper-&gt;parent;

    <span class="comment">/* don&#39;t need to check for root node here because root-&gt;parent is</span>
<span class="comment">       the sentinel nil node, and root-&gt;parent-&gt;left points back to root */</span>

    <span class="keywordflow">if</span> (upper == upparent-&gt;left) {
    upparent-&gt;left = lower;
    } <span class="keywordflow">else</span> {
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (upper == upparent-&gt;right);
    upparent-&gt;right = lower;
    }

    lower-&gt;left = upper;
    upper-&gt;parent = lower;
}
</pre></div>
</div>
</div>
<a class="anchor" id="affc1c26c10656d2aacf662d7750f61fd"></a><!-- doxytag: member="dict.c::rotate_right" ref="affc1c26c10656d2aacf662d7750f61fd" args="(dnode_t *upper)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void rotate_right </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>upper</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00105">105</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *lower, *lowright, *upparent;

    lower = upper-&gt;left;
    upper-&gt;left = lowright = lower-&gt;right;
    lowright-&gt;parent = upper;

    lower-&gt;parent = upparent = upper-&gt;parent;

    <span class="keywordflow">if</span> (upper == upparent-&gt;right) {
    upparent-&gt;right = lower;
    } <span class="keywordflow">else</span> {
    <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (upper == upparent-&gt;left);
    upparent-&gt;left = lower;
    }

    lower-&gt;right = upper;
    upper-&gt;parent = lower;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a7af8b0b9796e50e8770a517959b64364"></a><!-- doxytag: member="dict.c::verify_bintree" ref="a7af8b0b9796e50e8770a517959b64364" args="(dict_t *dict)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int verify_bintree </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>dict</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00149">149</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <a class="code" href="structdnode__t.html">dnode_t</a> *first, *<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;

    first = <a class="code" href="dict_8c.html#a2b439ffb63f9b3089d0306ec3b26672f">dict_first</a>(dict);

    <span class="keywordflow">if</span> (dict-&gt;dupes) {
    <span class="keywordflow">while</span> (first &amp;&amp; (next = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a>(dict, first))) {
        <span class="keywordflow">if</span> (dict-&gt;compare(first-&gt;key, next-&gt;key) &gt; 0)
        <span class="keywordflow">return</span> 0;
        first = <a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
    }
    } <span class="keywordflow">else</span> {
    <span class="keywordflow">while</span> (first &amp;&amp; (next = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a>(dict, first))) {
        <span class="keywordflow">if</span> (dict-&gt;compare(first-&gt;key, next-&gt;key) &gt;= 0)
        <span class="keywordflow">return</span> 0;
        first = <a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a>;
    }
    }
    <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae986d29f8534fae1d89db38aacd48d24"></a><!-- doxytag: member="dict.c::verify_dict_has_node" ref="ae986d29f8534fae1d89db38aacd48d24" args="(dnode_t *nil, dnode_t *root, dnode_t *node)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int verify_dict_has_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>nil</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>root</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>node</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00232">232</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">if</span> (root != nil) {
    <span class="keywordflow">return</span> root == node
        || <a class="code" href="dict_8c.html#ae986d29f8534fae1d89db38aacd48d24">verify_dict_has_node</a>(nil, root-&gt;left, node)
        || <a class="code" href="dict_8c.html#ae986d29f8534fae1d89db38aacd48d24">verify_dict_has_node</a>(nil, root-&gt;right, node);
    }
    <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa85e6dc41f8a5804b4a1c80dc5a7666d"></a><!-- doxytag: member="dict.c::verify_node_count" ref="aa85e6dc41f8a5804b4a1c80dc5a7666d" args="(dnode_t *nil, dnode_t *root)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="dict_8h.html#a0ccdd0435aed173cb756dbb8f6ed27c5">dictcount_t</a> verify_node_count </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>nil</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>root</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00216">216</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordflow">if</span> (root == nil)
    <span class="keywordflow">return</span> 0;
    <span class="keywordflow">else</span>
    <span class="keywordflow">return</span> 1 + <a class="code" href="dict_8c.html#aa85e6dc41f8a5804b4a1c80dc5a7666d">verify_node_count</a>(nil, root-&gt;left)
        + <a class="code" href="dict_8c.html#aa85e6dc41f8a5804b4a1c80dc5a7666d">verify_node_count</a>(nil, root-&gt;right);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a8b56a42ae2278cc21494e098f4e7a541"></a><!-- doxytag: member="dict.c::verify_redblack" ref="a8b56a42ae2278cc21494e098f4e7a541" args="(dnode_t *nil, dnode_t *root)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static unsigned int verify_redblack </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>nil</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdnode__t.html">dnode_t</a> *&#160;</td>
          <td class="paramname"><em>root</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="dict_8c_source.html#l00185">185</a> of file <a class="el" href="dict_8c_source.html">dict.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordtype">unsigned</span> height_left, height_right;

    <span class="keywordflow">if</span> (root != nil) {
    height_left = <a class="code" href="dict_8c.html#a8b56a42ae2278cc21494e098f4e7a541">verify_redblack</a>(nil, root-&gt;left);
    height_right = <a class="code" href="dict_8c.html#a8b56a42ae2278cc21494e098f4e7a541">verify_redblack</a>(nil, root-&gt;right);
    <span class="keywordflow">if</span> (height_left == 0 || height_right == 0)
        <span class="keywordflow">return</span> 0;
    <span class="keywordflow">if</span> (height_left != height_right)
        <span class="keywordflow">return</span> 0;
    <span class="keywordflow">if</span> (root-&gt;color == <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>) {
        <span class="keywordflow">if</span> (root-&gt;left-&gt;color != <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>)
        <span class="keywordflow">return</span> 0;
        <span class="keywordflow">if</span> (root-&gt;right-&gt;color != <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>)
        <span class="keywordflow">return</span> 0;
        <span class="keywordflow">return</span> height_left;
    }
    <span class="keywordflow">if</span> (root-&gt;color != <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a>)
        <span class="keywordflow">return</span> 0;
    <span class="keywordflow">return</span> height_left + 1;
    } 
    <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="dict_8c.html">dict.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:19 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
