<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: ospfd/ospf_network.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('ospf__network_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">ospfd/ospf_network.c</div>  </div>
</div>
<div class="contents">
<a href="ospf__network_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * OSPF network related functions</span>
<a name="l00003"></a>00003 <span class="comment"> *   Copyright (C) 1999 Toshiaki Takada</span>
<a name="l00004"></a>00004 <span class="comment"> *</span>
<a name="l00005"></a>00005 <span class="comment"> * This file is part of GNU Zebra.</span>
<a name="l00006"></a>00006 <span class="comment"> *</span>
<a name="l00007"></a>00007 <span class="comment"> * GNU Zebra is free software; you can redistribute it and/or modify it</span>
<a name="l00008"></a>00008 <span class="comment"> * under the terms of the GNU General Public License as published by the</span>
<a name="l00009"></a>00009 <span class="comment"> * Free Software Foundation; either version 2, or (at your option) any</span>
<a name="l00010"></a>00010 <span class="comment"> * later version.</span>
<a name="l00011"></a>00011 <span class="comment"> *</span>
<a name="l00012"></a>00012 <span class="comment"> * GNU Zebra is distributed in the hope that it will be useful, but</span>
<a name="l00013"></a>00013 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00014"></a>00014 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00015"></a>00015 <span class="comment"> * General Public License for more details.</span>
<a name="l00016"></a>00016 <span class="comment"> *</span>
<a name="l00017"></a>00017 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00018"></a>00018 <span class="comment"> * along with GNU Zebra; see the file COPYING.  If not, write to the Free</span>
<a name="l00019"></a>00019 <span class="comment"> * Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA</span>
<a name="l00020"></a>00020 <span class="comment"> * 02111-1307, USA.</span>
<a name="l00021"></a>00021 <span class="comment"> */</span>
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;<a class="code" href="zebra_8h.html">zebra.h</a>&gt;</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="thread_8h.html">thread.h</a>&quot;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="linklist_8h.html">linklist.h</a>&quot;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="prefix_8h.html">prefix.h</a>&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="if_8h.html">if.h</a>&quot;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="sockunion_8h.html">sockunion.h</a>&quot;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="log_8h.html">log.h</a>&quot;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &quot;<a class="code" href="sockopt_8h.html">sockopt.h</a>&quot;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="privs_8h.html">privs.h</a>&quot;</span>
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structzebra__privs__t.html">zebra_privs_t</a> <a class="code" href="ospfclient_8c.html#a98d4a63d037cb8c579f44baa2f9801a2">ospfd_privs</a>;
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="preprocessor">#include &quot;<a class="code" href="ospfd_8h.html">ospfd/ospfd.h</a>&quot;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#include &quot;<a class="code" href="ospf__network_8h.html">ospfd/ospf_network.h</a>&quot;</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include &quot;<a class="code" href="ospf__interface_8h.html">ospfd/ospf_interface.h</a>&quot;</span>
<a name="l00039"></a>00039 <span class="preprocessor">#include &quot;<a class="code" href="ospf__asbr_8h.html">ospfd/ospf_asbr.h</a>&quot;</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include &quot;<a class="code" href="ospf__lsa_8h.html">ospfd/ospf_lsa.h</a>&quot;</span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &quot;<a class="code" href="ospf__lsdb_8h.html">ospfd/ospf_lsdb.h</a>&quot;</span>
<a name="l00042"></a>00042 <span class="preprocessor">#include &quot;<a class="code" href="ospf__neighbor_8h.html">ospfd/ospf_neighbor.h</a>&quot;</span>
<a name="l00043"></a>00043 <span class="preprocessor">#include &quot;<a class="code" href="ospf__packet_8h.html">ospfd/ospf_packet.h</a>&quot;</span>
<a name="l00044"></a>00044 <span class="preprocessor">#include &quot;<a class="code" href="ospf__dump_8h.html">ospfd/ospf_dump.h</a>&quot;</span>
<a name="l00045"></a>00045 
<a name="l00046"></a>00046 
<a name="l00047"></a>00047 
<a name="l00048"></a>00048 <span class="comment">/* Join to the OSPF ALL SPF ROUTERS multicast group. */</span>
<a name="l00049"></a>00049 <span class="keywordtype">int</span>
<a name="l00050"></a><a class="code" href="ospf__network_8h.html#ae0e4f43aea78250a9979fff6f10ac840">00050</a> <a class="code" href="ospf__network_8c.html#a474df6c741c2635fd9a6acd599516475">ospf_if_add_allspfrouters</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *top, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>,
<a name="l00051"></a>00051                <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> ifindex)
<a name="l00052"></a>00052 {
<a name="l00053"></a>00053   <span class="keywordtype">int</span> ret;
<a name="l00054"></a>00054   
<a name="l00055"></a>00055   ret = <a class="code" href="sockopt_8c.html#ad3ada4f32ebe26f0e333ba3bebb1cf93">setsockopt_multicast_ipv4</a> (top-&gt;<a class="code" href="structospf.html#a13100b27c547a3ba3572908aa24259c5">fd</a>, IP_ADD_MEMBERSHIP,
<a name="l00056"></a>00056                                    p-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>, htonl (<a class="code" href="ospfd_8h.html#a80bda0f2566dc7b64f07a28562cfb2c1">OSPF_ALLSPFROUTERS</a>),
<a name="l00057"></a>00057                                    ifindex);
<a name="l00058"></a>00058   <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l00059"></a>00059     <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;can&#39;t setsockopt IP_ADD_MEMBERSHIP (fd %d, addr %s, &quot;</span>
<a name="l00060"></a>00060            <span class="stringliteral">&quot;ifindex %u, AllSPFRouters): %s; perhaps a kernel limit &quot;</span>
<a name="l00061"></a>00061            <span class="stringliteral">&quot;on # of multicast group memberships has been exceeded?&quot;</span>,
<a name="l00062"></a>00062                top-&gt;<a class="code" href="structospf.html#a13100b27c547a3ba3572908aa24259c5">fd</a>, inet_ntoa(p-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>), ifindex, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a>(errno));
<a name="l00063"></a>00063   <span class="keywordflow">else</span>
<a name="l00064"></a>00064     <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;interface %s [%u] join AllSPFRouters Multicast group.&quot;</span>,
<a name="l00065"></a>00065            inet_ntoa (p-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>), ifindex);
<a name="l00066"></a>00066 
<a name="l00067"></a>00067   <span class="keywordflow">return</span> ret;
<a name="l00068"></a>00068 }
<a name="l00069"></a>00069 
<a name="l00070"></a>00070 <span class="keywordtype">int</span>
<a name="l00071"></a><a class="code" href="ospf__network_8h.html#a893083411db963bd032cddd593937421">00071</a> <a class="code" href="ospf__network_8c.html#a621131b5917c5e3de50cd232c1da04ee">ospf_if_drop_allspfrouters</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *top, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>,
<a name="l00072"></a>00072                 <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> ifindex)
<a name="l00073"></a>00073 {
<a name="l00074"></a>00074   <span class="keywordtype">int</span> ret;
<a name="l00075"></a>00075 
<a name="l00076"></a>00076   ret = <a class="code" href="sockopt_8c.html#ad3ada4f32ebe26f0e333ba3bebb1cf93">setsockopt_multicast_ipv4</a> (top-&gt;<a class="code" href="structospf.html#a13100b27c547a3ba3572908aa24259c5">fd</a>, IP_DROP_MEMBERSHIP,
<a name="l00077"></a>00077                                    p-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>, htonl (<a class="code" href="ospfd_8h.html#a80bda0f2566dc7b64f07a28562cfb2c1">OSPF_ALLSPFROUTERS</a>),
<a name="l00078"></a>00078                                    ifindex);
<a name="l00079"></a>00079   <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l00080"></a>00080     <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;can&#39;t setsockopt IP_DROP_MEMBERSHIP (fd %d, addr %s, &quot;</span>
<a name="l00081"></a>00081            <span class="stringliteral">&quot;ifindex %u, AllSPFRouters): %s&quot;</span>,
<a name="l00082"></a>00082                top-&gt;<a class="code" href="structospf.html#a13100b27c547a3ba3572908aa24259c5">fd</a>, inet_ntoa(p-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>), ifindex, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a>(errno));
<a name="l00083"></a>00083   <span class="keywordflow">else</span>
<a name="l00084"></a>00084     <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;interface %s [%u] leave AllSPFRouters Multicast group.&quot;</span>,
<a name="l00085"></a>00085            inet_ntoa (p-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>), ifindex);
<a name="l00086"></a>00086 
<a name="l00087"></a>00087   <span class="keywordflow">return</span> ret;
<a name="l00088"></a>00088 }
<a name="l00089"></a>00089 
<a name="l00090"></a>00090 <span class="comment">/* Join to the OSPF ALL Designated ROUTERS multicast group. */</span>
<a name="l00091"></a>00091 <span class="keywordtype">int</span>
<a name="l00092"></a><a class="code" href="ospf__network_8h.html#a4bb3a00af49f73b420ebc76b7b6fbf2e">00092</a> <a class="code" href="ospf__network_8c.html#aaa4e4123232fc0eefbd6a8425697048a">ospf_if_add_alldrouters</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *top, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>
<a name="l00093"></a>00093              ifindex)
<a name="l00094"></a>00094 {
<a name="l00095"></a>00095   <span class="keywordtype">int</span> ret;
<a name="l00096"></a>00096 
<a name="l00097"></a>00097   ret = <a class="code" href="sockopt_8c.html#ad3ada4f32ebe26f0e333ba3bebb1cf93">setsockopt_multicast_ipv4</a> (top-&gt;<a class="code" href="structospf.html#a13100b27c547a3ba3572908aa24259c5">fd</a>, IP_ADD_MEMBERSHIP,
<a name="l00098"></a>00098                                    p-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>, htonl (<a class="code" href="ospfd_8h.html#a8ba5ca00e358c35a32b660dc87e4b7cd">OSPF_ALLDROUTERS</a>),
<a name="l00099"></a>00099                                    ifindex);
<a name="l00100"></a>00100   <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l00101"></a>00101     <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;can&#39;t setsockopt IP_ADD_MEMBERSHIP (fd %d, addr %s, &quot;</span>
<a name="l00102"></a>00102            <span class="stringliteral">&quot;ifindex %u, AllDRouters): %s; perhaps a kernel limit &quot;</span>
<a name="l00103"></a>00103            <span class="stringliteral">&quot;on # of multicast group memberships has been exceeded?&quot;</span>,
<a name="l00104"></a>00104                top-&gt;<a class="code" href="structospf.html#a13100b27c547a3ba3572908aa24259c5">fd</a>, inet_ntoa(p-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>), ifindex, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a>(errno));
<a name="l00105"></a>00105   <span class="keywordflow">else</span>
<a name="l00106"></a>00106     <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;interface %s [%u] join AllDRouters Multicast group.&quot;</span>,
<a name="l00107"></a>00107            inet_ntoa (p-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>), ifindex);
<a name="l00108"></a>00108 
<a name="l00109"></a>00109   <span class="keywordflow">return</span> ret;
<a name="l00110"></a>00110 }
<a name="l00111"></a>00111 
<a name="l00112"></a>00112 <span class="keywordtype">int</span>
<a name="l00113"></a><a class="code" href="ospf__network_8h.html#ad908932678d9c74d1e76573fc7f9a95d">00113</a> <a class="code" href="ospf__network_8c.html#ab2ab03d8d8550be5794b6cd5d98703af">ospf_if_drop_alldrouters</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *top, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>
<a name="l00114"></a>00114               ifindex)
<a name="l00115"></a>00115 {
<a name="l00116"></a>00116   <span class="keywordtype">int</span> ret;
<a name="l00117"></a>00117 
<a name="l00118"></a>00118   ret = <a class="code" href="sockopt_8c.html#ad3ada4f32ebe26f0e333ba3bebb1cf93">setsockopt_multicast_ipv4</a> (top-&gt;<a class="code" href="structospf.html#a13100b27c547a3ba3572908aa24259c5">fd</a>, IP_DROP_MEMBERSHIP,
<a name="l00119"></a>00119                                    p-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>, htonl (<a class="code" href="ospfd_8h.html#a8ba5ca00e358c35a32b660dc87e4b7cd">OSPF_ALLDROUTERS</a>),
<a name="l00120"></a>00120                                    ifindex);
<a name="l00121"></a>00121   <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l00122"></a>00122     <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;can&#39;t setsockopt IP_DROP_MEMBERSHIP (fd %d, addr %s, &quot;</span>
<a name="l00123"></a>00123            <span class="stringliteral">&quot;ifindex %u, AllDRouters): %s&quot;</span>,
<a name="l00124"></a>00124                top-&gt;<a class="code" href="structospf.html#a13100b27c547a3ba3572908aa24259c5">fd</a>, inet_ntoa(p-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>), ifindex, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a>(errno));
<a name="l00125"></a>00125   <span class="keywordflow">else</span>
<a name="l00126"></a>00126     <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;interface %s [%u] leave AllDRouters Multicast group.&quot;</span>,
<a name="l00127"></a>00127            inet_ntoa (p-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>), ifindex);
<a name="l00128"></a>00128 
<a name="l00129"></a>00129   <span class="keywordflow">return</span> ret;
<a name="l00130"></a>00130 }
<a name="l00131"></a>00131 
<a name="l00132"></a>00132 <span class="keywordtype">int</span>
<a name="l00133"></a><a class="code" href="ospf__network_8h.html#af17b82b46b7b1a3cc936caf433184dab">00133</a> <a class="code" href="ospf__network_8c.html#aeaf2e7731d918c0544ed0901317cd1be">ospf_if_ipmulticast</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *top, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> ifindex)
<a name="l00134"></a>00134 {
<a name="l00135"></a>00135   u_char <a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>;
<a name="l00136"></a>00136   <span class="keywordtype">int</span> ret, len;
<a name="l00137"></a>00137   
<a name="l00138"></a>00138   val = 0;
<a name="l00139"></a>00139   len = <span class="keyword">sizeof</span> (<a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>);
<a name="l00140"></a>00140   
<a name="l00141"></a>00141   <span class="comment">/* Prevent receiving self-origined multicast packets. */</span>
<a name="l00142"></a>00142   ret = setsockopt (top-&gt;<a class="code" href="structospf.html#a13100b27c547a3ba3572908aa24259c5">fd</a>, IPPROTO_IP, IP_MULTICAST_LOOP, (<span class="keywordtype">void</span> *)&amp;val, len);
<a name="l00143"></a>00143   <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l00144"></a>00144     <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;can&#39;t setsockopt IP_MULTICAST_LOOP(0) for fd %d: %s&quot;</span>,
<a name="l00145"></a>00145            top-&gt;<a class="code" href="structospf.html#a13100b27c547a3ba3572908aa24259c5">fd</a>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a>(errno));
<a name="l00146"></a>00146   
<a name="l00147"></a>00147   <span class="comment">/* Explicitly set multicast ttl to 1 -- endo. */</span>
<a name="l00148"></a>00148   val = 1;
<a name="l00149"></a>00149   ret = setsockopt (top-&gt;<a class="code" href="structospf.html#a13100b27c547a3ba3572908aa24259c5">fd</a>, IPPROTO_IP, IP_MULTICAST_TTL, (<span class="keywordtype">void</span> *)&amp;val, len);
<a name="l00150"></a>00150   <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l00151"></a>00151     <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;can&#39;t setsockopt IP_MULTICAST_TTL(1) for fd %d: %s&quot;</span>,
<a name="l00152"></a>00152            top-&gt;<a class="code" href="structospf.html#a13100b27c547a3ba3572908aa24259c5">fd</a>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
<a name="l00153"></a>00153 
<a name="l00154"></a>00154   ret = <a class="code" href="sockopt_8c.html#ad3ada4f32ebe26f0e333ba3bebb1cf93">setsockopt_multicast_ipv4</a> (top-&gt;<a class="code" href="structospf.html#a13100b27c547a3ba3572908aa24259c5">fd</a>, IP_MULTICAST_IF,
<a name="l00155"></a>00155                                    p-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>, 0, ifindex);
<a name="l00156"></a>00156   <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l00157"></a>00157     <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;can&#39;t setsockopt IP_MULTICAST_IF(fd %d, addr %s, &quot;</span>
<a name="l00158"></a>00158           <span class="stringliteral">&quot;ifindex %u): %s&quot;</span>,
<a name="l00159"></a>00159           top-&gt;<a class="code" href="structospf.html#a13100b27c547a3ba3572908aa24259c5">fd</a>, inet_ntoa(p-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>), ifindex, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a>(errno));
<a name="l00160"></a>00160 
<a name="l00161"></a>00161   <span class="keywordflow">return</span> ret;
<a name="l00162"></a>00162 }
<a name="l00163"></a>00163 
<a name="l00164"></a>00164 <span class="keywordtype">int</span>
<a name="l00165"></a><a class="code" href="ospf__network_8h.html#a738c77f48af1d1af2c0e616ba9710bc2">00165</a> <a class="code" href="ospf__network_8c.html#a738c77f48af1d1af2c0e616ba9710bc2">ospf_sock_init</a> (<span class="keywordtype">void</span>)
<a name="l00166"></a>00166 {
<a name="l00167"></a>00167   <span class="keywordtype">int</span> ospf_sock;
<a name="l00168"></a>00168   <span class="keywordtype">int</span> ret, hincl = 1;
<a name="l00169"></a>00169 
<a name="l00170"></a>00170   <span class="keywordflow">if</span> ( <a class="code" href="ospfclient_8c.html#a98d4a63d037cb8c579f44baa2f9801a2">ospfd_privs</a>.<a class="code" href="structzebra__privs__t.html#a0c59dbc0ec6187b60a824ec421cc34c1">change</a> (<a class="code" href="privs_8h.html#aae029fe88e2d02bee4d46a2f458bd3e5a5395269196ee9bd07257f8b2b35c25fa">ZPRIVS_RAISE</a>) )
<a name="l00171"></a>00171     <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;ospf_sock_init: could not raise privs, %s&quot;</span>,
<a name="l00172"></a>00172                <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno) );
<a name="l00173"></a>00173     
<a name="l00174"></a>00174   ospf_sock = socket (AF_INET, SOCK_RAW, <a class="code" href="ospf6__proto_8h.html#ade45b7018bfdffd626877565c14318e2">IPPROTO_OSPFIGP</a>);
<a name="l00175"></a>00175   <span class="keywordflow">if</span> (ospf_sock &lt; 0)
<a name="l00176"></a>00176     {
<a name="l00177"></a>00177       <span class="keywordtype">int</span> save_errno = errno;
<a name="l00178"></a>00178       <span class="keywordflow">if</span> ( <a class="code" href="ospfclient_8c.html#a98d4a63d037cb8c579f44baa2f9801a2">ospfd_privs</a>.<a class="code" href="structzebra__privs__t.html#a0c59dbc0ec6187b60a824ec421cc34c1">change</a> (<a class="code" href="privs_8h.html#aae029fe88e2d02bee4d46a2f458bd3e5a7da2c6956cf712f8adc04ff2b0f072c5">ZPRIVS_LOWER</a>) )
<a name="l00179"></a>00179         <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;ospf_sock_init: could not lower privs, %s&quot;</span>,
<a name="l00180"></a>00180                    <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno) );
<a name="l00181"></a>00181       <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;ospf_read_sock_init: socket: %s&quot;</span>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (save_errno));
<a name="l00182"></a>00182       <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a>(1);
<a name="l00183"></a>00183     }
<a name="l00184"></a>00184     
<a name="l00185"></a>00185 <span class="preprocessor">#ifdef IP_HDRINCL</span>
<a name="l00186"></a>00186 <span class="preprocessor"></span>  <span class="comment">/* we will include IP header with packet */</span>
<a name="l00187"></a>00187   ret = setsockopt (ospf_sock, IPPROTO_IP, IP_HDRINCL, &amp;hincl, <span class="keyword">sizeof</span> (hincl));
<a name="l00188"></a>00188   <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l00189"></a>00189     {
<a name="l00190"></a>00190       <span class="keywordtype">int</span> save_errno = errno;
<a name="l00191"></a>00191       <span class="keywordflow">if</span> ( <a class="code" href="ospfclient_8c.html#a98d4a63d037cb8c579f44baa2f9801a2">ospfd_privs</a>.<a class="code" href="structzebra__privs__t.html#a0c59dbc0ec6187b60a824ec421cc34c1">change</a> (<a class="code" href="privs_8h.html#aae029fe88e2d02bee4d46a2f458bd3e5a7da2c6956cf712f8adc04ff2b0f072c5">ZPRIVS_LOWER</a>) )
<a name="l00192"></a>00192         <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;ospf_sock_init: could not lower privs, %s&quot;</span>,
<a name="l00193"></a>00193                    <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno) );
<a name="l00194"></a>00194       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;Can&#39;t set IP_HDRINCL option for fd %d: %s&quot;</span>,
<a name="l00195"></a>00195              ospf_sock, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a>(save_errno));
<a name="l00196"></a>00196     }
<a name="l00197"></a>00197 <span class="preprocessor">#elif defined (IPTOS_PREC_INTERNETCONTROL)</span>
<a name="l00198"></a>00198 <span class="preprocessor"></span><span class="preprocessor">#warning &quot;IP_HDRINCL not available on this system&quot;</span>
<a name="l00199"></a>00199 <span class="preprocessor"></span><span class="preprocessor">#warning &quot;using IPTOS_PREC_INTERNETCONTROL&quot;</span>
<a name="l00200"></a>00200 <span class="preprocessor"></span>  ret = <a class="code" href="sockopt_8c.html#a3ea00b83444773c5162871266744a286">setsockopt_ipv4_tos</a>(ospf_sock, <a class="code" href="ospfd_8h.html#aad2536be3b05d82e79158c07c0d26142">IPTOS_PREC_INTERNETCONTROL</a>);
<a name="l00201"></a>00201   <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l00202"></a>00202     {
<a name="l00203"></a>00203       <span class="keywordtype">int</span> save_errno = errno;
<a name="l00204"></a>00204       <span class="keywordflow">if</span> ( <a class="code" href="ospfclient_8c.html#a98d4a63d037cb8c579f44baa2f9801a2">ospfd_privs</a>.<a class="code" href="structzebra__privs__t.html#a0c59dbc0ec6187b60a824ec421cc34c1">change</a> (<a class="code" href="privs_8h.html#aae029fe88e2d02bee4d46a2f458bd3e5a7da2c6956cf712f8adc04ff2b0f072c5">ZPRIVS_LOWER</a>) )
<a name="l00205"></a>00205         <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;ospf_sock_init: could not lower privs, %s&quot;</span>,
<a name="l00206"></a>00206                    <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno) );
<a name="l00207"></a>00207       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;can&#39;t set sockopt IP_TOS %d to socket %d: %s&quot;</span>,
<a name="l00208"></a>00208              tos, ospf_sock, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a>(save_errno));
<a name="l00209"></a>00209       close (ospf_sock);    <span class="comment">/* Prevent sd leak. */</span>
<a name="l00210"></a>00210       <span class="keywordflow">return</span> ret;
<a name="l00211"></a>00211     }
<a name="l00212"></a>00212 <span class="preprocessor">#else </span><span class="comment">/* !IPTOS_PREC_INTERNETCONTROL */</span>
<a name="l00213"></a>00213 <span class="preprocessor">#warning &quot;IP_HDRINCL not available, nor is IPTOS_PREC_INTERNETCONTROL&quot;</span>
<a name="l00214"></a>00214 <span class="preprocessor"></span>  <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;IP_HDRINCL option not available&quot;</span>);
<a name="l00215"></a>00215 <span class="preprocessor">#endif </span><span class="comment">/* IP_HDRINCL */</span>
<a name="l00216"></a>00216 
<a name="l00217"></a>00217   ret = <a class="code" href="sockopt_8c.html#a892470b0232aca4e68e88117d2cb46ed">setsockopt_ifindex</a> (AF_INET, ospf_sock, 1);
<a name="l00218"></a>00218 
<a name="l00219"></a>00219   <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l00220"></a>00220      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;Can&#39;t set pktinfo option for fd %d&quot;</span>, ospf_sock);
<a name="l00221"></a>00221 
<a name="l00222"></a>00222   <span class="keywordflow">if</span> (<a class="code" href="ospfclient_8c.html#a98d4a63d037cb8c579f44baa2f9801a2">ospfd_privs</a>.<a class="code" href="structzebra__privs__t.html#a0c59dbc0ec6187b60a824ec421cc34c1">change</a> (<a class="code" href="privs_8h.html#aae029fe88e2d02bee4d46a2f458bd3e5a7da2c6956cf712f8adc04ff2b0f072c5">ZPRIVS_LOWER</a>))
<a name="l00223"></a>00223     {
<a name="l00224"></a>00224       <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;ospf_sock_init: could not lower privs, %s&quot;</span>,
<a name="l00225"></a>00225                <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno) );
<a name="l00226"></a>00226     }
<a name="l00227"></a>00227  
<a name="l00228"></a>00228   <span class="keywordflow">return</span> ospf_sock;
<a name="l00229"></a>00229 }
<a name="l00230"></a>00230 
<a name="l00231"></a>00231 <span class="keywordtype">void</span>
<a name="l00232"></a><a class="code" href="ospf__network_8h.html#ac491096e734854f944d84bd864772bc5">00232</a> <a class="code" href="ospf__network_8c.html#a646b5cb4e4e7e52753082f4fd6ccf553">ospf_adjust_sndbuflen</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> * <a class="code" href="structospf.html">ospf</a>, <span class="keywordtype">int</span> buflen)
<a name="l00233"></a>00233 {
<a name="l00234"></a>00234   <span class="keywordtype">int</span> ret, newbuflen;
<a name="l00235"></a>00235   <span class="comment">/* Check if any work has to be done at all. */</span>
<a name="l00236"></a>00236   <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#ac5b68e65968e1eceabeb934dc23342dc">maxsndbuflen</a> &gt;= buflen)
<a name="l00237"></a>00237     <span class="keywordflow">return</span>;
<a name="l00238"></a>00238   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (<a class="code" href="bgp__debug_8c.html#aacd09dfe4b60fac4ec1c5e2895066f07">zebra</a>, ZEBRA_INTERFACE))
<a name="l00239"></a>00239     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s: adjusting OSPF send buffer size to %d&quot;</span>,
<a name="l00240"></a>00240       __func__, buflen);
<a name="l00241"></a>00241   <span class="keywordflow">if</span> (<a class="code" href="ospfclient_8c.html#a98d4a63d037cb8c579f44baa2f9801a2">ospfd_privs</a>.<a class="code" href="structzebra__privs__t.html#a0c59dbc0ec6187b60a824ec421cc34c1">change</a> (<a class="code" href="privs_8h.html#aae029fe88e2d02bee4d46a2f458bd3e5a5395269196ee9bd07257f8b2b35c25fa">ZPRIVS_RAISE</a>))
<a name="l00242"></a>00242     <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;%s: could not raise privs, %s&quot;</span>, __func__,
<a name="l00243"></a>00243       <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
<a name="l00244"></a>00244   <span class="comment">/* Now we try to set SO_SNDBUF to what our caller has requested</span>
<a name="l00245"></a>00245 <span class="comment">   * (the MTU of a newly added interface). However, if the OS has</span>
<a name="l00246"></a>00246 <span class="comment">   * truncated the actual buffer size to somewhat less size, try</span>
<a name="l00247"></a>00247 <span class="comment">   * to detect it and update our records appropriately. The OS</span>
<a name="l00248"></a>00248 <span class="comment">   * may allocate more buffer space, than requested, this isn&#39;t</span>
<a name="l00249"></a>00249 <span class="comment">   * a error.</span>
<a name="l00250"></a>00250 <span class="comment">   */</span>
<a name="l00251"></a>00251   ret = <a class="code" href="sockopt_8c.html#ad801e41fc584078bdc1fc1f5f5f08a10">setsockopt_so_sendbuf</a> (ospf-&gt;<a class="code" href="structospf.html#a13100b27c547a3ba3572908aa24259c5">fd</a>, buflen);
<a name="l00252"></a>00252   newbuflen = <a class="code" href="sockopt_8c.html#aae8ed164606b3d56b05af0e09730a554">getsockopt_so_sendbuf</a> (ospf-&gt;<a class="code" href="structospf.html#a13100b27c547a3ba3572908aa24259c5">fd</a>);
<a name="l00253"></a>00253   <span class="keywordflow">if</span> (ret &lt; 0 || newbuflen &lt; buflen)
<a name="l00254"></a>00254     <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;%s: tried to set SO_SNDBUF to %d, but got %d&quot;</span>,
<a name="l00255"></a>00255       __func__, buflen, newbuflen);
<a name="l00256"></a>00256   <span class="keywordflow">if</span> (newbuflen &gt;= 0)
<a name="l00257"></a>00257     ospf-&gt;<a class="code" href="structospf.html#ac5b68e65968e1eceabeb934dc23342dc">maxsndbuflen</a> = newbuflen;
<a name="l00258"></a>00258   <span class="keywordflow">else</span>
<a name="l00259"></a>00259     <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;%s: failed to get SO_SNDBUF&quot;</span>, __func__);
<a name="l00260"></a>00260   <span class="keywordflow">if</span> (<a class="code" href="ospfclient_8c.html#a98d4a63d037cb8c579f44baa2f9801a2">ospfd_privs</a>.<a class="code" href="structzebra__privs__t.html#a0c59dbc0ec6187b60a824ec421cc34c1">change</a> (<a class="code" href="privs_8h.html#aae029fe88e2d02bee4d46a2f458bd3e5a7da2c6956cf712f8adc04ff2b0f072c5">ZPRIVS_LOWER</a>))
<a name="l00261"></a>00261     <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;%s: could not lower privs, %s&quot;</span>, __func__,
<a name="l00262"></a>00262       <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
<a name="l00263"></a>00263 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="ospf__network_8c.html">ospf_network.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:07 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
