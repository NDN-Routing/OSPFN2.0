<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: lib/thread.h File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('thread_8h.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Defines</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">lib/thread.h File Reference</div>  </div>
</div>
<div class="contents">

<p><a href="thread_8h_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structrusage__t.html">rusage_t</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structthread__list.html">thread_list</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structthread__master.html">thread_master</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structthread.html">thread</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structcpu__thread__history.html">cpu_thread_history</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structcpu__thread__history_1_1time__stats.html">cpu_thread_history::time_stats</a></td></tr>
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#ae80bba1eb296573455cd5885ba8a52ad">RUSAGE_T</a>&#160;&#160;&#160;struct <a class="el" href="structrusage__t.html">rusage_t</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a023e544a82cd098fc592b46066a7fa47">GETRUSAGE</a>(<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)&#160;&#160;&#160;thread_getrusage(<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#af8046342c963c1e68e91ffa96921849b">THREAD_READ</a>&#160;&#160;&#160;0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#ad41d2495b7d43e273ff1a457a3dbe796">THREAD_WRITE</a>&#160;&#160;&#160;1</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a5bb13cc31455e697c8352a922110170c">THREAD_TIMER</a>&#160;&#160;&#160;2</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#ab1afef4a6988a13eec3423a9f242981e">THREAD_EVENT</a>&#160;&#160;&#160;3</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a0c4e66d753f8248311ba53a1d8ed49d3">THREAD_READY</a>&#160;&#160;&#160;4</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a6fb1be054d6fa35a36b702d10f29e1d2">THREAD_BACKGROUND</a>&#160;&#160;&#160;5</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#ab0c59d8f607e983eb887017d604a80c9">THREAD_UNUSED</a>&#160;&#160;&#160;6</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#ae1829dd93324485f92f05bab573e4ec3">THREAD_EXECUTE</a>&#160;&#160;&#160;7</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#aa5c27f37877fd023590e7c648a5115f5">THREAD_YIELD_TIME_SLOT</a>&#160;&#160;&#160;10 * 1000L</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a>(<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)&#160;&#160;&#160;((<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)-&gt;arg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a89bd56f991717646441f9dffc010d4f5">THREAD_FD</a>(<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)&#160;&#160;&#160;((<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)-&gt;u.fd)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a88d7c483cad15baac709fac747480a11">THREAD_VAL</a>(<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)&#160;&#160;&#160;((<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)-&gt;<a class="el" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">u.val</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#aa1c80a0def008e6c3439baa8b49a1dab">THREAD_READ_ON</a>(<a class="el" href="test__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="el" href="structthread.html">thread</a>, <a class="el" href="ospf__nsm_8c.html#a03307f8a561731a5c5657834da57ab11">func</a>, arg, sock)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#ad563eafaebb935e4371f38e37ca33b00">THREAD_WRITE_ON</a>(<a class="el" href="test__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="el" href="structthread.html">thread</a>, <a class="el" href="ospf__nsm_8c.html#a03307f8a561731a5c5657834da57ab11">func</a>, arg, sock)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a>(<a class="el" href="test__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="el" href="structthread.html">thread</a>, <a class="el" href="ospf__nsm_8c.html#a03307f8a561731a5c5657834da57ab11">func</a>, arg, time)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a7e1de4fc338e4feae498978461742dbb">THREAD_OFF</a>(<a class="el" href="structthread.html">thread</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#aea32d64a2abc627aded5159a5d500d07">THREAD_READ_OFF</a>(<a class="el" href="structthread.html">thread</a>)&#160;&#160;&#160;THREAD_OFF(<a class="el" href="structthread.html">thread</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a5b795d4d7156e3e14235062f1307a029">THREAD_WRITE_OFF</a>(<a class="el" href="structthread.html">thread</a>)&#160;&#160;&#160;THREAD_OFF(<a class="el" href="structthread.html">thread</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#ae1dfd3f5f643212148d60a41d9f2192a">THREAD_TIMER_OFF</a>(<a class="el" href="structthread.html">thread</a>)&#160;&#160;&#160;THREAD_OFF(<a class="el" href="structthread.html">thread</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#abd1714f11834a150c84b040c0c69b620">thread_add_read</a>(<a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, f, a, v)&#160;&#160;&#160;funcname_thread_add_read(<a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>,f,a,v,#f)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a8a2f048ba94722b1e88f08254fbd4444">thread_add_write</a>(<a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, f, a, v)&#160;&#160;&#160;funcname_thread_add_write(<a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>,f,a,v,#f)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a>(<a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, f, a, v)&#160;&#160;&#160;funcname_thread_add_timer(<a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>,f,a,v,#f)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a9231be4b08f04f6ebc1bea080443ba74">thread_add_timer_msec</a>(<a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, f, a, v)&#160;&#160;&#160;funcname_thread_add_timer_msec(<a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>,f,a,v,#f)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a>(<a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, f, a, v)&#160;&#160;&#160;funcname_thread_add_event(<a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>,f,a,v,#f)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#adfc9185c89375a240b90ab50241c497d">thread_execute</a>(<a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, f, a, v)&#160;&#160;&#160;funcname_thread_execute(<a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>,f,a,v,#f)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#ad0054011ef431feb7c0c5f867ab35ef7">thread_add_background</a>(<a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, f, a, v)&#160;&#160;&#160;funcname_thread_add_background(<a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>,f,a,v,#f)</td></tr>
<tr><td colspan="2"><h2><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a4389ae97209574331fc146cf4c4804a0">thread_type</a></td></tr>
<tr><td colspan="2"><h2><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a64fff521e88ba8b01645c5bb89085b33">quagga_clkid</a> { <a class="el" href="thread_8h.html#a64fff521e88ba8b01645c5bb89085b33a67f083bc4380ca6005b181636ccfdb45">QUAGGA_CLK_REALTIME</a> =  0, 
<a class="el" href="thread_8h.html#a64fff521e88ba8b01645c5bb89085b33a7f92aaa461f13c163b13f96085eb3cd9">QUAGGA_CLK_MONOTONIC</a>, 
<a class="el" href="thread_8h.html#a64fff521e88ba8b01645c5bb89085b33a85be371def155525e04e8bf87dc9e8c5">QUAGGA_CLK_REALTIME_STABILISED</a>
 }</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structthread__master.html">thread_master</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a2e57c17fcbd0a0717e8bbcf1d574ae95">thread_master_create</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a87595d8b2da182b36abcf3909a50fc33">thread_master_free</a> (struct <a class="el" href="structthread__master.html">thread_master</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structthread.html">thread</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a30a940b047f6a90b8a2bfa9214c17c39">funcname_thread_add_read</a> (struct <a class="el" href="structthread__master.html">thread_master</a> *, int(*)(struct <a class="el" href="structthread.html">thread</a> *), void *, int, const char *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structthread.html">thread</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a188b2de6c009ef3ecf04171c3bde22ea">funcname_thread_add_write</a> (struct <a class="el" href="structthread__master.html">thread_master</a> *, int(*)(struct <a class="el" href="structthread.html">thread</a> *), void *, int, const char *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structthread.html">thread</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#afdc054494ac91b54f00357e7daff56e2">funcname_thread_add_timer</a> (struct <a class="el" href="structthread__master.html">thread_master</a> *, int(*)(struct <a class="el" href="structthread.html">thread</a> *), void *, long, const char *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structthread.html">thread</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a78c45d34e79277f01fcc52d2e12d6ccc">funcname_thread_add_timer_msec</a> (struct <a class="el" href="structthread__master.html">thread_master</a> *, int(*)(struct <a class="el" href="structthread.html">thread</a> *), void *, long, const char *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structthread.html">thread</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a95b7ac363e84c154a278f89f96fd2065">funcname_thread_add_event</a> (struct <a class="el" href="structthread__master.html">thread_master</a> *, int(*)(struct <a class="el" href="structthread.html">thread</a> *), void *, int, const char *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structthread.html">thread</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#af4b0bc80af8195e723822c602c0871fe">funcname_thread_add_background</a> (struct <a class="el" href="structthread__master.html">thread_master</a> *, int(*<a class="el" href="ospf__nsm_8c.html#a03307f8a561731a5c5657834da57ab11">func</a>)(struct <a class="el" href="structthread.html">thread</a> *), void *arg, long milliseconds_to_delay, const char *funcname)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structthread.html">thread</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#af38ec38562af99fa9d986651f941a9e8">funcname_thread_execute</a> (struct <a class="el" href="structthread__master.html">thread_master</a> *, int(*)(struct <a class="el" href="structthread.html">thread</a> *), void *, int, const char *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a4cfb6c4bc801cd7d9f1080b883b6fd7b">thread_cancel</a> (struct <a class="el" href="structthread.html">thread</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a03c9913936520714f5a37897d9fb6ac8">thread_cancel_event</a> (struct <a class="el" href="structthread__master.html">thread_master</a> *, void *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structthread.html">thread</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a0a427e4c3c092149a1fb0d523fa49b16">thread_fetch</a> (struct <a class="el" href="structthread__master.html">thread_master</a> *, struct <a class="el" href="structthread.html">thread</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a7215c1965c3fa03c2eca7073e2b47a0b">thread_call</a> (struct <a class="el" href="structthread.html">thread</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#ad5d0195ce2891fec58253a5cbc35520e">thread_timer_remain_second</a> (struct <a class="el" href="structthread.html">thread</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#ac7baf880622757f0fb1b1a7bc5fc5cac">thread_should_yield</a> (struct <a class="el" href="structthread.html">thread</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a476f884cc93ef2b19b42a8eea019bf3d">thread_getrusage</a> (RUSAGE_T *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a7046ff49f5ca0b750a6d5c935bc5de58">quagga_gettime</a> (enum <a class="el" href="thread_8h.html#a64fff521e88ba8b01645c5bb89085b33">quagga_clkid</a>, struct timeval *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">time_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a351c4c3fda17ce006c119a3cda49aa37">quagga_time</a> (time_t *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#ac8356a0c3709840382fe329e93aa23bd">thread_consumed_time</a> (RUSAGE_T *after, RUSAGE_T *before, unsigned long *cpu_time_elapsed)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct timeval&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a010d58e49a3c74ae856d5cd111f7eb62">recent_relative_time</a> (void)</td></tr>
<tr><td colspan="2"><h2><a name="var-members"></a>
Variables</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structcmd__element.html">cmd_element</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a63c4edb83677a6357d970e06d49ceaa0">show_thread_cpu_cmd</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct timeval&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="thread_8h.html#a9a54ae2e02ed1087c32ce72620a940c8">recent_time</a></td></tr>
</table>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="a023e544a82cd098fc592b46066a7fa47"></a><!-- doxytag: member="thread.h::GETRUSAGE" ref="a023e544a82cd098fc592b46066a7fa47" args="(X)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GETRUSAGE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a></td><td>)</td>
          <td>&#160;&#160;&#160;thread_getrusage(<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00034">34</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="ae80bba1eb296573455cd5885ba8a52ad"></a><!-- doxytag: member="thread.h::RUSAGE_T" ref="ae80bba1eb296573455cd5885ba8a52ad" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define RUSAGE_T&#160;&#160;&#160;struct <a class="el" href="structrusage__t.html">rusage_t</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00032">32</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="ad0054011ef431feb7c0c5f867ab35ef7"></a><!-- doxytag: member="thread.h::thread_add_background" ref="ad0054011ef431feb7c0c5f867ab35ef7" args="(m, f, a, v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define thread_add_background</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">f, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">v&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;funcname_thread_add_background(<a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>,f,a,v,#f)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00161">161</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="a1067157ad59ad46f29bf87158dffc3de"></a><!-- doxytag: member="thread.h::thread_add_event" ref="a1067157ad59ad46f29bf87158dffc3de" args="(m, f, a, v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define thread_add_event</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">f, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">v&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;funcname_thread_add_event(<a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>,f,a,v,#f)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00157">157</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="abd1714f11834a150c84b040c0c69b620"></a><!-- doxytag: member="thread.h::thread_add_read" ref="abd1714f11834a150c84b040c0c69b620" args="(m, f, a, v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define thread_add_read</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">f, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">v&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;funcname_thread_add_read(<a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>,f,a,v,#f)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00153">153</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="aca77b3bbd166d3573de5ecd9756a590c"></a><!-- doxytag: member="thread.h::thread_add_timer" ref="aca77b3bbd166d3573de5ecd9756a590c" args="(m, f, a, v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define thread_add_timer</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">f, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">v&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;funcname_thread_add_timer(<a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>,f,a,v,#f)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00155">155</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="a9231be4b08f04f6ebc1bea080443ba74"></a><!-- doxytag: member="thread.h::thread_add_timer_msec" ref="a9231be4b08f04f6ebc1bea080443ba74" args="(m, f, a, v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define thread_add_timer_msec</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">f, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">v&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;funcname_thread_add_timer_msec(<a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>,f,a,v,#f)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00156">156</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="a8a2f048ba94722b1e88f08254fbd4444"></a><!-- doxytag: member="thread.h::thread_add_write" ref="a8a2f048ba94722b1e88f08254fbd4444" args="(m, f, a, v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define thread_add_write</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">f, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">v&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;funcname_thread_add_write(<a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>,f,a,v,#f)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00154">154</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="a78f2ae47a7a334f7f74bfed7fda48e5a"></a><!-- doxytag: member="thread.h::THREAD_ARG" ref="a78f2ae47a7a334f7f74bfed7fda48e5a" args="(X)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define THREAD_ARG</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a></td><td>)</td>
          <td>&#160;&#160;&#160;((<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)-&gt;arg)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00118">118</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="a6fb1be054d6fa35a36b702d10f29e1d2"></a><!-- doxytag: member="thread.h::THREAD_BACKGROUND" ref="a6fb1be054d6fa35a36b702d10f29e1d2" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define THREAD_BACKGROUND&#160;&#160;&#160;5</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00110">110</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab1afef4a6988a13eec3423a9f242981e"></a><!-- doxytag: member="thread.h::THREAD_EVENT" ref="ab1afef4a6988a13eec3423a9f242981e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define THREAD_EVENT&#160;&#160;&#160;3</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00108">108</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="ae1829dd93324485f92f05bab573e4ec3"></a><!-- doxytag: member="thread.h::THREAD_EXECUTE" ref="ae1829dd93324485f92f05bab573e4ec3" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define THREAD_EXECUTE&#160;&#160;&#160;7</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00112">112</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="adfc9185c89375a240b90ab50241c497d"></a><!-- doxytag: member="thread.h::thread_execute" ref="adfc9185c89375a240b90ab50241c497d" args="(m, f, a, v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define thread_execute</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">f, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">v&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;funcname_thread_execute(<a class="el" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>,f,a,v,#f)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00158">158</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="a89bd56f991717646441f9dffc010d4f5"></a><!-- doxytag: member="thread.h::THREAD_FD" ref="a89bd56f991717646441f9dffc010d4f5" args="(X)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define THREAD_FD</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a></td><td>)</td>
          <td>&#160;&#160;&#160;((<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)-&gt;u.fd)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00119">119</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="a7e1de4fc338e4feae498978461742dbb"></a><!-- doxytag: member="thread.h::THREAD_OFF" ref="a7e1de4fc338e4feae498978461742dbb" args="(thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define THREAD_OFF</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="structthread.html">thread</a></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keywordflow">do</span> { \
    if (<a class="code" href="structthread.html">thread</a>) \
      { \
        thread_cancel (<a class="code" href="structthread.html">thread</a>); \
        thread = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>; \
      } \
  } <span class="keywordflow">while</span> (0)
</pre></div>
<p>Definition at line <a class="el" href="thread_8h_source.html#l00140">140</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="af8046342c963c1e68e91ffa96921849b"></a><!-- doxytag: member="thread.h::THREAD_READ" ref="af8046342c963c1e68e91ffa96921849b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define THREAD_READ&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00105">105</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="aea32d64a2abc627aded5159a5d500d07"></a><!-- doxytag: member="thread.h::THREAD_READ_OFF" ref="aea32d64a2abc627aded5159a5d500d07" args="(thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define THREAD_READ_OFF</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="structthread.html">thread</a></td><td>)</td>
          <td>&#160;&#160;&#160;THREAD_OFF(<a class="el" href="structthread.html">thread</a>)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00149">149</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa1c80a0def008e6c3439baa8b49a1dab"></a><!-- doxytag: member="thread.h::THREAD_READ_ON" ref="aa1c80a0def008e6c3439baa8b49a1dab" args="(master, thread, func, arg, sock)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define THREAD_READ_ON</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="test__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="structthread.html">thread</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="ospf__nsm_8c.html#a03307f8a561731a5c5657834da57ab11">func</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">arg, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">sock&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keywordflow">do</span> { \
    if (! <a class="code" href="structthread.html">thread</a>) \
      thread = <a class="code" href="thread_8h.html#abd1714f11834a150c84b040c0c69b620">thread_add_read</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="bgp__fsm_8c.html#aad6d5d0fbfe60193366eaab88413f7af">func</a>, arg, sock); \
  } <span class="keywordflow">while</span> (0)
</pre></div>
<p>Definition at line <a class="el" href="thread_8h_source.html#l00122">122</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="a0c4e66d753f8248311ba53a1d8ed49d3"></a><!-- doxytag: member="thread.h::THREAD_READY" ref="a0c4e66d753f8248311ba53a1d8ed49d3" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define THREAD_READY&#160;&#160;&#160;4</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00109">109</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="a5bb13cc31455e697c8352a922110170c"></a><!-- doxytag: member="thread.h::THREAD_TIMER" ref="a5bb13cc31455e697c8352a922110170c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define THREAD_TIMER&#160;&#160;&#160;2</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00107">107</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="ae1dfd3f5f643212148d60a41d9f2192a"></a><!-- doxytag: member="thread.h::THREAD_TIMER_OFF" ref="ae1dfd3f5f643212148d60a41d9f2192a" args="(thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define THREAD_TIMER_OFF</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="structthread.html">thread</a></td><td>)</td>
          <td>&#160;&#160;&#160;THREAD_OFF(<a class="el" href="structthread.html">thread</a>)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00151">151</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="a898ebeae19eb435889cbf53ea8b5120e"></a><!-- doxytag: member="thread.h::THREAD_TIMER_ON" ref="a898ebeae19eb435889cbf53ea8b5120e" args="(master, thread, func, arg, time)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define THREAD_TIMER_ON</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="test__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="structthread.html">thread</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="ospf__nsm_8c.html#a03307f8a561731a5c5657834da57ab11">func</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">arg, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">time&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keywordflow">do</span> { \
    if (! <a class="code" href="structthread.html">thread</a>) \
      thread = <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="bgp__fsm_8c.html#aad6d5d0fbfe60193366eaab88413f7af">func</a>, arg, time); \
  } <span class="keywordflow">while</span> (0)
</pre></div>
<p>Definition at line <a class="el" href="thread_8h_source.html#l00134">134</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab0c59d8f607e983eb887017d604a80c9"></a><!-- doxytag: member="thread.h::THREAD_UNUSED" ref="ab0c59d8f607e983eb887017d604a80c9" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define THREAD_UNUSED&#160;&#160;&#160;6</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00111">111</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="a88d7c483cad15baac709fac747480a11"></a><!-- doxytag: member="thread.h::THREAD_VAL" ref="a88d7c483cad15baac709fac747480a11" args="(X)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define THREAD_VAL</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a></td><td>)</td>
          <td>&#160;&#160;&#160;((<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)-&gt;<a class="el" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">u.val</a>)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00120">120</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="ad41d2495b7d43e273ff1a457a3dbe796"></a><!-- doxytag: member="thread.h::THREAD_WRITE" ref="ad41d2495b7d43e273ff1a457a3dbe796" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define THREAD_WRITE&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00106">106</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="a5b795d4d7156e3e14235062f1307a029"></a><!-- doxytag: member="thread.h::THREAD_WRITE_OFF" ref="a5b795d4d7156e3e14235062f1307a029" args="(thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define THREAD_WRITE_OFF</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="structthread.html">thread</a></td><td>)</td>
          <td>&#160;&#160;&#160;THREAD_OFF(<a class="el" href="structthread.html">thread</a>)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00150">150</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="ad563eafaebb935e4371f38e37ca33b00"></a><!-- doxytag: member="thread.h::THREAD_WRITE_ON" ref="ad563eafaebb935e4371f38e37ca33b00" args="(master, thread, func, arg, sock)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define THREAD_WRITE_ON</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="test__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="structthread.html">thread</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="ospf__nsm_8c.html#a03307f8a561731a5c5657834da57ab11">func</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">arg, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">sock&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keywordflow">do</span> { \
    if (! <a class="code" href="structthread.html">thread</a>) \
      thread = <a class="code" href="thread_8h.html#a8a2f048ba94722b1e88f08254fbd4444">thread_add_write</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="bgp__fsm_8c.html#aad6d5d0fbfe60193366eaab88413f7af">func</a>, arg, sock); \
  } <span class="keywordflow">while</span> (0)
</pre></div>
<p>Definition at line <a class="el" href="thread_8h_source.html#l00128">128</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa5c27f37877fd023590e7c648a5115f5"></a><!-- doxytag: member="thread.h::THREAD_YIELD_TIME_SLOT" ref="aa5c27f37877fd023590e7c648a5115f5" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define THREAD_YIELD_TIME_SLOT&#160;&#160;&#160;10 * 1000L</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00115">115</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<hr/><h2>Typedef Documentation</h2>
<a class="anchor" id="a4389ae97209574331fc146cf4c4804a0"></a><!-- doxytag: member="thread.h::thread_type" ref="a4389ae97209574331fc146cf4c4804a0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef unsigned char <a class="el" href="thread_8h.html#a4389ae97209574331fc146cf4c4804a0">thread_type</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8h_source.html#l00060">60</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>

</div>
</div>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="a64fff521e88ba8b01645c5bb89085b33"></a><!-- doxytag: member="thread.h::quagga_clkid" ref="a64fff521e88ba8b01645c5bb89085b33" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="thread_8h.html#a64fff521e88ba8b01645c5bb89085b33">quagga_clkid</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="a64fff521e88ba8b01645c5bb89085b33a67f083bc4380ca6005b181636ccfdb45"></a><!-- doxytag: member="QUAGGA_CLK_REALTIME" ref="a64fff521e88ba8b01645c5bb89085b33a67f083bc4380ca6005b181636ccfdb45" args="" -->QUAGGA_CLK_REALTIME</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a64fff521e88ba8b01645c5bb89085b33a7f92aaa461f13c163b13f96085eb3cd9"></a><!-- doxytag: member="QUAGGA_CLK_MONOTONIC" ref="a64fff521e88ba8b01645c5bb89085b33a7f92aaa461f13c163b13f96085eb3cd9" args="" -->QUAGGA_CLK_MONOTONIC</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a64fff521e88ba8b01645c5bb89085b33a85be371def155525e04e8bf87dc9e8c5"></a><!-- doxytag: member="QUAGGA_CLK_REALTIME_STABILISED" ref="a64fff521e88ba8b01645c5bb89085b33a85be371def155525e04e8bf87dc9e8c5" args="" -->QUAGGA_CLK_REALTIME_STABILISED</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="thread_8h_source.html#l00098">98</a> of file <a class="el" href="thread_8h_source.html">thread.h</a>.</p>
<div class="fragment"><pre class="fragment">                  {
  <a class="code" href="thread_8h.html#a64fff521e88ba8b01645c5bb89085b33a67f083bc4380ca6005b181636ccfdb45">QUAGGA_CLK_REALTIME</a> = 0,  <span class="comment">/* ala gettimeofday() */</span>
  <a class="code" href="thread_8h.html#a64fff521e88ba8b01645c5bb89085b33a7f92aaa461f13c163b13f96085eb3cd9">QUAGGA_CLK_MONOTONIC</a>,     <span class="comment">/* monotonic, against an indeterminate base */</span>
  <a class="code" href="thread_8h.html#a64fff521e88ba8b01645c5bb89085b33a85be371def155525e04e8bf87dc9e8c5">QUAGGA_CLK_REALTIME_STABILISED</a>, <span class="comment">/* like realtime, but non-decrementing */</span>
};
</pre></div>
</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="af4b0bc80af8195e723822c602c0871fe"></a><!-- doxytag: member="thread.h::funcname_thread_add_background" ref="af4b0bc80af8195e723822c602c0871fe" args="(struct thread_master *, int(*func)(struct thread *), void *arg, long milliseconds_to_delay, const char *funcname)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structthread.html">thread</a>* funcname_thread_add_background </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread__master.html">thread_master</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int(*)(struct <a class="el" href="structthread.html">thread</a> *)&#160;</td>
          <td class="paramname"><em>func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>arg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname"><em>milliseconds_to_delay</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>funcname</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8c_source.html#l00734">734</a> of file <a class="el" href="thread_8c_source.html">thread.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span>timeval trel;
  
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
  
  <span class="keywordflow">if</span> (delay)
    {
      trel.tv_sec = delay / 1000;
      trel.tv_usec = 1000*(delay % 1000);
    }
  <span class="keywordflow">else</span>
    {
      trel.tv_sec = 0;
      trel.tv_usec = 0;
    }

  <span class="keywordflow">return</span> <a class="code" href="thread_8c.html#a33a0267163a9ed50a6b77946c1dd32ae">funcname_thread_add_timer_timeval</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, <a class="code" href="bgp__fsm_8c.html#aad6d5d0fbfe60193366eaab88413f7af">func</a>, <a class="code" href="thread_8h.html#a6fb1be054d6fa35a36b702d10f29e1d2">THREAD_BACKGROUND</a>,
                                            arg, &amp;trel, funcname);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a95b7ac363e84c154a278f89f96fd2065"></a><!-- doxytag: member="thread.h::funcname_thread_add_event" ref="a95b7ac363e84c154a278f89f96fd2065" args="(struct thread_master *, int(*)(struct thread *), void *, int, const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structthread.html">thread</a>* funcname_thread_add_event </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread__master.html">thread_master</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int(*)(struct <a class="el" href="structthread.html">thread</a> *)&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8c_source.html#l00760">760</a> of file <a class="el" href="thread_8c_source.html">thread.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>;

  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);

  thread = <a class="code" href="thread_8c.html#a697b2cd5a5e642a7dd8c057a1fbdd731">thread_get</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, <a class="code" href="thread_8h.html#ab1afef4a6988a13eec3423a9f242981e">THREAD_EVENT</a>, <a class="code" href="bgp__fsm_8c.html#aad6d5d0fbfe60193366eaab88413f7af">func</a>, <a class="code" href="structthread.html#a7b848d8a51a51c7c499c4bd2caa78019">arg</a>, <a class="code" href="structthread.html#a851c462ab2ca11691f7a75f0e55cb571">funcname</a>);
  thread-&gt;<a class="code" href="structthread.html#abc1b9676415f5150d5b49e7654d4cb27">u</a>.<a class="code" href="structthread.html#a6227c63214eccba112bd640ebdde2753">val</a> = <a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>;
  <a class="code" href="thread_8c.html#a34a5369ec2363172d0e3ca1722c6af89">thread_list_add</a> (&amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;event, thread);

  <span class="keywordflow">return</span> thread;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a30a940b047f6a90b8a2bfa9214c17c39"></a><!-- doxytag: member="thread.h::funcname_thread_add_read" ref="a30a940b047f6a90b8a2bfa9214c17c39" args="(struct thread_master *, int(*)(struct thread *), void *, int, const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structthread.html">thread</a>* funcname_thread_add_read </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread__master.html">thread_master</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int(*)(struct <a class="el" href="structthread.html">thread</a> *)&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8c_source.html#l00613">613</a> of file <a class="el" href="thread_8c_source.html">thread.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>;

  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);

  <span class="keywordflow">if</span> (FD_ISSET (<a class="code" href="structthread.html#a5b5c1177fc28d6b42b27de2bc7559b34">fd</a>, &amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;readfd))
    {
      <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_WARNING, <span class="stringliteral">&quot;There is already read fd [%d]&quot;</span>, <a class="code" href="structthread.html#a5b5c1177fc28d6b42b27de2bc7559b34">fd</a>);
      <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }

  thread = <a class="code" href="thread_8c.html#a697b2cd5a5e642a7dd8c057a1fbdd731">thread_get</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, <a class="code" href="thread_8h.html#af8046342c963c1e68e91ffa96921849b">THREAD_READ</a>, <a class="code" href="bgp__fsm_8c.html#aad6d5d0fbfe60193366eaab88413f7af">func</a>, <a class="code" href="structthread.html#a7b848d8a51a51c7c499c4bd2caa78019">arg</a>, <a class="code" href="structthread.html#a851c462ab2ca11691f7a75f0e55cb571">funcname</a>);
  FD_SET (<a class="code" href="structthread.html#a5b5c1177fc28d6b42b27de2bc7559b34">fd</a>, &amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;readfd);
  thread-&gt;<a class="code" href="structthread.html#abc1b9676415f5150d5b49e7654d4cb27">u</a>.<a class="code" href="structthread.html#a5b5c1177fc28d6b42b27de2bc7559b34">fd</a> = <a class="code" href="structthread.html#a5b5c1177fc28d6b42b27de2bc7559b34">fd</a>;
  <a class="code" href="thread_8c.html#a34a5369ec2363172d0e3ca1722c6af89">thread_list_add</a> (&amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;read, thread);

  <span class="keywordflow">return</span> thread;
}
</pre></div>
</div>
</div>
<a class="anchor" id="afdc054494ac91b54f00357e7daff56e2"></a><!-- doxytag: member="thread.h::funcname_thread_add_timer" ref="afdc054494ac91b54f00357e7daff56e2" args="(struct thread_master *, int(*)(struct thread *), void *, long, const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structthread.html">thread</a>* funcname_thread_add_timer </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread__master.html">thread_master</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int(*)(struct <a class="el" href="structthread.html">thread</a> *)&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8c_source.html#l00700">700</a> of file <a class="el" href="thread_8c_source.html">thread.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span>timeval trel;

  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);

  trel.tv_sec = <a class="code" href="random_8c.html#ac71a666826c99a00c3d91f6c1c28dd26">timer</a>;
  trel.tv_usec = 0;

  <span class="keywordflow">return</span> <a class="code" href="thread_8c.html#a33a0267163a9ed50a6b77946c1dd32ae">funcname_thread_add_timer_timeval</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, <a class="code" href="bgp__fsm_8c.html#aad6d5d0fbfe60193366eaab88413f7af">func</a>, <a class="code" href="thread_8h.html#a5bb13cc31455e697c8352a922110170c">THREAD_TIMER</a>, arg, 
                                            &amp;trel, funcname);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a78c45d34e79277f01fcc52d2e12d6ccc"></a><!-- doxytag: member="thread.h::funcname_thread_add_timer_msec" ref="a78c45d34e79277f01fcc52d2e12d6ccc" args="(struct thread_master *, int(*)(struct thread *), void *, long, const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structthread.html">thread</a>* funcname_thread_add_timer_msec </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread__master.html">thread_master</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int(*)(struct <a class="el" href="structthread.html">thread</a> *)&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8c_source.html#l00717">717</a> of file <a class="el" href="thread_8c_source.html">thread.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span>timeval trel;

  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);

  trel.tv_sec = <a class="code" href="random_8c.html#ac71a666826c99a00c3d91f6c1c28dd26">timer</a> / 1000;
  trel.tv_usec = 1000*(<a class="code" href="random_8c.html#ac71a666826c99a00c3d91f6c1c28dd26">timer</a> % 1000);

  <span class="keywordflow">return</span> <a class="code" href="thread_8c.html#a33a0267163a9ed50a6b77946c1dd32ae">funcname_thread_add_timer_timeval</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, <a class="code" href="bgp__fsm_8c.html#aad6d5d0fbfe60193366eaab88413f7af">func</a>, <a class="code" href="thread_8h.html#a5bb13cc31455e697c8352a922110170c">THREAD_TIMER</a>, 
                                            arg, &amp;trel, funcname);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a188b2de6c009ef3ecf04171c3bde22ea"></a><!-- doxytag: member="thread.h::funcname_thread_add_write" ref="a188b2de6c009ef3ecf04171c3bde22ea" args="(struct thread_master *, int(*)(struct thread *), void *, int, const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structthread.html">thread</a>* funcname_thread_add_write </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread__master.html">thread_master</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int(*)(struct <a class="el" href="structthread.html">thread</a> *)&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8c_source.html#l00636">636</a> of file <a class="el" href="thread_8c_source.html">thread.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>;

  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);

  <span class="keywordflow">if</span> (FD_ISSET (<a class="code" href="structthread.html#a5b5c1177fc28d6b42b27de2bc7559b34">fd</a>, &amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;writefd))
    {
      <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_WARNING, <span class="stringliteral">&quot;There is already write fd [%d]&quot;</span>, <a class="code" href="structthread.html#a5b5c1177fc28d6b42b27de2bc7559b34">fd</a>);
      <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }

  thread = <a class="code" href="thread_8c.html#a697b2cd5a5e642a7dd8c057a1fbdd731">thread_get</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, <a class="code" href="thread_8h.html#ad41d2495b7d43e273ff1a457a3dbe796">THREAD_WRITE</a>, <a class="code" href="bgp__fsm_8c.html#aad6d5d0fbfe60193366eaab88413f7af">func</a>, <a class="code" href="structthread.html#a7b848d8a51a51c7c499c4bd2caa78019">arg</a>, <a class="code" href="structthread.html#a851c462ab2ca11691f7a75f0e55cb571">funcname</a>);
  FD_SET (<a class="code" href="structthread.html#a5b5c1177fc28d6b42b27de2bc7559b34">fd</a>, &amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;writefd);
  thread-&gt;<a class="code" href="structthread.html#abc1b9676415f5150d5b49e7654d4cb27">u</a>.<a class="code" href="structthread.html#a5b5c1177fc28d6b42b27de2bc7559b34">fd</a> = <a class="code" href="structthread.html#a5b5c1177fc28d6b42b27de2bc7559b34">fd</a>;
  <a class="code" href="thread_8c.html#a34a5369ec2363172d0e3ca1722c6af89">thread_list_add</a> (&amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;write, thread);

  <span class="keywordflow">return</span> thread;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af38ec38562af99fa9d986651f941a9e8"></a><!-- doxytag: member="thread.h::funcname_thread_execute" ref="af38ec38562af99fa9d986651f941a9e8" args="(struct thread_master *, int(*)(struct thread *), void *, int, const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structthread.html">thread</a>* funcname_thread_execute </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread__master.html">thread_master</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int(*)(struct <a class="el" href="structthread.html">thread</a> *)&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8c_source.html#l01106">1106</a> of file <a class="el" href="thread_8c_source.html">thread.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structthread.html">thread</a> dummy; 

  memset (&amp;dummy, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a>));

  dummy.type = <a class="code" href="thread_8h.html#ab1afef4a6988a13eec3423a9f242981e">THREAD_EVENT</a>;
  dummy.add_type = <a class="code" href="thread_8h.html#ae1829dd93324485f92f05bab573e4ec3">THREAD_EXECUTE</a>;
  dummy.master = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  dummy.func = <a class="code" href="bgp__fsm_8c.html#aad6d5d0fbfe60193366eaab88413f7af">func</a>;
  dummy.arg = <a class="code" href="structthread.html#a7b848d8a51a51c7c499c4bd2caa78019">arg</a>;
  dummy.u.val = <a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>;
  dummy.funcname = <a class="code" href="thread_8c.html#a9f162b99efad06ceff2b0c53c0b4b8ed">strip_funcname</a> (<a class="code" href="structthread.html#a851c462ab2ca11691f7a75f0e55cb571">funcname</a>);
  <a class="code" href="thread_8c.html#aebb1b7a2cf2a872d69ab8c1e6f788744">thread_call</a> (&amp;dummy);

  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba1cac7507867f49bd0bd3615f09e74f59">MTYPE_THREAD_FUNCNAME</a>, dummy.funcname);

  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a7046ff49f5ca0b750a6d5c935bc5de58"></a><!-- doxytag: member="thread.h::quagga_gettime" ref="a7046ff49f5ca0b750a6d5c935bc5de58" args="(enum quagga_clkid, struct timeval *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int quagga_gettime </td>
          <td>(</td>
          <td class="paramtype">enum&#160;</td>
          <td class="paramname"><em>quagga_clkid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct timeval *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8c_source.html#l00182">182</a> of file <a class="el" href="thread_8c_source.html">thread.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">switch</span> (clkid)
    {
      <span class="keywordflow">case</span> <a class="code" href="thread_8h.html#a64fff521e88ba8b01645c5bb89085b33a67f083bc4380ca6005b181636ccfdb45">QUAGGA_CLK_REALTIME</a>:
        <span class="keywordflow">return</span> <a class="code" href="thread_8c.html#ad51eb53ab114e61bd4086ccafb31d624">quagga_gettimeofday</a> (tv);
      <span class="keywordflow">case</span> <a class="code" href="thread_8h.html#a64fff521e88ba8b01645c5bb89085b33a7f92aaa461f13c163b13f96085eb3cd9">QUAGGA_CLK_MONOTONIC</a>:
        <span class="keywordflow">return</span> <a class="code" href="thread_8c.html#a6162924e42c739da2dbd616d0f3e414a">quagga_get_relative</a> (tv);
      <span class="keywordflow">case</span> <a class="code" href="thread_8h.html#a64fff521e88ba8b01645c5bb89085b33a85be371def155525e04e8bf87dc9e8c5">QUAGGA_CLK_REALTIME_STABILISED</a>:
        <a class="code" href="thread_8c.html#a7ca664cce78e66607cdcfebaf94ab986">quagga_real_stabilised</a> (tv);
        <span class="keywordflow">return</span> 0;
      <span class="keywordflow">default</span>:
        errno = EINVAL;
        <span class="keywordflow">return</span> -1;
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a351c4c3fda17ce006c119a3cda49aa37"></a><!-- doxytag: member="thread.h::quagga_time" ref="a351c4c3fda17ce006c119a3cda49aa37" args="(time_t *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">time_t quagga_time </td>
          <td>(</td>
          <td class="paramtype">time_t *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8c_source.html#l00203">203</a> of file <a class="el" href="thread_8c_source.html">thread.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span>timeval tv;
  <a class="code" href="thread_8c.html#a7ca664cce78e66607cdcfebaf94ab986">quagga_real_stabilised</a> (&amp;tv);
  <span class="keywordflow">if</span> (<a class="code" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>)
    *<a class="code" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a> = tv.tv_sec;
  <span class="keywordflow">return</span> tv.tv_sec;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a010d58e49a3c74ae856d5cd111f7eb62"></a><!-- doxytag: member="thread.h::recent_relative_time" ref="a010d58e49a3c74ae856d5cd111f7eb62" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct timeval recent_relative_time </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8c_source.html#l00214">214</a> of file <a class="el" href="thread_8c_source.html">thread.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="thread_8c.html#abda4476ec5465f81c34ecc0d4f9e713b">relative_time</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a7215c1965c3fa03c2eca7073e2b47a0b"></a><!-- doxytag: member="thread.h::thread_call" ref="a7215c1965c3fa03c2eca7073e2b47a0b" args="(struct thread *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void thread_call </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8c_source.html#l01045">1045</a> of file <a class="el" href="thread_8c_source.html">thread.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> realtime, cputime;
  <a class="code" href="thread_8h.html#ae80bba1eb296573455cd5885ba8a52ad">RUSAGE_T</a> ru;

 <span class="comment">/* Cache a pointer to the relevant cpu history thread, if the thread</span>
<span class="comment">  * does not have it yet.</span>
<span class="comment">  *</span>
<span class="comment">  * Callers submitting &#39;dummy threads&#39; hence must take care that</span>
<span class="comment">  * thread-&gt;cpu is NULL</span>
<span class="comment">  */</span>
  <span class="keywordflow">if</span> (!<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a82b93bbb5529fdb1bd41cf9a3192f2df">hist</a>)
    {
      <span class="keyword">struct </span><a class="code" href="structcpu__thread__history.html">cpu_thread_history</a> tmp;
      
      tmp.<a class="code" href="structcpu__thread__history.html#a18dec9f26bd2312120405e531f1cda46">func</a> = <a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#ad581d44872a5a87a2d44169509a32527">func</a>;
      tmp.funcname = <a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a851c462ab2ca11691f7a75f0e55cb571">funcname</a>;
      
      <a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a82b93bbb5529fdb1bd41cf9a3192f2df">hist</a> = <a class="code" href="hash_8c.html#ab0bb31bd6c883d6563930341dccedd22">hash_get</a> (<a class="code" href="thread_8c.html#a1d43d0f6cd528b5623ce986867eb8c39">cpu_record</a>, &amp;tmp, 
                    (<span class="keywordtype">void</span> * (*) (<span class="keywordtype">void</span> *))<a class="code" href="thread_8c.html#a71b5dc1d90fa10bb18e354a8be3a1b6c">cpu_record_hash_alloc</a>);
    }

  <a class="code" href="thread_8h.html#a023e544a82cd098fc592b46066a7fa47">GETRUSAGE</a> (&amp;<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#ad456989e3d9aef00cea85cd189127572">ru</a>);

  (*<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#ad581d44872a5a87a2d44169509a32527">func</a>) (<a class="code" href="structthread.html">thread</a>);

  <a class="code" href="thread_8h.html#a023e544a82cd098fc592b46066a7fa47">GETRUSAGE</a> (&amp;ru);

  realtime = <a class="code" href="thread_8c.html#ac1c4b7776745c9e3a9c77f136123c753">thread_consumed_time</a> (&amp;ru, &amp;<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#ad456989e3d9aef00cea85cd189127572">ru</a>, &amp;cputime);
  <a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a82b93bbb5529fdb1bd41cf9a3192f2df">hist</a>-&gt;<a class="code" href="structcpu__thread__history.html#a12e1cc6906dd646458a8998a295f2af4">real</a>.<a class="code" href="structcpu__thread__history_1_1time__stats.html#a0dbf23378ec65468697175515e238c67">total</a> += realtime;
  <span class="keywordflow">if</span> (<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a82b93bbb5529fdb1bd41cf9a3192f2df">hist</a>-&gt;<a class="code" href="structcpu__thread__history.html#a12e1cc6906dd646458a8998a295f2af4">real</a>.<a class="code" href="structcpu__thread__history_1_1time__stats.html#af85150c5998c00f5697eeeb82eab31f3">max</a> &lt; realtime)
    <a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a82b93bbb5529fdb1bd41cf9a3192f2df">hist</a>-&gt;<a class="code" href="structcpu__thread__history.html#a12e1cc6906dd646458a8998a295f2af4">real</a>.<a class="code" href="structcpu__thread__history_1_1time__stats.html#af85150c5998c00f5697eeeb82eab31f3">max</a> = realtime;
<span class="preprocessor">#ifdef HAVE_RUSAGE</span>
<span class="preprocessor"></span>  <a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a82b93bbb5529fdb1bd41cf9a3192f2df">hist</a>-&gt;cpu.total += cputime;
  <span class="keywordflow">if</span> (<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a82b93bbb5529fdb1bd41cf9a3192f2df">hist</a>-&gt;cpu.max &lt; cputime)
    <a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a82b93bbb5529fdb1bd41cf9a3192f2df">hist</a>-&gt;cpu.max = cputime;
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>
  ++(<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a82b93bbb5529fdb1bd41cf9a3192f2df">hist</a>-&gt;<a class="code" href="structcpu__thread__history.html#a344e92c5b109df5214bcc1e0584f3380">total_calls</a>);
  <a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a82b93bbb5529fdb1bd41cf9a3192f2df">hist</a>-&gt;<a class="code" href="structcpu__thread__history.html#a5ffd9ebcf11e157d0f16f37bf406d79f">types</a> |= (1 &lt;&lt; <a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#ab4c8d35109cfc7c65b19ad049928a60b">add_type</a>);

<span class="preprocessor">#ifdef CONSUMED_TIME_CHECK</span>
<span class="preprocessor"></span>  <span class="keywordflow">if</span> (realtime &gt; CONSUMED_TIME_CHECK)
    {
      <span class="comment">/*</span>
<span class="comment">       * We have a CPU Hog on our hands.</span>
<span class="comment">       * Whinge about it now, so we&#39;re aware this is yet another task</span>
<span class="comment">       * to fix.</span>
<span class="comment">       */</span>
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;SLOW THREAD: task %s (%lx) ran for %lums (cpu time %lums)&quot;</span>,
         <a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a851c462ab2ca11691f7a75f0e55cb571">funcname</a>,
         (<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>) <a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#ad581d44872a5a87a2d44169509a32527">func</a>,
         realtime/1000, cputime/1000);
    }
<span class="preprocessor">#endif </span><span class="comment">/* CONSUMED_TIME_CHECK */</span>

  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba1cac7507867f49bd0bd3615f09e74f59">MTYPE_THREAD_FUNCNAME</a>, <a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a851c462ab2ca11691f7a75f0e55cb571">funcname</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4cfb6c4bc801cd7d9f1080b883b6fd7b"></a><!-- doxytag: member="thread.h::thread_cancel" ref="a4cfb6c4bc801cd7d9f1080b883b6fd7b" args="(struct thread *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void thread_cancel </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8c_source.html#l00776">776</a> of file <a class="el" href="thread_8c_source.html">thread.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structthread__list.html">thread_list</a> *<a class="code" href="structlist.html">list</a>;
  
  <span class="keywordflow">switch</span> (<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a320d2bbfb15389d992200373fd5941b6">type</a>)
    {
    <span class="keywordflow">case</span> <a class="code" href="thread_8h.html#af8046342c963c1e68e91ffa96921849b">THREAD_READ</a>:
      <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (FD_ISSET (<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#abc1b9676415f5150d5b49e7654d4cb27">u</a>.<a class="code" href="structthread.html#a5b5c1177fc28d6b42b27de2bc7559b34">fd</a>, &amp;<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a35927fd9bd70011aa35c263e55dfe3fb">master</a>-&gt;<a class="code" href="structthread__master.html#a041945b4b8d00638874adf1c9f3586de">readfd</a>));
      FD_CLR (<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#abc1b9676415f5150d5b49e7654d4cb27">u</a>.<a class="code" href="structthread.html#a5b5c1177fc28d6b42b27de2bc7559b34">fd</a>, &amp;<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a35927fd9bd70011aa35c263e55dfe3fb">master</a>-&gt;<a class="code" href="structthread__master.html#a041945b4b8d00638874adf1c9f3586de">readfd</a>);
      list = &amp;<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a35927fd9bd70011aa35c263e55dfe3fb">master</a>-&gt;<a class="code" href="structthread__master.html#a3b1f913f0b359bcb32e2b655ea131199">read</a>;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="thread_8h.html#ad41d2495b7d43e273ff1a457a3dbe796">THREAD_WRITE</a>:
      <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (FD_ISSET (<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#abc1b9676415f5150d5b49e7654d4cb27">u</a>.<a class="code" href="structthread.html#a5b5c1177fc28d6b42b27de2bc7559b34">fd</a>, &amp;<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a35927fd9bd70011aa35c263e55dfe3fb">master</a>-&gt;<a class="code" href="structthread__master.html#a61cfb81a258d2f6ae143748d9d6e12eb">writefd</a>));
      FD_CLR (<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#abc1b9676415f5150d5b49e7654d4cb27">u</a>.<a class="code" href="structthread.html#a5b5c1177fc28d6b42b27de2bc7559b34">fd</a>, &amp;<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a35927fd9bd70011aa35c263e55dfe3fb">master</a>-&gt;<a class="code" href="structthread__master.html#a61cfb81a258d2f6ae143748d9d6e12eb">writefd</a>);
      list = &amp;<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a35927fd9bd70011aa35c263e55dfe3fb">master</a>-&gt;<a class="code" href="structthread__master.html#a901421a159d593ead924d51b1b2aa357">write</a>;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="thread_8h.html#a5bb13cc31455e697c8352a922110170c">THREAD_TIMER</a>:
      list = &amp;<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a35927fd9bd70011aa35c263e55dfe3fb">master</a>-&gt;<a class="code" href="structthread__master.html#a35d4b90764702c33343c1f01dee5c46c">timer</a>;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="thread_8h.html#ab1afef4a6988a13eec3423a9f242981e">THREAD_EVENT</a>:
      list = &amp;<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a35927fd9bd70011aa35c263e55dfe3fb">master</a>-&gt;<a class="code" href="structthread__master.html#adfcfea9f023609f5bd317fe64e9cb67f">event</a>;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="thread_8h.html#a0c4e66d753f8248311ba53a1d8ed49d3">THREAD_READY</a>:
      list = &amp;<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a35927fd9bd70011aa35c263e55dfe3fb">master</a>-&gt;<a class="code" href="structthread__master.html#a0d1d52d2b17ab5ab2c972a0a9b02f2fe">ready</a>;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="thread_8h.html#a6fb1be054d6fa35a36b702d10f29e1d2">THREAD_BACKGROUND</a>:
      list = &amp;<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a35927fd9bd70011aa35c263e55dfe3fb">master</a>-&gt;<a class="code" href="structthread__master.html#a895cd6f34239c81a7d99b023d8fb6ccc">background</a>;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">default</span>:
      <span class="keywordflow">return</span>;
      <span class="keywordflow">break</span>;
    }
  <a class="code" href="thread_8c.html#ab7535e35cab29df426182082f6bf3092">thread_list_delete</a> (list, <a class="code" href="structthread.html">thread</a>);
  <a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a320d2bbfb15389d992200373fd5941b6">type</a> = <a class="code" href="thread_8h.html#ab0c59d8f607e983eb887017d604a80c9">THREAD_UNUSED</a>;
  <a class="code" href="thread_8c.html#ac63b1e96ac90f51c686ba3c442abb975">thread_add_unuse</a> (<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#a35927fd9bd70011aa35c263e55dfe3fb">master</a>, <a class="code" href="structthread.html">thread</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a03c9913936520714f5a37897d9fb6ac8"></a><!-- doxytag: member="thread.h::thread_cancel_event" ref="a03c9913936520714f5a37897d9fb6ac8" args="(struct thread_master *, void *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int thread_cancel_event </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread__master.html">thread_master</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8c_source.html#l00815">815</a> of file <a class="el" href="thread_8c_source.html">thread.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> ret = 0;
  <span class="keyword">struct </span><a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>;

  thread = <a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;event.head;
  <span class="keywordflow">while</span> (thread)
    {
      <span class="keyword">struct </span>thread *<a class="code" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>;

      t = thread;
      thread = t-&gt;<a class="code" href="structthread.html#aa67a172fbb025a2d6d93bf012d9883cc">next</a>;

      <span class="keywordflow">if</span> (t-&gt;<a class="code" href="structthread.html#a7b848d8a51a51c7c499c4bd2caa78019">arg</a> == <a class="code" href="structthread.html#a7b848d8a51a51c7c499c4bd2caa78019">arg</a>)
        {
          ret++;
          <a class="code" href="thread_8c.html#ab7535e35cab29df426182082f6bf3092">thread_list_delete</a> (&amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;event, t);
          t-&gt;<a class="code" href="structthread.html#a320d2bbfb15389d992200373fd5941b6">type</a> = <a class="code" href="thread_8h.html#ab0c59d8f607e983eb887017d604a80c9">THREAD_UNUSED</a>;
          <a class="code" href="thread_8c.html#ac63b1e96ac90f51c686ba3c442abb975">thread_add_unuse</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, t);
        }
    }
  <span class="keywordflow">return</span> ret;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac8356a0c3709840382fe329e93aa23bd"></a><!-- doxytag: member="thread.h::thread_consumed_time" ref="ac8356a0c3709840382fe329e93aa23bd" args="(RUSAGE_T *after, RUSAGE_T *before, unsigned long *cpu_time_elapsed)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long thread_consumed_time </td>
          <td>(</td>
          <td class="paramtype">RUSAGE_T *&#160;</td>
          <td class="paramname"><em>after</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">RUSAGE_T *&#160;</td>
          <td class="paramname"><em>before</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long *&#160;</td>
          <td class="paramname"><em>cpu_time_elapsed</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8c_source.html#l00994">994</a> of file <a class="el" href="thread_8c_source.html">thread.c</a>.</p>
<div class="fragment"><pre class="fragment">{
<span class="preprocessor">#ifdef HAVE_RUSAGE</span>
<span class="preprocessor"></span>  <span class="comment">/* This is &#39;user + sys&#39; time.  */</span>
  *cputime = <a class="code" href="thread_8c.html#af2615a326d45637b285f5f1e871f7cfb">timeval_elapsed</a> (now-&gt;cpu.ru_utime, start-&gt;cpu.ru_utime) +
         <a class="code" href="thread_8c.html#af2615a326d45637b285f5f1e871f7cfb">timeval_elapsed</a> (now-&gt;cpu.ru_stime, start-&gt;cpu.ru_stime);
<span class="preprocessor">#else</span>
<span class="preprocessor"></span>  *cputime = 0;
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_RUSAGE */</span>
  <span class="keywordflow">return</span> <a class="code" href="thread_8c.html#af2615a326d45637b285f5f1e871f7cfb">timeval_elapsed</a> (now-&gt;real, start-&gt;real);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a0a427e4c3c092149a1fb0d523fa49b16"></a><!-- doxytag: member="thread.h::thread_fetch" ref="a0a427e4c3c092149a1fb0d523fa49b16" args="(struct thread_master *, struct thread *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structthread.html">thread</a>* thread_fetch </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread__master.html">thread_master</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8c_source.html#l00908">908</a> of file <a class="el" href="thread_8c_source.html">thread.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>;
  fd_set readfd;
  fd_set writefd;
  fd_set exceptfd;
  <span class="keyword">struct </span>timeval timer_val;
  <span class="keyword">struct </span>timeval timer_val_bg;
  <span class="keyword">struct </span>timeval *timer_wait;
  <span class="keyword">struct </span>timeval *timer_wait_bg;

  <span class="keywordflow">while</span> (1)
    {
      <span class="keywordtype">int</span> <a class="code" href="bgp__open_8h.html#ab4570498c4316aa5f7b4852c778b3320">num</a> = 0;
      
      <span class="comment">/* Signals are highest priority */</span>
      <a class="code" href="sigevent_8c.html#ab6ff932a96b2e6e71c837feb570ec0b5">quagga_sigevent_process</a> ();
       
      <span class="comment">/* Normal event are the next highest priority.  */</span>
      <span class="keywordflow">if</span> ((thread = <a class="code" href="thread_8c.html#ace0fd9744c01d7c4f276a455ae274a5a">thread_trim_head</a> (&amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;event)) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
        <span class="keywordflow">return</span> <a class="code" href="thread_8c.html#a72b9f9c754a9739bdf4344e9a014e7f9">thread_run</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, thread, fetch);
      
      <span class="comment">/* If there are any ready threads from previous scheduler runs,</span>
<span class="comment">       * process top of them.  </span>
<span class="comment">       */</span>
      <span class="keywordflow">if</span> ((thread = <a class="code" href="thread_8c.html#ace0fd9744c01d7c4f276a455ae274a5a">thread_trim_head</a> (&amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;ready)) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
        <span class="keywordflow">return</span> <a class="code" href="thread_8c.html#a72b9f9c754a9739bdf4344e9a014e7f9">thread_run</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, thread, fetch);
      
      <span class="comment">/* Structure copy.  */</span>
      readfd = <a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;readfd;
      writefd = <a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;writefd;
      exceptfd = <a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;exceptfd;
      
      <span class="comment">/* Calculate select wait timer if nothing else to do */</span>
      <a class="code" href="thread_8c.html#a6162924e42c739da2dbd616d0f3e414a">quagga_get_relative</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
      timer_wait = <a class="code" href="thread_8c.html#aa4c40f0b110e2eced017dca60bba55fb">thread_timer_wait</a> (&amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;timer, &amp;timer_val);
      timer_wait_bg = <a class="code" href="thread_8c.html#aa4c40f0b110e2eced017dca60bba55fb">thread_timer_wait</a> (&amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;background, &amp;timer_val_bg);
      
      <span class="keywordflow">if</span> (timer_wait_bg &amp;&amp;
      (!timer_wait || (<a class="code" href="thread_8c.html#aa1ca10e55c5d63c146011c08645a758f">timeval_cmp</a> (*timer_wait, *timer_wait_bg) &gt; 0)))
    timer_wait = timer_wait_bg;
      
      num = select (FD_SETSIZE, &amp;readfd, &amp;writefd, &amp;exceptfd, timer_wait);
      
      <span class="comment">/* Signals should get quick treatment */</span>
      <span class="keywordflow">if</span> (num &lt; 0)
        {
          <span class="keywordflow">if</span> (errno == EINTR)
            <span class="keywordflow">continue</span>; <span class="comment">/* signal received - process it */</span>
          <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;select() error: %s&quot;</span>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
            <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
        }

      <span class="comment">/* Check foreground timers.  Historically, they have had higher</span>
<span class="comment">         priority than I/O threads, so let&#39;s push them onto the ready</span>
<span class="comment">     list in front of the I/O threads. */</span>
      <a class="code" href="thread_8c.html#a6162924e42c739da2dbd616d0f3e414a">quagga_get_relative</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
      <a class="code" href="thread_8c.html#a1bc5297ffd699c2e3c4e346e9d80746b">thread_timer_process</a> (&amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;timer, &amp;<a class="code" href="thread_8c.html#abda4476ec5465f81c34ecc0d4f9e713b">relative_time</a>);
      
      <span class="comment">/* Got IO, process it */</span>
      <span class="keywordflow">if</span> (num &gt; 0)
        {
          <span class="comment">/* Normal priority read thead. */</span>
          <a class="code" href="thread_8c.html#ab82b84188675e0ad44ed5a2ab4b69b23">thread_process_fd</a> (&amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;read, &amp;readfd, &amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;readfd);
          <span class="comment">/* Write thead. */</span>
          <a class="code" href="thread_8c.html#ab82b84188675e0ad44ed5a2ab4b69b23">thread_process_fd</a> (&amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;write, &amp;writefd, &amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;writefd);
        }

<span class="preprocessor">#if 0</span>
<span class="preprocessor"></span>      <span class="comment">/* If any threads were made ready above (I/O or foreground timer),</span>
<span class="comment">         perhaps we should avoid adding background timers to the ready</span>
<span class="comment">     list at this time.  If this is code is uncommented, then background</span>
<span class="comment">     timer threads will not run unless there is nothing else to do. */</span>
      <span class="keywordflow">if</span> ((thread = <a class="code" href="thread_8c.html#ace0fd9744c01d7c4f276a455ae274a5a">thread_trim_head</a> (&amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;ready)) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
        <span class="keywordflow">return</span> <a class="code" href="thread_8c.html#a72b9f9c754a9739bdf4344e9a014e7f9">thread_run</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, thread, fetch);
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>
      <span class="comment">/* Background timer/events, lowest priority */</span>
      <a class="code" href="thread_8c.html#a1bc5297ffd699c2e3c4e346e9d80746b">thread_timer_process</a> (&amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;background, &amp;<a class="code" href="thread_8c.html#abda4476ec5465f81c34ecc0d4f9e713b">relative_time</a>);
      
      <span class="keywordflow">if</span> ((thread = <a class="code" href="thread_8c.html#ace0fd9744c01d7c4f276a455ae274a5a">thread_trim_head</a> (&amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;ready)) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
        <span class="keywordflow">return</span> <a class="code" href="thread_8c.html#a72b9f9c754a9739bdf4344e9a014e7f9">thread_run</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, thread, fetch);
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a476f884cc93ef2b19b42a8eea019bf3d"></a><!-- doxytag: member="thread.h::thread_getrusage" ref="a476f884cc93ef2b19b42a8eea019bf3d" args="(RUSAGE_T *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void thread_getrusage </td>
          <td>(</td>
          <td class="paramtype">RUSAGE_T *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8c_source.html#l01024">1024</a> of file <a class="el" href="thread_8c_source.html">thread.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="thread_8c.html#a6162924e42c739da2dbd616d0f3e414a">quagga_get_relative</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<span class="preprocessor">#ifdef HAVE_RUSAGE</span>
<span class="preprocessor"></span>  getrusage(RUSAGE_SELF, &amp;(r-&gt;cpu));
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>  r-&gt;real = <a class="code" href="thread_8c.html#abda4476ec5465f81c34ecc0d4f9e713b">relative_time</a>;

<span class="preprocessor">#ifdef HAVE_CLOCK_MONOTONIC</span>
<span class="preprocessor"></span>  <span class="comment">/* quagga_get_relative() only updates recent_time if gettimeofday</span>
<span class="comment">   * based, not when using CLOCK_MONOTONIC. As we export recent_time</span>
<span class="comment">   * and guarantee to update it before threads are run...</span>
<span class="comment">   */</span>
  <a class="code" href="thread_8c.html#ad51eb53ab114e61bd4086ccafb31d624">quagga_gettimeofday</a>(&amp;<a class="code" href="thread_8c.html#a9a54ae2e02ed1087c32ce72620a940c8">recent_time</a>);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_CLOCK_MONOTONIC */</span>
}
</pre></div>
</div>
</div>
<a class="anchor" id="a2e57c17fcbd0a0717e8bbcf1d574ae95"></a><!-- doxytag: member="thread.h::thread_master_create" ref="a2e57c17fcbd0a0717e8bbcf1d574ae95" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structthread__master.html">thread_master</a>* thread_master_create </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8c_source.html#l00417">417</a> of file <a class="el" href="thread_8c_source.html">thread.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="thread_8c.html#a1d43d0f6cd528b5623ce986867eb8c39">cpu_record</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) 
    <a class="code" href="thread_8c.html#a1d43d0f6cd528b5623ce986867eb8c39">cpu_record</a> 
      = <a class="code" href="hash_8c.html#a5a114f3e041a28afaf1acfa760728c24">hash_create_size</a> (1011, (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> (*) (<span class="keywordtype">void</span> *))<a class="code" href="thread_8c.html#a1fadceaba2d45cf9cf8430a6bea93a33">cpu_record_hash_key</a>, 
                          (<span class="keywordtype">int</span> (*) (<span class="keyword">const</span> <span class="keywordtype">void</span> *, <span class="keyword">const</span> <span class="keywordtype">void</span> *))<a class="code" href="thread_8c.html#a87716e67cf77adf4ff6aa44fa631719b">cpu_record_hash_cmp</a>);
    
  <span class="keywordflow">return</span> (<span class="keyword">struct</span> <a class="code" href="structthread__master.html">thread_master</a> *) <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba6100532867b009792cd4bcee71cc3a9d">MTYPE_THREAD_MASTER</a>,
                       <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structthread__master.html">thread_master</a>));
}
</pre></div>
</div>
</div>
<a class="anchor" id="a87595d8b2da182b36abcf3909a50fc33"></a><!-- doxytag: member="thread.h::thread_master_free" ref="a87595d8b2da182b36abcf3909a50fc33" args="(struct thread_master *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void thread_master_free </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread__master.html">thread_master</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8c_source.html#l00507">507</a> of file <a class="el" href="thread_8c_source.html">thread.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="thread_8c.html#abced1a0a9a7ebae157bba12a08d3cd9d">thread_list_free</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, &amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;read);
  <a class="code" href="thread_8c.html#abced1a0a9a7ebae157bba12a08d3cd9d">thread_list_free</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, &amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;write);
  <a class="code" href="thread_8c.html#abced1a0a9a7ebae157bba12a08d3cd9d">thread_list_free</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, &amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;timer);
  <a class="code" href="thread_8c.html#abced1a0a9a7ebae157bba12a08d3cd9d">thread_list_free</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, &amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;event);
  <a class="code" href="thread_8c.html#abced1a0a9a7ebae157bba12a08d3cd9d">thread_list_free</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, &amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;ready);
  <a class="code" href="thread_8c.html#abced1a0a9a7ebae157bba12a08d3cd9d">thread_list_free</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, &amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;unuse);
  <a class="code" href="thread_8c.html#abced1a0a9a7ebae157bba12a08d3cd9d">thread_list_free</a> (<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>, &amp;<a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>-&gt;background);
  
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba6100532867b009792cd4bcee71cc3a9d">MTYPE_THREAD_MASTER</a>, <a class="code" href="spgrid_8c.html#a5175b356eac1d83a42608b42a25d00b9">m</a>);

  <span class="keywordflow">if</span> (<a class="code" href="thread_8c.html#a1d43d0f6cd528b5623ce986867eb8c39">cpu_record</a>)
    {
      <a class="code" href="hash_8c.html#aec49275a7c4ae924ed351163af53c8c4">hash_clean</a> (<a class="code" href="thread_8c.html#a1d43d0f6cd528b5623ce986867eb8c39">cpu_record</a>, <a class="code" href="thread_8c.html#a90a7bc07dba1edf14f35aa4d2587f2cd">cpu_record_hash_free</a>);
      <a class="code" href="hash_8c.html#ad0d6074e4b7475f7c249212bb8e67de5">hash_free</a> (<a class="code" href="thread_8c.html#a1d43d0f6cd528b5623ce986867eb8c39">cpu_record</a>);
      <a class="code" href="thread_8c.html#a1d43d0f6cd528b5623ce986867eb8c39">cpu_record</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac7baf880622757f0fb1b1a7bc5fc5cac"></a><!-- doxytag: member="thread.h::thread_should_yield" ref="ac7baf880622757f0fb1b1a7bc5fc5cac" args="(struct thread *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int thread_should_yield </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8c_source.html#l01016">1016</a> of file <a class="el" href="thread_8c_source.html">thread.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="thread_8c.html#a6162924e42c739da2dbd616d0f3e414a">quagga_get_relative</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
  <span class="keywordflow">return</span> (<a class="code" href="thread_8c.html#af2615a326d45637b285f5f1e871f7cfb">timeval_elapsed</a>(<a class="code" href="thread_8c.html#abda4476ec5465f81c34ecc0d4f9e713b">relative_time</a>, <a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#ad456989e3d9aef00cea85cd189127572">ru</a>.real) &gt;
      <a class="code" href="thread_8h.html#aa5c27f37877fd023590e7c648a5115f5">THREAD_YIELD_TIME_SLOT</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad5d0195ce2891fec58253a5cbc35520e"></a><!-- doxytag: member="thread.h::thread_timer_remain_second" ref="ad5d0195ce2891fec58253a5cbc35520e" args="(struct thread *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long thread_timer_remain_second </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8c_source.html#l00545">545</a> of file <a class="el" href="thread_8c_source.html">thread.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="thread_8c.html#a6162924e42c739da2dbd616d0f3e414a">quagga_get_relative</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
  
  <span class="keywordflow">if</span> (<a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#abc1b9676415f5150d5b49e7654d4cb27">u</a>.<a class="code" href="structthread.html#aa2f8884c80d14c6a3be307dd1f08671a">sands</a>.tv_sec - <a class="code" href="thread_8c.html#abda4476ec5465f81c34ecc0d4f9e713b">relative_time</a>.tv_sec &gt; 0)
    <span class="keywordflow">return</span> <a class="code" href="structthread.html">thread</a>-&gt;<a class="code" href="structthread.html#abc1b9676415f5150d5b49e7654d4cb27">u</a>.<a class="code" href="structthread.html#aa2f8884c80d14c6a3be307dd1f08671a">sands</a>.tv_sec - <a class="code" href="thread_8c.html#abda4476ec5465f81c34ecc0d4f9e713b">relative_time</a>.tv_sec;
  <span class="keywordflow">else</span>
    <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<hr/><h2>Variable Documentation</h2>
<a class="anchor" id="a9a54ae2e02ed1087c32ce72620a940c8"></a><!-- doxytag: member="thread.h::recent_time" ref="a9a54ae2e02ed1087c32ce72620a940c8" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct timeval <a class="el" href="thread_8h.html#a9a54ae2e02ed1087c32ce72620a940c8">recent_time</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="thread_8c_source.html#l00034">34</a> of file <a class="el" href="thread_8c_source.html">thread.c</a>.</p>

</div>
</div>
<a class="anchor" id="a63c4edb83677a6357d970e06d49ceaa0"></a><!-- doxytag: member="thread.h::show_thread_cpu_cmd" ref="a63c4edb83677a6357d970e06d49ceaa0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structcmd__element.html">cmd_element</a> <a class="el" href="thread_8h.html#a63c4edb83677a6357d970e06d49ceaa0">show_thread_cpu_cmd</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="thread_8h.html">thread.h</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:25 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
