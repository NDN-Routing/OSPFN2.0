<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: lib/vty.c File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('vty_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#define-members">Defines</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">lib/vty.c File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="zebra_8h_source.html">zebra.h</a>&gt;</code><br/>
<code>#include &quot;<a class="el" href="linklist_8h_source.html">linklist.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="thread_8h_source.html">thread.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="buffer_8h_source.html">buffer.h</a>&quot;</code><br/>
<code>#include &lt;<a class="el" href="version_8h_source.html">lib/version.h</a>&gt;</code><br/>
<code>#include &quot;<a class="el" href="command_8h_source.html">command.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="sockunion_8h_source.html">sockunion.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="memory_8h_source.html">memory.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="str_8h_source.html">str.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="log_8h_source.html">log.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="prefix_8h_source.html">prefix.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="filter_8h_source.html">filter.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="vty_8h_source.html">vty.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="privs_8h_source.html">privs.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="network_8h_source.html">network.h</a>&quot;</code><br/>
<code>#include &lt;arpa/telnet.h&gt;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for vty.c:</div>
<div class="dyncontent">
<div class="center"><img src="vty_8c__incl.png" border="0" usemap="#lib_2vty_8c" alt=""/></div>
<map name="lib_2vty_8c" id="lib_2vty_8c">
<area shape="rect" id="node3" href="zebra_8h.html" title="zebra.h" alt="" coords="1540,80,1607,107"/><area shape="rect" id="node59" href="str_8h.html" title="str.h" alt="" coords="2726,155,2775,181"/><area shape="rect" id="node61" href="linklist_8h.html" title="linklist.h" alt="" coords="3417,229,3487,256"/><area shape="rect" id="node63" href="thread_8h.html" title="thread.h" alt="" coords="2777,229,2849,256"/><area shape="rect" id="node65" href="buffer_8h.html" title="buffer.h" alt="" coords="2902,80,2969,107"/><area shape="rect" id="node67" href="version_8h.html" title="lib/version.h" alt="" coords="2994,80,3088,107"/><area shape="rect" id="node69" href="command_8h.html" title="command.h" alt="" coords="3113,80,3204,107"/><area shape="rect" id="node73" href="vty_8h.html" title="vty.h" alt="" coords="2863,155,2915,181"/><area shape="rect" id="node76" href="log_8h.html" title="log.h" alt="" coords="2874,229,2925,256"/><area shape="rect" id="node81" href="sockunion_8h.html" title="sockunion.h" alt="" coords="3333,155,3427,181"/><area shape="rect" id="node83" href="memory_8h.html" title="memory.h" alt="" coords="3475,80,3557,107"/><area shape="rect" id="node89" href="prefix_8h.html" title="prefix.h" alt="" coords="3331,80,3399,107"/><area shape="rect" id="node92" href="filter_8h.html" title="filter.h" alt="" coords="3582,80,3641,107"/><area shape="rect" id="node98" href="privs_8h.html" title="privs.h" alt="" coords="3666,80,3728,107"/><area shape="rect" id="node100" href="network_8h.html" title="network.h" alt="" coords="3753,80,3836,107"/><area shape="rect" id="node57" href="zassert_8h.html" title="zassert.h" alt="" coords="1739,155,1816,181"/><area shape="rect" id="node71" href="vector_8h.html" title="vector.h" alt="" coords="3128,155,3200,181"/><area shape="rect" id="node79" href="route__types_8h.html" title="lib/route_types.h" alt="" coords="2979,155,3103,181"/><area shape="rect" id="node85" href="memtypes_8h.html" title="lib/memtypes.h" alt="" coords="3453,155,3568,181"/><area shape="rect" id="node94" href="if_8h.html" title="if.h" alt="" coords="3592,155,3632,181"/></map>
</div>
</div>
<p><a href="vty_8c_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)&#160;&#160;&#160;((<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>) - '@')</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#acf239d95250577af6d34d80d70aac760">VTY_NORMAL</a>&#160;&#160;&#160;0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a3aac53820dc12306e1c0d140f1f7bb56">VTY_PRE_ESCAPE</a>&#160;&#160;&#160;1</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#adee5f2176eb8e53a301dd8d0f377251b">VTY_ESCAPE</a>&#160;&#160;&#160;2</td></tr>
<tr><td colspan="2"><h2><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a> { <br/>
&#160;&#160;<a class="el" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea8fd18ac65705a12e09a38d18e47d12ec">VTY_SERV</a>, 
<a class="el" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea9ed3db9f85ae6bdc30382d62bc01a807">VTY_READ</a>, 
<a class="el" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea73e4d70c7cc9c2560723e639332d7f2d">VTY_WRITE</a>, 
<a class="el" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9eada5cbc98f077a6a603d7c200d654042c">VTY_TIMEOUT_RESET</a>, 
<br/>
&#160;&#160;<a class="el" href="zclient_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea826c5318cddea911fefb2c166a4bf509">ZCLIENT_SCHEDULE</a>, 
<a class="el" href="zclient_8c.html#a3b65133bb9997cd1ccf311af0927fc9eab19700a6d070e3835e08add96a1cb3b9">ZCLIENT_READ</a>, 
<a class="el" href="zclient_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea82cf139bec91c753aa00f8861f9d7dcb">ZCLIENT_CONNECT</a>, 
<a class="el" href="ospf__apiserver_8h.html#a3b65133bb9997cd1ccf311af0927fc9eaf7d27b451246b7abd5c02d73f722e711">OSPF_APISERVER_ACCEPT</a>, 
<br/>
&#160;&#160;<a class="el" href="ospf__apiserver_8h.html#a3b65133bb9997cd1ccf311af0927fc9eaafc629f281d14052686b777808801956">OSPF_APISERVER_SYNC_READ</a>, 
<a class="el" href="ospf__apiserver_8h.html#a3b65133bb9997cd1ccf311af0927fc9eaf185e2c50bffd89565783bbd9c063ea2">OSPF_APISERVER_SYNC_WRITE</a>, 
<a class="el" href="ospf__apiserver_8h.html#a3b65133bb9997cd1ccf311af0927fc9ea9b30267095ac2c8eb8c87603dea68133">OSPF_APISERVER_ASYNC_WRITE</a>, 
<a class="el" href="zserv_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea798c01376b108480a941e1e6c69a2a21">ZEBRA_SERV</a>, 
<br/>
&#160;&#160;<a class="el" href="zserv_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea8af81c1e6c659f520a29088128058a2b">ZEBRA_READ</a>, 
<a class="el" href="zserv_8c.html#a3b65133bb9997cd1ccf311af0927fc9eac02643d854489b17e1400ff30e76f7f6">ZEBRA_WRITE</a>
<br/>
 }</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (enum <a class="el" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a>, int, struct <a class="el" href="structvty.html">vty</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>, const char *format,...)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a1c349ce48acd7ad68f569644292d38f1">vty_log_out</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>, const char *level, const char *proto_str, const char *format, struct <a class="el" href="structtimestamp__control.html">timestamp_control</a> *ctl, va_list va)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#ac62e5cb873525019212b99e841899eb3">vty_time_print</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>, int cr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#aa2f6866b034e4a3f2e6b9e354ba46d95">vty_hello</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a90006000348e50410b5a8040b241d411">vty_will_echo</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#aee3608a98cb407de696ed4595c5b5d8d">vty_will_suppress_go_ahead</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a61ebacd84553a2a9ba1012388c8f0f75">vty_dont_linemode</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#ada289c68b5d15981676e822080e04b41">vty_do_window_size</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structvty.html">vty</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a5761c76c7eaf421587052c372034cd57">vty_new</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a819a97da4f2899ac41493be8c6b0e238">vty_auth</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>, char *buf)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#ad5461715b919e20f130c9f4b586cd42d">vty_command</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>, char *buf)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>, const char *buf, size_t nbytes)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a8609a6dc68804aff15b0d00254a44fa5">vty_ensure</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>, int <a class="el" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a4d876e82ce61720dead15aac07e29c30">vty_self_insert</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>, char c)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a72f07cc8f6c3df4dfe4effaeae9cee9b">vty_self_insert_overwrite</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>, char c)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#af8b383a4c3ef289b4aabda0c243d4588">vty_insert_word_overwrite</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>, char *<a class="el" href="ripng__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#adb129e2c5ad62108a56cdacddb7f57b8">vty_forward_char</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#ae83b887d99a0493283dad484e58d16b8">vty_backward_char</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#ace10a61328b0a67284a43e26d690e735">vty_beginning_of_line</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a396592bed9a5f245d8607e02b27ae861">vty_end_of_line</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a5739e6a00dcae7a4fab7540e19454c3e">vty_kill_line_from_beginning</a> (struct <a class="el" href="structvty.html">vty</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#aa88c9e2e5da06b826ac13025eefb386b">vty_redraw_line</a> (struct <a class="el" href="structvty.html">vty</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a3e85588eea41b85735677cc6e74ed50a">vty_history_print</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#ac933bc02bc1fcb0c345e08356a1090cc">vty_next_line</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a8bae6998c5a99c023cf77eab3c4b8ce2">vty_previous_line</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a50635cc5566b2f49e31e01cb168a83d0">vty_forward_word</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#ae20b81d43461d23f30a09ec6063f6c82">vty_backward_pure_word</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#ac633697855f1c48d8227645f6fbb624e">vty_backward_word</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a2332d063c4940eabba84a4ff92312f06">vty_down_level</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a763be1552ab8388b9f9467f363d82049">vty_end_config</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a843699a9603df9fec1f79aa648daeeaa">vty_delete_char</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#ad96cb2b5ea01585f597cd584553e5ec6">vty_delete_backward_char</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a62d806365d5e4914bea1e058eefb895a">vty_kill_line</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a4e12c6d2e92f643659d6c26ff0347aa2">vty_forward_kill_word</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#afd97712a47228ecb91064b09717cc74c">vty_backward_kill_word</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#afd4a3c3a366c9078aa632e04b34e7d2c">vty_transpose_chars</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#ad72e0680a6ba30787728859175d70bc8">vty_complete_command</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a4749fbdd1bd21c94175d6e8e92545528">vty_describe_fold</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>, int cmd_width, unsigned int desc_width, struct <a class="el" href="structdesc.html">desc</a> *<a class="el" href="structdesc.html">desc</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a39986e2365dcda01161b8497a4a9b83b">vty_describe_command</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a46a8ab71c3c5e63dfe0b7881cfa8f8f8">vty_clear_buf</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#af1b5a37bcd266695933b5517b0e6d41b">vty_stop_input</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a7399bffcb99c9a604913470e51e73603">vty_hist_add</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#ae1bb46143e465cccc7bc8dd177b3464b">vty_telnet_option</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>, unsigned char *buf, int nbytes)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#ad051d84b39c71fdbd554626c26f2b8a0">vty_execute</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#ab9ea51a34c5694514373852230570eb2">vty_escape_map</a> (unsigned char c, struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#adfdcfb63a06407c35b1c1221fc523a1e">vty_buffer_reset</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#aef96c1c84762b295bd4eb8149b8c7cd7">vty_read</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="structthread.html">thread</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a011ab81751a98ad0b5ecb28d6b3a29b2">vty_flush</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="structthread.html">thread</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structvty.html">vty</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a911d71ae8d7bfbb16ab75a0f77c05c3c">vty_create</a> (int vty_sock, union <a class="el" href="unionsockunion.html">sockunion</a> *su)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a06c13020e404fcc818d1d445f9d34a08">vty_accept</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="structthread.html">thread</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#acf1b5a3deff4b05879a784dd6bfa9a3c">vty_serv_sock_family</a> (const char *addr, unsigned short port, int family)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a1247b9d1681382580789652f8dad12a6">vty_serv_sock</a> (const char *addr, unsigned short port, const char *path)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#af1d7e2c952dfb90e0a7e2bbe194dedfb">vty_close</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a749b1b1ed2edbfa6c84c27a042e74331">vty_timeout</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="structthread.html">thread</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a417754c91a13996d56090005c7eecfe0">vty_read_file</a> (FILE *confp)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static FILE *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a1bf1b8ef400521a7521418f4c463a59a">vty_use_backup_config</a> (char *fullpath)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a414904627a8d3bbba1b20d769f836a70">vty_read_config</a> (char *<a class="el" href="ripng__main_8c.html#ac269be8b91ae4b24df48de5d8ad7e7a7">config_file</a>, char *config_default_dir)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#adc0f09a34324734b4f87905ae873cc55">vty_log</a> (const char *level, const char *proto_str, const char *format, struct <a class="el" href="structtimestamp__control.html">timestamp_control</a> *ctl, va_list va)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#ac0b3f6add8b1af732eb0289a31c58f87">vty_log_fixed</a> (const char *buf, size_t len)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#ae9113e4324d8e142ea8efd2402667b72">vty_config_lock</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#ae68c17df6974b76d0977fc41adde0f08">vty_config_unlock</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a1931f4b8055fd071f654574b62d83b62">DEFUN</a> (config_who, config_who_cmd,&quot;who&quot;,&quot;Display who <a class="el" href="spgrid_8c.html#adc625344c6d478c0e64f57f990674952">is</a> on <a class="el" href="structvty.html">vty</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#acab3ff871216eb7fbfa8b54c5a423d67">DEFUN</a> (line_vty, line_vty_cmd,&quot;line <a class="el" href="structvty.html">vty</a>&quot;,&quot;Configure a <a class="el" href="command_8c.html#a86a1dd2b71797949f2b74f2b6ad32dd1">terminal</a> line\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Virtual <a class="el" href="command_8c.html#a86a1dd2b71797949f2b74f2b6ad32dd1">terminal</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a5b1707211c50c8f95a3c93f52017b1d3">exec_timeout</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>, const char *min_str, const char *sec_str)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#aa3d382bca4b236be16a8b630dd023728">DEFUN</a> (exec_timeout_min, exec_timeout_min_cmd,&quot;exec-timeout &lt;0-35791&gt;&quot;,&quot;Set timeout value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Timeout value <a class="el" href="spgrid_8c.html#a89e1c555af4b92f6ee8d6f112f47ed12">in</a> minutes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#ac3e172a6eefc89d7439f4da31ce429e2">DEFUN</a> (exec_timeout_sec, exec_timeout_sec_cmd,&quot;exec-timeout &lt;0-35791&gt; &lt;0-2147483&gt;&quot;,&quot;Set the EXEC timeout\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Timeout <a class="el" href="spgrid_8c.html#a89e1c555af4b92f6ee8d6f112f47ed12">in</a> minutes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Timeout <a class="el" href="spgrid_8c.html#a89e1c555af4b92f6ee8d6f112f47ed12">in</a> seconds\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#aa6e7816a40a2200ddf4070dbee7492a2">DEFUN</a> (no_exec_timeout, no_exec_timeout_cmd,&quot;no exec-timeout&quot;, NO_STR&quot;Set the EXEC timeout\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a1d5a3faec6c38257fce65380233a8437">DEFUN</a> (vty_access_class, vty_access_class_cmd,&quot;access-class <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;,&quot;Filter connections based on an IP access <a class="el" href="structlist.html">list</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP access <a class="el" href="structlist.html">list</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#aaadb67dc0374e419ddbbf8acf5646d82">DEFUN</a> (no_vty_access_class, no_vty_access_class_cmd,&quot;no access-class [<a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>]&quot;, NO_STR&quot;Filter connections based on an IP access <a class="el" href="structlist.html">list</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP access <a class="el" href="structlist.html">list</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a44366d0f6b78ffeafed1bd40303770e8">DEFUN</a> (vty_login, vty_login_cmd,&quot;login&quot;,&quot;Enable <a class="el" href="structpassword.html">password</a> checking\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#ae17bb2559d2a183b1a5cb0f2247bf965">DEFUN</a> (no_vty_login, no_vty_login_cmd,&quot;no login&quot;, NO_STR&quot;Enable <a class="el" href="structpassword.html">password</a> checking\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#aac27a0111c177a498300b66a223f7455">DEFUN</a> (vty_restricted_mode, vty_restricted_mode_cmd,&quot;anonymous restricted&quot;,&quot;Restrict view commands available <a class="el" href="spgrid_8c.html#a89e1c555af4b92f6ee8d6f112f47ed12">in</a> anonymous, unauthenticated <a class="el" href="structvty.html">vty</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a6f8fc638efb47924a6384479ab7fef50">DEFUN</a> (vty_no_restricted_mode, vty_no_restricted_mode_cmd,&quot;no anonymous restricted&quot;, NO_STR&quot;Enable <a class="el" href="structpassword.html">password</a> checking\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#aefc8f986c6a8caf9f2c9fa1fcb726440">DEFUN</a> (service_advanced_vty, service_advanced_vty_cmd,&quot;service advanced-<a class="el" href="structvty.html">vty</a>&quot;,&quot;Set up miscellaneous service\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Enable advanced <a class="el" href="bgp__open_8h.html#af4324da5e10e48f7970f2bc5b611e367">mode</a> <a class="el" href="structvty.html">vty</a> <a class="el" href="structinterface.html">interface</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a20ab7719343daaa96a530e5f27ab1f93">DEFUN</a> (no_service_advanced_vty, no_service_advanced_vty_cmd,&quot;no service advanced-<a class="el" href="structvty.html">vty</a>&quot;, NO_STR&quot;Set up miscellaneous service\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Enable advanced <a class="el" href="bgp__open_8h.html#af4324da5e10e48f7970f2bc5b611e367">mode</a> <a class="el" href="structvty.html">vty</a> <a class="el" href="structinterface.html">interface</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a421f4a0ef65e56fff578eee7fde03d48">DEFUN</a> (terminal_monitor, terminal_monitor_cmd,&quot;terminal monitor&quot;,&quot;Set <a class="el" href="command_8c.html#a86a1dd2b71797949f2b74f2b6ad32dd1">terminal</a> line parameters\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Copy debug output to the current <a class="el" href="command_8c.html#a86a1dd2b71797949f2b74f2b6ad32dd1">terminal</a> line\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a75273639e22c856822661223443dd234">DEFUN</a> (terminal_no_monitor, terminal_no_monitor_cmd,&quot;terminal no monitor&quot;,&quot;Set <a class="el" href="command_8c.html#a86a1dd2b71797949f2b74f2b6ad32dd1">terminal</a> line parameters\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;NO_STR&quot;Copy debug output to the current <a class="el" href="command_8c.html#a86a1dd2b71797949f2b74f2b6ad32dd1">terminal</a> line\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a1414cdd07405b9561c364b71a9fcdc31">ALIAS</a> (terminal_no_monitor, no_terminal_monitor_cmd,&quot;no <a class="el" href="command_8c.html#a86a1dd2b71797949f2b74f2b6ad32dd1">terminal</a> monitor&quot;, NO_STR&quot;Set <a class="el" href="command_8c.html#a86a1dd2b71797949f2b74f2b6ad32dd1">terminal</a> line parameters\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Copy debug output to the current <a class="el" href="command_8c.html#a86a1dd2b71797949f2b74f2b6ad32dd1">terminal</a> line\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#af80aee0d6f35fb79eb960743cfa18a1e">vty_config_write</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a637ad9b0152e5e5559bc0c05db07318e">vty_reset</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a773ccf9db9a99a1412fe1c138e01279b">vty_save_cwd</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a6f4339c73034bde3cba10481ee9d5286">vty_get_cwd</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a34f77731bee7dcf980c6b344a9fff210">vty_shell</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a239f7551b7a3441e41c9123e6fe72e87">vty_shell_serv</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a29fb84300cd3b9daac807011dba67651">vty_init_vtysh</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a4e3540690dccdae165218c9597b311eb">vty_init</a> (struct <a class="el" href="structthread__master.html">thread_master</a> *master_thread)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a9bf707340481507f599db15db0e79e85">vty_terminate</a> (void)</td></tr>
<tr><td colspan="2"><h2><a name="var-members"></a>
Variables</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structhost.html">host</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#ab4e4c95630aff8de923b0b7f25dec6e7">host</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static <a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#aada8117b2e5d72dcea3f29da3366ce4b">vtyvec</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a9dc870017884136998187f770ec7851c">vty_timeout_val</a> = VTY_TIMEOUT_DEFAULT</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a> = NULL</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a> = NULL</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a794b894c87fe19a07c303a584f3dd454">Vvty_serv_thread</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#aa5e6e7a16dd20bf5e749f0d0bd403f33">vty_cwd</a> = NULL</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a472109ecd35a2f4a2953e6ca76a5824d">vty_config</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a27b0172ccf3d40051140bb3a04607711">no_password_check</a> = 0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static const u_char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a4af47f7385ea1ddf6492f7bfcb37cd7e">restricted_mode_default</a> = 0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static u_char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a78ee728656e5a1528d1b45e94acc23a6">restricted_mode</a> = 0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a1374f502412fa0cf9bac27528c3739f6">integrate_default</a> [] = SYSCONFDIR INTEGRATE_DEFAULT_CONFIG</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static const char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a050c5269ec6f36e488b05d6b564601e2">telnet_backward_char</a> = 0x08</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static const char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a05df3d7f54ae7e630ade2a3124ce48d6">telnet_space_char</a> = ' '</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structthread__master.html">thread_master</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structcmd__node.html">cmd_node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vty_8c.html#a4515b7730ee408bb977cce603b51ce57">vty_node</a></td></tr>
</table>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="aab05ecebba269f4510ca9a4cfdeb4382"></a><!-- doxytag: member="vty.c::CONTROL" ref="aab05ecebba269f4510ca9a4cfdeb4382" args="(X)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CONTROL</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a></td><td>)</td>
          <td>&#160;&#160;&#160;((<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>) - '@')</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l01297">1297</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>

</div>
</div>
<a class="anchor" id="adee5f2176eb8e53a301dd8d0f377251b"></a><!-- doxytag: member="vty.c::VTY_ESCAPE" ref="adee5f2176eb8e53a301dd8d0f377251b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VTY_ESCAPE&#160;&#160;&#160;2</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l01300">1300</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>

</div>
</div>
<a class="anchor" id="acf239d95250577af6d34d80d70aac760"></a><!-- doxytag: member="vty.c::VTY_NORMAL" ref="acf239d95250577af6d34d80d70aac760" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VTY_NORMAL&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l01298">1298</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>

</div>
</div>
<a class="anchor" id="a3aac53820dc12306e1c0d140f1f7bb56"></a><!-- doxytag: member="vty.c::VTY_PRE_ESCAPE" ref="a3aac53820dc12306e1c0d140f1f7bb56" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VTY_PRE_ESCAPE&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l01299">1299</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>

</div>
</div>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9e"></a><!-- doxytag: member="vty.c::event" ref="a3b65133bb9997cd1ccf311af0927fc9e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9ea8fd18ac65705a12e09a38d18e47d12ec"></a><!-- doxytag: member="VTY_SERV" ref="a3b65133bb9997cd1ccf311af0927fc9ea8fd18ac65705a12e09a38d18e47d12ec" args="" -->VTY_SERV</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9ea9ed3db9f85ae6bdc30382d62bc01a807"></a><!-- doxytag: member="VTY_READ" ref="a3b65133bb9997cd1ccf311af0927fc9ea9ed3db9f85ae6bdc30382d62bc01a807" args="" -->VTY_READ</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9ea73e4d70c7cc9c2560723e639332d7f2d"></a><!-- doxytag: member="VTY_WRITE" ref="a3b65133bb9997cd1ccf311af0927fc9ea73e4d70c7cc9c2560723e639332d7f2d" args="" -->VTY_WRITE</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9eada5cbc98f077a6a603d7c200d654042c"></a><!-- doxytag: member="VTY_TIMEOUT_RESET" ref="a3b65133bb9997cd1ccf311af0927fc9eada5cbc98f077a6a603d7c200d654042c" args="" -->VTY_TIMEOUT_RESET</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9ea826c5318cddea911fefb2c166a4bf509"></a><!-- doxytag: member="ZCLIENT_SCHEDULE" ref="a3b65133bb9997cd1ccf311af0927fc9ea826c5318cddea911fefb2c166a4bf509" args="" -->ZCLIENT_SCHEDULE</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9eab19700a6d070e3835e08add96a1cb3b9"></a><!-- doxytag: member="ZCLIENT_READ" ref="a3b65133bb9997cd1ccf311af0927fc9eab19700a6d070e3835e08add96a1cb3b9" args="" -->ZCLIENT_READ</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9ea82cf139bec91c753aa00f8861f9d7dcb"></a><!-- doxytag: member="ZCLIENT_CONNECT" ref="a3b65133bb9997cd1ccf311af0927fc9ea82cf139bec91c753aa00f8861f9d7dcb" args="" -->ZCLIENT_CONNECT</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9eaf7d27b451246b7abd5c02d73f722e711"></a><!-- doxytag: member="OSPF_APISERVER_ACCEPT" ref="a3b65133bb9997cd1ccf311af0927fc9eaf7d27b451246b7abd5c02d73f722e711" args="" -->OSPF_APISERVER_ACCEPT</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9eaafc629f281d14052686b777808801956"></a><!-- doxytag: member="OSPF_APISERVER_SYNC_READ" ref="a3b65133bb9997cd1ccf311af0927fc9eaafc629f281d14052686b777808801956" args="" -->OSPF_APISERVER_SYNC_READ</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9eaf185e2c50bffd89565783bbd9c063ea2"></a><!-- doxytag: member="OSPF_APISERVER_SYNC_WRITE" ref="a3b65133bb9997cd1ccf311af0927fc9eaf185e2c50bffd89565783bbd9c063ea2" args="" -->OSPF_APISERVER_SYNC_WRITE</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9ea9b30267095ac2c8eb8c87603dea68133"></a><!-- doxytag: member="OSPF_APISERVER_ASYNC_WRITE" ref="a3b65133bb9997cd1ccf311af0927fc9ea9b30267095ac2c8eb8c87603dea68133" args="" -->OSPF_APISERVER_ASYNC_WRITE</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9ea798c01376b108480a941e1e6c69a2a21"></a><!-- doxytag: member="ZEBRA_SERV" ref="a3b65133bb9997cd1ccf311af0927fc9ea798c01376b108480a941e1e6c69a2a21" args="" -->ZEBRA_SERV</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9ea8af81c1e6c659f520a29088128058a2b"></a><!-- doxytag: member="ZEBRA_READ" ref="a3b65133bb9997cd1ccf311af0927fc9ea8af81c1e6c659f520a29088128058a2b" args="" -->ZEBRA_READ</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9eac02643d854489b17e1400ff30e76f7f6"></a><!-- doxytag: member="ZEBRA_WRITE" ref="a3b65133bb9997cd1ccf311af0927fc9eac02643d854489b17e1400ff30e76f7f6" args="" -->ZEBRA_WRITE</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="vty_8c_source.html#l00043">43</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea8fd18ac65705a12e09a38d18e47d12ec">VTY_SERV</a>,
  <a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea9ed3db9f85ae6bdc30382d62bc01a807">VTY_READ</a>,
  <a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea73e4d70c7cc9c2560723e639332d7f2d">VTY_WRITE</a>,
  <a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9eada5cbc98f077a6a603d7c200d654042c">VTY_TIMEOUT_RESET</a>,
<span class="preprocessor">#ifdef VTYSH</span>
<span class="preprocessor"></span>  VTYSH_SERV,
  VTYSH_READ,
  VTYSH_WRITE
<span class="preprocessor">#endif </span><span class="comment">/* VTYSH */</span>
};
</pre></div>
</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a1414cdd07405b9561c364b71a9fcdc31"></a><!-- doxytag: member="vty.c::ALIAS" ref="a1414cdd07405b9561c364b71a9fcdc31" args="(terminal_no_monitor, no_terminal_monitor_cmd,&quot;no terminal monitor&quot;, NO_STR&quot;Set terminal line parameters\n&quot;&quot;Copy debug output to the current terminal line\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ALIAS </td>
          <td>(</td>
          <td class="paramtype">terminal_no_monitor&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_terminal_monitor_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no <a class="el" href="command_8c.html#a86a1dd2b71797949f2b74f2b6ad32dd1">terminal</a> monitor&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;Set <a class="el" href="command_8c.html#a86a1dd2b71797949f2b74f2b6ad32dd1">terminal</a> line parameters\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Copy debug output to the current <a class="el" href="command_8c.html#a86a1dd2b71797949f2b74f2b6ad32dd1">terminal</a> line\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02794">2794</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> index;

  <span class="keywordflow">for</span> (index = <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a> + 1; index != <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a>;)
    {
      <span class="keywordflow">if</span> (index == <a class="code" href="vty_8h.html#a2c7bf19140857545865be759c8960bc4">VTY_MAXHIST</a>)
    {
      index = 0;
      <span class="keywordflow">continue</span>;
    }

      <span class="keywordflow">if</span> (<a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[index] != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;  %s%s&quot;</span>, <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[index], <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

      index++;
    }

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a1931f4b8055fd071f654574b62d83b62"></a><!-- doxytag: member="vty.c::DEFUN" ref="a1931f4b8055fd071f654574b62d83b62" args="(config_who, config_who_cmd,&quot;who&quot;,&quot;Display who is on vty\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">config_who&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">config_who_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;who&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;Display who <a class="el" href="spgrid_8c.html#adc625344c6d478c0e64f57f990674952">is</a> on <a class="el" href="structvty.html">vty</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02554">2554</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
  <span class="keyword">struct </span><a class="code" href="structvty.html">vty</a> *v;

  <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="vector_8h.html#ac96b7beddf251a81df131543d06d63c7">vector_active</a> (<a class="code" href="vty_8c.html#aada8117b2e5d72dcea3f29da3366ce4b">vtyvec</a>); i++)
    <span class="keywordflow">if</span> ((v = <a class="code" href="vector_8h.html#a34cb4a77fbd6ab6cb23707cdd1c4c0d2">vector_slot</a> (<a class="code" href="vty_8c.html#aada8117b2e5d72dcea3f29da3366ce4b">vtyvec</a>, i)) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;%svty[%d] connected from %s.%s&quot;</span>,
           v-&gt;<a class="code" href="structvty.html#a2dceb86fc008314e2f573e3880f7fbfc">config</a> ? <span class="stringliteral">&quot;*&quot;</span> : <span class="stringliteral">&quot; &quot;</span>,
           i, v-&gt;<a class="code" href="structvty.html#a9b08efdc39a659f450fdad3ca79a12d8">address</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="acab3ff871216eb7fbfa8b54c5a423d67"></a><!-- doxytag: member="vty.c::DEFUN" ref="acab3ff871216eb7fbfa8b54c5a423d67" args="(line_vty, line_vty_cmd,&quot;line vty&quot;,&quot;Configure a terminal line\n&quot;&quot;Virtual terminal\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">line_vty&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">line_vty_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;line <a class="el" href="structvty.html">vty</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;Configure a <a class="el" href="command_8c.html#a86a1dd2b71797949f2b74f2b6ad32dd1">terminal</a> line\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Virtual <a class="el" href="command_8c.html#a86a1dd2b71797949f2b74f2b6ad32dd1">terminal</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02571">2571</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>;
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa3d382bca4b236be16a8b630dd023728"></a><!-- doxytag: member="vty.c::DEFUN" ref="aa3d382bca4b236be16a8b630dd023728" args="(exec_timeout_min, exec_timeout_min_cmd,&quot;exec&#45;timeout &lt;0&#45;35791&gt;&quot;,&quot;Set timeout value\n&quot;&quot;Timeout value in minutes\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">exec_timeout_min&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">exec_timeout_min_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;exec-timeout &lt;0-35791&gt;&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;Set timeout value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Timeout value <a class="el" href="spgrid_8c.html#a89e1c555af4b92f6ee8d6f112f47ed12">in</a> minutes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02605">2605</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="vty_8c.html#a5b1707211c50c8f95a3c93f52017b1d3">exec_timeout</a> (<a class="code" href="structvty.html">vty</a>, argv[0], <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac3e172a6eefc89d7439f4da31ce429e2"></a><!-- doxytag: member="vty.c::DEFUN" ref="ac3e172a6eefc89d7439f4da31ce429e2" args="(exec_timeout_sec, exec_timeout_sec_cmd,&quot;exec&#45;timeout &lt;0&#45;35791&gt; &lt;0&#45;2147483&gt;&quot;,&quot;Set the EXEC timeout\n&quot;&quot;Timeout in minutes\n&quot;&quot;Timeout in seconds\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">exec_timeout_sec&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">exec_timeout_sec_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;exec-timeout &lt;0-35791&gt; &lt;0-2147483&gt;&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;Set the EXEC timeout\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Timeout <a class="el" href="spgrid_8c.html#a89e1c555af4b92f6ee8d6f112f47ed12">in</a> minutes\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Timeout <a class="el" href="spgrid_8c.html#a89e1c555af4b92f6ee8d6f112f47ed12">in</a> seconds\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02614">2614</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="vty_8c.html#a5b1707211c50c8f95a3c93f52017b1d3">exec_timeout</a> (<a class="code" href="structvty.html">vty</a>, argv[0], argv[1]);
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa6e7816a40a2200ddf4070dbee7492a2"></a><!-- doxytag: member="vty.c::DEFUN" ref="aa6e7816a40a2200ddf4070dbee7492a2" args="(no_exec_timeout, no_exec_timeout_cmd,&quot;no exec&#45;timeout&quot;, NO_STR&quot;Set the EXEC timeout\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_exec_timeout&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_exec_timeout_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no exec-timeout&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;Set the EXEC timeout\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02624">2624</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="vty_8c.html#a5b1707211c50c8f95a3c93f52017b1d3">exec_timeout</a> (<a class="code" href="structvty.html">vty</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a1d5a3faec6c38257fce65380233a8437"></a><!-- doxytag: member="vty.c::DEFUN" ref="a1d5a3faec6c38257fce65380233a8437" args="(vty_access_class, vty_access_class_cmd,&quot;access&#45;class WORD&quot;,&quot;Filter connections based on an IP access list\n&quot;&quot;IP access list\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">vty_access_class&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vty_access_class_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;access-class <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;Filter connections based on an IP access <a class="el" href="structlist.html">list</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP access <a class="el" href="structlist.html">list</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02634">2634</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a>)
    <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a>(<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba05f7d9e133f49a4c7aaa98a318692c88">MTYPE_VTY</a>, <a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a>);

  <a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a> = <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a>(<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba05f7d9e133f49a4c7aaa98a318692c88">MTYPE_VTY</a>, argv[0]);

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aaadb67dc0374e419ddbbf8acf5646d82"></a><!-- doxytag: member="vty.c::DEFUN" ref="aaadb67dc0374e419ddbbf8acf5646d82" args="(no_vty_access_class, no_vty_access_class_cmd,&quot;no access&#45;class [WORD]&quot;, NO_STR&quot;Filter connections based on an IP access list\n&quot;&quot;IP access list\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_vty_access_class&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_vty_access_class_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no access-class &quot;&#160;</td>
          <td class="paramname">[WORD], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;Filter connections based on an IP access <a class="el" href="structlist.html">list</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP access <a class="el" href="structlist.html">list</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02649">2649</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (! <a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a> || (argc &amp;&amp; strcmp(<a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a>, argv[0])))
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Access-class is not currently applied to vty%s&quot;</span>,
           <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }

  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a>(<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba05f7d9e133f49a4c7aaa98a318692c88">MTYPE_VTY</a>, <a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a>);

  <a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a44366d0f6b78ffeafed1bd40303770e8"></a><!-- doxytag: member="vty.c::DEFUN" ref="a44366d0f6b78ffeafed1bd40303770e8" args="(vty_login, vty_login_cmd,&quot;login&quot;,&quot;Enable password checking\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">vty_login&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vty_login_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;login&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;Enable <a class="el" href="structpassword.html">password</a> checking\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02713">2713</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="vty_8c.html#a27b0172ccf3d40051140bb3a04607711">no_password_check</a> = 0;
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae17bb2559d2a183b1a5cb0f2247bf965"></a><!-- doxytag: member="vty.c::DEFUN" ref="ae17bb2559d2a183b1a5cb0f2247bf965" args="(no_vty_login, no_vty_login_cmd,&quot;no login&quot;, NO_STR&quot;Enable password checking\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_vty_login&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_vty_login_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no login&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;Enable <a class="el" href="structpassword.html">password</a> checking\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02722">2722</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="vty_8c.html#a27b0172ccf3d40051140bb3a04607711">no_password_check</a> = 1;
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aac27a0111c177a498300b66a223f7455"></a><!-- doxytag: member="vty.c::DEFUN" ref="aac27a0111c177a498300b66a223f7455" args="(vty_restricted_mode, vty_restricted_mode_cmd,&quot;anonymous restricted&quot;,&quot;Restrict view commands available in anonymous, unauthenticated vty\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">vty_restricted_mode&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vty_restricted_mode_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;anonymous restricted&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;Restrict view commands available <a class="el" href="spgrid_8c.html#a89e1c555af4b92f6ee8d6f112f47ed12">in</a>&#160;</td>
          <td class="paramname"><em>anonymous</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unauthenticated <a class="el" href="structvty.html">vty</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02733">2733</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="vty_8c.html#a78ee728656e5a1528d1b45e94acc23a6">restricted_mode</a> = 1;
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6f8fc638efb47924a6384479ab7fef50"></a><!-- doxytag: member="vty.c::DEFUN" ref="a6f8fc638efb47924a6384479ab7fef50" args="(vty_no_restricted_mode, vty_no_restricted_mode_cmd,&quot;no anonymous restricted&quot;, NO_STR&quot;Enable password checking\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">vty_no_restricted_mode&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vty_no_restricted_mode_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no anonymous restricted&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;Enable <a class="el" href="structpassword.html">password</a> checking\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02742">2742</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="vty_8c.html#a78ee728656e5a1528d1b45e94acc23a6">restricted_mode</a> = 0;
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aefc8f986c6a8caf9f2c9fa1fcb726440"></a><!-- doxytag: member="vty.c::DEFUN" ref="aefc8f986c6a8caf9f2c9fa1fcb726440" args="(service_advanced_vty, service_advanced_vty_cmd,&quot;service advanced&#45;vty&quot;,&quot;Set up miscellaneous service\n&quot;&quot;Enable advanced mode vty interface\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">service_advanced_vty&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">service_advanced_vty_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;service advanced-<a class="el" href="structvty.html">vty</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;Set up miscellaneous service\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Enable advanced <a class="el" href="bgp__open_8h.html#af4324da5e10e48f7970f2bc5b611e367">mode</a> <a class="el" href="structvty.html">vty</a> <a class="el" href="structinterface.html">interface</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02752">2752</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#af1f270bdc9e34870cc10cf9fe0f5a65e">advanced</a> = 1;
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a20ab7719343daaa96a530e5f27ab1f93"></a><!-- doxytag: member="vty.c::DEFUN" ref="a20ab7719343daaa96a530e5f27ab1f93" args="(no_service_advanced_vty, no_service_advanced_vty_cmd,&quot;no service advanced&#45;vty&quot;, NO_STR&quot;Set up miscellaneous service\n&quot;&quot;Enable advanced mode vty interface\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_service_advanced_vty&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_service_advanced_vty_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no service advanced-<a class="el" href="structvty.html">vty</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;Set up miscellaneous service\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Enable advanced <a class="el" href="bgp__open_8h.html#af4324da5e10e48f7970f2bc5b611e367">mode</a> <a class="el" href="structvty.html">vty</a> <a class="el" href="structinterface.html">interface</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02762">2762</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#af1f270bdc9e34870cc10cf9fe0f5a65e">advanced</a> = 0;
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a421f4a0ef65e56fff578eee7fde03d48"></a><!-- doxytag: member="vty.c::DEFUN" ref="a421f4a0ef65e56fff578eee7fde03d48" args="(terminal_monitor, terminal_monitor_cmd,&quot;terminal monitor&quot;,&quot;Set terminal line parameters\n&quot;&quot;Copy debug output to the current terminal line\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">terminal_monitor&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">terminal_monitor_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;terminal monitor&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;Set <a class="el" href="command_8c.html#a86a1dd2b71797949f2b74f2b6ad32dd1">terminal</a> line parameters\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Copy debug output to the current <a class="el" href="command_8c.html#a86a1dd2b71797949f2b74f2b6ad32dd1">terminal</a> line\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02773">2773</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#ace142d1b856ed1776e4a48684222b01f">monitor</a> = 1;
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a75273639e22c856822661223443dd234"></a><!-- doxytag: member="vty.c::DEFUN" ref="a75273639e22c856822661223443dd234" args="(terminal_no_monitor, terminal_no_monitor_cmd,&quot;terminal no monitor&quot;,&quot;Set terminal line parameters\n&quot;NO_STR&quot;Copy debug output to the current terminal line\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">terminal_no_monitor&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">terminal_no_monitor_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;terminal no monitor&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;Set <a class="el" href="command_8c.html#a86a1dd2b71797949f2b74f2b6ad32dd1">terminal</a> line parameters\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;NO_STR&quot;Copy debug output to the current <a class="el" href="command_8c.html#a86a1dd2b71797949f2b74f2b6ad32dd1">terminal</a> line\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02783">2783</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#ace142d1b856ed1776e4a48684222b01f">monitor</a> = 0;
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5b1707211c50c8f95a3c93f52017b1d3"></a><!-- doxytag: member="vty.c::exec_timeout" ref="a5b1707211c50c8f95a3c93f52017b1d3" args="(struct vty *vty, const char *min_str, const char *sec_str)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int exec_timeout </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>min_str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>sec_str</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02583">2583</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> timeout = 0;

  <span class="comment">/* min_str and sec_str are already checked by parser.  So it must be</span>
<span class="comment">     all digit string. */</span>
  <span class="keywordflow">if</span> (min_str)
    {
      timeout = strtol (min_str, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 10);
      timeout *= 60;
    }
  <span class="keywordflow">if</span> (sec_str)
    timeout += strtol (sec_str, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 10);

  <a class="code" href="vty_8c.html#a9dc870017884136998187f770ec7851c">vty_timeout_val</a> = timeout;
  vty-&gt;<a class="code" href="structvty.html#aa334d5bb623207305fa72d76151f8096">v_timeout</a> = timeout;
  <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9eada5cbc98f077a6a603d7c200d654042c">VTY_TIMEOUT_RESET</a>, 0, vty);


  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a06c13020e404fcc818d1d445f9d34a08"></a><!-- doxytag: member="vty.c::vty_accept" ref="a06c13020e404fcc818d1d445f9d34a08" args="(struct thread *thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int vty_accept </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>thread</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l01685">1685</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> vty_sock;
  <span class="keyword">struct </span><a class="code" href="structvty.html">vty</a> *<a class="code" href="vtysh_8c.html#a15b2c4e868040617c54eaaba3663b337">vty</a>;
  <span class="keyword">union </span><a class="code" href="unionsockunion.html">sockunion</a> su;
  <span class="keywordtype">int</span> ret;
  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> on;
  <span class="keywordtype">int</span> accept_sock;
  <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keyword">struct </span><a class="code" href="structaccess__list.html">access_list</a> *acl = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keywordtype">char</span> *bufp;

  accept_sock = <a class="code" href="thread_8h.html#a89bd56f991717646441f9dffc010d4f5">THREAD_FD</a> (thread);

  <span class="comment">/* We continue hearing vty socket. */</span>
  <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea8fd18ac65705a12e09a38d18e47d12ec">VTY_SERV</a>, accept_sock, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);

  memset (&amp;su, 0, <span class="keyword">sizeof</span> (<span class="keyword">union</span> <a class="code" href="unionsockunion.html">sockunion</a>));

  <span class="comment">/* We can handle IPv4 or IPv6 socket. */</span>
  vty_sock = <a class="code" href="sockunion_8c.html#a71ffb8b7424679127f0ab7d3ad8c9fd4">sockunion_accept</a> (accept_sock, &amp;su);
  <span class="keywordflow">if</span> (vty_sock &lt; 0)
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;can&#39;t accept vty socket : %s&quot;</span>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
      <span class="keywordflow">return</span> -1;
    }
  <a class="code" href="network_8c.html#a450a9be7be692d8ac42f64acddbdaadd">set_nonblocking</a>(vty_sock);

  p = <a class="code" href="prefix_8c.html#a7e9fdfe551fb280a2e9a149a7f742d87">sockunion2hostprefix</a> (&amp;su);

  <span class="comment">/* VTY&#39;s accesslist apply. */</span>
  <span class="keywordflow">if</span> (p-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == AF_INET &amp;&amp; <a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a>)
    {
      <span class="keywordflow">if</span> ((acl = <a class="code" href="filter_8c.html#a8cb65cd01015f6673c632cb5b8714b3e">access_list_lookup</a> (<a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>, <a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a>)) &amp;&amp;
      (<a class="code" href="filter_8c.html#a5565f487c65e2bf0308c7fd529f121a0">access_list_apply</a> (acl, p) == <a class="code" href="filter_8h.html#ab3b7281956317556f846daaebf75de72a898abadf6cc2f9d27780782f09d3a3e3">FILTER_DENY</a>))
    {
      <span class="keywordtype">char</span> *buf;
      <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_INFO, <span class="stringliteral">&quot;Vty connection refused from %s&quot;</span>,
        (buf = <a class="code" href="sockunion_8c.html#a81204a150d1d4f669bb69fdb0915a727">sockunion_su2str</a> (&amp;su)));
      free (buf);
      close (vty_sock);
      
      <span class="comment">/* continue accepting connections */</span>
      <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea8fd18ac65705a12e09a38d18e47d12ec">VTY_SERV</a>, accept_sock, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
      
      <a class="code" href="prefix_8c.html#a5d8a68bc25fb973c471e61aaeb76a015">prefix_free</a> (p);

      <span class="keywordflow">return</span> 0;
    }
    }

<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <span class="comment">/* VTY&#39;s ipv6 accesslist apply. */</span>
  <span class="keywordflow">if</span> (p-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == AF_INET6 &amp;&amp; <a class="code" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a>)
    {
      <span class="keywordflow">if</span> ((acl = <a class="code" href="filter_8c.html#a8cb65cd01015f6673c632cb5b8714b3e">access_list_lookup</a> (<a class="code" href="zebra_8h.html#ad10f30457e426e1d269466d3b6603c3c">AFI_IP6</a>, <a class="code" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a>)) &amp;&amp;
      (<a class="code" href="filter_8c.html#a5565f487c65e2bf0308c7fd529f121a0">access_list_apply</a> (acl, p) == <a class="code" href="filter_8h.html#ab3b7281956317556f846daaebf75de72a898abadf6cc2f9d27780782f09d3a3e3">FILTER_DENY</a>))
    {
      <span class="keywordtype">char</span> *buf;
      <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_INFO, <span class="stringliteral">&quot;Vty connection refused from %s&quot;</span>,
        (buf = <a class="code" href="sockunion_8c.html#a81204a150d1d4f669bb69fdb0915a727">sockunion_su2str</a> (&amp;su)));
      free (buf);
      close (vty_sock);
      
      <span class="comment">/* continue accepting connections */</span>
      <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea8fd18ac65705a12e09a38d18e47d12ec">VTY_SERV</a>, accept_sock, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
      
      <a class="code" href="prefix_8c.html#a5d8a68bc25fb973c471e61aaeb76a015">prefix_free</a> (p);

      <span class="keywordflow">return</span> 0;
    }
    }
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
  
  <a class="code" href="prefix_8c.html#a5d8a68bc25fb973c471e61aaeb76a015">prefix_free</a> (p);

  on = 1;
  ret = setsockopt (vty_sock, IPPROTO_TCP, TCP_NODELAY, 
            (<span class="keywordtype">char</span> *) &amp;on, <span class="keyword">sizeof</span> (on));
  <span class="keywordflow">if</span> (ret &lt; 0)
    <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_INFO, <span class="stringliteral">&quot;can&#39;t set sockopt to vty_sock : %s&quot;</span>, 
      <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));

  <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_INFO, <span class="stringliteral">&quot;Vty connection from %s&quot;</span>,
    (bufp = <a class="code" href="sockunion_8c.html#a81204a150d1d4f669bb69fdb0915a727">sockunion_su2str</a> (&amp;su)));
  <span class="keywordflow">if</span> (bufp)
    <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, bufp);

  vty = <a class="code" href="vty_8c.html#a911d71ae8d7bfbb16ab75a0f77c05c3c">vty_create</a> (vty_sock, &amp;su);

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a819a97da4f2899ac41493be8c6b0e238"></a><!-- doxytag: member="vty.c::vty_auth" ref="a819a97da4f2899ac41493be8c6b0e238" args="(struct vty *vty, char *buf)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_auth </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>buf</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00332">332</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">char</span> *passwd = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keyword">enum</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682">node_type</a> next_node = 0;
  <span class="keywordtype">int</span> fail;
  <span class="keywordtype">char</span> *crypt (<span class="keyword">const</span> <span class="keywordtype">char</span> *, <span class="keyword">const</span> <span class="keywordtype">char</span> *);

  <span class="keywordflow">switch</span> (vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a>)
    {
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a302e1f38939b1a74bc848007bb70bfdf">AUTH_NODE</a>:
      <span class="keywordflow">if</span> (<a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#aabaa0ca6772ffc87e7d8b2628de0c009">encrypt</a>)
    passwd = <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#a8c7b6573685405878afa6bd78fb68a9c">password_encrypt</a>;
      <span class="keywordflow">else</span>
    passwd = <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#ad0af28f48e2903d894adc73c3c58469a">password</a>;
      <span class="keywordflow">if</span> (<a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#af1f270bdc9e34870cc10cf9fe0f5a65e">advanced</a>)
    next_node = <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#ace72f74a0e8a9de32416e8c5506dbabb">enable</a> ? <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a> : <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>;
      <span class="keywordflow">else</span>
    next_node = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a96b74116564789f517eef9284f18b472">AUTH_ENABLE_NODE</a>:
      <span class="keywordflow">if</span> (<a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#aabaa0ca6772ffc87e7d8b2628de0c009">encrypt</a>)
    passwd = <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#afba3bc94121be3f66115ba2bec80b7bd">enable_encrypt</a>;
      <span class="keywordflow">else</span>
    passwd = <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#ace72f74a0e8a9de32416e8c5506dbabb">enable</a>;
      next_node = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>;
      <span class="keywordflow">break</span>;
    }

  <span class="keywordflow">if</span> (passwd)
    {
      <span class="keywordflow">if</span> (<a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#aabaa0ca6772ffc87e7d8b2628de0c009">encrypt</a>)
    fail = strcmp (crypt(buf, passwd), passwd);
      <span class="keywordflow">else</span>
    fail = strcmp (buf, passwd);
    }
  <span class="keywordflow">else</span>
    fail = 1;

  <span class="keywordflow">if</span> (! fail)
    {
      vty-&gt;<a class="code" href="structvty.html#a2bbfb0bd919de5d12e7636edbe1e60bd">fail</a> = 0;
      vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = next_node;    <span class="comment">/* Success ! */</span>
    }
  <span class="keywordflow">else</span>
    {
      vty-&gt;<a class="code" href="structvty.html#a2bbfb0bd919de5d12e7636edbe1e60bd">fail</a>++;
      <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a2bbfb0bd919de5d12e7636edbe1e60bd">fail</a> &gt;= 3)
    {
      <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a302e1f38939b1a74bc848007bb70bfdf">AUTH_NODE</a>)
        {
          <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Bad passwords, too many failures!%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
          vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> = VTY_CLOSE;
        }
      <span class="keywordflow">else</span>          
        {
          <span class="comment">/* AUTH_ENABLE_NODE */</span>
          vty-&gt;<a class="code" href="structvty.html#a2bbfb0bd919de5d12e7636edbe1e60bd">fail</a> = 0;
          <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Bad enable passwords, too many failures!%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
          vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = <a class="code" href="vty_8c.html#a78ee728656e5a1528d1b45e94acc23a6">restricted_mode</a> ? <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acb0c5ada108352e3e869838b0ee04c3b">RESTRICTED_NODE</a> : <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>;
        }
    }
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae83b887d99a0493283dad484e58d16b8"></a><!-- doxytag: member="vty.c::vty_backward_char" ref="ae83b887d99a0493283dad484e58d16b8" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_backward_char </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00544">544</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> &gt; 0)
    {
      vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>--;
      <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, &amp;<a class="code" href="vty_8c.html#a050c5269ec6f36e488b05d6b564601e2">telnet_backward_char</a>, 1);
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="afd97712a47228ecb91064b09717cc74c"></a><!-- doxytag: member="vty.c::vty_backward_kill_word" ref="afd97712a47228ecb91064b09717cc74c" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_backward_kill_word </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00812">812</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">while</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> &gt; 0 &amp;&amp; vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> - 1] == <span class="charliteral">&#39; &#39;</span>)
    <a class="code" href="vty_8c.html#ad96cb2b5ea01585f597cd584553e5ec6">vty_delete_backward_char</a> (vty);
  <span class="keywordflow">while</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> &gt; 0 &amp;&amp; vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> - 1] != <span class="charliteral">&#39; &#39;</span>)
    <a class="code" href="vty_8c.html#ad96cb2b5ea01585f597cd584553e5ec6">vty_delete_backward_char</a> (vty);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae20b81d43461d23f30a09ec6063f6c82"></a><!-- doxytag: member="vty.c::vty_backward_pure_word" ref="ae20b81d43461d23f30a09ec6063f6c82" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_backward_pure_word </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00656">656</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">while</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> &gt; 0 &amp;&amp; vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> - 1] != <span class="charliteral">&#39; &#39;</span>)
    <a class="code" href="vty_8c.html#ae83b887d99a0493283dad484e58d16b8">vty_backward_char</a> (vty);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac633697855f1c48d8227645f6fbb624e"></a><!-- doxytag: member="vty.c::vty_backward_word" ref="ac633697855f1c48d8227645f6fbb624e" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_backward_word </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00664">664</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">while</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> &gt; 0 &amp;&amp; vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> - 1] == <span class="charliteral">&#39; &#39;</span>)
    <a class="code" href="vty_8c.html#ae83b887d99a0493283dad484e58d16b8">vty_backward_char</a> (vty);

  <span class="keywordflow">while</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> &gt; 0 &amp;&amp; vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> - 1] != <span class="charliteral">&#39; &#39;</span>)
    <a class="code" href="vty_8c.html#ae83b887d99a0493283dad484e58d16b8">vty_backward_char</a> (vty);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ace10a61328b0a67284a43e26d690e735"></a><!-- doxytag: member="vty.c::vty_beginning_of_line" ref="ace10a61328b0a67284a43e26d690e735" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_beginning_of_line </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00555">555</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">while</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>)
    <a class="code" href="vty_8c.html#ae83b887d99a0493283dad484e58d16b8">vty_backward_char</a> (vty);
}
</pre></div>
</div>
</div>
<a class="anchor" id="adfdcfb63a06407c35b1c1221fc523a1e"></a><!-- doxytag: member="vty.c::vty_buffer_reset" ref="adfdcfb63a06407c35b1c1221fc523a1e" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_buffer_reset </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l01330">1330</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="buffer_8c.html#a91ad0ff694ccef1876a3e8d8a3b05ffa">buffer_reset</a> (vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>);
  <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);
  <a class="code" href="vty_8c.html#aa88c9e2e5da06b826ac13025eefb386b">vty_redraw_line</a> (vty);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a46a8ab71c3c5e63dfe0b7881cfa8f8f8"></a><!-- doxytag: member="vty.c::vty_clear_buf" ref="a46a8ab71c3c5e63dfe0b7881cfa8f8f8" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_clear_buf </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l01085">1085</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  memset (vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>, 0, vty-&gt;<a class="code" href="structvty.html#ada832b278a60f536496555d6673cf97d">max</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="af1d7e2c952dfb90e0a7e2bbe194dedfb"></a><!-- doxytag: member="vty.c::vty_close" ref="af1d7e2c952dfb90e0a7e2bbe194dedfb" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void vty_close </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02163">2163</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

  <span class="comment">/* Cancel threads.*/</span>
  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a5d16168af87165fddd2aa6612c9740f1">t_read</a>)
    <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (vty-&gt;<a class="code" href="structvty.html#a5d16168af87165fddd2aa6612c9740f1">t_read</a>);
  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a4feadf59b37669005dd5cdb364a18ccf">t_write</a>)
    <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (vty-&gt;<a class="code" href="structvty.html#a4feadf59b37669005dd5cdb364a18ccf">t_write</a>);
  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a42012920c9e6ac0e0d5040ac48496d3e">t_timeout</a>)
    <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (vty-&gt;<a class="code" href="structvty.html#a42012920c9e6ac0e0d5040ac48496d3e">t_timeout</a>);

  <span class="comment">/* Flush buffer. */</span>
  <a class="code" href="buffer_8c.html#a191ab7385104a44e13f385e0e6ca1b5d">buffer_flush_all</a> (vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>, vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>);

  <span class="comment">/* Free input buffer. */</span>
  <a class="code" href="buffer_8c.html#a33630b21db5f9cda080c24c3175bde5a">buffer_free</a> (vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>);

  <span class="comment">/* Free command history. */</span>
  <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="vty_8h.html#a2c7bf19140857545865be759c8960bc4">VTY_MAXHIST</a>; i++)
    <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[i])
      <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167baa0c5966641068bad0544ced1b55176b5">MTYPE_VTY_HIST</a>, vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[i]);

  <span class="comment">/* Unset vector. */</span>
  <a class="code" href="vector_8c.html#aedb539ef50499b729c8bfb9c2d7989c3">vector_unset</a> (<a class="code" href="vty_8c.html#aada8117b2e5d72dcea3f29da3366ce4b">vtyvec</a>, vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>);

  <span class="comment">/* Close socket. */</span>
  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a> &gt; 0)
    close (vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>);

  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a9b08efdc39a659f450fdad3ca79a12d8">address</a>)
    <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, vty-&gt;<a class="code" href="structvty.html#a9b08efdc39a659f450fdad3ca79a12d8">address</a>);
  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>)
    <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba05f7d9e133f49a4c7aaa98a318692c88">MTYPE_VTY</a>, vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>);

  <span class="comment">/* Check configure. */</span>
  <a class="code" href="vty_8c.html#ae68c17df6974b76d0977fc41adde0f08">vty_config_unlock</a> (vty);

  <span class="comment">/* OK free vty. */</span>
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba05f7d9e133f49a4c7aaa98a318692c88">MTYPE_VTY</a>, vty);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad5461715b919e20f130c9f4b586cd42d"></a><!-- doxytag: member="vty.c::vty_command" ref="ad5461715b919e20f130c9f4b586cd42d" args="(struct vty *vty, char *buf)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int vty_command </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>buf</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00398">398</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret;
  <a class="code" href="struct__vector.html">vector</a> vline;
  <span class="keyword">const</span> <span class="keywordtype">char</span> *protocolname;

  <span class="comment">/* Split readline string up into the vector */</span>
  vline = <a class="code" href="command_8c.html#a968b2f52fc543595fa4ce625f5fdb6a3">cmd_make_strvec</a> (buf);

  <span class="keywordflow">if</span> (vline == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;

<span class="preprocessor">#ifdef CONSUMED_TIME_CHECK</span>
<span class="preprocessor"></span>  {
    <a class="code" href="thread_8h.html#ae80bba1eb296573455cd5885ba8a52ad">RUSAGE_T</a> before;
    <a class="code" href="thread_8h.html#ae80bba1eb296573455cd5885ba8a52ad">RUSAGE_T</a> after;
    <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> realtime, cputime;

    <a class="code" href="thread_8h.html#a023e544a82cd098fc592b46066a7fa47">GETRUSAGE</a>(&amp;before);
<span class="preprocessor">#endif </span><span class="comment">/* CONSUMED_TIME_CHECK */</span>

  ret = <a class="code" href="command_8c.html#acf65ad66c233b7722618e8f3725145e0">cmd_execute_command</a> (vline, vty, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0);

  <span class="comment">/* Get the name of the protocol if any */</span>
  <span class="keywordflow">if</span> (<a class="code" href="log_8c.html#a69cba84b9cc9c438ad5f5b1379b702b5">zlog_default</a>)
      protocolname = <a class="code" href="log_8c.html#a104618d1dc8bb7b6b5c36f8969f2a49e">zlog_proto_names</a>[<a class="code" href="log_8c.html#a69cba84b9cc9c438ad5f5b1379b702b5">zlog_default</a>-&gt;<a class="code" href="structzlog.html#acafcb64affec5374e8e4d61fded92812">protocol</a>];
  <span class="keywordflow">else</span>
      protocolname = <a class="code" href="log_8c.html#a104618d1dc8bb7b6b5c36f8969f2a49e">zlog_proto_names</a>[<a class="code" href="log_8h.html#a7191b9759b28b288102a2c6dd41e20a3aa158dd67301a680e9877c00efbb01c35">ZLOG_NONE</a>];
                                                                           
<span class="preprocessor">#ifdef CONSUMED_TIME_CHECK</span>
<span class="preprocessor"></span>    <a class="code" href="thread_8h.html#a023e544a82cd098fc592b46066a7fa47">GETRUSAGE</a>(&amp;after);
    <span class="keywordflow">if</span> ((realtime = <a class="code" href="thread_8c.html#ac1c4b7776745c9e3a9c77f136123c753">thread_consumed_time</a>(&amp;after, &amp;before, &amp;cputime)) &gt;
        CONSUMED_TIME_CHECK)
      <span class="comment">/* Warn about CPU hog that must be fixed. */</span>
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;SLOW COMMAND: command took %lums (cpu time %lums): %s&quot;</span>,
            realtime/1000, cputime/1000, buf);
  }
<span class="preprocessor">#endif </span><span class="comment">/* CONSUMED_TIME_CHECK */</span>

  <span class="keywordflow">if</span> (ret != <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>)
    <span class="keywordflow">switch</span> (ret)
      {
      <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>:
    <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a918d01c53936e81c45a177b0ceda3eca">type</a> == VTY_FILE)
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;Warning...%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    <span class="keywordflow">break</span>;
      <span class="keywordflow">case</span> <a class="code" href="command_8h.html#aaca9c63a322f9ed0311fd20404ce8e9a">CMD_ERR_AMBIGUOUS</a>:
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Ambiguous command.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    <span class="keywordflow">break</span>;
      <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a007b585758677d61751303a88c8914d5">CMD_ERR_NO_MATCH</a>:
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% [%s] Unknown command: %s%s&quot;</span>, protocolname, buf, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    <span class="keywordflow">break</span>;
      <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a9442a1eab547aab6955358c45814015c">CMD_ERR_INCOMPLETE</a>:
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Command incomplete.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    <span class="keywordflow">break</span>;
      }
  <a class="code" href="command_8c.html#a2d4e7d3f3fe917dafa06eb6d156d9a6e">cmd_free_strvec</a> (vline);

  <span class="keywordflow">return</span> ret;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad72e0680a6ba30787728859175d70bc8"></a><!-- doxytag: member="vty.c::vty_complete_command" ref="ad72e0680a6ba30787728859175d70bc8" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_complete_command </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00855">855</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
  <span class="keywordtype">int</span> ret;
  <span class="keywordtype">char</span> **matched = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <a class="code" href="struct__vector.html">vector</a> vline;

  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a302e1f38939b1a74bc848007bb70bfdf">AUTH_NODE</a> || vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a96b74116564789f517eef9284f18b472">AUTH_ENABLE_NODE</a>)
    <span class="keywordflow">return</span>;

  vline = <a class="code" href="command_8c.html#a968b2f52fc543595fa4ce625f5fdb6a3">cmd_make_strvec</a> (vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>);
  <span class="keywordflow">if</span> (vline == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span>;

  <span class="comment">/* In case of &#39;help \t&#39;. */</span>
  <span class="keywordflow">if</span> (isspace ((<span class="keywordtype">int</span>) vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> - 1]))
    <a class="code" href="vector_8c.html#a09dff784fcc0e322c64e5975b3255fe0">vector_set</a> (vline, <span class="charliteral">&#39;\0&#39;</span>);

  matched = <a class="code" href="command_8c.html#a1d01d855dff60ded22f25f24d8c6d715">cmd_complete_command</a> (vline, vty, &amp;ret);
  
  <a class="code" href="command_8c.html#a2d4e7d3f3fe917dafa06eb6d156d9a6e">cmd_free_strvec</a> (vline);

  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
  <span class="keywordflow">switch</span> (ret)
    {
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#aaca9c63a322f9ed0311fd20404ce8e9a">CMD_ERR_AMBIGUOUS</a>:
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Ambiguous command.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);
      <a class="code" href="vty_8c.html#aa88c9e2e5da06b826ac13025eefb386b">vty_redraw_line</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a007b585758677d61751303a88c8914d5">CMD_ERR_NO_MATCH</a>:
      <span class="comment">/* vty_out (vty, &quot;%% There is no matched command.%s&quot;, VTY_NEWLINE); */</span>
      <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);
      <a class="code" href="vty_8c.html#aa88c9e2e5da06b826ac13025eefb386b">vty_redraw_line</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#ad5ac7be44eb88dbf764939677e82b10f">CMD_COMPLETE_FULL_MATCH</a>:
      <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);
      <a class="code" href="vty_8c.html#aa88c9e2e5da06b826ac13025eefb386b">vty_redraw_line</a> (vty);
      <a class="code" href="vty_8c.html#ae20b81d43461d23f30a09ec6063f6c82">vty_backward_pure_word</a> (vty);
      <a class="code" href="vty_8c.html#af8b383a4c3ef289b4aabda0c243d4588">vty_insert_word_overwrite</a> (vty, matched[0]);
      <a class="code" href="vty_8c.html#a4d876e82ce61720dead15aac07e29c30">vty_self_insert</a> (vty, <span class="charliteral">&#39; &#39;</span>);
      <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, matched[0]);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a40e2355b69f7202cdd91b873749e2efc">CMD_COMPLETE_MATCH</a>:
      <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);
      <a class="code" href="vty_8c.html#aa88c9e2e5da06b826ac13025eefb386b">vty_redraw_line</a> (vty);
      <a class="code" href="vty_8c.html#ae20b81d43461d23f30a09ec6063f6c82">vty_backward_pure_word</a> (vty);
      <a class="code" href="vty_8c.html#af8b383a4c3ef289b4aabda0c243d4588">vty_insert_word_overwrite</a> (vty, matched[0]);
      <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, matched[0]);
      <a class="code" href="vector_8c.html#ac09d5fe94ccb5c5b0e883f2565a1a858">vector_only_index_free</a> (matched);
      <span class="keywordflow">return</span>;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a9e0e784e45db546ff1a7f09b7b43ebb9">CMD_COMPLETE_LIST_MATCH</a>:
      <span class="keywordflow">for</span> (i = 0; matched[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>; i++)
    {
      <span class="keywordflow">if</span> (i != 0 &amp;&amp; ((i % 6) == 0))
        <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%-10s &quot;</span>, matched[i]);
      <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, matched[i]);
    }
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

      <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);
      <a class="code" href="vty_8c.html#aa88c9e2e5da06b826ac13025eefb386b">vty_redraw_line</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6f6aa6c6eb58a1df028034d288d79ddf">CMD_ERR_NOTHING_TODO</a>:
      <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);
      <a class="code" href="vty_8c.html#aa88c9e2e5da06b826ac13025eefb386b">vty_redraw_line</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">default</span>:
      <span class="keywordflow">break</span>;
    }
  <span class="keywordflow">if</span> (matched)
    <a class="code" href="vector_8c.html#ac09d5fe94ccb5c5b0e883f2565a1a858">vector_only_index_free</a> (matched);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae9113e4324d8e142ea8efd2402667b72"></a><!-- doxytag: member="vty.c::vty_config_lock" ref="ae9113e4324d8e142ea8efd2402667b72" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int vty_config_lock </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02477">2477</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#a472109ecd35a2f4a2953e6ca76a5824d">vty_config</a> == 0)
    {
      vty-&gt;<a class="code" href="structvty.html#a2dceb86fc008314e2f573e3880f7fbfc">config</a> = 1;
      <a class="code" href="vty_8c.html#a472109ecd35a2f4a2953e6ca76a5824d">vty_config</a> = 1;
    }
  <span class="keywordflow">return</span> vty-&gt;<a class="code" href="structvty.html#a2dceb86fc008314e2f573e3880f7fbfc">config</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae68c17df6974b76d0977fc41adde0f08"></a><!-- doxytag: member="vty.c::vty_config_unlock" ref="ae68c17df6974b76d0977fc41adde0f08" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int vty_config_unlock </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02488">2488</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#a472109ecd35a2f4a2953e6ca76a5824d">vty_config</a> == 1 &amp;&amp; vty-&gt;<a class="code" href="structvty.html#a2dceb86fc008314e2f573e3880f7fbfc">config</a> == 1)
    {
      vty-&gt;<a class="code" href="structvty.html#a2dceb86fc008314e2f573e3880f7fbfc">config</a> = 0;
      <a class="code" href="vty_8c.html#a472109ecd35a2f4a2953e6ca76a5824d">vty_config</a> = 0;
    }
  <span class="keywordflow">return</span> vty-&gt;<a class="code" href="structvty.html#a2dceb86fc008314e2f573e3880f7fbfc">config</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af80aee0d6f35fb79eb960743cfa18a1e"></a><!-- doxytag: member="vty.c::vty_config_write" ref="af80aee0d6f35fb79eb960743cfa18a1e" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int vty_config_write </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02828">2828</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;line vty%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a>)
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; access-class %s%s&quot;</span>,
         <a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a>)
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; ipv6 access-class %s%s&quot;</span>,
         <a class="code" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="comment">/* exec-timeout */</span>
  <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#a9dc870017884136998187f770ec7851c">vty_timeout_val</a> != <a class="code" href="vty_8h.html#a03e48199ba963901e8a24ebc553c4a64">VTY_TIMEOUT_DEFAULT</a>)
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; exec-timeout %ld %ld%s&quot;</span>, 
         <a class="code" href="vty_8c.html#a9dc870017884136998187f770ec7851c">vty_timeout_val</a> / 60,
         <a class="code" href="vty_8c.html#a9dc870017884136998187f770ec7851c">vty_timeout_val</a> % 60, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="comment">/* login */</span>
  <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#a27b0172ccf3d40051140bb3a04607711">no_password_check</a>)
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; no login%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    
  <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#a78ee728656e5a1528d1b45e94acc23a6">restricted_mode</a> != <a class="code" href="vty_8c.html#a4af47f7385ea1ddf6492f7bfcb37cd7e">restricted_mode_default</a>)
    {
      <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#a4af47f7385ea1ddf6492f7bfcb37cd7e">restricted_mode_default</a>)
        <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; no anonymous restricted%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">else</span>
        <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; anonymous restricted%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    }
  
  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;!%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a911d71ae8d7bfbb16ab75a0f77c05c3c"></a><!-- doxytag: member="vty.c::vty_create" ref="a911d71ae8d7bfbb16ab75a0f77c05c3c" args="(int vty_sock, union sockunion *su)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static struct <a class="el" href="structvty.html">vty</a>* vty_create </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>vty_sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">union <a class="el" href="unionsockunion.html">sockunion</a> *&#160;</td>
          <td class="paramname"><em>su</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static, read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l01611">1611</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structvty.html">vty</a> *<a class="code" href="vtysh_8c.html#a15b2c4e868040617c54eaaba3663b337">vty</a>;

  <span class="comment">/* Allocate new vty structure and set up default values. */</span>
  vty = <a class="code" href="vty_8c.html#a5761c76c7eaf421587052c372034cd57">vty_new</a> ();
  vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a> = vty_sock;
  vty-&gt;<a class="code" href="structvty.html#a918d01c53936e81c45a177b0ceda3eca">type</a> = <a class="code" href="structvty.html#a6cef26c7c345053bf910a8869d5c3d29adabc52cc2665954eb91c79357821ccb7">VTY_TERM</a>;
  vty-&gt;<a class="code" href="structvty.html#a9b08efdc39a659f450fdad3ca79a12d8">address</a> = <a class="code" href="sockunion_8c.html#a81204a150d1d4f669bb69fdb0915a727">sockunion_su2str</a> (su);
  <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#a27b0172ccf3d40051140bb3a04607711">no_password_check</a>)
    {
      <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#a78ee728656e5a1528d1b45e94acc23a6">restricted_mode</a>)
        vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acb0c5ada108352e3e869838b0ee04c3b">RESTRICTED_NODE</a>;
      <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#af1f270bdc9e34870cc10cf9fe0f5a65e">advanced</a>)
    vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>;
      <span class="keywordflow">else</span>
    vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>;
    }
  <span class="keywordflow">else</span>
    vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a302e1f38939b1a74bc848007bb70bfdf">AUTH_NODE</a>;
  vty-&gt;<a class="code" href="structvty.html#a2bbfb0bd919de5d12e7636edbe1e60bd">fail</a> = 0;
  vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> = 0;
  <a class="code" href="vty_8c.html#a46a8ab71c3c5e63dfe0b7881cfa8f8f8">vty_clear_buf</a> (vty);
  vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> = 0;
  memset (vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>, 0, sizeof (vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>));
  vty-&gt;<a class="code" href="structvty.html#a7baae5746026d42a5c13693d95354b19">hp</a> = 0;
  vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a> = 0;
  <a class="code" href="vector_8c.html#a4ab15201b63a93279459a6d3d90600e5">vector_set_index</a> (<a class="code" href="vty_8c.html#aada8117b2e5d72dcea3f29da3366ce4b">vtyvec</a>, vty_sock, vty);
  vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> = <a class="code" href="vty_8c.html#acf239d95250577af6d34d80d70aac760">VTY_NORMAL</a>;
  vty-&gt;<a class="code" href="structvty.html#aa334d5bb623207305fa72d76151f8096">v_timeout</a> = <a class="code" href="vty_8c.html#a9dc870017884136998187f770ec7851c">vty_timeout_val</a>;
  <span class="keywordflow">if</span> (<a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#a0bd83ed5d3b108e078077a3d9be64ae1">lines</a> &gt;= 0)
    vty-&gt;<a class="code" href="structvty.html#af36ed88d29c821bf8aa454cf8a36391a">lines</a> = <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#a0bd83ed5d3b108e078077a3d9be64ae1">lines</a>;
  <span class="keywordflow">else</span>
    vty-&gt;<a class="code" href="structvty.html#af36ed88d29c821bf8aa454cf8a36391a">lines</a> = -1;
  vty-&gt;<a class="code" href="structvty.html#a84a9697ba7d4b0b1fc67da51a44cc46b">iac</a> = 0;
  vty-&gt;<a class="code" href="structvty.html#af43115c5fffab36e14b77b8a893a361a">iac_sb_in_progress</a> = 0;
  vty-&gt;<a class="code" href="structvty.html#a8e79b608af5753bb4a493fbaa62e3db1">sb_len</a> = 0;

  <span class="keywordflow">if</span> (! <a class="code" href="vty_8c.html#a27b0172ccf3d40051140bb3a04607711">no_password_check</a>)
    {
      <span class="comment">/* Vty is not available if password isn&#39;t set. */</span>
      <span class="keywordflow">if</span> (<a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#ad0af28f48e2903d894adc73c3c58469a">password</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#a8c7b6573685405878afa6bd78fb68a9c">password_encrypt</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;Vty password is not set.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> = <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6ab568d9eaea4e6aa93ae7fb8a7c65d4cb">VTY_CLOSE</a>;
      <a class="code" href="vty_8c.html#af1d7e2c952dfb90e0a7e2bbe194dedfb">vty_close</a> (vty);
      <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }
    }

  <span class="comment">/* Say hello to the world. */</span>
  <a class="code" href="vty_8c.html#aa2f6866b034e4a3f2e6b9e354ba46d95">vty_hello</a> (vty);
  <span class="keywordflow">if</span> (! <a class="code" href="vty_8c.html#a27b0172ccf3d40051140bb3a04607711">no_password_check</a>)
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%sUser Access Verification%s%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="comment">/* Setting up terminal. */</span>
  <a class="code" href="vty_8c.html#a90006000348e50410b5a8040b241d411">vty_will_echo</a> (vty);
  <a class="code" href="vty_8c.html#aee3608a98cb407de696ed4595c5b5d8d">vty_will_suppress_go_ahead</a> (vty);

  <a class="code" href="vty_8c.html#a61ebacd84553a2a9ba1012388c8f0f75">vty_dont_linemode</a> (vty);
  <a class="code" href="vty_8c.html#ada289c68b5d15981676e822080e04b41">vty_do_window_size</a> (vty);
  <span class="comment">/* vty_dont_lflow_ahead (vty); */</span>

  <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);

  <span class="comment">/* Add read/write thread. */</span>
  <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea73e4d70c7cc9c2560723e639332d7f2d">VTY_WRITE</a>, vty_sock, vty);
  <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea9ed3db9f85ae6bdc30382d62bc01a807">VTY_READ</a>, vty_sock, vty);

  <span class="keywordflow">return</span> <a class="code" href="vtysh_8c.html#a15b2c4e868040617c54eaaba3663b337">vty</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad96cb2b5ea01585f597cd584553e5ec6"></a><!-- doxytag: member="vty.c::vty_delete_backward_char" ref="ad96cb2b5ea01585f597cd584553e5ec6" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_delete_backward_char </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00762">762</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> == 0)
    <span class="keywordflow">return</span>;

  <a class="code" href="vty_8c.html#ae83b887d99a0493283dad484e58d16b8">vty_backward_char</a> (vty);
  <a class="code" href="vty_8c.html#a843699a9603df9fec1f79aa648daeeaa">vty_delete_char</a> (vty);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a843699a9603df9fec1f79aa648daeeaa"></a><!-- doxytag: member="vty.c::vty_delete_char" ref="a843699a9603df9fec1f79aa648daeeaa" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_delete_char </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00730">730</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
  <span class="keywordtype">int</span> size;

  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> == 0)
    {
      <a class="code" href="vty_8c.html#a2332d063c4940eabba84a4ff92312f06">vty_down_level</a> (vty);
      <span class="keywordflow">return</span>;
    }

  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> == vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>)
    <span class="keywordflow">return</span>;         <span class="comment">/* completion need here? */</span>

  size = vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> - vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>;

  vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>--;
  memmove (&amp;vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>], &amp;vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> + 1], size - 1);
  vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>] = <span class="charliteral">&#39;\0&#39;</span>;
  
  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a302e1f38939b1a74bc848007bb70bfdf">AUTH_NODE</a> || vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a96b74116564789f517eef9284f18b472">AUTH_ENABLE_NODE</a>)
    <span class="keywordflow">return</span>;

  <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, &amp;vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>], size - 1);
  <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, &amp;<a class="code" href="vty_8c.html#a05df3d7f54ae7e630ade2a3124ce48d6">telnet_space_char</a>, 1);

  <span class="keywordflow">for</span> (i = 0; i &lt; size; i++)
    <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, &amp;<a class="code" href="vty_8c.html#a050c5269ec6f36e488b05d6b564601e2">telnet_backward_char</a>, 1);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a39986e2365dcda01161b8497a4a9b83b"></a><!-- doxytag: member="vty.c::vty_describe_command" ref="a39986e2365dcda01161b8497a4a9b83b" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_describe_command </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00972">972</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret;
  <a class="code" href="struct__vector.html">vector</a> vline;
  <a class="code" href="struct__vector.html">vector</a> describe;
  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>, <a class="code" href="structvty.html#a57c305025545e9f6f58ecc68380cd6de">width</a>, desc_width;
  <span class="keyword">struct </span><a class="code" href="structdesc.html">desc</a> *<a class="code" href="structdesc.html">desc</a>, *<a class="code" href="command_8c.html#a26037a7b8f4100941fa9d6e75596d81e">desc_cr</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  vline = <a class="code" href="command_8c.html#a968b2f52fc543595fa4ce625f5fdb6a3">cmd_make_strvec</a> (vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>);

  <span class="comment">/* In case of &#39;&gt; ?&#39;. */</span>
  <span class="keywordflow">if</span> (vline == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      vline = <a class="code" href="vector_8c.html#ae6a929ac3530de06eee1df3629d15247">vector_init</a> (1);
      <a class="code" href="vector_8c.html#a09dff784fcc0e322c64e5975b3255fe0">vector_set</a> (vline, <span class="charliteral">&#39;\0&#39;</span>);
    }
  <span class="keywordflow">else</span> 
    <span class="keywordflow">if</span> (isspace ((<span class="keywordtype">int</span>) vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> - 1]))
      <a class="code" href="vector_8c.html#a09dff784fcc0e322c64e5975b3255fe0">vector_set</a> (vline, <span class="charliteral">&#39;\0&#39;</span>);

  describe = <a class="code" href="command_8c.html#a7cd7526d1c0ed77e854952eca9209502">cmd_describe_command</a> (vline, vty, &amp;ret);

  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="comment">/* Ambiguous error. */</span>
  <span class="keywordflow">switch</span> (ret)
    {
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#aaca9c63a322f9ed0311fd20404ce8e9a">CMD_ERR_AMBIGUOUS</a>:
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% Ambiguous command.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">goto</span> out;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a007b585758677d61751303a88c8914d5">CMD_ERR_NO_MATCH</a>:
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%% There is no matched command.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">goto</span> out;
      <span class="keywordflow">break</span>;
    }  

  <span class="comment">/* Get width of command string. */</span>
  width = 0;
  <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="vector_8h.html#ac96b7beddf251a81df131543d06d63c7">vector_active</a> (describe); i++)
    <span class="keywordflow">if</span> ((desc = <a class="code" href="vector_8h.html#a34cb4a77fbd6ab6cb23707cdd1c4c0d2">vector_slot</a> (describe, i)) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
      {
    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> len;

    <span class="keywordflow">if</span> (desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>[0] == <span class="charliteral">&#39;\0&#39;</span>)
      <span class="keywordflow">continue</span>;

    len = strlen (desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>);
    <span class="keywordflow">if</span> (desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>[0] == <span class="charliteral">&#39;.&#39;</span>)
      len--;

    <span class="keywordflow">if</span> (width &lt; len)
      width = len;
      }

  <span class="comment">/* Get width of description string. */</span>
  desc_width = vty-&gt;<a class="code" href="structvty.html#a57c305025545e9f6f58ecc68380cd6de">width</a> - (width + 6);

  <span class="comment">/* Print out description. */</span>
  <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="vector_8h.html#ac96b7beddf251a81df131543d06d63c7">vector_active</a> (describe); i++)
    <span class="keywordflow">if</span> ((desc = <a class="code" href="vector_8h.html#a34cb4a77fbd6ab6cb23707cdd1c4c0d2">vector_slot</a> (describe, i)) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
      {
    <span class="keywordflow">if</span> (desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>[0] == <span class="charliteral">&#39;\0&#39;</span>)
      <span class="keywordflow">continue</span>;
    
    <span class="keywordflow">if</span> (strcmp (desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>, <a class="code" href="command_8c.html#a3e76b268e2a2b91c331a523ef8f3912d">command_cr</a>) == 0)
      {
        desc_cr = desc;
        <span class="keywordflow">continue</span>;
      }

    <span class="keywordflow">if</span> (!desc-&gt;<a class="code" href="structdesc.html#ad00be16e06d1e70d8a047cae757be275">str</a>)
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  %-s%s&quot;</span>,
           desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>[0] == <span class="charliteral">&#39;.&#39;</span> ? desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a> + 1 : desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>,
           <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (desc_width &gt;= strlen (desc-&gt;<a class="code" href="structdesc.html#ad00be16e06d1e70d8a047cae757be275">str</a>))
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  %-*s  %s%s&quot;</span>, width,
           desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>[0] == <span class="charliteral">&#39;.&#39;</span> ? desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a> + 1 : desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>,
           desc-&gt;<a class="code" href="structdesc.html#ad00be16e06d1e70d8a047cae757be275">str</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    <span class="keywordflow">else</span>
      <a class="code" href="vty_8c.html#a4749fbdd1bd21c94175d6e8e92545528">vty_describe_fold</a> (vty, width, desc_width, desc);

<span class="preprocessor">#if 0</span>
<span class="preprocessor"></span>    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  %-*s %s%s&quot;</span>, width
         desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>[0] == <span class="charliteral">&#39;.&#39;</span> ? desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a> + 1 : desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>,
         desc-&gt;<a class="code" href="structdesc.html#ad00be16e06d1e70d8a047cae757be275">str</a> ? desc-&gt;<a class="code" href="structdesc.html#ad00be16e06d1e70d8a047cae757be275">str</a> : <span class="stringliteral">&quot;&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<span class="preprocessor">#endif </span><span class="comment">/* 0 */</span>
      }

  <span class="keywordflow">if</span> ((desc = desc_cr))
    {
      <span class="keywordflow">if</span> (!desc-&gt;<a class="code" href="structdesc.html#ad00be16e06d1e70d8a047cae757be275">str</a>)
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  %-s%s&quot;</span>,
         desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>[0] == <span class="charliteral">&#39;.&#39;</span> ? desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a> + 1 : desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>,
         <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">else</span> <span class="keywordflow">if</span> (desc_width &gt;= strlen (desc-&gt;<a class="code" href="structdesc.html#ad00be16e06d1e70d8a047cae757be275">str</a>))
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  %-*s  %s%s&quot;</span>, width,
         desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>[0] == <span class="charliteral">&#39;.&#39;</span> ? desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a> + 1 : desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>,
         desc-&gt;<a class="code" href="structdesc.html#ad00be16e06d1e70d8a047cae757be275">str</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">else</span>
    <a class="code" href="vty_8c.html#a4749fbdd1bd21c94175d6e8e92545528">vty_describe_fold</a> (vty, width, desc_width, desc);
    }

out:
  <a class="code" href="command_8c.html#a2d4e7d3f3fe917dafa06eb6d156d9a6e">cmd_free_strvec</a> (vline);
  <span class="keywordflow">if</span> (describe)
    <a class="code" href="vector_8c.html#af535d7daaa1dc88a3ac5c4451a6296f0">vector_free</a> (describe);

  <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);
  <a class="code" href="vty_8c.html#aa88c9e2e5da06b826ac13025eefb386b">vty_redraw_line</a> (vty);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4749fbdd1bd21c94175d6e8e92545528"></a><!-- doxytag: member="vty.c::vty_describe_fold" ref="a4749fbdd1bd21c94175d6e8e92545528" args="(struct vty *vty, int cmd_width, unsigned int desc_width, struct desc *desc)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_describe_fold </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>cmd_width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>desc_width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structdesc.html">desc</a> *&#160;</td>
          <td class="paramname"><em>desc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00932">932</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">char</span> *buf;
  <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>, *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
  <span class="keywordtype">int</span> pos;

  cmd = desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>[0] == <span class="charliteral">&#39;.&#39;</span> ? desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a> + 1 : desc-&gt;<a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>;

  <span class="keywordflow">if</span> (desc_width &lt;= 0)
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  %-*s  %s%s&quot;</span>, cmd_width, cmd, desc-&gt;<a class="code" href="structdesc.html#ad00be16e06d1e70d8a047cae757be275">str</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">return</span>;
    }

  buf = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, strlen (desc-&gt;<a class="code" href="structdesc.html#ad00be16e06d1e70d8a047cae757be275">str</a>) + 1);

  <span class="keywordflow">for</span> (p = desc-&gt;<a class="code" href="structdesc.html#ad00be16e06d1e70d8a047cae757be275">str</a>; strlen (p) &gt; desc_width; p += pos + 1)
    {
      <span class="keywordflow">for</span> (pos = desc_width; pos &gt; 0; pos--)
      <span class="keywordflow">if</span> (*(p + pos) == <span class="charliteral">&#39; &#39;</span>)
        <span class="keywordflow">break</span>;

      <span class="keywordflow">if</span> (pos == 0)
      <span class="keywordflow">break</span>;

      strncpy (buf, p, pos);
      buf[pos] = <span class="charliteral">&#39;\0&#39;</span>;
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  %-*s  %s%s&quot;</span>, cmd_width, cmd, buf, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

      cmd = <span class="stringliteral">&quot;&quot;</span>;
    }

  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  %-*s  %s%s&quot;</span>, cmd_width, cmd, p, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, buf);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ada289c68b5d15981676e822080e04b41"></a><!-- doxytag: member="vty.c::vty_do_window_size" ref="ada289c68b5d15981676e822080e04b41" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_do_window_size </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00301">301</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> <a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>[] = { IAC, DO, TELOPT_NAWS, <span class="charliteral">&#39;\0&#39;</span> };
  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, cmd);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a61ebacd84553a2a9ba1012388c8f0f75"></a><!-- doxytag: member="vty.c::vty_dont_linemode" ref="a61ebacd84553a2a9ba1012388c8f0f75" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_dont_linemode </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00293">293</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> <a class="code" href="structdesc.html#a4a8b851af1764597117afabeeb7c92c1">cmd</a>[] = { IAC, DONT, TELOPT_LINEMODE, <span class="charliteral">&#39;\0&#39;</span> };
  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, cmd);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a2332d063c4940eabba84a4ff92312f06"></a><!-- doxytag: member="vty.c::vty_down_level" ref="a2332d063c4940eabba84a4ff92312f06" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_down_level </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00676">676</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
  (*<a class="code" href="command_8h.html#a0f38e7320fd26709b67553e7b06e1ba8">config_exit_cmd</a>.<a class="code" href="structcmd__element.html#ae2c6558413d282f35bbe645a381c7355">func</a>)(<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, vty, 0, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
  <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);
  vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> = 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a763be1552ab8388b9f9467f363d82049"></a><!-- doxytag: member="vty.c::vty_end_config" ref="a763be1552ab8388b9f9467f363d82049" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_end_config </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00686">686</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="keywordflow">switch</span> (vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a>)
    {
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acb0c5ada108352e3e869838b0ee04c3b">RESTRICTED_NODE</a>:
      <span class="comment">/* Nothing to do. */</span>
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682af7fc20f627618eee254477289b890df3">ZEBRA_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682aba91035637d2e661aaea111ea200751a">RIP_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a7493d9d6392a7010c13aa962093436a7">BGP_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a7d6209ce7672734b4681adb05e925e08">BGP_VPNV4_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a7391c0900502387d3204e9de89022905">BGP_IPV4_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a0f046c161a229e71ed9da963e29c961d">BGP_IPV4M_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ad40fb52980325d9440b23b5f86701ffc">BGP_IPV6_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682adbe4c8c9e45712b199bcc26560e77ea4">BGP_IPV6M_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a53037feb34b636b5cabbcdb85698ac35">OSPF_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a3e34f801d98de220164f1a6b7976d3c4">OSPF6_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab25ba1a66148ff64a7b5aa681cc8c2dd">ISIS_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a17696c332f7c9a776b7ce27fab05739b">KEYCHAIN_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a82708770dcbadd9cbe5279a2d7d1a974">KEYCHAIN_KEY_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8863fd12cbe31d4555e4bfe57be8bc89">MASC_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>:
      <a class="code" href="vty_8c.html#ae68c17df6974b76d0977fc41adde0f08">vty_config_unlock</a> (vty);
      vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">default</span>:
      <span class="comment">/* Unknown node, we have to ignore it. */</span>
      <span class="keywordflow">break</span>;
    }

  <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);
  vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> = 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a396592bed9a5f245d8607e02b27ae861"></a><!-- doxytag: member="vty.c::vty_end_of_line" ref="a396592bed9a5f245d8607e02b27ae861" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_end_of_line </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00563">563</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">while</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> &lt; vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>)
    <a class="code" href="vty_8c.html#adb129e2c5ad62108a56cdacddb7f57b8">vty_forward_char</a> (vty);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a8609a6dc68804aff15b0d00254a44fa5"></a><!-- doxytag: member="vty.c::vty_ensure" ref="a8609a6dc68804aff15b0d00254a44fa5" args="(struct vty *vty, int length)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_ensure </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00475">475</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#ada832b278a60f536496555d6673cf97d">max</a> &lt;= <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>)
    {
      vty-&gt;<a class="code" href="structvty.html#ada832b278a60f536496555d6673cf97d">max</a> *= 2;
      vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a> = <a class="code" href="memory_8h.html#ad9ab7c99da79ca966328c35e9185cc57">XREALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba05f7d9e133f49a4c7aaa98a318692c88">MTYPE_VTY</a>, vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>, vty-&gt;<a class="code" href="structvty.html#ada832b278a60f536496555d6673cf97d">max</a>);
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab9ea51a34c5694514373852230570eb2"></a><!-- doxytag: member="vty.c::vty_escape_map" ref="ab9ea51a34c5694514373852230570eb2" args="(unsigned char c, struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_escape_map </td>
          <td>(</td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l01304">1304</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">switch</span> (c)
    {
    <span class="keywordflow">case</span> (<span class="charliteral">&#39;A&#39;</span>):
      <a class="code" href="vty_8c.html#a8bae6998c5a99c023cf77eab3c4b8ce2">vty_previous_line</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> (<span class="charliteral">&#39;B&#39;</span>):
      <a class="code" href="vty_8c.html#ac933bc02bc1fcb0c345e08356a1090cc">vty_next_line</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> (<span class="charliteral">&#39;C&#39;</span>):
      <a class="code" href="vty_8c.html#adb129e2c5ad62108a56cdacddb7f57b8">vty_forward_char</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> (<span class="charliteral">&#39;D&#39;</span>):
      <a class="code" href="vty_8c.html#ae83b887d99a0493283dad484e58d16b8">vty_backward_char</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">default</span>:
      <span class="keywordflow">break</span>;
    }

  <span class="comment">/* Go back to normal mode. */</span>
  vty-&gt;<a class="code" href="structvty.html#a5b11c8d6a7cc2ff7cad6a62fa26ffde5">escape</a> = <a class="code" href="vty_8c.html#acf239d95250577af6d34d80d70aac760">VTY_NORMAL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab2f46d63c1d417738ae8a621dd8ff657"></a><!-- doxytag: member="vty.c::vty_event" ref="ab2f46d63c1d417738ae8a621dd8ff657" args="(enum event, int, struct vty *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_event </td>
          <td>(</td>
          <td class="paramtype">enum <a class="el" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a> <a class="el" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ad051d84b39c71fdbd554626c26f2b8a0"></a><!-- doxytag: member="vty.c::vty_execute" ref="ad051d84b39c71fdbd554626c26f2b8a0" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int vty_execute </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l01268">1268</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret;

  ret = <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;

  <span class="keywordflow">switch</span> (vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a>)
    {
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a302e1f38939b1a74bc848007bb70bfdf">AUTH_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a96b74116564789f517eef9284f18b472">AUTH_ENABLE_NODE</a>:
      <a class="code" href="vty_8c.html#a819a97da4f2899ac41493be8c6b0e238">vty_auth</a> (vty, vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">default</span>:
      ret = <a class="code" href="vty_8c.html#ad5461715b919e20f130c9f4b586cd42d">vty_command</a> (vty, vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>);
      <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a918d01c53936e81c45a177b0ceda3eca">type</a> == VTY_TERM)
    <a class="code" href="vty_8c.html#a7399bffcb99c9a604913470e51e73603">vty_hist_add</a> (vty);
      <span class="keywordflow">break</span>;
    }

  <span class="comment">/* Clear command line buffer. */</span>
  vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> = vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> = 0;
  <a class="code" href="vty_8c.html#a46a8ab71c3c5e63dfe0b7881cfa8f8f8">vty_clear_buf</a> (vty);

  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> != VTY_CLOSE )
    <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);

  <span class="keywordflow">return</span> ret;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a011ab81751a98ad0b5ecb28d6b3a29b2"></a><!-- doxytag: member="vty.c::vty_flush" ref="a011ab81751a98ad0b5ecb28d6b3a29b2" args="(struct thread *thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int vty_flush </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>thread</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l01549">1549</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> erase;
  <a class="code" href="buffer_8h.html#a11b72623a9601834584c5ecf08dd6e27">buffer_status_t</a> flushrc;
  <span class="keywordtype">int</span> vty_sock = <a class="code" href="thread_8h.html#a89bd56f991717646441f9dffc010d4f5">THREAD_FD</a> (thread);
  <span class="keyword">struct </span><a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a> = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);

  vty-&gt;<a class="code" href="structvty.html#a4feadf59b37669005dd5cdb364a18ccf">t_write</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="comment">/* Tempolary disable read thread. */</span>
  <span class="keywordflow">if</span> ((vty-&gt;<a class="code" href="structvty.html#af36ed88d29c821bf8aa454cf8a36391a">lines</a> == 0) &amp;&amp; vty-&gt;<a class="code" href="structvty.html#a5d16168af87165fddd2aa6612c9740f1">t_read</a>)
    {
      <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (vty-&gt;<a class="code" href="structvty.html#a5d16168af87165fddd2aa6612c9740f1">t_read</a>);
      vty-&gt;<a class="code" href="structvty.html#a5d16168af87165fddd2aa6612c9740f1">t_read</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }

  <span class="comment">/* Function execution continue. */</span>
  erase = ((vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> == <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6a77994ab451230a1056115ab3b0c1f6e0">VTY_MORE</a> || vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> == <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6a0d0fcf88504c1b17beaca80dfdc842fe">VTY_MORELINE</a>));

  <span class="comment">/* N.B. if width is 0, that means we don&#39;t know the window size. */</span>
  <span class="keywordflow">if</span> ((vty-&gt;<a class="code" href="structvty.html#af36ed88d29c821bf8aa454cf8a36391a">lines</a> == 0) || (vty-&gt;<a class="code" href="structvty.html#a57c305025545e9f6f58ecc68380cd6de">width</a> == 0))
    flushrc = <a class="code" href="buffer_8c.html#a3df3e577fcbeec460e3ddab6bc6f59ec">buffer_flush_available</a>(vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>, vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>);
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> == <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6a0d0fcf88504c1b17beaca80dfdc842fe">VTY_MORELINE</a>)
    flushrc = <a class="code" href="buffer_8c.html#ac111697dec4319bed2d0abd7aa32eab7">buffer_flush_window</a>(vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>, vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>, vty-&gt;<a class="code" href="structvty.html#a57c305025545e9f6f58ecc68380cd6de">width</a>,
                  1, erase, 0);
  <span class="keywordflow">else</span>
    flushrc = <a class="code" href="buffer_8c.html#ac111697dec4319bed2d0abd7aa32eab7">buffer_flush_window</a>(vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>, vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>, vty-&gt;<a class="code" href="structvty.html#a57c305025545e9f6f58ecc68380cd6de">width</a>,
                  vty-&gt;<a class="code" href="structvty.html#af36ed88d29c821bf8aa454cf8a36391a">lines</a> &gt;= 0 ? vty-&gt;<a class="code" href="structvty.html#af36ed88d29c821bf8aa454cf8a36391a">lines</a> :
                            vty-&gt;<a class="code" href="structvty.html#a89d8052878ac339006922c2151ca4ffa">height</a>,
                  erase, 0);
  <span class="keywordflow">switch</span> (flushrc)
    {
    <span class="keywordflow">case</span> <a class="code" href="buffer_8h.html#a11b72623a9601834584c5ecf08dd6e27a6185688e62ce527910fd779f2093c6f1">BUFFER_ERROR</a>:
      vty-&gt;<a class="code" href="structvty.html#ace142d1b856ed1776e4a48684222b01f">monitor</a> = 0; <span class="comment">/* disable monitoring to avoid infinite recursion */</span>
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;buffer_flush failed on vty client fd %d, closing&quot;</span>,
        vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>);
      <a class="code" href="buffer_8c.html#a91ad0ff694ccef1876a3e8d8a3b05ffa">buffer_reset</a>(vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>);
      <a class="code" href="vty_8c.html#af1d7e2c952dfb90e0a7e2bbe194dedfb">vty_close</a>(vty);
      <span class="keywordflow">return</span> 0;
    <span class="keywordflow">case</span> <a class="code" href="buffer_8h.html#a11b72623a9601834584c5ecf08dd6e27a78d7168c875c46a0fbb5835cd160e2ba">BUFFER_EMPTY</a>:
      <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> == <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6ab568d9eaea4e6aa93ae7fb8a7c65d4cb">VTY_CLOSE</a>)
    <a class="code" href="vty_8c.html#af1d7e2c952dfb90e0a7e2bbe194dedfb">vty_close</a> (vty);
      <span class="keywordflow">else</span>
    {
      vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> = <a class="code" href="vty_8c.html#acf239d95250577af6d34d80d70aac760">VTY_NORMAL</a>;
      <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#af36ed88d29c821bf8aa454cf8a36391a">lines</a> == 0)
        <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea9ed3db9f85ae6bdc30382d62bc01a807">VTY_READ</a>, vty_sock, vty);
    }
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="buffer_8h.html#a11b72623a9601834584c5ecf08dd6e27a6a5c775497aad93877d86b6a334de110">BUFFER_PENDING</a>:
      <span class="comment">/* There is more data waiting to be written. */</span>
      vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> = <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6a77994ab451230a1056115ab3b0c1f6e0">VTY_MORE</a>;
      <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#af36ed88d29c821bf8aa454cf8a36391a">lines</a> == 0)
    <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea73e4d70c7cc9c2560723e639332d7f2d">VTY_WRITE</a>, vty_sock, vty);
      <span class="keywordflow">break</span>;
    }

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="adb129e2c5ad62108a56cdacddb7f57b8"></a><!-- doxytag: member="vty.c::vty_forward_char" ref="adb129e2c5ad62108a56cdacddb7f57b8" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_forward_char </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00533">533</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> &lt; vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>)
    {
      <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, &amp;vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>], 1);
      vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>++;
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4e12c6d2e92f643659d6c26ff0347aa2"></a><!-- doxytag: member="vty.c::vty_forward_kill_word" ref="a4e12c6d2e92f643659d6c26ff0347aa2" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_forward_kill_word </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00802">802</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">while</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> != vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> &amp;&amp; vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>] == <span class="charliteral">&#39; &#39;</span>)
    <a class="code" href="vty_8c.html#a843699a9603df9fec1f79aa648daeeaa">vty_delete_char</a> (vty);
  <span class="keywordflow">while</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> != vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> &amp;&amp; vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>] != <span class="charliteral">&#39; &#39;</span>)
    <a class="code" href="vty_8c.html#a843699a9603df9fec1f79aa648daeeaa">vty_delete_char</a> (vty);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a50635cc5566b2f49e31e01cb168a83d0"></a><!-- doxytag: member="vty.c::vty_forward_word" ref="a50635cc5566b2f49e31e01cb168a83d0" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_forward_word </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00645">645</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">while</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> != vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> &amp;&amp; vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>] != <span class="charliteral">&#39; &#39;</span>)
    <a class="code" href="vty_8c.html#adb129e2c5ad62108a56cdacddb7f57b8">vty_forward_char</a> (vty);
  
  <span class="keywordflow">while</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> != vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> &amp;&amp; vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>] == <span class="charliteral">&#39; &#39;</span>)
    <a class="code" href="vty_8c.html#adb129e2c5ad62108a56cdacddb7f57b8">vty_forward_char</a> (vty);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6f4339c73034bde3cba10481ee9d5286"></a><!-- doxytag: member="vty.c::vty_get_cwd" ref="a6f4339c73034bde3cba10481ee9d5286" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* vty_get_cwd </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02928">2928</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="vty_8c.html#aa5e6e7a16dd20bf5e749f0d0bd403f33">vty_cwd</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa2f6866b034e4a3f2e6b9e354ba46d95"></a><!-- doxytag: member="vty.c::vty_hello" ref="aa2f6866b034e4a3f2e6b9e354ba46d95" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void vty_hello </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00228">228</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#aff68c4aa7277dc443ce82ad17135445d">motdfile</a>)
    {
      FILE *f;
      <span class="keywordtype">char</span> <a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[4096];

      f = fopen (<a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#aff68c4aa7277dc443ce82ad17135445d">motdfile</a>, <span class="stringliteral">&quot;r&quot;</span>);
      <span class="keywordflow">if</span> (f)
    {
      <span class="keywordflow">while</span> (fgets (buf, <span class="keyword">sizeof</span> (buf), f))
        {
          <span class="keywordtype">char</span> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>;
          <span class="comment">/* work backwards to ignore trailling isspace() */</span>
          <span class="keywordflow">for</span> (s = buf + strlen (buf); (s &gt; <a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>) &amp;&amp; isspace ((<span class="keywordtype">int</span>)*(s - 1));
           s--);
          *s = <span class="charliteral">&#39;\0&#39;</span>;
          <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s%s&quot;</span>, buf, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
        }
      fclose (f);
    }
      <span class="keywordflow">else</span>
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;MOTD file not found%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    }
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#a9d391f73e2bf946ad6b46f2a6f70e764">motd</a>)
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#a9d391f73e2bf946ad6b46f2a6f70e764">motd</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a7399bffcb99c9a604913470e51e73603"></a><!-- doxytag: member="vty.c::vty_hist_add" ref="a7399bffcb99c9a604913470e51e73603" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_hist_add </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l01134">1134</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;

  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> == 0)
    <span class="keywordflow">return</span>;

  index = vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a> ? vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a> - 1 : <a class="code" href="vty_8h.html#a2c7bf19140857545865be759c8960bc4">VTY_MAXHIST</a> - 1;

  <span class="comment">/* Ignore the same string as previous one. */</span>
  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[index])
    <span class="keywordflow">if</span> (strcmp (vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>, vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[index]) == 0)
      {
      vty-&gt;<a class="code" href="structvty.html#a7baae5746026d42a5c13693d95354b19">hp</a> = vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a>;
      <span class="keywordflow">return</span>;
      }

  <span class="comment">/* Insert history entry. */</span>
  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a>])
    <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167baa0c5966641068bad0544ced1b55176b5">MTYPE_VTY_HIST</a>, vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a>]);
  vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a>] = <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167baa0c5966641068bad0544ced1b55176b5">MTYPE_VTY_HIST</a>, vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>);

  <span class="comment">/* History index rotation. */</span>
  vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a>++;
  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a> == <a class="code" href="vty_8h.html#a2c7bf19140857545865be759c8960bc4">VTY_MAXHIST</a>)
    vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a> = 0;

  vty-&gt;<a class="code" href="structvty.html#a7baae5746026d42a5c13693d95354b19">hp</a> = vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3e85588eea41b85735677cc6e74ed50a"></a><!-- doxytag: member="vty.c::vty_history_print" ref="a3e85588eea41b85735677cc6e74ed50a" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_history_print </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00575">575</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>;

  <a class="code" href="vty_8c.html#a5739e6a00dcae7a4fab7540e19454c3e">vty_kill_line_from_beginning</a> (vty);

  <span class="comment">/* Get previous line from history buffer */</span>
  length = strlen (vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[vty-&gt;<a class="code" href="structvty.html#a7baae5746026d42a5c13693d95354b19">hp</a>]);
  <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>, vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[vty-&gt;<a class="code" href="structvty.html#a7baae5746026d42a5c13693d95354b19">hp</a>], length);
  vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> = vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> = <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>;

  <span class="comment">/* Redraw current line */</span>
  <a class="code" href="vty_8c.html#aa88c9e2e5da06b826ac13025eefb386b">vty_redraw_line</a> (vty);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4e3540690dccdae165218c9597b311eb"></a><!-- doxytag: member="vty.c::vty_init" ref="a4e3540690dccdae165218c9597b311eb" args="(struct thread_master *master_thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void vty_init </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread__master.html">thread_master</a> *&#160;</td>
          <td class="paramname"><em>master_thread</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02953">2953</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="comment">/* For further configuration read, preserve current directory. */</span>
  <a class="code" href="vty_8c.html#a773ccf9db9a99a1412fe1c138e01279b">vty_save_cwd</a> ();

  <a class="code" href="vty_8c.html#aada8117b2e5d72dcea3f29da3366ce4b">vtyvec</a> = <a class="code" href="vector_8c.html#ae6a929ac3530de06eee1df3629d15247">vector_init</a> (<a class="code" href="vector_8h.html#ac45f1c13e55842e7dc958c379b0efcf4">VECTOR_MIN_SIZE</a>);

  <a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a> = master_thread;

  <span class="comment">/* Initilize server thread vector. */</span>
  <a class="code" href="vty_8c.html#a794b894c87fe19a07c303a584f3dd454">Vvty_serv_thread</a> = <a class="code" href="vector_8c.html#ae6a929ac3530de06eee1df3629d15247">vector_init</a> (<a class="code" href="vector_8h.html#ac45f1c13e55842e7dc958c379b0efcf4">VECTOR_MIN_SIZE</a>);

  <span class="comment">/* Install bgp top node. */</span>
  <a class="code" href="command_8c.html#a7ee8a7c258e1e5a6e3ff6173dd1658e3">install_node</a> (&amp;<a class="code" href="vty_8c.html#a4515b7730ee408bb977cce603b51ce57">vty_node</a>, <a class="code" href="vty_8c.html#af80aee0d6f35fb79eb960743cfa18a1e">vty_config_write</a>);

  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acb0c5ada108352e3e869838b0ee04c3b">RESTRICTED_NODE</a>, &amp;config_who_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acb0c5ada108352e3e869838b0ee04c3b">RESTRICTED_NODE</a>, &amp;show_history_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;config_who_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;show_history_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;config_who_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;line_vty_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;service_advanced_vty_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;no_service_advanced_vty_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;show_history_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;terminal_monitor_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;terminal_no_monitor_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;no_terminal_monitor_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;show_history_cmd);

  <a class="code" href="command_8h.html#affb2f399c88b8a225b2719bbe928e4de">install_default</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>, &amp;exec_timeout_min_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>, &amp;exec_timeout_sec_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>, &amp;no_exec_timeout_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>, &amp;vty_access_class_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>, &amp;no_vty_access_class_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>, &amp;vty_login_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>, &amp;no_vty_login_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>, &amp;vty_restricted_mode_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>, &amp;vty_no_restricted_mode_cmd);
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>, &amp;vty_ipv6_access_class_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>, &amp;no_vty_ipv6_access_class_cmd);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
}
</pre></div>
</div>
</div>
<a class="anchor" id="a29fb84300cd3b9daac807011dba67651"></a><!-- doxytag: member="vty.c::vty_init_vtysh" ref="a29fb84300cd3b9daac807011dba67651" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void vty_init_vtysh </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02946">2946</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="vty_8c.html#aada8117b2e5d72dcea3f29da3366ce4b">vtyvec</a> = <a class="code" href="vector_8c.html#ae6a929ac3530de06eee1df3629d15247">vector_init</a> (<a class="code" href="vector_8h.html#ac45f1c13e55842e7dc958c379b0efcf4">VECTOR_MIN_SIZE</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="af8b383a4c3ef289b4aabda0c243d4588"></a><!-- doxytag: member="vty.c::vty_insert_word_overwrite" ref="af8b383a4c3ef289b4aabda0c243d4588" args="(struct vty *vty, char *str)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_insert_word_overwrite </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>str</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00522">522</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> len = strlen (<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>);
  <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, <a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, len);
  strcpy (&amp;vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>], <a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>);
  vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> += len;
  vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> = vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a62d806365d5e4914bea1e058eefb895a"></a><!-- doxytag: member="vty.c::vty_kill_line" ref="a62d806365d5e4914bea1e058eefb895a" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_kill_line </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00773">773</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
  <span class="keywordtype">int</span> size;

  size = vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> - vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>;
  
  <span class="keywordflow">if</span> (size == 0)
    <span class="keywordflow">return</span>;

  <span class="keywordflow">for</span> (i = 0; i &lt; size; i++)
    <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, &amp;<a class="code" href="vty_8c.html#a05df3d7f54ae7e630ade2a3124ce48d6">telnet_space_char</a>, 1);
  <span class="keywordflow">for</span> (i = 0; i &lt; size; i++)
    <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, &amp;<a class="code" href="vty_8c.html#a050c5269ec6f36e488b05d6b564601e2">telnet_backward_char</a>, 1);

  memset (&amp;vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>], 0, size);
  vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> = vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5739e6a00dcae7a4fab7540e19454c3e"></a><!-- doxytag: member="vty.c::vty_kill_line_from_beginning" ref="a5739e6a00dcae7a4fab7540e19454c3e" args="(struct vty *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_kill_line_from_beginning </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00794">794</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="vty_8c.html#ace10a61328b0a67284a43e26d690e735">vty_beginning_of_line</a> (vty);
  <a class="code" href="vty_8c.html#a62d806365d5e4914bea1e058eefb895a">vty_kill_line</a> (vty);
}
</pre></div>
</div>
</div>
<a class="anchor" id="adc0f09a34324734b4f87905ae873cc55"></a><!-- doxytag: member="vty.c::vty_log" ref="adc0f09a34324734b4f87905ae873cc55" args="(const char *level, const char *proto_str, const char *format, struct timestamp_control *ctl, va_list va)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void vty_log </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>level</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>proto_str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>format</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structtimestamp__control.html">timestamp_control</a> *&#160;</td>
          <td class="paramname"><em>ctl</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">va_list&#160;</td>
          <td class="paramname"><em>va</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02430">2430</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
  <span class="keyword">struct </span><a class="code" href="structvty.html">vty</a> *<a class="code" href="vtysh_8c.html#a15b2c4e868040617c54eaaba3663b337">vty</a>;
  
  <span class="keywordflow">if</span> (!<a class="code" href="vty_8c.html#aada8117b2e5d72dcea3f29da3366ce4b">vtyvec</a>)
    <span class="keywordflow">return</span>;

  <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="vector_8h.html#ac96b7beddf251a81df131543d06d63c7">vector_active</a> (<a class="code" href="vty_8c.html#aada8117b2e5d72dcea3f29da3366ce4b">vtyvec</a>); i++)
    <span class="keywordflow">if</span> ((vty = <a class="code" href="vector_8h.html#a34cb4a77fbd6ab6cb23707cdd1c4c0d2">vector_slot</a> (<a class="code" href="vty_8c.html#aada8117b2e5d72dcea3f29da3366ce4b">vtyvec</a>, i)) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
      <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#ace142d1b856ed1776e4a48684222b01f">monitor</a>)
    {
      va_list ac;
      <a class="code" href="zebra_8h.html#a3a33fef6728dc26a7e3fd47ad35ad3ae">va_copy</a>(ac, va);
      <a class="code" href="vty_8c.html#a1c349ce48acd7ad68f569644292d38f1">vty_log_out</a> (vty, level, proto_str, format, ctl, ac);
      va_end(ac);
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac0b3f6add8b1af732eb0289a31c58f87"></a><!-- doxytag: member="vty.c::vty_log_fixed" ref="ac0b3f6add8b1af732eb0289a31c58f87" args="(const char *buf, size_t len)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void vty_log_fixed </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02452">2452</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
  <span class="keyword">struct </span>iovec iov[2];

  <span class="comment">/* vty may not have been initialised */</span>
  <span class="keywordflow">if</span> (!<a class="code" href="vty_8c.html#aada8117b2e5d72dcea3f29da3366ce4b">vtyvec</a>)
    <span class="keywordflow">return</span>;
  
  iov[0].iov_base = (<span class="keywordtype">void</span> *)buf;
  iov[0].iov_len = len;
  iov[1].iov_base = (<span class="keywordtype">void</span> *)<span class="stringliteral">&quot;\r\n&quot;</span>;
  iov[1].iov_len = 2;

  <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="vector_8h.html#ac96b7beddf251a81df131543d06d63c7">vector_active</a> (<a class="code" href="vty_8c.html#aada8117b2e5d72dcea3f29da3366ce4b">vtyvec</a>); i++)
    {
      <span class="keyword">struct </span><a class="code" href="structvty.html">vty</a> *<a class="code" href="vtysh_8c.html#a15b2c4e868040617c54eaaba3663b337">vty</a>;
      <span class="keywordflow">if</span> (((vty = <a class="code" href="vector_8h.html#a34cb4a77fbd6ab6cb23707cdd1c4c0d2">vector_slot</a> (<a class="code" href="vty_8c.html#aada8117b2e5d72dcea3f29da3366ce4b">vtyvec</a>, i)) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) &amp;&amp; vty-&gt;<a class="code" href="structvty.html#ace142d1b856ed1776e4a48684222b01f">monitor</a>)
    <span class="comment">/* N.B. We don&#39;t care about the return code, since process is</span>
<span class="comment">       most likely just about to die anyway. */</span>
    writev(vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>, iov, 2);
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a1c349ce48acd7ad68f569644292d38f1"></a><!-- doxytag: member="vty.c::vty_log_out" ref="a1c349ce48acd7ad68f569644292d38f1" args="(struct vty *vty, const char *level, const char *proto_str, const char *format, struct timestamp_control *ctl, va_list va)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int vty_log_out </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>level</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>proto_str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>format</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structtimestamp__control.html">timestamp_control</a> *&#160;</td>
          <td class="paramname"><em>ctl</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">va_list&#160;</td>
          <td class="paramname"><em>va</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00155">155</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret;
  <span class="keywordtype">int</span> len;
  <span class="keywordtype">char</span> <a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[1024];

  <span class="keywordflow">if</span> (!ctl-&gt;<a class="code" href="structtimestamp__control.html#a1691f5b39846bf86d4b5f36fdfdf935e">already_rendered</a>)
    {
      ctl-&gt;<a class="code" href="structtimestamp__control.html#a6b830b1c0ee6418d148039bfc1ddc8bc">len</a> = <a class="code" href="log_8c.html#aa70601e0152987332545566abf72b090">quagga_timestamp</a>(ctl-&gt;<a class="code" href="structtimestamp__control.html#a58aa149c5e76ec58ce892de831fd95e9">precision</a>, ctl-&gt;<a class="code" href="structtimestamp__control.html#aab2bcb84e3ac17da33c7ee1df865db6d">buf</a>, <span class="keyword">sizeof</span>(ctl-&gt;<a class="code" href="structtimestamp__control.html#aab2bcb84e3ac17da33c7ee1df865db6d">buf</a>));
      ctl-&gt;<a class="code" href="structtimestamp__control.html#a1691f5b39846bf86d4b5f36fdfdf935e">already_rendered</a> = 1;
    }
  <span class="keywordflow">if</span> (ctl-&gt;<a class="code" href="structtimestamp__control.html#a6b830b1c0ee6418d148039bfc1ddc8bc">len</a>+1 &gt;= <span class="keyword">sizeof</span>(buf))
    <span class="keywordflow">return</span> -1;
  <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a>(buf, ctl-&gt;<a class="code" href="structtimestamp__control.html#aab2bcb84e3ac17da33c7ee1df865db6d">buf</a>, len = ctl-&gt;<a class="code" href="structtimestamp__control.html#a6b830b1c0ee6418d148039bfc1ddc8bc">len</a>);
  buf[len++] = <span class="charliteral">&#39; &#39;</span>;
  buf[len] = <span class="charliteral">&#39;\0&#39;</span>;

  <span class="keywordflow">if</span> (level)
    ret = <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a>(buf+len, <span class="keyword">sizeof</span>(buf)-len, <span class="stringliteral">&quot;%s: %s: &quot;</span>, level, proto_str);
  <span class="keywordflow">else</span>
    ret = <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a>(buf+len, <span class="keyword">sizeof</span>(buf)-len, <span class="stringliteral">&quot;%s: &quot;</span>, proto_str);
  <span class="keywordflow">if</span> ((ret &lt; 0) || ((<span class="keywordtype">size_t</span>)(len += ret) &gt;= <span class="keyword">sizeof</span>(buf)))
    <span class="keywordflow">return</span> -1;

  <span class="keywordflow">if</span> (((ret = <a class="code" href="str_8h.html#a07d26024bfbdf98fee856c8a28e07a8e">vsnprintf</a>(buf+len, <span class="keyword">sizeof</span>(buf)-len, format, va)) &lt; 0) ||
      ((<span class="keywordtype">size_t</span>)((len += ret)+2) &gt; <span class="keyword">sizeof</span>(buf)))
    <span class="keywordflow">return</span> -1;

  buf[len++] = <span class="charliteral">&#39;\r&#39;</span>;
  buf[len++] = <span class="charliteral">&#39;\n&#39;</span>;

  <span class="keywordflow">if</span> (write(vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>, buf, len) &lt; 0)
    {
      <span class="keywordflow">if</span> (<a class="code" href="network_8h.html#a45b38a31650d3cee8087360351384d9e">ERRNO_IO_RETRY</a>(errno))
    <span class="comment">/* Kernel buffer is full, probably too much debugging output, so just</span>
<span class="comment">       drop the data and ignore. */</span>
    <span class="keywordflow">return</span> -1;
      <span class="comment">/* Fatal I/O error. */</span>
      vty-&gt;<a class="code" href="structvty.html#ace142d1b856ed1776e4a48684222b01f">monitor</a> = 0; <span class="comment">/* disable monitoring to avoid infinite recursion */</span>
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;%s: write failed to vty client fd %d, closing: %s&quot;</span>,
        __func__, vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a>(errno));
      <a class="code" href="buffer_8c.html#a91ad0ff694ccef1876a3e8d8a3b05ffa">buffer_reset</a>(vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>);
      <span class="comment">/* cannot call vty_close, because a parent routine may still try</span>
<span class="comment">         to access the vty struct */</span>
      vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> = <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6ab568d9eaea4e6aa93ae7fb8a7c65d4cb">VTY_CLOSE</a>;
      shutdown(vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>, SHUT_RDWR);
      <span class="keywordflow">return</span> -1;
    }
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5761c76c7eaf421587052c372034cd57"></a><!-- doxytag: member="vty.c::vty_new" ref="a5761c76c7eaf421587052c372034cd57" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structvty.html">vty</a>* vty_new </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00319">319</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structvty.html">vty</a> *<span class="keyword">new</span> = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba05f7d9e133f49a4c7aaa98a318692c88">MTYPE_VTY</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a>));

  <span class="keyword">new</span>-&gt;obuf = <a class="code" href="buffer_8c.html#a277b94d1c81d4e5ac2e5c59ede1abed9">buffer_new</a>(0);    <span class="comment">/* Use default buffer size. */</span>
  <span class="keyword">new</span>-&gt;buf = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba05f7d9e133f49a4c7aaa98a318692c88">MTYPE_VTY</a>, <a class="code" href="vty_8h.html#a2d026199530c8617fbb5e0d89ab6cac1">VTY_BUFSIZ</a>);
  <span class="keyword">new</span>-&gt;max = <a class="code" href="vty_8h.html#a2d026199530c8617fbb5e0d89ab6cac1">VTY_BUFSIZ</a>;

  <span class="keywordflow">return</span> <span class="keyword">new</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac933bc02bc1fcb0c345e08356a1090cc"></a><!-- doxytag: member="vty.c::vty_next_line" ref="ac933bc02bc1fcb0c345e08356a1090cc" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_next_line </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00592">592</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> try_index;

  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a7baae5746026d42a5c13693d95354b19">hp</a> == vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a>)
    <span class="keywordflow">return</span>;

  <span class="comment">/* Try is there history exist or not. */</span>
  try_index = vty-&gt;<a class="code" href="structvty.html#a7baae5746026d42a5c13693d95354b19">hp</a>;
  <span class="keywordflow">if</span> (try_index == (<a class="code" href="vty_8h.html#a2c7bf19140857545865be759c8960bc4">VTY_MAXHIST</a> - 1))
    try_index = 0;
  <span class="keywordflow">else</span>
    try_index++;

  <span class="comment">/* If there is not history return. */</span>
  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[try_index] == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span>;
  <span class="keywordflow">else</span>
    vty-&gt;<a class="code" href="structvty.html#a7baae5746026d42a5c13693d95354b19">hp</a> = try_index;

  <a class="code" href="vty_8c.html#a3e85588eea41b85735677cc6e74ed50a">vty_history_print</a> (vty);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3725db0ec6ad3ffdd31f68abc807ee34"></a><!-- doxytag: member="vty.c::vty_out" ref="a3725db0ec6ad3ffdd31f68abc807ee34" args="(struct vty *vty, const char *format,...)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int vty_out </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>format</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00095">95</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  va_list <a class="code" href="spgrid_8c.html#a2c8d3fa6d7117d15dd5c2871ac548ec4">args</a>;
  <span class="keywordtype">int</span> len = 0;
  <span class="keywordtype">int</span> size = 1024;
  <span class="keywordtype">char</span> <a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[1024];
  <span class="keywordtype">char</span> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#a34f77731bee7dcf980c6b344a9fff210">vty_shell</a> (vty))
    {
      va_start (args, format);
      vprintf (format, args);
      va_end (args);
    }
  <span class="keywordflow">else</span>
    {
      <span class="comment">/* Try to write to initial buffer.  */</span>
      va_start (args, format);
      len = <a class="code" href="str_8h.html#a07d26024bfbdf98fee856c8a28e07a8e">vsnprintf</a> (buf, <span class="keyword">sizeof</span> buf, format, args);
      va_end (args);

      <span class="comment">/* Initial buffer is not enough.  */</span>
      <span class="keywordflow">if</span> (len &lt; 0 || len &gt;= size)
    {
      <span class="keywordflow">while</span> (1)
        {
          <span class="keywordflow">if</span> (len &gt; -1)
        size = len + 1;
          <span class="keywordflow">else</span>
        size = size * 2;

          p = <a class="code" href="memory_8h.html#ad9ab7c99da79ca966328c35e9185cc57">XREALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba26401e48059a77e19a36122090effb67">MTYPE_VTY_OUT_BUF</a>, p, size);
          <span class="keywordflow">if</span> (! p)
        <span class="keywordflow">return</span> -1;

          va_start (args, format);
          len = <a class="code" href="str_8h.html#a07d26024bfbdf98fee856c8a28e07a8e">vsnprintf</a> (p, size, format, args);
          va_end (args);

          <span class="keywordflow">if</span> (len &gt; -1 &amp;&amp; len &lt; size)
        <span class="keywordflow">break</span>;
        }
    }

      <span class="comment">/* When initial buffer is enough to store all output.  */</span>
      <span class="keywordflow">if</span> (! p)
    p = <a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>;

      <span class="comment">/* Pointer p must point out buffer. */</span>
      <a class="code" href="buffer_8c.html#a6150096c2eaae19e636d2742c3df5b75">buffer_put</a> (vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>, (u_char *) p, len);

      <span class="comment">/* If p is not different with buf, it is allocated buffer.  */</span>
      <span class="keywordflow">if</span> (p != buf)
    <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba26401e48059a77e19a36122090effb67">MTYPE_VTY_OUT_BUF</a>, p);
    }

  <span class="keywordflow">return</span> len;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a8bae6998c5a99c023cf77eab3c4b8ce2"></a><!-- doxytag: member="vty.c::vty_previous_line" ref="a8bae6998c5a99c023cf77eab3c4b8ce2" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_previous_line </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00617">617</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> try_index;

  try_index = vty-&gt;<a class="code" href="structvty.html#a7baae5746026d42a5c13693d95354b19">hp</a>;
  <span class="keywordflow">if</span> (try_index == 0)
    try_index = <a class="code" href="vty_8h.html#a2c7bf19140857545865be759c8960bc4">VTY_MAXHIST</a> - 1;
  <span class="keywordflow">else</span>
    try_index--;

  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a4f1cd306d23716324bb908dc5082100f">hist</a>[try_index] == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span>;
  <span class="keywordflow">else</span>
    vty-&gt;<a class="code" href="structvty.html#a7baae5746026d42a5c13693d95354b19">hp</a> = try_index;

  <a class="code" href="vty_8c.html#a3e85588eea41b85735677cc6e74ed50a">vty_history_print</a> (vty);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6fa4b6876bff67f44f37e338ac6dc431"></a><!-- doxytag: member="vty.c::vty_prompt" ref="a6fa4b6876bff67f44f37e338ac6dc431" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_prompt </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00258">258</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span>utsname names;
  <span class="keyword">const</span> <span class="keywordtype">char</span>*<a class="code" href="structhostname.html">hostname</a>;

  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a918d01c53936e81c45a177b0ceda3eca">type</a> == VTY_TERM)
    {
      hostname = <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#ae29a96977a9350ec0d4323ccd38ebc9b">name</a>;
      <span class="keywordflow">if</span> (!hostname)
    {
      uname (&amp;names);
      hostname = names.nodename;
    }
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <a class="code" href="command_8c.html#afca289ddfb2617c0e1c2d26824bf9ccf">cmd_prompt</a> (vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a>), hostname);
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="aef96c1c84762b295bd4eb8149b8c7cd7"></a><!-- doxytag: member="vty.c::vty_read" ref="aef96c1c84762b295bd4eb8149b8c7cd7" args="(struct thread *thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int vty_read </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>thread</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l01339">1339</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
  <span class="keywordtype">int</span> nbytes;
  <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> buf[<a class="code" href="vty_8h.html#a79b1a7ad718c49feb5febb6a5be6f5e8">VTY_READ_BUFSIZ</a>];

  <span class="keywordtype">int</span> vty_sock = <a class="code" href="thread_8h.html#a89bd56f991717646441f9dffc010d4f5">THREAD_FD</a> (thread);
  <span class="keyword">struct </span><a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a> = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
  vty-&gt;<a class="code" href="structvty.html#a5d16168af87165fddd2aa6612c9740f1">t_read</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="comment">/* Read raw data from socket */</span>
  <span class="keywordflow">if</span> ((nbytes = read (vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>, buf, <a class="code" href="vty_8h.html#a79b1a7ad718c49feb5febb6a5be6f5e8">VTY_READ_BUFSIZ</a>)) &lt;= 0)
    {
      <span class="keywordflow">if</span> (nbytes &lt; 0)
    {
      <span class="keywordflow">if</span> (<a class="code" href="network_8h.html#a45b38a31650d3cee8087360351384d9e">ERRNO_IO_RETRY</a>(errno))
        {
          <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea9ed3db9f85ae6bdc30382d62bc01a807">VTY_READ</a>, vty_sock, vty);
          <span class="keywordflow">return</span> 0;
        }
      vty-&gt;<a class="code" href="structvty.html#ace142d1b856ed1776e4a48684222b01f">monitor</a> = 0; <span class="comment">/* disable monitoring to avoid infinite recursion */</span>
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;%s: read error on vty client fd %d, closing: %s&quot;</span>,
            __func__, vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a>(errno));
    }
      <a class="code" href="buffer_8c.html#a91ad0ff694ccef1876a3e8d8a3b05ffa">buffer_reset</a>(vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>);
      vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> = <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6ab568d9eaea4e6aa93ae7fb8a7c65d4cb">VTY_CLOSE</a>;
    }

  <span class="keywordflow">for</span> (i = 0; i &lt; nbytes; i++) 
    {
      <span class="keywordflow">if</span> (buf[i] == IAC)
    {
      <span class="keywordflow">if</span> (!vty-&gt;<a class="code" href="structvty.html#a84a9697ba7d4b0b1fc67da51a44cc46b">iac</a>)
        {
          vty-&gt;<a class="code" href="structvty.html#a84a9697ba7d4b0b1fc67da51a44cc46b">iac</a> = 1;
          <span class="keywordflow">continue</span>;
        }
      <span class="keywordflow">else</span>
        {
          vty-&gt;<a class="code" href="structvty.html#a84a9697ba7d4b0b1fc67da51a44cc46b">iac</a> = 0;
        }
    }
      
      <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#af43115c5fffab36e14b77b8a893a361a">iac_sb_in_progress</a> &amp;&amp; !vty-&gt;<a class="code" href="structvty.html#a84a9697ba7d4b0b1fc67da51a44cc46b">iac</a>)
    {
        <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a8e79b608af5753bb4a493fbaa62e3db1">sb_len</a> &lt; <span class="keyword">sizeof</span>(vty-&gt;<a class="code" href="structvty.html#a931d735f2a5e903328c5a03468655bef">sb_buf</a>))
          vty-&gt;<a class="code" href="structvty.html#a931d735f2a5e903328c5a03468655bef">sb_buf</a>[vty-&gt;<a class="code" href="structvty.html#a8e79b608af5753bb4a493fbaa62e3db1">sb_len</a>] = buf[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>];
        vty-&gt;<a class="code" href="structvty.html#a8e79b608af5753bb4a493fbaa62e3db1">sb_len</a>++;
        <span class="keywordflow">continue</span>;
    }

      <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a84a9697ba7d4b0b1fc67da51a44cc46b">iac</a>)
    {
      <span class="comment">/* In case of telnet command */</span>
      <span class="keywordtype">int</span> ret = 0;
      ret = <a class="code" href="vty_8c.html#ae1bb46143e465cccc7bc8dd177b3464b">vty_telnet_option</a> (vty, buf + i, nbytes - i);
      vty-&gt;<a class="code" href="structvty.html#a84a9697ba7d4b0b1fc67da51a44cc46b">iac</a> = 0;
      i += ret;
      <span class="keywordflow">continue</span>;
    }
            

      <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> == <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6a77994ab451230a1056115ab3b0c1f6e0">VTY_MORE</a>)
    {
      <span class="keywordflow">switch</span> (buf[i])
        {
        <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;C&#39;</span>):
        case <span class="stringliteral">&#39;q&#39;</span>:
        case <span class="stringliteral">&#39;Q&#39;</span>:
          <a class="code" href="vty_8c.html#adfdcfb63a06407c35b1c1221fc523a1e">vty_buffer_reset</a> (vty);
          <span class="keywordflow">break</span>;
<span class="preprocessor">#if 0 </span><span class="comment">/* More line does not work for &quot;show ip bgp&quot;.  */</span>
        <span class="keywordflow">case</span> <span class="charliteral">&#39;\n&#39;</span>:
        <span class="keywordflow">case</span> <span class="charliteral">&#39;\r&#39;</span>:
          vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> = <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6a0d0fcf88504c1b17beaca80dfdc842fe">VTY_MORELINE</a>;
          <span class="keywordflow">break</span>;
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>        <span class="keywordflow">default</span>:
          <span class="keywordflow">break</span>;
        }
      <span class="keywordflow">continue</span>;
    }

      <span class="comment">/* Escape character. */</span>
      <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a5b11c8d6a7cc2ff7cad6a62fa26ffde5">escape</a> == <a class="code" href="vty_8c.html#adee5f2176eb8e53a301dd8d0f377251b">VTY_ESCAPE</a>)
    {
      <a class="code" href="vty_8c.html#ab9ea51a34c5694514373852230570eb2">vty_escape_map</a> (buf[i], vty);
      <span class="keywordflow">continue</span>;
    }

      <span class="comment">/* Pre-escape status. */</span>
      <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a5b11c8d6a7cc2ff7cad6a62fa26ffde5">escape</a> == <a class="code" href="vty_8c.html#a3aac53820dc12306e1c0d140f1f7bb56">VTY_PRE_ESCAPE</a>)
    {
      <span class="keywordflow">switch</span> (buf[i])
        {
        <span class="keywordflow">case</span> <span class="charliteral">&#39;[&#39;</span>:
          vty-&gt;<a class="code" href="structvty.html#a5b11c8d6a7cc2ff7cad6a62fa26ffde5">escape</a> = <a class="code" href="vty_8c.html#adee5f2176eb8e53a301dd8d0f377251b">VTY_ESCAPE</a>;
          <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <span class="charliteral">&#39;b&#39;</span>:
          <a class="code" href="vty_8c.html#ac633697855f1c48d8227645f6fbb624e">vty_backward_word</a> (vty);
          vty-&gt;<a class="code" href="structvty.html#a5b11c8d6a7cc2ff7cad6a62fa26ffde5">escape</a> = <a class="code" href="vty_8c.html#acf239d95250577af6d34d80d70aac760">VTY_NORMAL</a>;
          <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <span class="charliteral">&#39;f&#39;</span>:
          <a class="code" href="vty_8c.html#a50635cc5566b2f49e31e01cb168a83d0">vty_forward_word</a> (vty);
          vty-&gt;<a class="code" href="structvty.html#a5b11c8d6a7cc2ff7cad6a62fa26ffde5">escape</a> = <a class="code" href="vty_8c.html#acf239d95250577af6d34d80d70aac760">VTY_NORMAL</a>;
          <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <span class="charliteral">&#39;d&#39;</span>:
          <a class="code" href="vty_8c.html#a4e12c6d2e92f643659d6c26ff0347aa2">vty_forward_kill_word</a> (vty);
          vty-&gt;<a class="code" href="structvty.html#a5b11c8d6a7cc2ff7cad6a62fa26ffde5">escape</a> = <a class="code" href="vty_8c.html#acf239d95250577af6d34d80d70aac760">VTY_NORMAL</a>;
          <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;H&#39;</span>):
        case 0x7f:
          <a class="code" href="vty_8c.html#afd97712a47228ecb91064b09717cc74c">vty_backward_kill_word</a> (vty);
          vty-&gt;<a class="code" href="structvty.html#a5b11c8d6a7cc2ff7cad6a62fa26ffde5">escape</a> = <a class="code" href="vty_8c.html#acf239d95250577af6d34d80d70aac760">VTY_NORMAL</a>;
          <span class="keywordflow">break</span>;
        <span class="keywordflow">default</span>:
          vty-&gt;<a class="code" href="structvty.html#a5b11c8d6a7cc2ff7cad6a62fa26ffde5">escape</a> = <a class="code" href="vty_8c.html#acf239d95250577af6d34d80d70aac760">VTY_NORMAL</a>;
          <span class="keywordflow">break</span>;
        }
      <span class="keywordflow">continue</span>;
    }

      <span class="keywordflow">switch</span> (buf[i])
    {
    <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;A&#39;</span>):
      <a class="code" href="vty_8c.html#ace10a61328b0a67284a43e26d690e735">vty_beginning_of_line</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;B&#39;</span>):
      <a class="code" href="vty_8c.html#ae83b887d99a0493283dad484e58d16b8">vty_backward_char</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;C&#39;</span>):
      <a class="code" href="vty_8c.html#af1b5a37bcd266695933b5517b0e6d41b">vty_stop_input</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;D&#39;</span>):
      <a class="code" href="vty_8c.html#a843699a9603df9fec1f79aa648daeeaa">vty_delete_char</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;E&#39;</span>):
      <a class="code" href="vty_8c.html#a396592bed9a5f245d8607e02b27ae861">vty_end_of_line</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;F&#39;</span>):
      <a class="code" href="vty_8c.html#adb129e2c5ad62108a56cdacddb7f57b8">vty_forward_char</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;H&#39;</span>):
    case 0x7f:
      <a class="code" href="vty_8c.html#ad96cb2b5ea01585f597cd584553e5ec6">vty_delete_backward_char</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;K&#39;</span>):
      <a class="code" href="vty_8c.html#a62d806365d5e4914bea1e058eefb895a">vty_kill_line</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;N&#39;</span>):
      <a class="code" href="vty_8c.html#ac933bc02bc1fcb0c345e08356a1090cc">vty_next_line</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;P&#39;</span>):
      <a class="code" href="vty_8c.html#a8bae6998c5a99c023cf77eab3c4b8ce2">vty_previous_line</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;T&#39;</span>):
      <a class="code" href="vty_8c.html#afd4a3c3a366c9078aa632e04b34e7d2c">vty_transpose_chars</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;U&#39;</span>):
      <a class="code" href="vty_8c.html#a5739e6a00dcae7a4fab7540e19454c3e">vty_kill_line_from_beginning</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;W&#39;</span>):
      <a class="code" href="vty_8c.html#afd97712a47228ecb91064b09717cc74c">vty_backward_kill_word</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="vty_8c.html#aab05ecebba269f4510ca9a4cfdeb4382">CONTROL</a>(<span class="charliteral">&#39;Z&#39;</span>):
      <a class="code" href="vty_8c.html#a763be1552ab8388b9f9467f363d82049">vty_end_config</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <span class="charliteral">&#39;\n&#39;</span>:
    <span class="keywordflow">case</span> <span class="charliteral">&#39;\r&#39;</span>:
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <a class="code" href="vty_8c.html#ad051d84b39c71fdbd554626c26f2b8a0">vty_execute</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <span class="charliteral">&#39;\t&#39;</span>:
      <a class="code" href="vty_8c.html#ad72e0680a6ba30787728859175d70bc8">vty_complete_command</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <span class="charliteral">&#39;?&#39;</span>:
      <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a302e1f38939b1a74bc848007bb70bfdf">AUTH_NODE</a> || vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a96b74116564789f517eef9284f18b472">AUTH_ENABLE_NODE</a>)
        <a class="code" href="vty_8c.html#a4d876e82ce61720dead15aac07e29c30">vty_self_insert</a> (vty, buf[i]);
      <span class="keywordflow">else</span>
        <a class="code" href="vty_8c.html#a39986e2365dcda01161b8497a4a9b83b">vty_describe_command</a> (vty);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <span class="charliteral">&#39;\033&#39;</span>:
      <span class="keywordflow">if</span> (i + 1 &lt; nbytes &amp;&amp; buf[i + 1] == <span class="charliteral">&#39;[&#39;</span>)
        {
          vty-&gt;<a class="code" href="structvty.html#a5b11c8d6a7cc2ff7cad6a62fa26ffde5">escape</a> = <a class="code" href="vty_8c.html#adee5f2176eb8e53a301dd8d0f377251b">VTY_ESCAPE</a>;
          i++;
        }
      <span class="keywordflow">else</span>
        vty-&gt;<a class="code" href="structvty.html#a5b11c8d6a7cc2ff7cad6a62fa26ffde5">escape</a> = <a class="code" href="vty_8c.html#a3aac53820dc12306e1c0d140f1f7bb56">VTY_PRE_ESCAPE</a>;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">default</span>:
      <span class="keywordflow">if</span> (buf[i] &gt; 31 &amp;&amp; buf[i] &lt; 127)
        <a class="code" href="vty_8c.html#a4d876e82ce61720dead15aac07e29c30">vty_self_insert</a> (vty, buf[i]);
      <span class="keywordflow">break</span>;
    }
    }

  <span class="comment">/* Check status. */</span>
  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> == <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6ab568d9eaea4e6aa93ae7fb8a7c65d4cb">VTY_CLOSE</a>)
    <a class="code" href="vty_8c.html#af1d7e2c952dfb90e0a7e2bbe194dedfb">vty_close</a> (vty);
  <span class="keywordflow">else</span>
    {
      <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea73e4d70c7cc9c2560723e639332d7f2d">VTY_WRITE</a>, vty_sock, vty);
      <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea9ed3db9f85ae6bdc30382d62bc01a807">VTY_READ</a>, vty_sock, vty);
    }
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a414904627a8d3bbba1b20d769f836a70"></a><!-- doxytag: member="vty.c::vty_read_config" ref="a414904627a8d3bbba1b20d769f836a70" args="(char *config_file, char *config_default_dir)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void vty_read_config </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>config_file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>config_default_dir</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02327">2327</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">char</span> cwd[MAXPATHLEN];
  FILE *confp = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keywordtype">char</span> *fullpath;
  <span class="keywordtype">char</span> *tmp = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="comment">/* If -f flag specified. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="bgp__main_8c.html#ac269be8b91ae4b24df48de5d8ad7e7a7">config_file</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <span class="keywordflow">if</span> (! <a class="code" href="vty_8h.html#ab275a8ecec3850e25e7aaf9ff701e3ac">IS_DIRECTORY_SEP</a> (<a class="code" href="bgp__main_8c.html#ac269be8b91ae4b24df48de5d8ad7e7a7">config_file</a>[0]))
        {
          getcwd (cwd, MAXPATHLEN);
          tmp = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, 
                  strlen (cwd) + strlen (<a class="code" href="bgp__main_8c.html#ac269be8b91ae4b24df48de5d8ad7e7a7">config_file</a>) + 2);
          sprintf (tmp, <span class="stringliteral">&quot;%s/%s&quot;</span>, cwd, <a class="code" href="bgp__main_8c.html#ac269be8b91ae4b24df48de5d8ad7e7a7">config_file</a>);
          fullpath = tmp;
        }
      <span class="keywordflow">else</span>
        fullpath = <a class="code" href="bgp__main_8c.html#ac269be8b91ae4b24df48de5d8ad7e7a7">config_file</a>;

      confp = fopen (fullpath, <span class="stringliteral">&quot;r&quot;</span>);

      <span class="keywordflow">if</span> (confp == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
        {
          fprintf (stderr, <span class="stringliteral">&quot;%s: failed to open configuration file %s: %s\n&quot;</span>,
                   __func__, fullpath, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
          
          confp = <a class="code" href="vty_8c.html#a1bf1b8ef400521a7521418f4c463a59a">vty_use_backup_config</a> (fullpath);
          <span class="keywordflow">if</span> (confp)
            fprintf (stderr, <span class="stringliteral">&quot;WARNING: using backup configuration file!\n&quot;</span>);
          <span class="keywordflow">else</span>
            {
              fprintf (stderr, <span class="stringliteral">&quot;can&#39;t open configuration file [%s]\n&quot;</span>, 
                   <a class="code" href="bgp__main_8c.html#ac269be8b91ae4b24df48de5d8ad7e7a7">config_file</a>);
              <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a>(1);
            }
        }
    }
  <span class="keywordflow">else</span>
    {
<span class="preprocessor">#ifdef VTYSH</span>
<span class="preprocessor"></span>      <span class="keywordtype">int</span> ret;
      <span class="keyword">struct </span>stat conf_stat;

      <span class="comment">/* !!!!PLEASE LEAVE!!!!</span>
<span class="comment">       * This is NEEDED for use with vtysh -b, or else you can get</span>
<span class="comment">       * a real configuration food fight with a lot garbage in the</span>
<span class="comment">       * merged configuration file it creates coming from the per</span>
<span class="comment">       * daemon configuration files.  This also allows the daemons</span>
<span class="comment">       * to start if there default configuration file is not</span>
<span class="comment">       * present or ignore them, as needed when using vtysh -b to</span>
<span class="comment">       * configure the daemons at boot - MAG</span>
<span class="comment">       */</span>

      <span class="comment">/* Stat for vtysh Zebra.conf, if found startup and wait for</span>
<span class="comment">       * boot configuration</span>
<span class="comment">       */</span>

      <span class="keywordflow">if</span> ( strstr(config_default_dir, <span class="stringliteral">&quot;vtysh&quot;</span>) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
        {
          ret = stat (<a class="code" href="vty_8c.html#a1374f502412fa0cf9bac27528c3739f6">integrate_default</a>, &amp;conf_stat);
          <span class="keywordflow">if</span> (ret &gt;= 0)
            <span class="keywordflow">return</span>;
        }
<span class="preprocessor">#endif </span><span class="comment">/* VTYSH */</span>

      confp = fopen (config_default_dir, <span class="stringliteral">&quot;r&quot;</span>);
      <span class="keywordflow">if</span> (confp == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
        {
          fprintf (stderr, <span class="stringliteral">&quot;%s: failed to open configuration file %s: %s\n&quot;</span>,
                   __func__, config_default_dir, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
          
          confp = <a class="code" href="vty_8c.html#a1bf1b8ef400521a7521418f4c463a59a">vty_use_backup_config</a> (config_default_dir);
          <span class="keywordflow">if</span> (confp)
            {
              fprintf (stderr, <span class="stringliteral">&quot;WARNING: using backup configuration file!\n&quot;</span>);
              fullpath = config_default_dir;
            }
          <span class="keywordflow">else</span>
            {
              fprintf (stderr, <span class="stringliteral">&quot;can&#39;t open configuration file [%s]\n&quot;</span>,
                         config_default_dir);
              <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a> (1);
            }
        }      
      <span class="keywordflow">else</span>
        fullpath = config_default_dir;
    }

  <a class="code" href="vty_8c.html#a417754c91a13996d56090005c7eecfe0">vty_read_file</a> (confp);

  fclose (confp);

  <a class="code" href="command_8h.html#a98321817fecd3351cf782333d614c04f">host_config_set</a> (fullpath);
  
  <span class="keywordflow">if</span> (tmp)
    <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, fullpath);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a417754c91a13996d56090005c7eecfe0"></a><!-- doxytag: member="vty.c::vty_read_file" ref="a417754c91a13996d56090005c7eecfe0" args="(FILE *confp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_read_file </td>
          <td>(</td>
          <td class="paramtype">FILE *&#160;</td>
          <td class="paramname"><em>confp</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02228">2228</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret;
  <span class="keyword">struct </span><a class="code" href="structvty.html">vty</a> *<a class="code" href="vtysh_8c.html#a15b2c4e868040617c54eaaba3663b337">vty</a>;

  vty = <a class="code" href="vty_8c.html#a5761c76c7eaf421587052c372034cd57">vty_new</a> ();
  vty-&gt;<a class="code" href="structvty.html#aee2408e6a9e7f85adeba482cd2b5da42">fd</a> = 0;          <span class="comment">/* stdout */</span>
  vty-&gt;<a class="code" href="structvty.html#a918d01c53936e81c45a177b0ceda3eca">type</a> = <a class="code" href="structvty.html#a6cef26c7c345053bf910a8869d5c3d29adabc52cc2665954eb91c79357821ccb7">VTY_TERM</a>;
  vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>;
  
  <span class="comment">/* Execute configuration file */</span>
  ret = <a class="code" href="command_8c.html#a1b7a57873be9752c0f5bfc50a6f3c9f0">config_from_file</a> (vty, confp);

  <span class="keywordflow">if</span> ( !((ret == <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>) || (ret == <a class="code" href="command_8h.html#a6f6aa6c6eb58a1df028034d288d79ddf">CMD_ERR_NOTHING_TODO</a>)) ) 
    {
      <span class="keywordflow">switch</span> (ret)
       {
         <span class="keywordflow">case</span> <a class="code" href="command_8h.html#aaca9c63a322f9ed0311fd20404ce8e9a">CMD_ERR_AMBIGUOUS</a>:
           fprintf (stderr, <span class="stringliteral">&quot;Ambiguous command.\n&quot;</span>);
           <span class="keywordflow">break</span>;
         <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a007b585758677d61751303a88c8914d5">CMD_ERR_NO_MATCH</a>:
           fprintf (stderr, <span class="stringliteral">&quot;There is no such command.\n&quot;</span>);
           <span class="keywordflow">break</span>;
       }
      fprintf (stderr, <span class="stringliteral">&quot;Error occured during reading below line.\n%s\n&quot;</span>, 
           vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>);
      <a class="code" href="vty_8c.html#af1d7e2c952dfb90e0a7e2bbe194dedfb">vty_close</a> (vty);
      <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a> (1);
    }

  <a class="code" href="vty_8c.html#af1d7e2c952dfb90e0a7e2bbe194dedfb">vty_close</a> (vty);
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa88c9e2e5da06b826ac13025eefb386b"></a><!-- doxytag: member="vty.c::vty_redraw_line" ref="aa88c9e2e5da06b826ac13025eefb386b" args="(struct vty *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_redraw_line </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00637">637</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>, vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>);
  vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> = vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a637ad9b0152e5e5559bc0c05db07318e"></a><!-- doxytag: member="vty.c::vty_reset" ref="a637ad9b0152e5e5559bc0c05db07318e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void vty_reset </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02872">2872</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
  <span class="keyword">struct </span><a class="code" href="structvty.html">vty</a> *<a class="code" href="vtysh_8c.html#a15b2c4e868040617c54eaaba3663b337">vty</a>;
  <span class="keyword">struct </span><a class="code" href="structthread.html">thread</a> *vty_serv_thread;

  <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="vector_8h.html#ac96b7beddf251a81df131543d06d63c7">vector_active</a> (<a class="code" href="vty_8c.html#aada8117b2e5d72dcea3f29da3366ce4b">vtyvec</a>); i++)
    <span class="keywordflow">if</span> ((vty = <a class="code" href="vector_8h.html#a34cb4a77fbd6ab6cb23707cdd1c4c0d2">vector_slot</a> (<a class="code" href="vty_8c.html#aada8117b2e5d72dcea3f29da3366ce4b">vtyvec</a>, i)) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
      {
    <a class="code" href="buffer_8c.html#a91ad0ff694ccef1876a3e8d8a3b05ffa">buffer_reset</a> (vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>);
    vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> = VTY_CLOSE;
    <a class="code" href="vty_8c.html#af1d7e2c952dfb90e0a7e2bbe194dedfb">vty_close</a> (vty);
      }

  <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="vector_8h.html#ac96b7beddf251a81df131543d06d63c7">vector_active</a> (<a class="code" href="vty_8c.html#a794b894c87fe19a07c303a584f3dd454">Vvty_serv_thread</a>); i++)
    <span class="keywordflow">if</span> ((vty_serv_thread = <a class="code" href="vector_8h.html#a34cb4a77fbd6ab6cb23707cdd1c4c0d2">vector_slot</a> (<a class="code" href="vty_8c.html#a794b894c87fe19a07c303a584f3dd454">Vvty_serv_thread</a>, i)) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
      {
    <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (vty_serv_thread);
    <a class="code" href="vector_8h.html#a34cb4a77fbd6ab6cb23707cdd1c4c0d2">vector_slot</a> (<a class="code" href="vty_8c.html#a794b894c87fe19a07c303a584f3dd454">Vvty_serv_thread</a>, i) = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
        close (i);
      }

  <a class="code" href="vty_8c.html#a9dc870017884136998187f770ec7851c">vty_timeout_val</a> = <a class="code" href="vty_8h.html#a03e48199ba963901e8a24ebc553c4a64">VTY_TIMEOUT_DEFAULT</a>;

  <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a>)
    {
      <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a>(<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba05f7d9e133f49a4c7aaa98a318692c88">MTYPE_VTY</a>, <a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a>);
      <a class="code" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }

  <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a>)
    {
      <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a>(<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba05f7d9e133f49a4c7aaa98a318692c88">MTYPE_VTY</a>, <a class="code" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a>);
      <a class="code" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a773ccf9db9a99a1412fe1c138e01279b"></a><!-- doxytag: member="vty.c::vty_save_cwd" ref="a773ccf9db9a99a1412fe1c138e01279b" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_save_cwd </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02910">2910</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">char</span> cwd[MAXPATHLEN];
  <span class="keywordtype">char</span> *c;

  c = getcwd (cwd, MAXPATHLEN);

  <span class="keywordflow">if</span> (!c)
    {
      chdir (SYSCONFDIR);
      getcwd (cwd, MAXPATHLEN);
    }

  <a class="code" href="vty_8c.html#aa5e6e7a16dd20bf5e749f0d0bd403f33">vty_cwd</a> = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, strlen (cwd) + 1);
  strcpy (<a class="code" href="vty_8c.html#aa5e6e7a16dd20bf5e749f0d0bd403f33">vty_cwd</a>, cwd);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4d876e82ce61720dead15aac07e29c30"></a><!-- doxytag: member="vty.c::vty_self_insert" ref="a4d876e82ce61720dead15aac07e29c30" args="(struct vty *vty, char c)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_self_insert </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00486">486</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
  <span class="keywordtype">int</span> <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>;

  <a class="code" href="vty_8c.html#a8609a6dc68804aff15b0d00254a44fa5">vty_ensure</a> (vty, vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> + 1);
  length = vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> - vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>;
  memmove (&amp;vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> + 1], &amp;vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>], length);
  vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>] = c;

  <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, &amp;vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>], length + 1);
  <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>; i++)
    <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, &amp;<a class="code" href="vty_8c.html#a050c5269ec6f36e488b05d6b564601e2">telnet_backward_char</a>, 1);

  vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>++;
  vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>++;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a72f07cc8f6c3df4dfe4effaeae9cee9b"></a><!-- doxytag: member="vty.c::vty_self_insert_overwrite" ref="a72f07cc8f6c3df4dfe4effaeae9cee9b" args="(struct vty *vty, char c)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_self_insert_overwrite </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00506">506</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="vty_8c.html#a8609a6dc68804aff15b0d00254a44fa5">vty_ensure</a> (vty, vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> + 1);
  vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>++] = c;

  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> &gt; vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>)
    vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>++;

  <span class="keywordflow">if</span> ((vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a302e1f38939b1a74bc848007bb70bfdf">AUTH_NODE</a>) || (vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a96b74116564789f517eef9284f18b472">AUTH_ENABLE_NODE</a>))
    <span class="keywordflow">return</span>;

  <a class="code" href="vty_8c.html#acb4496c44dd46b278be6cb92351c4737">vty_write</a> (vty, &amp;c, 1);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a1247b9d1681382580789652f8dad12a6"></a><!-- doxytag: member="vty.c::vty_serv_sock" ref="a1247b9d1681382580789652f8dad12a6" args="(const char *addr, unsigned short port, const char *path)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void vty_serv_sock </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>addr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02135">2135</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="comment">/* If port is set to 0, do not listen on TCP/IP at all! */</span>
  <span class="keywordflow">if</span> (port)
    {

<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span><span class="preprocessor">#ifdef NRL</span>
<span class="preprocessor"></span>      <a class="code" href="vty_8c.html#acf1b5a3deff4b05879a784dd6bfa9a3c">vty_serv_sock_family</a> (addr, port, AF_INET);
      <a class="code" href="vty_8c.html#acf1b5a3deff4b05879a784dd6bfa9a3c">vty_serv_sock_family</a> (addr, port, AF_INET6);
<span class="preprocessor">#else </span><span class="comment">/* ! NRL */</span>
      vty_serv_sock_addrinfo (addr, port);
<span class="preprocessor">#endif </span><span class="comment">/* NRL*/</span>
<span class="preprocessor">#else </span><span class="comment">/* ! HAVE_IPV6 */</span>
      <a class="code" href="vty_8c.html#acf1b5a3deff4b05879a784dd6bfa9a3c">vty_serv_sock_family</a> (addr,port, AF_INET);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
    }

<span class="preprocessor">#ifdef VTYSH</span>
<span class="preprocessor"></span>  vty_serv_un (path);
<span class="preprocessor">#endif </span><span class="comment">/* VTYSH */</span>
}
</pre></div>
</div>
</div>
<a class="anchor" id="acf1b5a3deff4b05879a784dd6bfa9a3c"></a><!-- doxytag: member="vty.c::vty_serv_sock_family" ref="acf1b5a3deff4b05879a784dd6bfa9a3c" args="(const char *addr, unsigned short port, int family)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_serv_sock_family </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>addr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>family</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l01846">1846</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret;
  <span class="keyword">union </span><a class="code" href="unionsockunion.html">sockunion</a> su;
  <span class="keywordtype">int</span> accept_sock;
  <span class="keywordtype">void</span>* naddr=<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  memset (&amp;su, 0, <span class="keyword">sizeof</span> (<span class="keyword">union</span> <a class="code" href="unionsockunion.html">sockunion</a>));
  su.sa.sa_family = family;
  <span class="keywordflow">if</span>(addr)
    <span class="keywordflow">switch</span>(family)
    {
      <span class="keywordflow">case</span> AF_INET:
        naddr=&amp;su.sin.sin_addr;
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>      <span class="keywordflow">case</span> AF_INET6:
        naddr=&amp;su.sin6.sin6_addr;
<span class="preprocessor">#endif  </span>
<span class="preprocessor"></span>    }

  <span class="keywordflow">if</span>(naddr)
    <span class="keywordflow">switch</span>(<a class="code" href="sockunion_8c.html#ac13c2042641ea5031bc7e244e8061b84">inet_pton</a>(family,addr,naddr))
    {
      <span class="keywordflow">case</span> -1:
        <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a>(<span class="stringliteral">&quot;bad address %s&quot;</span>,addr);
    naddr=<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    <span class="keywordflow">break</span>;
      <span class="keywordflow">case</span> 0:
        <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a>(<span class="stringliteral">&quot;error translating address %s: %s&quot;</span>,addr,<a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a>(errno));
    naddr=<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }

  <span class="comment">/* Make new socket. */</span>
  accept_sock = <a class="code" href="sockunion_8c.html#aa87de7fb2e611ab14eabc9ee0242f53d">sockunion_stream_socket</a> (&amp;su);
  <span class="keywordflow">if</span> (accept_sock &lt; 0)
    <span class="keywordflow">return</span>;

  <span class="comment">/* This is server, so reuse address. */</span>
  <a class="code" href="sockunion_8c.html#aa177c0a1e91bd7ac7af8d703768a56bc">sockopt_reuseaddr</a> (accept_sock);
  <a class="code" href="sockunion_8c.html#a1910bb0d088e8c63fcf2d1441a0ad4e4">sockopt_reuseport</a> (accept_sock);

  <span class="comment">/* Bind socket to universal address and given port. */</span>
  ret = <a class="code" href="sockunion_8c.html#a12e8d416910e79b142ec1d4fee573073">sockunion_bind</a> (accept_sock, &amp;su, port, naddr);
  <span class="keywordflow">if</span> (ret &lt; 0)
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;can&#39;t bind socket&quot;</span>);
      close (accept_sock);  <span class="comment">/* Avoid sd leak. */</span>
      <span class="keywordflow">return</span>;
    }

  <span class="comment">/* Listen socket under queue 3. */</span>
  ret = listen (accept_sock, 3);
  <span class="keywordflow">if</span> (ret &lt; 0) 
    {
      <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_WARNING, <span class="stringliteral">&quot;can&#39;t listen socket&quot;</span>);
      close (accept_sock);  <span class="comment">/* Avoid sd leak. */</span>
      <span class="keywordflow">return</span>;
    }

  <span class="comment">/* Add vty server event. */</span>
  <a class="code" href="vty_8c.html#ab2f46d63c1d417738ae8a621dd8ff657">vty_event</a> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea8fd18ac65705a12e09a38d18e47d12ec">VTY_SERV</a>, accept_sock, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a34f77731bee7dcf980c6b344a9fff210"></a><!-- doxytag: member="vty.c::vty_shell" ref="a34f77731bee7dcf980c6b344a9fff210" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int vty_shell </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02934">2934</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> vty-&gt;<a class="code" href="structvty.html#a918d01c53936e81c45a177b0ceda3eca">type</a> == VTY_SHELL ? 1 : 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a239f7551b7a3441e41c9123e6fe72e87"></a><!-- doxytag: member="vty.c::vty_shell_serv" ref="a239f7551b7a3441e41c9123e6fe72e87" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int vty_shell_serv </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02940">2940</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> vty-&gt;<a class="code" href="structvty.html#a918d01c53936e81c45a177b0ceda3eca">type</a> == VTY_SHELL_SERV ? 1 : 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af1b5a37bcd266695933b5517b0e6d41b"></a><!-- doxytag: member="vty.c::vty_stop_input" ref="af1b5a37bcd266695933b5517b0e6d41b" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_stop_input </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l01092">1092</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> = vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> = 0;
  <a class="code" href="vty_8c.html#a46a8ab71c3c5e63dfe0b7881cfa8f8f8">vty_clear_buf</a> (vty);
  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="keywordflow">switch</span> (vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a>)
    {
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acb0c5ada108352e3e869838b0ee04c3b">RESTRICTED_NODE</a>:
      <span class="comment">/* Nothing to do. */</span>
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682af7fc20f627618eee254477289b890df3">ZEBRA_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682aba91035637d2e661aaea111ea200751a">RIP_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a7493d9d6392a7010c13aa962093436a7">BGP_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a6488e3f7329874893b68bb22f6c6fed0">RMAP_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a53037feb34b636b5cabbcdb85698ac35">OSPF_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a3e34f801d98de220164f1a6b7976d3c4">OSPF6_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab25ba1a66148ff64a7b5aa681cc8c2dd">ISIS_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a17696c332f7c9a776b7ce27fab05739b">KEYCHAIN_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a82708770dcbadd9cbe5279a2d7d1a974">KEYCHAIN_KEY_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8863fd12cbe31d4555e4bfe57be8bc89">MASC_NODE</a>:
    <span class="keywordflow">case</span> <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>:
      <a class="code" href="vty_8c.html#ae68c17df6974b76d0977fc41adde0f08">vty_config_unlock</a> (vty);
      vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">default</span>:
      <span class="comment">/* Unknown node, we have to ignore it. */</span>
      <span class="keywordflow">break</span>;
    }
  <a class="code" href="vty_8c.html#a6fa4b6876bff67f44f37e338ac6dc431">vty_prompt</a> (vty);

  <span class="comment">/* Set history pointer to the latest one. */</span>
  vty-&gt;<a class="code" href="structvty.html#a7baae5746026d42a5c13693d95354b19">hp</a> = vty-&gt;<a class="code" href="structvty.html#af08d6f44eed272e7bda1d474fe1573be">hindex</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae1bb46143e465cccc7bc8dd177b3464b"></a><!-- doxytag: member="vty.c::vty_telnet_option" ref="ae1bb46143e465cccc7bc8dd177b3464b" args="(struct vty *vty, unsigned char *buf, int nbytes)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int vty_telnet_option </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nbytes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l01168">1168</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
<span class="preprocessor">#ifdef TELNET_OPTION_DEBUG</span>
<span class="preprocessor"></span>  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

  <span class="keywordflow">for</span> (i = 0; i &lt; nbytes; i++)
    {
      <span class="keywordflow">switch</span> (buf[i])
    {
    <span class="keywordflow">case</span> IAC:
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;IAC &quot;</span>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> WILL:
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;WILL &quot;</span>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> WONT:
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;WONT &quot;</span>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> DO:
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;DO &quot;</span>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> DONT:
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;DONT &quot;</span>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> SB:
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;SB &quot;</span>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> SE:
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;SE &quot;</span>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> TELOPT_ECHO:
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;TELOPT_ECHO %s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> TELOPT_SGA:
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;TELOPT_SGA %s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> TELOPT_NAWS:
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;TELOPT_NAWS %s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">default</span>:
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%x &quot;</span>, buf[i]);
      <span class="keywordflow">break</span>;
    }
    }
  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

<span class="preprocessor">#endif </span><span class="comment">/* TELNET_OPTION_DEBUG */</span>

  <span class="keywordflow">switch</span> (buf[0])
    {
    <span class="keywordflow">case</span> SB:
      vty-&gt;<a class="code" href="structvty.html#a8e79b608af5753bb4a493fbaa62e3db1">sb_len</a> = 0;
      vty-&gt;<a class="code" href="structvty.html#af43115c5fffab36e14b77b8a893a361a">iac_sb_in_progress</a> = 1;
      <span class="keywordflow">return</span> 0;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> SE: 
      {
    <span class="keywordflow">if</span> (!vty-&gt;<a class="code" href="structvty.html#af43115c5fffab36e14b77b8a893a361a">iac_sb_in_progress</a>)
      <span class="keywordflow">return</span> 0;

    <span class="keywordflow">if</span> ((vty-&gt;<a class="code" href="structvty.html#a8e79b608af5753bb4a493fbaa62e3db1">sb_len</a> == 0) || (vty-&gt;<a class="code" href="structvty.html#a931d735f2a5e903328c5a03468655bef">sb_buf</a>[0] == <span class="charliteral">&#39;\0&#39;</span>))
      {
        vty-&gt;<a class="code" href="structvty.html#af43115c5fffab36e14b77b8a893a361a">iac_sb_in_progress</a> = 0;
        <span class="keywordflow">return</span> 0;
      }
    <span class="keywordflow">switch</span> (vty-&gt;<a class="code" href="structvty.html#a931d735f2a5e903328c5a03468655bef">sb_buf</a>[0])
      {
      <span class="keywordflow">case</span> TELOPT_NAWS:
        <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a8e79b608af5753bb4a493fbaa62e3db1">sb_len</a> != <a class="code" href="vty_8h.html#a3dc5068383c050852fa22207582a21cc">TELNET_NAWS_SB_LEN</a>)
          <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;RFC 1073 violation detected: telnet NAWS option &quot;</span>
            <span class="stringliteral">&quot;should send %d characters, but we received %lu&quot;</span>,
            <a class="code" href="vty_8h.html#a3dc5068383c050852fa22207582a21cc">TELNET_NAWS_SB_LEN</a>, (u_long)vty-&gt;<a class="code" href="structvty.html#a8e79b608af5753bb4a493fbaa62e3db1">sb_len</a>);
        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<span class="keyword">sizeof</span>(vty-&gt;<a class="code" href="structvty.html#a931d735f2a5e903328c5a03468655bef">sb_buf</a>) &lt; <a class="code" href="vty_8h.html#a3dc5068383c050852fa22207582a21cc">TELNET_NAWS_SB_LEN</a>)
          <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a>(<span class="stringliteral">&quot;Bug detected: sizeof(vty-&gt;sb_buf) %lu &lt; %d, &quot;</span>
               <span class="stringliteral">&quot;too small to handle the telnet NAWS option&quot;</span>,
               (u_long)<span class="keyword">sizeof</span>(vty-&gt;<a class="code" href="structvty.html#a931d735f2a5e903328c5a03468655bef">sb_buf</a>), <a class="code" href="vty_8h.html#a3dc5068383c050852fa22207582a21cc">TELNET_NAWS_SB_LEN</a>);
        <span class="keywordflow">else</span>
          {
        vty-&gt;<a class="code" href="structvty.html#a57c305025545e9f6f58ecc68380cd6de">width</a> = ((vty-&gt;<a class="code" href="structvty.html#a931d735f2a5e903328c5a03468655bef">sb_buf</a>[1] &lt;&lt; 8)|vty-&gt;<a class="code" href="structvty.html#a931d735f2a5e903328c5a03468655bef">sb_buf</a>[2]);
        vty-&gt;<a class="code" href="structvty.html#a89d8052878ac339006922c2151ca4ffa">height</a> = ((vty-&gt;<a class="code" href="structvty.html#a931d735f2a5e903328c5a03468655bef">sb_buf</a>[3] &lt;&lt; 8)|vty-&gt;<a class="code" href="structvty.html#a931d735f2a5e903328c5a03468655bef">sb_buf</a>[4]);
<span class="preprocessor">#ifdef TELNET_OPTION_DEBUG</span>
<span class="preprocessor"></span>        <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a>(vty, <span class="stringliteral">&quot;TELNET NAWS window size negotiation completed: &quot;</span>
                  <span class="stringliteral">&quot;width %d, height %d%s&quot;</span>,
            vty-&gt;<a class="code" href="structvty.html#a57c305025545e9f6f58ecc68380cd6de">width</a>, vty-&gt;<a class="code" href="structvty.html#a89d8052878ac339006922c2151ca4ffa">height</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>          }
        <span class="keywordflow">break</span>;
      }
    vty-&gt;<a class="code" href="structvty.html#af43115c5fffab36e14b77b8a893a361a">iac_sb_in_progress</a> = 0;
    <span class="keywordflow">return</span> 0;
    <span class="keywordflow">break</span>;
      }
    <span class="keywordflow">default</span>:
      <span class="keywordflow">break</span>;
    }
  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9bf707340481507f599db15db0e79e85"></a><!-- doxytag: member="vty.c::vty_terminate" ref="a9bf707340481507f599db15db0e79e85" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void vty_terminate </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02999">2999</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#aa5e6e7a16dd20bf5e749f0d0bd403f33">vty_cwd</a>)
    <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, <a class="code" href="vty_8c.html#aa5e6e7a16dd20bf5e749f0d0bd403f33">vty_cwd</a>);

  <span class="keywordflow">if</span> (<a class="code" href="vty_8c.html#aada8117b2e5d72dcea3f29da3366ce4b">vtyvec</a> &amp;&amp; <a class="code" href="vty_8c.html#a794b894c87fe19a07c303a584f3dd454">Vvty_serv_thread</a>)
    {
      <a class="code" href="vty_8c.html#a637ad9b0152e5e5559bc0c05db07318e">vty_reset</a> ();
      <a class="code" href="vector_8c.html#af535d7daaa1dc88a3ac5c4451a6296f0">vector_free</a> (<a class="code" href="vty_8c.html#aada8117b2e5d72dcea3f29da3366ce4b">vtyvec</a>);
      <a class="code" href="vector_8c.html#af535d7daaa1dc88a3ac5c4451a6296f0">vector_free</a> (<a class="code" href="vty_8c.html#a794b894c87fe19a07c303a584f3dd454">Vvty_serv_thread</a>);
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac62e5cb873525019212b99e841899eb3"></a><!-- doxytag: member="vty.c::vty_time_print" ref="ac62e5cb873525019212b99e841899eb3" args="(struct vty *vty, int cr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void vty_time_print </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>cr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00209">209</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">char</span> buf [25];
  
  <span class="keywordflow">if</span> (<a class="code" href="log_8c.html#aa70601e0152987332545566abf72b090">quagga_timestamp</a>(0, buf, <span class="keyword">sizeof</span>(buf)) == 0)
    {
      <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_INFO, <span class="stringliteral">&quot;quagga_timestamp error&quot;</span>);
      <span class="keywordflow">return</span>;
    }
  <span class="keywordflow">if</span> (cr)
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s\n&quot;</span>, buf);
  <span class="keywordflow">else</span>
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s &quot;</span>, buf);

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a749b1b1ed2edbfa6c84c27a042e74331"></a><!-- doxytag: member="vty.c::vty_timeout" ref="a749b1b1ed2edbfa6c84c27a042e74331" args="(struct thread *thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int vty_timeout </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>thread</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02207">2207</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structvty.html">vty</a> *<a class="code" href="vtysh_8c.html#a15b2c4e868040617c54eaaba3663b337">vty</a>;

  vty = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
  vty-&gt;<a class="code" href="structvty.html#a42012920c9e6ac0e0d5040ac48496d3e">t_timeout</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  vty-&gt;<a class="code" href="structvty.html#aa334d5bb623207305fa72d76151f8096">v_timeout</a> = 0;

  <span class="comment">/* Clear buffer*/</span>
  <a class="code" href="buffer_8c.html#a91ad0ff694ccef1876a3e8d8a3b05ffa">buffer_reset</a> (vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>);
  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%sVty connection is timed out.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="comment">/* Close connection. */</span>
  vty-&gt;<a class="code" href="structvty.html#a30f7ea177f1581f3fc186fa3da466e3d">status</a> = <a class="code" href="structvty.html#a0c7b50eeebed9648264d409a92586bb6ab568d9eaea4e6aa93ae7fb8a7c65d4cb">VTY_CLOSE</a>;
  <a class="code" href="vty_8c.html#af1d7e2c952dfb90e0a7e2bbe194dedfb">vty_close</a> (vty);

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="afd4a3c3a366c9078aa632e04b34e7d2c"></a><!-- doxytag: member="vty.c::vty_transpose_chars" ref="afd4a3c3a366c9078aa632e04b34e7d2c" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_transpose_chars </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00822">822</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">char</span> <a class="code" href="test-checksum_8c.html#a8f9aca421a560153a31ebb326da34216">c1</a>, c2;

  <span class="comment">/* If length is short or point is near by the beginning of line then</span>
<span class="comment">     return. */</span>
  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a> &lt; 2 || vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> &lt; 1)
    <span class="keywordflow">return</span>;

  <span class="comment">/* In case of point is located at the end of the line. */</span>
  <span class="keywordflow">if</span> (vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> == vty-&gt;<a class="code" href="structvty.html#a40464fa0b27445669c26fe6b5ace46e1">length</a>)
    {
      c1 = vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> - 1];
      c2 = vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> - 2];

      <a class="code" href="vty_8c.html#ae83b887d99a0493283dad484e58d16b8">vty_backward_char</a> (vty);
      <a class="code" href="vty_8c.html#ae83b887d99a0493283dad484e58d16b8">vty_backward_char</a> (vty);
      <a class="code" href="vty_8c.html#a72f07cc8f6c3df4dfe4effaeae9cee9b">vty_self_insert_overwrite</a> (vty, c1);
      <a class="code" href="vty_8c.html#a72f07cc8f6c3df4dfe4effaeae9cee9b">vty_self_insert_overwrite</a> (vty, c2);
    }
  <span class="keywordflow">else</span>
    {
      c1 = vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a>];
      c2 = vty-&gt;<a class="code" href="structvty.html#aa9d1b3b4593ff8e576a7e012c6b45570">buf</a>[vty-&gt;<a class="code" href="structvty.html#ab49792bff9db1c643f8bb248b503cd39">cp</a> - 1];

      <a class="code" href="vty_8c.html#ae83b887d99a0493283dad484e58d16b8">vty_backward_char</a> (vty);
      <a class="code" href="vty_8c.html#a72f07cc8f6c3df4dfe4effaeae9cee9b">vty_self_insert_overwrite</a> (vty, c1);
      <a class="code" href="vty_8c.html#a72f07cc8f6c3df4dfe4effaeae9cee9b">vty_self_insert_overwrite</a> (vty, c2);
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a1bf1b8ef400521a7521418f4c463a59a"></a><!-- doxytag: member="vty.c::vty_use_backup_config" ref="a1bf1b8ef400521a7521418f4c463a59a" args="(char *fullpath)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static FILE* vty_use_backup_config </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>fullpath</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02262">2262</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">char</span> *fullpath_sav, *fullpath_tmp;
  FILE *ret = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keyword">struct </span>stat buf;
  <span class="keywordtype">int</span> tmp, sav;
  <span class="keywordtype">int</span> c;
  <span class="keywordtype">char</span> <a class="code" href="structbuffer.html">buffer</a>[512];
  
  fullpath_sav = <a class="code" href="regex_8c.html#ab7e36af3707843f77cc5b4e831c2fa6d">malloc</a> (strlen (fullpath) + strlen (<a class="code" href="command_8h.html#a0837aaf45e6c54e1340b0d2df36cd599">CONF_BACKUP_EXT</a>) + 1);
  strcpy (fullpath_sav, fullpath);
  strcat (fullpath_sav, <a class="code" href="command_8h.html#a0837aaf45e6c54e1340b0d2df36cd599">CONF_BACKUP_EXT</a>);
  <span class="keywordflow">if</span> (stat (fullpath_sav, &amp;buf) == -1)
    {
      free (fullpath_sav);
      <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }

  fullpath_tmp = <a class="code" href="regex_8c.html#ab7e36af3707843f77cc5b4e831c2fa6d">malloc</a> (strlen (fullpath) + 8);
  sprintf (fullpath_tmp, <span class="stringliteral">&quot;%s.XXXXXX&quot;</span>, fullpath);
  
  <span class="comment">/* Open file to configuration write. */</span>
  tmp = mkstemp (fullpath_tmp);
  <span class="keywordflow">if</span> (tmp &lt; 0)
    {
      free (fullpath_sav);
      free (fullpath_tmp);
      <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }

  sav = open (fullpath_sav, O_RDONLY);
  <span class="keywordflow">if</span> (sav &lt; 0)
    {
      unlink (fullpath_tmp);
      free (fullpath_sav);
      free (fullpath_tmp);
      <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }
  
  <span class="keywordflow">while</span>((c = read (sav, buffer, 512)) &gt; 0)
    write (tmp, buffer, c);
  
  close (sav);
  close (tmp);
  
  <span class="keywordflow">if</span> (chmod(fullpath_tmp, CONFIGFILE_MASK) != 0)
    {
      unlink (fullpath_tmp);
      free (fullpath_sav);
      free (fullpath_tmp);
      <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }
  
  <span class="keywordflow">if</span> (link (fullpath_tmp, fullpath) == 0)
    ret = fopen (fullpath, <span class="stringliteral">&quot;r&quot;</span>);

  unlink (fullpath_tmp);
  
  free (fullpath_sav);
  free (fullpath_tmp);
  <span class="keywordflow">return</span> ret;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a90006000348e50410b5a8040b241d411"></a><!-- doxytag: member="vty.c::vty_will_echo" ref="a90006000348e50410b5a8040b241d411" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_will_echo </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00277">277</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> cmd[] = { IAC, WILL, TELOPT_ECHO, <span class="charliteral">&#39;\0&#39;</span> };
  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, cmd);
}
</pre></div>
</div>
</div>
<a class="anchor" id="aee3608a98cb407de696ed4595c5b5d8d"></a><!-- doxytag: member="vty.c::vty_will_suppress_go_ahead" ref="aee3608a98cb407de696ed4595c5b5d8d" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_will_suppress_go_ahead </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00285">285</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> cmd[] = { IAC, WILL, TELOPT_SGA, <span class="charliteral">&#39;\0&#39;</span> };
  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s&quot;</span>, cmd);
}
</pre></div>
</div>
</div>
<a class="anchor" id="acb4496c44dd46b278be6cb92351c4737"></a><!-- doxytag: member="vty.c::vty_write" ref="acb4496c44dd46b278be6cb92351c4737" args="(struct vty *vty, const char *buf, size_t nbytes)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void vty_write </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>nbytes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00464">464</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> ((vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a302e1f38939b1a74bc848007bb70bfdf">AUTH_NODE</a>) || (vty-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a96b74116564789f517eef9284f18b472">AUTH_ENABLE_NODE</a>))
    <span class="keywordflow">return</span>;

  <span class="comment">/* Should we do buffering here ?  And make vty_flush (vty) ? */</span>
  <a class="code" href="buffer_8c.html#a6150096c2eaae19e636d2742c3df5b75">buffer_put</a> (vty-&gt;<a class="code" href="structvty.html#a0363ad4ce51e9147f27ce9cb2335714f">obuf</a>, buf, nbytes);
}
</pre></div>
</div>
</div>
<hr/><h2>Variable Documentation</h2>
<a class="anchor" id="ab4e4c95630aff8de923b0b7f25dec6e7"></a><!-- doxytag: member="vty.c::host" ref="ab4e4c95630aff8de923b0b7f25dec6e7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structhost.html">host</a> <a class="el" href="structhost.html">host</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="command_8c_source.html#l00044">44</a> of file <a class="el" href="command_8c_source.html">command.c</a>.</p>

</div>
</div>
<a class="anchor" id="a1374f502412fa0cf9bac27528c3739f6"></a><!-- doxytag: member="vty.c::integrate_default" ref="a1374f502412fa0cf9bac27528c3739f6" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char <a class="el" href="vty_8h.html#a1374f502412fa0cf9bac27528c3739f6">integrate_default</a>[] = SYSCONFDIR INTEGRATE_DEFAULT_CONFIG</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00090">90</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>

</div>
</div>
<a class="anchor" id="af7f9077bc08df049beb65a1c09cde5fa"></a><!-- doxytag: member="vty.c::master" ref="af7f9077bc08df049beb65a1c09cde5fa" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structthread__master.html">thread_master</a>* <a class="el" href="test__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l02499">2499</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>

</div>
</div>
<a class="anchor" id="a27b0172ccf3d40051140bb3a04607711"></a><!-- doxytag: member="vty.c::no_password_check" ref="a27b0172ccf3d40051140bb3a04607711" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="vty_8c.html#a27b0172ccf3d40051140bb3a04607711">no_password_check</a> = 0<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00083">83</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>

</div>
</div>
<a class="anchor" id="a78ee728656e5a1528d1b45e94acc23a6"></a><!-- doxytag: member="vty.c::restricted_mode" ref="a78ee728656e5a1528d1b45e94acc23a6" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">u_char <a class="el" href="vty_8c.html#a78ee728656e5a1528d1b45e94acc23a6">restricted_mode</a> = 0<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00087">87</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>

</div>
</div>
<a class="anchor" id="a4af47f7385ea1ddf6492f7bfcb37cd7e"></a><!-- doxytag: member="vty.c::restricted_mode_default" ref="a4af47f7385ea1ddf6492f7bfcb37cd7e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const u_char <a class="el" href="vty_8c.html#a4af47f7385ea1ddf6492f7bfcb37cd7e">restricted_mode_default</a> = 0<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00086">86</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>

</div>
</div>
<a class="anchor" id="a050c5269ec6f36e488b05d6b564601e2"></a><!-- doxytag: member="vty.c::telnet_backward_char" ref="a050c5269ec6f36e488b05d6b564601e2" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char <a class="el" href="vty_8c.html#a050c5269ec6f36e488b05d6b564601e2">telnet_backward_char</a> = 0x08<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00459">459</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>

</div>
</div>
<a class="anchor" id="a05df3d7f54ae7e630ade2a3124ce48d6"></a><!-- doxytag: member="vty.c::telnet_space_char" ref="a05df3d7f54ae7e630ade2a3124ce48d6" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char <a class="el" href="vty_8c.html#a05df3d7f54ae7e630ade2a3124ce48d6">telnet_space_char</a> = ' '<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00460">460</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>

</div>
</div>
<a class="anchor" id="aa36609e2254b68705286d2faf7a61c63"></a><!-- doxytag: member="vty.c::vty_accesslist_name" ref="aa36609e2254b68705286d2faf7a61c63" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* <a class="el" href="vty_8c.html#aa36609e2254b68705286d2faf7a61c63">vty_accesslist_name</a> = NULL<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00068">68</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>

</div>
</div>
<a class="anchor" id="a472109ecd35a2f4a2953e6ca76a5824d"></a><!-- doxytag: member="vty.c::vty_config" ref="a472109ecd35a2f4a2953e6ca76a5824d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="vty_8c.html#a472109ecd35a2f4a2953e6ca76a5824d">vty_config</a><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00080">80</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>

</div>
</div>
<a class="anchor" id="aa5e6e7a16dd20bf5e749f0d0bd403f33"></a><!-- doxytag: member="vty.c::vty_cwd" ref="aa5e6e7a16dd20bf5e749f0d0bd403f33" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* <a class="el" href="vty_8c.html#aa5e6e7a16dd20bf5e749f0d0bd403f33">vty_cwd</a> = NULL</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00077">77</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>

</div>
</div>
<a class="anchor" id="aa58d1386047082ee77903f85e70ef23c"></a><!-- doxytag: member="vty.c::vty_ipv6_accesslist_name" ref="aa58d1386047082ee77903f85e70ef23c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* <a class="el" href="vty_8c.html#aa58d1386047082ee77903f85e70ef23c">vty_ipv6_accesslist_name</a> = NULL<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00071">71</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>

</div>
</div>
<a class="anchor" id="a4515b7730ee408bb977cce603b51ce57"></a><!-- doxytag: member="vty.c::vty_node" ref="a4515b7730ee408bb977cce603b51ce57" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structcmd__node.html">cmd_node</a> <a class="el" href="vtysh_8c.html#a4515b7730ee408bb977cce603b51ce57">vty_node</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment">
{
  <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a42e5cebd0265d2c03a8da6fa220e11c6">VTY_NODE</a>,
  <span class="stringliteral">&quot;%s(config-line)# &quot;</span>,
  1,
}
</pre></div>
<p>Definition at line <a class="el" href="vty_8c_source.html#l02863">2863</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>

</div>
</div>
<a class="anchor" id="a9dc870017884136998187f770ec7851c"></a><!-- doxytag: member="vty.c::vty_timeout_val" ref="a9dc870017884136998187f770ec7851c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="vty_8c.html#a9dc870017884136998187f770ec7851c">vty_timeout_val</a> = VTY_TIMEOUT_DEFAULT<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00065">65</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>

</div>
</div>
<a class="anchor" id="aada8117b2e5d72dcea3f29da3366ce4b"></a><!-- doxytag: member="vty.c::vtyvec" ref="aada8117b2e5d72dcea3f29da3366ce4b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a> <a class="el" href="vty_8c.html#aada8117b2e5d72dcea3f29da3366ce4b">vtyvec</a><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00062">62</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>

</div>
</div>
<a class="anchor" id="a794b894c87fe19a07c303a584f3dd454"></a><!-- doxytag: member="vty.c::Vvty_serv_thread" ref="a794b894c87fe19a07c303a584f3dd454" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a> <a class="el" href="vty_8c.html#a794b894c87fe19a07c303a584f3dd454">Vvty_serv_thread</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vty_8c_source.html#l00074">74</a> of file <a class="el" href="vty_8c_source.html">vty.c</a>.</p>

</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="vty_8c.html">vty.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:25 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
