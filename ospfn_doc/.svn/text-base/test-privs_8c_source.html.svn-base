<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: tests/test-privs.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('test-privs_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">tests/test-privs.c</div>  </div>
</div>
<div class="contents">
<a href="test-privs_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * $Id: test-privs.c,v 1.1 2005/10/11 03:48:28 paul Exp $</span>
<a name="l00003"></a>00003 <span class="comment"> *</span>
<a name="l00004"></a>00004 <span class="comment"> * This file is part of Quagga.</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * Quagga is free software; you can redistribute it and/or modify it</span>
<a name="l00007"></a>00007 <span class="comment"> * under the terms of the GNU General Public License as published by the</span>
<a name="l00008"></a>00008 <span class="comment"> * Free Software Foundation; either version 2, or (at your option) any</span>
<a name="l00009"></a>00009 <span class="comment"> * later version.</span>
<a name="l00010"></a>00010 <span class="comment"> *</span>
<a name="l00011"></a>00011 <span class="comment"> * Quagga is distributed in the hope that it will be useful, but</span>
<a name="l00012"></a>00012 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00014"></a>00014 <span class="comment"> * General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment"> * along with Quagga; see the file COPYING.  If not, write to the Free</span>
<a name="l00018"></a>00018 <span class="comment"> * Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA</span>
<a name="l00019"></a>00019 <span class="comment"> * 02111-1307, USA.</span>
<a name="l00020"></a>00020 <span class="comment"> */</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="preprocessor">#include &lt;<a class="code" href="zebra_8h.html">zebra.h</a>&gt;</span>
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 <span class="preprocessor">#include &lt;<a class="code" href="version_8h.html">lib/version.h</a>&gt;</span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="getopt_8h.html">getopt.h</a>&quot;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="privs_8h.html">privs.h</a>&quot;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="memory_8h.html">memory.h</a>&quot;</span>
<a name="l00028"></a>00028 
<a name="l00029"></a><a class="code" href="test-privs_8c.html#a4565341c013a461a4a862195568418f9">00029</a> <a class="code" href="privs_8h.html#acadb26c3fc89554cf67e4bae79e13058">zebra_capabilities_t</a> <a class="code" href="bgp__main_8c.html#a4565341c013a461a4a862195568418f9">_caps_p</a> [] = 
<a name="l00030"></a>00030 {
<a name="l00031"></a>00031   <a class="code" href="privs_8h.html#acadb26c3fc89554cf67e4bae79e13058a6cbad9f21b16adad616a294ed5bfc9f9">ZCAP_NET_RAW</a>,
<a name="l00032"></a>00032   <a class="code" href="privs_8h.html#acadb26c3fc89554cf67e4bae79e13058a883e29f00ac9b73d278bfe8d7cdb1ac9">ZCAP_BIND</a>,
<a name="l00033"></a>00033   <a class="code" href="privs_8h.html#acadb26c3fc89554cf67e4bae79e13058ab19204d6d995015c1a3383016bfb4b22">ZCAP_NET_ADMIN</a>,
<a name="l00034"></a>00034   <a class="code" href="privs_8h.html#acadb26c3fc89554cf67e4bae79e13058a378b69cf384e99df36ab1bad5b901588">ZCAP_DAC_OVERRIDE</a>,
<a name="l00035"></a>00035 };
<a name="l00036"></a>00036 
<a name="l00037"></a><a class="code" href="test-privs_8c.html#a4e0ddc4691d974f1b37f47cb2afc21df">00037</a> <span class="keyword">struct </span><a class="code" href="structzebra__privs__t.html">zebra_privs_t</a> <a class="code" href="test-privs_8c.html#a4e0ddc4691d974f1b37f47cb2afc21df">test_privs</a> =
<a name="l00038"></a>00038 {
<a name="l00039"></a>00039 <span class="preprocessor">#if defined(QUAGGA_USER) &amp;&amp; defined(QUAGGA_GROUP)</span>
<a name="l00040"></a>00040 <span class="preprocessor"></span>  .<a class="code" href="structzebra__privs__t.html#a62e6101b1d966f24692ae650a331fb95">user</a> = QUAGGA_USER,
<a name="l00041"></a>00041   .group = QUAGGA_GROUP,
<a name="l00042"></a>00042 <span class="preprocessor">#endif</span>
<a name="l00043"></a>00043 <span class="preprocessor"></span><span class="preprocessor">#if defined(VTY_GROUP)</span>
<a name="l00044"></a>00044 <span class="preprocessor"></span>  .vty_group = VTY_GROUP,
<a name="l00045"></a>00045 <span class="preprocessor">#endif</span>
<a name="l00046"></a>00046 <span class="preprocessor"></span>  .caps_p = <a class="code" href="bgp__main_8c.html#a4565341c013a461a4a862195568418f9">_caps_p</a>,
<a name="l00047"></a>00047   .cap_num_p = <span class="keyword">sizeof</span>(<a class="code" href="bgp__main_8c.html#a4565341c013a461a4a862195568418f9">_caps_p</a>)/<span class="keyword">sizeof</span>(<a class="code" href="bgp__main_8c.html#a4565341c013a461a4a862195568418f9">_caps_p</a>[0]),
<a name="l00048"></a>00048   .cap_num_i = 0
<a name="l00049"></a>00049 };
<a name="l00050"></a>00050 
<a name="l00051"></a><a class="code" href="test-privs_8c.html#a94965649155359a4c4eb047af782bf22">00051</a> <span class="keyword">struct </span><a class="code" href="structoption.html">option</a> <a class="code" href="bgp__main_8c.html#a94965649155359a4c4eb047af782bf22">longopts</a>[] = 
<a name="l00052"></a>00052 {
<a name="l00053"></a>00053   { <span class="stringliteral">&quot;help&quot;</span>,        <a class="code" href="getopt_8h.html#a3bc1d5f667b5b4ca4b4abb685dc874ce">no_argument</a>,       <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <span class="charliteral">&#39;h&#39;</span>},
<a name="l00054"></a>00054   { <span class="stringliteral">&quot;user&quot;</span>,        <a class="code" href="getopt_8h.html#a6ece8d8dfa8378778f7290fdaba5b8bc">required_argument</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <span class="charliteral">&#39;u&#39;</span>},
<a name="l00055"></a>00055   { <span class="stringliteral">&quot;group&quot;</span>,       <a class="code" href="getopt_8h.html#a6ece8d8dfa8378778f7290fdaba5b8bc">required_argument</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <span class="charliteral">&#39;g&#39;</span>},
<a name="l00056"></a>00056   { 0 }
<a name="l00057"></a>00057 };
<a name="l00058"></a>00058 
<a name="l00059"></a>00059 <span class="comment">/* Help information display. */</span>
<a name="l00060"></a>00060 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00061"></a><a class="code" href="test-privs_8c.html#ab24f62159230cf265fc4d7ddc4c91872">00061</a> <a class="code" href="bgp__main_8c.html#ab24f62159230cf265fc4d7ddc4c91872">usage</a> (<span class="keywordtype">char</span> *<a class="code" href="isis__main_8c.html#ab9e1449fd00c98428516f0b41eddcb10">progname</a>, <span class="keywordtype">int</span> status)
<a name="l00062"></a>00062 {
<a name="l00063"></a>00063   <span class="keywordflow">if</span> (status != 0)
<a name="l00064"></a>00064     fprintf (stderr, <span class="stringliteral">&quot;Try `%s --help&#39; for more information.\n&quot;</span>, progname);
<a name="l00065"></a>00065   <span class="keywordflow">else</span>
<a name="l00066"></a>00066     {    
<a name="l00067"></a>00067       printf (<span class="stringliteral">&quot;Usage : %s [OPTION...]\n\</span>
<a name="l00068"></a>00068 <span class="stringliteral">Daemon which does &#39;slow&#39; things.\n\n\</span>
<a name="l00069"></a>00069 <span class="stringliteral">-u, --user         User to run as\n\</span>
<a name="l00070"></a>00070 <span class="stringliteral">-g, --group        Group to run as\n\</span>
<a name="l00071"></a>00071 <span class="stringliteral">-h, --help         Display this help and exit\n\</span>
<a name="l00072"></a>00072 <span class="stringliteral">\n\</span>
<a name="l00073"></a>00073 <span class="stringliteral">Report bugs to %s\n&quot;</span>, progname, <a class="code" href="version_8h.html#a568a90422884d007e54c4f2e653ddc29">ZEBRA_BUG_ADDRESS</a>);
<a name="l00074"></a>00074     }
<a name="l00075"></a>00075   <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a> (status);
<a name="l00076"></a>00076 }
<a name="l00077"></a>00077 
<a name="l00078"></a><a class="code" href="test-privs_8c.html#af7f9077bc08df049beb65a1c09cde5fa">00078</a> <span class="keyword">struct </span><a class="code" href="structthread__master.html">thread_master</a> *<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>;
<a name="l00079"></a>00079 <span class="comment">/* main routine. */</span>
<a name="l00080"></a>00080 <span class="keywordtype">int</span>
<a name="l00081"></a><a class="code" href="test-privs_8c.html#a3c04138a5bfe5d72780bb7e82a18e627">00081</a> <a class="code" href="bgp__main_8c.html#a3c04138a5bfe5d72780bb7e82a18e627">main</a> (<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv)
<a name="l00082"></a>00082 {
<a name="l00083"></a>00083   <span class="keywordtype">char</span> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
<a name="l00084"></a>00084   <span class="keywordtype">char</span> *<a class="code" href="isis__main_8c.html#ab9e1449fd00c98428516f0b41eddcb10">progname</a>;
<a name="l00085"></a>00085   <span class="keyword">struct </span><a class="code" href="structzprivs__ids__t.html">zprivs_ids_t</a> ids;
<a name="l00086"></a>00086   
<a name="l00087"></a>00087   <span class="comment">/* Set umask before anything for security */</span>
<a name="l00088"></a>00088   umask (0027);
<a name="l00089"></a>00089 
<a name="l00090"></a>00090   <span class="comment">/* get program name */</span>
<a name="l00091"></a>00091   progname = ((p = strrchr (argv[0], <span class="charliteral">&#39;/&#39;</span>)) ? ++p : argv[0]);
<a name="l00092"></a>00092 
<a name="l00093"></a>00093   <span class="keywordflow">while</span> (1) 
<a name="l00094"></a>00094     {
<a name="l00095"></a>00095       <span class="keywordtype">int</span> opt;
<a name="l00096"></a>00096 
<a name="l00097"></a>00097       opt = <a class="code" href="getopt_8h.html#a8616b8a74ae6c01a7ad95ad2876226ec">getopt_long</a> (argc, argv, <span class="stringliteral">&quot;hu:g:&quot;</span>, longopts, 0);
<a name="l00098"></a>00098     
<a name="l00099"></a>00099       <span class="keywordflow">if</span> (opt == EOF)
<a name="l00100"></a>00100     <span class="keywordflow">break</span>;
<a name="l00101"></a>00101 
<a name="l00102"></a>00102       <span class="keywordflow">switch</span> (opt) 
<a name="l00103"></a>00103     {
<a name="l00104"></a>00104     <span class="keywordflow">case</span> 0:
<a name="l00105"></a>00105       <span class="keywordflow">break</span>;
<a name="l00106"></a>00106         <span class="keywordflow">case</span> <span class="charliteral">&#39;u&#39;</span>:
<a name="l00107"></a>00107           test_privs.<a class="code" href="structzebra__privs__t.html#a62e6101b1d966f24692ae650a331fb95">user</a> = <a class="code" href="getopt_8c.html#adb50a0eab9fed92fc3bfc7dfa4f2c410">optarg</a>;
<a name="l00108"></a>00108           <span class="keywordflow">break</span>;
<a name="l00109"></a>00109         <span class="keywordflow">case</span> <span class="charliteral">&#39;g&#39;</span>:
<a name="l00110"></a>00110           test_privs.<a class="code" href="structzebra__privs__t.html#a5b11e63c267759ec4dd64022e6046b80">group</a> = <a class="code" href="getopt_8c.html#adb50a0eab9fed92fc3bfc7dfa4f2c410">optarg</a>;
<a name="l00111"></a>00111           <span class="keywordflow">break</span>;
<a name="l00112"></a>00112     <span class="keywordflow">case</span> <span class="charliteral">&#39;h&#39;</span>:
<a name="l00113"></a>00113       <a class="code" href="bgp__main_8c.html#ab24f62159230cf265fc4d7ddc4c91872">usage</a> (progname, 0);
<a name="l00114"></a>00114       <span class="keywordflow">break</span>;
<a name="l00115"></a>00115     <span class="keywordflow">default</span>:
<a name="l00116"></a>00116       <a class="code" href="bgp__main_8c.html#ab24f62159230cf265fc4d7ddc4c91872">usage</a> (progname, 1);
<a name="l00117"></a>00117       <span class="keywordflow">break</span>;
<a name="l00118"></a>00118     }
<a name="l00119"></a>00119     }
<a name="l00120"></a>00120 
<a name="l00121"></a>00121   <span class="comment">/* Library inits. */</span>
<a name="l00122"></a>00122   <a class="code" href="memory_8c.html#a34f25b1ca1556d0890274a971d46af10">memory_init</a> ();
<a name="l00123"></a>00123   <a class="code" href="privs_8c.html#ac6082c5377fb94942a842809eb508682">zprivs_init</a> (&amp;test_privs);
<a name="l00124"></a>00124 
<a name="l00125"></a>00125 <span class="preprocessor">#define PRIV_STATE() \</span>
<a name="l00126"></a>00126 <span class="preprocessor">  ((test_privs.current_state() == ZPRIVS_RAISED) ? &quot;Raised&quot; : &quot;Lowered&quot;)</span>
<a name="l00127"></a>00127 <span class="preprocessor"></span>  
<a name="l00128"></a>00128   printf (<span class="stringliteral">&quot;%s\n&quot;</span>, <a class="code" href="test-privs_8c.html#addc37f39ca87f1aca0b4917ef1fad39b">PRIV_STATE</a>());
<a name="l00129"></a>00129   test_privs.<a class="code" href="structzebra__privs__t.html#a0c59dbc0ec6187b60a824ec421cc34c1">change</a>(<a class="code" href="privs_8h.html#aae029fe88e2d02bee4d46a2f458bd3e5a5395269196ee9bd07257f8b2b35c25fa">ZPRIVS_RAISE</a>);
<a name="l00130"></a>00130   
<a name="l00131"></a>00131   printf (<span class="stringliteral">&quot;%s\n&quot;</span>, <a class="code" href="test-privs_8c.html#addc37f39ca87f1aca0b4917ef1fad39b">PRIV_STATE</a>());
<a name="l00132"></a>00132   test_privs.<a class="code" href="structzebra__privs__t.html#a0c59dbc0ec6187b60a824ec421cc34c1">change</a>(<a class="code" href="privs_8h.html#aae029fe88e2d02bee4d46a2f458bd3e5a7da2c6956cf712f8adc04ff2b0f072c5">ZPRIVS_LOWER</a>);
<a name="l00133"></a>00133   
<a name="l00134"></a>00134   printf (<span class="stringliteral">&quot;%s\n&quot;</span>, <a class="code" href="test-privs_8c.html#addc37f39ca87f1aca0b4917ef1fad39b">PRIV_STATE</a>());
<a name="l00135"></a>00135   <a class="code" href="privs_8c.html#a46943152a1298eca5f10ead2743e284f">zprivs_get_ids</a> (&amp;ids);  
<a name="l00136"></a>00136   
<a name="l00137"></a>00137   <span class="comment">/* terminate privileges */</span>
<a name="l00138"></a>00138   <a class="code" href="privs_8c.html#a298744ec7593170da015843cc0e26863">zprivs_terminate</a>(&amp;test_privs);
<a name="l00139"></a>00139   
<a name="l00140"></a>00140   <span class="comment">/* but these should continue to work... */</span>
<a name="l00141"></a>00141   printf (<span class="stringliteral">&quot;%s\n&quot;</span>, <a class="code" href="test-privs_8c.html#addc37f39ca87f1aca0b4917ef1fad39b">PRIV_STATE</a>());
<a name="l00142"></a>00142   test_privs.<a class="code" href="structzebra__privs__t.html#a0c59dbc0ec6187b60a824ec421cc34c1">change</a>(<a class="code" href="privs_8h.html#aae029fe88e2d02bee4d46a2f458bd3e5a5395269196ee9bd07257f8b2b35c25fa">ZPRIVS_RAISE</a>);
<a name="l00143"></a>00143   
<a name="l00144"></a>00144   printf (<span class="stringliteral">&quot;%s\n&quot;</span>, <a class="code" href="test-privs_8c.html#addc37f39ca87f1aca0b4917ef1fad39b">PRIV_STATE</a>());
<a name="l00145"></a>00145   test_privs.<a class="code" href="structzebra__privs__t.html#a0c59dbc0ec6187b60a824ec421cc34c1">change</a>(<a class="code" href="privs_8h.html#aae029fe88e2d02bee4d46a2f458bd3e5a7da2c6956cf712f8adc04ff2b0f072c5">ZPRIVS_LOWER</a>);
<a name="l00146"></a>00146   
<a name="l00147"></a>00147   printf (<span class="stringliteral">&quot;%s\n&quot;</span>, <a class="code" href="test-privs_8c.html#addc37f39ca87f1aca0b4917ef1fad39b">PRIV_STATE</a>());
<a name="l00148"></a>00148   <a class="code" href="privs_8c.html#a46943152a1298eca5f10ead2743e284f">zprivs_get_ids</a> (&amp;ids);  
<a name="l00149"></a>00149   
<a name="l00150"></a>00150   printf (<span class="stringliteral">&quot;terminating\n&quot;</span>);
<a name="l00151"></a>00151   <span class="keywordflow">return</span> 0;
<a name="l00152"></a>00152 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="test-privs_8c.html">test-privs.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:09 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
