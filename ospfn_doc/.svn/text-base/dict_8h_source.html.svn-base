<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: isisd/dict.h Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('dict_8h.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">isisd/dict.h</div>  </div>
</div>
<div class="contents">
<a href="dict_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * Dictionary Abstract Data Type</span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 1997 Kaz Kylheku &lt;kaz@ashi.footprints.net&gt;</span>
<a name="l00004"></a>00004 <span class="comment"> *</span>
<a name="l00005"></a>00005 <span class="comment"> * Free Software License:</span>
<a name="l00006"></a>00006 <span class="comment"> *</span>
<a name="l00007"></a>00007 <span class="comment"> * All rights are reserved by the author, with the following exceptions:</span>
<a name="l00008"></a>00008 <span class="comment"> * Permission is granted to freely reproduce and distribute this software,</span>
<a name="l00009"></a>00009 <span class="comment"> * possibly in exchange for a fee, provided that this copyright notice appears</span>
<a name="l00010"></a>00010 <span class="comment"> * intact. Permission is also granted to adapt this software to produce</span>
<a name="l00011"></a>00011 <span class="comment"> * derivative works, as long as the modified versions carry this copyright</span>
<a name="l00012"></a>00012 <span class="comment"> * notice and additional notices stating that the work has been modified.</span>
<a name="l00013"></a>00013 <span class="comment"> * This source code may be translated into executable form and incorporated</span>
<a name="l00014"></a>00014 <span class="comment"> * into proprietary software; there is no requirement for such software to</span>
<a name="l00015"></a>00015 <span class="comment"> * contain a copyright notice related to this source.</span>
<a name="l00016"></a>00016 <span class="comment"> *</span>
<a name="l00017"></a>00017 <span class="comment"> * $Id: dict.h,v 1.3 2005/09/25 12:04:25 hasso Exp $</span>
<a name="l00018"></a>00018 <span class="comment"> * $Name:  $</span>
<a name="l00019"></a>00019 <span class="comment"> */</span>
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 <span class="preprocessor">#ifndef DICT_H</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span><span class="preprocessor">#define DICT_H</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span>
<a name="l00024"></a>00024 <span class="preprocessor">#include &lt;limits.h&gt;</span>
<a name="l00025"></a>00025 <span class="preprocessor">#ifdef KAZLIB_SIDEEFFECT_DEBUG</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span><span class="preprocessor">#include &quot;sfx.h&quot;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#endif</span>
<a name="l00028"></a>00028 <span class="preprocessor"></span>
<a name="l00029"></a>00029 <span class="comment">/*</span>
<a name="l00030"></a>00030 <span class="comment"> * Blurb for inclusion into C++ translation units</span>
<a name="l00031"></a>00031 <span class="comment"> */</span>
<a name="l00032"></a>00032 
<a name="l00033"></a>00033 <span class="preprocessor">#ifdef __cplusplus</span>
<a name="l00034"></a>00034 <span class="preprocessor"></span><span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> {
<a name="l00035"></a>00035 <span class="preprocessor">#endif</span>
<a name="l00036"></a>00036 <span class="preprocessor"></span>
<a name="l00037"></a><a class="code" href="dict_8h.html#a0ccdd0435aed173cb756dbb8f6ed27c5">00037</a> <span class="keyword">typedef</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="dict_8h.html#a0ccdd0435aed173cb756dbb8f6ed27c5">dictcount_t</a>;
<a name="l00038"></a><a class="code" href="dict_8h.html#a7cc0c7f4164b72cfc0c8e543d6fd3951">00038</a> <span class="preprocessor">#define DICTCOUNT_T_MAX ULONG_MAX</span>
<a name="l00039"></a>00039 <span class="preprocessor"></span>
<a name="l00040"></a>00040 <span class="comment">/*</span>
<a name="l00041"></a>00041 <span class="comment"> * The dictionary is implemented as a red-black tree</span>
<a name="l00042"></a>00042 <span class="comment"> */</span>
<a name="l00043"></a>00043 
<a name="l00044"></a><a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">00044</a> <span class="keyword">typedef</span> <span class="keyword">enum</span> { <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca1ac01fe3096a0eada1368369e89de2e8">dnode_red</a>, <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762ca506e74259d639c94ef0439022aa19cb5">dnode_black</a> } <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762c">dnode_color_t</a>;
<a name="l00045"></a>00045 
<a name="l00046"></a><a class="code" href="structdnode__t.html">00046</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structdnode__t.html">dnode_t</a> {
<a name="l00047"></a>00047 <span class="preprocessor">    #if defined(DICT_IMPLEMENTATION) || !defined(KAZLIB_OPAQUE_DEBUG)</span>
<a name="l00048"></a><a class="code" href="structdnode__t.html#a9da5183afd0e4449e118f531fb4dbeec">00048</a> <span class="preprocessor"></span>    <span class="keyword">struct </span><a class="code" href="structdnode__t.html">dnode_t</a> *<a class="code" href="structdnode__t.html#a9da5183afd0e4449e118f531fb4dbeec">dict_left</a>;
<a name="l00049"></a><a class="code" href="structdnode__t.html#a308e3f17547b41fe34544e2651ed547d">00049</a>     <span class="keyword">struct </span><a class="code" href="structdnode__t.html">dnode_t</a> *<a class="code" href="structdnode__t.html#a308e3f17547b41fe34544e2651ed547d">dict_right</a>;
<a name="l00050"></a><a class="code" href="structdnode__t.html#ab306b9f1b527b6462222e2eeee87eebd">00050</a>     <span class="keyword">struct </span><a class="code" href="structdnode__t.html">dnode_t</a> *<a class="code" href="structdnode__t.html#ab306b9f1b527b6462222e2eeee87eebd">dict_parent</a>;
<a name="l00051"></a><a class="code" href="structdnode__t.html#aa8a9c7329ab041303d44786f9648343c">00051</a>     <a class="code" href="dict_8h.html#ac5e3d0f627eeb63b629c3e8af8c9762c">dnode_color_t</a> <a class="code" href="structdnode__t.html#aa8a9c7329ab041303d44786f9648343c">dict_color</a>;
<a name="l00052"></a><a class="code" href="structdnode__t.html#a03b918a57ed219d54cff5cbc313f11f0">00052</a>     <span class="keyword">const</span> <span class="keywordtype">void</span> *<a class="code" href="structdnode__t.html#a03b918a57ed219d54cff5cbc313f11f0">dict_key</a>;
<a name="l00053"></a><a class="code" href="structdnode__t.html#afe56267c05f044b14097c38595f4a1a4">00053</a>     <span class="keywordtype">void</span> *<a class="code" href="structdnode__t.html#afe56267c05f044b14097c38595f4a1a4">dict_data</a>;
<a name="l00054"></a>00054 <span class="preprocessor">    #else</span>
<a name="l00055"></a>00055 <span class="preprocessor"></span>    <span class="keywordtype">int</span> dict_dummy;
<a name="l00056"></a>00056 <span class="preprocessor">    #endif</span>
<a name="l00057"></a>00057 <span class="preprocessor"></span>} <a class="code" href="dict_8h.html#ade0d7b1d47e072a8c3095805635c9171">dnode_t</a>;
<a name="l00058"></a>00058 
<a name="l00059"></a><a class="code" href="dict_8h.html#a92a0ce54764499eee8e3584a7b8795d9">00059</a> <span class="keyword">typedef</span> int (*<a class="code" href="dict_8h.html#a92a0ce54764499eee8e3584a7b8795d9">dict_comp_t</a>)(<span class="keyword">const</span> <span class="keywordtype">void</span> *, <span class="keyword">const</span> <span class="keywordtype">void</span> *);
<a name="l00060"></a><a class="code" href="dict_8h.html#a9622bc12328ca0820a2b75ddd368e742">00060</a> <span class="keyword">typedef</span> <a class="code" href="structdnode__t.html">dnode_t</a> *(*dnode_alloc_t)(<span class="keywordtype">void</span> *);
<a name="l00061"></a><a class="code" href="dict_8h.html#aab7503760ea3aa9d811d19c8acd425c8">00061</a> <span class="keyword">typedef</span> void (*<a class="code" href="dict_8h.html#aab7503760ea3aa9d811d19c8acd425c8">dnode_free_t</a>)(<a class="code" href="structdnode__t.html">dnode_t</a> *, <span class="keywordtype">void</span> *);
<a name="l00062"></a>00062 
<a name="l00063"></a><a class="code" href="structdict__t.html">00063</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structdict__t.html">dict_t</a> {
<a name="l00064"></a>00064 <span class="preprocessor">    #if defined(DICT_IMPLEMENTATION) || !defined(KAZLIB_OPAQUE_DEBUG)</span>
<a name="l00065"></a><a class="code" href="structdict__t.html#a07ba203d490cfb5cf99629aad9407078">00065</a> <span class="preprocessor"></span>    dnode_t <a class="code" href="structdict__t.html#a07ba203d490cfb5cf99629aad9407078">dict_nilnode</a>;
<a name="l00066"></a><a class="code" href="structdict__t.html#a488591945754dac1b010461dfc4ff75b">00066</a>     dictcount_t <a class="code" href="structdict__t.html#a488591945754dac1b010461dfc4ff75b">dict_nodecount</a>;
<a name="l00067"></a><a class="code" href="structdict__t.html#aafbfee83809a48a15a8a3deb94f24c23">00067</a>     dictcount_t <a class="code" href="structdict__t.html#aafbfee83809a48a15a8a3deb94f24c23">dict_maxcount</a>;
<a name="l00068"></a><a class="code" href="structdict__t.html#a31b972585d0c0397020f066c6cd0ef3f">00068</a>     <a class="code" href="dict_8h.html#a92a0ce54764499eee8e3584a7b8795d9">dict_comp_t</a> <a class="code" href="structdict__t.html#a31b972585d0c0397020f066c6cd0ef3f">dict_compare</a>;
<a name="l00069"></a><a class="code" href="structdict__t.html#aa0c0c185d385af9fbb45e393aa046e44">00069</a>     <a class="code" href="dict_8h.html#a9622bc12328ca0820a2b75ddd368e742">dnode_alloc_t</a> <a class="code" href="structdict__t.html#aa0c0c185d385af9fbb45e393aa046e44">dict_allocnode</a>;
<a name="l00070"></a><a class="code" href="structdict__t.html#adc1b0d5c9a3a2f106ed3940409eeca41">00070</a>     <a class="code" href="dict_8h.html#aab7503760ea3aa9d811d19c8acd425c8">dnode_free_t</a> <a class="code" href="structdict__t.html#adc1b0d5c9a3a2f106ed3940409eeca41">dict_freenode</a>;
<a name="l00071"></a><a class="code" href="structdict__t.html#ad7138aae95cb86bfa5bb772a6a8e59f4">00071</a>     <span class="keywordtype">void</span> *<a class="code" href="structdict__t.html#ad7138aae95cb86bfa5bb772a6a8e59f4">dict_context</a>;
<a name="l00072"></a><a class="code" href="structdict__t.html#ac34c5adf3b26fdd7e6efe3273fd033ad">00072</a>     <span class="keywordtype">int</span> <a class="code" href="structdict__t.html#ac34c5adf3b26fdd7e6efe3273fd033ad">dict_dupes</a>;
<a name="l00073"></a>00073 <span class="preprocessor">    #else</span>
<a name="l00074"></a>00074 <span class="preprocessor"></span>    <span class="keywordtype">int</span> dict_dummmy;
<a name="l00075"></a>00075 <span class="preprocessor">    #endif</span>
<a name="l00076"></a>00076 <span class="preprocessor"></span>} <a class="code" href="dict_8h.html#aa08059f3860bf4f867ba4275e9c6268a">dict_t</a>;
<a name="l00077"></a>00077 
<a name="l00078"></a><a class="code" href="dict_8h.html#af6c238eee1552793065cbec20b1aafcb">00078</a> <span class="keyword">typedef</span> void (*<a class="code" href="dict_8h.html#af6c238eee1552793065cbec20b1aafcb">dnode_process_t</a>)(<a class="code" href="structdict__t.html">dict_t</a> *, dnode_t *, <span class="keywordtype">void</span> *);
<a name="l00079"></a>00079 
<a name="l00080"></a><a class="code" href="structdict__load__t.html">00080</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structdict__load__t.html">dict_load_t</a> {
<a name="l00081"></a>00081 <span class="preprocessor">    #if defined(DICT_IMPLEMENTATION) || !defined(KAZLIB_OPAQUE_DEBUG)</span>
<a name="l00082"></a><a class="code" href="structdict__load__t.html#a476fdf7ead0d03fd2893129c81b458e8">00082</a> <span class="preprocessor"></span>    dict_t *<a class="code" href="structdict__load__t.html#a476fdf7ead0d03fd2893129c81b458e8">dict_dictptr</a>;
<a name="l00083"></a><a class="code" href="structdict__load__t.html#a48f16faf4d4f79aa739f75c2d2e2d550">00083</a>     dnode_t <a class="code" href="structdict__load__t.html#a48f16faf4d4f79aa739f75c2d2e2d550">dict_nilnode</a>;
<a name="l00084"></a>00084 <span class="preprocessor">    #else</span>
<a name="l00085"></a>00085 <span class="preprocessor"></span>    <span class="keywordtype">int</span> dict_dummmy;
<a name="l00086"></a>00086 <span class="preprocessor">    #endif</span>
<a name="l00087"></a>00087 <span class="preprocessor"></span>} <a class="code" href="dict_8h.html#a0b41502f897c84a37d85dae2ae949474">dict_load_t</a>;
<a name="l00088"></a>00088 
<a name="l00089"></a>00089 <span class="keyword">extern</span> dict_t *<a class="code" href="dict_8c.html#a1a1783c8987d21d1d1078f80cb614679">dict_create</a>(dictcount_t, <a class="code" href="dict_8h.html#a92a0ce54764499eee8e3584a7b8795d9">dict_comp_t</a>);
<a name="l00090"></a>00090 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="dict_8c.html#a5c2f075814bbc9660b670547a991ac33">dict_set_allocator</a>(dict_t *, <a class="code" href="dict_8h.html#a9622bc12328ca0820a2b75ddd368e742">dnode_alloc_t</a>, <a class="code" href="dict_8h.html#aab7503760ea3aa9d811d19c8acd425c8">dnode_free_t</a>, <span class="keywordtype">void</span> *);
<a name="l00091"></a>00091 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="dict_8c.html#afa278bdf2a5b96347df1013d7c61c60c">dict_destroy</a>(dict_t *);
<a name="l00092"></a>00092 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="dict_8c.html#abbb87db71ff5da8f7881d347dba70e59">dict_free_nodes</a>(dict_t *);
<a name="l00093"></a>00093 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="dict_8c.html#ab1d4e786dee93b4dc601d2f339ff81fd">dict_free</a>(dict_t *);
<a name="l00094"></a>00094 <span class="keyword">extern</span> dict_t *<a class="code" href="dict_8c.html#adce7f1ed114712b1ec095cfa86988053">dict_init</a>(dict_t *, dictcount_t, <a class="code" href="dict_8h.html#a92a0ce54764499eee8e3584a7b8795d9">dict_comp_t</a>);
<a name="l00095"></a>00095 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="dict_8c.html#a6ceb0e0e60d65f9de7645223a34e499e">dict_init_like</a>(dict_t *, <span class="keyword">const</span> dict_t *);
<a name="l00096"></a>00096 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="dict_8c.html#a8fd61b9b13f52b4d1e0d34a8f2178f13">dict_verify</a>(dict_t *);
<a name="l00097"></a>00097 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="dict_8c.html#a39327af6a2025edf54bd553dfaca6eed">dict_similar</a>(<span class="keyword">const</span> dict_t *, <span class="keyword">const</span> dict_t *);
<a name="l00098"></a>00098 <span class="keyword">extern</span> dnode_t *<a class="code" href="dict_8c.html#a9b4c0968674a4ff436bb8180aa56e522">dict_lookup</a>(dict_t *, <span class="keyword">const</span> <span class="keywordtype">void</span> *);
<a name="l00099"></a>00099 <span class="keyword">extern</span> dnode_t *<a class="code" href="dict_8c.html#aaee9b7ed8b80f9f2dfab916a22c173ee">dict_lower_bound</a>(dict_t *, <span class="keyword">const</span> <span class="keywordtype">void</span> *);
<a name="l00100"></a>00100 <span class="keyword">extern</span> dnode_t *<a class="code" href="dict_8c.html#a6d6f2d4cc66e3859fe47d39b82cfd7ee">dict_upper_bound</a>(dict_t *, <span class="keyword">const</span> <span class="keywordtype">void</span> *);
<a name="l00101"></a>00101 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="dict_8c.html#a761d921fc86ec6bfbb8f77f15a48662f">dict_insert</a>(dict_t *, dnode_t *, <span class="keyword">const</span> <span class="keywordtype">void</span> *);
<a name="l00102"></a>00102 <span class="keyword">extern</span> dnode_t *<a class="code" href="dict_8c.html#ad51f28cd1829e1fd66caf58f553d794e">dict_delete</a>(dict_t *, dnode_t *);
<a name="l00103"></a>00103 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="dict_8c.html#a914a77195b15984573e3dac49f38e5f2">dict_alloc_insert</a>(dict_t *, <span class="keyword">const</span> <span class="keywordtype">void</span> *, <span class="keywordtype">void</span> *);
<a name="l00104"></a>00104 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="dict_8c.html#ad820577e4fba81f761665f16356823ab">dict_delete_free</a>(dict_t *, dnode_t *);
<a name="l00105"></a>00105 <span class="keyword">extern</span> dnode_t *<a class="code" href="dict_8c.html#a2b439ffb63f9b3089d0306ec3b26672f">dict_first</a>(dict_t *);
<a name="l00106"></a>00106 <span class="keyword">extern</span> dnode_t *<a class="code" href="dict_8c.html#a4d069737fa8ee7fb7b8d775df86e9492">dict_last</a>(dict_t *);
<a name="l00107"></a>00107 <span class="keyword">extern</span> dnode_t *<a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a>(dict_t *, dnode_t *);
<a name="l00108"></a>00108 <span class="keyword">extern</span> dnode_t *<a class="code" href="dict_8c.html#a2404cd70f965a01f782b3bf667924a92">dict_prev</a>(dict_t *, dnode_t *);
<a name="l00109"></a>00109 <span class="keyword">extern</span> dictcount_t <a class="code" href="dict_8h.html#a392c768130a1c7ed5a6c2f299cd0d2e8">dict_count</a>(dict_t *);
<a name="l00110"></a>00110 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="dict_8h.html#a71f54a3dc27888df31631db89e956195">dict_isempty</a>(dict_t *);
<a name="l00111"></a>00111 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="dict_8h.html#a8ee82117d61f5699b4a4bcd8dbc1623b">dict_isfull</a>(dict_t *);
<a name="l00112"></a>00112 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="dict_8c.html#a41876a53021479360b7fcebf009c1bbd">dict_contains</a>(dict_t *, dnode_t *);
<a name="l00113"></a>00113 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="dict_8c.html#a78b4a23fb87446171d7c816461d1ab62">dict_allow_dupes</a>(dict_t *);
<a name="l00114"></a>00114 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="dict_8c.html#ae38201fa011e3412fd8ae3f6e935c5a2">dnode_is_in_a_dict</a>(dnode_t *);
<a name="l00115"></a>00115 <span class="keyword">extern</span> dnode_t *<a class="code" href="dict_8c.html#a26d3d46b0aafb0103a6e4f169475f4c1">dnode_create</a>(<span class="keywordtype">void</span> *);
<a name="l00116"></a>00116 <span class="keyword">extern</span> dnode_t *<a class="code" href="dict_8c.html#a7d2886945deceaa6b594007adc771ec0">dnode_init</a>(dnode_t *, <span class="keywordtype">void</span> *);
<a name="l00117"></a>00117 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="dict_8c.html#ae494e63c2ce90dee35c2abdd940ec8cf">dnode_destroy</a>(dnode_t *);
<a name="l00118"></a>00118 <span class="keyword">extern</span> <span class="keywordtype">void</span> *<a class="code" href="dict_8h.html#a17fccc85aae3874de7152f103d5945bc">dnode_get</a>(dnode_t *);
<a name="l00119"></a>00119 <span class="keyword">extern</span> <span class="keyword">const</span> <span class="keywordtype">void</span> *<a class="code" href="dict_8h.html#a6f2633dde474b0288d6a737651f69a51">dnode_getkey</a>(dnode_t *);
<a name="l00120"></a>00120 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="dict_8h.html#abdc56a1f271b88b51d1da5c6f0f38459">dnode_put</a>(dnode_t *, <span class="keywordtype">void</span> *);
<a name="l00121"></a>00121 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="dict_8c.html#a2b3c224bd5d6a4a8c74c09fa14ca0875">dict_process</a>(dict_t *, <span class="keywordtype">void</span> *, <a class="code" href="dict_8h.html#af6c238eee1552793065cbec20b1aafcb">dnode_process_t</a>);
<a name="l00122"></a>00122 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="dict_8c.html#a28bbce4e85c8b66bab512934c30da705">dict_load_begin</a>(<a class="code" href="structdict__load__t.html">dict_load_t</a> *, dict_t *);
<a name="l00123"></a>00123 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="dict_8c.html#a3721d6ba3ea6a36f2c8b49b4e72fe8f7">dict_load_next</a>(<a class="code" href="structdict__load__t.html">dict_load_t</a> *, dnode_t *, <span class="keyword">const</span> <span class="keywordtype">void</span> *);
<a name="l00124"></a>00124 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="dict_8c.html#a5c70e94507e52999ef2c8a2ffce9a917">dict_load_end</a>(<a class="code" href="structdict__load__t.html">dict_load_t</a> *);
<a name="l00125"></a>00125 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="dict_8c.html#ab46a82871283a72d456c76151cd46b96">dict_merge</a>(dict_t *, dict_t *);
<a name="l00126"></a>00126 
<a name="l00127"></a>00127 <span class="preprocessor">#if defined(DICT_IMPLEMENTATION) || !defined(KAZLIB_OPAQUE_DEBUG)</span>
<a name="l00128"></a>00128 <span class="preprocessor"></span><span class="preprocessor">#ifdef KAZLIB_SIDEEFFECT_DEBUG</span>
<a name="l00129"></a>00129 <span class="preprocessor"></span><span class="preprocessor">#define dict_isfull(D) (SFX_CHECK(D)-&gt;dict_nodecount == (D)-&gt;dict_maxcount)</span>
<a name="l00130"></a>00130 <span class="preprocessor"></span><span class="preprocessor">#else</span>
<a name="l00131"></a><a class="code" href="dict_8h.html#a8ee82117d61f5699b4a4bcd8dbc1623b">00131</a> <span class="preprocessor"></span><span class="preprocessor">#define dict_isfull(D) ((D)-&gt;dict_nodecount == (D)-&gt;dict_maxcount)</span>
<a name="l00132"></a>00132 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00133"></a><a class="code" href="dict_8h.html#a392c768130a1c7ed5a6c2f299cd0d2e8">00133</a> <span class="preprocessor"></span><span class="preprocessor">#define dict_count(D) ((D)-&gt;dict_nodecount)</span>
<a name="l00134"></a><a class="code" href="dict_8h.html#a71f54a3dc27888df31631db89e956195">00134</a> <span class="preprocessor"></span><span class="preprocessor">#define dict_isempty(D) ((D)-&gt;dict_nodecount == 0)</span>
<a name="l00135"></a><a class="code" href="dict_8h.html#a17fccc85aae3874de7152f103d5945bc">00135</a> <span class="preprocessor"></span><span class="preprocessor">#define dnode_get(N) ((N)-&gt;dict_data)</span>
<a name="l00136"></a><a class="code" href="dict_8h.html#a6f2633dde474b0288d6a737651f69a51">00136</a> <span class="preprocessor"></span><span class="preprocessor">#define dnode_getkey(N) ((N)-&gt;dict_key)</span>
<a name="l00137"></a><a class="code" href="dict_8h.html#abdc56a1f271b88b51d1da5c6f0f38459">00137</a> <span class="preprocessor"></span><span class="preprocessor">#define dnode_put(N, X) ((N)-&gt;dict_data = (X))</span>
<a name="l00138"></a>00138 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00139"></a>00139 <span class="preprocessor"></span>
<a name="l00140"></a>00140 <span class="preprocessor">#ifdef __cplusplus</span>
<a name="l00141"></a>00141 <span class="preprocessor"></span>}
<a name="l00142"></a>00142 <span class="preprocessor">#endif</span>
<a name="l00143"></a>00143 <span class="preprocessor"></span>
<a name="l00144"></a>00144 <span class="preprocessor">#endif</span>
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="dict_8h.html">dict.h</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:04 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
