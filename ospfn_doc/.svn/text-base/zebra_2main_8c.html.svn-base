<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: zebra/main.c File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('zebra_2main_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">zebra/main.c File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="zebra_8h_source.html">zebra.h</a>&gt;</code><br/>
<code>#include &lt;<a class="el" href="version_8h_source.html">lib/version.h</a>&gt;</code><br/>
<code>#include &quot;<a class="el" href="getopt_8h_source.html">getopt.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="command_8h_source.html">command.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="thread_8h_source.html">thread.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="filter_8h_source.html">filter.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="memory_8h_source.html">memory.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="prefix_8h_source.html">prefix.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="log_8h_source.html">log.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="plist_8h_source.html">plist.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="privs_8h_source.html">privs.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="sigevent_8h_source.html">sigevent.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="rib_8h_source.html">zebra/rib.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="zserv_8h_source.html">zebra/zserv.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="debug_8h_source.html">zebra/debug.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="router-id_8h_source.html">zebra/router-id.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="irdp_8h_source.html">zebra/irdp.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="rtadv_8h_source.html">zebra/rtadv.h</a>&quot;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for main.c:</div>
<div class="dyncontent">
<div class="center"><img src="zebra_2main_8c__incl.png" border="0" usemap="#zebra_2main_8c" alt=""/></div>
<map name="zebra_2main_8c" id="zebra_2main_8c">
<area shape="rect" id="node3" href="zebra_8h.html" title="zebra.h" alt="" coords="1412,155,1479,181"/><area shape="rect" id="node61" href="version_8h.html" title="lib/version.h" alt="" coords="1879,80,1973,107"/><area shape="rect" id="node63" href="getopt_8h.html" title="getopt.h" alt="" coords="1999,80,2073,107"/><area shape="rect" id="node65" href="command_8h.html" title="command.h" alt="" coords="1237,80,1328,107"/><area shape="rect" id="node71" href="thread_8h.html" title="thread.h" alt="" coords="5,229,77,256"/><area shape="rect" id="node73" href="log_8h.html" title="log.h" alt="" coords="102,229,153,256"/><area shape="rect" id="node79" href="filter_8h.html" title="filter.h" alt="" coords="2098,80,2157,107"/><area shape="rect" id="node81" href="memory_8h.html" title="memory.h" alt="" coords="1553,155,1636,181"/><area shape="rect" id="node83" href="prefix_8h.html" title="prefix.h" alt="" coords="2971,229,3039,256"/><area shape="rect" id="node86" href="plist_8h.html" title="plist.h" alt="" coords="2183,80,2241,107"/><area shape="rect" id="node88" href="privs_8h.html" title="privs.h" alt="" coords="2266,80,2328,107"/><area shape="rect" id="node90" href="sigevent_8h.html" title="sigevent.h" alt="" coords="389,155,475,181"/><area shape="rect" id="node93" href="rib_8h.html" title="zebra/rib.h" alt="" coords="1799,155,1883,181"/><area shape="rect" id="node96" href="zserv_8h.html" title="zebra/zserv.h" alt="" coords="1703,80,1804,107"/><area shape="rect" id="node99" href="debug_8h.html" title="zebra/debug.h" alt="" coords="2353,80,2460,107"/><area shape="rect" id="node101" href="router-id_8h.html" title="zebra/router&#45;id.h" alt="" coords="1455,80,1576,107"/><area shape="rect" id="node106" href="irdp_8h.html" title="zebra/irdp.h" alt="" coords="1121,80,1212,107"/><area shape="rect" id="node109" href="rtadv_8h.html" title="zebra/rtadv.h" alt="" coords="997,80,1096,107"/><area shape="rect" id="node57" href="zassert_8h.html" title="zassert.h" alt="" coords="2165,229,2243,256"/><area shape="rect" id="node59" href="str_8h.html" title="str.h" alt="" coords="2267,229,2316,256"/><area shape="rect" id="node67" href="vector_8h.html" title="vector.h" alt="" coords="1252,155,1324,181"/><area shape="rect" id="node69" href="vty_8h.html" title="vty.h" alt="" coords="1021,155,1072,181"/><area shape="rect" id="node76" href="route__types_8h.html" title="lib/route_types.h" alt="" coords="1103,155,1227,181"/></map>
</div>
</div>
<p><a href="zebra_2main_8c_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra_2main_8c.html#ab24f62159230cf265fc4d7ddc4c91872">usage</a> (char *<a class="el" href="vtysh__main_8c.html#ab9e1449fd00c98428516f0b41eddcb10">progname</a>, int status)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra_2main_8c.html#a2dafd463dfb92d5f5accf052b8e3f285">sighup</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra_2main_8c.html#acc1594c0e273f7b9134404951c7ef595">sigint</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra_2main_8c.html#a39fc0ccb908a14d8ad601bcbd126cfb3">sigusr1</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra_2main_8c.html#a3c04138a5bfe5d72780bb7e82a18e627">main</a> (int argc, char **argv)</td></tr>
<tr><td colspan="2"><h2><a name="var-members"></a>
Variables</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structzebra__t.html">zebra_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra_2main_8c.html#a5a844f9c9c891ff5dfe28610da9b56ce">zebrad</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pid_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra_2main_8c.html#ae0d46a978d5cd6707411f276ad869b9c">pid</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structthread__master.html">thread_master</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra_2main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra_2main_8c.html#ae5b2354a6db536acb261c6fd90cd2f31">retain_mode</a> = 0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra_2main_8c.html#a80b98edd9a16dda0ab26a9db20893206">keep_kernel_mode</a> = 0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structoption.html">option</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra_2main_8c.html#a94965649155359a4c4eb047af782bf22">longopts</a> []</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="privs_8h.html#acadb26c3fc89554cf67e4bae79e13058">zebra_capabilities_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra_2main_8c.html#a4565341c013a461a4a862195568418f9">_caps_p</a> []</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structzebra__privs__t.html">zebra_privs_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra_2main_8c.html#a10659da9c59441877a609c3cd916f3cf">zserv_privs</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra_2main_8c.html#aee27bf99050b66912b35ae16e5b06c81">config_default</a> [] = SYSCONFDIR DEFAULT_CONFIG_FILE</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra_2main_8c.html#ae59ebb5e7fab6c00fbfe20d7e907c841">pid_file</a> = PATH_ZEBRA_PID</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structquagga__signal__t.html">quagga_signal_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zebra_2main_8c.html#ae3efeddef3d0cb78982d3ee6f7fe2885">zebra_signals</a> []</td></tr>
</table>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a3c04138a5bfe5d72780bb7e82a18e627"></a><!-- doxytag: member="main.c::main" ref="a3c04138a5bfe5d72780bb7e82a18e627" args="(int argc, char **argv)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int main </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char **&#160;</td>
          <td class="paramname"><em>argv</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra_2main_8c_source.html#l00206">206</a> of file <a class="el" href="zebra_2main_8c_source.html">main.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">char</span> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
  <span class="keywordtype">char</span> *<a class="code" href="bgp__main_8c.html#a06052ca37fdcbab4efc7c0ce0be0a7fb">vty_addr</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keywordtype">int</span> <a class="code" href="bgp__main_8c.html#a29806e6619da60097189752e72067df7">vty_port</a> = <a class="code" href="zserv_8h.html#a3371e57891ae8a4ccfc835632f571190">ZEBRA_VTY_PORT</a>;
  <span class="keywordtype">int</span> dryrun = 0;
  <span class="keywordtype">int</span> batch_mode = 0;
  <span class="keywordtype">int</span> <a class="code" href="isis__main_8c.html#a4255d3efd1474d8e9d267e4b1559c1f9">daemon_mode</a> = 0;
  <span class="keywordtype">char</span> *<a class="code" href="bgp__main_8c.html#ac269be8b91ae4b24df48de5d8ad7e7a7">config_file</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keywordtype">char</span> *<a class="code" href="isis__main_8c.html#ab9e1449fd00c98428516f0b41eddcb10">progname</a>;
  <span class="keyword">struct </span><a class="code" href="structthread.html">thread</a> <a class="code" href="structthread.html">thread</a>;

  <span class="comment">/* Set umask before anything for security */</span>
  umask (0027);

  <span class="comment">/* preserve my name */</span>
  progname = ((p = strrchr (argv[0], <span class="charliteral">&#39;/&#39;</span>)) ? ++p : argv[0]);

  <a class="code" href="log_8c.html#a69cba84b9cc9c438ad5f5b1379b702b5">zlog_default</a> = <a class="code" href="log_8c.html#a0e29a4e0e59d1fdbff2aab49e067b501">openzlog</a> (progname, <a class="code" href="log_8h.html#a7191b9759b28b288102a2c6dd41e20a3a3cfda3df6b6a354d7d312873dcac556c">ZLOG_ZEBRA</a>,
               LOG_CONS|LOG_NDELAY|LOG_PID, LOG_DAEMON);

  <span class="keywordflow">while</span> (1) 
    {
      <span class="keywordtype">int</span> opt;
  
<span class="preprocessor">#ifdef HAVE_NETLINK  </span>
<span class="preprocessor"></span>      opt = <a class="code" href="getopt_8h.html#a8616b8a74ae6c01a7ad95ad2876226ec">getopt_long</a> (argc, argv, <span class="stringliteral">&quot;bdkf:i:hA:P:ru:g:vs:C&quot;</span>, <a class="code" href="bgp__main_8c.html#a94965649155359a4c4eb047af782bf22">longopts</a>, 0);
<span class="preprocessor">#else</span>
<span class="preprocessor"></span>      opt = <a class="code" href="getopt_8h.html#a8616b8a74ae6c01a7ad95ad2876226ec">getopt_long</a> (argc, argv, <span class="stringliteral">&quot;bdkf:i:hA:P:ru:g:vC&quot;</span>, <a class="code" href="bgp__main_8c.html#a94965649155359a4c4eb047af782bf22">longopts</a>, 0);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_NETLINK */</span>

      <span class="keywordflow">if</span> (opt == EOF)
    <span class="keywordflow">break</span>;

      <span class="keywordflow">switch</span> (opt) 
    {
    <span class="keywordflow">case</span> 0:
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <span class="charliteral">&#39;b&#39;</span>:
      batch_mode = 1;
    <span class="keywordflow">case</span> <span class="charliteral">&#39;d&#39;</span>:
      daemon_mode = 1;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <span class="charliteral">&#39;k&#39;</span>:
      <a class="code" href="zebra_2main_8c.html#a80b98edd9a16dda0ab26a9db20893206">keep_kernel_mode</a> = 1;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <span class="charliteral">&#39;C&#39;</span>:
      dryrun = 1;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <span class="charliteral">&#39;f&#39;</span>:
      config_file = <a class="code" href="getopt_8c.html#adb50a0eab9fed92fc3bfc7dfa4f2c410">optarg</a>;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <span class="charliteral">&#39;A&#39;</span>:
      vty_addr = <a class="code" href="getopt_8c.html#adb50a0eab9fed92fc3bfc7dfa4f2c410">optarg</a>;
      <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <span class="charliteral">&#39;i&#39;</span>:
          <a class="code" href="bgp__main_8c.html#ae59ebb5e7fab6c00fbfe20d7e907c841">pid_file</a> = <a class="code" href="getopt_8c.html#adb50a0eab9fed92fc3bfc7dfa4f2c410">optarg</a>;
          <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <span class="charliteral">&#39;P&#39;</span>:
      <span class="comment">/* Deal with atoi() returning 0 on failure, and zebra not</span>
<span class="comment">         listening on zebra port... */</span>
      <span class="keywordflow">if</span> (strcmp(<a class="code" href="getopt_8c.html#adb50a0eab9fed92fc3bfc7dfa4f2c410">optarg</a>, <span class="stringliteral">&quot;0&quot;</span>) == 0) 
        {
          vty_port = 0;
          <span class="keywordflow">break</span>;
        } 
      vty_port = atoi (<a class="code" href="getopt_8c.html#adb50a0eab9fed92fc3bfc7dfa4f2c410">optarg</a>);
      <span class="keywordflow">if</span> (vty_port &lt;= 0 || vty_port &gt; 0xffff)
        vty_port = <a class="code" href="zserv_8h.html#a3371e57891ae8a4ccfc835632f571190">ZEBRA_VTY_PORT</a>;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <span class="charliteral">&#39;r&#39;</span>:
      <a class="code" href="bgp__main_8c.html#ae5b2354a6db536acb261c6fd90cd2f31">retain_mode</a> = 1;
      <span class="keywordflow">break</span>;
<span class="preprocessor">#ifdef HAVE_NETLINK</span>
<span class="preprocessor"></span>    <span class="keywordflow">case</span> <span class="charliteral">&#39;s&#39;</span>:
      <a class="code" href="rt__netlink_8c.html#aa4fe0a028fde5c45c4f236d47d591a80">nl_rcvbufsize</a> = atoi (<a class="code" href="getopt_8c.html#adb50a0eab9fed92fc3bfc7dfa4f2c410">optarg</a>);
      <span class="keywordflow">break</span>;
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_NETLINK */</span>
    <span class="keywordflow">case</span> <span class="charliteral">&#39;u&#39;</span>:
      <a class="code" href="if__ioctl__solaris_8c.html#a10659da9c59441877a609c3cd916f3cf">zserv_privs</a>.<a class="code" href="structzebra__privs__t.html#a62e6101b1d966f24692ae650a331fb95">user</a> = <a class="code" href="getopt_8c.html#adb50a0eab9fed92fc3bfc7dfa4f2c410">optarg</a>;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <span class="charliteral">&#39;g&#39;</span>:
      <a class="code" href="if__ioctl__solaris_8c.html#a10659da9c59441877a609c3cd916f3cf">zserv_privs</a>.<a class="code" href="structzebra__privs__t.html#a5b11e63c267759ec4dd64022e6046b80">group</a> = <a class="code" href="getopt_8c.html#adb50a0eab9fed92fc3bfc7dfa4f2c410">optarg</a>;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <span class="charliteral">&#39;v&#39;</span>:
      <a class="code" href="command_8c.html#ac97b1789d0f9ace8698a54a548e344e2">print_version</a> (progname);
      <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a> (0);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <span class="charliteral">&#39;h&#39;</span>:
      <a class="code" href="bgp__main_8c.html#ab24f62159230cf265fc4d7ddc4c91872">usage</a> (progname, 0);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">default</span>:
      <a class="code" href="bgp__main_8c.html#ab24f62159230cf265fc4d7ddc4c91872">usage</a> (progname, 1);
      <span class="keywordflow">break</span>;
    }
    }

  <span class="comment">/* Make master thread emulator. */</span>
  <a class="code" href="connected_8c.html#a5a844f9c9c891ff5dfe28610da9b56ce">zebrad</a>.<a class="code" href="structzebra__t.html#a9755f929805f6555c6f86d085309f0e2">master</a> = <a class="code" href="thread_8c.html#a6d9de673f4874d0c6b7f6a84b2e0e9cf">thread_master_create</a> ();

  <span class="comment">/* privs initialise */</span>
  <a class="code" href="privs_8c.html#ac6082c5377fb94942a842809eb508682">zprivs_init</a> (&amp;<a class="code" href="if__ioctl__solaris_8c.html#a10659da9c59441877a609c3cd916f3cf">zserv_privs</a>);

  <span class="comment">/* Vty related initialize. */</span>
  <a class="code" href="sigevent_8c.html#a715b48c4a10aeaff0a38a822e6888c3e">signal_init</a> (<a class="code" href="connected_8c.html#a5a844f9c9c891ff5dfe28610da9b56ce">zebrad</a>.<a class="code" href="structzebra__t.html#a9755f929805f6555c6f86d085309f0e2">master</a>, <a class="code" href="sigevent_8h.html#a4728c7c7b9bd1ad2a4d36727afb35022">Q_SIGC</a>(<a class="code" href="zebra_2main_8c.html#ae3efeddef3d0cb78982d3ee6f7fe2885">zebra_signals</a>), <a class="code" href="zebra_2main_8c.html#ae3efeddef3d0cb78982d3ee6f7fe2885">zebra_signals</a>);
  <a class="code" href="command_8h.html#ac8aa19764b709737963069a30334afb5">cmd_init</a> (1);
  <a class="code" href="vty_8c.html#a4e3540690dccdae165218c9597b311eb">vty_init</a> (<a class="code" href="connected_8c.html#a5a844f9c9c891ff5dfe28610da9b56ce">zebrad</a>.<a class="code" href="structzebra__t.html#a9755f929805f6555c6f86d085309f0e2">master</a>);
  <a class="code" href="memory_8c.html#a34f25b1ca1556d0890274a971d46af10">memory_init</a> ();

  <span class="comment">/* Zebra related initialize. */</span>
  <a class="code" href="ripng__zebra_8c.html#a36cf186903c5fc5362f57be64955055a">zebra_init</a> ();
  <a class="code" href="rib_8h.html#a986c298135d292e5c66e02a12a9419ae">rib_init</a> ();
  <a class="code" href="interface_8c.html#adc31855ecd2f1232bed1d80c311908a3">zebra_if_init</a> ();
  <a class="code" href="debug_8c.html#a96fd9e484f9537e8439035fcf612f5d8">zebra_debug_init</a> ();
  <a class="code" href="router-id_8c.html#a31b1900872320bff2a198b6439c6006d">router_id_init</a>();
  <a class="code" href="zebra__vty_8c.html#a42a725857789b4afa5b440ede16ae9bb">zebra_vty_init</a> ();
  <a class="code" href="filter_8c.html#a7794dbb70ed7bbd7a248853d572fa38c">access_list_init</a> ();
  <a class="code" href="plist_8c.html#a198373358b94c257a9a0cb6d02cf8eac">prefix_list_init</a> ();
  <a class="code" href="rtadv_8c.html#a7f913597228a506267b1ddfce7489e73">rtadv_init</a> ();
<span class="preprocessor">#ifdef HAVE_IRDP</span>
<span class="preprocessor"></span>  <a class="code" href="irdp_8h.html#af6e884aee7b539d467e3dcbcac9630b5">irdp_init</a>();
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>
  <span class="comment">/* For debug purpose. */</span>
  <span class="comment">/* SET_FLAG (zebra_debug_event, ZEBRA_DEBUG_EVENT); */</span>

  <span class="comment">/* Make kernel routing socket. */</span>
  <a class="code" href="kernel__null_8c.html#a0dbe43a64cbf994bf9189e7767f93342">kernel_init</a> ();
  <a class="code" href="if__ioctl_8c.html#a566ef48adbf48e92f6e0044e317b0d99">interface_list</a> ();
  <a class="code" href="rtread__getmsg_8c.html#a7aaf8ffe18dfb22ce045f52cd845efa2">route_read</a> ();

  <span class="comment">/* Sort VTY commands. */</span>
  <a class="code" href="command_8c.html#a1096cf2835e7d5fa8407898fd3bd317d">sort_node</a> ();

<span class="preprocessor">#ifdef HAVE_SNMP</span>
<span class="preprocessor"></span>  <a class="code" href="zserv_8h.html#ac7cee097086a03fe55c5a6a68f682c09">zebra_snmp_init</a> ();
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_SNMP */</span>

  <span class="comment">/* Process the configuration file. Among other configuration</span>
<span class="comment">  *  directives we can meet those installing static routes. Such</span>
<span class="comment">  *  requests will not be executed immediately, but queued in</span>
<span class="comment">  *  zebra-&gt;ribq structure until we enter the main execution loop.</span>
<span class="comment">  *  The notifications from kernel will show originating PID equal</span>
<span class="comment">  *  to that after daemon() completes (if ever called).</span>
<span class="comment">  */</span>
  <a class="code" href="vty_8c.html#a414904627a8d3bbba1b20d769f836a70">vty_read_config</a> (config_file, <a class="code" href="bgp__main_8c.html#aee27bf99050b66912b35ae16e5b06c81">config_default</a>);

  <span class="comment">/* Don&#39;t start execution if we are in dry-run mode */</span>
  <span class="keywordflow">if</span> (dryrun)
    <span class="keywordflow">return</span>(0);
  
  <span class="comment">/* Clean up rib. */</span>
  <a class="code" href="rib_8h.html#a6f66a4098fb6d18a02fa91e62e395169">rib_weed_tables</a> ();

  <span class="comment">/* Exit when zebra is working in batch mode. */</span>
  <span class="keywordflow">if</span> (batch_mode)
    <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a> (0);

  <span class="comment">/* Daemonize. */</span>
  <span class="keywordflow">if</span> (daemon_mode &amp;&amp; <a class="code" href="structdaemon.html">daemon</a> (0, 0) &lt; 0)
    {
      <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a>(<span class="stringliteral">&quot;Zebra daemon failed: %s&quot;</span>, strerror(errno));
      <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a> (1);
    }

  <span class="comment">/* Output pid of zebra. */</span>
  <a class="code" href="pid__output_8c.html#ab11a24a9f2adabdcc3ec451dcb976f20">pid_output</a> (<a class="code" href="bgp__main_8c.html#ae59ebb5e7fab6c00fbfe20d7e907c841">pid_file</a>);

  <span class="comment">/* After we have successfully acquired the pidfile, we can be sure</span>
<span class="comment">  *  about being the only copy of zebra process, which is submitting</span>
<span class="comment">  *  changes to the FIB.</span>
<span class="comment">  *  Clean up zebra-originated routes. The requests will be sent to OS</span>
<span class="comment">  *  immediately, so originating PID in notifications from kernel</span>
<span class="comment">  *  will be equal to the current getpid(). To know about such routes,</span>
<span class="comment">  * we have to have route_read() called before.</span>
<span class="comment">  */</span>
  <span class="keywordflow">if</span> (! <a class="code" href="zebra_2main_8c.html#a80b98edd9a16dda0ab26a9db20893206">keep_kernel_mode</a>)
    <a class="code" href="rib_8h.html#a75571cb0f6ed48267739d55e20c6722f">rib_sweep_route</a> ();

  <span class="comment">/* Needed for BSD routing socket. */</span>
  <a class="code" href="zebra_2main_8c.html#ae0d46a978d5cd6707411f276ad869b9c">pid</a> = getpid ();

  <span class="comment">/* This must be done only after locking pidfile (bug #403). */</span>
  <a class="code" href="zserv_8c.html#a73dd94d53f97f6cca94ae8d5c087023f">zebra_zserv_socket_init</a> ();

  <span class="comment">/* Make vty server socket. */</span>
  <a class="code" href="vty_8c.html#a1247b9d1681382580789652f8dad12a6">vty_serv_sock</a> (vty_addr, vty_port, ZEBRA_VTYSH_PATH);

  <span class="comment">/* Print banner. */</span>
  <a class="code" href="log_8h.html#a2fcbf88ea2e5eb71befdbdb4a3f1474f">zlog_notice</a> (<span class="stringliteral">&quot;Zebra %s starting: vty@%d&quot;</span>, <a class="code" href="version_8h.html#a47310a38938bb82f0c5b9ad133443852">QUAGGA_VERSION</a>, vty_port);

  <span class="keywordflow">while</span> (<a class="code" href="thread_8c.html#a1674b380ab1baf464b4f541c0a938656">thread_fetch</a> (<a class="code" href="connected_8c.html#a5a844f9c9c891ff5dfe28610da9b56ce">zebrad</a>.<a class="code" href="structzebra__t.html#a9755f929805f6555c6f86d085309f0e2">master</a>, &amp;<a class="code" href="structthread.html">thread</a>))
    <a class="code" href="thread_8c.html#aebb1b7a2cf2a872d69ab8c1e6f788744">thread_call</a> (&amp;<a class="code" href="structthread.html">thread</a>);

  <span class="comment">/* Not reached... */</span>
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a2dafd463dfb92d5f5accf052b8e3f285"></a><!-- doxytag: member="main.c::sighup" ref="a2dafd463dfb92d5f5accf052b8e3f285" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void sighup </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra_2main_8c_source.html#l00154">154</a> of file <a class="el" href="zebra_2main_8c_source.html">main.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;SIGHUP received&quot;</span>);

  <span class="comment">/* Reload of config file. */</span>
  ;
}
</pre></div>
</div>
</div>
<a class="anchor" id="acc1594c0e273f7b9134404951c7ef595"></a><!-- doxytag: member="main.c::sigint" ref="acc1594c0e273f7b9134404951c7ef595" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void sigint </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra_2main_8c_source.html#l00164">164</a> of file <a class="el" href="zebra_2main_8c_source.html">main.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="log_8h.html#a2fcbf88ea2e5eb71befdbdb4a3f1474f">zlog_notice</a> (<span class="stringliteral">&quot;Terminating on signal&quot;</span>);

  <span class="keywordflow">if</span> (!<a class="code" href="bgp__main_8c.html#ae5b2354a6db536acb261c6fd90cd2f31">retain_mode</a>)
    <a class="code" href="rib_8h.html#a2017dc3c35367f4cf655b8d6ea238c3d">rib_close</a> ();
<span class="preprocessor">#ifdef HAVE_IRDP</span>
<span class="preprocessor"></span>  <a class="code" href="irdp_8h.html#a3d965bfa2322ccd12348227b2d92dd12">irdp_finish</a>();
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>
  <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a> (0);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a39fc0ccb908a14d8ad601bcbd126cfb3"></a><!-- doxytag: member="main.c::sigusr1" ref="a39fc0ccb908a14d8ad601bcbd126cfb3" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void sigusr1 </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra_2main_8c_source.html#l00179">179</a> of file <a class="el" href="zebra_2main_8c_source.html">main.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="log_8c.html#aa854a1d910778b80a95f6b711025faa5">zlog_rotate</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab24f62159230cf265fc4d7ddc4c91872"></a><!-- doxytag: member="main.c::usage" ref="ab24f62159230cf265fc4d7ddc4c91872" args="(char *progname, int status)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void usage </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>progname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>status</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra_2main_8c_source.html#l00118">118</a> of file <a class="el" href="zebra_2main_8c_source.html">main.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (status != 0)
    fprintf (stderr, <span class="stringliteral">&quot;Try `%s --help&#39; for more information.\n&quot;</span>, <a class="code" href="isis__main_8c.html#ab9e1449fd00c98428516f0b41eddcb10">progname</a>);
  <span class="keywordflow">else</span>
    {    
      printf (<span class="stringliteral">&quot;Usage : %s [OPTION...]\n\n&quot;</span>\
          <span class="stringliteral">&quot;Daemon which manages kernel routing table management and &quot;</span>\
          <span class="stringliteral">&quot;redistribution between different routing protocols.\n\n&quot;</span>\
          <span class="stringliteral">&quot;-b, --batch        Runs in batch mode\n&quot;</span>\
          <span class="stringliteral">&quot;-d, --daemon       Runs in daemon mode\n&quot;</span>\
          <span class="stringliteral">&quot;-f, --config_file  Set configuration file name\n&quot;</span>\
          <span class="stringliteral">&quot;-i, --pid_file     Set process identifier file name\n&quot;</span>\
          <span class="stringliteral">&quot;-k, --keep_kernel  Don&#39;t delete old routes which installed by &quot;</span>\
                  <span class="stringliteral">&quot;zebra.\n&quot;</span>\
          <span class="stringliteral">&quot;-C, --dryrun       Check configuration for validity and exit\n&quot;</span>\
          <span class="stringliteral">&quot;-A, --vty_addr     Set vty&#39;s bind address\n&quot;</span>\
          <span class="stringliteral">&quot;-P, --vty_port     Set vty&#39;s port number\n&quot;</span>\
          <span class="stringliteral">&quot;-r, --retain       When program terminates, retain added route &quot;</span>\
                  <span class="stringliteral">&quot;by zebra.\n&quot;</span>\
          <span class="stringliteral">&quot;-u, --user         User to run as\n&quot;</span>\
          <span class="stringliteral">&quot;-g, --group    Group to run as\n&quot;</span>, <a class="code" href="isis__main_8c.html#ab9e1449fd00c98428516f0b41eddcb10">progname</a>);
<span class="preprocessor">#ifdef HAVE_NETLINK</span>
<span class="preprocessor"></span>      printf (<span class="stringliteral">&quot;-s, --nl-bufsize   Set netlink receive buffer size\n&quot;</span>);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_NETLINK */</span>
      printf (<span class="stringliteral">&quot;-v, --version      Print program version\n&quot;</span>\
          <span class="stringliteral">&quot;-h, --help         Display this help and exit\n&quot;</span>\
          <span class="stringliteral">&quot;\n&quot;</span>\
          <span class="stringliteral">&quot;Report bugs to %s\n&quot;</span>, <a class="code" href="version_8h.html#a568a90422884d007e54c4f2e653ddc29">ZEBRA_BUG_ADDRESS</a>);
    }

  <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a> (status);
}
</pre></div>
</div>
</div>
<hr/><h2>Variable Documentation</h2>
<a class="anchor" id="a4565341c013a461a4a862195568418f9"></a><!-- doxytag: member="main.c::_caps_p" ref="a4565341c013a461a4a862195568418f9" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="privs_8h.html#acadb26c3fc89554cf67e4bae79e13058">zebra_capabilities_t</a> <a class="el" href="test__main_8c.html#a4565341c013a461a4a862195568418f9">_caps_p</a>[]</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment"> 
{
  <a class="code" href="privs_8h.html#acadb26c3fc89554cf67e4bae79e13058ab19204d6d995015c1a3383016bfb4b22">ZCAP_NET_ADMIN</a>,
  <a class="code" href="privs_8h.html#acadb26c3fc89554cf67e4bae79e13058a45151564ee61e29f11ae0d643ce6a0e8">ZCAP_SYS_ADMIN</a>,
  <a class="code" href="privs_8h.html#acadb26c3fc89554cf67e4bae79e13058a6cbad9f21b16adad616a294ed5bfc9f9">ZCAP_NET_RAW</a>,
}
</pre></div>
<p>Definition at line <a class="el" href="zebra_2main_8c_source.html#l00088">88</a> of file <a class="el" href="zebra_2main_8c_source.html">main.c</a>.</p>

</div>
</div>
<a class="anchor" id="aee27bf99050b66912b35ae16e5b06c81"></a><!-- doxytag: member="main.c::config_default" ref="aee27bf99050b66912b35ae16e5b06c81" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char <a class="el" href="test__main_8c.html#aee27bf99050b66912b35ae16e5b06c81">config_default</a>[] = SYSCONFDIR DEFAULT_CONFIG_FILE</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra_2main_8c_source.html#l00111">111</a> of file <a class="el" href="zebra_2main_8c_source.html">main.c</a>.</p>

</div>
</div>
<a class="anchor" id="a80b98edd9a16dda0ab26a9db20893206"></a><!-- doxytag: member="main.c::keep_kernel_mode" ref="a80b98edd9a16dda0ab26a9db20893206" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="zebra_2main_8c.html#a80b98edd9a16dda0ab26a9db20893206">keep_kernel_mode</a> = 0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra_2main_8c_source.html#l00059">59</a> of file <a class="el" href="zebra_2main_8c_source.html">main.c</a>.</p>

</div>
</div>
<a class="anchor" id="a94965649155359a4c4eb047af782bf22"></a><!-- doxytag: member="main.c::longopts" ref="a94965649155359a4c4eb047af782bf22" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structoption.html">option</a> <a class="el" href="test__main_8c.html#a94965649155359a4c4eb047af782bf22">longopts</a>[]</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment"> 
{
  { <span class="stringliteral">&quot;batch&quot;</span>,       <a class="code" href="getopt_8h.html#a3bc1d5f667b5b4ca4b4abb685dc874ce">no_argument</a>,       <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <span class="charliteral">&#39;b&#39;</span>},
  { <span class="stringliteral">&quot;daemon&quot;</span>,      <a class="code" href="getopt_8h.html#a3bc1d5f667b5b4ca4b4abb685dc874ce">no_argument</a>,       <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <span class="charliteral">&#39;d&#39;</span>},
  { <span class="stringliteral">&quot;keep_kernel&quot;</span>, <a class="code" href="getopt_8h.html#a3bc1d5f667b5b4ca4b4abb685dc874ce">no_argument</a>,       <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <span class="charliteral">&#39;k&#39;</span>},
  { <span class="stringliteral">&quot;config_file&quot;</span>, <a class="code" href="getopt_8h.html#a6ece8d8dfa8378778f7290fdaba5b8bc">required_argument</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <span class="charliteral">&#39;f&#39;</span>},
  { <span class="stringliteral">&quot;pid_file&quot;</span>,    <a class="code" href="getopt_8h.html#a6ece8d8dfa8378778f7290fdaba5b8bc">required_argument</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <span class="charliteral">&#39;i&#39;</span>},
  { <span class="stringliteral">&quot;help&quot;</span>,        <a class="code" href="getopt_8h.html#a3bc1d5f667b5b4ca4b4abb685dc874ce">no_argument</a>,       <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <span class="charliteral">&#39;h&#39;</span>},
  { <span class="stringliteral">&quot;vty_addr&quot;</span>,    <a class="code" href="getopt_8h.html#a6ece8d8dfa8378778f7290fdaba5b8bc">required_argument</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <span class="charliteral">&#39;A&#39;</span>},
  { <span class="stringliteral">&quot;vty_port&quot;</span>,    <a class="code" href="getopt_8h.html#a6ece8d8dfa8378778f7290fdaba5b8bc">required_argument</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <span class="charliteral">&#39;P&#39;</span>},
  { <span class="stringliteral">&quot;retain&quot;</span>,      <a class="code" href="getopt_8h.html#a3bc1d5f667b5b4ca4b4abb685dc874ce">no_argument</a>,       <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <span class="charliteral">&#39;r&#39;</span>},
  { <span class="stringliteral">&quot;dryrun&quot;</span>,      <a class="code" href="getopt_8h.html#a3bc1d5f667b5b4ca4b4abb685dc874ce">no_argument</a>,       <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <span class="charliteral">&#39;C&#39;</span>},


 
  { <span class="stringliteral">&quot;user&quot;</span>,        <a class="code" href="getopt_8h.html#a6ece8d8dfa8378778f7290fdaba5b8bc">required_argument</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <span class="charliteral">&#39;u&#39;</span>},
  { <span class="stringliteral">&quot;group&quot;</span>,       <a class="code" href="getopt_8h.html#a6ece8d8dfa8378778f7290fdaba5b8bc">required_argument</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <span class="charliteral">&#39;g&#39;</span>},
  { <span class="stringliteral">&quot;version&quot;</span>,     <a class="code" href="getopt_8h.html#a3bc1d5f667b5b4ca4b4abb685dc874ce">no_argument</a>,       <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <span class="charliteral">&#39;v&#39;</span>},
  { 0 }
}
</pre></div>
<p>Definition at line <a class="el" href="zebra_2main_8c_source.html#l00067">67</a> of file <a class="el" href="zebra_2main_8c_source.html">main.c</a>.</p>

</div>
</div>
<a class="anchor" id="af7f9077bc08df049beb65a1c09cde5fa"></a><!-- doxytag: member="main.c::master" ref="af7f9077bc08df049beb65a1c09cde5fa" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structthread__master.html">thread_master</a>* <a class="el" href="test__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra_2main_8c_source.html#l00053">53</a> of file <a class="el" href="zebra_2main_8c_source.html">main.c</a>.</p>

</div>
</div>
<a class="anchor" id="ae0d46a978d5cd6707411f276ad869b9c"></a><!-- doxytag: member="main.c::pid" ref="ae0d46a978d5cd6707411f276ad869b9c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pid_t <a class="el" href="zserv_8h.html#ae0d46a978d5cd6707411f276ad869b9c">pid</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra_2main_8c_source.html#l00050">50</a> of file <a class="el" href="zebra_2main_8c_source.html">main.c</a>.</p>

</div>
</div>
<a class="anchor" id="ae59ebb5e7fab6c00fbfe20d7e907c841"></a><!-- doxytag: member="main.c::pid_file" ref="ae59ebb5e7fab6c00fbfe20d7e907c841" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* <a class="el" href="test__main_8c.html#ae59ebb5e7fab6c00fbfe20d7e907c841">pid_file</a> = PATH_ZEBRA_PID</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra_2main_8c_source.html#l00114">114</a> of file <a class="el" href="zebra_2main_8c_source.html">main.c</a>.</p>

</div>
</div>
<a class="anchor" id="ae5b2354a6db536acb261c6fd90cd2f31"></a><!-- doxytag: member="main.c::retain_mode" ref="ae5b2354a6db536acb261c6fd90cd2f31" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="zebra_2main_8c.html#ae5b2354a6db536acb261c6fd90cd2f31">retain_mode</a> = 0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra_2main_8c_source.html#l00056">56</a> of file <a class="el" href="zebra_2main_8c_source.html">main.c</a>.</p>

</div>
</div>
<a class="anchor" id="ae3efeddef3d0cb78982d3ee6f7fe2885"></a><!-- doxytag: member="main.c::zebra_signals" ref="ae3efeddef3d0cb78982d3ee6f7fe2885" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structquagga__signal__t.html">quagga_signal_t</a> <a class="el" href="test__main_8c.html#ae3efeddef3d0cb78982d3ee6f7fe2885">zebra_signals</a>[]</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment">
{
  { 
    .signal = SIGHUP, 
    .handler = &amp;<a class="code" href="bgp__main_8c.html#a0f8e5b82a175cfcbc255a2e570f12051">sighup</a>,
  },
  {
    .signal = SIGUSR1,
    .handler = &amp;<a class="code" href="bgp__main_8c.html#a29cecb98cee6e6c3f0582d9015d37ccd">sigusr1</a>,
  },
  {
    .signal = SIGINT,
    .handler = &amp;<a class="code" href="bgp__main_8c.html#a3028bbc8ee1e04b72a2ef7fdaad1d71e">sigint</a>,
  },
  {
    .signal = SIGTERM,
    .handler = &amp;<a class="code" href="bgp__main_8c.html#a3028bbc8ee1e04b72a2ef7fdaad1d71e">sigint</a>,
  },
}
</pre></div>
<p>Definition at line <a class="el" href="zebra_2main_8c_source.html#l00184">184</a> of file <a class="el" href="zebra_2main_8c_source.html">main.c</a>.</p>

</div>
</div>
<a class="anchor" id="a5a844f9c9c891ff5dfe28610da9b56ce"></a><!-- doxytag: member="main.c::zebrad" ref="a5a844f9c9c891ff5dfe28610da9b56ce" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structzebra__t.html">zebra_t</a> <a class="el" href="zserv_8c.html#a5a844f9c9c891ff5dfe28610da9b56ce">zebrad</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment">
{
  .rtm_table_default = 0,
}
</pre></div>
<p>Definition at line <a class="el" href="zebra_2main_8c_source.html#l00044">44</a> of file <a class="el" href="zebra_2main_8c_source.html">main.c</a>.</p>

</div>
</div>
<a class="anchor" id="a10659da9c59441877a609c3cd916f3cf"></a><!-- doxytag: member="main.c::zserv_privs" ref="a10659da9c59441877a609c3cd916f3cf" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structzebra__privs__t.html">zebra_privs_t</a> <a class="el" href="zserv_8c.html#a10659da9c59441877a609c3cd916f3cf">zserv_privs</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment">
{







  .caps_p = <a class="code" href="bgp__main_8c.html#a4565341c013a461a4a862195568418f9">_caps_p</a>,
  .cap_num_p = <span class="keyword">sizeof</span>(<a class="code" href="bgp__main_8c.html#a4565341c013a461a4a862195568418f9">_caps_p</a>)/<span class="keyword">sizeof</span>(<a class="code" href="bgp__main_8c.html#a4565341c013a461a4a862195568418f9">_caps_p</a>[0]),
  .cap_num_i = 0
}
</pre></div>
<p>Definition at line <a class="el" href="zebra_2main_8c_source.html#l00096">96</a> of file <a class="el" href="zebra_2main_8c_source.html">main.c</a>.</p>

</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="zebra_2main_8c.html">main.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:37 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
