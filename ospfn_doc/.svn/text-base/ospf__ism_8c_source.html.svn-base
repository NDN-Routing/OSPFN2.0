<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: ospfd/ospf_ism.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('ospf__ism_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">ospfd/ospf_ism.c</div>  </div>
</div>
<div class="contents">
<a href="ospf__ism_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * OSPF version 2  Interface State Machine</span>
<a name="l00003"></a>00003 <span class="comment"> *   From RFC2328 [OSPF Version 2] </span>
<a name="l00004"></a>00004 <span class="comment"> * Copyright (C) 1999, 2000 Toshiaki Takada</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * This file is part of GNU Zebra.</span>
<a name="l00007"></a>00007 <span class="comment"> *</span>
<a name="l00008"></a>00008 <span class="comment"> * GNU Zebra is free software; you can redistribute it and/or modify it</span>
<a name="l00009"></a>00009 <span class="comment"> * under the terms of the GNU General Public License as published by the</span>
<a name="l00010"></a>00010 <span class="comment"> * Free Software Foundation; either version 2, or (at your option) any</span>
<a name="l00011"></a>00011 <span class="comment"> * later version.</span>
<a name="l00012"></a>00012 <span class="comment"> *</span>
<a name="l00013"></a>00013 <span class="comment"> * GNU Zebra is distributed in the hope that it will be useful, but</span>
<a name="l00014"></a>00014 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00015"></a>00015 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00016"></a>00016 <span class="comment"> * General Public License for more details.</span>
<a name="l00017"></a>00017 <span class="comment"> *</span>
<a name="l00018"></a>00018 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00019"></a>00019 <span class="comment"> * along with GNU Zebra; see the file COPYING.  If not, write to the Free</span>
<a name="l00020"></a>00020 <span class="comment"> * Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA</span>
<a name="l00021"></a>00021 <span class="comment"> * 02111-1307, USA.</span>
<a name="l00022"></a>00022 <span class="comment"> */</span>
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 <span class="preprocessor">#include &lt;<a class="code" href="zebra_8h.html">zebra.h</a>&gt;</span>
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="thread_8h.html">thread.h</a>&quot;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="linklist_8h.html">linklist.h</a>&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="prefix_8h.html">prefix.h</a>&quot;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="if_8h.html">if.h</a>&quot;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="table_8h.html">table.h</a>&quot;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &quot;<a class="code" href="log_8h.html">log.h</a>&quot;</span>
<a name="l00032"></a>00032 
<a name="l00033"></a>00033 <span class="preprocessor">#include &quot;<a class="code" href="ospfd_8h.html">ospfd/ospfd.h</a>&quot;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &quot;<a class="code" href="ospf__interface_8h.html">ospfd/ospf_interface.h</a>&quot;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &quot;<a class="code" href="ospf__ism_8h.html">ospfd/ospf_ism.h</a>&quot;</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include &quot;<a class="code" href="ospf__asbr_8h.html">ospfd/ospf_asbr.h</a>&quot;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#include &quot;<a class="code" href="ospf__lsa_8h.html">ospfd/ospf_lsa.h</a>&quot;</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include &quot;<a class="code" href="ospf__lsdb_8h.html">ospfd/ospf_lsdb.h</a>&quot;</span>
<a name="l00039"></a>00039 <span class="preprocessor">#include &quot;<a class="code" href="ospf__neighbor_8h.html">ospfd/ospf_neighbor.h</a>&quot;</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include &quot;<a class="code" href="ospf__nsm_8h.html">ospfd/ospf_nsm.h</a>&quot;</span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &quot;<a class="code" href="ospf__network_8h.html">ospfd/ospf_network.h</a>&quot;</span>
<a name="l00042"></a>00042 <span class="preprocessor">#include &quot;<a class="code" href="ospf__dump_8h.html">ospfd/ospf_dump.h</a>&quot;</span>
<a name="l00043"></a>00043 <span class="preprocessor">#include &quot;<a class="code" href="ospf__packet_8h.html">ospfd/ospf_packet.h</a>&quot;</span>
<a name="l00044"></a>00044 <span class="preprocessor">#include &quot;<a class="code" href="ospf__flood_8h.html">ospfd/ospf_flood.h</a>&quot;</span>
<a name="l00045"></a>00045 <span class="preprocessor">#include &quot;<a class="code" href="ospf__abr_8h.html">ospfd/ospf_abr.h</a>&quot;</span>
<a name="l00046"></a>00046 <span class="preprocessor">#include &quot;<a class="code" href="ospf__snmp_8h.html">ospfd/ospf_snmp.h</a>&quot;</span>
<a name="l00047"></a>00047 
<a name="l00048"></a>00048 <span class="comment">/* elect DR and BDR. Refer to RFC2319 section 9.4 */</span>
<a name="l00049"></a>00049 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *
<a name="l00050"></a><a class="code" href="ospf__ism_8c.html#a7bbdb25f453c311eabbe4b889a3f984b">00050</a> <a class="code" href="ospf__ism_8c.html#a7bbdb25f453c311eabbe4b889a3f984b">ospf_dr_election_sub</a> (<span class="keyword">struct</span> <a class="code" href="structlist.html">list</a> *routers)
<a name="l00051"></a>00051 {
<a name="l00052"></a>00052   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00053"></a>00053   <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr, *max = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00054"></a>00054 
<a name="l00055"></a>00055   <span class="comment">/* Choose highest router priority.</span>
<a name="l00056"></a>00056 <span class="comment">     In case of tie, choose highest Router ID. */</span>
<a name="l00057"></a>00057   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (routers, node, nbr))
<a name="l00058"></a>00058     {
<a name="l00059"></a>00059       <span class="keywordflow">if</span> (max == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00060"></a>00060     max = nbr;
<a name="l00061"></a>00061       <span class="keywordflow">else</span>
<a name="l00062"></a>00062     {
<a name="l00063"></a>00063       <span class="keywordflow">if</span> (max-&gt;<a class="code" href="structospf__neighbor.html#ade51baa719592185df1db62d13e9cf63">priority</a> &lt; nbr-&gt;<a class="code" href="structospf__neighbor.html#ade51baa719592185df1db62d13e9cf63">priority</a>)
<a name="l00064"></a>00064         max = nbr;
<a name="l00065"></a>00065       <span class="keywordflow">else</span> <span class="keywordflow">if</span> (max-&gt;<a class="code" href="structospf__neighbor.html#ade51baa719592185df1db62d13e9cf63">priority</a> == nbr-&gt;<a class="code" href="structospf__neighbor.html#ade51baa719592185df1db62d13e9cf63">priority</a>)
<a name="l00066"></a>00066         <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#aed79e5e7f07f40fd10b39c04fbb24fc8">IPV4_ADDR_CMP</a> (&amp;max-&gt;<a class="code" href="structospf__neighbor.html#a2257238c9040a76e9de9a78cf95bae0d">router_id</a>, &amp;nbr-&gt;<a class="code" href="structospf__neighbor.html#a2257238c9040a76e9de9a78cf95bae0d">router_id</a>) &lt; 0)
<a name="l00067"></a>00067           max = nbr;
<a name="l00068"></a>00068     }
<a name="l00069"></a>00069     }
<a name="l00070"></a>00070 
<a name="l00071"></a>00071   <span class="keywordflow">return</span> max;
<a name="l00072"></a>00072 }
<a name="l00073"></a>00073 
<a name="l00074"></a>00074 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *
<a name="l00075"></a><a class="code" href="ospf__ism_8c.html#a5b4c45eb26c85fcb0834e42879284490">00075</a> <a class="code" href="ospf__ism_8c.html#a5b4c45eb26c85fcb0834e42879284490">ospf_elect_dr</a> (<span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *<a class="code" href="structospf__neighbor.html#a24eabbd825aa53aba5343ae2d5ea7233">oi</a>, <span class="keyword">struct</span> <a class="code" href="structlist.html">list</a> *el_list)
<a name="l00076"></a>00076 {
<a name="l00077"></a>00077   <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *dr_list;
<a name="l00078"></a>00078   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00079"></a>00079   <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr, *dr = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, *bdr = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00080"></a>00080 
<a name="l00081"></a>00081   dr_list = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l00082"></a>00082 
<a name="l00083"></a>00083   <span class="comment">/* Add neighbors to the list. */</span>
<a name="l00084"></a>00084   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (el_list, node, nbr))
<a name="l00085"></a>00085     {
<a name="l00086"></a>00086       <span class="comment">/* neighbor declared to be DR. */</span>
<a name="l00087"></a>00087       <span class="keywordflow">if</span> (<a class="code" href="ospf__neighbor_8h.html#ad422e372f51656c4649d96641b24f6e0">NBR_IS_DR</a> (nbr))
<a name="l00088"></a>00088     <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (dr_list, nbr);
<a name="l00089"></a>00089 
<a name="l00090"></a>00090       <span class="comment">/* Preserve neighbor BDR. */</span>
<a name="l00091"></a>00091       <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;<a class="code" href="ospf__interface_8h.html#ab9a182dc79cc0d10a77a27c60f2351cd">BDR</a> (oi), &amp;nbr-&gt;<a class="code" href="structospf__neighbor.html#a4be3cd4b416bc267a4e3b35b9e2b1102">address</a>.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>))
<a name="l00092"></a>00092     bdr = nbr;
<a name="l00093"></a>00093     }
<a name="l00094"></a>00094 
<a name="l00095"></a>00095   <span class="comment">/* Elect Designated Router. */</span>
<a name="l00096"></a>00096   <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (dr_list) &gt; 0)
<a name="l00097"></a>00097     dr = <a class="code" href="ospf__ism_8c.html#a7bbdb25f453c311eabbe4b889a3f984b">ospf_dr_election_sub</a> (dr_list);
<a name="l00098"></a>00098   <span class="keywordflow">else</span>
<a name="l00099"></a>00099     dr = bdr;
<a name="l00100"></a>00100 
<a name="l00101"></a>00101   <span class="comment">/* Set DR to interface. */</span>
<a name="l00102"></a>00102   <span class="keywordflow">if</span> (dr)
<a name="l00103"></a>00103     <a class="code" href="ospf__interface_8h.html#aa84a7dde76ac0a31898992d050858ec5">DR</a> (oi) = dr-&gt;<a class="code" href="structospf__neighbor.html#a4be3cd4b416bc267a4e3b35b9e2b1102">address</a>.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>;
<a name="l00104"></a>00104   <span class="keywordflow">else</span>
<a name="l00105"></a>00105     <a class="code" href="ospf__interface_8h.html#aa84a7dde76ac0a31898992d050858ec5">DR</a> (oi).s_addr = 0;
<a name="l00106"></a>00106 
<a name="l00107"></a>00107   <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (dr_list);
<a name="l00108"></a>00108 
<a name="l00109"></a>00109   <span class="keywordflow">return</span> dr;
<a name="l00110"></a>00110 }
<a name="l00111"></a>00111 
<a name="l00112"></a>00112 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *
<a name="l00113"></a><a class="code" href="ospf__ism_8c.html#acef652f2cc60b9a982cd7b336db7bab6">00113</a> <a class="code" href="ospf__ism_8c.html#acef652f2cc60b9a982cd7b336db7bab6">ospf_elect_bdr</a> (<span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *<a class="code" href="structospf__neighbor.html#a24eabbd825aa53aba5343ae2d5ea7233">oi</a>, <span class="keyword">struct</span> <a class="code" href="structlist.html">list</a> *el_list)
<a name="l00114"></a>00114 {
<a name="l00115"></a>00115   <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *bdr_list, *no_dr_list;
<a name="l00116"></a>00116   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00117"></a>00117   <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr, *bdr = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00118"></a>00118 
<a name="l00119"></a>00119   bdr_list = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l00120"></a>00120   no_dr_list = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l00121"></a>00121 
<a name="l00122"></a>00122   <span class="comment">/* Add neighbors to the list. */</span>
<a name="l00123"></a>00123   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (el_list, node, nbr))
<a name="l00124"></a>00124     {
<a name="l00125"></a>00125       <span class="comment">/* neighbor declared to be DR. */</span>
<a name="l00126"></a>00126       <span class="keywordflow">if</span> (<a class="code" href="ospf__neighbor_8h.html#ad422e372f51656c4649d96641b24f6e0">NBR_IS_DR</a> (nbr))
<a name="l00127"></a>00127     <span class="keywordflow">continue</span>;
<a name="l00128"></a>00128 
<a name="l00129"></a>00129       <span class="comment">/* neighbor declared to be BDR. */</span>
<a name="l00130"></a>00130       <span class="keywordflow">if</span> (<a class="code" href="ospf__neighbor_8h.html#a1b94db83d088198f33a207de991a5316">NBR_IS_BDR</a> (nbr))
<a name="l00131"></a>00131     <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (bdr_list, nbr);
<a name="l00132"></a>00132 
<a name="l00133"></a>00133       <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (no_dr_list, nbr);
<a name="l00134"></a>00134     }
<a name="l00135"></a>00135 
<a name="l00136"></a>00136   <span class="comment">/* Elect Backup Designated Router. */</span>
<a name="l00137"></a>00137   <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (bdr_list) &gt; 0)
<a name="l00138"></a>00138     bdr = <a class="code" href="ospf__ism_8c.html#a7bbdb25f453c311eabbe4b889a3f984b">ospf_dr_election_sub</a> (bdr_list);
<a name="l00139"></a>00139   <span class="keywordflow">else</span>
<a name="l00140"></a>00140     bdr = <a class="code" href="ospf__ism_8c.html#a7bbdb25f453c311eabbe4b889a3f984b">ospf_dr_election_sub</a> (no_dr_list);
<a name="l00141"></a>00141 
<a name="l00142"></a>00142   <span class="comment">/* Set BDR to interface. */</span>
<a name="l00143"></a>00143   <span class="keywordflow">if</span> (bdr)
<a name="l00144"></a>00144     <a class="code" href="ospf__interface_8h.html#ab9a182dc79cc0d10a77a27c60f2351cd">BDR</a> (oi) = bdr-&gt;<a class="code" href="structospf__neighbor.html#a4be3cd4b416bc267a4e3b35b9e2b1102">address</a>.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>;
<a name="l00145"></a>00145   <span class="keywordflow">else</span>
<a name="l00146"></a>00146     <a class="code" href="ospf__interface_8h.html#ab9a182dc79cc0d10a77a27c60f2351cd">BDR</a> (oi).s_addr = 0;
<a name="l00147"></a>00147 
<a name="l00148"></a>00148   <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (bdr_list);
<a name="l00149"></a>00149   <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (no_dr_list);
<a name="l00150"></a>00150 
<a name="l00151"></a>00151   <span class="keywordflow">return</span> bdr;
<a name="l00152"></a>00152 }
<a name="l00153"></a>00153 
<a name="l00154"></a>00154 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00155"></a><a class="code" href="ospf__ism_8c.html#ad657e6327e3b1ef6721cd302246b2f60">00155</a> <a class="code" href="ospf__ism_8c.html#ad657e6327e3b1ef6721cd302246b2f60">ospf_ism_state</a> (<span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *<a class="code" href="structospf__neighbor.html#a24eabbd825aa53aba5343ae2d5ea7233">oi</a>)
<a name="l00156"></a>00156 {
<a name="l00157"></a>00157   <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;<a class="code" href="ospf__interface_8h.html#aa84a7dde76ac0a31898992d050858ec5">DR</a> (oi), &amp;oi-&gt;<a class="code" href="structospf__interface.html#a43493bc2b5d951e3e38ace850332eca1">address</a>-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>))
<a name="l00158"></a>00158     <span class="keywordflow">return</span> <a class="code" href="ospf__ism_8h.html#a7f179a571f4f8e112c0b887f39c87f23">ISM_DR</a>;
<a name="l00159"></a>00159   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;<a class="code" href="ospf__interface_8h.html#ab9a182dc79cc0d10a77a27c60f2351cd">BDR</a> (oi), &amp;oi-&gt;<a class="code" href="structospf__interface.html#a43493bc2b5d951e3e38ace850332eca1">address</a>-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>))
<a name="l00160"></a>00160     <span class="keywordflow">return</span> <a class="code" href="ospf__ism_8h.html#a3676782add5a8ecdb86981965ef9f37e">ISM_Backup</a>;
<a name="l00161"></a>00161   <span class="keywordflow">else</span>
<a name="l00162"></a>00162     <span class="keywordflow">return</span> <a class="code" href="ospf__ism_8h.html#a63c91d64f244427665286ca82eaeea04">ISM_DROther</a>;
<a name="l00163"></a>00163 }
<a name="l00164"></a>00164 
<a name="l00165"></a>00165 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00166"></a><a class="code" href="ospf__ism_8c.html#a0b3475d6936b031942ddf94014dd3446">00166</a> <a class="code" href="ospf__ism_8c.html#a0b3475d6936b031942ddf94014dd3446">ospf_dr_eligible_routers</a> (<span class="keyword">struct</span> <a class="code" href="structroute__table.html">route_table</a> *nbrs, <span class="keyword">struct</span> <a class="code" href="structlist.html">list</a> *el_list)
<a name="l00167"></a>00167 {
<a name="l00168"></a>00168   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00169"></a>00169   <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr;
<a name="l00170"></a>00170 
<a name="l00171"></a>00171   <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (nbrs); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
<a name="l00172"></a>00172     <span class="keywordflow">if</span> ((nbr = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00173"></a>00173       <span class="comment">/* Ignore 0.0.0.0 node*/</span>
<a name="l00174"></a>00174       <span class="keywordflow">if</span> (nbr-&gt;<a class="code" href="structospf__neighbor.html#a2257238c9040a76e9de9a78cf95bae0d">router_id</a>.s_addr != 0)
<a name="l00175"></a>00175     <span class="comment">/* Is neighbor eligible? */</span>
<a name="l00176"></a>00176     <span class="keywordflow">if</span> (nbr-&gt;<a class="code" href="structospf__neighbor.html#ade51baa719592185df1db62d13e9cf63">priority</a> &gt; 0)
<a name="l00177"></a>00177       <span class="comment">/* Is neighbor upper 2-Way? */</span>
<a name="l00178"></a>00178       <span class="keywordflow">if</span> (nbr-&gt;<a class="code" href="structospf__neighbor.html#a07061a68f4e15effd12479e1047120c7">state</a> &gt;= <a class="code" href="ospf__nsm_8h.html#a8a9d14bfc7d840e04eff13df3337fa24">NSM_TwoWay</a>)
<a name="l00179"></a>00179         <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (el_list, nbr);
<a name="l00180"></a>00180 }
<a name="l00181"></a>00181 
<a name="l00182"></a>00182 <span class="comment">/* Generate AdjOK? NSM event. */</span>
<a name="l00183"></a>00183 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00184"></a><a class="code" href="ospf__ism_8c.html#af4764e64fca5e39071fa4d876793b2d9">00184</a> <a class="code" href="ospf__ism_8c.html#af4764e64fca5e39071fa4d876793b2d9">ospf_dr_change</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> <a class="code" href="structroute__table.html">route_table</a> *nbrs)
<a name="l00185"></a>00185 {
<a name="l00186"></a>00186   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00187"></a>00187   <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr;
<a name="l00188"></a>00188 
<a name="l00189"></a>00189   <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (nbrs); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
<a name="l00190"></a>00190     <span class="keywordflow">if</span> ((nbr = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00191"></a>00191       <span class="comment">/* Ignore 0.0.0.0 node*/</span>
<a name="l00192"></a>00192       <span class="keywordflow">if</span> (nbr-&gt;<a class="code" href="structospf__neighbor.html#a2257238c9040a76e9de9a78cf95bae0d">router_id</a>.s_addr != 0)
<a name="l00193"></a>00193     <span class="comment">/* Is neighbor upper 2-Way? */</span>
<a name="l00194"></a>00194     <span class="keywordflow">if</span> (nbr-&gt;<a class="code" href="structospf__neighbor.html#a07061a68f4e15effd12479e1047120c7">state</a> &gt;= <a class="code" href="ospf__nsm_8h.html#a8a9d14bfc7d840e04eff13df3337fa24">NSM_TwoWay</a>)
<a name="l00195"></a>00195       <span class="comment">/* Ignore myself. */</span>
<a name="l00196"></a>00196       <span class="keywordflow">if</span> (!<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;nbr-&gt;<a class="code" href="structospf__neighbor.html#a2257238c9040a76e9de9a78cf95bae0d">router_id</a>, &amp;ospf-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>))
<a name="l00197"></a>00197         <a class="code" href="ospf__nsm_8h.html#a1cb080254e9d0314d6ef4bc2c05e36b4">OSPF_NSM_EVENT_SCHEDULE</a> (nbr, <a class="code" href="ospf__nsm_8h.html#a76de05478051ac94f835bb5523c319af">NSM_AdjOK</a>);
<a name="l00198"></a>00198 }
<a name="l00199"></a>00199 
<a name="l00200"></a>00200 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00201"></a><a class="code" href="ospf__ism_8c.html#a6542f314f5d9994ead98814c2d9f79fb">00201</a> <a class="code" href="ospf__ism_8c.html#a6542f314f5d9994ead98814c2d9f79fb">ospf_dr_election</a> (<span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *<a class="code" href="structospf__neighbor.html#a24eabbd825aa53aba5343ae2d5ea7233">oi</a>)
<a name="l00202"></a>00202 {
<a name="l00203"></a>00203   <span class="keyword">struct </span>in_addr old_dr, old_bdr;
<a name="l00204"></a>00204   <span class="keywordtype">int</span> old_state, new_state;
<a name="l00205"></a>00205   <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *el_list;
<a name="l00206"></a>00206   <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *dr, *bdr;
<a name="l00207"></a>00207 
<a name="l00208"></a>00208   <span class="comment">/* backup current values. */</span>
<a name="l00209"></a>00209   old_dr = <a class="code" href="ospf__interface_8h.html#aa84a7dde76ac0a31898992d050858ec5">DR</a> (oi);
<a name="l00210"></a>00210   old_bdr = <a class="code" href="ospf__interface_8h.html#ab9a182dc79cc0d10a77a27c60f2351cd">BDR</a> (oi);
<a name="l00211"></a>00211   old_state = oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a>;
<a name="l00212"></a>00212 
<a name="l00213"></a>00213   el_list = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l00214"></a>00214 
<a name="l00215"></a>00215   <span class="comment">/* List eligible routers. */</span>
<a name="l00216"></a>00216   <a class="code" href="ospf__ism_8c.html#a0b3475d6936b031942ddf94014dd3446">ospf_dr_eligible_routers</a> (oi-&gt;<a class="code" href="structospf__interface.html#aeb2e2f33698c499957bb55bfc80835d9">nbrs</a>, el_list);
<a name="l00217"></a>00217 
<a name="l00218"></a>00218   <span class="comment">/* First election of DR and BDR. */</span>
<a name="l00219"></a>00219   bdr = <a class="code" href="ospf__ism_8c.html#acef652f2cc60b9a982cd7b336db7bab6">ospf_elect_bdr</a> (oi, el_list);
<a name="l00220"></a>00220   dr = <a class="code" href="ospf__ism_8c.html#a5b4c45eb26c85fcb0834e42879284490">ospf_elect_dr</a> (oi, el_list);
<a name="l00221"></a>00221 
<a name="l00222"></a>00222   new_state = <a class="code" href="ospf__ism_8c.html#ad657e6327e3b1ef6721cd302246b2f60">ospf_ism_state</a> (oi);
<a name="l00223"></a>00223 
<a name="l00224"></a>00224   <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;DR-Election[1st]: Backup %s&quot;</span>, inet_ntoa (<a class="code" href="ospf__interface_8h.html#ab9a182dc79cc0d10a77a27c60f2351cd">BDR</a> (oi)));
<a name="l00225"></a>00225   <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;DR-Election[1st]: DR     %s&quot;</span>, inet_ntoa (<a class="code" href="ospf__interface_8h.html#aa84a7dde76ac0a31898992d050858ec5">DR</a> (oi)));
<a name="l00226"></a>00226 
<a name="l00227"></a>00227   <span class="keywordflow">if</span> (new_state != old_state &amp;&amp;
<a name="l00228"></a>00228       !(new_state == <a class="code" href="ospf__ism_8h.html#a63c91d64f244427665286ca82eaeea04">ISM_DROther</a> &amp;&amp; old_state &lt; <a class="code" href="ospf__ism_8h.html#a63c91d64f244427665286ca82eaeea04">ISM_DROther</a>))
<a name="l00229"></a>00229     {
<a name="l00230"></a>00230       <a class="code" href="ospf__ism_8c.html#acef652f2cc60b9a982cd7b336db7bab6">ospf_elect_bdr</a> (oi, el_list);
<a name="l00231"></a>00231       <a class="code" href="ospf__ism_8c.html#a5b4c45eb26c85fcb0834e42879284490">ospf_elect_dr</a> (oi, el_list); 
<a name="l00232"></a>00232 
<a name="l00233"></a>00233       new_state = <a class="code" href="ospf__ism_8c.html#ad657e6327e3b1ef6721cd302246b2f60">ospf_ism_state</a> (oi);
<a name="l00234"></a>00234 
<a name="l00235"></a>00235       <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;DR-Election[2nd]: Backup %s&quot;</span>, inet_ntoa (<a class="code" href="ospf__interface_8h.html#ab9a182dc79cc0d10a77a27c60f2351cd">BDR</a> (oi)));
<a name="l00236"></a>00236       <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;DR-Election[2nd]: DR     %s&quot;</span>, inet_ntoa (<a class="code" href="ospf__interface_8h.html#aa84a7dde76ac0a31898992d050858ec5">DR</a> (oi)));
<a name="l00237"></a>00237     }
<a name="l00238"></a>00238 
<a name="l00239"></a>00239   <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (el_list);
<a name="l00240"></a>00240 
<a name="l00241"></a>00241   <span class="comment">/* if DR or BDR changes, cause AdjOK? neighbor event. */</span>
<a name="l00242"></a>00242   <span class="keywordflow">if</span> (!<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;old_dr, &amp;<a class="code" href="ospf__interface_8h.html#aa84a7dde76ac0a31898992d050858ec5">DR</a> (oi)) ||
<a name="l00243"></a>00243       !<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;old_bdr, &amp;<a class="code" href="ospf__interface_8h.html#ab9a182dc79cc0d10a77a27c60f2351cd">BDR</a> (oi)))
<a name="l00244"></a>00244     <a class="code" href="ospf__ism_8c.html#af4764e64fca5e39071fa4d876793b2d9">ospf_dr_change</a> (oi-&gt;<a class="code" href="structospf__interface.html#a159ae1c542016fc78f68c3e39a1b132e">ospf</a>, oi-&gt;<a class="code" href="structospf__interface.html#aeb2e2f33698c499957bb55bfc80835d9">nbrs</a>);
<a name="l00245"></a>00245 
<a name="l00246"></a>00246   <span class="keywordflow">return</span> new_state;
<a name="l00247"></a>00247 }
<a name="l00248"></a>00248 
<a name="l00249"></a>00249 
<a name="l00250"></a>00250 <span class="keywordtype">int</span>
<a name="l00251"></a><a class="code" href="ospf__ism_8h.html#adec27301f3c252356a85e6ed6758d3be">00251</a> <a class="code" href="ospf__ism_8c.html#adec27301f3c252356a85e6ed6758d3be">ospf_hello_timer</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l00252"></a>00252 {
<a name="l00253"></a>00253   <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
<a name="l00254"></a>00254 
<a name="l00255"></a>00255   oi = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l00256"></a>00256   oi-&gt;<a class="code" href="structospf__interface.html#ab4ff164900af9fe9f6b1127ce7da2a8b">t_hello</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00257"></a>00257 
<a name="l00258"></a>00258   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (ism, ISM_TIMERS))
<a name="l00259"></a>00259     <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_DEBUG, <span class="stringliteral">&quot;ISM[%s]: Timer (Hello timer expire)&quot;</span>,
<a name="l00260"></a>00260       <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (oi));
<a name="l00261"></a>00261 
<a name="l00262"></a>00262   <span class="comment">/* Sending hello packet. */</span>
<a name="l00263"></a>00263   <a class="code" href="ospf__packet_8c.html#a0ec5bea1d903b79d5dca071f0fabb268">ospf_hello_send</a> (oi);
<a name="l00264"></a>00264 
<a name="l00265"></a>00265   <span class="comment">/* Hello timer set. */</span>
<a name="l00266"></a>00266   <a class="code" href="ospf__ism_8h.html#ab792a769e6c4eda18410c8b452fa92cb">OSPF_HELLO_TIMER_ON</a> (oi);
<a name="l00267"></a>00267   
<a name="l00268"></a>00268   <span class="keywordflow">return</span> 0;
<a name="l00269"></a>00269 }
<a name="l00270"></a>00270 
<a name="l00271"></a>00271 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00272"></a><a class="code" href="ospf__ism_8c.html#a9d8e8ec0af821785432ce75775452e82">00272</a> <a class="code" href="ospf__ism_8c.html#a9d8e8ec0af821785432ce75775452e82">ospf_wait_timer</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l00273"></a>00273 {
<a name="l00274"></a>00274   <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
<a name="l00275"></a>00275 
<a name="l00276"></a>00276   oi = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l00277"></a>00277   oi-&gt;<a class="code" href="structospf__interface.html#a86390c93b5f81f8b8b73c2279e28a2fa">t_wait</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00278"></a>00278 
<a name="l00279"></a>00279   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (ism, ISM_TIMERS))
<a name="l00280"></a>00280     <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_DEBUG, <span class="stringliteral">&quot;ISM[%s]: Timer (Wait timer expire)&quot;</span>,
<a name="l00281"></a>00281       <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (oi));
<a name="l00282"></a>00282 
<a name="l00283"></a>00283   <a class="code" href="ospf__ism_8h.html#a92d8b8f5e3c324698ef17d8ab3ee9781">OSPF_ISM_EVENT_SCHEDULE</a> (oi, <a class="code" href="ospf__ism_8h.html#a516f61e03aaf3c1560792ead947e4335">ISM_WaitTimer</a>);
<a name="l00284"></a>00284 
<a name="l00285"></a>00285   <span class="keywordflow">return</span> 0;
<a name="l00286"></a>00286 }
<a name="l00287"></a>00287 
<a name="l00288"></a>00288 <span class="comment">/* Hook function called after ospf ISM event is occured. And vty&#39;s</span>
<a name="l00289"></a>00289 <span class="comment">   network command invoke this function after making interface</span>
<a name="l00290"></a>00290 <span class="comment">   structure. */</span>
<a name="l00291"></a>00291 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00292"></a><a class="code" href="ospf__ism_8c.html#a9b8d1474016af78d544cb72802ac5470">00292</a> <a class="code" href="ospf__ism_8c.html#a9b8d1474016af78d544cb72802ac5470">ism_timer_set</a> (<span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *oi)
<a name="l00293"></a>00293 {
<a name="l00294"></a>00294   <span class="keywordflow">switch</span> (oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a>)
<a name="l00295"></a>00295     {
<a name="l00296"></a>00296     <span class="keywordflow">case</span> <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a>:
<a name="l00297"></a>00297       <span class="comment">/* First entry point of ospf interface state machine. In this state</span>
<a name="l00298"></a>00298 <span class="comment">     interface parameters must be set to initial values, and timers are</span>
<a name="l00299"></a>00299 <span class="comment">     reset also. */</span>
<a name="l00300"></a>00300       <a class="code" href="ospf__ism_8h.html#a2cacab48c8f81e562591540802fd54a1">OSPF_ISM_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#ab4ff164900af9fe9f6b1127ce7da2a8b">t_hello</a>);
<a name="l00301"></a>00301       <a class="code" href="ospf__ism_8h.html#a2cacab48c8f81e562591540802fd54a1">OSPF_ISM_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#a86390c93b5f81f8b8b73c2279e28a2fa">t_wait</a>);
<a name="l00302"></a>00302       <a class="code" href="ospf__ism_8h.html#a2cacab48c8f81e562591540802fd54a1">OSPF_ISM_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#aa1f8a2d1d1212c2cfdd530c7ca9f7534">t_ls_ack</a>);
<a name="l00303"></a>00303       <span class="keywordflow">break</span>;
<a name="l00304"></a>00304     <span class="keywordflow">case</span> <a class="code" href="ospf__ism_8h.html#ad5bbcdc6e422bf33064865a4aac0a172">ISM_Loopback</a>:
<a name="l00305"></a>00305       <span class="comment">/* In this state, the interface may be looped back and will be</span>
<a name="l00306"></a>00306 <span class="comment">     unavailable for regular data traffic. */</span>
<a name="l00307"></a>00307       <a class="code" href="ospf__ism_8h.html#a2cacab48c8f81e562591540802fd54a1">OSPF_ISM_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#ab4ff164900af9fe9f6b1127ce7da2a8b">t_hello</a>);
<a name="l00308"></a>00308       <a class="code" href="ospf__ism_8h.html#a2cacab48c8f81e562591540802fd54a1">OSPF_ISM_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#a86390c93b5f81f8b8b73c2279e28a2fa">t_wait</a>);
<a name="l00309"></a>00309       <a class="code" href="ospf__ism_8h.html#a2cacab48c8f81e562591540802fd54a1">OSPF_ISM_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#aa1f8a2d1d1212c2cfdd530c7ca9f7534">t_ls_ack</a>);
<a name="l00310"></a>00310       <span class="keywordflow">break</span>;
<a name="l00311"></a>00311     <span class="keywordflow">case</span> <a class="code" href="ospf__ism_8h.html#ad2f0936e61c22de1c5ffbb51f0f640a0">ISM_Waiting</a>:
<a name="l00312"></a>00312       <span class="comment">/* The router is trying to determine the identity of DRouter and</span>
<a name="l00313"></a>00313 <span class="comment">     BDRouter. The router begin to receive and send Hello Packets. */</span>
<a name="l00314"></a>00314       <span class="comment">/* send first hello immediately */</span>
<a name="l00315"></a>00315       <a class="code" href="ospf__ism_8h.html#abec66d8335bdee3d2c9812068d37cba5">OSPF_ISM_TIMER_MSEC_ON</a> (oi-&gt;<a class="code" href="structospf__interface.html#ab4ff164900af9fe9f6b1127ce7da2a8b">t_hello</a>, <a class="code" href="ospf__ism_8c.html#adec27301f3c252356a85e6ed6758d3be">ospf_hello_timer</a>, 1);
<a name="l00316"></a>00316       <a class="code" href="ospf__ism_8h.html#a9aca7fd1780267f224441174f992bfc9">OSPF_ISM_TIMER_ON</a> (oi-&gt;<a class="code" href="structospf__interface.html#a86390c93b5f81f8b8b73c2279e28a2fa">t_wait</a>, <a class="code" href="ospf__ism_8c.html#a9d8e8ec0af821785432ce75775452e82">ospf_wait_timer</a>,
<a name="l00317"></a>00317              <a class="code" href="ospf__interface_8h.html#a3082a40385804021e56001ea2bc5bdb1">OSPF_IF_PARAM</a> (oi, v_wait));
<a name="l00318"></a>00318       <a class="code" href="ospf__ism_8h.html#a2cacab48c8f81e562591540802fd54a1">OSPF_ISM_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#aa1f8a2d1d1212c2cfdd530c7ca9f7534">t_ls_ack</a>);
<a name="l00319"></a>00319       <span class="keywordflow">break</span>;
<a name="l00320"></a>00320     <span class="keywordflow">case</span> <a class="code" href="ospf__ism_8h.html#a1076f1da99a0944266b120fe42fe4426">ISM_PointToPoint</a>:
<a name="l00321"></a>00321       <span class="comment">/* The interface connects to a physical Point-to-point network or</span>
<a name="l00322"></a>00322 <span class="comment">     virtual link. The router attempts to form an adjacency with</span>
<a name="l00323"></a>00323 <span class="comment">     neighboring router. Hello packets are also sent. */</span>
<a name="l00324"></a>00324       <span class="comment">/* send first hello immediately */</span>
<a name="l00325"></a>00325       <a class="code" href="ospf__ism_8h.html#abec66d8335bdee3d2c9812068d37cba5">OSPF_ISM_TIMER_MSEC_ON</a> (oi-&gt;<a class="code" href="structospf__interface.html#ab4ff164900af9fe9f6b1127ce7da2a8b">t_hello</a>, <a class="code" href="ospf__ism_8c.html#adec27301f3c252356a85e6ed6758d3be">ospf_hello_timer</a>, 1);      
<a name="l00326"></a>00326       <a class="code" href="ospf__ism_8h.html#a2cacab48c8f81e562591540802fd54a1">OSPF_ISM_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#a86390c93b5f81f8b8b73c2279e28a2fa">t_wait</a>);
<a name="l00327"></a>00327       <a class="code" href="ospf__ism_8h.html#a9aca7fd1780267f224441174f992bfc9">OSPF_ISM_TIMER_ON</a> (oi-&gt;<a class="code" href="structospf__interface.html#aa1f8a2d1d1212c2cfdd530c7ca9f7534">t_ls_ack</a>, <a class="code" href="ospf__packet_8c.html#afbe22efd3efbb5e37fccfa54d9f9f05a">ospf_ls_ack_timer</a>, oi-&gt;<a class="code" href="structospf__interface.html#ab715712eda2750aa107ca2457f234a9c">v_ls_ack</a>);
<a name="l00328"></a>00328       <span class="keywordflow">break</span>;
<a name="l00329"></a>00329     <span class="keywordflow">case</span> <a class="code" href="ospf__ism_8h.html#a63c91d64f244427665286ca82eaeea04">ISM_DROther</a>:
<a name="l00330"></a>00330       <span class="comment">/* The network type of the interface is broadcast or NBMA network,</span>
<a name="l00331"></a>00331 <span class="comment">     and the router itself is neither Designated Router nor</span>
<a name="l00332"></a>00332 <span class="comment">     Backup Designated Router. */</span>
<a name="l00333"></a>00333       <a class="code" href="ospf__ism_8h.html#ab792a769e6c4eda18410c8b452fa92cb">OSPF_HELLO_TIMER_ON</a> (oi);
<a name="l00334"></a>00334       <a class="code" href="ospf__ism_8h.html#a2cacab48c8f81e562591540802fd54a1">OSPF_ISM_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#a86390c93b5f81f8b8b73c2279e28a2fa">t_wait</a>);
<a name="l00335"></a>00335       <a class="code" href="ospf__ism_8h.html#a9aca7fd1780267f224441174f992bfc9">OSPF_ISM_TIMER_ON</a> (oi-&gt;<a class="code" href="structospf__interface.html#aa1f8a2d1d1212c2cfdd530c7ca9f7534">t_ls_ack</a>, <a class="code" href="ospf__packet_8c.html#afbe22efd3efbb5e37fccfa54d9f9f05a">ospf_ls_ack_timer</a>, oi-&gt;<a class="code" href="structospf__interface.html#ab715712eda2750aa107ca2457f234a9c">v_ls_ack</a>);
<a name="l00336"></a>00336       <span class="keywordflow">break</span>;
<a name="l00337"></a>00337     <span class="keywordflow">case</span> <a class="code" href="ospf__ism_8h.html#a3676782add5a8ecdb86981965ef9f37e">ISM_Backup</a>:
<a name="l00338"></a>00338       <span class="comment">/* The network type of the interface is broadcast os NBMA network,</span>
<a name="l00339"></a>00339 <span class="comment">     and the router is Backup Designated Router. */</span>
<a name="l00340"></a>00340       <a class="code" href="ospf__ism_8h.html#ab792a769e6c4eda18410c8b452fa92cb">OSPF_HELLO_TIMER_ON</a> (oi);
<a name="l00341"></a>00341       <a class="code" href="ospf__ism_8h.html#a2cacab48c8f81e562591540802fd54a1">OSPF_ISM_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#a86390c93b5f81f8b8b73c2279e28a2fa">t_wait</a>);
<a name="l00342"></a>00342       <a class="code" href="ospf__ism_8h.html#a9aca7fd1780267f224441174f992bfc9">OSPF_ISM_TIMER_ON</a> (oi-&gt;<a class="code" href="structospf__interface.html#aa1f8a2d1d1212c2cfdd530c7ca9f7534">t_ls_ack</a>, <a class="code" href="ospf__packet_8c.html#afbe22efd3efbb5e37fccfa54d9f9f05a">ospf_ls_ack_timer</a>, oi-&gt;<a class="code" href="structospf__interface.html#ab715712eda2750aa107ca2457f234a9c">v_ls_ack</a>);
<a name="l00343"></a>00343       <span class="keywordflow">break</span>;
<a name="l00344"></a>00344     <span class="keywordflow">case</span> <a class="code" href="ospf__ism_8h.html#a7f179a571f4f8e112c0b887f39c87f23">ISM_DR</a>:
<a name="l00345"></a>00345       <span class="comment">/* The network type of the interface is broadcast or NBMA network,</span>
<a name="l00346"></a>00346 <span class="comment">     and the router is Designated Router. */</span>
<a name="l00347"></a>00347       <a class="code" href="ospf__ism_8h.html#ab792a769e6c4eda18410c8b452fa92cb">OSPF_HELLO_TIMER_ON</a> (oi);
<a name="l00348"></a>00348       <a class="code" href="ospf__ism_8h.html#a2cacab48c8f81e562591540802fd54a1">OSPF_ISM_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#a86390c93b5f81f8b8b73c2279e28a2fa">t_wait</a>);
<a name="l00349"></a>00349       <a class="code" href="ospf__ism_8h.html#a9aca7fd1780267f224441174f992bfc9">OSPF_ISM_TIMER_ON</a> (oi-&gt;<a class="code" href="structospf__interface.html#aa1f8a2d1d1212c2cfdd530c7ca9f7534">t_ls_ack</a>, <a class="code" href="ospf__packet_8c.html#afbe22efd3efbb5e37fccfa54d9f9f05a">ospf_ls_ack_timer</a>, oi-&gt;<a class="code" href="structospf__interface.html#ab715712eda2750aa107ca2457f234a9c">v_ls_ack</a>);
<a name="l00350"></a>00350       <span class="keywordflow">break</span>;
<a name="l00351"></a>00351     }
<a name="l00352"></a>00352 }
<a name="l00353"></a>00353 
<a name="l00354"></a>00354 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00355"></a><a class="code" href="ospf__ism_8c.html#a33972a8ae29cf4101a38520a9df97f3e">00355</a> <a class="code" href="ospf__ism_8c.html#a33972a8ae29cf4101a38520a9df97f3e">ism_interface_up</a> (<span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *oi)
<a name="l00356"></a>00356 {
<a name="l00357"></a>00357   <span class="keywordtype">int</span> <a class="code" href="bgp__fsm_8c.html#ac0c302bc97f010b7f5965faa07b00354">next_state</a> = 0;
<a name="l00358"></a>00358 
<a name="l00359"></a>00359   <span class="comment">/* if network type is point-to-point, Point-to-MultiPoint or virtual link,</span>
<a name="l00360"></a>00360 <span class="comment">     the state transitions to Point-to-Point. */</span>
<a name="l00361"></a>00361   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#a7722c258e67d21a5c6f367811664cccb">OSPF_IFTYPE_POINTOPOINT</a> ||
<a name="l00362"></a>00362       oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#aa65cd67781b9573131ead326b8976194">OSPF_IFTYPE_POINTOMULTIPOINT</a> ||
<a name="l00363"></a>00363       oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#a45798a2a8b566abd1907f7ae8bc0a2be">OSPF_IFTYPE_VIRTUALLINK</a>)
<a name="l00364"></a>00364     next_state = <a class="code" href="ospf__ism_8h.html#a1076f1da99a0944266b120fe42fe4426">ISM_PointToPoint</a>;
<a name="l00365"></a>00365   <span class="comment">/* Else if the router is not eligible to DR, the state transitions to</span>
<a name="l00366"></a>00366 <span class="comment">     DROther. */</span>
<a name="l00367"></a>00367   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="ospf__interface_8h.html#accb5457e43688e067b0b9844b08ae520">PRIORITY</a> (oi) == 0) <span class="comment">/* router is eligible? */</span>
<a name="l00368"></a>00368     next_state = <a class="code" href="ospf__ism_8h.html#a63c91d64f244427665286ca82eaeea04">ISM_DROther</a>;
<a name="l00369"></a>00369   <span class="keywordflow">else</span>
<a name="l00370"></a>00370     <span class="comment">/* Otherwise, the state transitions to Waiting. */</span>
<a name="l00371"></a>00371     next_state = <a class="code" href="ospf__ism_8h.html#ad2f0936e61c22de1c5ffbb51f0f640a0">ISM_Waiting</a>;
<a name="l00372"></a>00372 
<a name="l00373"></a>00373   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#abf2c650e64355936c071432d92dd5ecb">OSPF_IFTYPE_NBMA</a>)
<a name="l00374"></a>00374     <a class="code" href="ospfd_8c.html#a053c1c99419abc1738ed63cc58a910d1">ospf_nbr_nbma_if_update</a> (oi-&gt;<a class="code" href="structospf__interface.html#a159ae1c542016fc78f68c3e39a1b132e">ospf</a>, oi);
<a name="l00375"></a>00375 
<a name="l00376"></a>00376   <span class="comment">/*  ospf_ism_event (t); */</span>
<a name="l00377"></a>00377   <span class="keywordflow">return</span> <a class="code" href="bgp__fsm_8c.html#ac0c302bc97f010b7f5965faa07b00354">next_state</a>;
<a name="l00378"></a>00378 }
<a name="l00379"></a>00379 
<a name="l00380"></a>00380 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00381"></a><a class="code" href="ospf__ism_8c.html#aafba9d9a628e6494aba4edfbe96a98d2">00381</a> <a class="code" href="ospf__ism_8c.html#aafba9d9a628e6494aba4edfbe96a98d2">ism_loop_ind</a> (<span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *oi)
<a name="l00382"></a>00382 {
<a name="l00383"></a>00383   <span class="keywordtype">int</span> ret = 0;
<a name="l00384"></a>00384 
<a name="l00385"></a>00385   <span class="comment">/* call ism_interface_down. */</span>
<a name="l00386"></a>00386   <span class="comment">/* ret = ism_interface_down (oi); */</span>
<a name="l00387"></a>00387 
<a name="l00388"></a>00388   <span class="keywordflow">return</span> ret;
<a name="l00389"></a>00389 }
<a name="l00390"></a>00390 
<a name="l00391"></a>00391 <span class="comment">/* Interface down event handler. */</span>
<a name="l00392"></a>00392 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00393"></a><a class="code" href="ospf__ism_8c.html#a77535cd070c352cab0ab75c36a4e7760">00393</a> <a class="code" href="ospf__ism_8c.html#a77535cd070c352cab0ab75c36a4e7760">ism_interface_down</a> (<span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *oi)
<a name="l00394"></a>00394 {
<a name="l00395"></a>00395   <a class="code" href="ospf__interface_8c.html#ac85cde0449107c57705e459658486dd5">ospf_if_cleanup</a> (oi);
<a name="l00396"></a>00396   <span class="keywordflow">return</span> 0;
<a name="l00397"></a>00397 }
<a name="l00398"></a>00398 
<a name="l00399"></a>00399 
<a name="l00400"></a>00400 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00401"></a><a class="code" href="ospf__ism_8c.html#acafc98c691175222f28fc9a286783412">00401</a> <a class="code" href="ospf__ism_8c.html#acafc98c691175222f28fc9a286783412">ism_backup_seen</a> (<span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *oi)
<a name="l00402"></a>00402 {
<a name="l00403"></a>00403   <span class="keywordflow">return</span> <a class="code" href="ospf__ism_8c.html#a6542f314f5d9994ead98814c2d9f79fb">ospf_dr_election</a> (oi);
<a name="l00404"></a>00404 }
<a name="l00405"></a>00405 
<a name="l00406"></a>00406 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00407"></a><a class="code" href="ospf__ism_8c.html#ac08f9be03c6f1c325f89189ba818659d">00407</a> <a class="code" href="ospf__ism_8c.html#ac08f9be03c6f1c325f89189ba818659d">ism_wait_timer</a> (<span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *oi)
<a name="l00408"></a>00408 {
<a name="l00409"></a>00409   <span class="keywordflow">return</span> <a class="code" href="ospf__ism_8c.html#a6542f314f5d9994ead98814c2d9f79fb">ospf_dr_election</a> (oi);
<a name="l00410"></a>00410 }
<a name="l00411"></a>00411 
<a name="l00412"></a>00412 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00413"></a><a class="code" href="ospf__ism_8c.html#a51213b0b544e85c62427a28d67701a25">00413</a> <a class="code" href="ospf__ism_8c.html#a51213b0b544e85c62427a28d67701a25">ism_neighbor_change</a> (<span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *oi)
<a name="l00414"></a>00414 {
<a name="l00415"></a>00415   <span class="keywordflow">return</span> <a class="code" href="ospf__ism_8c.html#a6542f314f5d9994ead98814c2d9f79fb">ospf_dr_election</a> (oi);
<a name="l00416"></a>00416 }
<a name="l00417"></a>00417 
<a name="l00418"></a>00418 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00419"></a><a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">00419</a> <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a> (<span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *oi)
<a name="l00420"></a>00420 {
<a name="l00421"></a>00421   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (ism, ISM_EVENTS))
<a name="l00422"></a>00422     <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_DEBUG, <span class="stringliteral">&quot;ISM[%s]: ism_ignore called&quot;</span>, <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (oi));
<a name="l00423"></a>00423 
<a name="l00424"></a>00424   <span class="keywordflow">return</span> 0;
<a name="l00425"></a>00425 }
<a name="l00426"></a>00426 
<a name="l00427"></a>00427 <span class="comment">/* Interface State Machine */</span>
<a name="l00428"></a>00428 <span class="keyword">struct </span>{
<a name="l00429"></a><a class="code" href="ospf__ism_8c.html#a3bb35931dd3daced1e996b8c5ca23021">00429</a>   int (*<a class="code" href="bgp__fsm_8c.html#aad6d5d0fbfe60193366eaab88413f7af">func</a>) (<span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *);
<a name="l00430"></a><a class="code" href="ospf__ism_8c.html#ac0c302bc97f010b7f5965faa07b00354">00430</a>   <span class="keywordtype">int</span> <a class="code" href="bgp__fsm_8c.html#ac0c302bc97f010b7f5965faa07b00354">next_state</a>;
<a name="l00431"></a>00431 } <a class="code" href="ospf__ism_8c.html#aed4e1447c6afb26301f71782f3b8922f">ISM</a> [<a class="code" href="ospf__ism_8h.html#ad298cb127e0c3e42e1e497391af05166">OSPF_ISM_STATE_MAX</a>][<a class="code" href="ospf__ism_8h.html#afe5c14b076b3de44b2febe1daf2d57c7">OSPF_ISM_EVENT_MAX</a>] =
<a name="l00432"></a>00432 {
<a name="l00433"></a>00433   {
<a name="l00434"></a>00434     <span class="comment">/* DependUpon: dummy state. */</span>
<a name="l00435"></a>00435     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#acf6f7845e8869bc4184265daf384f2a6">ISM_DependUpon</a> },    <span class="comment">/* NoEvent        */</span>
<a name="l00436"></a>00436     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#acf6f7845e8869bc4184265daf384f2a6">ISM_DependUpon</a> },    <span class="comment">/* InterfaceUp    */</span>
<a name="l00437"></a>00437     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#acf6f7845e8869bc4184265daf384f2a6">ISM_DependUpon</a> },    <span class="comment">/* WaitTimer      */</span>
<a name="l00438"></a>00438     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#acf6f7845e8869bc4184265daf384f2a6">ISM_DependUpon</a> },    <span class="comment">/* BackupSeen     */</span>
<a name="l00439"></a>00439     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#acf6f7845e8869bc4184265daf384f2a6">ISM_DependUpon</a> },    <span class="comment">/* NeighborChange */</span>
<a name="l00440"></a>00440     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#acf6f7845e8869bc4184265daf384f2a6">ISM_DependUpon</a> },    <span class="comment">/* LoopInd        */</span>
<a name="l00441"></a>00441     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#acf6f7845e8869bc4184265daf384f2a6">ISM_DependUpon</a> },    <span class="comment">/* UnloopInd      */</span>
<a name="l00442"></a>00442     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#acf6f7845e8869bc4184265daf384f2a6">ISM_DependUpon</a> },    <span class="comment">/* InterfaceDown  */</span>
<a name="l00443"></a>00443   },
<a name="l00444"></a>00444   {
<a name="l00445"></a>00445     <span class="comment">/* Down:*/</span>
<a name="l00446"></a>00446     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#acf6f7845e8869bc4184265daf384f2a6">ISM_DependUpon</a> },    <span class="comment">/* NoEvent        */</span>
<a name="l00447"></a>00447     { <a class="code" href="ospf__ism_8c.html#a33972a8ae29cf4101a38520a9df97f3e">ism_interface_up</a>,    <a class="code" href="ospf__ism_8h.html#acf6f7845e8869bc4184265daf384f2a6">ISM_DependUpon</a> },    <span class="comment">/* InterfaceUp    */</span>
<a name="l00448"></a>00448     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a> },          <span class="comment">/* WaitTimer      */</span>
<a name="l00449"></a>00449     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a> },          <span class="comment">/* BackupSeen     */</span>
<a name="l00450"></a>00450     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a> },          <span class="comment">/* NeighborChange */</span>
<a name="l00451"></a>00451     { <a class="code" href="ospf__ism_8c.html#aafba9d9a628e6494aba4edfbe96a98d2">ism_loop_ind</a>,        <a class="code" href="ospf__ism_8h.html#ad5bbcdc6e422bf33064865a4aac0a172">ISM_Loopback</a> },      <span class="comment">/* LoopInd        */</span>
<a name="l00452"></a>00452     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a> },          <span class="comment">/* UnloopInd      */</span>
<a name="l00453"></a>00453     { <a class="code" href="ospf__ism_8c.html#a77535cd070c352cab0ab75c36a4e7760">ism_interface_down</a>,  <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a> },          <span class="comment">/* InterfaceDown  */</span>
<a name="l00454"></a>00454   },
<a name="l00455"></a>00455   {
<a name="l00456"></a>00456     <span class="comment">/* Loopback: */</span>
<a name="l00457"></a>00457     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#acf6f7845e8869bc4184265daf384f2a6">ISM_DependUpon</a> },    <span class="comment">/* NoEvent        */</span>
<a name="l00458"></a>00458     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#ad5bbcdc6e422bf33064865a4aac0a172">ISM_Loopback</a> },      <span class="comment">/* InterfaceUp    */</span>
<a name="l00459"></a>00459     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#ad5bbcdc6e422bf33064865a4aac0a172">ISM_Loopback</a> },      <span class="comment">/* WaitTimer      */</span>
<a name="l00460"></a>00460     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#ad5bbcdc6e422bf33064865a4aac0a172">ISM_Loopback</a> },      <span class="comment">/* BackupSeen     */</span>
<a name="l00461"></a>00461     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#ad5bbcdc6e422bf33064865a4aac0a172">ISM_Loopback</a> },      <span class="comment">/* NeighborChange */</span>
<a name="l00462"></a>00462     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#ad5bbcdc6e422bf33064865a4aac0a172">ISM_Loopback</a> },      <span class="comment">/* LoopInd        */</span>
<a name="l00463"></a>00463     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a> },          <span class="comment">/* UnloopInd      */</span>
<a name="l00464"></a>00464     { <a class="code" href="ospf__ism_8c.html#a77535cd070c352cab0ab75c36a4e7760">ism_interface_down</a>,  <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a> },          <span class="comment">/* InterfaceDown  */</span>
<a name="l00465"></a>00465   },
<a name="l00466"></a>00466   {
<a name="l00467"></a>00467     <span class="comment">/* Waiting: */</span>
<a name="l00468"></a>00468     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#acf6f7845e8869bc4184265daf384f2a6">ISM_DependUpon</a> },    <span class="comment">/* NoEvent        */</span>
<a name="l00469"></a>00469     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#ad2f0936e61c22de1c5ffbb51f0f640a0">ISM_Waiting</a> },       <span class="comment">/* InterfaceUp    */</span>
<a name="l00470"></a>00470     { <a class="code" href="ospf__ism_8c.html#ac08f9be03c6f1c325f89189ba818659d">ism_wait_timer</a>,      <a class="code" href="ospf__ism_8h.html#acf6f7845e8869bc4184265daf384f2a6">ISM_DependUpon</a> },    <span class="comment">/* WaitTimer      */</span>
<a name="l00471"></a>00471     { <a class="code" href="ospf__ism_8c.html#acafc98c691175222f28fc9a286783412">ism_backup_seen</a>,     <a class="code" href="ospf__ism_8h.html#acf6f7845e8869bc4184265daf384f2a6">ISM_DependUpon</a> },    <span class="comment">/* BackupSeen     */</span>
<a name="l00472"></a>00472     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#ad2f0936e61c22de1c5ffbb51f0f640a0">ISM_Waiting</a> },       <span class="comment">/* NeighborChange */</span>
<a name="l00473"></a>00473     { <a class="code" href="ospf__ism_8c.html#aafba9d9a628e6494aba4edfbe96a98d2">ism_loop_ind</a>,    <a class="code" href="ospf__ism_8h.html#ad5bbcdc6e422bf33064865a4aac0a172">ISM_Loopback</a> },      <span class="comment">/* LoopInd        */</span>
<a name="l00474"></a>00474     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#ad2f0936e61c22de1c5ffbb51f0f640a0">ISM_Waiting</a> },       <span class="comment">/* UnloopInd      */</span>
<a name="l00475"></a>00475     { <a class="code" href="ospf__ism_8c.html#a77535cd070c352cab0ab75c36a4e7760">ism_interface_down</a>,  <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a> },          <span class="comment">/* InterfaceDown  */</span>
<a name="l00476"></a>00476   },
<a name="l00477"></a>00477   {
<a name="l00478"></a>00478     <span class="comment">/* Point-to-Point: */</span>
<a name="l00479"></a>00479     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#acf6f7845e8869bc4184265daf384f2a6">ISM_DependUpon</a> },    <span class="comment">/* NoEvent        */</span>
<a name="l00480"></a>00480     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#a1076f1da99a0944266b120fe42fe4426">ISM_PointToPoint</a> },  <span class="comment">/* InterfaceUp    */</span>
<a name="l00481"></a>00481     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#a1076f1da99a0944266b120fe42fe4426">ISM_PointToPoint</a> },  <span class="comment">/* WaitTimer      */</span>
<a name="l00482"></a>00482     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#a1076f1da99a0944266b120fe42fe4426">ISM_PointToPoint</a> },  <span class="comment">/* BackupSeen     */</span>
<a name="l00483"></a>00483     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#a1076f1da99a0944266b120fe42fe4426">ISM_PointToPoint</a> },  <span class="comment">/* NeighborChange */</span>
<a name="l00484"></a>00484     { <a class="code" href="ospf__ism_8c.html#aafba9d9a628e6494aba4edfbe96a98d2">ism_loop_ind</a>,    <a class="code" href="ospf__ism_8h.html#ad5bbcdc6e422bf33064865a4aac0a172">ISM_Loopback</a> },      <span class="comment">/* LoopInd        */</span>
<a name="l00485"></a>00485     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#a1076f1da99a0944266b120fe42fe4426">ISM_PointToPoint</a> },  <span class="comment">/* UnloopInd      */</span>
<a name="l00486"></a>00486     { <a class="code" href="ospf__ism_8c.html#a77535cd070c352cab0ab75c36a4e7760">ism_interface_down</a>,  <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a> },          <span class="comment">/* InterfaceDown  */</span>
<a name="l00487"></a>00487   },
<a name="l00488"></a>00488   {
<a name="l00489"></a>00489     <span class="comment">/* DROther: */</span>
<a name="l00490"></a>00490     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#acf6f7845e8869bc4184265daf384f2a6">ISM_DependUpon</a> },    <span class="comment">/* NoEvent        */</span>
<a name="l00491"></a>00491     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#a63c91d64f244427665286ca82eaeea04">ISM_DROther</a> },       <span class="comment">/* InterfaceUp    */</span>
<a name="l00492"></a>00492     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#a63c91d64f244427665286ca82eaeea04">ISM_DROther</a> },       <span class="comment">/* WaitTimer      */</span>
<a name="l00493"></a>00493     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#a63c91d64f244427665286ca82eaeea04">ISM_DROther</a> },       <span class="comment">/* BackupSeen     */</span>
<a name="l00494"></a>00494     { <a class="code" href="ospf__ism_8c.html#a51213b0b544e85c62427a28d67701a25">ism_neighbor_change</a>, <a class="code" href="ospf__ism_8h.html#acf6f7845e8869bc4184265daf384f2a6">ISM_DependUpon</a> },    <span class="comment">/* NeighborChange */</span>
<a name="l00495"></a>00495     { <a class="code" href="ospf__ism_8c.html#aafba9d9a628e6494aba4edfbe96a98d2">ism_loop_ind</a>,        <a class="code" href="ospf__ism_8h.html#ad5bbcdc6e422bf33064865a4aac0a172">ISM_Loopback</a> },      <span class="comment">/* LoopInd        */</span>
<a name="l00496"></a>00496     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#a63c91d64f244427665286ca82eaeea04">ISM_DROther</a> },       <span class="comment">/* UnloopInd      */</span>
<a name="l00497"></a>00497     { <a class="code" href="ospf__ism_8c.html#a77535cd070c352cab0ab75c36a4e7760">ism_interface_down</a>,  <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a> },          <span class="comment">/* InterfaceDown  */</span>
<a name="l00498"></a>00498   },
<a name="l00499"></a>00499   {
<a name="l00500"></a>00500     <span class="comment">/* Backup: */</span>
<a name="l00501"></a>00501     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#acf6f7845e8869bc4184265daf384f2a6">ISM_DependUpon</a> },    <span class="comment">/* NoEvent        */</span>
<a name="l00502"></a>00502     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#a3676782add5a8ecdb86981965ef9f37e">ISM_Backup</a> },        <span class="comment">/* InterfaceUp    */</span>
<a name="l00503"></a>00503     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#a3676782add5a8ecdb86981965ef9f37e">ISM_Backup</a> },        <span class="comment">/* WaitTimer      */</span>
<a name="l00504"></a>00504     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#a3676782add5a8ecdb86981965ef9f37e">ISM_Backup</a> },        <span class="comment">/* BackupSeen     */</span>
<a name="l00505"></a>00505     { <a class="code" href="ospf__ism_8c.html#a51213b0b544e85c62427a28d67701a25">ism_neighbor_change</a>, <a class="code" href="ospf__ism_8h.html#acf6f7845e8869bc4184265daf384f2a6">ISM_DependUpon</a> },    <span class="comment">/* NeighborChange */</span>
<a name="l00506"></a>00506     { <a class="code" href="ospf__ism_8c.html#aafba9d9a628e6494aba4edfbe96a98d2">ism_loop_ind</a>,        <a class="code" href="ospf__ism_8h.html#ad5bbcdc6e422bf33064865a4aac0a172">ISM_Loopback</a> },      <span class="comment">/* LoopInd        */</span>
<a name="l00507"></a>00507     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#a3676782add5a8ecdb86981965ef9f37e">ISM_Backup</a> },        <span class="comment">/* UnloopInd      */</span>
<a name="l00508"></a>00508     { <a class="code" href="ospf__ism_8c.html#a77535cd070c352cab0ab75c36a4e7760">ism_interface_down</a>,  <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a> },          <span class="comment">/* InterfaceDown  */</span>
<a name="l00509"></a>00509   },
<a name="l00510"></a>00510   {
<a name="l00511"></a>00511     <span class="comment">/* DR: */</span>
<a name="l00512"></a>00512     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#acf6f7845e8869bc4184265daf384f2a6">ISM_DependUpon</a> },    <span class="comment">/* NoEvent        */</span>
<a name="l00513"></a>00513     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#a7f179a571f4f8e112c0b887f39c87f23">ISM_DR</a> },            <span class="comment">/* InterfaceUp    */</span>
<a name="l00514"></a>00514     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#a7f179a571f4f8e112c0b887f39c87f23">ISM_DR</a> },            <span class="comment">/* WaitTimer      */</span>
<a name="l00515"></a>00515     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#a7f179a571f4f8e112c0b887f39c87f23">ISM_DR</a> },            <span class="comment">/* BackupSeen     */</span>
<a name="l00516"></a>00516     { <a class="code" href="ospf__ism_8c.html#a51213b0b544e85c62427a28d67701a25">ism_neighbor_change</a>, <a class="code" href="ospf__ism_8h.html#acf6f7845e8869bc4184265daf384f2a6">ISM_DependUpon</a> },    <span class="comment">/* NeighborChange */</span>
<a name="l00517"></a>00517     { <a class="code" href="ospf__ism_8c.html#aafba9d9a628e6494aba4edfbe96a98d2">ism_loop_ind</a>,        <a class="code" href="ospf__ism_8h.html#ad5bbcdc6e422bf33064865a4aac0a172">ISM_Loopback</a> },      <span class="comment">/* LoopInd        */</span>
<a name="l00518"></a>00518     { <a class="code" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a>,          <a class="code" href="ospf__ism_8h.html#a7f179a571f4f8e112c0b887f39c87f23">ISM_DR</a> },            <span class="comment">/* UnloopInd      */</span>
<a name="l00519"></a>00519     { <a class="code" href="ospf__ism_8c.html#a77535cd070c352cab0ab75c36a4e7760">ism_interface_down</a>,  <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a> },          <span class="comment">/* InterfaceDown  */</span>
<a name="l00520"></a>00520   },
<a name="l00521"></a>00521 };  
<a name="l00522"></a>00522 
<a name="l00523"></a><a class="code" href="ospf__ism_8c.html#a3f6a5ac88ac8c4e9118cc4cbf0b73140">00523</a> <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="ospf__ism_8c.html#a3f6a5ac88ac8c4e9118cc4cbf0b73140">ospf_ism_event_str</a>[] =
<a name="l00524"></a>00524 {
<a name="l00525"></a>00525   <span class="stringliteral">&quot;NoEvent&quot;</span>,
<a name="l00526"></a>00526   <span class="stringliteral">&quot;InterfaceUp&quot;</span>,
<a name="l00527"></a>00527   <span class="stringliteral">&quot;WaitTimer&quot;</span>,
<a name="l00528"></a>00528   <span class="stringliteral">&quot;BackupSeen&quot;</span>,
<a name="l00529"></a>00529   <span class="stringliteral">&quot;NeighborChange&quot;</span>,
<a name="l00530"></a>00530   <span class="stringliteral">&quot;LoopInd&quot;</span>,
<a name="l00531"></a>00531   <span class="stringliteral">&quot;UnLoopInd&quot;</span>,
<a name="l00532"></a>00532   <span class="stringliteral">&quot;InterfaceDown&quot;</span>,
<a name="l00533"></a>00533 };
<a name="l00534"></a>00534 
<a name="l00535"></a>00535 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00536"></a><a class="code" href="ospf__ism_8c.html#a07ae5b5b9200723fafc04b741e5fe0c2">00536</a> <a class="code" href="ospf__ism_8c.html#a07ae5b5b9200723fafc04b741e5fe0c2">ism_change_state</a> (<span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *oi, <span class="keywordtype">int</span> <a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a>)
<a name="l00537"></a>00537 {
<a name="l00538"></a>00538   <span class="keywordtype">int</span> old_state;
<a name="l00539"></a>00539   <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa;
<a name="l00540"></a>00540 
<a name="l00541"></a>00541   <span class="comment">/* Logging change of state. */</span>
<a name="l00542"></a>00542   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (ism, ISM_STATUS))
<a name="l00543"></a>00543     <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_DEBUG, <span class="stringliteral">&quot;ISM[%s]: State change %s -&gt; %s&quot;</span>, <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (oi),
<a name="l00544"></a>00544       <a class="code" href="log_8h.html#a3a4b1cad85aa6752f39580944e24a868">LOOKUP</a> (<a class="code" href="ospf__dump_8c.html#ae4c65baac757ab6ffaaf05421dd53b3a">ospf_ism_state_msg</a>, oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a>),
<a name="l00545"></a>00545       <a class="code" href="log_8h.html#a3a4b1cad85aa6752f39580944e24a868">LOOKUP</a> (<a class="code" href="ospf__dump_8c.html#ae4c65baac757ab6ffaaf05421dd53b3a">ospf_ism_state_msg</a>, state));
<a name="l00546"></a>00546 
<a name="l00547"></a>00547   old_state = oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a>;
<a name="l00548"></a>00548   oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a> = state;
<a name="l00549"></a>00549   oi-&gt;<a class="code" href="structospf__interface.html#a00f77cdcfa5c89c1b02675c956e582f5">state_change</a>++;
<a name="l00550"></a>00550 
<a name="l00551"></a>00551 <span class="preprocessor">#ifdef HAVE_SNMP</span>
<a name="l00552"></a>00552 <span class="preprocessor"></span>  <span class="comment">/* Terminal state or regression */</span> 
<a name="l00553"></a>00553   <span class="keywordflow">if</span> ((state == <a class="code" href="ospf__ism_8h.html#a7f179a571f4f8e112c0b887f39c87f23">ISM_DR</a>) || (state == <a class="code" href="ospf__ism_8h.html#a3676782add5a8ecdb86981965ef9f37e">ISM_Backup</a>) || (state == <a class="code" href="ospf__ism_8h.html#a63c91d64f244427665286ca82eaeea04">ISM_DROther</a>) ||
<a name="l00554"></a>00554       (state == <a class="code" href="ospf__ism_8h.html#a1076f1da99a0944266b120fe42fe4426">ISM_PointToPoint</a>) || (state &lt; old_state))
<a name="l00555"></a>00555     {
<a name="l00556"></a>00556       <span class="comment">/* ospfVirtIfStateChange */</span>
<a name="l00557"></a>00557       <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#a45798a2a8b566abd1907f7ae8bc0a2be">OSPF_IFTYPE_VIRTUALLINK</a>)
<a name="l00558"></a>00558         <a class="code" href="ospf__snmp_8h.html#a4500f13e4245e8170a07493e3fc76f16">ospfTrapVirtIfStateChange</a> (oi);
<a name="l00559"></a>00559       <span class="comment">/* ospfIfStateChange */</span>
<a name="l00560"></a>00560       <span class="keywordflow">else</span>
<a name="l00561"></a>00561         <a class="code" href="ospf__snmp_8h.html#a214b7d1fa78440c0bb5512d10e9510ad">ospfTrapIfStateChange</a> (oi);
<a name="l00562"></a>00562     }
<a name="l00563"></a>00563 <span class="preprocessor">#endif</span>
<a name="l00564"></a>00564 <span class="preprocessor"></span>
<a name="l00565"></a>00565   <span class="comment">/* Set multicast memberships appropriately for new state. */</span>
<a name="l00566"></a>00566   <a class="code" href="ospf__interface_8c.html#a4d1ed1c93fa9a91e2461470344b8a977">ospf_if_set_multicast</a>(oi);
<a name="l00567"></a>00567 
<a name="l00568"></a>00568   <span class="keywordflow">if</span> (old_state == <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a> || state == <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a>)
<a name="l00569"></a>00569     <a class="code" href="ospf__abr_8c.html#aae7756099eb070db13009f36bfd7736f">ospf_check_abr_status</a> (oi-&gt;<a class="code" href="structospf__interface.html#a159ae1c542016fc78f68c3e39a1b132e">ospf</a>);
<a name="l00570"></a>00570 
<a name="l00571"></a>00571   <span class="comment">/* Originate router-LSA. */</span>
<a name="l00572"></a>00572   <span class="keywordflow">if</span> (state == <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a>)
<a name="l00573"></a>00573     {
<a name="l00574"></a>00574       <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#a7a0df59739f1ffa31ab75ff4b9bbcd95">area</a>-&gt;<a class="code" href="structospf__area.html#ade0d91a8747b46926ed25794d2c25b84">act_ints</a> &gt; 0)
<a name="l00575"></a>00575         oi-&gt;<a class="code" href="structospf__interface.html#a7a0df59739f1ffa31ab75ff4b9bbcd95">area</a>-&gt;<a class="code" href="structospf__area.html#ade0d91a8747b46926ed25794d2c25b84">act_ints</a>--;
<a name="l00576"></a>00576     }
<a name="l00577"></a>00577   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (old_state == <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a>)
<a name="l00578"></a>00578     oi-&gt;<a class="code" href="structospf__interface.html#a7a0df59739f1ffa31ab75ff4b9bbcd95">area</a>-&gt;<a class="code" href="structospf__area.html#ade0d91a8747b46926ed25794d2c25b84">act_ints</a>++;
<a name="l00579"></a>00579 
<a name="l00580"></a>00580   <span class="comment">/* schedule router-LSA originate. */</span>
<a name="l00581"></a>00581   <a class="code" href="ospf__lsa_8c.html#a66ad8a1fd151b43b11d7ec9650a644bf">ospf_router_lsa_timer_add</a> (oi-&gt;<a class="code" href="structospf__interface.html#a7a0df59739f1ffa31ab75ff4b9bbcd95">area</a>);
<a name="l00582"></a>00582 
<a name="l00583"></a>00583   <span class="comment">/* Originate network-LSA. */</span>
<a name="l00584"></a>00584   <span class="keywordflow">if</span> (old_state != <a class="code" href="ospf__ism_8h.html#a7f179a571f4f8e112c0b887f39c87f23">ISM_DR</a> &amp;&amp; state == <a class="code" href="ospf__ism_8h.html#a7f179a571f4f8e112c0b887f39c87f23">ISM_DR</a>)
<a name="l00585"></a>00585     <a class="code" href="ospf__lsa_8c.html#a42678c90c94d537b3d9c905d4685e2c5">ospf_network_lsa_timer_add</a> (oi);
<a name="l00586"></a>00586   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (old_state == <a class="code" href="ospf__ism_8h.html#a7f179a571f4f8e112c0b887f39c87f23">ISM_DR</a> &amp;&amp; state != <a class="code" href="ospf__ism_8h.html#a7f179a571f4f8e112c0b887f39c87f23">ISM_DR</a>)
<a name="l00587"></a>00587     {
<a name="l00588"></a>00588       <span class="comment">/* Free self originated network LSA. */</span>
<a name="l00589"></a>00589       lsa = oi-&gt;<a class="code" href="structospf__interface.html#a175c090a388cfc7d255012d0d569df6d">network_lsa_self</a>;
<a name="l00590"></a>00590       <span class="keywordflow">if</span> (lsa)
<a name="l00591"></a>00591     {
<a name="l00592"></a>00592       <a class="code" href="ospf__flood_8c.html#ad3049ba87364a6fbed7d352023e33a4a">ospf_lsa_flush_area</a> (lsa, oi-&gt;<a class="code" href="structospf__interface.html#a7a0df59739f1ffa31ab75ff4b9bbcd95">area</a>);
<a name="l00593"></a>00593       <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#a278866980d98aa3ae2c393acb08c0337">t_network_lsa_self</a>);
<a name="l00594"></a>00594     }
<a name="l00595"></a>00595 
<a name="l00596"></a>00596       <a class="code" href="ospf__lsa_8c.html#a268fc5c6673caf7ee94c0eaaa88455b8">ospf_lsa_unlock</a> (&amp;oi-&gt;<a class="code" href="structospf__interface.html#a175c090a388cfc7d255012d0d569df6d">network_lsa_self</a>);
<a name="l00597"></a>00597       oi-&gt;<a class="code" href="structospf__interface.html#a175c090a388cfc7d255012d0d569df6d">network_lsa_self</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00598"></a>00598     }
<a name="l00599"></a>00599 
<a name="l00600"></a>00600 <span class="preprocessor">#ifdef HAVE_OPAQUE_LSA</span>
<a name="l00601"></a>00601 <span class="preprocessor"></span>  <a class="code" href="ospf__opaque_8h.html#affdc5ee3a6fab6f28d76b6a3d087e834">ospf_opaque_ism_change</a> (oi, old_state);
<a name="l00602"></a>00602 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_OPAQUE_LSA */</span>
<a name="l00603"></a>00603 
<a name="l00604"></a>00604   <span class="comment">/* Check area border status.  */</span>
<a name="l00605"></a>00605   <a class="code" href="ospf__abr_8c.html#aae7756099eb070db13009f36bfd7736f">ospf_check_abr_status</a> (oi-&gt;<a class="code" href="structospf__interface.html#a159ae1c542016fc78f68c3e39a1b132e">ospf</a>);
<a name="l00606"></a>00606 }
<a name="l00607"></a>00607 
<a name="l00608"></a>00608 <span class="comment">/* Execute ISM event process. */</span>
<a name="l00609"></a>00609 <span class="keywordtype">int</span>
<a name="l00610"></a><a class="code" href="ospf__ism_8h.html#afa5e1866cbe7cde0d4ad12746a3adbf2">00610</a> <a class="code" href="ospf__ism_8c.html#a6a90f4f003e80ca5ba3240d1f7106a74">ospf_ism_event</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l00611"></a>00611 {
<a name="l00612"></a>00612   <span class="keywordtype">int</span> <a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a>;
<a name="l00613"></a>00613   <span class="keywordtype">int</span> <a class="code" href="bgp__fsm_8c.html#ac0c302bc97f010b7f5965faa07b00354">next_state</a>;
<a name="l00614"></a>00614   <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
<a name="l00615"></a>00615 
<a name="l00616"></a>00616   oi = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l00617"></a>00617   <span class="keyword">event</span> = <a class="code" href="thread_8h.html#a88d7c483cad15baac709fac747480a11">THREAD_VAL</a> (thread);
<a name="l00618"></a>00618 
<a name="l00619"></a>00619   <span class="comment">/* Call function. */</span>
<a name="l00620"></a>00620   next_state = (*(<a class="code" href="ospf__ism_8c.html#aed4e1447c6afb26301f71782f3b8922f">ISM</a> [oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a>][<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a>].func))(oi);
<a name="l00621"></a>00621 
<a name="l00622"></a>00622   <span class="keywordflow">if</span> (! next_state)
<a name="l00623"></a>00623     next_state = <a class="code" href="ospf__ism_8c.html#aed4e1447c6afb26301f71782f3b8922f">ISM</a> [oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a>][<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a>].next_state;
<a name="l00624"></a>00624 
<a name="l00625"></a>00625   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (ism, ISM_EVENTS))
<a name="l00626"></a>00626     <a class="code" href="structzlog.html">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_DEBUG, <span class="stringliteral">&quot;ISM[%s]: %s (%s)&quot;</span>, <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (oi),
<a name="l00627"></a>00627       <a class="code" href="log_8h.html#a3a4b1cad85aa6752f39580944e24a868">LOOKUP</a> (<a class="code" href="ospf__dump_8c.html#ae4c65baac757ab6ffaaf05421dd53b3a">ospf_ism_state_msg</a>, oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a>),
<a name="l00628"></a>00628       <a class="code" href="ospf__ism_8c.html#a3f6a5ac88ac8c4e9118cc4cbf0b73140">ospf_ism_event_str</a>[<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a>]);
<a name="l00629"></a>00629 
<a name="l00630"></a>00630   <span class="comment">/* If state is changed. */</span>
<a name="l00631"></a>00631   <span class="keywordflow">if</span> (next_state != oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a>)
<a name="l00632"></a>00632     <a class="code" href="ospf__ism_8c.html#a07ae5b5b9200723fafc04b741e5fe0c2">ism_change_state</a> (oi, next_state);
<a name="l00633"></a>00633 
<a name="l00634"></a>00634   <span class="comment">/* Make sure timer is set. */</span>
<a name="l00635"></a>00635   <a class="code" href="ospf__ism_8c.html#a9b8d1474016af78d544cb72802ac5470">ism_timer_set</a> (oi);
<a name="l00636"></a>00636 
<a name="l00637"></a>00637   <span class="keywordflow">return</span> 0;
<a name="l00638"></a>00638 }
<a name="l00639"></a>00639 
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="ospf__ism_8c.html">ospf_ism.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:07 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
