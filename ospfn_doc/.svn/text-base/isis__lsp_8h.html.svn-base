<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: isisd/isis_lsp.h File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('isis__lsp_8h.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Defines</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">isisd/isis_lsp.h File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><img src="isis__lsp_8h__dep__incl.png" border="0" usemap="#isisd_2isis__lsp_8hdep" alt=""/></div>
<map name="isisd_2isis__lsp_8hdep" id="isisd_2isis__lsp_8hdep">
<area shape="rect" id="node3" href="isis__circuit_8c.html" title="isisd/isis_circuit.c" alt="" coords="5,80,131,107"/><area shape="rect" id="node5" href="isis__csm_8c.html" title="isisd/isis_csm.c" alt="" coords="155,80,271,107"/><area shape="rect" id="node7" href="isis__dr_8c.html" title="isisd/isis_dr.c" alt="" coords="295,80,397,107"/><area shape="rect" id="node9" href="isis__events_8c.html" title="isisd/isis_events.c" alt="" coords="423,80,556,107"/><area shape="rect" id="node11" href="isis__lsp_8c.html" title="isisd/isis_lsp.c" alt="" coords="580,80,689,107"/><area shape="rect" id="node13" href="isis__misc_8c.html" title="isisd/isis_misc.c" alt="" coords="714,80,832,107"/><area shape="rect" id="node15" href="isis__pdu_8c.html" title="isisd/isis_pdu.c" alt="" coords="857,80,972,107"/><area shape="rect" id="node17" href="isis__route_8c.html" title="isisd/isis_route.c" alt="" coords="996,80,1119,107"/><area shape="rect" id="node19" href="isis__routemap_8c.html" title="isisd/isis_routemap.c" alt="" coords="1143,80,1292,107"/><area shape="rect" id="node21" href="isis__spf_8c.html" title="isisd/isis_spf.c" alt="" coords="1317,80,1427,107"/><area shape="rect" id="node23" href="isis__tlv_8c.html" title="isisd/isis_tlv.c" alt="" coords="1452,80,1559,107"/><area shape="rect" id="node25" href="isisd_8c.html" title="isisd/isisd.c" alt="" coords="1583,80,1675,107"/></map>
</div>
</div>
<p><a href="isis__lsp_8h_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structisis__lsp.html">isis_lsp</a></td></tr>
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a8d2e33bd90ef90a512f0a6bdf2bc31fa">ISIS_MAX_CIRCUITS</a>&#160;&#160;&#160;32</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a99cb1e872b18fd541d954846ec30aa7f">LSP_EQUAL</a>&#160;&#160;&#160;1</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a2b334f17cd54fd535379deac75b7e8f0">LSP_NEWER</a>&#160;&#160;&#160;2</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a3902417a88de806e8b32c2a5930eb9bc">LSP_OLDER</a>&#160;&#160;&#160;3</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a>(I)&#160;&#160;&#160;((I)[ISIS_SYS_ID_LEN])</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a>(I)&#160;&#160;&#160;((I)[ISIS_SYS_ID_LEN + 1])</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#ae0e8c8d24e44933781c2dd320ae224e1">OWNLSPID</a>(I)</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#af93f1d3b7e8764bd70960ee03596374b">lsp_db_init</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a9a8a9a67475d18e9a6f9f73bb73ec8cc">lsp_db_destroy</a> (<a class="el" href="structdict__t.html">dict_t</a> *lspdb)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a8987f46b1c21556ff1281a72cce6636a">lsp_tick</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="structthread.html">thread</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a9088e620d5a41dd5a661feb5de44dc64">lsp_l1_generate</a> (struct <a class="el" href="structisis__area.html">isis_area</a> *area)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a9bb0ebbebc92d3307a4018ca3d24f85e">lsp_l2_generate</a> (struct <a class="el" href="structisis__area.html">isis_area</a> *area)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#adc8acfaac35e9082714fb0f5cb47b606">lsp_refresh_l1</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="structthread.html">thread</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a73cd3b4cb76bb36a65016f3315dde31e">lsp_refresh_l2</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="structthread.html">thread</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a31456cf3ff9953708c1d0328a99bfacc">lsp_regenerate_schedule</a> (struct <a class="el" href="structisis__area.html">isis_area</a> *area)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#ad3a3875129a37eb5a3df3eaf3fcd49a1">lsp_l1_pseudo_generate</a> (struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *circuit)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a934808749ecec8173e1ba46880c80bd6">lsp_l2_pseudo_generate</a> (struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *circuit)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a9813405a112948deee3cb3c0b6b9e91b">lsp_l1_refresh_pseudo</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="structthread.html">thread</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a4dcda3f6c233b53554094b98811b3394">lsp_l2_refresh_pseudo</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="structthread.html">thread</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#ae815308b33a56b78b9a65809bc344ac4">isis_lsp_authinfo_check</a> (struct <a class="el" href="structstream.html">stream</a> *<a class="el" href="structstream.html">stream</a>, struct <a class="el" href="structisis__area.html">isis_area</a> *area, int pdulen, struct <a class="el" href="structisis__passwd.html">isis_passwd</a> *passwd)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structisis__lsp.html">isis_lsp</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#af43ff22a21554145c239b6c37556ce1a">lsp_new</a> (u_char *<a class="el" href="isis__tlv_8h.html#a2991a019d1da82fb5406bff5ab46dcf6">lsp_id</a>, u_int16_t <a class="el" href="isis__tlv_8h.html#a67f02ba3d294cb872271dc4d82ad7965">rem_lifetime</a>, u_int32_t <a class="el" href="isis__tlv_8h.html#a4deeb76ae77c7e5dca81a8c3a07e8c23">seq_num</a>, u_int8_t <a class="el" href="isis__pdu_8h.html#a83e5f4c3dca022e24977611cd0a028b6">lsp_bits</a>, u_int16_t <a class="el" href="structchecksum.html">checksum</a>, int level)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structisis__lsp.html">isis_lsp</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#af11fc334a37a7a089a4c5e2d44496110">lsp_new_from_stream_ptr</a> (struct <a class="el" href="structstream.html">stream</a> *<a class="el" href="structstream.html">stream</a>, u_int16_t <a class="el" href="isis__pdu_8h.html#a7f1310e3d90f89e9c60c543ffe337b3b">pdu_len</a>, struct <a class="el" href="structisis__lsp.html">isis_lsp</a> *lsp0, struct <a class="el" href="structisis__area.html">isis_area</a> *area)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a09d8f3bcc073c87f01c32b2f0994fb04">lsp_insert</a> (struct <a class="el" href="structisis__lsp.html">isis_lsp</a> *lsp, <a class="el" href="structdict__t.html">dict_t</a> *lspdb)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structisis__lsp.html">isis_lsp</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (u_char *<a class="el" href="prefix_8h.html#a68c0ada54c6414ef00bca919465286ac">id</a>, <a class="el" href="structdict__t.html">dict_t</a> *lspdb)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#ac59fd5f8a4d5e146a7d36dd6525e43ae">lsp_build_list</a> (u_char *start_id, u_char *stop_id, struct <a class="el" href="structlist.html">list</a> *<a class="el" href="structlist.html">list</a>, <a class="el" href="structdict__t.html">dict_t</a> *lspdb)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a66fb0f7dfcff76c23f14eaaf816b11f9">lsp_build_list_nonzero_ht</a> (u_char *start_id, u_char *stop_id, struct <a class="el" href="structlist.html">list</a> *<a class="el" href="structlist.html">list</a>, <a class="el" href="structdict__t.html">dict_t</a> *lspdb)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#ac59c6231af3791411278d2b5f3be2188">lsp_build_list_ssn</a> (struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *circuit, struct <a class="el" href="structlist.html">list</a> *<a class="el" href="structlist.html">list</a>, <a class="el" href="structdict__t.html">dict_t</a> *lspdb)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#ac9198965904e0c9a57ade0011b114d3f">lsp_search_and_destroy</a> (u_char *<a class="el" href="prefix_8h.html#a68c0ada54c6414ef00bca919465286ac">id</a>, <a class="el" href="structdict__t.html">dict_t</a> *lspdb)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a326bd66d63f17cf92421e5df0d29fe32">lsp_purge_dr</a> (u_char *<a class="el" href="prefix_8h.html#a68c0ada54c6414ef00bca919465286ac">id</a>, struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *circuit, int level)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a3b934844c90f614a6f5f4a2734a23e77">lsp_purge_non_exist</a> (struct <a class="el" href="structisis__link__state__hdr.html">isis_link_state_hdr</a> *lsp_hdr, struct <a class="el" href="structisis__area.html">isis_area</a> *area)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a04ba9b8f0efece8345a3f6e90be19da1">lsp_id_cmp</a> (u_char *id1, u_char *id2)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a299d8a18662f432a07979c177e2723f0">lsp_compare</a> (char *areatag, struct <a class="el" href="structisis__lsp.html">isis_lsp</a> *lsp, u_int32_t <a class="el" href="isis__tlv_8h.html#a4deeb76ae77c7e5dca81a8c3a07e8c23">seq_num</a>, u_int16_t <a class="el" href="structchecksum.html">checksum</a>, u_int16_t <a class="el" href="isis__tlv_8h.html#a67f02ba3d294cb872271dc4d82ad7965">rem_lifetime</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#ad5c26e2f2f08b4a76183ca91ff454ff9">lsp_update</a> (struct <a class="el" href="structisis__lsp.html">isis_lsp</a> *lsp, struct <a class="el" href="structisis__link__state__hdr.html">isis_link_state_hdr</a> *lsp_hdr, struct <a class="el" href="structstream.html">stream</a> *<a class="el" href="structstream.html">stream</a>, struct <a class="el" href="structisis__area.html">isis_area</a> *area, int level)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a95c7b93c607b9aba6b6697b136d9ad98">lsp_inc_seqnum</a> (struct <a class="el" href="structisis__lsp.html">isis_lsp</a> *lsp, u_int32_t <a class="el" href="isis__tlv_8h.html#a4deeb76ae77c7e5dca81a8c3a07e8c23">seq_num</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#a9a7fe85e348f02c16f09905ca70c6187">lsp_print_all</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>, <a class="el" href="structdict__t.html">dict_t</a> *lspdb, char detail, char dynhost)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__lsp_8h.html#ad77c0026eada513f7540756eb141c5db">lsp_bits2string</a> (u_char *)</td></tr>
</table>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="a8d2e33bd90ef90a512f0a6bdf2bc31fa"></a><!-- doxytag: member="isis_lsp.h::ISIS_MAX_CIRCUITS" ref="a8d2e33bd90ef90a512f0a6bdf2bc31fa" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ISIS_MAX_CIRCUITS&#160;&#160;&#160;32</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8h_source.html#l00029">29</a> of file <a class="el" href="isis__lsp_8h_source.html">isis_lsp.h</a>.</p>

</div>
</div>
<a class="anchor" id="a99cb1e872b18fd541d954846ec30aa7f"></a><!-- doxytag: member="isis_lsp.h::LSP_EQUAL" ref="a99cb1e872b18fd541d954846ec30aa7f" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSP_EQUAL&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8h_source.html#l00105">105</a> of file <a class="el" href="isis__lsp_8h_source.html">isis_lsp.h</a>.</p>

</div>
</div>
<a class="anchor" id="a3d17e3f51a6b45aa8a777ec4b9ec3100"></a><!-- doxytag: member="isis_lsp.h::LSP_FRAGMENT" ref="a3d17e3f51a6b45aa8a777ec4b9ec3100" args="(I)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSP_FRAGMENT</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">I</td><td>)</td>
          <td>&#160;&#160;&#160;((I)[ISIS_SYS_ID_LEN + 1])</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8h_source.html#l00110">110</a> of file <a class="el" href="isis__lsp_8h_source.html">isis_lsp.h</a>.</p>

</div>
</div>
<a class="anchor" id="a2b334f17cd54fd535379deac75b7e8f0"></a><!-- doxytag: member="isis_lsp.h::LSP_NEWER" ref="a2b334f17cd54fd535379deac75b7e8f0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSP_NEWER&#160;&#160;&#160;2</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8h_source.html#l00106">106</a> of file <a class="el" href="isis__lsp_8h_source.html">isis_lsp.h</a>.</p>

</div>
</div>
<a class="anchor" id="a3902417a88de806e8b32c2a5930eb9bc"></a><!-- doxytag: member="isis_lsp.h::LSP_OLDER" ref="a3902417a88de806e8b32c2a5930eb9bc" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSP_OLDER&#160;&#160;&#160;3</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8h_source.html#l00107">107</a> of file <a class="el" href="isis__lsp_8h_source.html">isis_lsp.h</a>.</p>

</div>
</div>
<a class="anchor" id="a15ad7ce72dee875930a28bec035f7b71"></a><!-- doxytag: member="isis_lsp.h::LSP_PSEUDO_ID" ref="a15ad7ce72dee875930a28bec035f7b71" args="(I)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSP_PSEUDO_ID</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">I</td><td>)</td>
          <td>&#160;&#160;&#160;((I)[ISIS_SYS_ID_LEN])</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8h_source.html#l00109">109</a> of file <a class="el" href="isis__lsp_8h_source.html">isis_lsp.h</a>.</p>

</div>
</div>
<a class="anchor" id="ae0e8c8d24e44933781c2dd320ae224e1"></a><!-- doxytag: member="isis_lsp.h::OWNLSPID" ref="ae0e8c8d24e44933781c2dd320ae224e1" args="(I)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OWNLSPID</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">I</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> ((<a class="code" href="md5_8c.html#aa33f2e8f2d68506493eccef4bc022cb5">I</a>), <a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);\
        (<a class="code" href="md5_8c.html#aa33f2e8f2d68506493eccef4bc022cb5">I</a>)[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>] = 0;\
        (<a class="code" href="md5_8c.html#aa33f2e8f2d68506493eccef4bc022cb5">I</a>)[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 1] = 0
</pre></div>
<p>Definition at line <a class="el" href="isis__lsp_8h_source.html#l00111">111</a> of file <a class="el" href="isis__lsp_8h_source.html">isis_lsp.h</a>.</p>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ae815308b33a56b78b9a65809bc344ac4"></a><!-- doxytag: member="isis_lsp.h::isis_lsp_authinfo_check" ref="ae815308b33a56b78b9a65809bc344ac4" args="(struct stream *stream, struct isis_area *area, int pdulen, struct isis_passwd *passwd)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int isis_lsp_authinfo_check </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structstream.html">stream</a> *&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structisis__area.html">isis_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>pdulen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structisis__passwd.html">isis_passwd</a> *&#160;</td>
          <td class="paramname"><em>passwd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l00344">344</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  uint32_t expected = 0, found;
  <span class="keyword">struct </span><a class="code" href="structtlvs.html">tlvs</a> <a class="code" href="structtlvs.html">tlvs</a>;
  <span class="keywordtype">int</span> retval = 0;

  expected |= <a class="code" href="isis__tlv_8h.html#a493ed26a4a2decc55275bd699df9a4a8">TLVFLAG_AUTH_INFO</a>;
  retval = <a class="code" href="isis__tlv_8c.html#aad6fa3b6cc5e93707f75d8247f8787c8">parse_tlvs</a> (area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>, stream-&gt;<a class="code" href="structstream.html#aa204feef08c4dcb72bf774680da7a864">data</a> +
               <a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a> + <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>,
               pdulen - <a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a>
               - <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>, &amp;expected, &amp;found, &amp;<a class="code" href="structtlvs.html">tlvs</a>);
  <span class="keywordflow">if</span> (retval || !(found &amp; <a class="code" href="isis__tlv_8h.html#a493ed26a4a2decc55275bd699df9a4a8">TLVFLAG_AUTH_INFO</a>))
    <span class="keywordflow">return</span> 1;           <span class="comment">/* Auth fail (parsing failed or no auth-tlv) */</span>

  <span class="keywordflow">return</span> <a class="code" href="isis__pdu_8c.html#aefd5a8caa169a427e30d599b51ab52e9">authentication_check</a> (passwd, &amp;<a class="code" href="structtlvs.html">tlvs</a>.<a class="code" href="structtlvs.html#a53dc2cb65bc632c84b3d702ab1dc16ce">auth_info</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad77c0026eada513f7540756eb141c5db"></a><!-- doxytag: member="isis_lsp.h::lsp_bits2string" ref="ad77c0026eada513f7540756eb141c5db" args="(u_char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* lsp_bits2string </td>
          <td>(</td>
          <td class="paramtype">u_char *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l00673">673</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">char</span> *pos = <a class="code" href="isis__lsp_8c.html#ad3fb467068fe650f05f2e15b29a6cdf3">lsp_bits_string</a>;

  <span class="keywordflow">if</span> (!*<a class="code" href="isis__pdu_8h.html#a83e5f4c3dca022e24977611cd0a028b6">lsp_bits</a>)
    <span class="keywordflow">return</span> <span class="stringliteral">&quot; none&quot;</span>;

  <span class="comment">/* we only focus on the default metric */</span>
  pos += sprintf (pos, <span class="stringliteral">&quot;%d/&quot;</span>,
          <a class="code" href="isis__constants_8h.html#acb0c822a1f2ac5ae6f8f126b9ff40c1a">ISIS_MASK_LSP_ATT_DEFAULT_BIT</a> (*<a class="code" href="isis__pdu_8h.html#a83e5f4c3dca022e24977611cd0a028b6">lsp_bits</a>) ? 1 : 0);

  pos += sprintf (pos, <span class="stringliteral">&quot;%d/&quot;</span>,
          <a class="code" href="isis__constants_8h.html#add4793b649af03283f05960b902635e7">ISIS_MASK_LSP_PARTITION_BIT</a> (*<a class="code" href="isis__pdu_8h.html#a83e5f4c3dca022e24977611cd0a028b6">lsp_bits</a>) ? 1 : 0);

  pos += sprintf (pos, <span class="stringliteral">&quot;%d&quot;</span>, <a class="code" href="isis__constants_8h.html#a639588aea28dd1c81a81576d97df28cb">ISIS_MASK_LSP_OL_BIT</a> (*<a class="code" href="isis__pdu_8h.html#a83e5f4c3dca022e24977611cd0a028b6">lsp_bits</a>) ? 1 : 0);

  *(pos) = <span class="charliteral">&#39;\0&#39;</span>;

  <span class="keywordflow">return</span> <a class="code" href="isis__lsp_8c.html#ad3fb467068fe650f05f2e15b29a6cdf3">lsp_bits_string</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac59fd5f8a4d5e146a7d36dd6525e43ae"></a><!-- doxytag: member="isis_lsp.h::lsp_build_list" ref="ac59fd5f8a4d5e146a7d36dd6525e43ae" args="(u_char *start_id, u_char *stop_id, struct list *list, dict_t *lspdb)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void lsp_build_list </td>
          <td>(</td>
          <td class="paramtype">u_char *&#160;</td>
          <td class="paramname"><em>start_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_char *&#160;</td>
          <td class="paramname"><em>stop_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>lspdb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l00568">568</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structdnode__t.html">dnode_t</a> *first, *last, *curr;

  first = <a class="code" href="dict_8c.html#aaee9b7ed8b80f9f2dfab916a22c173ee">dict_lower_bound</a> (lspdb, start_id);
  <span class="keywordflow">if</span> (!first)
    <span class="keywordflow">return</span>;

  last = <a class="code" href="dict_8c.html#a6d6f2d4cc66e3859fe47d39b82cfd7ee">dict_upper_bound</a> (lspdb, stop_id);

  curr = first;

  <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (list, first-&gt;<a class="code" href="structdnode__t.html#afe56267c05f044b14097c38595f4a1a4">dict_data</a>);

  <span class="keywordflow">while</span> (curr)
    {
      curr = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a> (lspdb, curr);
      <span class="keywordflow">if</span> (curr)
    <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (list, curr-&gt;<a class="code" href="structdnode__t.html#afe56267c05f044b14097c38595f4a1a4">dict_data</a>);
      <span class="keywordflow">if</span> (curr == last)
    <span class="keywordflow">break</span>;
    }

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a66fb0f7dfcff76c23f14eaaf816b11f9"></a><!-- doxytag: member="isis_lsp.h::lsp_build_list_nonzero_ht" ref="a66fb0f7dfcff76c23f14eaaf816b11f9" args="(u_char *start_id, u_char *stop_id, struct list *list, dict_t *lspdb)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void lsp_build_list_nonzero_ht </td>
          <td>(</td>
          <td class="paramtype">u_char *&#160;</td>
          <td class="paramname"><em>start_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_char *&#160;</td>
          <td class="paramname"><em>stop_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>lspdb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l00535">535</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structdnode__t.html">dnode_t</a> *first, *last, *curr;

  first = <a class="code" href="dict_8c.html#aaee9b7ed8b80f9f2dfab916a22c173ee">dict_lower_bound</a> (lspdb, start_id);
  <span class="keywordflow">if</span> (!first)
    <span class="keywordflow">return</span>;

  last = <a class="code" href="dict_8c.html#a6d6f2d4cc66e3859fe47d39b82cfd7ee">dict_upper_bound</a> (lspdb, stop_id);

  curr = first;

  <span class="keywordflow">if</span> (((<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a> *) (curr-&gt;<a class="code" href="structdnode__t.html#afe56267c05f044b14097c38595f4a1a4">dict_data</a>))-&gt;lsp_header-&gt;rem_lifetime)
    <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (list, first-&gt;<a class="code" href="structdnode__t.html#afe56267c05f044b14097c38595f4a1a4">dict_data</a>);

  <span class="keywordflow">while</span> (curr)
    {
      curr = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a> (lspdb, curr);
      <span class="keywordflow">if</span> (curr &amp;&amp;
      ((<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a> *) (curr-&gt;<a class="code" href="structdnode__t.html#afe56267c05f044b14097c38595f4a1a4">dict_data</a>))-&gt;lsp_header-&gt;rem_lifetime)
    <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (list, curr-&gt;<a class="code" href="structdnode__t.html#afe56267c05f044b14097c38595f4a1a4">dict_data</a>);
      <span class="keywordflow">if</span> (curr == last)
    <span class="keywordflow">break</span>;
    }

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac59c6231af3791411278d2b5f3be2188"></a><!-- doxytag: member="isis_lsp.h::lsp_build_list_ssn" ref="ac59c6231af3791411278d2b5f3be2188" args="(struct isis_circuit *circuit, struct list *list, dict_t *lspdb)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void lsp_build_list_ssn </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *&#160;</td>
          <td class="paramname"><em>circuit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>lspdb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l00599">599</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structdnode__t.html">dnode_t</a> *dnode, *next;
  <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;

  dnode = <a class="code" href="dict_8c.html#a2b439ffb63f9b3089d0306ec3b26672f">dict_first</a> (lspdb);
  <span class="keywordflow">while</span> (dnode != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      next = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a> (lspdb, dnode);
      lsp = <a class="code" href="dict_8h.html#a17fccc85aae3874de7152f103d5945bc">dnode_get</a> (dnode);
      <span class="keywordflow">if</span> (<a class="code" href="isis__flags_8h.html#a7d42f17e426ff47043c37733fc3c672d">ISIS_CHECK_FLAG</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a03d0dd350cd760986f4907c5df08363a">SSNflags</a>, circuit))
    <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (list, lsp);
      dnode = next;
    }

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a299d8a18662f432a07979c177e2723f0"></a><!-- doxytag: member="isis_lsp.h::lsp_compare" ref="a299d8a18662f432a07979c177e2723f0" args="(char *areatag, struct isis_lsp *lsp, u_int32_t seq_num, u_int16_t checksum, u_int16_t rem_lifetime)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int lsp_compare </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>areatag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structisis__lsp.html">isis_lsp</a> *&#160;</td>
          <td class="paramname"><em>lsp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_int32_t&#160;</td>
          <td class="paramname"><em>seq_num</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_int16_t&#160;</td>
          <td class="paramname"><em>checksum</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_int16_t&#160;</td>
          <td class="paramname"><em>rem_lifetime</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l00245">245</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="comment">/* no point in double ntohl on seqnum */</span>
  <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a> == <a class="code" href="isis__pdu_8h.html#a4deeb76ae77c7e5dca81a8c3a07e8c23">seq_num</a> &amp;&amp;
      lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#afb16ee6cc606527cc2705773cc2b79c4">checksum</a> == <a class="code" href="structchecksum.html">checksum</a> &amp;&amp;
      <span class="comment">/*comparing with 0, no need to do ntohl */</span>
      ((lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a> == 0 &amp;&amp; <a class="code" href="isis__pdu_8h.html#a67f02ba3d294cb872271dc4d82ad7965">rem_lifetime</a> == 0) ||
       (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a> != 0 &amp;&amp; <a class="code" href="isis__pdu_8h.html#a67f02ba3d294cb872271dc4d82ad7965">rem_lifetime</a> != 0)))
    {
      <span class="keywordflow">if</span> (<a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#ab16b82eb25717295303c7099035d9dc9">DEBUG_SNP_PACKETS</a>)
    {
      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Snp (%s): LSP %s seq 0x%08x, cksum 0x%04x,&quot;</span>
              <span class="stringliteral">&quot; lifetime %us&quot;</span>,
              areatag,
              <a class="code" href="isis__misc_8c.html#a3a0e7f92008e3167e2c09b8761d06766">rawlspid_print</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>),
              ntohl (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a>),
              ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#afb16ee6cc606527cc2705773cc2b79c4">checksum</a>),
              ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a>));
      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Snp (%s):         is equal to ours seq 0x%08x,&quot;</span>
              <span class="stringliteral">&quot; cksum 0x%04x, lifetime %us&quot;</span>,
              areatag,
              ntohl (<a class="code" href="isis__pdu_8h.html#a4deeb76ae77c7e5dca81a8c3a07e8c23">seq_num</a>), ntohs (<a class="code" href="structchecksum.html">checksum</a>), ntohs (<a class="code" href="isis__pdu_8h.html#a67f02ba3d294cb872271dc4d82ad7965">rem_lifetime</a>));
    }
      <span class="keywordflow">return</span> <a class="code" href="isis__lsp_8h.html#a99cb1e872b18fd541d954846ec30aa7f">LSP_EQUAL</a>;
    }

  <span class="keywordflow">if</span> (ntohl (<a class="code" href="isis__pdu_8h.html#a4deeb76ae77c7e5dca81a8c3a07e8c23">seq_num</a>) &gt;= ntohl (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a>))
    {
      <span class="keywordflow">if</span> (<a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#ab16b82eb25717295303c7099035d9dc9">DEBUG_SNP_PACKETS</a>)
    {
      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Snp (%s): LSP %s seq 0x%08x, cksum 0x%04x,&quot;</span>
              <span class="stringliteral">&quot; lifetime %us&quot;</span>,
              areatag,
              <a class="code" href="isis__misc_8c.html#a3a0e7f92008e3167e2c09b8761d06766">rawlspid_print</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>),
              ntohl (<a class="code" href="isis__pdu_8h.html#a4deeb76ae77c7e5dca81a8c3a07e8c23">seq_num</a>), ntohs (<a class="code" href="structchecksum.html">checksum</a>), ntohs (<a class="code" href="isis__pdu_8h.html#a67f02ba3d294cb872271dc4d82ad7965">rem_lifetime</a>));
      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Snp (%s):       is newer than ours seq 0x%08x, &quot;</span>
              <span class="stringliteral">&quot;cksum 0x%04x, lifetime %us&quot;</span>,
              areatag,
              ntohl (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a>),
              ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#afb16ee6cc606527cc2705773cc2b79c4">checksum</a>),
              ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a>));
    }
      <span class="keywordflow">return</span> <a class="code" href="isis__lsp_8h.html#a2b334f17cd54fd535379deac75b7e8f0">LSP_NEWER</a>;
    }
  <span class="keywordflow">if</span> (<a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#ab16b82eb25717295303c7099035d9dc9">DEBUG_SNP_PACKETS</a>)
    {
      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a>
    (<span class="stringliteral">&quot;ISIS-Snp (%s): LSP %s seq 0x%08x, cksum 0x%04x, lifetime %us&quot;</span>,
     areatag, <a class="code" href="isis__misc_8c.html#a3a0e7f92008e3167e2c09b8761d06766">rawlspid_print</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>), ntohl (<a class="code" href="isis__pdu_8h.html#a4deeb76ae77c7e5dca81a8c3a07e8c23">seq_num</a>),
     ntohs (<a class="code" href="structchecksum.html">checksum</a>), ntohs (<a class="code" href="isis__pdu_8h.html#a67f02ba3d294cb872271dc4d82ad7965">rem_lifetime</a>));
      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Snp (%s):       is older than ours seq 0x%08x,&quot;</span>
          <span class="stringliteral">&quot; cksum 0x%04x, lifetime %us&quot;</span>, areatag,
          ntohl (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a>),
          ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#afb16ee6cc606527cc2705773cc2b79c4">checksum</a>),
          ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a>));
    }

  <span class="keywordflow">return</span> <a class="code" href="isis__lsp_8h.html#a3902417a88de806e8b32c2a5930eb9bc">LSP_OLDER</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9a8a9a67475d18e9a6f9f73bb73ec8cc"></a><!-- doxytag: member="isis_lsp.h::lsp_db_destroy" ref="a9a8a9a67475d18e9a6f9f73bb73ec8cc" args="(dict_t *lspdb)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void lsp_db_destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>lspdb</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l00166">166</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structdnode__t.html">dnode_t</a> *dnode, *next;
  <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;

  dnode = <a class="code" href="dict_8c.html#a2b439ffb63f9b3089d0306ec3b26672f">dict_first</a> (lspdb);
  <span class="keywordflow">while</span> (dnode)
    {
      next = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a> (lspdb, dnode);
      lsp = <a class="code" href="dict_8h.html#a17fccc85aae3874de7152f103d5945bc">dnode_get</a> (dnode);
      <a class="code" href="isis__lsp_8c.html#a8910aea25a4f0680a4b4945609aaf97b">lsp_destroy</a> (lsp);
      <a class="code" href="dict_8c.html#ad820577e4fba81f761665f16356823ab">dict_delete_free</a> (lspdb, dnode);
      dnode = next;
    }

  <a class="code" href="dict_8c.html#ab1d4e786dee93b4dc601d2f339ff81fd">dict_free</a> (lspdb);

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af93f1d3b7e8764bd70960ee03596374b"></a><!-- doxytag: member="isis_lsp.h::lsp_db_init" ref="af93f1d3b7e8764bd70960ee03596374b" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structdict__t.html">dict_t</a>* lsp_db_init </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l00073">73</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structdict__t.html">dict_t</a> *dict;

  dict = <a class="code" href="dict_8c.html#a1a1783c8987d21d1d1078f80cb614679">dict_create</a> (<a class="code" href="dict_8h.html#a7cc0c7f4164b72cfc0c8e543d6fd3951">DICTCOUNT_T_MAX</a>, (<a class="code" href="dict_8h.html#a92a0ce54764499eee8e3584a7b8795d9">dict_comp_t</a>) <a class="code" href="isis__lsp_8c.html#a04ba9b8f0efece8345a3f6e90be19da1">lsp_id_cmp</a>);

  <span class="keywordflow">return</span> dict;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a04ba9b8f0efece8345a3f6e90be19da1"></a><!-- doxytag: member="isis_lsp.h::lsp_id_cmp" ref="a04ba9b8f0efece8345a3f6e90be19da1" args="(u_char *id1, u_char *id2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int lsp_id_cmp </td>
          <td>(</td>
          <td class="paramtype">u_char *&#160;</td>
          <td class="paramname"><em>id1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_char *&#160;</td>
          <td class="paramname"><em>id2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l00067">67</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (id1, id2, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 2);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a95c7b93c607b9aba6b6697b136d9ad98"></a><!-- doxytag: member="isis_lsp.h::lsp_inc_seqnum" ref="a95c7b93c607b9aba6b6697b136d9ad98" args="(struct isis_lsp *lsp, u_int32_t seq_num)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void lsp_inc_seqnum </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__lsp.html">isis_lsp</a> *&#160;</td>
          <td class="paramname"><em>lsp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_int32_t&#160;</td>
          <td class="paramname"><em>seq_num</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l00307">307</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  u_int32_t newseq;

  <span class="keywordflow">if</span> (<a class="code" href="isis__pdu_8h.html#a4deeb76ae77c7e5dca81a8c3a07e8c23">seq_num</a> == 0 || ntohl (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a>) &gt; <a class="code" href="isis__pdu_8h.html#a4deeb76ae77c7e5dca81a8c3a07e8c23">seq_num</a>)
    newseq = ntohl (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a>) + 1;
  <span class="keywordflow">else</span>
    newseq = <a class="code" href="isis__pdu_8h.html#a4deeb76ae77c7e5dca81a8c3a07e8c23">seq_num</a>++;

  lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a> = htonl (newseq);
  <a class="code" href="checksum_8c.html#a097fa5404eb654e8e112bb954bf4ef15">fletcher_checksum</a> (<a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>) + 12,
           ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6f17d9f3a17625db25044ff0ff3da330">pdu_len</a>) - 12, 12);

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a09d8f3bcc073c87f01c32b2f0994fb04"></a><!-- doxytag: member="isis_lsp.h::lsp_insert" ref="a09d8f3bcc073c87f01c32b2f0994fb04" args="(struct isis_lsp *lsp, dict_t *lspdb)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void lsp_insert </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__lsp.html">isis_lsp</a> *&#160;</td>
          <td class="paramname"><em>lsp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>lspdb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l00526">526</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="dict_8c.html#a914a77195b15984573e3dac49f38e5f2">dict_alloc_insert</a> (lspdb, lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>, lsp);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9088e620d5a41dd5a661feb5de44dc64"></a><!-- doxytag: member="isis_lsp.h::lsp_l1_generate" ref="a9088e620d5a41dd5a661feb5de44dc64" args="(struct isis_area *area)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int lsp_l1_generate </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__area.html">isis_area</a> *&#160;</td>
          <td class="paramname"><em>area</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l01463">1463</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, area-&gt;<a class="code" href="structisis__area.html#aa13bb9e9d007a177991fad0bbaf5b8c0">t_lsp_refresh</a>[0], <a class="code" href="isis__lsp_8c.html#adc8acfaac35e9082714fb0f5cb47b606">lsp_refresh_l1</a>, area,
           <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a>);

  <span class="keywordflow">return</span> <a class="code" href="isis__lsp_8c.html#ae63b4445cafde6ccff7526b6d4570735">lsp_generate_non_pseudo</a> (area, 1);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad3a3875129a37eb5a3df3eaf3fcd49a1"></a><!-- doxytag: member="isis_lsp.h::lsp_l1_pseudo_generate" ref="ad3a3875129a37eb5a3df3eaf3fcd49a1" args="(struct isis_circuit *circuit)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int lsp_l1_pseudo_generate </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *&#160;</td>
          <td class="paramname"><em>circuit</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l01883">1883</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
  u_char <span class="keywordtype">id</span>[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 2];
  <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> ref_time;

  <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (<span class="keywordtype">id</span>, <a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
  <a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (<span class="keywordtype">id</span>) = 0;
  <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (<span class="keywordtype">id</span>) = circuit-&gt;<a class="code" href="structisis__circuit.html#a10453f6bcc1e8f1cb466240a81836ba9">circuit_id</a>;

  <span class="comment">/*</span>
<span class="comment">   * If for some reason have a pseudo LSP in the db already -&gt; regenerate</span>
<span class="comment">   */</span>
  <span class="keywordflow">if</span> (<a class="code" href="isis__lsp_8c.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (<span class="keywordtype">id</span>, circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[0]))
    <span class="keywordflow">return</span> <a class="code" href="isis__lsp_8c.html#a122acef1e7b0bdf1e7f683c670525723">lsp_pseudo_regenerate</a> (circuit, 1);
  lsp = <a class="code" href="isis__lsp_8c.html#af43ff22a21554145c239b6c37556ce1a">lsp_new</a> (<span class="keywordtype">id</span>, circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#af0e5e6cfa7b7536e0700dd3645025d9b">max_lsp_lifetime</a>[0],
         1, circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a>, 0, 1);

  <a class="code" href="isis__lsp_8c.html#a24dc6ec3f264c96f18a95ea1d6e5f1d2">lsp_build_pseudo</a> (lsp, circuit, 1);

  lsp-&gt;<a class="code" href="structisis__lsp.html#a92fb19d67740e3bfde012e19af97b7d3">own_lsp</a> = 1;
  <a class="code" href="isis__lsp_8c.html#a09d8f3bcc073c87f01c32b2f0994fb04">lsp_insert</a> (lsp, circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[0]);
  <a class="code" href="isis__flags_8h.html#a57f45d9b4a8c70c53f796d96e5555fac">ISIS_FLAGS_SET_ALL</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a96d155dbf3bbd20256cf7a68c8d9fd20">SRMflags</a>);

  ref_time = circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[0] &gt; <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> ?
    <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> : circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[0];

  <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#afbf6ada19d1fda134ede0986124680ac">t_refresh_pseudo_lsp</a>[0],
           <a class="code" href="isis__lsp_8c.html#a9813405a112948deee3cb3c0b6b9e91b">lsp_l1_refresh_pseudo</a>, circuit,
           <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (ref_time, <a class="code" href="isis__constants_8h.html#adfaaf0b4e69adf9ae9c8dc47e3e00918">MAX_AGE_JITTER</a>));

  <span class="keywordflow">return</span> <a class="code" href="isis__lsp_8c.html#a31456cf3ff9953708c1d0328a99bfacc">lsp_regenerate_schedule</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9813405a112948deee3cb3c0b6b9e91b"></a><!-- doxytag: member="isis_lsp.h::lsp_l1_refresh_pseudo" ref="a9813405a112948deee3cb3c0b6b9e91b" args="(struct thread *thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int lsp_l1_refresh_pseudo </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>thread</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l01857">1857</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
  <span class="keywordtype">int</span> retval;
  <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> ref_time;

  circuit = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);

  <span class="keywordflow">if</span> (!circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#adb24376d01beb41cab0ed0c49c3a214c">is_dr</a>[0])
    <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#ac694b0bd16857a3d50deea71f78e8b7f">ISIS_ERROR</a>;      <span class="comment">/* FIXME: purge and such */</span>

  circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#afbf6ada19d1fda134ede0986124680ac">t_refresh_pseudo_lsp</a>[0] = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  retval = <a class="code" href="isis__lsp_8c.html#a122acef1e7b0bdf1e7f683c670525723">lsp_pseudo_regenerate</a> (circuit, 1);

  ref_time = circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[0] &gt; <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> ?
    <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> : circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[0];

  <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#afbf6ada19d1fda134ede0986124680ac">t_refresh_pseudo_lsp</a>[0],
           <a class="code" href="isis__lsp_8c.html#a9813405a112948deee3cb3c0b6b9e91b">lsp_l1_refresh_pseudo</a>, circuit,
           <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (ref_time, <a class="code" href="isis__constants_8h.html#adfaaf0b4e69adf9ae9c8dc47e3e00918">MAX_AGE_JITTER</a>));

  <span class="keywordflow">return</span> retval;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9bb0ebbebc92d3307a4018ca3d24f85e"></a><!-- doxytag: member="isis_lsp.h::lsp_l2_generate" ref="a9bb0ebbebc92d3307a4018ca3d24f85e" args="(struct isis_area *area)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int lsp_l2_generate </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__area.html">isis_area</a> *&#160;</td>
          <td class="paramname"><em>area</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l01475">1475</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, area-&gt;<a class="code" href="structisis__area.html#aa13bb9e9d007a177991fad0bbaf5b8c0">t_lsp_refresh</a>[1], <a class="code" href="isis__lsp_8c.html#a73cd3b4cb76bb36a65016f3315dde31e">lsp_refresh_l2</a>, area,
           <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a>);

  <span class="keywordflow">return</span> <a class="code" href="isis__lsp_8c.html#ae63b4445cafde6ccff7526b6d4570735">lsp_generate_non_pseudo</a> (area, 2);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a934808749ecec8173e1ba46880c80bd6"></a><!-- doxytag: member="isis_lsp.h::lsp_l2_pseudo_generate" ref="a934808749ecec8173e1ba46880c80bd6" args="(struct isis_circuit *circuit)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int lsp_l2_pseudo_generate </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *&#160;</td>
          <td class="paramname"><em>circuit</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l01943">1943</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
  u_char <span class="keywordtype">id</span>[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 2];
  <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> ref_time;

  <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (<span class="keywordtype">id</span>, <a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
  <a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (<span class="keywordtype">id</span>) = 0;
  <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (<span class="keywordtype">id</span>) = circuit-&gt;<a class="code" href="structisis__circuit.html#a10453f6bcc1e8f1cb466240a81836ba9">circuit_id</a>;

  <span class="keywordflow">if</span> (<a class="code" href="isis__lsp_8c.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (<span class="keywordtype">id</span>, circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[1]))
    <span class="keywordflow">return</span> <a class="code" href="isis__lsp_8c.html#a122acef1e7b0bdf1e7f683c670525723">lsp_pseudo_regenerate</a> (circuit, 2);

  lsp = <a class="code" href="isis__lsp_8c.html#af43ff22a21554145c239b6c37556ce1a">lsp_new</a> (<span class="keywordtype">id</span>, circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#af0e5e6cfa7b7536e0700dd3645025d9b">max_lsp_lifetime</a>[1],
         1, circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a>, 0, 2);

  <a class="code" href="isis__lsp_8c.html#a24dc6ec3f264c96f18a95ea1d6e5f1d2">lsp_build_pseudo</a> (lsp, circuit, 2);

  ref_time = circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[1] &gt; <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> ?
    <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> : circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[1];


  lsp-&gt;<a class="code" href="structisis__lsp.html#a92fb19d67740e3bfde012e19af97b7d3">own_lsp</a> = 1;
  <a class="code" href="isis__lsp_8c.html#a09d8f3bcc073c87f01c32b2f0994fb04">lsp_insert</a> (lsp, circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[1]);
  <a class="code" href="isis__flags_8h.html#a57f45d9b4a8c70c53f796d96e5555fac">ISIS_FLAGS_SET_ALL</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a96d155dbf3bbd20256cf7a68c8d9fd20">SRMflags</a>);

  <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#afbf6ada19d1fda134ede0986124680ac">t_refresh_pseudo_lsp</a>[1],
           <a class="code" href="isis__lsp_8c.html#a4dcda3f6c233b53554094b98811b3394">lsp_l2_refresh_pseudo</a>, circuit,
           <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (ref_time, <a class="code" href="isis__constants_8h.html#adfaaf0b4e69adf9ae9c8dc47e3e00918">MAX_AGE_JITTER</a>));

  <span class="keywordflow">return</span> <a class="code" href="isis__lsp_8c.html#a31456cf3ff9953708c1d0328a99bfacc">lsp_regenerate_schedule</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4dcda3f6c233b53554094b98811b3394"></a><!-- doxytag: member="isis_lsp.h::lsp_l2_refresh_pseudo" ref="a4dcda3f6c233b53554094b98811b3394" args="(struct thread *thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int lsp_l2_refresh_pseudo </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>thread</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l01918">1918</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
  <span class="keywordtype">int</span> retval;
  <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> ref_time;
  circuit = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);

  <span class="keywordflow">if</span> (!circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#adb24376d01beb41cab0ed0c49c3a214c">is_dr</a>[1])
    <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#ac694b0bd16857a3d50deea71f78e8b7f">ISIS_ERROR</a>;      <span class="comment">/* FIXME: purge and such */</span>

  circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#afbf6ada19d1fda134ede0986124680ac">t_refresh_pseudo_lsp</a>[1] = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  retval = <a class="code" href="isis__lsp_8c.html#a122acef1e7b0bdf1e7f683c670525723">lsp_pseudo_regenerate</a> (circuit, 2);

  ref_time = circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[1] &gt; <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> ?
    <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> : circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[1];

  <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#afbf6ada19d1fda134ede0986124680ac">t_refresh_pseudo_lsp</a>[1],
           <a class="code" href="isis__lsp_8c.html#a4dcda3f6c233b53554094b98811b3394">lsp_l2_refresh_pseudo</a>, circuit,
           <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (ref_time, <a class="code" href="isis__constants_8h.html#adfaaf0b4e69adf9ae9c8dc47e3e00918">MAX_AGE_JITTER</a>));

  <span class="keywordflow">return</span> retval;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af43ff22a21554145c239b6c37556ce1a"></a><!-- doxytag: member="isis_lsp.h::lsp_new" ref="af43ff22a21554145c239b6c37556ce1a" args="(u_char *lsp_id, u_int16_t rem_lifetime, u_int32_t seq_num, u_int8_t lsp_bits, u_int16_t checksum, int level)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structisis__lsp.html">isis_lsp</a>* lsp_new </td>
          <td>(</td>
          <td class="paramtype">u_char *&#160;</td>
          <td class="paramname"><em>lsp_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_int16_t&#160;</td>
          <td class="paramname"><em>rem_lifetime</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_int32_t&#160;</td>
          <td class="paramname"><em>seq_num</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_int8_t&#160;</td>
          <td class="paramname"><em>lsp_bits</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_int16_t&#160;</td>
          <td class="paramname"><em>checksum</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l00475">475</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;

  lsp = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167baa9874bec1ebdd728cf6272ccea1c930c">MTYPE_ISIS_LSP</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a>));
  <span class="keywordflow">if</span> (!lsp)
    {
      <span class="comment">/* FIXME: set lspdbol bit */</span>
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;lsp_new(): out of memory&quot;</span>);
      <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }
<span class="preprocessor">#ifdef LSP_MEMORY_PREASSIGN</span>
<span class="preprocessor"></span>  lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a> = <a class="code" href="stream_8c.html#a7117cdad9fa5e5ae633e0cf08d047459">stream_new</a> (1514); <span class="comment">/*Should be minimal mtu? yup... */</span>
<span class="preprocessor">#else</span>
<span class="preprocessor"></span>  <span class="comment">/* We need to do realloc on TLVs additions */</span>
  lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a> = <a class="code" href="regex_8c.html#ab7e36af3707843f77cc5b4e831c2fa6d">malloc</a> (<a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a> + <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>);
<span class="preprocessor">#endif </span><span class="comment">/* LSP_MEMORY_PREASSIGN */</span>
  <span class="keywordflow">if</span> (<a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (<a class="code" href="isis__pdu_8h.html#a2991a019d1da82fb5406bff5ab46dcf6">lsp_id</a>) == 0)
    lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
  lsp-&gt;<a class="code" href="structisis__lsp.html#a4495af44aa8d877f56b8e7ce00b47344">isis_header</a> = (<span class="keyword">struct </span><a class="code" href="structisis__fixed__hdr.html">isis_fixed_hdr</a> *) (<a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>));
  lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a> = (<span class="keyword">struct </span><a class="code" href="structisis__link__state__hdr.html">isis_link_state_hdr</a> *)
    (<a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>) + <a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a>);

  <span class="comment">/* at first we fill the FIXED HEADER */</span>
  (level == 1) ? <a class="code" href="isis__pdu_8c.html#a5bb1429f6b41964f060f6abbfb50b5bf">fill_fixed_hdr</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a4495af44aa8d877f56b8e7ce00b47344">isis_header</a>, <a class="code" href="isis__pdu_8h.html#a37bd70be235d213245350209287f9d69">L1_LINK_STATE</a>) :
    <a class="code" href="isis__pdu_8c.html#a5bb1429f6b41964f060f6abbfb50b5bf">fill_fixed_hdr</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a4495af44aa8d877f56b8e7ce00b47344">isis_header</a>, <a class="code" href="isis__pdu_8h.html#a0078daf40d7e45a7bdbd26a016dde2da">L2_LINK_STATE</a>);

  <span class="comment">/* now for the LSP HEADER */</span>
  <span class="comment">/* Minimal LSP PDU size */</span>
  lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6f17d9f3a17625db25044ff0ff3da330">pdu_len</a> = htons (<a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a> + <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>);
  <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>, <a class="code" href="isis__pdu_8h.html#a2991a019d1da82fb5406bff5ab46dcf6">lsp_id</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 2);
  lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#afb16ee6cc606527cc2705773cc2b79c4">checksum</a> = <a class="code" href="isis__pdu_8h.html#ac478e851f3af12545631aadafc9932ed">checksum</a>; <span class="comment">/* Provided in network order */</span>
  lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a> = htonl (<a class="code" href="isis__pdu_8h.html#a4deeb76ae77c7e5dca81a8c3a07e8c23">seq_num</a>);
  lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a> = htons (<a class="code" href="isis__pdu_8h.html#a67f02ba3d294cb872271dc4d82ad7965">rem_lifetime</a>);
  lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a405c4b662dc97846dcca65f5c851f485">lsp_bits</a> = <a class="code" href="isis__pdu_8h.html#a83e5f4c3dca022e24977611cd0a028b6">lsp_bits</a>;
  lsp-&gt;<a class="code" href="structisis__lsp.html#ab719e4479e4fc861c4cfa7a3c9d403c6">level</a> = level;
  lsp-&gt;<a class="code" href="structisis__lsp.html#aa2d9dce6fceedcb6af88a73f2f5a0616">age_out</a> = <a class="code" href="isis__constants_8h.html#a34e4027fe6ad8e371e370258da82dd23">ZERO_AGE_LIFETIME</a>;

  <a class="code" href="stream_8c.html#aa8fdf46961b0a0aa3d014bb602712076">stream_forward_endp</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>, <a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a> + <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>);

  <span class="keywordflow">if</span> (<a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#a133d8993848d3fa2c41270511f133eb7">DEBUG_EVENTS</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;New LSP with ID %s-%02x-%02x seqnum %08x&quot;</span>,
        <a class="code" href="isis__misc_8c.html#aabccf63144f92eecd0eb77f24ee98529">sysid_print</a> (<a class="code" href="isis__pdu_8h.html#a2991a019d1da82fb5406bff5ab46dcf6">lsp_id</a>), <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>),
        <a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>),
        ntohl (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a>));

  <span class="keywordflow">return</span> lsp;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af11fc334a37a7a089a4c5e2d44496110"></a><!-- doxytag: member="isis_lsp.h::lsp_new_from_stream_ptr" ref="af11fc334a37a7a089a4c5e2d44496110" args="(struct stream *stream, u_int16_t pdu_len, struct isis_lsp *lsp0, struct isis_area *area)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structisis__lsp.html">isis_lsp</a>* lsp_new_from_stream_ptr </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structstream.html">stream</a> *&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_int16_t&#160;</td>
          <td class="paramname"><em>pdu_len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structisis__lsp.html">isis_lsp</a> *&#160;</td>
          <td class="paramname"><em>lsp0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structisis__area.html">isis_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l00446">446</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;

  lsp = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167baa9874bec1ebdd728cf6272ccea1c930c">MTYPE_ISIS_LSP</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a>));
  <a class="code" href="isis__lsp_8c.html#a917a11f390e10660faa69faa510da442">lsp_update_data</a> (lsp, stream, area);

  <span class="keywordflow">if</span> (lsp0 == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <span class="comment">/*</span>
<span class="comment">       * zero lsp -&gt; create the list for fragments</span>
<span class="comment">       */</span>
      lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
    }
  <span class="keywordflow">else</span>
    {
      <span class="comment">/*</span>
<span class="comment">       * a fragment -&gt; set the backpointer and add this to zero lsps frag list</span>
<span class="comment">       */</span>
      lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#a3113261380202a14a924c31ca87cdee1">zero_lsp</a> = lsp0;
      <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (lsp0-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a>, lsp);
    }

  <span class="keywordflow">return</span> lsp;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9a7fe85e348f02c16f09905ca70c6187"></a><!-- doxytag: member="isis_lsp.h::lsp_print_all" ref="a9a7fe85e348f02c16f09905ca70c6187" args="(struct vty *vty, dict_t *lspdb, char detail, char dynhost)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int lsp_print_all </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>lspdb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>detail</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>dynhost</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l00880">880</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{

  <a class="code" href="structdnode__t.html">dnode_t</a> *node = <a class="code" href="dict_8c.html#a2b439ffb63f9b3089d0306ec3b26672f">dict_first</a> (lspdb), *next;
  <span class="keywordtype">int</span> lsp_count = 0;

  <span class="comment">/* print the title, for both modes */</span>
  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;LSP ID                   LSP Seq Num  LSP Checksum &quot;</span>
       <span class="stringliteral">&quot;LSP Holdtime ATT/P/OL%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="keywordflow">if</span> (detail == <a class="code" href="isis__misc_8h.html#aaf105ae5beaca1dee30ae54530691fcea9b67ed2ae41434b0cc2a75d7be8b9576">ISIS_UI_LEVEL_BRIEF</a>)
    {
      <span class="keywordflow">while</span> (node != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <span class="comment">/* I think it is unnecessary, so I comment it out */</span>
      <span class="comment">/* dict_contains (lspdb, node); */</span>
      next = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a> (lspdb, node);
      <a class="code" href="isis__lsp_8c.html#a613e1f38d40f5feb02c859dd8933b5c5">lsp_print</a> (node, vty, dynhost);
      node = next;
      lsp_count++;
    }
    }
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (detail == <a class="code" href="isis__misc_8h.html#aaf105ae5beaca1dee30ae54530691fcea92418876d4e4e759a009d13598364ae4">ISIS_UI_LEVEL_DETAIL</a>)
    {
      <span class="keywordflow">while</span> (node != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      next = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a> (lspdb, node);
      <a class="code" href="isis__lsp_8c.html#a2a648621d46f28687f81bf572bd3e711">lsp_print_detail</a> (node, vty, dynhost);
      node = next;
      lsp_count++;
    }
    }

  <span class="keywordflow">return</span> lsp_count;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a326bd66d63f17cf92421e5df0d29fe32"></a><!-- doxytag: member="isis_lsp.h::lsp_purge_dr" ref="a326bd66d63f17cf92421e5df0d29fe32" args="(u_char *id, struct isis_circuit *circuit, int level)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void lsp_purge_dr </td>
          <td>(</td>
          <td class="paramtype">u_char *&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *&#160;</td>
          <td class="paramname"><em>circuit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l02062">2062</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;

  lsp = <a class="code" href="isis__lsp_8c.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (<span class="keywordtype">id</span>, circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[<a class="code" href="structisis__lsp.html#ab719e4479e4fc861c4cfa7a3c9d403c6">level</a> - 1]);

  <span class="keywordflow">if</span> (lsp &amp;&amp; lsp-&gt;<a class="code" href="structisis__lsp.html#aab633c4836fd6efe80eed373b169fb73">purged</a> == 0)
    {
      lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a> = htons (0);
      lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6f17d9f3a17625db25044ff0ff3da330">pdu_len</a> =
    htons (<a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a> + <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>);
      lsp-&gt;<a class="code" href="structisis__lsp.html#aab633c4836fd6efe80eed373b169fb73">purged</a> = 0;
      <a class="code" href="checksum_8c.html#a097fa5404eb654e8e112bb954bf4ef15">fletcher_checksum</a> (<a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>) + 12,
               ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6f17d9f3a17625db25044ff0ff3da330">pdu_len</a>) - 12, 12);
      <a class="code" href="isis__flags_8h.html#a57f45d9b4a8c70c53f796d96e5555fac">ISIS_FLAGS_SET_ALL</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a96d155dbf3bbd20256cf7a68c8d9fd20">SRMflags</a>);
    }

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3b934844c90f614a6f5f4a2734a23e77"></a><!-- doxytag: member="isis_lsp.h::lsp_purge_non_exist" ref="a3b934844c90f614a6f5f4a2734a23e77" args="(struct isis_link_state_hdr *lsp_hdr, struct isis_area *area)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void lsp_purge_non_exist </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__link__state__hdr.html">isis_link_state_hdr</a> *&#160;</td>
          <td class="paramname"><em>lsp_hdr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structisis__area.html">isis_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l02087">2087</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;

  <span class="comment">/*</span>
<span class="comment">   * We need to create the LSP to be purged </span>
<span class="comment">   */</span>
  <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;LSP PURGE NON EXIST&quot;</span>);
  lsp = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167baa9874bec1ebdd728cf6272ccea1c930c">MTYPE_ISIS_LSP</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a>));
  <span class="comment">/*FIXME: BUG BUG BUG! the lsp doesn&#39;t exist here! */</span>
  <span class="comment">/*did smt here, maybe good probably not */</span>
  lsp-&gt;<a class="code" href="structisis__lsp.html#ab719e4479e4fc861c4cfa7a3c9d403c6">level</a> = ((lsp_hdr-&gt;<a class="code" href="structisis__link__state__hdr.html#a405c4b662dc97846dcca65f5c851f485">lsp_bits</a> &amp; <a class="code" href="isis__constants_8h.html#a9f40952694b8ae76b12e90808bd81229">LSPBIT_IST</a>) == <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>) ? 1 : 2;
  lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a> = <a class="code" href="stream_8c.html#a7117cdad9fa5e5ae633e0cf08d047459">stream_new</a> (<a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a> + <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>);
  lsp-&gt;<a class="code" href="structisis__lsp.html#a4495af44aa8d877f56b8e7ce00b47344">isis_header</a> = (<span class="keyword">struct </span><a class="code" href="structisis__fixed__hdr.html">isis_fixed_hdr</a> *) <a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>);
  <a class="code" href="isis__pdu_8c.html#a5bb1429f6b41964f060f6abbfb50b5bf">fill_fixed_hdr</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a4495af44aa8d877f56b8e7ce00b47344">isis_header</a>, (lsp-&gt;<a class="code" href="structisis__lsp.html#ab719e4479e4fc861c4cfa7a3c9d403c6">level</a> == 1) ? <a class="code" href="isis__pdu_8h.html#a37bd70be235d213245350209287f9d69">L1_LINK_STATE</a>
          : <a class="code" href="isis__pdu_8h.html#a0078daf40d7e45a7bdbd26a016dde2da">L2_LINK_STATE</a>);
  lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a> = (<span class="keyword">struct </span><a class="code" href="structisis__link__state__hdr.html">isis_link_state_hdr</a> *) (<a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>) +
                            <a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a>);
  <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>, lsp_hdr, <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>);

  <span class="comment">/*</span>
<span class="comment">   * Retain only LSP header</span>
<span class="comment">   */</span>
  lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6f17d9f3a17625db25044ff0ff3da330">pdu_len</a> = htons (<a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a> + <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>);
  <span class="comment">/*</span>
<span class="comment">   * Set the remaining lifetime to 0</span>
<span class="comment">   */</span>
  lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a> = 0;
  <span class="comment">/*</span>
<span class="comment">   * Put the lsp into LSPdb</span>
<span class="comment">   */</span>
  <a class="code" href="isis__lsp_8c.html#a09d8f3bcc073c87f01c32b2f0994fb04">lsp_insert</a> (lsp, area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[lsp-&gt;<a class="code" href="structisis__lsp.html#ab719e4479e4fc861c4cfa7a3c9d403c6">level</a> - 1]);

  <span class="comment">/*</span>
<span class="comment">   * Send in to whole area</span>
<span class="comment">   */</span>
  <a class="code" href="isis__flags_8h.html#a57f45d9b4a8c70c53f796d96e5555fac">ISIS_FLAGS_SET_ALL</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a96d155dbf3bbd20256cf7a68c8d9fd20">SRMflags</a>);

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="adc8acfaac35e9082714fb0f5cb47b606"></a><!-- doxytag: member="isis_lsp.h::lsp_refresh_l1" ref="adc8acfaac35e9082714fb0f5cb47b606" args="(struct thread *thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int lsp_refresh_l1 </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>thread</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l01550">1550</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
  <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> ref_time;

  area = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (area);

  area-&gt;<a class="code" href="structisis__area.html#aa13bb9e9d007a177991fad0bbaf5b8c0">t_lsp_refresh</a>[0] = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>)
    <a class="code" href="isis__lsp_8c.html#abfcf29f408abe6994df4484a432a7b03">lsp_non_pseudo_regenerate</a> (area, 1);

  ref_time = area-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[0] &gt; <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> ?
    <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> : area-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[0];

  <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, area-&gt;<a class="code" href="structisis__area.html#aa13bb9e9d007a177991fad0bbaf5b8c0">t_lsp_refresh</a>[0], <a class="code" href="isis__lsp_8c.html#adc8acfaac35e9082714fb0f5cb47b606">lsp_refresh_l1</a>, area,
           <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (ref_time, <a class="code" href="isis__constants_8h.html#adfaaf0b4e69adf9ae9c8dc47e3e00918">MAX_AGE_JITTER</a>));

  <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a73cd3b4cb76bb36a65016f3315dde31e"></a><!-- doxytag: member="isis_lsp.h::lsp_refresh_l2" ref="a73cd3b4cb76bb36a65016f3315dde31e" args="(struct thread *thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int lsp_refresh_l2 </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>thread</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l01572">1572</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
  <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> ref_time;

  area = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (area);

  area-&gt;<a class="code" href="structisis__area.html#aa13bb9e9d007a177991fad0bbaf5b8c0">t_lsp_refresh</a>[1] = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a9daa7fbf09b604c718f3bbe189aedd1a">IS_LEVEL_2</a>)
    <a class="code" href="isis__lsp_8c.html#abfcf29f408abe6994df4484a432a7b03">lsp_non_pseudo_regenerate</a> (area, 2);

  ref_time = area-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[1] &gt; <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> ?
    <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> : area-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[1];

  <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, area-&gt;<a class="code" href="structisis__area.html#aa13bb9e9d007a177991fad0bbaf5b8c0">t_lsp_refresh</a>[1], <a class="code" href="isis__lsp_8c.html#a73cd3b4cb76bb36a65016f3315dde31e">lsp_refresh_l2</a>, area,
           <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (ref_time, <a class="code" href="isis__constants_8h.html#adfaaf0b4e69adf9ae9c8dc47e3e00918">MAX_AGE_JITTER</a>));

  <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a31456cf3ff9953708c1d0328a99bfacc"></a><!-- doxytag: member="isis_lsp.h::lsp_regenerate_schedule" ref="a31456cf3ff9953708c1d0328a99bfacc" args="(struct isis_area *area)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int lsp_regenerate_schedule </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__area.html">isis_area</a> *&#160;</td>
          <td class="paramname"><em>area</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l01620">1620</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
  u_char <span class="keywordtype">id</span>[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 2];
  time_t now, diff;
  <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (<span class="keywordtype">id</span>, <a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
  <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (<span class="keywordtype">id</span>) = <a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (<span class="keywordtype">id</span>) = 0;
  now = time (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
  <span class="comment">/*</span>
<span class="comment">   * First level 1</span>
<span class="comment">   */</span>
  <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>)
    {
      lsp = <a class="code" href="isis__lsp_8c.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (<span class="keywordtype">id</span>, area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[0]);
      <span class="keywordflow">if</span> (!lsp || area-&gt;<a class="code" href="structisis__area.html#affd6c83dc67d351f652205c64b91da1a">lsp_regenerate_pending</a>[0])
    <span class="keywordflow">goto</span> L2;
      <span class="comment">/*</span>
<span class="comment">       * Throttle avoidance</span>
<span class="comment">       */</span>
      diff = now - lsp-&gt;<a class="code" href="structisis__lsp.html#aea2ad3865df52bc01bc01fae22bf83a0">last_generated</a>;
      <span class="keywordflow">if</span> (diff &lt; <a class="code" href="isis__constants_8h.html#a0e57941273060782de67219f33f895c1">MIN_LSP_GEN_INTERVAL</a>)
    {
      area-&gt;<a class="code" href="structisis__area.html#affd6c83dc67d351f652205c64b91da1a">lsp_regenerate_pending</a>[0] = 1;
      <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="isis__lsp_8c.html#a99833cb66948d6aa881bca74ab942cc5">lsp_l1_regenerate</a>, area,
                <a class="code" href="isis__constants_8h.html#a0e57941273060782de67219f33f895c1">MIN_LSP_GEN_INTERVAL</a> - diff);
      <span class="keywordflow">goto</span> L2;
    }
      <span class="keywordflow">else</span>
    <a class="code" href="isis__lsp_8c.html#abfcf29f408abe6994df4484a432a7b03">lsp_non_pseudo_regenerate</a> (area, 1);
    }
  <span class="comment">/*</span>
<span class="comment">   * then 2</span>
<span class="comment">   */</span>
L2:
  <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a9daa7fbf09b604c718f3bbe189aedd1a">IS_LEVEL_2</a>)
    {
      lsp = <a class="code" href="isis__lsp_8c.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (<span class="keywordtype">id</span>, area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[1]);
      <span class="keywordflow">if</span> (!lsp || area-&gt;<a class="code" href="structisis__area.html#affd6c83dc67d351f652205c64b91da1a">lsp_regenerate_pending</a>[1])
    <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
      <span class="comment">/*</span>
<span class="comment">       * Throttle avoidance</span>
<span class="comment">       */</span>
      diff = now - lsp-&gt;<a class="code" href="structisis__lsp.html#aea2ad3865df52bc01bc01fae22bf83a0">last_generated</a>;
      <span class="keywordflow">if</span> (diff &lt; <a class="code" href="isis__constants_8h.html#a0e57941273060782de67219f33f895c1">MIN_LSP_GEN_INTERVAL</a>)
    {
      area-&gt;<a class="code" href="structisis__area.html#affd6c83dc67d351f652205c64b91da1a">lsp_regenerate_pending</a>[1] = 1;
      <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="isis__lsp_8c.html#a4efb80c98e8582dc7609ffb9bdd6e597">lsp_l2_regenerate</a>, area,
                <a class="code" href="isis__constants_8h.html#a0e57941273060782de67219f33f895c1">MIN_LSP_GEN_INTERVAL</a> - diff);
      <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
    }
      <span class="keywordflow">else</span>
    <a class="code" href="isis__lsp_8c.html#abfcf29f408abe6994df4484a432a7b03">lsp_non_pseudo_regenerate</a> (area, 2);
    }

  <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3859237ab43b147f4520d060439ca002"></a><!-- doxytag: member="isis_lsp.h::lsp_search" ref="a3859237ab43b147f4520d060439ca002" args="(u_char *id, dict_t *lspdb)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structisis__lsp.html">isis_lsp</a>* lsp_search </td>
          <td>(</td>
          <td class="paramtype">u_char *&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>lspdb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l00083">83</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structdnode__t.html">dnode_t</a> *node;

<span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<span class="preprocessor"></span>  <a class="code" href="structdnode__t.html">dnode_t</a> *dn;

  <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;searching db&quot;</span>);
  <span class="keywordflow">for</span> (dn = <a class="code" href="dict_8c.html#a2b439ffb63f9b3089d0306ec3b26672f">dict_first</a> (lspdb); dn; dn = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a> (lspdb, dn))
    {
      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s\t%pX&quot;</span>, <a class="code" href="isis__misc_8c.html#a3a0e7f92008e3167e2c09b8761d06766">rawlspid_print</a> ((<span class="keywordtype">char</span> *) <a class="code" href="dict_8h.html#a6f2633dde474b0288d6a737651f69a51">dnode_getkey</a> (dn)),
          <a class="code" href="dict_8h.html#a17fccc85aae3874de7152f103d5945bc">dnode_get</a> (dn));
    }
<span class="preprocessor">#endif </span><span class="comment">/* EXTREME DEBUG */</span>

  node = <a class="code" href="dict_8c.html#a9b4c0968674a4ff436bb8180aa56e522">dict_lookup</a> (lspdb, <span class="keywordtype">id</span>);

  <span class="keywordflow">if</span> (node)
    <span class="keywordflow">return</span> (<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a> *) <a class="code" href="dict_8h.html#a17fccc85aae3874de7152f103d5945bc">dnode_get</a> (node);

  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac9198965904e0c9a57ade0011b114d3f"></a><!-- doxytag: member="isis_lsp.h::lsp_search_and_destroy" ref="ac9198965904e0c9a57ade0011b114d3f" args="(u_char *id, dict_t *lspdb)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void lsp_search_and_destroy </td>
          <td>(</td>
          <td class="paramtype">u_char *&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structdict__t.html">dict_t</a> *&#160;</td>
          <td class="paramname"><em>lspdb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l00209">209</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structdnode__t.html">dnode_t</a> *node;
  <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;

  node = <a class="code" href="dict_8c.html#a9b4c0968674a4ff436bb8180aa56e522">dict_lookup</a> (lspdb, <span class="keywordtype">id</span>);
  <span class="keywordflow">if</span> (node)
    {
      node = <a class="code" href="dict_8c.html#ad51f28cd1829e1fd66caf58f553d794e">dict_delete</a> (lspdb, node);
      lsp = <a class="code" href="dict_8h.html#a17fccc85aae3874de7152f103d5945bc">dnode_get</a> (node);
      <span class="comment">/*</span>
<span class="comment">       * If this is a zero lsp, remove all the frags now </span>
<span class="comment">       */</span>
      <span class="keywordflow">if</span> (<a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>) == 0)
    {
      <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a>)
        <a class="code" href="isis__lsp_8c.html#a0ae83d454874a8fd54be13230268bee3">lsp_remove_frags</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a>, lspdb);
    }
      <span class="keywordflow">else</span>
    {
      <span class="comment">/* </span>
<span class="comment">       * else just remove this frag, from the zero lsps&#39; frag list</span>
<span class="comment">       */</span>
      <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#a3113261380202a14a924c31ca87cdee1">zero_lsp</a> &amp;&amp; lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#a3113261380202a14a924c31ca87cdee1">zero_lsp</a>-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a>)
        <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#a3113261380202a14a924c31ca87cdee1">zero_lsp</a>-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a>, lsp);
    }
      <a class="code" href="isis__lsp_8c.html#a8910aea25a4f0680a4b4945609aaf97b">lsp_destroy</a> (lsp);
      <a class="code" href="dict_8c.html#ae494e63c2ce90dee35c2abdd940ec8cf">dnode_destroy</a> (node);
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a8987f46b1c21556ff1281a72cce6636a"></a><!-- doxytag: member="isis_lsp.h::lsp_tick" ref="a8987f46b1c21556ff1281a72cce6636a" args="(struct thread *thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int lsp_tick </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>thread</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l01982">1982</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
  <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
  <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *lsp_list;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *lspnode, *cnode;
  <a class="code" href="structdnode__t.html">dnode_t</a> *dnode, *dnode_next;
  <span class="keywordtype">int</span> level;

  lsp_list = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();

  area = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (area);
  area-&gt;<a class="code" href="structisis__area.html#a48fdf6a46c715d962319677fc3a5b183">t_tick</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, area-&gt;<a class="code" href="structisis__area.html#a48fdf6a46c715d962319677fc3a5b183">t_tick</a>, <a class="code" href="isis__lsp_8c.html#a8987f46b1c21556ff1281a72cce6636a">lsp_tick</a>, area, 1);

  <span class="comment">/*</span>
<span class="comment">   * Build a list of LSPs with (any) SRMflag set</span>
<span class="comment">   * and removed the ones that have aged out</span>
<span class="comment">   */</span>
  <span class="keywordflow">for</span> (level = 0; level &lt; <a class="code" href="isis__constants_8h.html#a75b03ae2a0d626c94fe847f7d790f4af">ISIS_LEVELS</a>; level++)
    {
      <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level] &amp;&amp; <a class="code" href="dict_8h.html#a392c768130a1c7ed5a6c2f299cd0d2e8">dict_count</a> (area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level]) &gt; 0)
    {
      dnode = <a class="code" href="dict_8c.html#a2b439ffb63f9b3089d0306ec3b26672f">dict_first</a> (area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level]);
      <span class="keywordflow">while</span> (dnode != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
        {
          dnode_next = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a> (area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level], dnode);
          lsp = <a class="code" href="dict_8h.html#a17fccc85aae3874de7152f103d5945bc">dnode_get</a> (dnode);
          <a class="code" href="isis__lsp_8c.html#a6ae8e0acaadc3ea2b9cf07af727cef18">lsp_set_time</a> (lsp);
          <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#aa2d9dce6fceedcb6af88a73f2f5a0616">age_out</a> == 0)
        {

          <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Upd (%s): L%u LSP %s seq 0x%08x aged out&quot;</span>,
                  area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>,
                  lsp-&gt;<a class="code" href="structisis__lsp.html#ab719e4479e4fc861c4cfa7a3c9d403c6">level</a>,
                  <a class="code" href="isis__misc_8c.html#a3a0e7f92008e3167e2c09b8761d06766">rawlspid_print</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>),
                  ntohl (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a>));
<span class="preprocessor">#ifdef TOPOLOGY_GENERATE</span>
<span class="preprocessor"></span>          <span class="keywordflow">if</span> (lsp-&gt;from_topology)
            <a class="code" href="thread_8h.html#ae1dfd3f5f643212148d60a41d9f2192a">THREAD_TIMER_OFF</a> (lsp-&gt;t_lsp_top_ref);
<span class="preprocessor">#endif </span><span class="comment">/* TOPOLOGY_GENERATE */</span>
          <a class="code" href="isis__lsp_8c.html#a8910aea25a4f0680a4b4945609aaf97b">lsp_destroy</a> (lsp);
          <a class="code" href="dict_8c.html#ad51f28cd1829e1fd66caf58f553d794e">dict_delete</a> (area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level], dnode);
        }
          <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="isis__flags_8c.html#aa104abd02ef1ceeb11c8cea01a058796">flags_any_set</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a96d155dbf3bbd20256cf7a68c8d9fd20">SRMflags</a>))
        <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (lsp_list, lsp);
          dnode = dnode_next;
        }

      <span class="comment">/*</span>
<span class="comment">       * Send LSPs on circuits indicated by the SRMflags</span>
<span class="comment">       */</span>
      <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (lsp_list) &gt; 0)
        {
              <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (area-&gt;<a class="code" href="structisis__area.html#a1ef8753b22245b7d8fff0331deef3b21">circuit_list</a>, cnode, circuit))
        {
                  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp_list, lspnode, lsp))
            {
              <span class="keywordflow">if</span> (<a class="code" href="isis__flags_8h.html#a7d42f17e426ff47043c37733fc3c672d">ISIS_CHECK_FLAG</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a96d155dbf3bbd20256cf7a68c8d9fd20">SRMflags</a>, circuit))
            {
              <span class="comment">/* FIXME: if same or elder lsp is already in lsp</span>
<span class="comment">               * queue */</span>
              <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a3540c30e2a6967daf9f9e1b76b00e2be">lsp_queue</a>, lsp);
              <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="isis__pdu_8c.html#a23b42a7925a367125e6e0fa3db33f597">send_lsp</a>, circuit, 0);
            }
            }
        }
        }
      <a class="code" href="linklist_8c.html#acd6daa4be8ab3f175376e63c9d9c9500">list_delete_all_node</a> (lsp_list);
    }
    }

  <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (lsp_list);

  <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad5c26e2f2f08b4a76183ca91ff454ff9"></a><!-- doxytag: member="isis_lsp.h::lsp_update" ref="ad5c26e2f2f08b4a76183ca91ff454ff9" args="(struct isis_lsp *lsp, struct isis_link_state_hdr *lsp_hdr, struct stream *stream, struct isis_area *area, int level)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void lsp_update </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__lsp.html">isis_lsp</a> *&#160;</td>
          <td class="paramname"><em>lsp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structisis__link__state__hdr.html">isis_link_state_hdr</a> *&#160;</td>
          <td class="paramname"><em>lsp_hdr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structstream.html">stream</a> *&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structisis__area.html">isis_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__lsp_8c_source.html#l00420">420</a> of file <a class="el" href="isis__lsp_8c_source.html">isis_lsp.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structdnode__t.html">dnode_t</a> *dnode = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="comment">/* Remove old LSP from LSP database. */</span>
  dnode = <a class="code" href="dict_8c.html#a9b4c0968674a4ff436bb8180aa56e522">dict_lookup</a> (area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level - 1], lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>);
  <span class="keywordflow">if</span> (dnode)
    <a class="code" href="dict_8c.html#ae494e63c2ce90dee35c2abdd940ec8cf">dnode_destroy</a> (<a class="code" href="dict_8c.html#ad51f28cd1829e1fd66caf58f553d794e">dict_delete</a> (area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level - 1], dnode));

  <span class="comment">/* free the old lsp data */</span>
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba9a2400fa8e781effd85b44c7c6455855">MTYPE_STREAM_DATA</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>);
  <a class="code" href="isis__lsp_8c.html#aa0d51cf5f190804be9b73b52db69ccd6">lsp_clear_data</a> (lsp);

  <span class="comment">/* rebuild the lsp data */</span>
  <a class="code" href="isis__lsp_8c.html#a917a11f390e10660faa69faa510da442">lsp_update_data</a> (lsp, stream, area);

  <span class="comment">/* set the new values for lsp header */</span>
  <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>, lsp_hdr, <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>);

  <span class="keywordflow">if</span> (dnode)
    <a class="code" href="isis__lsp_8c.html#a09d8f3bcc073c87f01c32b2f0994fb04">lsp_insert</a> (lsp, area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level - 1]);
}
</pre></div>
</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="isis__lsp_8h.html">isis_lsp.h</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:20 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
