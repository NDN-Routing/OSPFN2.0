<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: ospf6d/ospf6_interface.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('ospf6__interface_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">ospf6d/ospf6_interface.c</div>  </div>
</div>
<div class="contents">
<a href="ospf6__interface_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * Copyright (C) 2003 Yasuhiro Ohara</span>
<a name="l00003"></a>00003 <span class="comment"> *</span>
<a name="l00004"></a>00004 <span class="comment"> * This file is part of GNU Zebra.</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * GNU Zebra is free software; you can redistribute it and/or modify it</span>
<a name="l00007"></a>00007 <span class="comment"> * under the terms of the GNU General Public License as published by the</span>
<a name="l00008"></a>00008 <span class="comment"> * Free Software Foundation; either version 2, or (at your option) any</span>
<a name="l00009"></a>00009 <span class="comment"> * later version.</span>
<a name="l00010"></a>00010 <span class="comment"> *</span>
<a name="l00011"></a>00011 <span class="comment"> * GNU Zebra is distributed in the hope that it will be useful, but</span>
<a name="l00012"></a>00012 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00014"></a>00014 <span class="comment"> * General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment"> * along with GNU Zebra; see the file COPYING.  If not, write to the </span>
<a name="l00018"></a>00018 <span class="comment"> * Free Software Foundation, Inc., 59 Temple Place - Suite 330, </span>
<a name="l00019"></a>00019 <span class="comment"> * Boston, MA 02111-1307, USA.  </span>
<a name="l00020"></a>00020 <span class="comment"> */</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="preprocessor">#include &lt;<a class="code" href="zebra_8h.html">zebra.h</a>&gt;</span>
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 <span class="preprocessor">#include &quot;<a class="code" href="memory_8h.html">memory.h</a>&quot;</span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="if_8h.html">if.h</a>&quot;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="log_8h.html">log.h</a>&quot;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="command_8h.html">command.h</a>&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="thread_8h.html">thread.h</a>&quot;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="prefix_8h.html">prefix.h</a>&quot;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="plist_8h.html">plist.h</a>&quot;</span>
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="ospf6__lsa_8h.html">ospf6_lsa.h</a>&quot;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &quot;<a class="code" href="ospf6__lsdb_8h.html">ospf6_lsdb.h</a>&quot;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &quot;<a class="code" href="ospf6__network_8h.html">ospf6_network.h</a>&quot;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &quot;<a class="code" href="ospf6__message_8h.html">ospf6_message.h</a>&quot;</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include &quot;<a class="code" href="ospf6__route_8h.html">ospf6_route.h</a>&quot;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#include &quot;<a class="code" href="ospf6__top_8h.html">ospf6_top.h</a>&quot;</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include &quot;<a class="code" href="ospf6__area_8h.html">ospf6_area.h</a>&quot;</span>
<a name="l00039"></a>00039 <span class="preprocessor">#include &quot;<a class="code" href="ospf6__interface_8h.html">ospf6_interface.h</a>&quot;</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include &quot;<a class="code" href="ospf6__neighbor_8h.html">ospf6_neighbor.h</a>&quot;</span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &quot;<a class="code" href="ospf6__intra_8h.html">ospf6_intra.h</a>&quot;</span>
<a name="l00042"></a>00042 <span class="preprocessor">#include &quot;<a class="code" href="ospf6__spf_8h.html">ospf6_spf.h</a>&quot;</span>
<a name="l00043"></a>00043 <span class="preprocessor">#include &quot;<a class="code" href="ospf6d_8h.html">ospf6d.h</a>&quot;</span>
<a name="l00044"></a>00044 
<a name="l00045"></a><a class="code" href="ospf6__interface_8h.html#aa79fc98f6427a710c19427dc768bf4ce">00045</a> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> <a class="code" href="ospf6__interface_8c.html#aa79fc98f6427a710c19427dc768bf4ce">conf_debug_ospf6_interface</a> = 0;
<a name="l00046"></a>00046 
<a name="l00047"></a><a class="code" href="ospf6__interface_8h.html#ae87e59ecae5232da2543307cd88795b8">00047</a> <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="ospf6__interface_8c.html#ae87e59ecae5232da2543307cd88795b8">ospf6_interface_state_str</a>[] =
<a name="l00048"></a>00048 {
<a name="l00049"></a>00049   <span class="stringliteral">&quot;None&quot;</span>,
<a name="l00050"></a>00050   <span class="stringliteral">&quot;Down&quot;</span>,
<a name="l00051"></a>00051   <span class="stringliteral">&quot;Loopback&quot;</span>,
<a name="l00052"></a>00052   <span class="stringliteral">&quot;Waiting&quot;</span>,
<a name="l00053"></a>00053   <span class="stringliteral">&quot;PointToPoint&quot;</span>,
<a name="l00054"></a>00054   <span class="stringliteral">&quot;DROther&quot;</span>,
<a name="l00055"></a>00055   <span class="stringliteral">&quot;BDR&quot;</span>,
<a name="l00056"></a>00056   <span class="stringliteral">&quot;DR&quot;</span>,
<a name="l00057"></a>00057   <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>
<a name="l00058"></a>00058 };
<a name="l00059"></a>00059 
<a name="l00060"></a>00060 <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *
<a name="l00061"></a><a class="code" href="ospf6__interface_8h.html#a09c51f37b3f6aea2011a6ba6ea92ab39">00061</a> <a class="code" href="ospf6__interface_8c.html#a10eb67c1323348e19f16ea82827d284f">ospf6_interface_lookup_by_ifindex</a> (<span class="keywordtype">int</span> ifindex)
<a name="l00062"></a>00062 {
<a name="l00063"></a>00063   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l00064"></a>00064   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l00065"></a>00065 
<a name="l00066"></a>00066   ifp = <a class="code" href="if_8c.html#a424dd1e971aee548383cca2b770e2859">if_lookup_by_index</a> (ifindex);
<a name="l00067"></a>00067   <span class="keywordflow">if</span> (ifp == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00068"></a>00068     <span class="keywordflow">return</span> (<span class="keyword">struct</span> <a class="code" href="structospf6__interface.html">ospf6_interface</a> *) <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00069"></a>00069 
<a name="l00070"></a>00070   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l00071"></a>00071   <span class="keywordflow">return</span> oi;
<a name="l00072"></a>00072 }
<a name="l00073"></a>00073 
<a name="l00074"></a>00074 <span class="comment">/* schedule routing table recalculation */</span>
<a name="l00075"></a>00075 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00076"></a><a class="code" href="ospf6__interface_8c.html#a0896b6f208f1a9c80906f602644be28a">00076</a> <a class="code" href="ospf6__interface_8c.html#a0896b6f208f1a9c80906f602644be28a">ospf6_interface_lsdb_hook</a> (<span class="keyword">struct</span> <a class="code" href="structospf6__lsa.html">ospf6_lsa</a> *lsa)
<a name="l00077"></a>00077 {
<a name="l00078"></a>00078   <span class="keywordflow">switch</span> (ntohs (lsa-&gt;<a class="code" href="structospf6__lsa.html#ad53bee4fa68445da0f4c82b4b0b81f1c">header</a>-&gt;<a class="code" href="structospf6__lsa__header.html#adadc5d3ed71f1b07f56b7692454d2e08">type</a>))
<a name="l00079"></a>00079     {
<a name="l00080"></a>00080       <span class="keywordflow">case</span> <a class="code" href="ospf6__lsa_8h.html#ae9921adf750616ded4d14b6aaa64267d">OSPF6_LSTYPE_LINK</a>:
<a name="l00081"></a>00081         <span class="keywordflow">if</span> (<a class="code" href="ospf6d_8h.html#a2dad4cbf7a1897cb8729c3ac2419703d">OSPF6_INTERFACE</a> (lsa-&gt;<a class="code" href="structospf6__lsa.html#a95ec15977abee01addcefa9b91748bf3">lsdb</a>-&gt;<a class="code" href="structospf6__lsdb.html#a0585a6851b53aafbe83fbaab828f2e21">data</a>)-&gt;state == <a class="code" href="ospf6__interface_8h.html#ad83f536f4674c165d7f393d28f087843">OSPF6_INTERFACE_DR</a>)
<a name="l00082"></a>00082           <a class="code" href="ospf6__intra_8h.html#af1bf24203358733b7eae1c1426dd1849">OSPF6_INTRA_PREFIX_LSA_SCHEDULE_TRANSIT</a> (<a class="code" href="ospf6d_8h.html#a2dad4cbf7a1897cb8729c3ac2419703d">OSPF6_INTERFACE</a> (lsa-&gt;<a class="code" href="structospf6__lsa.html#a95ec15977abee01addcefa9b91748bf3">lsdb</a>-&gt;<a class="code" href="structospf6__lsdb.html#a0585a6851b53aafbe83fbaab828f2e21">data</a>));
<a name="l00083"></a>00083         <a class="code" href="ospf6__spf_8c.html#ae031121c535308d4e9bcfb07733297ba">ospf6_spf_schedule</a> (<a class="code" href="ospf6d_8h.html#a2dad4cbf7a1897cb8729c3ac2419703d">OSPF6_INTERFACE</a> (lsa-&gt;<a class="code" href="structospf6__lsa.html#a95ec15977abee01addcefa9b91748bf3">lsdb</a>-&gt;<a class="code" href="structospf6__lsdb.html#a0585a6851b53aafbe83fbaab828f2e21">data</a>)-&gt;area);
<a name="l00084"></a>00084         <span class="keywordflow">break</span>;
<a name="l00085"></a>00085 
<a name="l00086"></a>00086       <span class="keywordflow">default</span>:
<a name="l00087"></a>00087         <span class="keywordflow">break</span>;
<a name="l00088"></a>00088     }
<a name="l00089"></a>00089 }
<a name="l00090"></a>00090 
<a name="l00091"></a>00091 <span class="comment">/* Create new ospf6 interface structure */</span>
<a name="l00092"></a>00092 <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *
<a name="l00093"></a><a class="code" href="ospf6__interface_8h.html#a95d1e747bc1c33c16584122812eaf729">00093</a> <a class="code" href="ospf6__interface_8c.html#a4102d53667f86e75d50917c610c4cc5e">ospf6_interface_create</a> (<span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp)
<a name="l00094"></a>00094 {
<a name="l00095"></a>00095   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l00096"></a>00096   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="ospf6__message_8c.html#a6380f44cc4b2ccf7824f9b60d42e09db">iobuflen</a>;
<a name="l00097"></a>00097 
<a name="l00098"></a>00098   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *)
<a name="l00099"></a>00099     <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba86c08ff85b65ed1199ab46ae0202eb1a">MTYPE_OSPF6_IF</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structospf6__interface.html">ospf6_interface</a>));
<a name="l00100"></a>00100 
<a name="l00101"></a>00101   <span class="keywordflow">if</span> (!oi)
<a name="l00102"></a>00102     {
<a name="l00103"></a>00103       <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;Can&#39;t malloc ospf6_interface for ifindex %d&quot;</span>, ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>);
<a name="l00104"></a>00104       <span class="keywordflow">return</span> (<span class="keyword">struct</span> <a class="code" href="structospf6__interface.html">ospf6_interface</a> *) <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00105"></a>00105     }
<a name="l00106"></a>00106 
<a name="l00107"></a>00107   oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a> = (<span class="keyword">struct </span><a class="code" href="structospf6__area.html">ospf6_area</a> *) <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00108"></a>00108   oi-&gt;<a class="code" href="structospf6__interface.html#ada404f0a64a2f3783445fdf2c2dccf6d">neighbor_list</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l00109"></a>00109   oi-&gt;<a class="code" href="structospf6__interface.html#ada404f0a64a2f3783445fdf2c2dccf6d">neighbor_list</a>-&gt;<a class="code" href="structlist.html#af19c9d07985ca8f95f0098bb0ef98f66">cmp</a> = <a class="code" href="ospf6__neighbor_8c.html#a5b12f8c6fcbe74bac7902e4fe37917dc">ospf6_neighbor_cmp</a>;
<a name="l00110"></a>00110   oi-&gt;<a class="code" href="structospf6__interface.html#a8df3591fcba060b5f64e35dfdb338888">linklocal_addr</a> = (<span class="keyword">struct </span>in6_addr *) <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00111"></a>00111   oi-&gt;<a class="code" href="structospf6__interface.html#aa29c61e3e5509e7c844bdf19efce0268">instance_id</a> = 0;
<a name="l00112"></a>00112   oi-&gt;<a class="code" href="structospf6__interface.html#a8332fa0bef3f650b9ce32c772c028437">transdelay</a> = 1;
<a name="l00113"></a>00113   oi-&gt;<a class="code" href="structospf6__interface.html#a91a541af8d7b9a9b224b2dbb768f4822">priority</a> = 1;
<a name="l00114"></a>00114 
<a name="l00115"></a>00115   oi-&gt;<a class="code" href="structospf6__interface.html#a361e7c155d93d4b4082a22d43f6da499">hello_interval</a> = 10;
<a name="l00116"></a>00116   oi-&gt;<a class="code" href="structospf6__interface.html#abcdd28a392cf138d80f052c651e9236b">dead_interval</a> = 40;
<a name="l00117"></a>00117   oi-&gt;<a class="code" href="structospf6__interface.html#a85d5e73751611ee20f1ad041a181cbde">rxmt_interval</a> = 5;
<a name="l00118"></a>00118   oi-&gt;<a class="code" href="structospf6__interface.html#afe7ec302275d6abc2bab9337ceaef164">cost</a> = 1;
<a name="l00119"></a>00119   oi-&gt;<a class="code" href="structospf6__interface.html#aafdfe7c67c1ff540201718b688e0a15b">state</a> = <a class="code" href="ospf6__interface_8h.html#a49b579760cabb266eb7331686381fc51">OSPF6_INTERFACE_DOWN</a>;
<a name="l00120"></a>00120   oi-&gt;<a class="code" href="structospf6__interface.html#aa5dbc797ed38482907f57c66458a3e87">flag</a> = 0;
<a name="l00121"></a>00121 
<a name="l00122"></a>00122   <span class="comment">/* Try to adjust I/O buffer size with IfMtu */</span>
<a name="l00123"></a>00123   oi-&gt;<a class="code" href="structospf6__interface.html#a88579a4c38c3458d12425986c1a43893">ifmtu</a> = ifp-&gt;<a class="code" href="structinterface.html#a75a892a4df0f60191a13ca07b6625cb1">mtu6</a>;
<a name="l00124"></a>00124   iobuflen = <a class="code" href="ospf6__message_8c.html#aaa8179b6bdd70e5cf3addee60df7aa80">ospf6_iobuf_size</a> (ifp-&gt;<a class="code" href="structinterface.html#a75a892a4df0f60191a13ca07b6625cb1">mtu6</a>);
<a name="l00125"></a>00125   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#a88579a4c38c3458d12425986c1a43893">ifmtu</a> &gt; iobuflen)
<a name="l00126"></a>00126     {
<a name="l00127"></a>00127       <span class="keywordflow">if</span> (<a class="code" href="ospf6__interface_8h.html#ab442f4c1ff59407b56b532e56d2f18da">IS_OSPF6_DEBUG_INTERFACE</a>)
<a name="l00128"></a>00128         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Interface %s: IfMtu is adjusted to I/O buffer size: %d.&quot;</span>,
<a name="l00129"></a>00129             ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, iobuflen);
<a name="l00130"></a>00130       oi-&gt;<a class="code" href="structospf6__interface.html#a88579a4c38c3458d12425986c1a43893">ifmtu</a> = <a class="code" href="ospf6__message_8c.html#a6380f44cc4b2ccf7824f9b60d42e09db">iobuflen</a>;
<a name="l00131"></a>00131     }
<a name="l00132"></a>00132 
<a name="l00133"></a>00133   oi-&gt;<a class="code" href="structospf6__interface.html#a42c393a90f856992c87da5a9d0607f98">lsupdate_list</a> = <a class="code" href="ospf6__lsdb_8c.html#a0f837765be7e053d492b402a43627c85">ospf6_lsdb_create</a> (oi);
<a name="l00134"></a>00134   oi-&gt;<a class="code" href="structospf6__interface.html#a3a27876455af04270cf1ff5392f5ced3">lsack_list</a> = <a class="code" href="ospf6__lsdb_8c.html#a0f837765be7e053d492b402a43627c85">ospf6_lsdb_create</a> (oi);
<a name="l00135"></a>00135   oi-&gt;<a class="code" href="structospf6__interface.html#ab033cb877fe417705f424d1bd2f411de">lsdb</a> = <a class="code" href="ospf6__lsdb_8c.html#a0f837765be7e053d492b402a43627c85">ospf6_lsdb_create</a> (oi);
<a name="l00136"></a>00136   oi-&gt;<a class="code" href="structospf6__interface.html#ab033cb877fe417705f424d1bd2f411de">lsdb</a>-&gt;<a class="code" href="structospf6__lsdb.html#a7d1144d98631278e7783a8d2af943b37">hook_add</a> = <a class="code" href="ospf6__interface_8c.html#a0896b6f208f1a9c80906f602644be28a">ospf6_interface_lsdb_hook</a>;
<a name="l00137"></a>00137   oi-&gt;<a class="code" href="structospf6__interface.html#ab033cb877fe417705f424d1bd2f411de">lsdb</a>-&gt;<a class="code" href="structospf6__lsdb.html#a34c939fe22f596ab5980664722860af2">hook_remove</a> = <a class="code" href="ospf6__interface_8c.html#a0896b6f208f1a9c80906f602644be28a">ospf6_interface_lsdb_hook</a>;
<a name="l00138"></a>00138   oi-&gt;<a class="code" href="structospf6__interface.html#a5a9e237722732d644750122199ff91f5">lsdb_self</a> = <a class="code" href="ospf6__lsdb_8c.html#a0f837765be7e053d492b402a43627c85">ospf6_lsdb_create</a> (oi);
<a name="l00139"></a>00139 
<a name="l00140"></a>00140   oi-&gt;<a class="code" href="structospf6__interface.html#af278bb16b6e8833b3f43c3e1cdc3e129">route_connected</a> = <a class="code" href="ospf6__route_8h.html#a818781be1858f8202a072bc927b9c7ab">OSPF6_ROUTE_TABLE_CREATE</a> (INTERFACE, CONNECTED_ROUTES);
<a name="l00141"></a>00141   oi-&gt;<a class="code" href="structospf6__interface.html#af278bb16b6e8833b3f43c3e1cdc3e129">route_connected</a>-&gt;<a class="code" href="structospf6__route__table.html#a3268985f62aa7248ab9ee72fe88d1161">scope</a> = oi;
<a name="l00142"></a>00142 
<a name="l00143"></a>00143   <span class="comment">/* link both */</span>
<a name="l00144"></a>00144   oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a> = ifp;
<a name="l00145"></a>00145   ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a> = oi;
<a name="l00146"></a>00146 
<a name="l00147"></a>00147   <span class="keywordflow">return</span> oi;
<a name="l00148"></a>00148 }
<a name="l00149"></a>00149 
<a name="l00150"></a>00150 <span class="keywordtype">void</span>
<a name="l00151"></a><a class="code" href="ospf6__interface_8h.html#a05ee1f5714887629ce6dc1124fe4e029">00151</a> <a class="code" href="ospf6__interface_8c.html#aa811a70e8f90016284bba61060d8e839">ospf6_interface_delete</a> (<span class="keyword">struct</span> <a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi)
<a name="l00152"></a>00152 {
<a name="l00153"></a>00153   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
<a name="l00154"></a>00154   <span class="keyword">struct </span><a class="code" href="structospf6__neighbor.html">ospf6_neighbor</a> *on;
<a name="l00155"></a>00155 
<a name="l00156"></a>00156   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ada404f0a64a2f3783445fdf2c2dccf6d">neighbor_list</a>, node, nnode, on))
<a name="l00157"></a>00157       <a class="code" href="ospf6__neighbor_8c.html#abbbc1ba6f8ca18c3308cec096c5ad8b2">ospf6_neighbor_delete</a> (on);
<a name="l00158"></a>00158   
<a name="l00159"></a>00159   <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ada404f0a64a2f3783445fdf2c2dccf6d">neighbor_list</a>);
<a name="l00160"></a>00160 
<a name="l00161"></a>00161   <a class="code" href="thread_8h.html#a7e1de4fc338e4feae498978461742dbb">THREAD_OFF</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a2166b82112542d46986c60ef49b36ce0">thread_send_hello</a>);
<a name="l00162"></a>00162   <a class="code" href="thread_8h.html#a7e1de4fc338e4feae498978461742dbb">THREAD_OFF</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a0f7c7a7f0611d03b12361b0cf0b7cba6">thread_send_lsupdate</a>);
<a name="l00163"></a>00163   <a class="code" href="thread_8h.html#a7e1de4fc338e4feae498978461742dbb">THREAD_OFF</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ac0eb96a5b6f4d1b1d63aa5c0208a7680">thread_send_lsack</a>);
<a name="l00164"></a>00164 
<a name="l00165"></a>00165   <a class="code" href="ospf6__lsdb_8c.html#afe227d03e9560c745dd0ba9a901875b0">ospf6_lsdb_remove_all</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ab033cb877fe417705f424d1bd2f411de">lsdb</a>);
<a name="l00166"></a>00166   <a class="code" href="ospf6__lsdb_8c.html#afe227d03e9560c745dd0ba9a901875b0">ospf6_lsdb_remove_all</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a42c393a90f856992c87da5a9d0607f98">lsupdate_list</a>);
<a name="l00167"></a>00167   <a class="code" href="ospf6__lsdb_8c.html#afe227d03e9560c745dd0ba9a901875b0">ospf6_lsdb_remove_all</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a3a27876455af04270cf1ff5392f5ced3">lsack_list</a>);
<a name="l00168"></a>00168 
<a name="l00169"></a>00169   <a class="code" href="ospf6__lsdb_8c.html#a18be7d056756a45c1170d07756a0863e">ospf6_lsdb_delete</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ab033cb877fe417705f424d1bd2f411de">lsdb</a>);
<a name="l00170"></a>00170   <a class="code" href="ospf6__lsdb_8c.html#a18be7d056756a45c1170d07756a0863e">ospf6_lsdb_delete</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a5a9e237722732d644750122199ff91f5">lsdb_self</a>);
<a name="l00171"></a>00171 
<a name="l00172"></a>00172   <a class="code" href="ospf6__lsdb_8c.html#a18be7d056756a45c1170d07756a0863e">ospf6_lsdb_delete</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a42c393a90f856992c87da5a9d0607f98">lsupdate_list</a>);
<a name="l00173"></a>00173   <a class="code" href="ospf6__lsdb_8c.html#a18be7d056756a45c1170d07756a0863e">ospf6_lsdb_delete</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a3a27876455af04270cf1ff5392f5ced3">lsack_list</a>);
<a name="l00174"></a>00174 
<a name="l00175"></a>00175   <a class="code" href="ospf6__route_8c.html#a02985ae1fd04f0ab2826100b9dae38b2">ospf6_route_table_delete</a> (oi-&gt;<a class="code" href="structospf6__interface.html#af278bb16b6e8833b3f43c3e1cdc3e129">route_connected</a>);
<a name="l00176"></a>00176 
<a name="l00177"></a>00177   <span class="comment">/* cut link */</span>
<a name="l00178"></a>00178   oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00179"></a>00179 
<a name="l00180"></a>00180   <span class="comment">/* plist_name */</span>
<a name="l00181"></a>00181   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#aaa0d586a5df92293c957acfadfff288b">plist_name</a>)
<a name="l00182"></a>00182     <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba770d10c594a76e3efd9885b3e047915e">MTYPE_PREFIX_LIST_STR</a>, oi-&gt;<a class="code" href="structospf6__interface.html#aaa0d586a5df92293c957acfadfff288b">plist_name</a>);
<a name="l00183"></a>00183 
<a name="l00184"></a>00184   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba86c08ff85b65ed1199ab46ae0202eb1a">MTYPE_OSPF6_IF</a>, oi);
<a name="l00185"></a>00185 }
<a name="l00186"></a>00186 
<a name="l00187"></a>00187 <span class="keywordtype">void</span>
<a name="l00188"></a><a class="code" href="ospf6__interface_8h.html#a2cf8410e1ac945e57f02fe594d4ae987">00188</a> <a class="code" href="ospf6__interface_8c.html#aef74083fdb5a142794303109606a3ac8">ospf6_interface_enable</a> (<span class="keyword">struct</span> <a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi)
<a name="l00189"></a>00189 {
<a name="l00190"></a>00190   <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (oi-&gt;<a class="code" href="structospf6__interface.html#aa5dbc797ed38482907f57c66458a3e87">flag</a>, <a class="code" href="ospf6__interface_8h.html#a6bb21f7bcfd7aa0b5d6d7c8640db4848">OSPF6_INTERFACE_DISABLE</a>);
<a name="l00191"></a>00191 
<a name="l00192"></a>00192   oi-&gt;<a class="code" href="structospf6__interface.html#a2166b82112542d46986c60ef49b36ce0">thread_send_hello</a> =
<a name="l00193"></a>00193     <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf6__message_8c.html#a2e117804a7699187ffbbb2558cf3106a">ospf6_hello_send</a>, oi, 0);
<a name="l00194"></a>00194 }
<a name="l00195"></a>00195 
<a name="l00196"></a>00196 <span class="keywordtype">void</span>
<a name="l00197"></a><a class="code" href="ospf6__interface_8h.html#a733c78038fb56e38367808fa1f1df453">00197</a> <a class="code" href="ospf6__interface_8c.html#ac5067f10bf8521d0d022149f8bd165c3">ospf6_interface_disable</a> (<span class="keyword">struct</span> <a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi)
<a name="l00198"></a>00198 {
<a name="l00199"></a>00199   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
<a name="l00200"></a>00200   <span class="keyword">struct </span><a class="code" href="structospf6__neighbor.html">ospf6_neighbor</a> *on;
<a name="l00201"></a>00201 
<a name="l00202"></a>00202   <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (oi-&gt;<a class="code" href="structospf6__interface.html#aa5dbc797ed38482907f57c66458a3e87">flag</a>, <a class="code" href="ospf6__interface_8h.html#a6bb21f7bcfd7aa0b5d6d7c8640db4848">OSPF6_INTERFACE_DISABLE</a>);
<a name="l00203"></a>00203 
<a name="l00204"></a>00204   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ada404f0a64a2f3783445fdf2c2dccf6d">neighbor_list</a>, node, nnode, on))
<a name="l00205"></a>00205       <a class="code" href="ospf6__neighbor_8c.html#abbbc1ba6f8ca18c3308cec096c5ad8b2">ospf6_neighbor_delete</a> (on);
<a name="l00206"></a>00206 
<a name="l00207"></a>00207   <a class="code" href="linklist_8c.html#acd6daa4be8ab3f175376e63c9d9c9500">list_delete_all_node</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ada404f0a64a2f3783445fdf2c2dccf6d">neighbor_list</a>);
<a name="l00208"></a>00208 
<a name="l00209"></a>00209   <a class="code" href="ospf6__lsdb_8c.html#afe227d03e9560c745dd0ba9a901875b0">ospf6_lsdb_remove_all</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ab033cb877fe417705f424d1bd2f411de">lsdb</a>);
<a name="l00210"></a>00210   <a class="code" href="ospf6__lsdb_8c.html#afe227d03e9560c745dd0ba9a901875b0">ospf6_lsdb_remove_all</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a42c393a90f856992c87da5a9d0607f98">lsupdate_list</a>);
<a name="l00211"></a>00211   <a class="code" href="ospf6__lsdb_8c.html#afe227d03e9560c745dd0ba9a901875b0">ospf6_lsdb_remove_all</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a3a27876455af04270cf1ff5392f5ced3">lsack_list</a>);
<a name="l00212"></a>00212 
<a name="l00213"></a>00213   <a class="code" href="thread_8h.html#a7e1de4fc338e4feae498978461742dbb">THREAD_OFF</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a2166b82112542d46986c60ef49b36ce0">thread_send_hello</a>);
<a name="l00214"></a>00214   <a class="code" href="thread_8h.html#a7e1de4fc338e4feae498978461742dbb">THREAD_OFF</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a0f7c7a7f0611d03b12361b0cf0b7cba6">thread_send_lsupdate</a>);
<a name="l00215"></a>00215   <a class="code" href="thread_8h.html#a7e1de4fc338e4feae498978461742dbb">THREAD_OFF</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ac0eb96a5b6f4d1b1d63aa5c0208a7680">thread_send_lsack</a>);
<a name="l00216"></a>00216 }
<a name="l00217"></a>00217 
<a name="l00218"></a>00218 <span class="keyword">static</span> <span class="keyword">struct </span>in6_addr *
<a name="l00219"></a><a class="code" href="ospf6__interface_8c.html#a186a3f04abd1d65aff3023437afa708a">00219</a> <a class="code" href="ospf6__interface_8c.html#a186a3f04abd1d65aff3023437afa708a">ospf6_interface_get_linklocal_address</a> (<span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp)
<a name="l00220"></a>00220 {
<a name="l00221"></a>00221   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *<a class="code" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>;
<a name="l00222"></a>00222   <span class="keyword">struct </span><a class="code" href="structconnected.html">connected</a> *c;
<a name="l00223"></a>00223   <span class="keyword">struct </span>in6_addr *<a class="code" href="spgrid_8c.html#a92119ef27b84f1e2e15792d7ea360ba4">l</a> = (<span class="keyword">struct </span>in6_addr *) <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00224"></a>00224 
<a name="l00225"></a>00225   <span class="comment">/* for each connected address */</span>
<a name="l00226"></a>00226   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ifp-&gt;<a class="code" href="structinterface.html#ac7c47b5cc1df81e51bf1ecea97b4d4b3">connected</a>, n, c))
<a name="l00227"></a>00227     {
<a name="l00228"></a>00228       <span class="comment">/* if family not AF_INET6, ignore */</span>
<a name="l00229"></a>00229       <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> != AF_INET6)
<a name="l00230"></a>00230         <span class="keywordflow">continue</span>;
<a name="l00231"></a>00231 
<a name="l00232"></a>00232       <span class="comment">/* linklocal scope check */</span>
<a name="l00233"></a>00233       <span class="keywordflow">if</span> (IN6_IS_ADDR_LINKLOCAL (&amp;c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;u.prefix6))
<a name="l00234"></a>00234         l = &amp;c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;u.prefix6;
<a name="l00235"></a>00235     }
<a name="l00236"></a>00236   <span class="keywordflow">return</span> <a class="code" href="spgrid_8c.html#a92119ef27b84f1e2e15792d7ea360ba4">l</a>;
<a name="l00237"></a>00237 }
<a name="l00238"></a>00238 
<a name="l00239"></a>00239 <span class="keywordtype">void</span>
<a name="l00240"></a><a class="code" href="ospf6__interface_8h.html#af2559bf6818aced6cf32048b29239d9d">00240</a> <a class="code" href="ospf6__interface_8c.html#ab89387542a0c75dbeeeacb2f9104ba5b">ospf6_interface_if_add</a> (<span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp)
<a name="l00241"></a>00241 {
<a name="l00242"></a>00242   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l00243"></a>00243   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="ospf6__message_8c.html#a6380f44cc4b2ccf7824f9b60d42e09db">iobuflen</a>;
<a name="l00244"></a>00244 
<a name="l00245"></a>00245   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l00246"></a>00246   if (oi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00247"></a>00247     <span class="keywordflow">return</span>;
<a name="l00248"></a>00248 
<a name="l00249"></a>00249   <span class="comment">/* Try to adjust I/O buffer size with IfMtu */</span>
<a name="l00250"></a>00250   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#a88579a4c38c3458d12425986c1a43893">ifmtu</a> == 0)
<a name="l00251"></a>00251     oi-&gt;<a class="code" href="structospf6__interface.html#a88579a4c38c3458d12425986c1a43893">ifmtu</a> = ifp-&gt;<a class="code" href="structinterface.html#a75a892a4df0f60191a13ca07b6625cb1">mtu6</a>;
<a name="l00252"></a>00252   iobuflen = <a class="code" href="ospf6__message_8c.html#aaa8179b6bdd70e5cf3addee60df7aa80">ospf6_iobuf_size</a> (ifp-&gt;<a class="code" href="structinterface.html#a75a892a4df0f60191a13ca07b6625cb1">mtu6</a>);
<a name="l00253"></a>00253   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#a88579a4c38c3458d12425986c1a43893">ifmtu</a> &gt; iobuflen)
<a name="l00254"></a>00254     {
<a name="l00255"></a>00255       <span class="keywordflow">if</span> (<a class="code" href="ospf6__interface_8h.html#ab442f4c1ff59407b56b532e56d2f18da">IS_OSPF6_DEBUG_INTERFACE</a>)
<a name="l00256"></a>00256         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Interface %s: IfMtu is adjusted to I/O buffer size: %d.&quot;</span>,
<a name="l00257"></a>00257             ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, iobuflen);
<a name="l00258"></a>00258       oi-&gt;<a class="code" href="structospf6__interface.html#a88579a4c38c3458d12425986c1a43893">ifmtu</a> = <a class="code" href="ospf6__message_8c.html#a6380f44cc4b2ccf7824f9b60d42e09db">iobuflen</a>;
<a name="l00259"></a>00259     }
<a name="l00260"></a>00260 
<a name="l00261"></a>00261   <span class="comment">/* interface start */</span>
<a name="l00262"></a>00262   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a>)
<a name="l00263"></a>00263     <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf6__interface_8c.html#afbc76fb33a36e04c41f22594fa4726d9">interface_up</a>, oi, 0);
<a name="l00264"></a>00264 }
<a name="l00265"></a>00265 
<a name="l00266"></a>00266 <span class="keywordtype">void</span>
<a name="l00267"></a><a class="code" href="ospf6__interface_8h.html#a159283b552e3e9629049660419ce69e1">00267</a> <a class="code" href="ospf6__interface_8c.html#a39b788dc427d9088db9683135c9127dc">ospf6_interface_if_del</a> (<span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp)
<a name="l00268"></a>00268 {
<a name="l00269"></a>00269   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l00270"></a>00270 
<a name="l00271"></a>00271   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l00272"></a>00272   if (oi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00273"></a>00273     <span class="keywordflow">return</span>;
<a name="l00274"></a>00274 
<a name="l00275"></a>00275   <span class="comment">/* interface stop */</span>
<a name="l00276"></a>00276   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a>)
<a name="l00277"></a>00277     <a class="code" href="thread_8h.html#adfc9185c89375a240b90ab50241c497d">thread_execute</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf6__interface_8c.html#a85072de90c7ee4d14c43a1510d7c20de">interface_down</a>, oi, 0);
<a name="l00278"></a>00278 
<a name="l00279"></a>00279   <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a>-&gt;<a class="code" href="structospf6__area.html#ab06f65e38225287ac3fb4c67cf9dfdcd">if_list</a>, oi);
<a name="l00280"></a>00280   oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a> = (<span class="keyword">struct </span><a class="code" href="structospf6__area.html">ospf6_area</a> *) <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00281"></a>00281 
<a name="l00282"></a>00282   <span class="comment">/* cut link */</span>
<a name="l00283"></a>00283   oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00284"></a>00284   ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00285"></a>00285 
<a name="l00286"></a>00286   <a class="code" href="ospf6__interface_8c.html#aa811a70e8f90016284bba61060d8e839">ospf6_interface_delete</a> (oi);
<a name="l00287"></a>00287 }
<a name="l00288"></a>00288 
<a name="l00289"></a>00289 <span class="keywordtype">void</span>
<a name="l00290"></a><a class="code" href="ospf6__interface_8h.html#a3d0fea4d8007f7cc267c10bcf22ad3da">00290</a> <a class="code" href="ospf6__interface_8c.html#ac74b69e9b3c497946a09261fb35a9123">ospf6_interface_state_update</a> (<span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp)
<a name="l00291"></a>00291 {
<a name="l00292"></a>00292   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l00293"></a>00293 
<a name="l00294"></a>00294   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l00295"></a>00295   if (oi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00296"></a>00296     <span class="keywordflow">return</span>;
<a name="l00297"></a>00297   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00298"></a>00298     <span class="keywordflow">return</span>;
<a name="l00299"></a>00299 
<a name="l00300"></a>00300   <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#ade77fc67f30030f539906dad43c239ab">if_is_up</a> (ifp))
<a name="l00301"></a>00301     <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf6__interface_8c.html#afbc76fb33a36e04c41f22594fa4726d9">interface_up</a>, oi, 0);
<a name="l00302"></a>00302   <span class="keywordflow">else</span>
<a name="l00303"></a>00303     <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf6__interface_8c.html#a85072de90c7ee4d14c43a1510d7c20de">interface_down</a>, oi, 0);
<a name="l00304"></a>00304 
<a name="l00305"></a>00305   <span class="keywordflow">return</span>;
<a name="l00306"></a>00306 }
<a name="l00307"></a>00307 
<a name="l00308"></a>00308 <span class="keywordtype">void</span>
<a name="l00309"></a><a class="code" href="ospf6__interface_8h.html#a21109d9aafc338487e96d20b2a63e4d4">00309</a> <a class="code" href="ospf6__interface_8c.html#a524bafd29fa3104f2a8d9b3afdc339a6">ospf6_interface_connected_route_update</a> (<span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp)
<a name="l00310"></a>00310 {
<a name="l00311"></a>00311   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l00312"></a>00312   <span class="keyword">struct </span><a class="code" href="structospf6__route.html">ospf6_route</a> *route;
<a name="l00313"></a>00313   <span class="keyword">struct </span><a class="code" href="structconnected.html">connected</a> *c;
<a name="l00314"></a>00314   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
<a name="l00315"></a>00315 
<a name="l00316"></a>00316   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l00317"></a>00317   if (oi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00318"></a>00318     <span class="keywordflow">return</span>;
<a name="l00319"></a>00319 
<a name="l00320"></a>00320   <span class="comment">/* reset linklocal pointer */</span>
<a name="l00321"></a>00321   oi-&gt;<a class="code" href="structospf6__interface.html#a8df3591fcba060b5f64e35dfdb338888">linklocal_addr</a> = <a class="code" href="ospf6__interface_8c.html#a186a3f04abd1d65aff3023437afa708a">ospf6_interface_get_linklocal_address</a> (ifp);
<a name="l00322"></a>00322 
<a name="l00323"></a>00323   <span class="comment">/* if area is null, do not make connected-route list */</span>
<a name="l00324"></a>00324   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00325"></a>00325     <span class="keywordflow">return</span>;
<a name="l00326"></a>00326 
<a name="l00327"></a>00327   <span class="comment">/* update &quot;route to advertise&quot; interface route table */</span>
<a name="l00328"></a>00328   <a class="code" href="ospf6__route_8c.html#a0429954cda76d4207a53813e869b451d">ospf6_route_remove_all</a> (oi-&gt;<a class="code" href="structospf6__interface.html#af278bb16b6e8833b3f43c3e1cdc3e129">route_connected</a>);
<a name="l00329"></a>00329 
<a name="l00330"></a>00330   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>-&gt;<a class="code" href="structinterface.html#ac7c47b5cc1df81e51bf1ecea97b4d4b3">connected</a>, node, nnode, c))
<a name="l00331"></a>00331     {
<a name="l00332"></a>00332       <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> != AF_INET6)
<a name="l00333"></a>00333         <span class="keywordflow">continue</span>;
<a name="l00334"></a>00334 
<a name="l00335"></a>00335       <a class="code" href="ospf6__lsa_8h.html#aaedbcfa85e50cc26f649129d0b515d62">CONTINUE_IF_ADDRESS_LINKLOCAL</a> (<a class="code" href="ospf6__interface_8h.html#ab442f4c1ff59407b56b532e56d2f18da">IS_OSPF6_DEBUG_INTERFACE</a>, c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>);
<a name="l00336"></a>00336       <a class="code" href="ospf6__lsa_8h.html#a214a38b0fc376123bcb9152186a48aa8">CONTINUE_IF_ADDRESS_UNSPECIFIED</a> (<a class="code" href="ospf6__interface_8h.html#ab442f4c1ff59407b56b532e56d2f18da">IS_OSPF6_DEBUG_INTERFACE</a>, c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>);
<a name="l00337"></a>00337       <a class="code" href="ospf6__lsa_8h.html#ad2c3d865a19ec725cac57264a19d0aea">CONTINUE_IF_ADDRESS_LOOPBACK</a> (<a class="code" href="ospf6__interface_8h.html#ab442f4c1ff59407b56b532e56d2f18da">IS_OSPF6_DEBUG_INTERFACE</a>, c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>);
<a name="l00338"></a>00338       <a class="code" href="ospf6__lsa_8h.html#a43f25c5dc69929634734c5dcc1494911">CONTINUE_IF_ADDRESS_V4COMPAT</a> (<a class="code" href="ospf6__interface_8h.html#ab442f4c1ff59407b56b532e56d2f18da">IS_OSPF6_DEBUG_INTERFACE</a>, c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>);
<a name="l00339"></a>00339       <a class="code" href="ospf6__lsa_8h.html#afeb8feb152b908634969d71e8de0acf7">CONTINUE_IF_ADDRESS_V4MAPPED</a> (<a class="code" href="ospf6__interface_8h.html#ab442f4c1ff59407b56b532e56d2f18da">IS_OSPF6_DEBUG_INTERFACE</a>, c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>);
<a name="l00340"></a>00340 
<a name="l00341"></a>00341       <span class="comment">/* apply filter */</span>
<a name="l00342"></a>00342       <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#aaa0d586a5df92293c957acfadfff288b">plist_name</a>)
<a name="l00343"></a>00343         {
<a name="l00344"></a>00344           <span class="keyword">struct </span><a class="code" href="structprefix__list.html">prefix_list</a> *plist;
<a name="l00345"></a>00345           <span class="keyword">enum</span> <a class="code" href="plist_8h.html#a3bda5ec3d1202bc8eb472b4d97633cf9">prefix_list_type</a> ret;
<a name="l00346"></a>00346           <span class="keywordtype">char</span> buf[128];
<a name="l00347"></a>00347 
<a name="l00348"></a>00348           <a class="code" href="prefix_8c.html#a8b848557695ae5694bd2282eba23e367">prefix2str</a> (c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>, buf, sizeof (buf));
<a name="l00349"></a>00349           plist = <a class="code" href="plist_8c.html#adfce5b38dccccdc141ffd3571b73a656">prefix_list_lookup</a> (<a class="code" href="zebra_8h.html#ad10f30457e426e1d269466d3b6603c3c">AFI_IP6</a>, oi-&gt;<a class="code" href="structospf6__interface.html#aaa0d586a5df92293c957acfadfff288b">plist_name</a>);
<a name="l00350"></a>00350           ret = <a class="code" href="plist_8c.html#a6fd9bac08d2cb3d2e315d88af146a7f0">prefix_list_apply</a> (plist, (<span class="keywordtype">void</span> *) c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>);
<a name="l00351"></a>00351           <span class="keywordflow">if</span> (ret == <a class="code" href="plist_8h.html#a3bda5ec3d1202bc8eb472b4d97633cf9a697cf8d0db0ead308a6ef01301f9543c">PREFIX_DENY</a>)
<a name="l00352"></a>00352             {
<a name="l00353"></a>00353               <span class="keywordflow">if</span> (<a class="code" href="ospf6__interface_8h.html#ab442f4c1ff59407b56b532e56d2f18da">IS_OSPF6_DEBUG_INTERFACE</a>)
<a name="l00354"></a>00354                 <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s on %s filtered by prefix-list %s &quot;</span>,
<a name="l00355"></a>00355                 buf, oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, oi-&gt;<a class="code" href="structospf6__interface.html#aaa0d586a5df92293c957acfadfff288b">plist_name</a>);
<a name="l00356"></a>00356               <span class="keywordflow">continue</span>;
<a name="l00357"></a>00357             }
<a name="l00358"></a>00358         }
<a name="l00359"></a>00359 
<a name="l00360"></a>00360       route = <a class="code" href="ospf6__route_8c.html#af4307729ed4bcbcb064c0a7363f3084f">ospf6_route_create</a> ();
<a name="l00361"></a>00361       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;route-&gt;<a class="code" href="structospf6__route.html#a39f2a986ed391c16d5216ad5797c2eda">prefix</a>, c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>, sizeof (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a>));
<a name="l00362"></a>00362       <a class="code" href="prefix_8c.html#a99265c5e11b1867552cf784a4cac8252">apply_mask</a> (&amp;route-&gt;<a class="code" href="structospf6__route.html#a39f2a986ed391c16d5216ad5797c2eda">prefix</a>);
<a name="l00363"></a>00363       route-&gt;<a class="code" href="structospf6__route.html#a74705096f252ccb17294f45fe3945757">type</a> = <a class="code" href="ospf6__route_8h.html#a2f4b4255cc7cd17befa380178d67e819">OSPF6_DEST_TYPE_NETWORK</a>;
<a name="l00364"></a>00364       route-&gt;<a class="code" href="structospf6__route.html#a5a6311b685c1d76468b47edb218bf4a5">path</a>.<a class="code" href="structospf6__path.html#ad4fc384dbcd343e1ba3e5918e4d25c15">area_id</a> = oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a>-&gt;<a class="code" href="structospf6__area.html#aec3bacc0c813ff937b5675595a3aefa6">area_id</a>;
<a name="l00365"></a>00365       route-&gt;<a class="code" href="structospf6__route.html#a5a6311b685c1d76468b47edb218bf4a5">path</a>.<a class="code" href="structospf6__path.html#a9cffc83cee981501db820772cab34b7e">type</a> = <a class="code" href="ospf6__route_8h.html#a6cda40031860bfed6184599f4ac957ec">OSPF6_PATH_TYPE_INTRA</a>;
<a name="l00366"></a>00366       route-&gt;<a class="code" href="structospf6__route.html#a5a6311b685c1d76468b47edb218bf4a5">path</a>.<a class="code" href="structospf6__path.html#ab33bf3c3ce1f07b918167dbfa4af30e6">cost</a> = oi-&gt;<a class="code" href="structospf6__interface.html#afe7ec302275d6abc2bab9337ceaef164">cost</a>;
<a name="l00367"></a>00367       route-&gt;<a class="code" href="structospf6__route.html#aeff840303635790b4975364a57c300a3">nexthop</a>[0].<a class="code" href="structospf6__nexthop.html#a5809ab035d671ce92e5492ea78d79051">ifindex</a> = oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>;
<a name="l00368"></a>00368       <a class="code" href="sockunion_8c.html#ac13c2042641ea5031bc7e244e8061b84">inet_pton</a> (AF_INET6, <span class="stringliteral">&quot;::1&quot;</span>, &amp;route-&gt;<a class="code" href="structospf6__route.html#aeff840303635790b4975364a57c300a3">nexthop</a>[0].<a class="code" href="structospf6__nexthop.html#aca0fcfd059411e2638d19d1d95288a10">address</a>);
<a name="l00369"></a>00369       <a class="code" href="ospf6__route_8c.html#ab35c4efbc72f9bf772e334f1725da353">ospf6_route_add</a> (route, oi-&gt;<a class="code" href="structospf6__interface.html#af278bb16b6e8833b3f43c3e1cdc3e129">route_connected</a>);
<a name="l00370"></a>00370     }
<a name="l00371"></a>00371 
<a name="l00372"></a>00372   <span class="comment">/* create new Link-LSA */</span>
<a name="l00373"></a>00373   <a class="code" href="ospf6__intra_8h.html#a784e635145a354b7e3d373e07c245b9d">OSPF6_LINK_LSA_SCHEDULE</a> (oi);
<a name="l00374"></a>00374   <a class="code" href="ospf6__intra_8h.html#af1bf24203358733b7eae1c1426dd1849">OSPF6_INTRA_PREFIX_LSA_SCHEDULE_TRANSIT</a> (oi);
<a name="l00375"></a>00375   <a class="code" href="ospf6__intra_8h.html#a57780a151b320e30333bb76d55f71ad7">OSPF6_INTRA_PREFIX_LSA_SCHEDULE_STUB</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a>);
<a name="l00376"></a>00376 }
<a name="l00377"></a>00377 
<a name="l00378"></a>00378 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00379"></a><a class="code" href="ospf6__interface_8c.html#a555001dc455184fd8e582262d09f30c7">00379</a> <a class="code" href="ospf6__interface_8c.html#a555001dc455184fd8e582262d09f30c7">ospf6_interface_state_change</a> (u_char <a class="code" href="bgp__fsm_8c.html#ac0c302bc97f010b7f5965faa07b00354">next_state</a>, <span class="keyword">struct</span> <a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi)
<a name="l00380"></a>00380 {
<a name="l00381"></a>00381   u_char prev_state;
<a name="l00382"></a>00382 
<a name="l00383"></a>00383   prev_state = oi-&gt;<a class="code" href="structospf6__interface.html#aafdfe7c67c1ff540201718b688e0a15b">state</a>;
<a name="l00384"></a>00384   oi-&gt;<a class="code" href="structospf6__interface.html#aafdfe7c67c1ff540201718b688e0a15b">state</a> = <a class="code" href="bgp__fsm_8c.html#ac0c302bc97f010b7f5965faa07b00354">next_state</a>;
<a name="l00385"></a>00385 
<a name="l00386"></a>00386   <span class="keywordflow">if</span> (prev_state == next_state)
<a name="l00387"></a>00387     <span class="keywordflow">return</span>;
<a name="l00388"></a>00388 
<a name="l00389"></a>00389   <span class="comment">/* log */</span>
<a name="l00390"></a>00390   <span class="keywordflow">if</span> (<a class="code" href="ospf6__interface_8h.html#ab442f4c1ff59407b56b532e56d2f18da">IS_OSPF6_DEBUG_INTERFACE</a>)
<a name="l00391"></a>00391     {
<a name="l00392"></a>00392       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Interface state change %s: %s -&gt; %s&quot;</span>, oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>,
<a name="l00393"></a>00393           <a class="code" href="ospf6__interface_8c.html#ae87e59ecae5232da2543307cd88795b8">ospf6_interface_state_str</a>[prev_state],
<a name="l00394"></a>00394           <a class="code" href="ospf6__interface_8c.html#ae87e59ecae5232da2543307cd88795b8">ospf6_interface_state_str</a>[next_state]);
<a name="l00395"></a>00395     }
<a name="l00396"></a>00396 
<a name="l00397"></a>00397   <span class="keywordflow">if</span> ((prev_state == <a class="code" href="ospf6__interface_8h.html#ad83f536f4674c165d7f393d28f087843">OSPF6_INTERFACE_DR</a> ||
<a name="l00398"></a>00398        prev_state == <a class="code" href="ospf6__interface_8h.html#ad0b8da8f1b2db8ec33b43b223b114d51">OSPF6_INTERFACE_BDR</a>) &amp;&amp;
<a name="l00399"></a>00399       (next_state != <a class="code" href="ospf6__interface_8h.html#ad83f536f4674c165d7f393d28f087843">OSPF6_INTERFACE_DR</a> &amp;&amp;
<a name="l00400"></a>00400        next_state != <a class="code" href="ospf6__interface_8h.html#ad0b8da8f1b2db8ec33b43b223b114d51">OSPF6_INTERFACE_BDR</a>))
<a name="l00401"></a>00401     <a class="code" href="ospf6__network_8c.html#ab3591769def71f6347a6336b3cf652ed">ospf6_leave_alldrouters</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>);
<a name="l00402"></a>00402   <span class="keywordflow">if</span> ((prev_state != <a class="code" href="ospf6__interface_8h.html#ad83f536f4674c165d7f393d28f087843">OSPF6_INTERFACE_DR</a> &amp;&amp;
<a name="l00403"></a>00403        prev_state != <a class="code" href="ospf6__interface_8h.html#ad0b8da8f1b2db8ec33b43b223b114d51">OSPF6_INTERFACE_BDR</a>) &amp;&amp;
<a name="l00404"></a>00404       (next_state == <a class="code" href="ospf6__interface_8h.html#ad83f536f4674c165d7f393d28f087843">OSPF6_INTERFACE_DR</a> ||
<a name="l00405"></a>00405        next_state == <a class="code" href="ospf6__interface_8h.html#ad0b8da8f1b2db8ec33b43b223b114d51">OSPF6_INTERFACE_BDR</a>))
<a name="l00406"></a>00406     <a class="code" href="ospf6__network_8c.html#adb173cdd5bf40236052b1f0311cf6d63">ospf6_join_alldrouters</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>);
<a name="l00407"></a>00407 
<a name="l00408"></a>00408   <a class="code" href="ospf6__intra_8h.html#ab8e4a09ea2a5ce941594dc24d6165519">OSPF6_ROUTER_LSA_SCHEDULE</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a>);
<a name="l00409"></a>00409   <span class="keywordflow">if</span> (next_state == <a class="code" href="ospf6__interface_8h.html#a49b579760cabb266eb7331686381fc51">OSPF6_INTERFACE_DOWN</a>)
<a name="l00410"></a>00410     {
<a name="l00411"></a>00411       <a class="code" href="ospf6__intra_8h.html#aa75cb2c2628c1081975a31c2b5b5528a">OSPF6_NETWORK_LSA_EXECUTE</a> (oi);
<a name="l00412"></a>00412       <a class="code" href="ospf6__intra_8h.html#a9cc8060f0f3fb6163d2ea4e92a7607c9">OSPF6_INTRA_PREFIX_LSA_EXECUTE_TRANSIT</a> (oi);
<a name="l00413"></a>00413       <a class="code" href="ospf6__intra_8h.html#a57780a151b320e30333bb76d55f71ad7">OSPF6_INTRA_PREFIX_LSA_SCHEDULE_STUB</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a>);
<a name="l00414"></a>00414     }
<a name="l00415"></a>00415   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (prev_state == <a class="code" href="ospf6__interface_8h.html#ad83f536f4674c165d7f393d28f087843">OSPF6_INTERFACE_DR</a> ||
<a name="l00416"></a>00416            next_state == <a class="code" href="ospf6__interface_8h.html#ad83f536f4674c165d7f393d28f087843">OSPF6_INTERFACE_DR</a>)
<a name="l00417"></a>00417     {
<a name="l00418"></a>00418       <a class="code" href="ospf6__intra_8h.html#aa9749144d232f3aa259fe687e54803aa">OSPF6_NETWORK_LSA_SCHEDULE</a> (oi);
<a name="l00419"></a>00419       <a class="code" href="ospf6__intra_8h.html#af1bf24203358733b7eae1c1426dd1849">OSPF6_INTRA_PREFIX_LSA_SCHEDULE_TRANSIT</a> (oi);
<a name="l00420"></a>00420       <a class="code" href="ospf6__intra_8h.html#a57780a151b320e30333bb76d55f71ad7">OSPF6_INTRA_PREFIX_LSA_SCHEDULE_STUB</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a>);
<a name="l00421"></a>00421     }
<a name="l00422"></a>00422 }
<a name="l00423"></a>00423 
<a name="l00424"></a>00424 
<a name="l00425"></a>00425 <span class="comment">/* DR Election, RFC2328 section 9.4 */</span>
<a name="l00426"></a>00426 
<a name="l00427"></a><a class="code" href="ospf6__interface_8c.html#a6d6a30e92dc8153371cd9bf2d42479dd">00427</a> <span class="preprocessor">#define IS_ELIGIBLE(n) \</span>
<a name="l00428"></a>00428 <span class="preprocessor">  ((n)-&gt;state &gt;= OSPF6_NEIGHBOR_TWOWAY &amp;&amp; (n)-&gt;priority != 0)</span>
<a name="l00429"></a>00429 <span class="preprocessor"></span>
<a name="l00430"></a>00430 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structospf6__neighbor.html">ospf6_neighbor</a> *
<a name="l00431"></a><a class="code" href="ospf6__interface_8c.html#aaa28b9c34dc2587e2bcee1520c6ba7e6">00431</a> <a class="code" href="ospf6__interface_8c.html#aaa28b9c34dc2587e2bcee1520c6ba7e6">better_bdrouter</a> (<span class="keyword">struct</span> <a class="code" href="structospf6__neighbor.html">ospf6_neighbor</a> *a, <span class="keyword">struct</span> <a class="code" href="structospf6__neighbor.html">ospf6_neighbor</a> *b)
<a name="l00432"></a>00432 {
<a name="l00433"></a>00433   <span class="keywordflow">if</span> ((a == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> || ! <a class="code" href="ospf6__interface_8c.html#a6d6a30e92dc8153371cd9bf2d42479dd">IS_ELIGIBLE</a> (a) || a-&gt;<a class="code" href="structospf6__neighbor.html#a71a9a7c78bf284d3b6ccf019d5724bc4">drouter</a> == a-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>) &amp;&amp;
<a name="l00434"></a>00434       (b == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> || ! <a class="code" href="ospf6__interface_8c.html#a6d6a30e92dc8153371cd9bf2d42479dd">IS_ELIGIBLE</a> (b) || b-&gt;<a class="code" href="structospf6__neighbor.html#a71a9a7c78bf284d3b6ccf019d5724bc4">drouter</a> == b-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>))
<a name="l00435"></a>00435     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00436"></a>00436   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (a == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> || ! <a class="code" href="ospf6__interface_8c.html#a6d6a30e92dc8153371cd9bf2d42479dd">IS_ELIGIBLE</a> (a) || a-&gt;<a class="code" href="structospf6__neighbor.html#a71a9a7c78bf284d3b6ccf019d5724bc4">drouter</a> == a-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>)
<a name="l00437"></a>00437     <span class="keywordflow">return</span> b;
<a name="l00438"></a>00438   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (b == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> || ! <a class="code" href="ospf6__interface_8c.html#a6d6a30e92dc8153371cd9bf2d42479dd">IS_ELIGIBLE</a> (b) || b-&gt;<a class="code" href="structospf6__neighbor.html#a71a9a7c78bf284d3b6ccf019d5724bc4">drouter</a> == b-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>)
<a name="l00439"></a>00439     <span class="keywordflow">return</span> a;
<a name="l00440"></a>00440 
<a name="l00441"></a>00441   <span class="keywordflow">if</span> (a-&gt;<a class="code" href="structospf6__neighbor.html#a51bfd494bc8b93c40f6645d8e0fb4223">bdrouter</a> == a-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a> &amp;&amp; b-&gt;<a class="code" href="structospf6__neighbor.html#a51bfd494bc8b93c40f6645d8e0fb4223">bdrouter</a> != b-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>)
<a name="l00442"></a>00442     <span class="keywordflow">return</span> a;
<a name="l00443"></a>00443   <span class="keywordflow">if</span> (a-&gt;<a class="code" href="structospf6__neighbor.html#a51bfd494bc8b93c40f6645d8e0fb4223">bdrouter</a> != a-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a> &amp;&amp; b-&gt;<a class="code" href="structospf6__neighbor.html#a51bfd494bc8b93c40f6645d8e0fb4223">bdrouter</a> == b-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>)
<a name="l00444"></a>00444     <span class="keywordflow">return</span> b;
<a name="l00445"></a>00445 
<a name="l00446"></a>00446   <span class="keywordflow">if</span> (a-&gt;<a class="code" href="structospf6__neighbor.html#a9035e4443ced9c02caef273c1375c1a7">priority</a> &gt; b-&gt;<a class="code" href="structospf6__neighbor.html#a9035e4443ced9c02caef273c1375c1a7">priority</a>)
<a name="l00447"></a>00447     <span class="keywordflow">return</span> a;
<a name="l00448"></a>00448   <span class="keywordflow">if</span> (a-&gt;<a class="code" href="structospf6__neighbor.html#a9035e4443ced9c02caef273c1375c1a7">priority</a> &lt; b-&gt;<a class="code" href="structospf6__neighbor.html#a9035e4443ced9c02caef273c1375c1a7">priority</a>)
<a name="l00449"></a>00449     <span class="keywordflow">return</span> b;
<a name="l00450"></a>00450 
<a name="l00451"></a>00451   <span class="keywordflow">if</span> (ntohl (a-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>) &gt; ntohl (b-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>))
<a name="l00452"></a>00452     <span class="keywordflow">return</span> a;
<a name="l00453"></a>00453   <span class="keywordflow">if</span> (ntohl (a-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>) &lt; ntohl (b-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>))
<a name="l00454"></a>00454     <span class="keywordflow">return</span> b;
<a name="l00455"></a>00455 
<a name="l00456"></a>00456   <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;Router-ID duplicate ?&quot;</span>);
<a name="l00457"></a>00457   <span class="keywordflow">return</span> a;
<a name="l00458"></a>00458 }
<a name="l00459"></a>00459 
<a name="l00460"></a>00460 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structospf6__neighbor.html">ospf6_neighbor</a> *
<a name="l00461"></a><a class="code" href="ospf6__interface_8c.html#a4965393f25ad0e682c039b4e525040eb">00461</a> <a class="code" href="ospf6__interface_8c.html#a4965393f25ad0e682c039b4e525040eb">better_drouter</a> (<span class="keyword">struct</span> <a class="code" href="structospf6__neighbor.html">ospf6_neighbor</a> *a, <span class="keyword">struct</span> <a class="code" href="structospf6__neighbor.html">ospf6_neighbor</a> *b)
<a name="l00462"></a>00462 {
<a name="l00463"></a>00463   <span class="keywordflow">if</span> ((a == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> || ! <a class="code" href="ospf6__interface_8c.html#a6d6a30e92dc8153371cd9bf2d42479dd">IS_ELIGIBLE</a> (a) || a-&gt;<a class="code" href="structospf6__neighbor.html#a71a9a7c78bf284d3b6ccf019d5724bc4">drouter</a> != a-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>) &amp;&amp;
<a name="l00464"></a>00464       (b == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> || ! <a class="code" href="ospf6__interface_8c.html#a6d6a30e92dc8153371cd9bf2d42479dd">IS_ELIGIBLE</a> (b) || b-&gt;<a class="code" href="structospf6__neighbor.html#a71a9a7c78bf284d3b6ccf019d5724bc4">drouter</a> != b-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>))
<a name="l00465"></a>00465     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00466"></a>00466   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (a == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> || ! <a class="code" href="ospf6__interface_8c.html#a6d6a30e92dc8153371cd9bf2d42479dd">IS_ELIGIBLE</a> (a) || a-&gt;<a class="code" href="structospf6__neighbor.html#a71a9a7c78bf284d3b6ccf019d5724bc4">drouter</a> != a-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>)
<a name="l00467"></a>00467     <span class="keywordflow">return</span> b;
<a name="l00468"></a>00468   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (b == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> || ! <a class="code" href="ospf6__interface_8c.html#a6d6a30e92dc8153371cd9bf2d42479dd">IS_ELIGIBLE</a> (b) || b-&gt;<a class="code" href="structospf6__neighbor.html#a71a9a7c78bf284d3b6ccf019d5724bc4">drouter</a> != b-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>)
<a name="l00469"></a>00469     <span class="keywordflow">return</span> a;
<a name="l00470"></a>00470 
<a name="l00471"></a>00471   <span class="keywordflow">if</span> (a-&gt;<a class="code" href="structospf6__neighbor.html#a71a9a7c78bf284d3b6ccf019d5724bc4">drouter</a> == a-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a> &amp;&amp; b-&gt;<a class="code" href="structospf6__neighbor.html#a71a9a7c78bf284d3b6ccf019d5724bc4">drouter</a> != b-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>)
<a name="l00472"></a>00472     <span class="keywordflow">return</span> a;
<a name="l00473"></a>00473   <span class="keywordflow">if</span> (a-&gt;<a class="code" href="structospf6__neighbor.html#a71a9a7c78bf284d3b6ccf019d5724bc4">drouter</a> != a-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a> &amp;&amp; b-&gt;<a class="code" href="structospf6__neighbor.html#a71a9a7c78bf284d3b6ccf019d5724bc4">drouter</a> == b-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>)
<a name="l00474"></a>00474     <span class="keywordflow">return</span> b;
<a name="l00475"></a>00475 
<a name="l00476"></a>00476   <span class="keywordflow">if</span> (a-&gt;<a class="code" href="structospf6__neighbor.html#a9035e4443ced9c02caef273c1375c1a7">priority</a> &gt; b-&gt;<a class="code" href="structospf6__neighbor.html#a9035e4443ced9c02caef273c1375c1a7">priority</a>)
<a name="l00477"></a>00477     <span class="keywordflow">return</span> a;
<a name="l00478"></a>00478   <span class="keywordflow">if</span> (a-&gt;<a class="code" href="structospf6__neighbor.html#a9035e4443ced9c02caef273c1375c1a7">priority</a> &lt; b-&gt;<a class="code" href="structospf6__neighbor.html#a9035e4443ced9c02caef273c1375c1a7">priority</a>)
<a name="l00479"></a>00479     <span class="keywordflow">return</span> b;
<a name="l00480"></a>00480 
<a name="l00481"></a>00481   <span class="keywordflow">if</span> (ntohl (a-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>) &gt; ntohl (b-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>))
<a name="l00482"></a>00482     <span class="keywordflow">return</span> a;
<a name="l00483"></a>00483   <span class="keywordflow">if</span> (ntohl (a-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>) &lt; ntohl (b-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>))
<a name="l00484"></a>00484     <span class="keywordflow">return</span> b;
<a name="l00485"></a>00485 
<a name="l00486"></a>00486   <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;Router-ID duplicate ?&quot;</span>);
<a name="l00487"></a>00487   <span class="keywordflow">return</span> a;
<a name="l00488"></a>00488 }
<a name="l00489"></a>00489 
<a name="l00490"></a>00490 <span class="keyword">static</span> u_char
<a name="l00491"></a><a class="code" href="ospf6__interface_8c.html#ad107be702ff32a3829b0975c1c889b21">00491</a> <a class="code" href="ospf6__interface_8c.html#ad107be702ff32a3829b0975c1c889b21">dr_election</a> (<span class="keyword">struct</span> <a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi)
<a name="l00492"></a>00492 {
<a name="l00493"></a>00493   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
<a name="l00494"></a>00494   <span class="keyword">struct </span><a class="code" href="structospf6__neighbor.html">ospf6_neighbor</a> *on, *<a class="code" href="structospf6__neighbor.html#a71a9a7c78bf284d3b6ccf019d5724bc4">drouter</a>, *<a class="code" href="structospf6__neighbor.html#a51bfd494bc8b93c40f6645d8e0fb4223">bdrouter</a>, myself;
<a name="l00495"></a>00495   <span class="keyword">struct </span><a class="code" href="structospf6__neighbor.html">ospf6_neighbor</a> *best_drouter, *best_bdrouter;
<a name="l00496"></a>00496   u_char <a class="code" href="bgp__fsm_8c.html#ac0c302bc97f010b7f5965faa07b00354">next_state</a> = 0;
<a name="l00497"></a>00497 
<a name="l00498"></a>00498   drouter = bdrouter = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00499"></a>00499   best_drouter = best_bdrouter = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00500"></a>00500 
<a name="l00501"></a>00501   <span class="comment">/* pseudo neighbor myself, including noting current DR/BDR (1) */</span>
<a name="l00502"></a>00502   memset (&amp;myself, 0, <span class="keyword">sizeof</span> (myself));
<a name="l00503"></a>00503   <a class="code" href="sockunion_8c.html#a5bfb767e8fa3f9ff5d2a1e19d71791f4">inet_ntop</a> (AF_INET, &amp;oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a>-&gt;<a class="code" href="structospf6__area.html#a86562db489ba46500cda50f4fa646c69">ospf6</a>-&gt;<a class="code" href="structospf6.html#a4dc92a648ae2190f7cf5b383c475d2aa">router_id</a>, myself.<a class="code" href="structospf6__neighbor.html#aa0ccec2f7b9c56628ce2e4a0bc37d463">name</a>,
<a name="l00504"></a>00504              sizeof (myself.<a class="code" href="structospf6__neighbor.html#aa0ccec2f7b9c56628ce2e4a0bc37d463">name</a>));
<a name="l00505"></a>00505   myself.<a class="code" href="structospf6__neighbor.html#a4c749b4db801c300f6b11b0340a37600">state</a> = <a class="code" href="ospf6__neighbor_8h.html#afc191d3ebf67c52c9c2a8bb13979f915">OSPF6_NEIGHBOR_TWOWAY</a>;
<a name="l00506"></a>00506   myself.<a class="code" href="structospf6__neighbor.html#a71a9a7c78bf284d3b6ccf019d5724bc4">drouter</a> = oi-&gt;<a class="code" href="structospf6__interface.html#a5e0184b714337299cd1fa5ae9cc87eb0">drouter</a>;
<a name="l00507"></a>00507   myself.<a class="code" href="structospf6__neighbor.html#a51bfd494bc8b93c40f6645d8e0fb4223">bdrouter</a> = oi-&gt;<a class="code" href="structospf6__interface.html#a7b1736cd4740da2f26d27caf31983964">bdrouter</a>;
<a name="l00508"></a>00508   myself.<a class="code" href="structospf6__neighbor.html#a9035e4443ced9c02caef273c1375c1a7">priority</a> = oi-&gt;<a class="code" href="structospf6__interface.html#a91a541af8d7b9a9b224b2dbb768f4822">priority</a>;
<a name="l00509"></a>00509   myself.<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a> = oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a>-&gt;<a class="code" href="structospf6__area.html#a86562db489ba46500cda50f4fa646c69">ospf6</a>-&gt;<a class="code" href="structospf6.html#a4dc92a648ae2190f7cf5b383c475d2aa">router_id</a>;
<a name="l00510"></a>00510 
<a name="l00511"></a>00511   <span class="comment">/* Electing BDR (2) */</span>
<a name="l00512"></a>00512   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ada404f0a64a2f3783445fdf2c2dccf6d">neighbor_list</a>, node, nnode, on))
<a name="l00513"></a>00513     bdrouter = <a class="code" href="ospf6__interface_8c.html#aaa28b9c34dc2587e2bcee1520c6ba7e6">better_bdrouter</a> (bdrouter, on);
<a name="l00514"></a>00514   
<a name="l00515"></a>00515   best_bdrouter = <a class="code" href="structospf6__neighbor.html#a51bfd494bc8b93c40f6645d8e0fb4223">bdrouter</a>;
<a name="l00516"></a>00516   bdrouter = <a class="code" href="ospf6__interface_8c.html#aaa28b9c34dc2587e2bcee1520c6ba7e6">better_bdrouter</a> (best_bdrouter, &amp;myself);
<a name="l00517"></a>00517 
<a name="l00518"></a>00518   <span class="comment">/* Electing DR (3) */</span>
<a name="l00519"></a>00519   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ada404f0a64a2f3783445fdf2c2dccf6d">neighbor_list</a>, node, nnode, on))
<a name="l00520"></a>00520     drouter = <a class="code" href="ospf6__interface_8c.html#a4965393f25ad0e682c039b4e525040eb">better_drouter</a> (drouter, on);
<a name="l00521"></a>00521 
<a name="l00522"></a>00522   best_drouter = <a class="code" href="structospf6__neighbor.html#a71a9a7c78bf284d3b6ccf019d5724bc4">drouter</a>;
<a name="l00523"></a>00523   drouter = <a class="code" href="ospf6__interface_8c.html#a4965393f25ad0e682c039b4e525040eb">better_drouter</a> (best_drouter, &amp;myself);
<a name="l00524"></a>00524   <span class="keywordflow">if</span> (drouter == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00525"></a>00525     drouter = <a class="code" href="structospf6__neighbor.html#a51bfd494bc8b93c40f6645d8e0fb4223">bdrouter</a>;
<a name="l00526"></a>00526 
<a name="l00527"></a>00527   <span class="comment">/* the router itself is newly/no longer DR/BDR (4) */</span>
<a name="l00528"></a>00528   <span class="keywordflow">if</span> ((drouter == &amp;myself &amp;&amp; myself.<a class="code" href="structospf6__neighbor.html#a71a9a7c78bf284d3b6ccf019d5724bc4">drouter</a> != myself.<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>) ||
<a name="l00529"></a>00529       (drouter != &amp;myself &amp;&amp; myself.<a class="code" href="structospf6__neighbor.html#a71a9a7c78bf284d3b6ccf019d5724bc4">drouter</a> == myself.<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>) ||
<a name="l00530"></a>00530       (bdrouter == &amp;myself &amp;&amp; myself.<a class="code" href="structospf6__neighbor.html#a51bfd494bc8b93c40f6645d8e0fb4223">bdrouter</a> != myself.<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>) ||
<a name="l00531"></a>00531       (bdrouter != &amp;myself &amp;&amp; myself.<a class="code" href="structospf6__neighbor.html#a51bfd494bc8b93c40f6645d8e0fb4223">bdrouter</a> == myself.<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a>))
<a name="l00532"></a>00532     {
<a name="l00533"></a>00533       myself.<a class="code" href="structospf6__neighbor.html#a71a9a7c78bf284d3b6ccf019d5724bc4">drouter</a> = (drouter ? drouter-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a> : htonl (0));
<a name="l00534"></a>00534       myself.<a class="code" href="structospf6__neighbor.html#a51bfd494bc8b93c40f6645d8e0fb4223">bdrouter</a> = (bdrouter ? bdrouter-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a> : htonl (0));
<a name="l00535"></a>00535 
<a name="l00536"></a>00536       <span class="comment">/* compatible to Electing BDR (2) */</span>
<a name="l00537"></a>00537       bdrouter = <a class="code" href="ospf6__interface_8c.html#aaa28b9c34dc2587e2bcee1520c6ba7e6">better_bdrouter</a> (best_bdrouter, &amp;myself);
<a name="l00538"></a>00538 
<a name="l00539"></a>00539       <span class="comment">/* compatible to Electing DR (3) */</span>
<a name="l00540"></a>00540       drouter = <a class="code" href="ospf6__interface_8c.html#a4965393f25ad0e682c039b4e525040eb">better_drouter</a> (best_drouter, &amp;myself);
<a name="l00541"></a>00541       <span class="keywordflow">if</span> (drouter == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00542"></a>00542         drouter = <a class="code" href="structospf6__neighbor.html#a51bfd494bc8b93c40f6645d8e0fb4223">bdrouter</a>;
<a name="l00543"></a>00543     }
<a name="l00544"></a>00544 
<a name="l00545"></a>00545   <span class="comment">/* Set interface state accordingly (5) */</span>
<a name="l00546"></a>00546   <span class="keywordflow">if</span> (drouter &amp;&amp; drouter == &amp;myself)
<a name="l00547"></a>00547     next_state = <a class="code" href="ospf6__interface_8h.html#ad83f536f4674c165d7f393d28f087843">OSPF6_INTERFACE_DR</a>;
<a name="l00548"></a>00548   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (bdrouter &amp;&amp; bdrouter == &amp;myself)
<a name="l00549"></a>00549     next_state = <a class="code" href="ospf6__interface_8h.html#ad0b8da8f1b2db8ec33b43b223b114d51">OSPF6_INTERFACE_BDR</a>;
<a name="l00550"></a>00550   <span class="keywordflow">else</span>
<a name="l00551"></a>00551     next_state = <a class="code" href="ospf6__interface_8h.html#a9c44344a8a13bc7d9b84be56a7efc0eb">OSPF6_INTERFACE_DROTHER</a>;
<a name="l00552"></a>00552 
<a name="l00553"></a>00553   <span class="comment">/* If NBMA, schedule Start for each neighbor having priority of 0 (6) */</span>
<a name="l00554"></a>00554   <span class="comment">/* XXX */</span>
<a name="l00555"></a>00555 
<a name="l00556"></a>00556   <span class="comment">/* If DR or BDR change, invoke AdjOK? for each neighbor (7) */</span>
<a name="l00557"></a>00557   <span class="comment">/* RFC 2328 section 12.4. Originating LSAs (3) will be handled</span>
<a name="l00558"></a>00558 <span class="comment">     accordingly after AdjOK */</span>
<a name="l00559"></a>00559   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#a5e0184b714337299cd1fa5ae9cc87eb0">drouter</a> != (drouter ? drouter-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a> : htonl (0)) ||
<a name="l00560"></a>00560       oi-&gt;<a class="code" href="structospf6__interface.html#a7b1736cd4740da2f26d27caf31983964">bdrouter</a> != (bdrouter ? bdrouter-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a> : htonl (0)))
<a name="l00561"></a>00561     {
<a name="l00562"></a>00562       <span class="keywordflow">if</span> (<a class="code" href="ospf6__interface_8h.html#ab442f4c1ff59407b56b532e56d2f18da">IS_OSPF6_DEBUG_INTERFACE</a>)
<a name="l00563"></a>00563         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;DR Election on %s: DR: %s BDR: %s&quot;</span>, oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>,
<a name="l00564"></a>00564             (drouter ? drouter-&gt;<a class="code" href="structospf6__neighbor.html#aa0ccec2f7b9c56628ce2e4a0bc37d463">name</a> : <span class="stringliteral">&quot;0.0.0.0&quot;</span>),
<a name="l00565"></a>00565             (bdrouter ? bdrouter-&gt;<a class="code" href="structospf6__neighbor.html#aa0ccec2f7b9c56628ce2e4a0bc37d463">name</a> : <span class="stringliteral">&quot;0.0.0.0&quot;</span>));
<a name="l00566"></a>00566 
<a name="l00567"></a>00567       <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ada404f0a64a2f3783445fdf2c2dccf6d">neighbor_list</a>, node, on))
<a name="l00568"></a>00568         {
<a name="l00569"></a>00569           <span class="keywordflow">if</span> (on-&gt;<a class="code" href="structospf6__neighbor.html#a4c749b4db801c300f6b11b0340a37600">state</a> &lt; <a class="code" href="ospf6__neighbor_8h.html#afc191d3ebf67c52c9c2a8bb13979f915">OSPF6_NEIGHBOR_TWOWAY</a>)
<a name="l00570"></a>00570             <span class="keywordflow">continue</span>;
<a name="l00571"></a>00571           <span class="comment">/* Schedule AdjOK. */</span>
<a name="l00572"></a>00572           <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf6__neighbor_8c.html#afe014f32ef6eb4b52b72806386cd16df">adj_ok</a>, on, 0);
<a name="l00573"></a>00573         }
<a name="l00574"></a>00574     }
<a name="l00575"></a>00575 
<a name="l00576"></a>00576   oi-&gt;<a class="code" href="structospf6__interface.html#a5e0184b714337299cd1fa5ae9cc87eb0">drouter</a> = (drouter ? drouter-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a> : htonl (0));
<a name="l00577"></a>00577   oi-&gt;<a class="code" href="structospf6__interface.html#a7b1736cd4740da2f26d27caf31983964">bdrouter</a> = (bdrouter ? bdrouter-&gt;<a class="code" href="structospf6__neighbor.html#ac7e3045fcc29c1083d1b638fd64e07e0">router_id</a> : htonl (0));
<a name="l00578"></a>00578   <span class="keywordflow">return</span> <a class="code" href="bgp__fsm_8c.html#ac0c302bc97f010b7f5965faa07b00354">next_state</a>;
<a name="l00579"></a>00579 }
<a name="l00580"></a>00580 
<a name="l00581"></a>00581 
<a name="l00582"></a>00582 <span class="comment">/* Interface State Machine */</span>
<a name="l00583"></a>00583 <span class="keywordtype">int</span>
<a name="l00584"></a><a class="code" href="ospf6__interface_8h.html#ae557db67da40ea239101707fc0c2b36c">00584</a> <a class="code" href="ospf6__interface_8c.html#afbc76fb33a36e04c41f22594fa4726d9">interface_up</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l00585"></a>00585 {
<a name="l00586"></a>00586   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l00587"></a>00587 
<a name="l00588"></a>00588   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l00589"></a>00589   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (oi &amp;&amp; oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>);
<a name="l00590"></a>00590 
<a name="l00591"></a>00591   <span class="keywordflow">if</span> (<a class="code" href="ospf6__interface_8h.html#ab442f4c1ff59407b56b532e56d2f18da">IS_OSPF6_DEBUG_INTERFACE</a>)
<a name="l00592"></a>00592     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Interface Event %s: [InterfaceUp]&quot;</span>,
<a name="l00593"></a>00593         oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
<a name="l00594"></a>00594 
<a name="l00595"></a>00595   <span class="comment">/* check physical interface is up */</span>
<a name="l00596"></a>00596   <span class="keywordflow">if</span> (! <a class="code" href="if_8c.html#ade77fc67f30030f539906dad43c239ab">if_is_up</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>))
<a name="l00597"></a>00597     {
<a name="l00598"></a>00598       <span class="keywordflow">if</span> (<a class="code" href="ospf6__interface_8h.html#ab442f4c1ff59407b56b532e56d2f18da">IS_OSPF6_DEBUG_INTERFACE</a>)
<a name="l00599"></a>00599         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Interface %s is down, can&#39;t execute [InterfaceUp]&quot;</span>,
<a name="l00600"></a>00600             oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
<a name="l00601"></a>00601       <span class="keywordflow">return</span> 0;
<a name="l00602"></a>00602     }
<a name="l00603"></a>00603 
<a name="l00604"></a>00604   <span class="comment">/* if already enabled, do nothing */</span>
<a name="l00605"></a>00605   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#aafdfe7c67c1ff540201718b688e0a15b">state</a> &gt; <a class="code" href="ospf6__interface_8h.html#a49b579760cabb266eb7331686381fc51">OSPF6_INTERFACE_DOWN</a>)
<a name="l00606"></a>00606     {
<a name="l00607"></a>00607       <span class="keywordflow">if</span> (<a class="code" href="ospf6__interface_8h.html#ab442f4c1ff59407b56b532e56d2f18da">IS_OSPF6_DEBUG_INTERFACE</a>)
<a name="l00608"></a>00608         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Interface %s already enabled&quot;</span>,
<a name="l00609"></a>00609             oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
<a name="l00610"></a>00610       <span class="keywordflow">return</span> 0;
<a name="l00611"></a>00611     }
<a name="l00612"></a>00612 
<a name="l00613"></a>00613   <span class="comment">/* Join AllSPFRouters */</span>
<a name="l00614"></a>00614   <a class="code" href="ospf6__network_8c.html#a31aeb5e11f4681339a77ed1dc463e213">ospf6_join_allspfrouters</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>);
<a name="l00615"></a>00615 
<a name="l00616"></a>00616   <span class="comment">/* Update interface route */</span>
<a name="l00617"></a>00617   <a class="code" href="ospf6__interface_8c.html#a524bafd29fa3104f2a8d9b3afdc339a6">ospf6_interface_connected_route_update</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>);
<a name="l00618"></a>00618 
<a name="l00619"></a>00619   <span class="comment">/* Schedule Hello */</span>
<a name="l00620"></a>00620   <span class="keywordflow">if</span> (! <a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (oi-&gt;<a class="code" href="structospf6__interface.html#aa5dbc797ed38482907f57c66458a3e87">flag</a>, <a class="code" href="ospf6__interface_8h.html#aeb4543177500f2d71c28f91a47154e25">OSPF6_INTERFACE_PASSIVE</a>))
<a name="l00621"></a>00621     <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf6__message_8c.html#a2e117804a7699187ffbbb2558cf3106a">ospf6_hello_send</a>, oi, 0);
<a name="l00622"></a>00622 
<a name="l00623"></a>00623   <span class="comment">/* decide next interface state */</span>
<a name="l00624"></a>00624   <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a61aed2ccc7ec47d6822546664ea77f0c">if_is_pointopoint</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>))
<a name="l00625"></a>00625     <a class="code" href="ospf6__interface_8c.html#a555001dc455184fd8e582262d09f30c7">ospf6_interface_state_change</a> (<a class="code" href="ospf6__interface_8h.html#ae27eee5093f2c674cf5d3f00324c81b7">OSPF6_INTERFACE_POINTTOPOINT</a>, oi);
<a name="l00626"></a>00626   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#a91a541af8d7b9a9b224b2dbb768f4822">priority</a> == 0)
<a name="l00627"></a>00627     <a class="code" href="ospf6__interface_8c.html#a555001dc455184fd8e582262d09f30c7">ospf6_interface_state_change</a> (<a class="code" href="ospf6__interface_8h.html#a9c44344a8a13bc7d9b84be56a7efc0eb">OSPF6_INTERFACE_DROTHER</a>, oi);
<a name="l00628"></a>00628   <span class="keywordflow">else</span>
<a name="l00629"></a>00629     {
<a name="l00630"></a>00630       <a class="code" href="ospf6__interface_8c.html#a555001dc455184fd8e582262d09f30c7">ospf6_interface_state_change</a> (<a class="code" href="ospf6__interface_8h.html#a7af1b8c38ed1a44f1b883d25f8c851e2">OSPF6_INTERFACE_WAITING</a>, oi);
<a name="l00631"></a>00631       <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf6__interface_8c.html#ab3c91983c00b0a804d34d1f45a092428">wait_timer</a>, oi, oi-&gt;<a class="code" href="structospf6__interface.html#abcdd28a392cf138d80f052c651e9236b">dead_interval</a>);
<a name="l00632"></a>00632     }
<a name="l00633"></a>00633 
<a name="l00634"></a>00634   <span class="keywordflow">return</span> 0;
<a name="l00635"></a>00635 }
<a name="l00636"></a>00636 
<a name="l00637"></a>00637 <span class="keywordtype">int</span>
<a name="l00638"></a><a class="code" href="ospf6__interface_8h.html#ad846d5bac2ac561bb264fb8943170550">00638</a> <a class="code" href="ospf6__interface_8c.html#ab3c91983c00b0a804d34d1f45a092428">wait_timer</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l00639"></a>00639 {
<a name="l00640"></a>00640   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l00641"></a>00641 
<a name="l00642"></a>00642   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l00643"></a>00643   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (oi &amp;&amp; oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>);
<a name="l00644"></a>00644 
<a name="l00645"></a>00645   <span class="keywordflow">if</span> (<a class="code" href="ospf6__interface_8h.html#ab442f4c1ff59407b56b532e56d2f18da">IS_OSPF6_DEBUG_INTERFACE</a>)
<a name="l00646"></a>00646     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Interface Event %s: [WaitTimer]&quot;</span>,
<a name="l00647"></a>00647         oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
<a name="l00648"></a>00648 
<a name="l00649"></a>00649   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#aafdfe7c67c1ff540201718b688e0a15b">state</a> == <a class="code" href="ospf6__interface_8h.html#a7af1b8c38ed1a44f1b883d25f8c851e2">OSPF6_INTERFACE_WAITING</a>)
<a name="l00650"></a>00650     <a class="code" href="ospf6__interface_8c.html#a555001dc455184fd8e582262d09f30c7">ospf6_interface_state_change</a> (<a class="code" href="ospf6__interface_8c.html#ad107be702ff32a3829b0975c1c889b21">dr_election</a> (oi), oi);
<a name="l00651"></a>00651 
<a name="l00652"></a>00652   <span class="keywordflow">return</span> 0;
<a name="l00653"></a>00653 }
<a name="l00654"></a>00654 
<a name="l00655"></a>00655 <span class="keywordtype">int</span>
<a name="l00656"></a><a class="code" href="ospf6__interface_8h.html#a59faf5eb1728cb19165aa791df77346f">00656</a> <a class="code" href="ospf6__interface_8c.html#a3b694ccf3a531f3cf4d582828a0fe4af">backup_seen</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l00657"></a>00657 {
<a name="l00658"></a>00658   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l00659"></a>00659 
<a name="l00660"></a>00660   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l00661"></a>00661   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (oi &amp;&amp; oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>);
<a name="l00662"></a>00662 
<a name="l00663"></a>00663   <span class="keywordflow">if</span> (<a class="code" href="ospf6__interface_8h.html#ab442f4c1ff59407b56b532e56d2f18da">IS_OSPF6_DEBUG_INTERFACE</a>)
<a name="l00664"></a>00664     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Interface Event %s: [BackupSeen]&quot;</span>,
<a name="l00665"></a>00665         oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
<a name="l00666"></a>00666 
<a name="l00667"></a>00667   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#aafdfe7c67c1ff540201718b688e0a15b">state</a> == <a class="code" href="ospf6__interface_8h.html#a7af1b8c38ed1a44f1b883d25f8c851e2">OSPF6_INTERFACE_WAITING</a>)
<a name="l00668"></a>00668     <a class="code" href="ospf6__interface_8c.html#a555001dc455184fd8e582262d09f30c7">ospf6_interface_state_change</a> (<a class="code" href="ospf6__interface_8c.html#ad107be702ff32a3829b0975c1c889b21">dr_election</a> (oi), oi);
<a name="l00669"></a>00669 
<a name="l00670"></a>00670   <span class="keywordflow">return</span> 0;
<a name="l00671"></a>00671 }
<a name="l00672"></a>00672 
<a name="l00673"></a>00673 <span class="keywordtype">int</span>
<a name="l00674"></a><a class="code" href="ospf6__interface_8h.html#af1a7907b86ad752f27ab77d7555eaf49">00674</a> <a class="code" href="ospf6__interface_8c.html#afe0e883750ee5ad5f90ba39754467407">neighbor_change</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l00675"></a>00675 {
<a name="l00676"></a>00676   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l00677"></a>00677 
<a name="l00678"></a>00678   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l00679"></a>00679   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (oi &amp;&amp; oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>);
<a name="l00680"></a>00680 
<a name="l00681"></a>00681   <span class="keywordflow">if</span> (<a class="code" href="ospf6__interface_8h.html#ab442f4c1ff59407b56b532e56d2f18da">IS_OSPF6_DEBUG_INTERFACE</a>)
<a name="l00682"></a>00682     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Interface Event %s: [NeighborChange]&quot;</span>,
<a name="l00683"></a>00683         oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
<a name="l00684"></a>00684 
<a name="l00685"></a>00685   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#aafdfe7c67c1ff540201718b688e0a15b">state</a> == <a class="code" href="ospf6__interface_8h.html#a9c44344a8a13bc7d9b84be56a7efc0eb">OSPF6_INTERFACE_DROTHER</a> ||
<a name="l00686"></a>00686       oi-&gt;<a class="code" href="structospf6__interface.html#aafdfe7c67c1ff540201718b688e0a15b">state</a> == <a class="code" href="ospf6__interface_8h.html#ad0b8da8f1b2db8ec33b43b223b114d51">OSPF6_INTERFACE_BDR</a> ||
<a name="l00687"></a>00687       oi-&gt;<a class="code" href="structospf6__interface.html#aafdfe7c67c1ff540201718b688e0a15b">state</a> == <a class="code" href="ospf6__interface_8h.html#ad83f536f4674c165d7f393d28f087843">OSPF6_INTERFACE_DR</a>)
<a name="l00688"></a>00688     <a class="code" href="ospf6__interface_8c.html#a555001dc455184fd8e582262d09f30c7">ospf6_interface_state_change</a> (<a class="code" href="ospf6__interface_8c.html#ad107be702ff32a3829b0975c1c889b21">dr_election</a> (oi), oi);
<a name="l00689"></a>00689 
<a name="l00690"></a>00690   <span class="keywordflow">return</span> 0;
<a name="l00691"></a>00691 }
<a name="l00692"></a>00692 
<a name="l00693"></a>00693 <span class="keywordtype">int</span>
<a name="l00694"></a><a class="code" href="ospf6__interface_8h.html#a287b6b981c7df6443494f4ba083787ee">00694</a> <a class="code" href="ospf6__interface_8c.html#a85072de90c7ee4d14c43a1510d7c20de">interface_down</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l00695"></a>00695 {
<a name="l00696"></a>00696   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l00697"></a>00697   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
<a name="l00698"></a>00698   <span class="keyword">struct </span><a class="code" href="structospf6__neighbor.html">ospf6_neighbor</a> *on;
<a name="l00699"></a>00699 
<a name="l00700"></a>00700   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l00701"></a>00701   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (oi &amp;&amp; oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>);
<a name="l00702"></a>00702 
<a name="l00703"></a>00703   <span class="keywordflow">if</span> (<a class="code" href="ospf6__interface_8h.html#ab442f4c1ff59407b56b532e56d2f18da">IS_OSPF6_DEBUG_INTERFACE</a>)
<a name="l00704"></a>00704     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Interface Event %s: [InterfaceDown]&quot;</span>,
<a name="l00705"></a>00705         oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
<a name="l00706"></a>00706 
<a name="l00707"></a>00707   <span class="comment">/* Leave AllSPFRouters */</span>
<a name="l00708"></a>00708   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#aafdfe7c67c1ff540201718b688e0a15b">state</a> &gt; <a class="code" href="ospf6__interface_8h.html#a49b579760cabb266eb7331686381fc51">OSPF6_INTERFACE_DOWN</a>)
<a name="l00709"></a>00709     <a class="code" href="ospf6__network_8c.html#a835a176c7a55f48ee382e6cfd9e03d77">ospf6_leave_allspfrouters</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>);
<a name="l00710"></a>00710 
<a name="l00711"></a>00711   <a class="code" href="ospf6__interface_8c.html#a555001dc455184fd8e582262d09f30c7">ospf6_interface_state_change</a> (<a class="code" href="ospf6__interface_8h.html#a49b579760cabb266eb7331686381fc51">OSPF6_INTERFACE_DOWN</a>, oi);
<a name="l00712"></a>00712 
<a name="l00713"></a>00713   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ada404f0a64a2f3783445fdf2c2dccf6d">neighbor_list</a>, node, nnode, on))
<a name="l00714"></a>00714     <a class="code" href="ospf6__neighbor_8c.html#abbbc1ba6f8ca18c3308cec096c5ad8b2">ospf6_neighbor_delete</a> (on);
<a name="l00715"></a>00715   
<a name="l00716"></a>00716   <a class="code" href="linklist_8c.html#acd6daa4be8ab3f175376e63c9d9c9500">list_delete_all_node</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ada404f0a64a2f3783445fdf2c2dccf6d">neighbor_list</a>);
<a name="l00717"></a>00717 
<a name="l00718"></a>00718   <span class="keywordflow">return</span> 0;
<a name="l00719"></a>00719 }
<a name="l00720"></a>00720 
<a name="l00721"></a>00721 
<a name="l00722"></a>00722 <span class="comment">/* show specified interface structure */</span>
<a name="l00723"></a>00723 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00724"></a><a class="code" href="ospf6__interface_8c.html#ae584a69e463f447eb4cbbf6f0c914b88">00724</a> <a class="code" href="ospf6__interface_8c.html#ae584a69e463f447eb4cbbf6f0c914b88">ospf6_interface_show</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>, <span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp)
<a name="l00725"></a>00725 {
<a name="l00726"></a>00726   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l00727"></a>00727   <span class="keyword">struct </span><a class="code" href="structconnected.html">connected</a> *c;
<a name="l00728"></a>00728   <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
<a name="l00729"></a>00729   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l00730"></a>00730   <span class="keywordtype">char</span> strbuf[64], drouter[32], bdrouter[32];
<a name="l00731"></a>00731   <span class="keyword">const</span> <span class="keywordtype">char</span> *updown[3] = {<span class="stringliteral">&quot;down&quot;</span>, <span class="stringliteral">&quot;up&quot;</span>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>};
<a name="l00732"></a>00732   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>;
<a name="l00733"></a>00733   <span class="keyword">struct </span>timeval res, now;
<a name="l00734"></a>00734   <span class="keywordtype">char</span> duration[32];
<a name="l00735"></a>00735   <span class="keyword">struct </span><a class="code" href="structospf6__lsa.html">ospf6_lsa</a> *lsa;
<a name="l00736"></a>00736 
<a name="l00737"></a>00737   <span class="comment">/* check physical interface type */</span>
<a name="l00738"></a>00738   <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a8c30d3c9709c67544befed76b7260267">if_is_loopback</a> (ifp))
<a name="l00739"></a>00739     type = <span class="stringliteral">&quot;LOOPBACK&quot;</span>;
<a name="l00740"></a>00740   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a88f3bd141d217db7e4118a78b1db1b60">if_is_broadcast</a> (ifp))
<a name="l00741"></a>00741     type = <span class="stringliteral">&quot;BROADCAST&quot;</span>;
<a name="l00742"></a>00742   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a61aed2ccc7ec47d6822546664ea77f0c">if_is_pointopoint</a> (ifp))
<a name="l00743"></a>00743     type = <span class="stringliteral">&quot;POINTOPOINT&quot;</span>;
<a name="l00744"></a>00744   <span class="keywordflow">else</span>
<a name="l00745"></a>00745     type = <span class="stringliteral">&quot;UNKNOWN&quot;</span>;
<a name="l00746"></a>00746 
<a name="l00747"></a>00747   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s is %s, type %s%s&quot;</span>,
<a name="l00748"></a>00748            ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, updown[<a class="code" href="if_8c.html#ade77fc67f30030f539906dad43c239ab">if_is_up</a> (ifp)], type,
<a name="l00749"></a>00749        <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l00750"></a>00750   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  Interface ID: %d%s&quot;</span>, ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l00751"></a>00751 
<a name="l00752"></a>00752   <span class="keywordflow">if</span> (ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00753"></a>00753     {
<a name="l00754"></a>00754       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;   OSPF not enabled on this interface%s&quot;</span>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l00755"></a>00755       <span class="keywordflow">return</span> 0;
<a name="l00756"></a>00756     }
<a name="l00757"></a>00757   <span class="keywordflow">else</span>
<a name="l00758"></a>00758     oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l00759"></a>00759 
<a name="l00760"></a>00760   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  Internet Address:%s&quot;</span>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l00761"></a>00761 
<a name="l00762"></a>00762   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ifp-&gt;<a class="code" href="structinterface.html#ac7c47b5cc1df81e51bf1ecea97b4d4b3">connected</a>, i, c))
<a name="l00763"></a>00763     {
<a name="l00764"></a>00764       p = c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>;
<a name="l00765"></a>00765       <a class="code" href="prefix_8c.html#a8b848557695ae5694bd2282eba23e367">prefix2str</a> (p, strbuf, <span class="keyword">sizeof</span> (strbuf));
<a name="l00766"></a>00766       <span class="keywordflow">switch</span> (p-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a>)
<a name="l00767"></a>00767         {
<a name="l00768"></a>00768         <span class="keywordflow">case</span> AF_INET:
<a name="l00769"></a>00769           <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;    inet : %s%s&quot;</span>, strbuf,
<a name="l00770"></a>00770            <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l00771"></a>00771           <span class="keywordflow">break</span>;
<a name="l00772"></a>00772         <span class="keywordflow">case</span> AF_INET6:
<a name="l00773"></a>00773           <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;    inet6: %s%s&quot;</span>, strbuf,
<a name="l00774"></a>00774            <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l00775"></a>00775           <span class="keywordflow">break</span>;
<a name="l00776"></a>00776         <span class="keywordflow">default</span>:
<a name="l00777"></a>00777           <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;    ???  : %s%s&quot;</span>, strbuf,
<a name="l00778"></a>00778            <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l00779"></a>00779           <span class="keywordflow">break</span>;
<a name="l00780"></a>00780         }
<a name="l00781"></a>00781     }
<a name="l00782"></a>00782 
<a name="l00783"></a>00783   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a>)
<a name="l00784"></a>00784     {
<a name="l00785"></a>00785       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  Instance ID %d, Interface MTU %d (autodetect: %d)%s&quot;</span>,
<a name="l00786"></a>00786            oi-&gt;<a class="code" href="structospf6__interface.html#aa29c61e3e5509e7c844bdf19efce0268">instance_id</a>, oi-&gt;<a class="code" href="structospf6__interface.html#a88579a4c38c3458d12425986c1a43893">ifmtu</a>, ifp-&gt;<a class="code" href="structinterface.html#a75a892a4df0f60191a13ca07b6625cb1">mtu6</a>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l00787"></a>00787       <a class="code" href="sockunion_8c.html#a5bfb767e8fa3f9ff5d2a1e19d71791f4">inet_ntop</a> (AF_INET, &amp;oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a>-&gt;<a class="code" href="structospf6__area.html#aec3bacc0c813ff937b5675595a3aefa6">area_id</a>,
<a name="l00788"></a>00788                  strbuf, sizeof (strbuf));
<a name="l00789"></a>00789       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  Area ID %s, Cost %hu%s&quot;</span>, strbuf, oi-&gt;<a class="code" href="structospf6__interface.html#afe7ec302275d6abc2bab9337ceaef164">cost</a>,
<a name="l00790"></a>00790            <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l00791"></a>00791     }
<a name="l00792"></a>00792   <span class="keywordflow">else</span>
<a name="l00793"></a>00793     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  Not Attached to Area%s&quot;</span>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l00794"></a>00794 
<a name="l00795"></a>00795   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  State %s, Transmit Delay %d sec, Priority %d%s&quot;</span>,
<a name="l00796"></a>00796            <a class="code" href="ospf6__interface_8c.html#ae87e59ecae5232da2543307cd88795b8">ospf6_interface_state_str</a>[oi-&gt;<a class="code" href="structospf6__interface.html#aafdfe7c67c1ff540201718b688e0a15b">state</a>],
<a name="l00797"></a>00797            oi-&gt;<a class="code" href="structospf6__interface.html#a8332fa0bef3f650b9ce32c772c028437">transdelay</a>, oi-&gt;<a class="code" href="structospf6__interface.html#a91a541af8d7b9a9b224b2dbb768f4822">priority</a>,
<a name="l00798"></a>00798        <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l00799"></a>00799   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  Timer intervals configured:%s&quot;</span>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l00800"></a>00800   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;   Hello %d, Dead %d, Retransmit %d%s&quot;</span>,
<a name="l00801"></a>00801            oi-&gt;<a class="code" href="structospf6__interface.html#a361e7c155d93d4b4082a22d43f6da499">hello_interval</a>, oi-&gt;<a class="code" href="structospf6__interface.html#abcdd28a392cf138d80f052c651e9236b">dead_interval</a>, oi-&gt;<a class="code" href="structospf6__interface.html#a85d5e73751611ee20f1ad041a181cbde">rxmt_interval</a>,
<a name="l00802"></a>00802        <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l00803"></a>00803 
<a name="l00804"></a>00804   <a class="code" href="sockunion_8c.html#a5bfb767e8fa3f9ff5d2a1e19d71791f4">inet_ntop</a> (AF_INET, &amp;oi-&gt;<a class="code" href="structospf6__interface.html#a5e0184b714337299cd1fa5ae9cc87eb0">drouter</a>, drouter, sizeof (drouter));
<a name="l00805"></a>00805   <a class="code" href="sockunion_8c.html#a5bfb767e8fa3f9ff5d2a1e19d71791f4">inet_ntop</a> (AF_INET, &amp;oi-&gt;<a class="code" href="structospf6__interface.html#a7b1736cd4740da2f26d27caf31983964">bdrouter</a>, bdrouter, sizeof (bdrouter));
<a name="l00806"></a>00806   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  DR: %s BDR: %s%s&quot;</span>, drouter, bdrouter, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l00807"></a>00807 
<a name="l00808"></a>00808   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  Number of I/F scoped LSAs is %u%s&quot;</span>,
<a name="l00809"></a>00809            oi-&gt;<a class="code" href="structospf6__interface.html#ab033cb877fe417705f424d1bd2f411de">lsdb</a>-&gt;<a class="code" href="structospf6__lsdb.html#aa9c852db97e2303379eacb9f82dfe456">count</a>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l00810"></a>00810 
<a name="l00811"></a>00811   <a class="code" href="thread_8c.html#abf5861abe71d6f9a1ddd493be0218de1">quagga_gettime</a> (<a class="code" href="thread_8h.html#a64fff521e88ba8b01645c5bb89085b33a7f92aaa461f13c163b13f96085eb3cd9">QUAGGA_CLK_MONOTONIC</a>, &amp;now);
<a name="l00812"></a>00812 
<a name="l00813"></a>00813   <a class="code" href="ospf6d_8h.html#ae2deebfe12865cbf45eaafd29882106d">timerclear</a> (&amp;res);
<a name="l00814"></a>00814   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#a0f7c7a7f0611d03b12361b0cf0b7cba6">thread_send_lsupdate</a>)
<a name="l00815"></a>00815     <a class="code" href="ospf6d_8h.html#ad8549d8029286e53812f5d1aab4439e5">timersub</a> (&amp;oi-&gt;<a class="code" href="structospf6__interface.html#a0f7c7a7f0611d03b12361b0cf0b7cba6">thread_send_lsupdate</a>-&gt;<a class="code" href="structthread.html#abc1b9676415f5150d5b49e7654d4cb27">u</a>.<a class="code" href="structthread.html#aa2f8884c80d14c6a3be307dd1f08671a">sands</a>, &amp;now, &amp;res);
<a name="l00816"></a>00816   <a class="code" href="ospf6d_8h.html#aac49ca805b11c1540def0721e069a851">timerstring</a> (&amp;res, duration, <span class="keyword">sizeof</span> (duration));
<a name="l00817"></a>00817   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;    %d Pending LSAs for LSUpdate in Time %s [thread %s]%s&quot;</span>,
<a name="l00818"></a>00818            oi-&gt;<a class="code" href="structospf6__interface.html#a42c393a90f856992c87da5a9d0607f98">lsupdate_list</a>-&gt;<a class="code" href="structospf6__lsdb.html#aa9c852db97e2303379eacb9f82dfe456">count</a>, duration,
<a name="l00819"></a>00819            (oi-&gt;<a class="code" href="structospf6__interface.html#a0f7c7a7f0611d03b12361b0cf0b7cba6">thread_send_lsupdate</a> ? <span class="stringliteral">&quot;on&quot;</span> : <span class="stringliteral">&quot;off&quot;</span>),
<a name="l00820"></a>00820            <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l00821"></a>00821   <span class="keywordflow">for</span> (lsa = <a class="code" href="ospf6__lsdb_8c.html#ab9d15a52a7be50c379748fe7ba91251f">ospf6_lsdb_head</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a42c393a90f856992c87da5a9d0607f98">lsupdate_list</a>); lsa;
<a name="l00822"></a>00822        lsa = <a class="code" href="ospf6__lsdb_8c.html#a7fccfd842f6c1849beb8237ccca195d0">ospf6_lsdb_next</a> (lsa))
<a name="l00823"></a>00823     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;      %s%s&quot;</span>, lsa-&gt;<a class="code" href="structospf6__lsa.html#a979d21e1c4d2e1753e7d45641b0819ce">name</a>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l00824"></a>00824 
<a name="l00825"></a>00825   <a class="code" href="ospf6d_8h.html#ae2deebfe12865cbf45eaafd29882106d">timerclear</a> (&amp;res);
<a name="l00826"></a>00826   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#ac0eb96a5b6f4d1b1d63aa5c0208a7680">thread_send_lsack</a>)
<a name="l00827"></a>00827     <a class="code" href="ospf6d_8h.html#ad8549d8029286e53812f5d1aab4439e5">timersub</a> (&amp;oi-&gt;<a class="code" href="structospf6__interface.html#ac0eb96a5b6f4d1b1d63aa5c0208a7680">thread_send_lsack</a>-&gt;<a class="code" href="structthread.html#abc1b9676415f5150d5b49e7654d4cb27">u</a>.<a class="code" href="structthread.html#aa2f8884c80d14c6a3be307dd1f08671a">sands</a>, &amp;now, &amp;res);
<a name="l00828"></a>00828   <a class="code" href="ospf6d_8h.html#aac49ca805b11c1540def0721e069a851">timerstring</a> (&amp;res, duration, <span class="keyword">sizeof</span> (duration));
<a name="l00829"></a>00829   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;    %d Pending LSAs for LSAck in Time %s [thread %s]%s&quot;</span>,
<a name="l00830"></a>00830            oi-&gt;<a class="code" href="structospf6__interface.html#a3a27876455af04270cf1ff5392f5ced3">lsack_list</a>-&gt;<a class="code" href="structospf6__lsdb.html#aa9c852db97e2303379eacb9f82dfe456">count</a>, duration,
<a name="l00831"></a>00831            (oi-&gt;<a class="code" href="structospf6__interface.html#ac0eb96a5b6f4d1b1d63aa5c0208a7680">thread_send_lsack</a> ? <span class="stringliteral">&quot;on&quot;</span> : <span class="stringliteral">&quot;off&quot;</span>),
<a name="l00832"></a>00832            <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l00833"></a>00833   <span class="keywordflow">for</span> (lsa = <a class="code" href="ospf6__lsdb_8c.html#ab9d15a52a7be50c379748fe7ba91251f">ospf6_lsdb_head</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a3a27876455af04270cf1ff5392f5ced3">lsack_list</a>); lsa;
<a name="l00834"></a>00834        lsa = <a class="code" href="ospf6__lsdb_8c.html#a7fccfd842f6c1849beb8237ccca195d0">ospf6_lsdb_next</a> (lsa))
<a name="l00835"></a>00835     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;      %s%s&quot;</span>, lsa-&gt;<a class="code" href="structospf6__lsa.html#a979d21e1c4d2e1753e7d45641b0819ce">name</a>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l00836"></a>00836 
<a name="l00837"></a>00837   <span class="keywordflow">return</span> 0;
<a name="l00838"></a>00838 }
<a name="l00839"></a>00839 
<a name="l00840"></a>00840 <span class="comment">/* show interface */</span>
<a name="l00841"></a><a class="code" href="ospf6__interface_8c.html#a2444467867bd7cc1bceeaa8b9164995b">00841</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (show_ipv6_ospf6_interface,
<a name="l00842"></a>00842        show_ipv6_ospf6_interface_ifname_cmd,
<a name="l00843"></a>00843        <span class="stringliteral">&quot;show ipv6 ospf6 interface IFNAME&quot;</span>,
<a name="l00844"></a>00844        <a class="code" href="command_8h.html#aa19b6d5257cb6f7622eb6b3da8966b32">SHOW_STR</a>
<a name="l00845"></a>00845        <a class="code" href="command_8h.html#a878a4dd8ec43cd96c88a08ba2e3d68b7">IP6_STR</a>
<a name="l00846"></a>00846        <a class="code" href="command_8h.html#a46e5b0a7baf38db964a69848c26aa96a">OSPF6_STR</a>
<a name="l00847"></a>00847        <a class="code" href="command_8h.html#abf6d0e1935a2b3a207e60a6a6148a748">INTERFACE_STR</a>
<a name="l00848"></a>00848        <a class="code" href="command_8h.html#a3d906e204dcc40f82d2a7f0933e755a7">IFNAME_STR</a>
<a name="l00849"></a>00849        )
<a name="l00850"></a>00850 {
<a name="l00851"></a>00851   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l00852"></a>00852   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l00853"></a>00853 
<a name="l00854"></a>00854   <span class="keywordflow">if</span> (argc)
<a name="l00855"></a>00855     {
<a name="l00856"></a>00856       ifp = <a class="code" href="if_8c.html#ac124a74c213f25a0417e3a8d338606f4">if_lookup_by_name</a> (argv[0]);
<a name="l00857"></a>00857       <span class="keywordflow">if</span> (ifp == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00858"></a>00858         {
<a name="l00859"></a>00859           <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;No such Interface: %s%s&quot;</span>, argv[0],
<a name="l00860"></a>00860                    <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l00861"></a>00861           <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l00862"></a>00862         }
<a name="l00863"></a>00863       <a class="code" href="ospf6__interface_8c.html#ae584a69e463f447eb4cbbf6f0c914b88">ospf6_interface_show</a> (<a class="code" href="structvty.html">vty</a>, ifp);
<a name="l00864"></a>00864     }
<a name="l00865"></a>00865   <span class="keywordflow">else</span>
<a name="l00866"></a>00866     {
<a name="l00867"></a>00867       <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="if_8c.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a>, i, ifp))
<a name="l00868"></a>00868         <a class="code" href="ospf6__interface_8c.html#ae584a69e463f447eb4cbbf6f0c914b88">ospf6_interface_show</a> (<a class="code" href="structvty.html">vty</a>, ifp);
<a name="l00869"></a>00869     }
<a name="l00870"></a>00870 
<a name="l00871"></a>00871   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l00872"></a>00872 }
<a name="l00873"></a>00873 
<a name="l00874"></a>00874 <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (show_ipv6_ospf6_interface,
<a name="l00875"></a>00875        show_ipv6_ospf6_interface_cmd,
<a name="l00876"></a>00876        <span class="stringliteral">&quot;show ipv6 ospf6 interface&quot;</span>,
<a name="l00877"></a>00877        <a class="code" href="command_8h.html#aa19b6d5257cb6f7622eb6b3da8966b32">SHOW_STR</a>
<a name="l00878"></a>00878        <a class="code" href="command_8h.html#a878a4dd8ec43cd96c88a08ba2e3d68b7">IP6_STR</a>
<a name="l00879"></a>00879        <a class="code" href="command_8h.html#a46e5b0a7baf38db964a69848c26aa96a">OSPF6_STR</a>
<a name="l00880"></a>00880        <a class="code" href="command_8h.html#abf6d0e1935a2b3a207e60a6a6148a748">INTERFACE_STR</a>
<a name="l00881"></a>00881        )
<a name="l00882"></a>00882 
<a name="l00883"></a>00883 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (show_ipv6_ospf6_interface_ifname_prefix,
<a name="l00884"></a><a class="code" href="ospf6__interface_8c.html#a10b15aa49981538f84bd7befe23878e9">00884</a>        <a class="code" href="ospf6__interface_8c.html#a10b15aa49981538f84bd7befe23878e9">show_ipv6_ospf6_interface_ifname_prefix_cmd</a>,
<a name="l00885"></a>00885        <span class="stringliteral">&quot;show ipv6 ospf6 interface IFNAME prefix&quot;</span>,
<a name="l00886"></a>00886        <a class="code" href="command_8h.html#aa19b6d5257cb6f7622eb6b3da8966b32">SHOW_STR</a>
<a name="l00887"></a>00887        <a class="code" href="command_8h.html#a878a4dd8ec43cd96c88a08ba2e3d68b7">IP6_STR</a>
<a name="l00888"></a>00888        <a class="code" href="command_8h.html#a46e5b0a7baf38db964a69848c26aa96a">OSPF6_STR</a>
<a name="l00889"></a>00889        <a class="code" href="command_8h.html#abf6d0e1935a2b3a207e60a6a6148a748">INTERFACE_STR</a>
<a name="l00890"></a>00890        <a class="code" href="command_8h.html#a3d906e204dcc40f82d2a7f0933e755a7">IFNAME_STR</a>
<a name="l00891"></a>00891        <span class="stringliteral">&quot;Display connected prefixes to advertise\n&quot;</span>
<a name="l00892"></a>00892        )
<a name="l00893"></a>00893 {
<a name="l00894"></a>00894   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l00895"></a>00895   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l00896"></a>00896 
<a name="l00897"></a>00897   ifp = <a class="code" href="if_8c.html#ac124a74c213f25a0417e3a8d338606f4">if_lookup_by_name</a> (argv[0]);
<a name="l00898"></a>00898   <span class="keywordflow">if</span> (ifp == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00899"></a>00899     {
<a name="l00900"></a>00900       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;No such Interface: %s%s&quot;</span>, argv[0], <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l00901"></a>00901       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l00902"></a>00902     }
<a name="l00903"></a>00903 
<a name="l00904"></a>00904   oi = ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l00905"></a>00905   <span class="keywordflow">if</span> (oi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00906"></a>00906     {
<a name="l00907"></a>00907       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;OSPFv3 is not enabled on %s%s&quot;</span>, argv[0], <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l00908"></a>00908       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l00909"></a>00909     }
<a name="l00910"></a>00910 
<a name="l00911"></a>00911   argc--;
<a name="l00912"></a>00912   argv++;
<a name="l00913"></a>00913   <a class="code" href="ospf6__route_8c.html#ad8dd248912104287781bf809f8f57a5d">ospf6_route_table_show</a> (<a class="code" href="structvty.html">vty</a>, argc, argv, oi-&gt;<a class="code" href="structospf6__interface.html#af278bb16b6e8833b3f43c3e1cdc3e129">route_connected</a>);
<a name="l00914"></a>00914 
<a name="l00915"></a>00915   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l00916"></a>00916 }
<a name="l00917"></a>00917 
<a name="l00918"></a>00918 <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (show_ipv6_ospf6_interface_ifname_prefix,
<a name="l00919"></a>00919        show_ipv6_ospf6_interface_ifname_prefix_detail_cmd,
<a name="l00920"></a>00920        <span class="stringliteral">&quot;show ipv6 ospf6 interface IFNAME prefix (X:X::X:X|X:X::X:X/M|detail)&quot;</span>,
<a name="l00921"></a>00921        <a class="code" href="command_8h.html#aa19b6d5257cb6f7622eb6b3da8966b32">SHOW_STR</a>
<a name="l00922"></a>00922        <a class="code" href="command_8h.html#a878a4dd8ec43cd96c88a08ba2e3d68b7">IP6_STR</a>
<a name="l00923"></a>00923        <a class="code" href="command_8h.html#a46e5b0a7baf38db964a69848c26aa96a">OSPF6_STR</a>
<a name="l00924"></a>00924        <a class="code" href="command_8h.html#abf6d0e1935a2b3a207e60a6a6148a748">INTERFACE_STR</a>
<a name="l00925"></a>00925        <a class="code" href="command_8h.html#a3d906e204dcc40f82d2a7f0933e755a7">IFNAME_STR</a>
<a name="l00926"></a>00926        <span class="stringliteral">&quot;Display connected prefixes to advertise\n&quot;</span>
<a name="l00927"></a>00927        <a class="code" href="ospf6__route_8h.html#a868fcc62f8265feabed94a75d5f42a5d">OSPF6_ROUTE_ADDRESS_STR</a>
<a name="l00928"></a>00928        <a class="code" href="ospf6__route_8h.html#a9e1adaf35321fbc47e9be3189a1d3d66">OSPF6_ROUTE_PREFIX_STR</a>
<a name="l00929"></a>00929        <span class="stringliteral">&quot;Dispaly details of the prefixes\n&quot;</span>
<a name="l00930"></a>00930        )
<a name="l00931"></a>00931 
<a name="l00932"></a>00932 <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (show_ipv6_ospf6_interface_ifname_prefix,
<a name="l00933"></a>00933        show_ipv6_ospf6_interface_ifname_prefix_match_cmd,
<a name="l00934"></a>00934        <span class="stringliteral">&quot;show ipv6 ospf6 interface IFNAME prefix X:X::X:X/M (match|detail)&quot;</span>,
<a name="l00935"></a>00935        <a class="code" href="command_8h.html#aa19b6d5257cb6f7622eb6b3da8966b32">SHOW_STR</a>
<a name="l00936"></a>00936        <a class="code" href="command_8h.html#a878a4dd8ec43cd96c88a08ba2e3d68b7">IP6_STR</a>
<a name="l00937"></a>00937        <a class="code" href="command_8h.html#a46e5b0a7baf38db964a69848c26aa96a">OSPF6_STR</a>
<a name="l00938"></a>00938        <a class="code" href="command_8h.html#abf6d0e1935a2b3a207e60a6a6148a748">INTERFACE_STR</a>
<a name="l00939"></a>00939        <a class="code" href="command_8h.html#a3d906e204dcc40f82d2a7f0933e755a7">IFNAME_STR</a>
<a name="l00940"></a>00940        <span class="stringliteral">&quot;Display connected prefixes to advertise\n&quot;</span>
<a name="l00941"></a>00941        <a class="code" href="ospf6__route_8h.html#a9e1adaf35321fbc47e9be3189a1d3d66">OSPF6_ROUTE_PREFIX_STR</a>
<a name="l00942"></a>00942        <a class="code" href="ospf6__route_8h.html#a667f04304a4623ecf8c18cee7e71ae25">OSPF6_ROUTE_MATCH_STR</a>
<a name="l00943"></a>00943        <span class="stringliteral">&quot;Dispaly details of the prefixes\n&quot;</span>
<a name="l00944"></a>00944        )
<a name="l00945"></a>00945 
<a name="l00946"></a>00946 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (show_ipv6_ospf6_interface_prefix,
<a name="l00947"></a>00947        show_ipv6_ospf6_interface_prefix_cmd,
<a name="l00948"></a>00948        <span class="stringliteral">&quot;show ipv6 ospf6 interface prefix&quot;</span>,
<a name="l00949"></a>00949        <a class="code" href="command_8h.html#aa19b6d5257cb6f7622eb6b3da8966b32">SHOW_STR</a>
<a name="l00950"></a>00950        <a class="code" href="command_8h.html#a878a4dd8ec43cd96c88a08ba2e3d68b7">IP6_STR</a>
<a name="l00951"></a>00951        <a class="code" href="command_8h.html#a46e5b0a7baf38db964a69848c26aa96a">OSPF6_STR</a>
<a name="l00952"></a>00952        <a class="code" href="command_8h.html#abf6d0e1935a2b3a207e60a6a6148a748">INTERFACE_STR</a>
<a name="l00953"></a>00953        <span class="stringliteral">&quot;Display connected prefixes to advertise\n&quot;</span>
<a name="l00954"></a>00954        )
<a name="l00955"></a>00955 {
<a name="l00956"></a>00956   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l00957"></a>00957   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l00958"></a>00958   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l00959"></a>00959 
<a name="l00960"></a>00960   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="if_8c.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a>, i, ifp))
<a name="l00961"></a>00961     {
<a name="l00962"></a>00962       oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l00963"></a>00963       if (oi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00964"></a>00964         <span class="keywordflow">continue</span>;
<a name="l00965"></a>00965 
<a name="l00966"></a>00966       <a class="code" href="ospf6__route_8c.html#ad8dd248912104287781bf809f8f57a5d">ospf6_route_table_show</a> (<a class="code" href="structvty.html">vty</a>, argc, argv, oi-&gt;<a class="code" href="structospf6__interface.html#af278bb16b6e8833b3f43c3e1cdc3e129">route_connected</a>);
<a name="l00967"></a>00967     }
<a name="l00968"></a>00968 
<a name="l00969"></a>00969   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l00970"></a>00970 }
<a name="l00971"></a>00971 
<a name="l00972"></a>00972 <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (show_ipv6_ospf6_interface_prefix,
<a name="l00973"></a>00973        show_ipv6_ospf6_interface_prefix_detail_cmd,
<a name="l00974"></a>00974        <span class="stringliteral">&quot;show ipv6 ospf6 interface prefix (X:X::X:X|X:X::X:X/M|detail)&quot;</span>,
<a name="l00975"></a>00975        <a class="code" href="command_8h.html#aa19b6d5257cb6f7622eb6b3da8966b32">SHOW_STR</a>
<a name="l00976"></a>00976        <a class="code" href="command_8h.html#a878a4dd8ec43cd96c88a08ba2e3d68b7">IP6_STR</a>
<a name="l00977"></a>00977        <a class="code" href="command_8h.html#a46e5b0a7baf38db964a69848c26aa96a">OSPF6_STR</a>
<a name="l00978"></a>00978        INTERFACE_STR
<a name="l00979"></a>00979        <span class="stringliteral">&quot;Display connected prefixes to advertise\n&quot;</span>
<a name="l00980"></a>00980        <a class="code" href="ospf6__route_8h.html#a868fcc62f8265feabed94a75d5f42a5d">OSPF6_ROUTE_ADDRESS_STR</a>
<a name="l00981"></a>00981        <a class="code" href="ospf6__route_8h.html#a9e1adaf35321fbc47e9be3189a1d3d66">OSPF6_ROUTE_PREFIX_STR</a>
<a name="l00982"></a>00982        <span class="stringliteral">&quot;Dispaly details of the prefixes\n&quot;</span>
<a name="l00983"></a>00983        )
<a name="l00984"></a>00984 
<a name="l00985"></a>00985 <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (show_ipv6_ospf6_interface_prefix,
<a name="l00986"></a>00986        show_ipv6_ospf6_interface_prefix_match_cmd,
<a name="l00987"></a>00987        <span class="stringliteral">&quot;show ipv6 ospf6 interface prefix X:X::X:X/M (match|detail)&quot;</span>,
<a name="l00988"></a>00988        <a class="code" href="command_8h.html#aa19b6d5257cb6f7622eb6b3da8966b32">SHOW_STR</a>
<a name="l00989"></a>00989        <a class="code" href="command_8h.html#a878a4dd8ec43cd96c88a08ba2e3d68b7">IP6_STR</a>
<a name="l00990"></a>00990        <a class="code" href="command_8h.html#a46e5b0a7baf38db964a69848c26aa96a">OSPF6_STR</a>
<a name="l00991"></a>00991        INTERFACE_STR
<a name="l00992"></a>00992        <span class="stringliteral">&quot;Display connected prefixes to advertise\n&quot;</span>
<a name="l00993"></a>00993        <a class="code" href="ospf6__route_8h.html#a9e1adaf35321fbc47e9be3189a1d3d66">OSPF6_ROUTE_PREFIX_STR</a>
<a name="l00994"></a>00994        <a class="code" href="ospf6__route_8h.html#a667f04304a4623ecf8c18cee7e71ae25">OSPF6_ROUTE_MATCH_STR</a>
<a name="l00995"></a>00995        <span class="stringliteral">&quot;Dispaly details of the prefixes\n&quot;</span>
<a name="l00996"></a>00996        )
<a name="l00997"></a>00997 
<a name="l00998"></a>00998 
<a name="l00999"></a>00999 <span class="comment">/* interface variable set command */</span>
<a name="l01000"></a>01000 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (ipv6_ospf6_ifmtu,
<a name="l01001"></a>01001        ipv6_ospf6_ifmtu_cmd,
<a name="l01002"></a>01002        <span class="stringliteral">&quot;ipv6 ospf6 ifmtu &lt;1-65535&gt;&quot;</span>,
<a name="l01003"></a>01003        <a class="code" href="command_8h.html#a878a4dd8ec43cd96c88a08ba2e3d68b7">IP6_STR</a>
<a name="l01004"></a>01004        <a class="code" href="command_8h.html#a46e5b0a7baf38db964a69848c26aa96a">OSPF6_STR</a>
<a name="l01005"></a>01005        <span class="stringliteral">&quot;Interface MTU\n&quot;</span>
<a name="l01006"></a>01006        <span class="stringliteral">&quot;OSPFv3 Interface MTU\n&quot;</span>
<a name="l01007"></a>01007        )
<a name="l01008"></a>01008 {
<a name="l01009"></a>01009   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l01010"></a>01010   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l01011"></a>01011   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> ifmtu, <a class="code" href="ospf6__message_8c.html#a6380f44cc4b2ccf7824f9b60d42e09db">iobuflen</a>;
<a name="l01012"></a>01012   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
<a name="l01013"></a>01013   <span class="keyword">struct </span><a class="code" href="structospf6__neighbor.html">ospf6_neighbor</a> *on;
<a name="l01014"></a>01014 
<a name="l01015"></a>01015   ifp = (<span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *) <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
<a name="l01016"></a>01016   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (ifp);
<a name="l01017"></a>01017 
<a name="l01018"></a>01018   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l01019"></a>01019   if (oi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01020"></a>01020     oi = <a class="code" href="ospf6__interface_8c.html#a4102d53667f86e75d50917c610c4cc5e">ospf6_interface_create</a> (ifp);
<a name="l01021"></a>01021   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (oi);
<a name="l01022"></a>01022 
<a name="l01023"></a>01023   ifmtu = strtol (argv[0], <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 10);
<a name="l01024"></a>01024 
<a name="l01025"></a>01025   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#a88579a4c38c3458d12425986c1a43893">ifmtu</a> == ifmtu)
<a name="l01026"></a>01026     <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01027"></a>01027 
<a name="l01028"></a>01028   <span class="keywordflow">if</span> (ifp-&gt;<a class="code" href="structinterface.html#a75a892a4df0f60191a13ca07b6625cb1">mtu6</a> != 0 &amp;&amp; ifp-&gt;<a class="code" href="structinterface.html#a75a892a4df0f60191a13ca07b6625cb1">mtu6</a> &lt; ifmtu)
<a name="l01029"></a>01029     {
<a name="l01030"></a>01030       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;%s&#39;s ospf6 ifmtu cannot go beyond physical mtu (%d)%s&quot;</span>,
<a name="l01031"></a>01031                ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, ifp-&gt;<a class="code" href="structinterface.html#a75a892a4df0f60191a13ca07b6625cb1">mtu6</a>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l01032"></a>01032       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l01033"></a>01033     }
<a name="l01034"></a>01034 
<a name="l01035"></a>01035   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#a88579a4c38c3458d12425986c1a43893">ifmtu</a> &lt; ifmtu)
<a name="l01036"></a>01036     {
<a name="l01037"></a>01037       iobuflen = <a class="code" href="ospf6__message_8c.html#aaa8179b6bdd70e5cf3addee60df7aa80">ospf6_iobuf_size</a> (ifmtu);
<a name="l01038"></a>01038       <span class="keywordflow">if</span> (iobuflen &lt; ifmtu)
<a name="l01039"></a>01039         {
<a name="l01040"></a>01040           <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;%s&#39;s ifmtu is adjusted to I/O buffer size (%d).%s&quot;</span>,
<a name="l01041"></a>01041                    ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, iobuflen, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l01042"></a>01042           oi-&gt;<a class="code" href="structospf6__interface.html#a88579a4c38c3458d12425986c1a43893">ifmtu</a> = <a class="code" href="ospf6__message_8c.html#a6380f44cc4b2ccf7824f9b60d42e09db">iobuflen</a>;
<a name="l01043"></a>01043         }
<a name="l01044"></a>01044       <span class="keywordflow">else</span>
<a name="l01045"></a>01045         oi-&gt;<a class="code" href="structospf6__interface.html#a88579a4c38c3458d12425986c1a43893">ifmtu</a> = <a class="code" href="structospf6__interface.html#a88579a4c38c3458d12425986c1a43893">ifmtu</a>;
<a name="l01046"></a>01046     }
<a name="l01047"></a>01047   <span class="keywordflow">else</span>
<a name="l01048"></a>01048     oi-&gt;<a class="code" href="structospf6__interface.html#a88579a4c38c3458d12425986c1a43893">ifmtu</a> = <a class="code" href="structospf6__interface.html#a88579a4c38c3458d12425986c1a43893">ifmtu</a>;
<a name="l01049"></a>01049 
<a name="l01050"></a>01050   <span class="comment">/* re-establish adjacencies */</span>
<a name="l01051"></a>01051   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ada404f0a64a2f3783445fdf2c2dccf6d">neighbor_list</a>, node, nnode, on))
<a name="l01052"></a>01052     {
<a name="l01053"></a>01053       <a class="code" href="thread_8h.html#a7e1de4fc338e4feae498978461742dbb">THREAD_OFF</a> (on-&gt;<a class="code" href="structospf6__neighbor.html#a9ad2b87db5f53544c260a3fa073ee214">inactivity_timer</a>);
<a name="l01054"></a>01054       <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf6__neighbor_8c.html#ab053d77889fefde8115657d77f79d71a">inactivity_timer</a>, on, 0);
<a name="l01055"></a>01055     }
<a name="l01056"></a>01056 
<a name="l01057"></a>01057   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01058"></a>01058 }
<a name="l01059"></a>01059 
<a name="l01060"></a>01060 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_ipv6_ospf6_ifmtu,
<a name="l01061"></a>01061        no_ipv6_ospf6_ifmtu_cmd,
<a name="l01062"></a>01062        <span class="stringliteral">&quot;no ipv6 ospf6 ifmtu&quot;</span>,
<a name="l01063"></a>01063        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l01064"></a>01064        <a class="code" href="command_8h.html#a878a4dd8ec43cd96c88a08ba2e3d68b7">IP6_STR</a>
<a name="l01065"></a>01065        OSPF6_STR
<a name="l01066"></a>01066        <span class="stringliteral">&quot;Interface MTU\n&quot;</span>
<a name="l01067"></a>01067        )
<a name="l01068"></a>01068 {
<a name="l01069"></a>01069   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l01070"></a>01070   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l01071"></a>01071   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="ospf6__message_8c.html#a6380f44cc4b2ccf7824f9b60d42e09db">iobuflen</a>;
<a name="l01072"></a>01072   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
<a name="l01073"></a>01073   <span class="keyword">struct </span><a class="code" href="structospf6__neighbor.html">ospf6_neighbor</a> *on;
<a name="l01074"></a>01074 
<a name="l01075"></a>01075   ifp = (<span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *) <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
<a name="l01076"></a>01076   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (ifp);
<a name="l01077"></a>01077 
<a name="l01078"></a>01078   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l01079"></a>01079   if (oi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01080"></a>01080     oi = <a class="code" href="ospf6__interface_8c.html#a4102d53667f86e75d50917c610c4cc5e">ospf6_interface_create</a> (ifp);
<a name="l01081"></a>01081   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (oi);
<a name="l01082"></a>01082 
<a name="l01083"></a>01083   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#a88579a4c38c3458d12425986c1a43893">ifmtu</a> &lt; ifp-&gt;<a class="code" href="structinterface.html#aadd24df2d261a3bfcbdfe4797e639afb">mtu</a>)
<a name="l01084"></a>01084     {
<a name="l01085"></a>01085       iobuflen = <a class="code" href="ospf6__message_8c.html#aaa8179b6bdd70e5cf3addee60df7aa80">ospf6_iobuf_size</a> (ifp-&gt;<a class="code" href="structinterface.html#aadd24df2d261a3bfcbdfe4797e639afb">mtu</a>);
<a name="l01086"></a>01086       <span class="keywordflow">if</span> (iobuflen &lt; ifp-&gt;mtu)
<a name="l01087"></a>01087         {
<a name="l01088"></a>01088           <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;%s&#39;s ifmtu is adjusted to I/O buffer size (%d).%s&quot;</span>,
<a name="l01089"></a>01089                    ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, iobuflen, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l01090"></a>01090           oi-&gt;<a class="code" href="structospf6__interface.html#a88579a4c38c3458d12425986c1a43893">ifmtu</a> = <a class="code" href="ospf6__message_8c.html#a6380f44cc4b2ccf7824f9b60d42e09db">iobuflen</a>;
<a name="l01091"></a>01091         }
<a name="l01092"></a>01092       <span class="keywordflow">else</span>
<a name="l01093"></a>01093         oi-&gt;<a class="code" href="structospf6__interface.html#a88579a4c38c3458d12425986c1a43893">ifmtu</a> = ifp-&gt;<a class="code" href="structinterface.html#aadd24df2d261a3bfcbdfe4797e639afb">mtu</a>;
<a name="l01094"></a>01094     }
<a name="l01095"></a>01095   <span class="keywordflow">else</span>
<a name="l01096"></a>01096     oi-&gt;<a class="code" href="structospf6__interface.html#a88579a4c38c3458d12425986c1a43893">ifmtu</a> = ifp-&gt;<a class="code" href="structinterface.html#aadd24df2d261a3bfcbdfe4797e639afb">mtu</a>;
<a name="l01097"></a>01097 
<a name="l01098"></a>01098   <span class="comment">/* re-establish adjacencies */</span>
<a name="l01099"></a>01099   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ada404f0a64a2f3783445fdf2c2dccf6d">neighbor_list</a>, node, nnode, on))
<a name="l01100"></a>01100     {
<a name="l01101"></a>01101       <a class="code" href="thread_8h.html#a7e1de4fc338e4feae498978461742dbb">THREAD_OFF</a> (on-&gt;<a class="code" href="structospf6__neighbor.html#a9ad2b87db5f53544c260a3fa073ee214">inactivity_timer</a>);
<a name="l01102"></a>01102       <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf6__neighbor_8c.html#ab053d77889fefde8115657d77f79d71a">inactivity_timer</a>, on, 0);
<a name="l01103"></a>01103     }
<a name="l01104"></a>01104 
<a name="l01105"></a>01105   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01106"></a>01106 }
<a name="l01107"></a>01107 
<a name="l01108"></a>01108 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (ipv6_ospf6_cost,
<a name="l01109"></a>01109        ipv6_ospf6_cost_cmd,
<a name="l01110"></a>01110        <span class="stringliteral">&quot;ipv6 ospf6 cost &lt;1-65535&gt;&quot;</span>,
<a name="l01111"></a>01111        <a class="code" href="command_8h.html#a878a4dd8ec43cd96c88a08ba2e3d68b7">IP6_STR</a>
<a name="l01112"></a>01112        OSPF6_STR
<a name="l01113"></a>01113        <span class="stringliteral">&quot;Interface cost\n&quot;</span>
<a name="l01114"></a>01114        <span class="stringliteral">&quot;Outgoing metric of this interface\n&quot;</span>
<a name="l01115"></a>01115        )
<a name="l01116"></a>01116 {
<a name="l01117"></a>01117   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l01118"></a>01118   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l01119"></a>01119   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">int</span> lcost;
<a name="l01120"></a>01120 
<a name="l01121"></a>01121   ifp = (<span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *) <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
<a name="l01122"></a>01122   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (ifp);
<a name="l01123"></a>01123 
<a name="l01124"></a>01124   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l01125"></a>01125   if (oi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01126"></a>01126     oi = <a class="code" href="ospf6__interface_8c.html#a4102d53667f86e75d50917c610c4cc5e">ospf6_interface_create</a> (ifp);
<a name="l01127"></a>01127   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (oi);
<a name="l01128"></a>01128 
<a name="l01129"></a>01129   lcost = strtol (argv[0], <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 10);
<a name="l01130"></a>01130 
<a name="l01131"></a>01131   <span class="keywordflow">if</span> (lcost &gt; <a class="code" href="zebra_8h.html#ab5eb23180f7cc12b7d6c04a8ec067fdd">UINT32_MAX</a>)
<a name="l01132"></a>01132     {
<a name="l01133"></a>01133       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Cost %ld is out of range%s&quot;</span>, lcost, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l01134"></a>01134       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l01135"></a>01135     }
<a name="l01136"></a>01136   
<a name="l01137"></a>01137   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#afe7ec302275d6abc2bab9337ceaef164">cost</a> == lcost)
<a name="l01138"></a>01138     <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01139"></a>01139   
<a name="l01140"></a>01140   oi-&gt;<a class="code" href="structospf6__interface.html#afe7ec302275d6abc2bab9337ceaef164">cost</a> = lcost;
<a name="l01141"></a>01141   
<a name="l01142"></a>01142   <span class="comment">/* update cost held in route_connected list in ospf6_interface */</span>
<a name="l01143"></a>01143   <a class="code" href="ospf6__interface_8c.html#a524bafd29fa3104f2a8d9b3afdc339a6">ospf6_interface_connected_route_update</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>);
<a name="l01144"></a>01144 
<a name="l01145"></a>01145   <span class="comment">/* execute LSA hooks */</span>
<a name="l01146"></a>01146   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a>)
<a name="l01147"></a>01147     {
<a name="l01148"></a>01148       <a class="code" href="ospf6__intra_8h.html#a784e635145a354b7e3d373e07c245b9d">OSPF6_LINK_LSA_SCHEDULE</a> (oi);
<a name="l01149"></a>01149       <a class="code" href="ospf6__intra_8h.html#ab8e4a09ea2a5ce941594dc24d6165519">OSPF6_ROUTER_LSA_SCHEDULE</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a>);
<a name="l01150"></a>01150       <a class="code" href="ospf6__intra_8h.html#aa9749144d232f3aa259fe687e54803aa">OSPF6_NETWORK_LSA_SCHEDULE</a> (oi);
<a name="l01151"></a>01151       <a class="code" href="ospf6__intra_8h.html#af1bf24203358733b7eae1c1426dd1849">OSPF6_INTRA_PREFIX_LSA_SCHEDULE_TRANSIT</a> (oi);
<a name="l01152"></a>01152       <a class="code" href="ospf6__intra_8h.html#a57780a151b320e30333bb76d55f71ad7">OSPF6_INTRA_PREFIX_LSA_SCHEDULE_STUB</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a>);
<a name="l01153"></a>01153     }
<a name="l01154"></a>01154 
<a name="l01155"></a>01155   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01156"></a>01156 }
<a name="l01157"></a>01157 
<a name="l01158"></a>01158 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (ipv6_ospf6_hellointerval,
<a name="l01159"></a>01159        ipv6_ospf6_hellointerval_cmd,
<a name="l01160"></a>01160        <span class="stringliteral">&quot;ipv6 ospf6 hello-interval &lt;1-65535&gt;&quot;</span>,
<a name="l01161"></a>01161        <a class="code" href="command_8h.html#a878a4dd8ec43cd96c88a08ba2e3d68b7">IP6_STR</a>
<a name="l01162"></a>01162        OSPF6_STR
<a name="l01163"></a>01163        <span class="stringliteral">&quot;Interval time of Hello packets\n&quot;</span>
<a name="l01164"></a>01164        <a class="code" href="command_8h.html#a303bca05656f958426b6d3dee6d1e775">SECONDS_STR</a>
<a name="l01165"></a>01165        )
<a name="l01166"></a>01166 {
<a name="l01167"></a>01167   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l01168"></a>01168   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l01169"></a>01169 
<a name="l01170"></a>01170   ifp = (<span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *) <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
<a name="l01171"></a>01171   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (ifp);
<a name="l01172"></a>01172 
<a name="l01173"></a>01173   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l01174"></a>01174   if (oi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01175"></a>01175     oi = <a class="code" href="ospf6__interface_8c.html#a4102d53667f86e75d50917c610c4cc5e">ospf6_interface_create</a> (ifp);
<a name="l01176"></a>01176   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (oi);
<a name="l01177"></a>01177 
<a name="l01178"></a>01178   oi-&gt;<a class="code" href="structospf6__interface.html#a361e7c155d93d4b4082a22d43f6da499">hello_interval</a> = strtol (argv[0], <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 10);
<a name="l01179"></a>01179   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01180"></a>01180 }
<a name="l01181"></a>01181 
<a name="l01182"></a>01182 <span class="comment">/* interface variable set command */</span>
<a name="l01183"></a>01183 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (ipv6_ospf6_deadinterval,
<a name="l01184"></a>01184        ipv6_ospf6_deadinterval_cmd,
<a name="l01185"></a>01185        <span class="stringliteral">&quot;ipv6 ospf6 dead-interval &lt;1-65535&gt;&quot;</span>,
<a name="l01186"></a>01186        <a class="code" href="command_8h.html#a878a4dd8ec43cd96c88a08ba2e3d68b7">IP6_STR</a>
<a name="l01187"></a>01187        OSPF6_STR
<a name="l01188"></a>01188        <span class="stringliteral">&quot;Interval time after which a neighbor is declared down\n&quot;</span>
<a name="l01189"></a>01189        SECONDS_STR
<a name="l01190"></a>01190        )
<a name="l01191"></a>01191 {
<a name="l01192"></a>01192   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l01193"></a>01193   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l01194"></a>01194 
<a name="l01195"></a>01195   ifp = (<span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *) <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
<a name="l01196"></a>01196   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (ifp);
<a name="l01197"></a>01197 
<a name="l01198"></a>01198   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l01199"></a>01199   if (oi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01200"></a>01200     oi = <a class="code" href="ospf6__interface_8c.html#a4102d53667f86e75d50917c610c4cc5e">ospf6_interface_create</a> (ifp);
<a name="l01201"></a>01201   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (oi);
<a name="l01202"></a>01202 
<a name="l01203"></a>01203   oi-&gt;<a class="code" href="structospf6__interface.html#abcdd28a392cf138d80f052c651e9236b">dead_interval</a> = strtol (argv[0], <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 10);
<a name="l01204"></a>01204   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01205"></a>01205 }
<a name="l01206"></a>01206 
<a name="l01207"></a>01207 <span class="comment">/* interface variable set command */</span>
<a name="l01208"></a>01208 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (ipv6_ospf6_transmitdelay,
<a name="l01209"></a>01209        ipv6_ospf6_transmitdelay_cmd,
<a name="l01210"></a>01210        <span class="stringliteral">&quot;ipv6 ospf6 transmit-delay &lt;1-3600&gt;&quot;</span>,
<a name="l01211"></a>01211        <a class="code" href="command_8h.html#a878a4dd8ec43cd96c88a08ba2e3d68b7">IP6_STR</a>
<a name="l01212"></a>01212        OSPF6_STR
<a name="l01213"></a>01213        <span class="stringliteral">&quot;Transmit delay of this interface\n&quot;</span>
<a name="l01214"></a>01214        SECONDS_STR
<a name="l01215"></a>01215        )
<a name="l01216"></a>01216 {
<a name="l01217"></a>01217   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l01218"></a>01218   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l01219"></a>01219 
<a name="l01220"></a>01220   ifp = (<span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *) <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
<a name="l01221"></a>01221   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (ifp);
<a name="l01222"></a>01222 
<a name="l01223"></a>01223   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l01224"></a>01224   if (oi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01225"></a>01225     oi = <a class="code" href="ospf6__interface_8c.html#a4102d53667f86e75d50917c610c4cc5e">ospf6_interface_create</a> (ifp);
<a name="l01226"></a>01226   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (oi);
<a name="l01227"></a>01227 
<a name="l01228"></a>01228   oi-&gt;<a class="code" href="structospf6__interface.html#a8332fa0bef3f650b9ce32c772c028437">transdelay</a> = strtol (argv[0], <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 10);
<a name="l01229"></a>01229   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01230"></a>01230 }
<a name="l01231"></a>01231 
<a name="l01232"></a>01232 <span class="comment">/* interface variable set command */</span>
<a name="l01233"></a>01233 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (ipv6_ospf6_retransmitinterval,
<a name="l01234"></a>01234        ipv6_ospf6_retransmitinterval_cmd,
<a name="l01235"></a>01235        <span class="stringliteral">&quot;ipv6 ospf6 retransmit-interval &lt;1-65535&gt;&quot;</span>,
<a name="l01236"></a>01236        <a class="code" href="command_8h.html#a878a4dd8ec43cd96c88a08ba2e3d68b7">IP6_STR</a>
<a name="l01237"></a>01237        OSPF6_STR
<a name="l01238"></a>01238        <span class="stringliteral">&quot;Time between retransmitting lost link state advertisements\n&quot;</span>
<a name="l01239"></a>01239        SECONDS_STR
<a name="l01240"></a>01240        )
<a name="l01241"></a>01241 {
<a name="l01242"></a>01242   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l01243"></a>01243   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l01244"></a>01244 
<a name="l01245"></a>01245   ifp = (<span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *) <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
<a name="l01246"></a>01246   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (ifp);
<a name="l01247"></a>01247 
<a name="l01248"></a>01248   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l01249"></a>01249   if (oi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01250"></a>01250     oi = <a class="code" href="ospf6__interface_8c.html#a4102d53667f86e75d50917c610c4cc5e">ospf6_interface_create</a> (ifp);
<a name="l01251"></a>01251   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (oi);
<a name="l01252"></a>01252 
<a name="l01253"></a>01253   oi-&gt;<a class="code" href="structospf6__interface.html#a85d5e73751611ee20f1ad041a181cbde">rxmt_interval</a> = strtol (argv[0], <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 10);
<a name="l01254"></a>01254   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01255"></a>01255 }
<a name="l01256"></a>01256 
<a name="l01257"></a>01257 <span class="comment">/* interface variable set command */</span>
<a name="l01258"></a>01258 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (ipv6_ospf6_priority,
<a name="l01259"></a>01259        ipv6_ospf6_priority_cmd,
<a name="l01260"></a>01260        <span class="stringliteral">&quot;ipv6 ospf6 priority &lt;0-255&gt;&quot;</span>,
<a name="l01261"></a>01261        <a class="code" href="command_8h.html#a878a4dd8ec43cd96c88a08ba2e3d68b7">IP6_STR</a>
<a name="l01262"></a>01262        OSPF6_STR
<a name="l01263"></a>01263        <span class="stringliteral">&quot;Router priority\n&quot;</span>
<a name="l01264"></a>01264        <span class="stringliteral">&quot;Priority value\n&quot;</span>
<a name="l01265"></a>01265        )
<a name="l01266"></a>01266 {
<a name="l01267"></a>01267   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l01268"></a>01268   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l01269"></a>01269 
<a name="l01270"></a>01270   ifp = (<span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *) <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
<a name="l01271"></a>01271   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (ifp);
<a name="l01272"></a>01272 
<a name="l01273"></a>01273   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l01274"></a>01274   if (oi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01275"></a>01275     oi = <a class="code" href="ospf6__interface_8c.html#a4102d53667f86e75d50917c610c4cc5e">ospf6_interface_create</a> (ifp);
<a name="l01276"></a>01276   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (oi);
<a name="l01277"></a>01277 
<a name="l01278"></a>01278   oi-&gt;<a class="code" href="structospf6__interface.html#a91a541af8d7b9a9b224b2dbb768f4822">priority</a> = strtol (argv[0], <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 10);
<a name="l01279"></a>01279 
<a name="l01280"></a>01280   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a>)
<a name="l01281"></a>01281     <a class="code" href="ospf6__interface_8c.html#a555001dc455184fd8e582262d09f30c7">ospf6_interface_state_change</a> (<a class="code" href="ospf6__interface_8c.html#ad107be702ff32a3829b0975c1c889b21">dr_election</a> (oi), oi);
<a name="l01282"></a>01282 
<a name="l01283"></a>01283   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01284"></a>01284 }
<a name="l01285"></a>01285 
<a name="l01286"></a>01286 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (ipv6_ospf6_instance,
<a name="l01287"></a>01287        ipv6_ospf6_instance_cmd,
<a name="l01288"></a>01288        <span class="stringliteral">&quot;ipv6 ospf6 instance-id &lt;0-255&gt;&quot;</span>,
<a name="l01289"></a>01289        <a class="code" href="command_8h.html#a878a4dd8ec43cd96c88a08ba2e3d68b7">IP6_STR</a>
<a name="l01290"></a>01290        OSPF6_STR
<a name="l01291"></a>01291        <span class="stringliteral">&quot;Instance ID for this interface\n&quot;</span>
<a name="l01292"></a>01292        <span class="stringliteral">&quot;Instance ID value\n&quot;</span>
<a name="l01293"></a>01293        )
<a name="l01294"></a>01294 {
<a name="l01295"></a>01295   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l01296"></a>01296   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l01297"></a>01297 
<a name="l01298"></a>01298   ifp = (<span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *)<a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
<a name="l01299"></a>01299   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (ifp);
<a name="l01300"></a>01300 
<a name="l01301"></a>01301   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *)ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l01302"></a>01302   if (oi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01303"></a>01303     oi = <a class="code" href="ospf6__interface_8c.html#a4102d53667f86e75d50917c610c4cc5e">ospf6_interface_create</a> (ifp);
<a name="l01304"></a>01304   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (oi);
<a name="l01305"></a>01305 
<a name="l01306"></a>01306   oi-&gt;<a class="code" href="structospf6__interface.html#aa29c61e3e5509e7c844bdf19efce0268">instance_id</a> = strtol (argv[0], <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 10);
<a name="l01307"></a>01307   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01308"></a>01308 }
<a name="l01309"></a>01309 
<a name="l01310"></a>01310 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (ipv6_ospf6_passive,
<a name="l01311"></a>01311        ipv6_ospf6_passive_cmd,
<a name="l01312"></a>01312        <span class="stringliteral">&quot;ipv6 ospf6 passive&quot;</span>,
<a name="l01313"></a>01313        <a class="code" href="command_8h.html#a878a4dd8ec43cd96c88a08ba2e3d68b7">IP6_STR</a>
<a name="l01314"></a>01314        OSPF6_STR
<a name="l01315"></a>01315        <span class="stringliteral">&quot;passive interface, No adjacency will be formed on this interface\n&quot;</span>
<a name="l01316"></a>01316        )
<a name="l01317"></a>01317 {
<a name="l01318"></a>01318   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l01319"></a>01319   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l01320"></a>01320   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
<a name="l01321"></a>01321   <span class="keyword">struct </span><a class="code" href="structospf6__neighbor.html">ospf6_neighbor</a> *on;
<a name="l01322"></a>01322 
<a name="l01323"></a>01323   ifp = (<span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *) <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
<a name="l01324"></a>01324   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (ifp);
<a name="l01325"></a>01325 
<a name="l01326"></a>01326   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l01327"></a>01327   if (oi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01328"></a>01328     oi = <a class="code" href="ospf6__interface_8c.html#a4102d53667f86e75d50917c610c4cc5e">ospf6_interface_create</a> (ifp);
<a name="l01329"></a>01329   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (oi);
<a name="l01330"></a>01330 
<a name="l01331"></a>01331   <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (oi-&gt;<a class="code" href="structospf6__interface.html#aa5dbc797ed38482907f57c66458a3e87">flag</a>, <a class="code" href="ospf6__interface_8h.html#aeb4543177500f2d71c28f91a47154e25">OSPF6_INTERFACE_PASSIVE</a>);
<a name="l01332"></a>01332   <a class="code" href="thread_8h.html#a7e1de4fc338e4feae498978461742dbb">THREAD_OFF</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a2166b82112542d46986c60ef49b36ce0">thread_send_hello</a>);
<a name="l01333"></a>01333 
<a name="l01334"></a>01334   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ada404f0a64a2f3783445fdf2c2dccf6d">neighbor_list</a>, node, nnode, on))
<a name="l01335"></a>01335     {
<a name="l01336"></a>01336       <a class="code" href="thread_8h.html#a7e1de4fc338e4feae498978461742dbb">THREAD_OFF</a> (on-&gt;<a class="code" href="structospf6__neighbor.html#a9ad2b87db5f53544c260a3fa073ee214">inactivity_timer</a>);
<a name="l01337"></a>01337       <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf6__neighbor_8c.html#ab053d77889fefde8115657d77f79d71a">inactivity_timer</a>, on, 0);
<a name="l01338"></a>01338     }
<a name="l01339"></a>01339 
<a name="l01340"></a>01340   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01341"></a>01341 }
<a name="l01342"></a>01342 
<a name="l01343"></a>01343 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_ipv6_ospf6_passive,
<a name="l01344"></a>01344        no_ipv6_ospf6_passive_cmd,
<a name="l01345"></a>01345        <span class="stringliteral">&quot;no ipv6 ospf6 passive&quot;</span>,
<a name="l01346"></a>01346        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l01347"></a>01347        <a class="code" href="command_8h.html#a878a4dd8ec43cd96c88a08ba2e3d68b7">IP6_STR</a>
<a name="l01348"></a>01348        OSPF6_STR
<a name="l01349"></a>01349        <span class="stringliteral">&quot;passive interface: No Adjacency will be formed on this I/F\n&quot;</span>
<a name="l01350"></a>01350        )
<a name="l01351"></a>01351 {
<a name="l01352"></a>01352   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l01353"></a>01353   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l01354"></a>01354 
<a name="l01355"></a>01355   ifp = (<span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *) <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
<a name="l01356"></a>01356   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (ifp);
<a name="l01357"></a>01357 
<a name="l01358"></a>01358   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l01359"></a>01359   if (oi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01360"></a>01360     oi = <a class="code" href="ospf6__interface_8c.html#a4102d53667f86e75d50917c610c4cc5e">ospf6_interface_create</a> (ifp);
<a name="l01361"></a>01361   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (oi);
<a name="l01362"></a>01362 
<a name="l01363"></a>01363   <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (oi-&gt;<a class="code" href="structospf6__interface.html#aa5dbc797ed38482907f57c66458a3e87">flag</a>, <a class="code" href="ospf6__interface_8h.html#aeb4543177500f2d71c28f91a47154e25">OSPF6_INTERFACE_PASSIVE</a>);
<a name="l01364"></a>01364   <a class="code" href="thread_8h.html#a7e1de4fc338e4feae498978461742dbb">THREAD_OFF</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a2166b82112542d46986c60ef49b36ce0">thread_send_hello</a>);
<a name="l01365"></a>01365   oi-&gt;<a class="code" href="structospf6__interface.html#a2166b82112542d46986c60ef49b36ce0">thread_send_hello</a> =
<a name="l01366"></a>01366     <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf6__message_8c.html#a2e117804a7699187ffbbb2558cf3106a">ospf6_hello_send</a>, oi, 0);
<a name="l01367"></a>01367 
<a name="l01368"></a>01368   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01369"></a>01369 }
<a name="l01370"></a>01370 
<a name="l01371"></a>01371 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (ipv6_ospf6_advertise_prefix_list,
<a name="l01372"></a>01372        ipv6_ospf6_advertise_prefix_list_cmd,
<a name="l01373"></a>01373        <span class="stringliteral">&quot;ipv6 ospf6 advertise prefix-list WORD&quot;</span>,
<a name="l01374"></a>01374        <a class="code" href="command_8h.html#a878a4dd8ec43cd96c88a08ba2e3d68b7">IP6_STR</a>
<a name="l01375"></a>01375        OSPF6_STR
<a name="l01376"></a>01376        <span class="stringliteral">&quot;Advertising options\n&quot;</span>
<a name="l01377"></a>01377        <span class="stringliteral">&quot;Filter prefix using prefix-list\n&quot;</span>
<a name="l01378"></a>01378        <span class="stringliteral">&quot;Prefix list name\n&quot;</span>
<a name="l01379"></a>01379        )
<a name="l01380"></a>01380 {
<a name="l01381"></a>01381   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l01382"></a>01382   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l01383"></a>01383 
<a name="l01384"></a>01384   ifp = (<span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *) <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
<a name="l01385"></a>01385   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (ifp);
<a name="l01386"></a>01386 
<a name="l01387"></a>01387   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l01388"></a>01388   if (oi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01389"></a>01389     oi = <a class="code" href="ospf6__interface_8c.html#a4102d53667f86e75d50917c610c4cc5e">ospf6_interface_create</a> (ifp);
<a name="l01390"></a>01390   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (oi);
<a name="l01391"></a>01391 
<a name="l01392"></a>01392   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#aaa0d586a5df92293c957acfadfff288b">plist_name</a>)
<a name="l01393"></a>01393     <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba770d10c594a76e3efd9885b3e047915e">MTYPE_PREFIX_LIST_STR</a>, oi-&gt;<a class="code" href="structospf6__interface.html#aaa0d586a5df92293c957acfadfff288b">plist_name</a>);
<a name="l01394"></a>01394   oi-&gt;<a class="code" href="structospf6__interface.html#aaa0d586a5df92293c957acfadfff288b">plist_name</a> = <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba770d10c594a76e3efd9885b3e047915e">MTYPE_PREFIX_LIST_STR</a>, argv[0]);
<a name="l01395"></a>01395 
<a name="l01396"></a>01396   <a class="code" href="ospf6__interface_8c.html#a524bafd29fa3104f2a8d9b3afdc339a6">ospf6_interface_connected_route_update</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>);
<a name="l01397"></a>01397 
<a name="l01398"></a>01398   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a>)
<a name="l01399"></a>01399     {
<a name="l01400"></a>01400       <a class="code" href="ospf6__intra_8h.html#a784e635145a354b7e3d373e07c245b9d">OSPF6_LINK_LSA_SCHEDULE</a> (oi);
<a name="l01401"></a>01401       <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#aafdfe7c67c1ff540201718b688e0a15b">state</a> == <a class="code" href="ospf6__interface_8h.html#ad83f536f4674c165d7f393d28f087843">OSPF6_INTERFACE_DR</a>)
<a name="l01402"></a>01402         {
<a name="l01403"></a>01403           <a class="code" href="ospf6__intra_8h.html#aa9749144d232f3aa259fe687e54803aa">OSPF6_NETWORK_LSA_SCHEDULE</a> (oi);
<a name="l01404"></a>01404           <a class="code" href="ospf6__intra_8h.html#af1bf24203358733b7eae1c1426dd1849">OSPF6_INTRA_PREFIX_LSA_SCHEDULE_TRANSIT</a> (oi);
<a name="l01405"></a>01405         }
<a name="l01406"></a>01406       <a class="code" href="ospf6__intra_8h.html#a57780a151b320e30333bb76d55f71ad7">OSPF6_INTRA_PREFIX_LSA_SCHEDULE_STUB</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a>);
<a name="l01407"></a>01407     }
<a name="l01408"></a>01408 
<a name="l01409"></a>01409   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01410"></a>01410 }
<a name="l01411"></a>01411 
<a name="l01412"></a>01412 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_ipv6_ospf6_advertise_prefix_list,
<a name="l01413"></a>01413        no_ipv6_ospf6_advertise_prefix_list_cmd,
<a name="l01414"></a>01414        <span class="stringliteral">&quot;no ipv6 ospf6 advertise prefix-list&quot;</span>,
<a name="l01415"></a>01415        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l01416"></a>01416        <a class="code" href="command_8h.html#a878a4dd8ec43cd96c88a08ba2e3d68b7">IP6_STR</a>
<a name="l01417"></a>01417        OSPF6_STR
<a name="l01418"></a>01418        <span class="stringliteral">&quot;Advertising options\n&quot;</span>
<a name="l01419"></a>01419        <span class="stringliteral">&quot;Filter prefix using prefix-list\n&quot;</span>
<a name="l01420"></a>01420        )
<a name="l01421"></a>01421 {
<a name="l01422"></a>01422   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l01423"></a>01423   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l01424"></a>01424 
<a name="l01425"></a>01425   ifp = (<span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *) <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
<a name="l01426"></a>01426   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (ifp);
<a name="l01427"></a>01427 
<a name="l01428"></a>01428   oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l01429"></a>01429   if (oi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01430"></a>01430     oi = <a class="code" href="ospf6__interface_8c.html#a4102d53667f86e75d50917c610c4cc5e">ospf6_interface_create</a> (ifp);
<a name="l01431"></a>01431   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (oi);
<a name="l01432"></a>01432 
<a name="l01433"></a>01433   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#aaa0d586a5df92293c957acfadfff288b">plist_name</a>)
<a name="l01434"></a>01434     {
<a name="l01435"></a>01435       <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba770d10c594a76e3efd9885b3e047915e">MTYPE_PREFIX_LIST_STR</a>, oi-&gt;<a class="code" href="structospf6__interface.html#aaa0d586a5df92293c957acfadfff288b">plist_name</a>);
<a name="l01436"></a>01436       oi-&gt;<a class="code" href="structospf6__interface.html#aaa0d586a5df92293c957acfadfff288b">plist_name</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01437"></a>01437     }
<a name="l01438"></a>01438 
<a name="l01439"></a>01439   <a class="code" href="ospf6__interface_8c.html#a524bafd29fa3104f2a8d9b3afdc339a6">ospf6_interface_connected_route_update</a> (oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>);
<a name="l01440"></a>01440 
<a name="l01441"></a>01441   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a>)
<a name="l01442"></a>01442     {
<a name="l01443"></a>01443       <a class="code" href="ospf6__intra_8h.html#a784e635145a354b7e3d373e07c245b9d">OSPF6_LINK_LSA_SCHEDULE</a> (oi);
<a name="l01444"></a>01444       <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#aafdfe7c67c1ff540201718b688e0a15b">state</a> == <a class="code" href="ospf6__interface_8h.html#ad83f536f4674c165d7f393d28f087843">OSPF6_INTERFACE_DR</a>)
<a name="l01445"></a>01445         {
<a name="l01446"></a>01446           <a class="code" href="ospf6__intra_8h.html#aa9749144d232f3aa259fe687e54803aa">OSPF6_NETWORK_LSA_SCHEDULE</a> (oi);
<a name="l01447"></a>01447           <a class="code" href="ospf6__intra_8h.html#af1bf24203358733b7eae1c1426dd1849">OSPF6_INTRA_PREFIX_LSA_SCHEDULE_TRANSIT</a> (oi);
<a name="l01448"></a>01448         }
<a name="l01449"></a>01449       <a class="code" href="ospf6__intra_8h.html#a57780a151b320e30333bb76d55f71ad7">OSPF6_INTRA_PREFIX_LSA_SCHEDULE_STUB</a> (oi-&gt;<a class="code" href="structospf6__interface.html#a4f6cfeea2ecb9f163edd02b78f79294d">area</a>);
<a name="l01450"></a>01450     }
<a name="l01451"></a>01451 
<a name="l01452"></a>01452   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01453"></a>01453 }
<a name="l01454"></a>01454 
<a name="l01455"></a>01455 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l01456"></a>01456 config_write_ospf6_interface (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l01457"></a>01457 {
<a name="l01458"></a>01458   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l01459"></a>01459   <span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *oi;
<a name="l01460"></a>01460   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l01461"></a>01461 
<a name="l01462"></a>01462   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="if_8c.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a>, i, ifp))
<a name="l01463"></a>01463     {
<a name="l01464"></a>01464       oi = (<span class="keyword">struct </span><a class="code" href="structospf6__interface.html">ospf6_interface</a> *) ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l01465"></a>01465       if (oi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01466"></a>01466         <span class="keywordflow">continue</span>;
<a name="l01467"></a>01467 
<a name="l01468"></a>01468       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;interface %s%s&quot;</span>,
<a name="l01469"></a>01469                oi-&gt;<a class="code" href="structospf6__interface.html#ab77617d3c7c82e25b6c035d9e1856c22">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l01470"></a>01470 
<a name="l01471"></a>01471       <span class="keywordflow">if</span> (ifp-&gt;<a class="code" href="structinterface.html#a273b8698448bacdf46b32b3665e7b8d2">desc</a>)
<a name="l01472"></a>01472         <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; description %s%s&quot;</span>, ifp-&gt;<a class="code" href="structinterface.html#a273b8698448bacdf46b32b3665e7b8d2">desc</a>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l01473"></a>01473 
<a name="l01474"></a>01474       <span class="keywordflow">if</span> (ifp-&gt;<a class="code" href="structinterface.html#a75a892a4df0f60191a13ca07b6625cb1">mtu6</a> != oi-&gt;<a class="code" href="structospf6__interface.html#a88579a4c38c3458d12425986c1a43893">ifmtu</a>)
<a name="l01475"></a>01475         <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; ipv6 ospf6 ifmtu %d%s&quot;</span>, oi-&gt;<a class="code" href="structospf6__interface.html#a88579a4c38c3458d12425986c1a43893">ifmtu</a>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l01476"></a>01476       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; ipv6 ospf6 cost %d%s&quot;</span>,
<a name="l01477"></a>01477                oi-&gt;<a class="code" href="structospf6__interface.html#afe7ec302275d6abc2bab9337ceaef164">cost</a>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l01478"></a>01478       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; ipv6 ospf6 hello-interval %d%s&quot;</span>,
<a name="l01479"></a>01479                oi-&gt;<a class="code" href="structospf6__interface.html#a361e7c155d93d4b4082a22d43f6da499">hello_interval</a>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l01480"></a>01480       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; ipv6 ospf6 dead-interval %d%s&quot;</span>,
<a name="l01481"></a>01481                oi-&gt;<a class="code" href="structospf6__interface.html#abcdd28a392cf138d80f052c651e9236b">dead_interval</a>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l01482"></a>01482       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; ipv6 ospf6 retransmit-interval %d%s&quot;</span>,
<a name="l01483"></a>01483                oi-&gt;<a class="code" href="structospf6__interface.html#a85d5e73751611ee20f1ad041a181cbde">rxmt_interval</a>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l01484"></a>01484       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; ipv6 ospf6 priority %d%s&quot;</span>,
<a name="l01485"></a>01485                oi-&gt;<a class="code" href="structospf6__interface.html#a91a541af8d7b9a9b224b2dbb768f4822">priority</a>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l01486"></a>01486       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; ipv6 ospf6 transmit-delay %d%s&quot;</span>,
<a name="l01487"></a>01487                oi-&gt;<a class="code" href="structospf6__interface.html#a8332fa0bef3f650b9ce32c772c028437">transdelay</a>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l01488"></a>01488       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; ipv6 ospf6 instance-id %d%s&quot;</span>,
<a name="l01489"></a>01489                oi-&gt;<a class="code" href="structospf6__interface.html#aa29c61e3e5509e7c844bdf19efce0268">instance_id</a>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l01490"></a>01490 
<a name="l01491"></a>01491       <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf6__interface.html#aaa0d586a5df92293c957acfadfff288b">plist_name</a>)
<a name="l01492"></a>01492         <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; ipv6 ospf6 advertise prefix-list %s%s&quot;</span>,
<a name="l01493"></a>01493                  oi-&gt;<a class="code" href="structospf6__interface.html#aaa0d586a5df92293c957acfadfff288b">plist_name</a>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l01494"></a>01494 
<a name="l01495"></a>01495       <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (oi-&gt;<a class="code" href="structospf6__interface.html#aa5dbc797ed38482907f57c66458a3e87">flag</a>, <a class="code" href="ospf6__interface_8h.html#aeb4543177500f2d71c28f91a47154e25">OSPF6_INTERFACE_PASSIVE</a>))
<a name="l01496"></a>01496         <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; ipv6 ospf6 passive%s&quot;</span>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l01497"></a>01497 
<a name="l01498"></a>01498       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;!%s&quot;</span>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l01499"></a>01499     }
<a name="l01500"></a>01500   <span class="keywordflow">return</span> 0;
<a name="l01501"></a>01501 }
<a name="l01502"></a>01502 
<a name="l01503"></a>01503 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structcmd__node.html">cmd_node</a> <a class="code" href="interface_8c.html#a16f01e8f31d361deea8af5ea55c2d2ec">interface_node</a> =
<a name="l01504"></a>01504 {
<a name="l01505"></a>01505   <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>,
<a name="l01506"></a>01506   <span class="stringliteral">&quot;%s(config-if)# &quot;</span>,
<a name="l01507"></a>01507   1 <span class="comment">/* VTYSH */</span>
<a name="l01508"></a>01508 };
<a name="l01509"></a>01509 
<a name="l01510"></a>01510 <span class="keywordtype">void</span>
<a name="l01511"></a><a class="code" href="ospf6__interface_8h.html#ab6807af2f0ffe64e6eba062119eafce3">01511</a> <a class="code" href="ospf6__interface_8c.html#ab6807af2f0ffe64e6eba062119eafce3">ospf6_interface_init</a> (<span class="keywordtype">void</span>)
<a name="l01512"></a>01512 {
<a name="l01513"></a>01513   <span class="comment">/* Install interface node. */</span>
<a name="l01514"></a>01514   <a class="code" href="command_8c.html#a7ee8a7c258e1e5a6e3ff6173dd1658e3">install_node</a> (&amp;interface_node, config_write_ospf6_interface);
<a name="l01515"></a>01515 
<a name="l01516"></a>01516   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;show_ipv6_ospf6_interface_cmd);
<a name="l01517"></a>01517   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;show_ipv6_ospf6_interface_prefix_cmd);
<a name="l01518"></a>01518   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;show_ipv6_ospf6_interface_prefix_detail_cmd);
<a name="l01519"></a>01519   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;show_ipv6_ospf6_interface_prefix_match_cmd);
<a name="l01520"></a>01520   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;show_ipv6_ospf6_interface_ifname_cmd);
<a name="l01521"></a>01521   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;<a class="code" href="ospf6__interface_8c.html#a10b15aa49981538f84bd7befe23878e9">show_ipv6_ospf6_interface_ifname_prefix_cmd</a>);
<a name="l01522"></a>01522   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;show_ipv6_ospf6_interface_ifname_prefix_detail_cmd);
<a name="l01523"></a>01523   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;show_ipv6_ospf6_interface_ifname_prefix_match_cmd);
<a name="l01524"></a>01524   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;show_ipv6_ospf6_interface_cmd);
<a name="l01525"></a>01525   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;show_ipv6_ospf6_interface_prefix_cmd);
<a name="l01526"></a>01526   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;show_ipv6_ospf6_interface_prefix_detail_cmd);
<a name="l01527"></a>01527   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;show_ipv6_ospf6_interface_prefix_match_cmd);
<a name="l01528"></a>01528   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;show_ipv6_ospf6_interface_ifname_cmd);
<a name="l01529"></a>01529   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;<a class="code" href="ospf6__interface_8c.html#a10b15aa49981538f84bd7befe23878e9">show_ipv6_ospf6_interface_ifname_prefix_cmd</a>);
<a name="l01530"></a>01530   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;show_ipv6_ospf6_interface_ifname_prefix_detail_cmd);
<a name="l01531"></a>01531   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;show_ipv6_ospf6_interface_ifname_prefix_match_cmd);
<a name="l01532"></a>01532 
<a name="l01533"></a>01533   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;<a class="code" href="if_8h.html#ab6e8f13999936ceba12d9a8e36484c49">interface_cmd</a>);
<a name="l01534"></a>01534   <a class="code" href="command_8h.html#affb2f399c88b8a225b2719bbe928e4de">install_default</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>);
<a name="l01535"></a>01535   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;<a class="code" href="if_8h.html#a51777a76e1c996fcf81ab577db829158">interface_desc_cmd</a>);
<a name="l01536"></a>01536   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;<a class="code" href="if_8h.html#aee31b677aae5a7d464c06d1aabc3f87a">no_interface_desc_cmd</a>);
<a name="l01537"></a>01537   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;ipv6_ospf6_cost_cmd);
<a name="l01538"></a>01538   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;ipv6_ospf6_ifmtu_cmd);
<a name="l01539"></a>01539   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_ipv6_ospf6_ifmtu_cmd);
<a name="l01540"></a>01540   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;ipv6_ospf6_deadinterval_cmd);
<a name="l01541"></a>01541   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;ipv6_ospf6_hellointerval_cmd);
<a name="l01542"></a>01542   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;ipv6_ospf6_priority_cmd);
<a name="l01543"></a>01543   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;ipv6_ospf6_retransmitinterval_cmd);
<a name="l01544"></a>01544   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;ipv6_ospf6_transmitdelay_cmd);
<a name="l01545"></a>01545   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;ipv6_ospf6_instance_cmd);
<a name="l01546"></a>01546 
<a name="l01547"></a>01547   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;ipv6_ospf6_passive_cmd);
<a name="l01548"></a>01548   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_ipv6_ospf6_passive_cmd);
<a name="l01549"></a>01549 
<a name="l01550"></a>01550   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;ipv6_ospf6_advertise_prefix_list_cmd);
<a name="l01551"></a>01551   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_ipv6_ospf6_advertise_prefix_list_cmd);
<a name="l01552"></a>01552 }
<a name="l01553"></a>01553 
<a name="l01554"></a><a class="code" href="ospf6__interface_8c.html#a6eaec03b66d31086edfca45568c09a34">01554</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (debug_ospf6_interface,
<a name="l01555"></a>01555        debug_ospf6_interface_cmd,
<a name="l01556"></a>01556        <span class="stringliteral">&quot;debug ospf6 interface&quot;</span>,
<a name="l01557"></a>01557        <a class="code" href="command_8h.html#aa32f22e2cc4c90e73981459688712288">DEBUG_STR</a>
<a name="l01558"></a>01558        OSPF6_STR
<a name="l01559"></a>01559        <span class="stringliteral">&quot;Debug OSPFv3 Interface\n&quot;</span>
<a name="l01560"></a>01560       )
<a name="l01561"></a>01561 {
<a name="l01562"></a>01562   <a class="code" href="ospf6__interface_8h.html#a3c10f5cdaa2d3244c972803ed3e383a3">OSPF6_DEBUG_INTERFACE_ON</a> ();
<a name="l01563"></a>01563   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01564"></a>01564 }
<a name="l01565"></a>01565 
<a name="l01566"></a><a class="code" href="ospf6__interface_8c.html#ad3f2fd28d5897cf50c640b4d01edd55f">01566</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_debug_ospf6_interface,
<a name="l01567"></a>01567        no_debug_ospf6_interface_cmd,
<a name="l01568"></a>01568        <span class="stringliteral">&quot;no debug ospf6 interface&quot;</span>,
<a name="l01569"></a>01569        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l01570"></a>01570        <a class="code" href="command_8h.html#aa32f22e2cc4c90e73981459688712288">DEBUG_STR</a>
<a name="l01571"></a>01571        OSPF6_STR
<a name="l01572"></a>01572        <span class="stringliteral">&quot;Debug OSPFv3 Interface\n&quot;</span>
<a name="l01573"></a>01573       )
<a name="l01574"></a>01574 {
<a name="l01575"></a>01575   <a class="code" href="ospf6__interface_8h.html#a5f65e8c18b3f812520fc59ce4d3f4eb2">OSPF6_DEBUG_INTERFACE_OFF</a> ();
<a name="l01576"></a>01576   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01577"></a>01577 }
<a name="l01578"></a>01578 
<a name="l01579"></a>01579 <span class="keywordtype">int</span>
<a name="l01580"></a><a class="code" href="ospf6__interface_8h.html#a1a9ab7f668fd0beea095860cd1817cb9">01580</a> <a class="code" href="ospf6__interface_8c.html#a1a9ab7f668fd0beea095860cd1817cb9">config_write_ospf6_debug_interface</a> (<span class="keyword">struct</span> vty *vty)
<a name="l01581"></a>01581 {
<a name="l01582"></a>01582   <span class="keywordflow">if</span> (<a class="code" href="ospf6__interface_8h.html#ab442f4c1ff59407b56b532e56d2f18da">IS_OSPF6_DEBUG_INTERFACE</a>)
<a name="l01583"></a>01583     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;debug ospf6 interface%s&quot;</span>, <a class="code" href="ospf6d_8h.html#a356c06c82b90b274c7f519f9a405142c">VNL</a>);
<a name="l01584"></a>01584   <span class="keywordflow">return</span> 0;
<a name="l01585"></a>01585 }
<a name="l01586"></a>01586 
<a name="l01587"></a>01587 <span class="keywordtype">void</span>
<a name="l01588"></a><a class="code" href="ospf6__interface_8h.html#ac925f88c6b95a34264d1e10e34de833e">01588</a> <a class="code" href="ospf6__interface_8c.html#ac925f88c6b95a34264d1e10e34de833e">install_element_ospf6_debug_interface</a> (<span class="keywordtype">void</span>)
<a name="l01589"></a>01589 {
<a name="l01590"></a>01590   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;debug_ospf6_interface_cmd);
<a name="l01591"></a>01591   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;no_debug_ospf6_interface_cmd);
<a name="l01592"></a>01592   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;debug_ospf6_interface_cmd);
<a name="l01593"></a>01593   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;no_debug_ospf6_interface_cmd);
<a name="l01594"></a>01594 }
<a name="l01595"></a>01595 
<a name="l01596"></a>01596 
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="ospf6__interface_8c.html">ospf6_interface.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:06 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
