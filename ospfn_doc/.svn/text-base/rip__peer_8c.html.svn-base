<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: ripd/rip_peer.c File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('rip__peer_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#define-members">Defines</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">ripd/rip_peer.c File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="zebra_8h_source.html">zebra.h</a>&gt;</code><br/>
<code>#include &quot;<a class="el" href="if_8h_source.html">if.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="prefix_8h_source.html">prefix.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="command_8h_source.html">command.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="linklist_8h_source.html">linklist.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="thread_8h_source.html">thread.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="memory_8h_source.html">memory.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ripd_8h_source.html">ripd/ripd.h</a>&quot;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for rip_peer.c:</div>
<div class="dyncontent">
<div class="center"><img src="rip__peer_8c__incl.png" border="0" usemap="#ripd_2rip__peer_8c" alt=""/></div>
<map name="ripd_2rip__peer_8c" id="ripd_2rip__peer_8c">
<area shape="rect" id="node3" href="zebra_8h.html" title="zebra.h" alt="" coords="1345,80,1412,107"/><area shape="rect" id="node61" href="if_8h.html" title="if.h" alt="" coords="2817,80,2857,107"/><area shape="rect" id="node63" href="linklist_8h.html" title="linklist.h" alt="" coords="2798,155,2868,181"/><area shape="rect" id="node65" href="prefix_8h.html" title="prefix.h" alt="" coords="2957,80,3024,107"/><area shape="rect" id="node69" href="command_8h.html" title="command.h" alt="" coords="3082,80,3173,107"/><area shape="rect" id="node75" href="thread_8h.html" title="thread.h" alt="" coords="3203,229,3275,256"/><area shape="rect" id="node84" href="memory_8h.html" title="memory.h" alt="" coords="3383,80,3465,107"/><area shape="rect" id="node88" href="ripd_8h.html" title="ripd/ripd.h" alt="" coords="3489,80,3572,107"/><area shape="rect" id="node57" href="zassert_8h.html" title="zassert.h" alt="" coords="2623,155,2700,181"/><area shape="rect" id="node59" href="str_8h.html" title="str.h" alt="" coords="2725,155,2773,181"/><area shape="rect" id="node67" href="sockunion_8h.html" title="sockunion.h" alt="" coords="2893,155,2987,181"/><area shape="rect" id="node71" href="vector_8h.html" title="vector.h" alt="" coords="3011,155,3083,181"/><area shape="rect" id="node73" href="vty_8h.html" title="vty.h" alt="" coords="3107,155,3159,181"/><area shape="rect" id="node80" href="route__types_8h.html" title="lib/route_types.h" alt="" coords="3183,155,3307,181"/><area shape="rect" id="node77" href="log_8h.html" title="log.h" alt="" coords="2363,229,2415,256"/><area shape="rect" id="node86" href="memtypes_8h.html" title="lib/memtypes.h" alt="" coords="3383,155,3497,181"/></map>
</div>
</div>
<p><a href="rip__peer_8c_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__peer_8c.html#a8950077f458e540a8b4292539e0120cf">ONE_DAY_SECOND</a>&#160;&#160;&#160;60*60*24</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__peer_8c.html#a762bcaaf64d0f21361ca5c0262b49f33">ONE_WEEK_SECOND</a>&#160;&#160;&#160;60*60*24*7</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__peer_8c.html#af695c89af81d0e2f11848303e97b5179">RIP_UPTIME_LEN</a>&#160;&#160;&#160;25</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structrip__peer.html">rip_peer</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__peer_8c.html#a54b1ffca083619363b6843591b14558f">rip_peer_new</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__peer_8c.html#ae0ed9bd3b05b14c9156295d0b30efdbe">rip_peer_free</a> (struct <a class="el" href="structrip__peer.html">rip_peer</a> *<a class="el" href="structpeer.html">peer</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structrip__peer.html">rip_peer</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__peer_8c.html#a6a60f44888b6b2d042baa2ae98d484d1">rip_peer_lookup</a> (struct in_addr *addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structrip__peer.html">rip_peer</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__peer_8c.html#ac3b4af26344576cb32789bf4163ea521">rip_peer_lookup_next</a> (struct in_addr *addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__peer_8c.html#ab4b2b4bf925bd3b0e121a70794760aaf">rip_peer_timeout</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structrip__peer.html">rip_peer</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__peer_8c.html#a61a352ef6814826be8b1e014bbe1512d">rip_peer_get</a> (struct in_addr *addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__peer_8c.html#aa7cc288ea45c0c2961f86ee2aff648ad">rip_peer_update</a> (struct sockaddr_in *from, u_char <a class="el" href="isis__pdu_8h.html#ac477ee30f0ed8c0b09a6f3387287191f">version</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__peer_8c.html#a6a38f0b9d042a51ce833b0810eb97dc8">rip_peer_bad_route</a> (struct sockaddr_in *from)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__peer_8c.html#a295ee2311f834371d030633e9cc0b2f5">rip_peer_bad_packet</a> (struct sockaddr_in *from)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__peer_8c.html#a74b4e7d219fb8a2babd1accc1b10fc43">rip_peer_uptime</a> (struct <a class="el" href="structrip__peer.html">rip_peer</a> *<a class="el" href="structpeer.html">peer</a>, char *buf, size_t len)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__peer_8c.html#a02aaa1aaecb272b7e12d9bf99b7e690e">rip_peer_display</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__peer_8c.html#a9e2d2f0b0ac62e0c4cd953515cfa7fc2">rip_peer_list_cmp</a> (struct <a class="el" href="structrip__peer.html">rip_peer</a> *p1, struct <a class="el" href="structrip__peer.html">rip_peer</a> *p2)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__peer_8c.html#a96d11cf018938420003954ebdbaa5ae5">rip_peer_init</a> (void)</td></tr>
<tr><td colspan="2"><h2><a name="var-members"></a>
Variables</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structlist.html">list</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__peer_8c.html#a7c8a6b83d3aca60397b6eac3d8e5379b">peer_list</a></td></tr>
</table>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="a8950077f458e540a8b4292539e0120cf"></a><!-- doxytag: member="rip_peer.c::ONE_DAY_SECOND" ref="a8950077f458e540a8b4292539e0120cf" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ONE_DAY_SECOND&#160;&#160;&#160;60*60*24</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a762bcaaf64d0f21361ca5c0262b49f33"></a><!-- doxytag: member="rip_peer.c::ONE_WEEK_SECOND" ref="a762bcaaf64d0f21361ca5c0262b49f33" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ONE_WEEK_SECOND&#160;&#160;&#160;60*60*24*7</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="af695c89af81d0e2f11848303e97b5179"></a><!-- doxytag: member="rip_peer.c::RIP_UPTIME_LEN" ref="af695c89af81d0e2f11848303e97b5179" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define RIP_UPTIME_LEN&#160;&#160;&#160;25</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a295ee2311f834371d030633e9cc0b2f5"></a><!-- doxytag: member="rip_peer.c::rip_peer_bad_packet" ref="a295ee2311f834371d030633e9cc0b2f5" args="(struct sockaddr_in *from)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void rip_peer_bad_packet </td>
          <td>(</td>
          <td class="paramtype">struct sockaddr_in *&#160;</td>
          <td class="paramname"><em>from</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__peer_8c_source.html#l00136">136</a> of file <a class="el" href="rip__peer_8c_source.html">rip_peer.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structrip__peer.html">rip_peer</a> *<a class="code" href="structpeer.html">peer</a>;
  peer = <a class="code" href="rip__peer_8c.html#a61a352ef6814826be8b1e014bbe1512d">rip_peer_get</a> (&amp;from-&gt;sin_addr);
  peer-&gt;<a class="code" href="structrip__peer.html#a2800b23f5419e8e526d1c140e78791d3">recv_badpackets</a>++;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6a38f0b9d042a51ce833b0810eb97dc8"></a><!-- doxytag: member="rip_peer.c::rip_peer_bad_route" ref="a6a38f0b9d042a51ce833b0810eb97dc8" args="(struct sockaddr_in *from)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void rip_peer_bad_route </td>
          <td>(</td>
          <td class="paramtype">struct sockaddr_in *&#160;</td>
          <td class="paramname"><em>from</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__peer_8c_source.html#l00128">128</a> of file <a class="el" href="rip__peer_8c_source.html">rip_peer.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structrip__peer.html">rip_peer</a> *<a class="code" href="structpeer.html">peer</a>;
  peer = <a class="code" href="rip__peer_8c.html#a61a352ef6814826be8b1e014bbe1512d">rip_peer_get</a> (&amp;from-&gt;sin_addr);
  peer-&gt;<a class="code" href="structrip__peer.html#a148584a40c6d2634535eedd64171267e">recv_badroutes</a>++;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a02aaa1aaecb272b7e12d9bf99b7e690e"></a><!-- doxytag: member="rip_peer.c::rip_peer_display" ref="a02aaa1aaecb272b7e12d9bf99b7e690e" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void rip_peer_display </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__peer_8c_source.html#l00179">179</a> of file <a class="el" href="rip__peer_8c_source.html">rip_peer.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structrip__peer.html">rip_peer</a> *<a class="code" href="structpeer.html">peer</a>;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
<span class="preprocessor">#define RIP_UPTIME_LEN 25</span>
<span class="preprocessor"></span>  <span class="keywordtype">char</span> timebuf[<a class="code" href="rip__peer_8c.html#af695c89af81d0e2f11848303e97b5179">RIP_UPTIME_LEN</a>];

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (<a class="code" href="rip__peer_8c.html#a7c8a6b83d3aca60397b6eac3d8e5379b">peer_list</a>, node, nnode, peer))
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;    %-16s %9d %9d %9d   %s%s&quot;</span>, inet_ntoa (peer-&gt;<a class="code" href="structrip__peer.html#aaa4a7af473a85398fc8a86f296257cb8">addr</a>),
           peer-&gt;<a class="code" href="structrip__peer.html#a2800b23f5419e8e526d1c140e78791d3">recv_badpackets</a>, peer-&gt;<a class="code" href="structrip__peer.html#a148584a40c6d2634535eedd64171267e">recv_badroutes</a>,
           <a class="code" href="zebra_8h.html#a59b508b9cafa2524d610279687c68ed3">ZEBRA_RIP_DISTANCE_DEFAULT</a>,
           <a class="code" href="rip__peer_8c.html#a74b4e7d219fb8a2babd1accc1b10fc43">rip_peer_uptime</a> (peer, timebuf, RIP_UPTIME_LEN),
           <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae0ed9bd3b05b14c9156295d0b30efdbe"></a><!-- doxytag: member="rip_peer.c::rip_peer_free" ref="ae0ed9bd3b05b14c9156295d0b30efdbe" args="(struct rip_peer *peer)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void rip_peer_free </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structrip__peer.html">rip_peer</a> *&#160;</td>
          <td class="paramname"><em>peer</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__peer_8c_source.html#l00043">43</a> of file <a class="el" href="rip__peer_8c_source.html">rip_peer.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba638d723f300e6613a46848a62c847517">MTYPE_RIP_PEER</a>, peer);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a61a352ef6814826be8b1e014bbe1512d"></a><!-- doxytag: member="rip_peer.c::rip_peer_get" ref="a61a352ef6814826be8b1e014bbe1512d" args="(struct in_addr *addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static struct <a class="el" href="structrip__peer.html">rip_peer</a>* rip_peer_get </td>
          <td>(</td>
          <td class="paramtype">struct in_addr *&#160;</td>
          <td class="paramname"><em>addr</em></td><td>)</td>
          <td><code> [static, read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__peer_8c_source.html#l00091">91</a> of file <a class="el" href="rip__peer_8c_source.html">rip_peer.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structrip__peer.html">rip_peer</a> *<a class="code" href="structpeer.html">peer</a>;

  peer = <a class="code" href="rip__peer_8c.html#a6a60f44888b6b2d042baa2ae98d484d1">rip_peer_lookup</a> (<a class="code" href="structrip__peer.html#aaa4a7af473a85398fc8a86f296257cb8">addr</a>);

  <span class="keywordflow">if</span> (peer)
    {
      <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structrip__peer.html#aa0abf2d90366d8f036d2d8c83f792727">t_timeout</a>)
    <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (peer-&gt;<a class="code" href="structrip__peer.html#aa0abf2d90366d8f036d2d8c83f792727">t_timeout</a>);
    }
  <span class="keywordflow">else</span>
    {
      peer = <a class="code" href="rip__peer_8c.html#a54b1ffca083619363b6843591b14558f">rip_peer_new</a> ();
      peer-&gt;<a class="code" href="structrip__peer.html#aaa4a7af473a85398fc8a86f296257cb8">addr</a> = *<a class="code" href="structrip__peer.html#aaa4a7af473a85398fc8a86f296257cb8">addr</a>;
      <a class="code" href="linklist_8c.html#abfe4a1419e46dc9e1235dcbe6b52a022">listnode_add_sort</a> (<a class="code" href="rip__peer_8c.html#a7c8a6b83d3aca60397b6eac3d8e5379b">peer_list</a>, peer);
    }

  <span class="comment">/* Update timeout thread. */</span>
  peer-&gt;<a class="code" href="structrip__peer.html#aa0abf2d90366d8f036d2d8c83f792727">t_timeout</a> = <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="rip__peer_8c.html#ab4b2b4bf925bd3b0e121a70794760aaf">rip_peer_timeout</a>, peer,
                      <a class="code" href="ripd_8h.html#aa592c9b86bf5ca2f507bca11312089c1">RIP_PEER_TIMER_DEFAULT</a>);

  <span class="comment">/* Last update time set. */</span>
  time (&amp;peer-&gt;<a class="code" href="structrip__peer.html#a2fd7e9aab70a4ee49184485c02ea0b91">uptime</a>);
  
  <span class="keywordflow">return</span> peer;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a96d11cf018938420003954ebdbaa5ae5"></a><!-- doxytag: member="rip_peer.c::rip_peer_init" ref="a96d11cf018938420003954ebdbaa5ae5" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void rip_peer_init </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__peer_8c_source.html#l00203">203</a> of file <a class="el" href="rip__peer_8c_source.html">rip_peer.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="rip__peer_8c.html#a7c8a6b83d3aca60397b6eac3d8e5379b">peer_list</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
  <a class="code" href="rip__peer_8c.html#a7c8a6b83d3aca60397b6eac3d8e5379b">peer_list</a>-&gt;<a class="code" href="structlist.html#af19c9d07985ca8f95f0098bb0ef98f66">cmp</a> = (int (*)(<span class="keywordtype">void</span> *, <span class="keywordtype">void</span> *)) <a class="code" href="rip__peer_8c.html#a9e2d2f0b0ac62e0c4cd953515cfa7fc2">rip_peer_list_cmp</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9e2d2f0b0ac62e0c4cd953515cfa7fc2"></a><!-- doxytag: member="rip_peer.c::rip_peer_list_cmp" ref="a9e2d2f0b0ac62e0c4cd953515cfa7fc2" args="(struct rip_peer *p1, struct rip_peer *p2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int rip_peer_list_cmp </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structrip__peer.html">rip_peer</a> *&#160;</td>
          <td class="paramname"><em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structrip__peer.html">rip_peer</a> *&#160;</td>
          <td class="paramname"><em>p2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__peer_8c_source.html#l00197">197</a> of file <a class="el" href="rip__peer_8c_source.html">rip_peer.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> htonl (p1-&gt;<a class="code" href="structrip__peer.html#aaa4a7af473a85398fc8a86f296257cb8">addr</a>.s_addr) &gt; htonl (p2-&gt;<a class="code" href="structrip__peer.html#aaa4a7af473a85398fc8a86f296257cb8">addr</a>.s_addr);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6a60f44888b6b2d042baa2ae98d484d1"></a><!-- doxytag: member="rip_peer.c::rip_peer_lookup" ref="a6a60f44888b6b2d042baa2ae98d484d1" args="(struct in_addr *addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structrip__peer.html">rip_peer</a>* rip_peer_lookup </td>
          <td>(</td>
          <td class="paramtype">struct in_addr *&#160;</td>
          <td class="paramname"><em>addr</em></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__peer_8c_source.html#l00049">49</a> of file <a class="el" href="rip__peer_8c_source.html">rip_peer.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structrip__peer.html">rip_peer</a> *<a class="code" href="structpeer.html">peer</a>;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (<a class="code" href="rip__peer_8c.html#a7c8a6b83d3aca60397b6eac3d8e5379b">peer_list</a>, node, nnode, peer))
    {
      <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;peer-&gt;<a class="code" href="structrip__peer.html#aaa4a7af473a85398fc8a86f296257cb8">addr</a>, addr))
    <span class="keywordflow">return</span> peer;
    }
  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac3b4af26344576cb32789bf4163ea521"></a><!-- doxytag: member="rip_peer.c::rip_peer_lookup_next" ref="ac3b4af26344576cb32789bf4163ea521" args="(struct in_addr *addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structrip__peer.html">rip_peer</a>* rip_peer_lookup_next </td>
          <td>(</td>
          <td class="paramtype">struct in_addr *&#160;</td>
          <td class="paramname"><em>addr</em></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__peer_8c_source.html#l00063">63</a> of file <a class="el" href="rip__peer_8c_source.html">rip_peer.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structrip__peer.html">rip_peer</a> *<a class="code" href="structpeer.html">peer</a>;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (<a class="code" href="rip__peer_8c.html#a7c8a6b83d3aca60397b6eac3d8e5379b">peer_list</a>, node, nnode, peer))
    {
      <span class="keywordflow">if</span> (htonl (peer-&gt;<a class="code" href="structrip__peer.html#aaa4a7af473a85398fc8a86f296257cb8">addr</a>.s_addr) &gt; htonl (addr-&gt;s_addr))
    <span class="keywordflow">return</span> peer;
    }
  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a54b1ffca083619363b6843591b14558f"></a><!-- doxytag: member="rip_peer.c::rip_peer_new" ref="a54b1ffca083619363b6843591b14558f" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static struct <a class="el" href="structrip__peer.html">rip_peer</a>* rip_peer_new </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [static, read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__peer_8c_source.html#l00037">37</a> of file <a class="el" href="rip__peer_8c_source.html">rip_peer.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba638d723f300e6613a46848a62c847517">MTYPE_RIP_PEER</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structrip__peer.html">rip_peer</a>));
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab4b2b4bf925bd3b0e121a70794760aaf"></a><!-- doxytag: member="rip_peer.c::rip_peer_timeout" ref="ab4b2b4bf925bd3b0e121a70794760aaf" args="(struct thread *t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int rip_peer_timeout </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>t</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__peer_8c_source.html#l00078">78</a> of file <a class="el" href="rip__peer_8c_source.html">rip_peer.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structrip__peer.html">rip_peer</a> *<a class="code" href="structpeer.html">peer</a>;

  peer = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (t);
  <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (<a class="code" href="rip__peer_8c.html#a7c8a6b83d3aca60397b6eac3d8e5379b">peer_list</a>, peer);
  <a class="code" href="rip__peer_8c.html#ae0ed9bd3b05b14c9156295d0b30efdbe">rip_peer_free</a> (peer);

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa7cc288ea45c0c2961f86ee2aff648ad"></a><!-- doxytag: member="rip_peer.c::rip_peer_update" ref="aa7cc288ea45c0c2961f86ee2aff648ad" args="(struct sockaddr_in *from, u_char version)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void rip_peer_update </td>
          <td>(</td>
          <td class="paramtype">struct sockaddr_in *&#160;</td>
          <td class="paramname"><em>from</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_char&#160;</td>
          <td class="paramname"><em>version</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__peer_8c_source.html#l00120">120</a> of file <a class="el" href="rip__peer_8c_source.html">rip_peer.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structrip__peer.html">rip_peer</a> *<a class="code" href="structpeer.html">peer</a>;
  peer = <a class="code" href="rip__peer_8c.html#a61a352ef6814826be8b1e014bbe1512d">rip_peer_get</a> (&amp;from-&gt;sin_addr);
  peer-&gt;<a class="code" href="structrip__peer.html#a3a690912cd882368c5f25e788d903379">version</a> = <a class="code" href="isis__pdu_8h.html#ac477ee30f0ed8c0b09a6f3387287191f">version</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a74b4e7d219fb8a2babd1accc1b10fc43"></a><!-- doxytag: member="rip_peer.c::rip_peer_uptime" ref="a74b4e7d219fb8a2babd1accc1b10fc43" args="(struct rip_peer *peer, char *buf, size_t len)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static char* rip_peer_uptime </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structrip__peer.html">rip_peer</a> *&#160;</td>
          <td class="paramname"><em>peer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__peer_8c_source.html#l00145">145</a> of file <a class="el" href="rip__peer_8c_source.html">rip_peer.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  time_t <a class="code" href="structrip__peer.html#a2fd7e9aab70a4ee49184485c02ea0b91">uptime</a>;
  <span class="keyword">struct </span>tm *tm;

  <span class="comment">/* If there is no connection has been done before print `never&#39;. */</span>
  <span class="keywordflow">if</span> (peer-&gt;<a class="code" href="structrip__peer.html#a2fd7e9aab70a4ee49184485c02ea0b91">uptime</a> == 0)
    {
      <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a> (buf, len, <span class="stringliteral">&quot;never   &quot;</span>);
      <span class="keywordflow">return</span> buf;
    }

  <span class="comment">/* Get current time. */</span>
  uptime = time (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
  uptime -= peer-&gt;<a class="code" href="structrip__peer.html#a2fd7e9aab70a4ee49184485c02ea0b91">uptime</a>;
  tm = gmtime (&amp;uptime);

  <span class="comment">/* Making formatted timer strings. */</span>
<span class="preprocessor">#define ONE_DAY_SECOND 60*60*24</span>
<span class="preprocessor"></span><span class="preprocessor">#define ONE_WEEK_SECOND 60*60*24*7</span>
<span class="preprocessor"></span>
  <span class="keywordflow">if</span> (uptime &lt; ONE_DAY_SECOND)
    <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a> (buf, len, <span class="stringliteral">&quot;%02d:%02d:%02d&quot;</span>, 
          tm-&gt;tm_hour, tm-&gt;tm_min, tm-&gt;tm_sec);
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (uptime &lt; ONE_WEEK_SECOND)
    <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a> (buf, len, <span class="stringliteral">&quot;%dd%02dh%02dm&quot;</span>, 
          tm-&gt;tm_yday, tm-&gt;tm_hour, tm-&gt;tm_min);
  <span class="keywordflow">else</span>
    <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a> (buf, len, <span class="stringliteral">&quot;%02dw%dd%02dh&quot;</span>, 
          tm-&gt;tm_yday/7, tm-&gt;tm_yday - ((tm-&gt;tm_yday/7) * 7), tm-&gt;tm_hour);
  <span class="keywordflow">return</span> buf;
}
</pre></div>
</div>
</div>
<hr/><h2>Variable Documentation</h2>
<a class="anchor" id="a7c8a6b83d3aca60397b6eac3d8e5379b"></a><!-- doxytag: member="rip_peer.c::peer_list" ref="a7c8a6b83d3aca60397b6eac3d8e5379b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structlist.html">list</a>* <a class="el" href="ripng__peer_8c.html#a7c8a6b83d3aca60397b6eac3d8e5379b">peer_list</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__peer_8c_source.html#l00034">34</a> of file <a class="el" href="rip__peer_8c_source.html">rip_peer.c</a>.</p>

</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="rip__peer_8c.html">rip_peer.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:34 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
