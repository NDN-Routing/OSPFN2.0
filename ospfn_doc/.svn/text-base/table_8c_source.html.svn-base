<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: lib/table.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('table_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">lib/table.c</div>  </div>
</div>
<div class="contents">
<a href="table_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * Routing Table functions.</span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 1998 Kunihiro Ishiguro</span>
<a name="l00004"></a>00004 <span class="comment"> *</span>
<a name="l00005"></a>00005 <span class="comment"> * This file is part of GNU Zebra.</span>
<a name="l00006"></a>00006 <span class="comment"> *</span>
<a name="l00007"></a>00007 <span class="comment"> * GNU Zebra is free software; you can redistribute it and/or modify it</span>
<a name="l00008"></a>00008 <span class="comment"> * under the terms of the GNU General Public License as published by the</span>
<a name="l00009"></a>00009 <span class="comment"> * Free Software Foundation; either version 2, or (at your option) any</span>
<a name="l00010"></a>00010 <span class="comment"> * later version.</span>
<a name="l00011"></a>00011 <span class="comment"> *</span>
<a name="l00012"></a>00012 <span class="comment"> * GNU Zebra is distributed in the hope that it will be useful, but</span>
<a name="l00013"></a>00013 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00014"></a>00014 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00015"></a>00015 <span class="comment"> * General Public License for more details.</span>
<a name="l00016"></a>00016 <span class="comment"> *</span>
<a name="l00017"></a>00017 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00018"></a>00018 <span class="comment"> * along with GNU Zebra; see the file COPYING.  If not, write to the Free</span>
<a name="l00019"></a>00019 <span class="comment"> * Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA</span>
<a name="l00020"></a>00020 <span class="comment"> * 02111-1307, USA.  </span>
<a name="l00021"></a>00021 <span class="comment"> */</span>
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;<a class="code" href="zebra_8h.html">zebra.h</a>&gt;</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="prefix_8h.html">prefix.h</a>&quot;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="table_8h.html">table.h</a>&quot;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="memory_8h.html">memory.h</a>&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="sockunion_8h.html">sockunion.h</a>&quot;</span>
<a name="l00029"></a>00029 
<a name="l00030"></a>00030 <span class="keywordtype">void</span> <a class="code" href="table_8c.html#a0933ae9552aa67882a631fb2a1b05e47">route_node_delete</a> (<span class="keyword">struct</span> <a class="code" href="structroute__node.html">route_node</a> *);
<a name="l00031"></a>00031 <span class="keywordtype">void</span> <a class="code" href="table_8c.html#a310f7ef3d4cf29849e77c1d5f7c8923f">route_table_free</a> (<span class="keyword">struct</span> <a class="code" href="structroute__table.html">route_table</a> *);
<a name="l00032"></a>00032 
<a name="l00033"></a>00033 <span class="keyword">struct </span><a class="code" href="structroute__table.html">route_table</a> *
<a name="l00034"></a><a class="code" href="table_8h.html#a9b1d6d715d752d224b322da32d425046">00034</a> <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> (<span class="keywordtype">void</span>)
<a name="l00035"></a>00035 {
<a name="l00036"></a>00036   <span class="keyword">struct </span><a class="code" href="structroute__table.html">route_table</a> *rt;
<a name="l00037"></a>00037 
<a name="l00038"></a>00038   rt = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba27328f215d57f8800a0ec495235b1c01">MTYPE_ROUTE_TABLE</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structroute__table.html">route_table</a>));
<a name="l00039"></a>00039   <span class="keywordflow">return</span> rt;
<a name="l00040"></a>00040 }
<a name="l00041"></a>00041 
<a name="l00042"></a>00042 <span class="keywordtype">void</span>
<a name="l00043"></a><a class="code" href="table_8h.html#a6383b1d916d915ea483fc1f56d3c771e">00043</a> <a class="code" href="table_8c.html#adc5ff276f1698f5bef7bb74289e3b26e">route_table_finish</a> (<span class="keyword">struct</span> <a class="code" href="structroute__table.html">route_table</a> *rt)
<a name="l00044"></a>00044 {
<a name="l00045"></a>00045   <a class="code" href="table_8c.html#a310f7ef3d4cf29849e77c1d5f7c8923f">route_table_free</a> (rt);
<a name="l00046"></a>00046 }
<a name="l00047"></a>00047 
<a name="l00048"></a>00048 <span class="comment">/* Allocate new route node. */</span>
<a name="l00049"></a>00049 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *
<a name="l00050"></a><a class="code" href="table_8c.html#a5bb704e4b7e30da20bfbf6b145de825f">00050</a> <a class="code" href="table_8c.html#a5bb704e4b7e30da20bfbf6b145de825f">route_node_new</a> (<span class="keywordtype">void</span>)
<a name="l00051"></a>00051 {
<a name="l00052"></a>00052   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *node;
<a name="l00053"></a>00053   node = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba47bc1a6a73eab253cc6266eb240ec87d">MTYPE_ROUTE_NODE</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structroute__node.html">route_node</a>));
<a name="l00054"></a>00054   <span class="keywordflow">return</span> node;
<a name="l00055"></a>00055 }
<a name="l00056"></a>00056 
<a name="l00057"></a>00057 <span class="comment">/* Allocate new route node with prefix set. */</span>
<a name="l00058"></a>00058 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *
<a name="l00059"></a><a class="code" href="table_8c.html#a0e602434b44e97850cc140798589367e">00059</a> <a class="code" href="table_8c.html#a0e602434b44e97850cc140798589367e">route_node_set</a> (<span class="keyword">struct</span> <a class="code" href="structroute__table.html">route_table</a> *<a class="code" href="structroute__node.html#a60e9a40bdc38a0641581a0b400373f57">table</a>, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>)
<a name="l00060"></a>00060 {
<a name="l00061"></a>00061   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *node;
<a name="l00062"></a>00062   
<a name="l00063"></a>00063   node = <a class="code" href="table_8c.html#a5bb704e4b7e30da20bfbf6b145de825f">route_node_new</a> ();
<a name="l00064"></a>00064 
<a name="l00065"></a>00065   <a class="code" href="prefix_8c.html#abaad44d47b408d45484fdd729ab501b2">prefix_copy</a> (&amp;node-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>, prefix);
<a name="l00066"></a>00066   node-&gt;<a class="code" href="structroute__node.html#a60e9a40bdc38a0641581a0b400373f57">table</a> = <a class="code" href="structroute__node.html#a60e9a40bdc38a0641581a0b400373f57">table</a>;
<a name="l00067"></a>00067 
<a name="l00068"></a>00068   <span class="keywordflow">return</span> node;
<a name="l00069"></a>00069 }
<a name="l00070"></a>00070 
<a name="l00071"></a>00071 <span class="comment">/* Free route node. */</span>
<a name="l00072"></a>00072 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00073"></a><a class="code" href="table_8c.html#afdf2e14f7d6d18fa5f40c27d5cbcbea0">00073</a> <a class="code" href="table_8c.html#afdf2e14f7d6d18fa5f40c27d5cbcbea0">route_node_free</a> (<span class="keyword">struct</span> <a class="code" href="structroute__node.html">route_node</a> *node)
<a name="l00074"></a>00074 {
<a name="l00075"></a>00075   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba47bc1a6a73eab253cc6266eb240ec87d">MTYPE_ROUTE_NODE</a>, node);
<a name="l00076"></a>00076 }
<a name="l00077"></a>00077 
<a name="l00078"></a>00078 <span class="comment">/* Free route table. */</span>
<a name="l00079"></a>00079 <span class="keywordtype">void</span>
<a name="l00080"></a><a class="code" href="table_8c.html#a310f7ef3d4cf29849e77c1d5f7c8923f">00080</a> <a class="code" href="table_8c.html#a310f7ef3d4cf29849e77c1d5f7c8923f">route_table_free</a> (<span class="keyword">struct</span> <a class="code" href="structroute__table.html">route_table</a> *rt)
<a name="l00081"></a>00081 {
<a name="l00082"></a>00082   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *tmp_node;
<a name="l00083"></a>00083   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *node;
<a name="l00084"></a>00084  
<a name="l00085"></a>00085   <span class="keywordflow">if</span> (rt == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00086"></a>00086     <span class="keywordflow">return</span>;
<a name="l00087"></a>00087 
<a name="l00088"></a>00088   node = rt-&gt;<a class="code" href="structroute__table.html#a4d58458d9c18192cecaea1b98775f529">top</a>;
<a name="l00089"></a>00089 
<a name="l00090"></a>00090   <span class="keywordflow">while</span> (node)
<a name="l00091"></a>00091     {
<a name="l00092"></a>00092       <span class="keywordflow">if</span> (node-&gt;l_left)
<a name="l00093"></a>00093     {
<a name="l00094"></a>00094       node = node-&gt;l_left;
<a name="l00095"></a>00095       <span class="keywordflow">continue</span>;
<a name="l00096"></a>00096     }
<a name="l00097"></a>00097 
<a name="l00098"></a>00098       <span class="keywordflow">if</span> (node-&gt;l_right)
<a name="l00099"></a>00099     {
<a name="l00100"></a>00100       node = node-&gt;l_right;
<a name="l00101"></a>00101       <span class="keywordflow">continue</span>;
<a name="l00102"></a>00102     }
<a name="l00103"></a>00103 
<a name="l00104"></a>00104       tmp_node = node;
<a name="l00105"></a>00105       node = node-&gt;<a class="code" href="structroute__node.html#a9938f9e9ccef81c6c4cc9bc904667410">parent</a>;
<a name="l00106"></a>00106 
<a name="l00107"></a>00107       <span class="keywordflow">if</span> (node != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00108"></a>00108     {
<a name="l00109"></a>00109       <span class="keywordflow">if</span> (node-&gt;l_left == tmp_node)
<a name="l00110"></a>00110         node-&gt;l_left = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00111"></a>00111       <span class="keywordflow">else</span>
<a name="l00112"></a>00112         node-&gt;l_right = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00113"></a>00113 
<a name="l00114"></a>00114       <a class="code" href="table_8c.html#afdf2e14f7d6d18fa5f40c27d5cbcbea0">route_node_free</a> (tmp_node);
<a name="l00115"></a>00115     }
<a name="l00116"></a>00116       <span class="keywordflow">else</span>
<a name="l00117"></a>00117     {
<a name="l00118"></a>00118       <a class="code" href="table_8c.html#afdf2e14f7d6d18fa5f40c27d5cbcbea0">route_node_free</a> (tmp_node);
<a name="l00119"></a>00119       <span class="keywordflow">break</span>;
<a name="l00120"></a>00120     }
<a name="l00121"></a>00121     }
<a name="l00122"></a>00122  
<a name="l00123"></a>00123   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba27328f215d57f8800a0ec495235b1c01">MTYPE_ROUTE_TABLE</a>, rt);
<a name="l00124"></a>00124   <span class="keywordflow">return</span>;
<a name="l00125"></a>00125 }
<a name="l00126"></a>00126 
<a name="l00127"></a>00127 <span class="comment">/* Utility mask array. */</span>
<a name="l00128"></a><a class="code" href="table_8c.html#a675cc05c7391c1cd5e88ed25175ad5e1">00128</a> <span class="keyword">static</span> <span class="keyword">const</span> u_char <a class="code" href="table_8c.html#a675cc05c7391c1cd5e88ed25175ad5e1">maskbit</a>[] =
<a name="l00129"></a>00129 {
<a name="l00130"></a>00130   0x00, 0x80, 0xc0, 0xe0, 0xf0, 0xf8, 0xfc, 0xfe, 0xff
<a name="l00131"></a>00131 };
<a name="l00132"></a>00132 
<a name="l00133"></a>00133 <span class="comment">/* Common prefix route genaration. */</span>
<a name="l00134"></a>00134 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00135"></a><a class="code" href="table_8c.html#aef5fb0e60492d045995adc87a88d45b1">00135</a> <a class="code" href="table_8c.html#aef5fb0e60492d045995adc87a88d45b1">route_common</a> (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<span class="keyword">new</span>)
<a name="l00136"></a>00136 {
<a name="l00137"></a>00137   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l00138"></a>00138   u_char diff;
<a name="l00139"></a>00139   u_char mask;
<a name="l00140"></a>00140 
<a name="l00141"></a>00141   u_char *<a class="code" href="spgrid_8c.html#a928495140935d9d6ce0a100550473140">np</a> = (u_char *)&amp;n-&gt;u.<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>;
<a name="l00142"></a>00142   u_char *pp = (u_char *)&amp;p-&gt;u.<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>;
<a name="l00143"></a>00143   u_char *newp = (u_char *)&amp;new-&gt;u.prefix;
<a name="l00144"></a>00144 
<a name="l00145"></a>00145   for (i = 0; i &lt; p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> / 8; i++)
<a name="l00146"></a>00146     {
<a name="l00147"></a>00147       <span class="keywordflow">if</span> (np[i] == pp[i])
<a name="l00148"></a>00148     newp[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] = np[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>];
<a name="l00149"></a>00149       <span class="keywordflow">else</span>
<a name="l00150"></a>00150     <span class="keywordflow">break</span>;
<a name="l00151"></a>00151     }
<a name="l00152"></a>00152 
<a name="l00153"></a>00153   <span class="keyword">new</span>-&gt;prefixlen = i * 8;
<a name="l00154"></a>00154 
<a name="l00155"></a>00155   <span class="keywordflow">if</span> (new-&gt;prefixlen != p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>)
<a name="l00156"></a>00156     {
<a name="l00157"></a>00157       diff = np[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] ^ pp[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>];
<a name="l00158"></a>00158       mask = 0x80;
<a name="l00159"></a>00159       <span class="keywordflow">while</span> (new-&gt;prefixlen &lt; p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> &amp;&amp; !(mask &amp; diff))
<a name="l00160"></a>00160     {
<a name="l00161"></a>00161       mask &gt;&gt;= 1;
<a name="l00162"></a>00162       <span class="keyword">new</span>-&gt;prefixlen++;
<a name="l00163"></a>00163     }
<a name="l00164"></a>00164       newp[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] = np[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] &amp; <a class="code" href="table_8c.html#a675cc05c7391c1cd5e88ed25175ad5e1">maskbit</a>[<span class="keyword">new</span>-&gt;prefixlen % 8];
<a name="l00165"></a>00165     }
<a name="l00166"></a>00166 }
<a name="l00167"></a>00167 
<a name="l00168"></a>00168 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00169"></a><a class="code" href="table_8c.html#a0bc2912a0ad74345eba15f46f7a94329">00169</a> <a class="code" href="table_8c.html#a0bc2912a0ad74345eba15f46f7a94329">set_link</a> (<span class="keyword">struct</span> <a class="code" href="structroute__node.html">route_node</a> *node, <span class="keyword">struct</span> <a class="code" href="structroute__node.html">route_node</a> *<span class="keyword">new</span>)
<a name="l00170"></a>00170 {
<a name="l00171"></a>00171   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> bit = <a class="code" href="prefix_8h.html#a448f1ebdeae472533f8faafd675e8f0b">prefix_bit</a> (&amp;new-&gt;p.u.prefix, node-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
<a name="l00172"></a>00172 
<a name="l00173"></a>00173   node-&gt;<a class="code" href="structroute__node.html#a6416caa9a71f122b759c0a8d79dfb72e">link</a>[bit] = <span class="keyword">new</span>;
<a name="l00174"></a>00174   <span class="keyword">new</span>-&gt;<a class="code" href="structroute__node.html#a9938f9e9ccef81c6c4cc9bc904667410">parent</a> = node;
<a name="l00175"></a>00175 }
<a name="l00176"></a>00176 
<a name="l00177"></a>00177 <span class="comment">/* Lock node. */</span>
<a name="l00178"></a>00178 <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *
<a name="l00179"></a><a class="code" href="table_8h.html#a5f018f727fe43d17553baabbf7fa6498">00179</a> <a class="code" href="table_8c.html#a5f018f727fe43d17553baabbf7fa6498">route_lock_node</a> (<span class="keyword">struct</span> <a class="code" href="structroute__node.html">route_node</a> *node)
<a name="l00180"></a>00180 {
<a name="l00181"></a>00181   node-&gt;<a class="code" href="structroute__node.html#afaa6884fa913679b7079c24831648a9f">lock</a>++;
<a name="l00182"></a>00182   <span class="keywordflow">return</span> node;
<a name="l00183"></a>00183 }
<a name="l00184"></a>00184 
<a name="l00185"></a>00185 <span class="comment">/* Unlock node. */</span>
<a name="l00186"></a>00186 <span class="keywordtype">void</span>
<a name="l00187"></a><a class="code" href="table_8h.html#a849965644708e01ef49c203a2e00afd4">00187</a> <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (<span class="keyword">struct</span> <a class="code" href="structroute__node.html">route_node</a> *node)
<a name="l00188"></a>00188 {
<a name="l00189"></a>00189   node-&gt;<a class="code" href="structroute__node.html#afaa6884fa913679b7079c24831648a9f">lock</a>--;
<a name="l00190"></a>00190 
<a name="l00191"></a>00191   <span class="keywordflow">if</span> (node-&gt;<a class="code" href="structroute__node.html#afaa6884fa913679b7079c24831648a9f">lock</a> == 0)
<a name="l00192"></a>00192     <a class="code" href="table_8c.html#a0933ae9552aa67882a631fb2a1b05e47">route_node_delete</a> (node);
<a name="l00193"></a>00193 }
<a name="l00194"></a>00194 
<a name="l00195"></a>00195 <span class="comment">/* Find matched prefix. */</span>
<a name="l00196"></a>00196 <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *
<a name="l00197"></a><a class="code" href="table_8h.html#ab8da0d0c16d4016c2100773fba3a9d96">00197</a> <a class="code" href="table_8c.html#a948f4335026cd8417c7424e85156ae55">route_node_match</a> (<span class="keyword">const</span> <span class="keyword">struct</span> <a class="code" href="structroute__table.html">route_table</a> *<a class="code" href="structroute__node.html#a60e9a40bdc38a0641581a0b400373f57">table</a>, <span class="keyword">const</span> <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>)
<a name="l00198"></a>00198 {
<a name="l00199"></a>00199   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *node;
<a name="l00200"></a>00200   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *matched;
<a name="l00201"></a>00201 
<a name="l00202"></a>00202   matched = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00203"></a>00203   node = table-&gt;<a class="code" href="structroute__table.html#a4d58458d9c18192cecaea1b98775f529">top</a>;
<a name="l00204"></a>00204 
<a name="l00205"></a>00205   <span class="comment">/* Walk down tree.  If there is matched route then store it to</span>
<a name="l00206"></a>00206 <span class="comment">     matched. */</span>
<a name="l00207"></a>00207   <span class="keywordflow">while</span> (node &amp;&amp; node-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> &lt;= p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> &amp;&amp; 
<a name="l00208"></a>00208      <a class="code" href="prefix_8c.html#a8c5d68665a4b036a361330bee254318e">prefix_match</a> (&amp;node-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>, p))
<a name="l00209"></a>00209     {
<a name="l00210"></a>00210       <span class="keywordflow">if</span> (node-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
<a name="l00211"></a>00211     matched = node;
<a name="l00212"></a>00212       node = node-&gt;<a class="code" href="structroute__node.html#a6416caa9a71f122b759c0a8d79dfb72e">link</a>[<a class="code" href="prefix_8h.html#a448f1ebdeae472533f8faafd675e8f0b">prefix_bit</a>(&amp;p-&gt;u.<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>, node-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>)];
<a name="l00213"></a>00213     }
<a name="l00214"></a>00214 
<a name="l00215"></a>00215   <span class="comment">/* If matched route found, return it. */</span>
<a name="l00216"></a>00216   <span class="keywordflow">if</span> (matched)
<a name="l00217"></a>00217     <span class="keywordflow">return</span> <a class="code" href="table_8c.html#a5f018f727fe43d17553baabbf7fa6498">route_lock_node</a> (matched);
<a name="l00218"></a>00218 
<a name="l00219"></a>00219   <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00220"></a>00220 }
<a name="l00221"></a>00221 
<a name="l00222"></a>00222 <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *
<a name="l00223"></a><a class="code" href="table_8h.html#ad3df9e5a54fa9de79b0709130efd21c3">00223</a> <a class="code" href="table_8c.html#a9c0fd90aeeed01fb5b5301c98f642a95">route_node_match_ipv4</a> (<span class="keyword">const</span> <span class="keyword">struct</span> <a class="code" href="structroute__table.html">route_table</a> *<a class="code" href="structroute__node.html#a60e9a40bdc38a0641581a0b400373f57">table</a>,
<a name="l00224"></a>00224                <span class="keyword">const</span> <span class="keyword">struct</span> in_addr *addr)
<a name="l00225"></a>00225 {
<a name="l00226"></a>00226   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> p;
<a name="l00227"></a>00227 
<a name="l00228"></a>00228   memset (&amp;p, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a>));
<a name="l00229"></a>00229   p.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
<a name="l00230"></a>00230   p.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = <a class="code" href="prefix_8h.html#ab98d836bf20a06de7a7358ab17832002">IPV4_MAX_PREFIXLEN</a>;
<a name="l00231"></a>00231   p.prefix = *addr;
<a name="l00232"></a>00232 
<a name="l00233"></a>00233   <span class="keywordflow">return</span> <a class="code" href="table_8c.html#a948f4335026cd8417c7424e85156ae55">route_node_match</a> (table, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;p);
<a name="l00234"></a>00234 }
<a name="l00235"></a>00235 
<a name="l00236"></a>00236 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00237"></a>00237 <span class="preprocessor"></span><span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *
<a name="l00238"></a>00238 route_node_match_ipv6 (<span class="keyword">const</span> <span class="keyword">struct</span> <a class="code" href="structroute__table.html">route_table</a> *<a class="code" href="structroute__node.html#a60e9a40bdc38a0641581a0b400373f57">table</a>,
<a name="l00239"></a>00239                <span class="keyword">const</span> <span class="keyword">struct</span> in6_addr *addr)
<a name="l00240"></a>00240 {
<a name="l00241"></a>00241   <span class="keyword">struct </span>prefix_ipv6 <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
<a name="l00242"></a>00242 
<a name="l00243"></a>00243   memset (&amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> prefix_ipv6));
<a name="l00244"></a>00244   <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.family = AF_INET6;
<a name="l00245"></a>00245   <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen = <a class="code" href="prefix_8h.html#af240d7cd80eb12fc2e7e73a36e506131">IPV6_MAX_PREFIXLEN</a>;
<a name="l00246"></a>00246   <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix = *addr;
<a name="l00247"></a>00247 
<a name="l00248"></a>00248   <span class="keywordflow">return</span> <a class="code" href="table_8c.html#a948f4335026cd8417c7424e85156ae55">route_node_match</a> (table, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>);
<a name="l00249"></a>00249 }
<a name="l00250"></a>00250 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l00251"></a>00251 
<a name="l00252"></a>00252 <span class="comment">/* Lookup same prefix node.  Return NULL when we can&#39;t find route. */</span>
<a name="l00253"></a>00253 <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *
<a name="l00254"></a><a class="code" href="table_8h.html#a8046e2829abae9d0a2f15bb37be5f8c8">00254</a> <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (<span class="keyword">struct</span> <a class="code" href="structroute__table.html">route_table</a> *table, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>)
<a name="l00255"></a>00255 {
<a name="l00256"></a>00256   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *node;
<a name="l00257"></a>00257 
<a name="l00258"></a>00258   node = table-&gt;<a class="code" href="structroute__table.html#a4d58458d9c18192cecaea1b98775f529">top</a>;
<a name="l00259"></a>00259 
<a name="l00260"></a>00260   <span class="keywordflow">while</span> (node &amp;&amp; node-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> &lt;= p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> &amp;&amp; 
<a name="l00261"></a>00261      <a class="code" href="prefix_8c.html#a8c5d68665a4b036a361330bee254318e">prefix_match</a> (&amp;node-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>, p))
<a name="l00262"></a>00262     {
<a name="l00263"></a>00263       <span class="keywordflow">if</span> (node-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> == p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> &amp;&amp; node-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
<a name="l00264"></a>00264     <span class="keywordflow">return</span> <a class="code" href="table_8c.html#a5f018f727fe43d17553baabbf7fa6498">route_lock_node</a> (node);
<a name="l00265"></a>00265 
<a name="l00266"></a>00266       node = node-&gt;<a class="code" href="structroute__node.html#a6416caa9a71f122b759c0a8d79dfb72e">link</a>[<a class="code" href="prefix_8h.html#a448f1ebdeae472533f8faafd675e8f0b">prefix_bit</a>(&amp;p-&gt;u.<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>, node-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>)];
<a name="l00267"></a>00267     }
<a name="l00268"></a>00268 
<a name="l00269"></a>00269   <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00270"></a>00270 }
<a name="l00271"></a>00271 
<a name="l00272"></a>00272 <span class="comment">/* Add node to routing table. */</span>
<a name="l00273"></a>00273 <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *
<a name="l00274"></a><a class="code" href="table_8h.html#a0a681d994bbadc3a382dc5296b355900">00274</a> <a class="code" href="table_8c.html#ac91fdff1a0b8dc3d60ebaf152caa0f80">route_node_get</a> (<span class="keyword">struct</span> <a class="code" href="structroute__table.html">route_table</a> *table, <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>)
<a name="l00275"></a>00275 {
<a name="l00276"></a>00276   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *<span class="keyword">new</span>;
<a name="l00277"></a>00277   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *node;
<a name="l00278"></a>00278   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *match;
<a name="l00279"></a>00279 
<a name="l00280"></a>00280   match = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00281"></a>00281   node = table-&gt;<a class="code" href="structroute__table.html#a4d58458d9c18192cecaea1b98775f529">top</a>;
<a name="l00282"></a>00282   <span class="keywordflow">while</span> (node &amp;&amp; node-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> &lt;= p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> &amp;&amp; 
<a name="l00283"></a>00283      <a class="code" href="prefix_8c.html#a8c5d68665a4b036a361330bee254318e">prefix_match</a> (&amp;node-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>, p))
<a name="l00284"></a>00284     {
<a name="l00285"></a>00285       <span class="keywordflow">if</span> (node-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> == p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>)
<a name="l00286"></a>00286     {
<a name="l00287"></a>00287       <a class="code" href="table_8c.html#a5f018f727fe43d17553baabbf7fa6498">route_lock_node</a> (node);
<a name="l00288"></a>00288       <span class="keywordflow">return</span> node;
<a name="l00289"></a>00289     }
<a name="l00290"></a>00290       match = node;
<a name="l00291"></a>00291       node = node-&gt;<a class="code" href="structroute__node.html#a6416caa9a71f122b759c0a8d79dfb72e">link</a>[<a class="code" href="prefix_8h.html#a448f1ebdeae472533f8faafd675e8f0b">prefix_bit</a>(&amp;p-&gt;u.<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>, node-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>)];
<a name="l00292"></a>00292     }
<a name="l00293"></a>00293 
<a name="l00294"></a>00294   <span class="keywordflow">if</span> (node == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00295"></a>00295     {
<a name="l00296"></a>00296       <span class="keyword">new</span> = <a class="code" href="table_8c.html#a0e602434b44e97850cc140798589367e">route_node_set</a> (table, p);
<a name="l00297"></a>00297       <span class="keywordflow">if</span> (match)
<a name="l00298"></a>00298     <a class="code" href="table_8c.html#a0bc2912a0ad74345eba15f46f7a94329">set_link</a> (match, <span class="keyword">new</span>);
<a name="l00299"></a>00299       <span class="keywordflow">else</span>
<a name="l00300"></a>00300     table-&gt;<a class="code" href="structroute__table.html#a4d58458d9c18192cecaea1b98775f529">top</a> = <span class="keyword">new</span>;
<a name="l00301"></a>00301     }
<a name="l00302"></a>00302   <span class="keywordflow">else</span>
<a name="l00303"></a>00303     {
<a name="l00304"></a>00304       <span class="keyword">new</span> = <a class="code" href="table_8c.html#a5bb704e4b7e30da20bfbf6b145de825f">route_node_new</a> ();
<a name="l00305"></a>00305       <a class="code" href="table_8c.html#aef5fb0e60492d045995adc87a88d45b1">route_common</a> (&amp;node-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>, p, &amp;new-&gt;p);
<a name="l00306"></a>00306       <span class="keyword">new</span>-&gt;p.family = p-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a>;
<a name="l00307"></a>00307       <span class="keyword">new</span>-&gt;table = <a class="code" href="structroute__node.html#a60e9a40bdc38a0641581a0b400373f57">table</a>;
<a name="l00308"></a>00308       <a class="code" href="table_8c.html#a0bc2912a0ad74345eba15f46f7a94329">set_link</a> (<span class="keyword">new</span>, node);
<a name="l00309"></a>00309 
<a name="l00310"></a>00310       <span class="keywordflow">if</span> (match)
<a name="l00311"></a>00311     <a class="code" href="table_8c.html#a0bc2912a0ad74345eba15f46f7a94329">set_link</a> (match, <span class="keyword">new</span>);
<a name="l00312"></a>00312       <span class="keywordflow">else</span>
<a name="l00313"></a>00313     table-&gt;<a class="code" href="structroute__table.html#a4d58458d9c18192cecaea1b98775f529">top</a> = <span class="keyword">new</span>;
<a name="l00314"></a>00314 
<a name="l00315"></a>00315       <span class="keywordflow">if</span> (new-&gt;p.prefixlen != p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>)
<a name="l00316"></a>00316     {
<a name="l00317"></a>00317       match = <span class="keyword">new</span>;
<a name="l00318"></a>00318       <span class="keyword">new</span> = <a class="code" href="table_8c.html#a0e602434b44e97850cc140798589367e">route_node_set</a> (table, p);
<a name="l00319"></a>00319       <a class="code" href="table_8c.html#a0bc2912a0ad74345eba15f46f7a94329">set_link</a> (match, <span class="keyword">new</span>);
<a name="l00320"></a>00320     }
<a name="l00321"></a>00321     }
<a name="l00322"></a>00322   <a class="code" href="table_8c.html#a5f018f727fe43d17553baabbf7fa6498">route_lock_node</a> (<span class="keyword">new</span>);
<a name="l00323"></a>00323   
<a name="l00324"></a>00324   <span class="keywordflow">return</span> <span class="keyword">new</span>;
<a name="l00325"></a>00325 }
<a name="l00326"></a>00326 
<a name="l00327"></a>00327 <span class="comment">/* Delete node from the routing table. */</span>
<a name="l00328"></a>00328 <span class="keywordtype">void</span>
<a name="l00329"></a><a class="code" href="table_8h.html#acf67c2ba6e3c8e10dbfeb4a1d3f680af">00329</a> <a class="code" href="table_8c.html#a0933ae9552aa67882a631fb2a1b05e47">route_node_delete</a> (<span class="keyword">struct</span> <a class="code" href="structroute__node.html">route_node</a> *node)
<a name="l00330"></a>00330 {
<a name="l00331"></a>00331   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *child;
<a name="l00332"></a>00332   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *<a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>;
<a name="l00333"></a>00333 
<a name="l00334"></a>00334   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (node-&gt;<a class="code" href="structroute__node.html#afaa6884fa913679b7079c24831648a9f">lock</a> == 0);
<a name="l00335"></a>00335   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (node-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l00336"></a>00336 
<a name="l00337"></a>00337   <span class="keywordflow">if</span> (node-&gt;l_left &amp;&amp; node-&gt;l_right)
<a name="l00338"></a>00338     <span class="keywordflow">return</span>;
<a name="l00339"></a>00339 
<a name="l00340"></a>00340   <span class="keywordflow">if</span> (node-&gt;l_left)
<a name="l00341"></a>00341     child = node-&gt;l_left;
<a name="l00342"></a>00342   <span class="keywordflow">else</span>
<a name="l00343"></a>00343     child = node-&gt;l_right;
<a name="l00344"></a>00344 
<a name="l00345"></a>00345   parent = node-&gt;<a class="code" href="structroute__node.html#a9938f9e9ccef81c6c4cc9bc904667410">parent</a>;
<a name="l00346"></a>00346 
<a name="l00347"></a>00347   <span class="keywordflow">if</span> (child)
<a name="l00348"></a>00348     child-&gt;<a class="code" href="structroute__node.html#a9938f9e9ccef81c6c4cc9bc904667410">parent</a> = <a class="code" href="dict_8c.html#a9d4418feaea5490d8afb9c25c34fba4d">parent</a>;
<a name="l00349"></a>00349 
<a name="l00350"></a>00350   <span class="keywordflow">if</span> (parent)
<a name="l00351"></a>00351     {
<a name="l00352"></a>00352       <span class="keywordflow">if</span> (parent-&gt;l_left == node)
<a name="l00353"></a>00353     parent-&gt;l_left = child;
<a name="l00354"></a>00354       <span class="keywordflow">else</span>
<a name="l00355"></a>00355     parent-&gt;l_right = child;
<a name="l00356"></a>00356     }
<a name="l00357"></a>00357   <span class="keywordflow">else</span>
<a name="l00358"></a>00358     node-&gt;<a class="code" href="structroute__node.html#a60e9a40bdc38a0641581a0b400373f57">table</a>-&gt;<a class="code" href="structroute__table.html#a4d58458d9c18192cecaea1b98775f529">top</a> = child;
<a name="l00359"></a>00359 
<a name="l00360"></a>00360   <a class="code" href="table_8c.html#afdf2e14f7d6d18fa5f40c27d5cbcbea0">route_node_free</a> (node);
<a name="l00361"></a>00361 
<a name="l00362"></a>00362   <span class="comment">/* If parent node is stub then delete it also. */</span>
<a name="l00363"></a>00363   <span class="keywordflow">if</span> (parent &amp;&amp; parent-&gt;<a class="code" href="structroute__node.html#afaa6884fa913679b7079c24831648a9f">lock</a> == 0)
<a name="l00364"></a>00364     <a class="code" href="table_8c.html#a0933ae9552aa67882a631fb2a1b05e47">route_node_delete</a> (parent);
<a name="l00365"></a>00365 }
<a name="l00366"></a>00366 
<a name="l00367"></a>00367 <span class="comment">/* Get fist node and lock it.  This function is useful when one want</span>
<a name="l00368"></a>00368 <span class="comment">   to lookup all the node exist in the routing table. */</span>
<a name="l00369"></a>00369 <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *
<a name="l00370"></a><a class="code" href="table_8h.html#ab21928ccae1cc7f082443a11d4b80df8">00370</a> <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (<span class="keyword">struct</span> <a class="code" href="structroute__table.html">route_table</a> *table)
<a name="l00371"></a>00371 {
<a name="l00372"></a>00372   <span class="comment">/* If there is no node in the routing table return NULL. */</span>
<a name="l00373"></a>00373   <span class="keywordflow">if</span> (table-&gt;<a class="code" href="structroute__table.html#a4d58458d9c18192cecaea1b98775f529">top</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00374"></a>00374     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00375"></a>00375 
<a name="l00376"></a>00376   <span class="comment">/* Lock the top node and return it. */</span>
<a name="l00377"></a>00377   <a class="code" href="table_8c.html#a5f018f727fe43d17553baabbf7fa6498">route_lock_node</a> (table-&gt;<a class="code" href="structroute__table.html#a4d58458d9c18192cecaea1b98775f529">top</a>);
<a name="l00378"></a>00378   <span class="keywordflow">return</span> table-&gt;<a class="code" href="structroute__table.html#a4d58458d9c18192cecaea1b98775f529">top</a>;
<a name="l00379"></a>00379 }
<a name="l00380"></a>00380 
<a name="l00381"></a>00381 <span class="comment">/* Unlock current node and lock next node then return it. */</span>
<a name="l00382"></a>00382 <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *
<a name="l00383"></a><a class="code" href="table_8h.html#a0eda343baccf4409cfce20ef5f196b58">00383</a> <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (<span class="keyword">struct</span> <a class="code" href="structroute__node.html">route_node</a> *node)
<a name="l00384"></a>00384 {
<a name="l00385"></a>00385   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *next;
<a name="l00386"></a>00386   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *start;
<a name="l00387"></a>00387 
<a name="l00388"></a>00388   <span class="comment">/* Node may be deleted from route_unlock_node so we have to preserve</span>
<a name="l00389"></a>00389 <span class="comment">     next node&#39;s pointer. */</span>
<a name="l00390"></a>00390 
<a name="l00391"></a>00391   <span class="keywordflow">if</span> (node-&gt;l_left)
<a name="l00392"></a>00392     {
<a name="l00393"></a>00393       next = node-&gt;l_left;
<a name="l00394"></a>00394       <a class="code" href="table_8c.html#a5f018f727fe43d17553baabbf7fa6498">route_lock_node</a> (next);
<a name="l00395"></a>00395       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (node);
<a name="l00396"></a>00396       <span class="keywordflow">return</span> next;
<a name="l00397"></a>00397     }
<a name="l00398"></a>00398   <span class="keywordflow">if</span> (node-&gt;l_right)
<a name="l00399"></a>00399     {
<a name="l00400"></a>00400       next = node-&gt;l_right;
<a name="l00401"></a>00401       <a class="code" href="table_8c.html#a5f018f727fe43d17553baabbf7fa6498">route_lock_node</a> (next);
<a name="l00402"></a>00402       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (node);
<a name="l00403"></a>00403       <span class="keywordflow">return</span> next;
<a name="l00404"></a>00404     }
<a name="l00405"></a>00405 
<a name="l00406"></a>00406   start = node;
<a name="l00407"></a>00407   <span class="keywordflow">while</span> (node-&gt;<a class="code" href="structroute__node.html#a9938f9e9ccef81c6c4cc9bc904667410">parent</a>)
<a name="l00408"></a>00408     {
<a name="l00409"></a>00409       <span class="keywordflow">if</span> (node-&gt;<a class="code" href="structroute__node.html#a9938f9e9ccef81c6c4cc9bc904667410">parent</a>-&gt;l_left == node &amp;&amp; node-&gt;<a class="code" href="structroute__node.html#a9938f9e9ccef81c6c4cc9bc904667410">parent</a>-&gt;l_right)
<a name="l00410"></a>00410     {
<a name="l00411"></a>00411       next = node-&gt;<a class="code" href="structroute__node.html#a9938f9e9ccef81c6c4cc9bc904667410">parent</a>-&gt;l_right;
<a name="l00412"></a>00412       <a class="code" href="table_8c.html#a5f018f727fe43d17553baabbf7fa6498">route_lock_node</a> (next);
<a name="l00413"></a>00413       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (start);
<a name="l00414"></a>00414       <span class="keywordflow">return</span> next;
<a name="l00415"></a>00415     }
<a name="l00416"></a>00416       node = node-&gt;<a class="code" href="structroute__node.html#a9938f9e9ccef81c6c4cc9bc904667410">parent</a>;
<a name="l00417"></a>00417     }
<a name="l00418"></a>00418   <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (start);
<a name="l00419"></a>00419   <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00420"></a>00420 }
<a name="l00421"></a>00421 
<a name="l00422"></a>00422 <span class="comment">/* Unlock current node and lock next node until limit. */</span>
<a name="l00423"></a>00423 <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *
<a name="l00424"></a><a class="code" href="table_8h.html#ac524e1e907c5d064d963b0a88dabdc90">00424</a> <a class="code" href="table_8c.html#a6e721d0f3408d58f0276b58d16412979">route_next_until</a> (<span class="keyword">struct</span> <a class="code" href="structroute__node.html">route_node</a> *node, <span class="keyword">struct</span> <a class="code" href="structroute__node.html">route_node</a> *limit)
<a name="l00425"></a>00425 {
<a name="l00426"></a>00426   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *next;
<a name="l00427"></a>00427   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *start;
<a name="l00428"></a>00428 
<a name="l00429"></a>00429   <span class="comment">/* Node may be deleted from route_unlock_node so we have to preserve</span>
<a name="l00430"></a>00430 <span class="comment">     next node&#39;s pointer. */</span>
<a name="l00431"></a>00431 
<a name="l00432"></a>00432   <span class="keywordflow">if</span> (node-&gt;l_left)
<a name="l00433"></a>00433     {
<a name="l00434"></a>00434       next = node-&gt;l_left;
<a name="l00435"></a>00435       <a class="code" href="table_8c.html#a5f018f727fe43d17553baabbf7fa6498">route_lock_node</a> (next);
<a name="l00436"></a>00436       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (node);
<a name="l00437"></a>00437       <span class="keywordflow">return</span> next;
<a name="l00438"></a>00438     }
<a name="l00439"></a>00439   <span class="keywordflow">if</span> (node-&gt;l_right)
<a name="l00440"></a>00440     {
<a name="l00441"></a>00441       next = node-&gt;l_right;
<a name="l00442"></a>00442       <a class="code" href="table_8c.html#a5f018f727fe43d17553baabbf7fa6498">route_lock_node</a> (next);
<a name="l00443"></a>00443       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (node);
<a name="l00444"></a>00444       <span class="keywordflow">return</span> next;
<a name="l00445"></a>00445     }
<a name="l00446"></a>00446 
<a name="l00447"></a>00447   start = node;
<a name="l00448"></a>00448   <span class="keywordflow">while</span> (node-&gt;<a class="code" href="structroute__node.html#a9938f9e9ccef81c6c4cc9bc904667410">parent</a> &amp;&amp; node != limit)
<a name="l00449"></a>00449     {
<a name="l00450"></a>00450       <span class="keywordflow">if</span> (node-&gt;<a class="code" href="structroute__node.html#a9938f9e9ccef81c6c4cc9bc904667410">parent</a>-&gt;l_left == node &amp;&amp; node-&gt;<a class="code" href="structroute__node.html#a9938f9e9ccef81c6c4cc9bc904667410">parent</a>-&gt;l_right)
<a name="l00451"></a>00451     {
<a name="l00452"></a>00452       next = node-&gt;<a class="code" href="structroute__node.html#a9938f9e9ccef81c6c4cc9bc904667410">parent</a>-&gt;l_right;
<a name="l00453"></a>00453       <a class="code" href="table_8c.html#a5f018f727fe43d17553baabbf7fa6498">route_lock_node</a> (next);
<a name="l00454"></a>00454       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (start);
<a name="l00455"></a>00455       <span class="keywordflow">return</span> next;
<a name="l00456"></a>00456     }
<a name="l00457"></a>00457       node = node-&gt;<a class="code" href="structroute__node.html#a9938f9e9ccef81c6c4cc9bc904667410">parent</a>;
<a name="l00458"></a>00458     }
<a name="l00459"></a>00459   <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (start);
<a name="l00460"></a>00460   <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00461"></a>00461 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="table_8c.html">table.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:06 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
