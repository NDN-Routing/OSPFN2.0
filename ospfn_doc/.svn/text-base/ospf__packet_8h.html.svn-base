<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: ospfd/ospf_packet.h File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('ospf__packet_8h.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Defines</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">ospfd/ospf_packet.h File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><img src="ospf__packet_8h__dep__incl.png" border="0" usemap="#ospfd_2ospf__packet_8hdep" alt=""/></div>
<map name="ospfd_2ospf__packet_8hdep" id="ospfd_2ospf__packet_8hdep">
<area shape="rect" id="node3" href="ospf__dump_8c.html" title="ospfd/ospf_dump.c" alt="" coords="156,155,295,181"/><area shape="rect" id="node5" href="ospf__flood_8c.html" title="ospfd/ospf_flood.c" alt="" coords="465,155,601,181"/><area shape="rect" id="node7" href="ospf__interface_8c.html" title="ospfd/ospf_interface.c" alt="" coords="626,155,784,181"/><area shape="rect" id="node9" href="ospf__interface_8h.html" title="ospfd/ospf_interface.h" alt="" coords="1565,80,1723,107"/><area shape="rect" id="node24" href="ospf__ism_8c.html" title="ospfd/ospf_ism.c" alt="" coords="5,155,131,181"/><area shape="rect" id="node26" href="ospf__lsa_8c.html" title="ospfd/ospf_lsa.c" alt="" coords="319,155,441,181"/><area shape="rect" id="node30" href="ospf__neighbor_8c.html" title="ospfd/ospf_neighbor.c" alt="" coords="3031,155,3189,181"/><area shape="rect" id="node32" href="ospf__network_8c.html" title="ospfd/ospf_network.c" alt="" coords="3215,155,3369,181"/><area shape="rect" id="node34" href="ospf__nsm_8c.html" title="ospfd/ospf_nsm.c" alt="" coords="2575,155,2705,181"/><area shape="rect" id="node36" href="ospf__packet_8c.html" title="ospfd/ospf_packet.c" alt="" coords="2729,155,2876,181"/><area shape="rect" id="node48" href="ospfd_8c.html" title="ospfd/ospfd.c" alt="" coords="2900,155,3007,181"/><area shape="rect" id="node53" href="ospf__neighbor_8h.html" title="ospfd/ospf_neighbor.h" alt="" coords="1382,80,1540,107"/><area shape="rect" id="node11" href="ospf__apiclient_8c.html" title="ospfclient/ospf_apiclient.c" alt="" coords="1553,155,1735,181"/><area shape="rect" id="node13" href="ospf__abr_8c.html" title="ospfd/ospf_abr.c" alt="" coords="1759,155,1883,181"/><area shape="rect" id="node15" href="ospf__asbr_8c.html" title="ospfd/ospf_asbr.c" alt="" coords="1908,155,2039,181"/><area shape="rect" id="node17" href="ospf__ase_8c.html" title="ospfd/ospf_ase.c" alt="" coords="809,155,935,181"/><area shape="rect" id="node21" href="ospf__ia_8c.html" title="ospfd/ospf_ia.c" alt="" coords="960,155,1075,181"/><area shape="rect" id="node28" href="ospf__main_8c.html" title="ospfd/ospf_main.c" alt="" coords="1099,155,1232,181"/><area shape="rect" id="node38" href="ospf__route_8c.html" title="ospfd/ospf_route.c" alt="" coords="2063,155,2200,181"/><area shape="rect" id="node40" href="ospf__routemap_8c.html" title="ospfd/ospf_routemap.c" alt="" coords="2225,155,2388,181"/><area shape="rect" id="node42" href="ospf__spf_8c.html" title="ospfd/ospf_spf.c" alt="" coords="1257,155,1380,181"/><area shape="rect" id="node44" href="ospf__vty_8c.html" title="ospfd/ospf_vty.c" alt="" coords="1405,155,1528,181"/><area shape="rect" id="node46" href="ospf__zebra_8c.html" title="ospfd/ospf_zebra.c" alt="" coords="2412,155,2551,181"/></map>
</div>
</div>
<p><a href="ospf__packet_8h_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structospf__packet.html">ospf_packet</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structospf__fifo.html">ospf_fifo</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structospf__header.html">ospf_header</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structospf__hello.html">ospf_hello</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structospf__db__desc.html">ospf_db_desc</a></td></tr>
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#aa0e82e0da0245541e042fcad8b9a0f2e">OSPF_HEADER_SIZE</a>&#160;&#160;&#160;24U</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#aa86d20cb35e939c8f584f31b0907531a">OSPF_AUTH_SIMPLE_SIZE</a>&#160;&#160;&#160;8U</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a4361f27185f8d7ea61101c3033a85952">OSPF_AUTH_MD5_SIZE</a>&#160;&#160;&#160;16U</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a931e4cc5c8888b6cf1d91636fd4340a6">OSPF_MAX_PACKET_SIZE</a>&#160;&#160;&#160;65535U</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a66e89ac395b84382b108574f1f46fd1b">OSPF_HELLO_MIN_SIZE</a>&#160;&#160;&#160;20U</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a872e1fdf510665b31c5090348d51b8ab">OSPF_DB_DESC_MIN_SIZE</a>&#160;&#160;&#160;8U</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#abb512c6d6c0730264d12f1c3108d45bf">OSPF_LS_REQ_MIN_SIZE</a>&#160;&#160;&#160;0U</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a003fcbfbe0b11e037553bead044725d8">OSPF_LS_UPD_MIN_SIZE</a>&#160;&#160;&#160;4U</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a78d2a951ce65fa884583b770ea971b01">OSPF_LS_ACK_MIN_SIZE</a>&#160;&#160;&#160;0U</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a1fa975559e07a39ee83b194caa6ae56b">OSPF_MSG_HELLO</a>&#160;&#160;&#160;1</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a367312ccca45c75e90fd72d241fa1628">OSPF_MSG_DB_DESC</a>&#160;&#160;&#160;2</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a512b62b0a53781cc39bf1e5af29cd87d">OSPF_MSG_LS_REQ</a>&#160;&#160;&#160;3</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a2021ef5cd86ec563bffe0a94f3d23a9e">OSPF_MSG_LS_UPD</a>&#160;&#160;&#160;4</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#ad9b68de6334b262d7ca66dac18c96f48">OSPF_MSG_LS_ACK</a>&#160;&#160;&#160;5</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a040f276a34d92cb9426454753718e81b">OSPF_SEND_PACKET_DIRECT</a>&#160;&#160;&#160;1</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a76f6e5970f4cddaa077a801063a4c0ef">OSPF_SEND_PACKET_INDIRECT</a>&#160;&#160;&#160;2</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a0a929e6a74bce7ed9d2c66a65e846433">OSPF_SEND_PACKET_LOOP</a>&#160;&#160;&#160;3</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a76abb348c56b6da3442d887572f29cb2">OSPF_HELLO_REPLY_DELAY</a>&#160;&#160;&#160;1</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#ae5a911c5827726028fd5e2ff27189a45">OSPF_PACKET_MAX</a>(oi)&#160;&#160;&#160;ospf_packet_max (oi)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a17381f7881add118ca5ab6d7eddeded2">OSPF_OUTPUT_PNT</a>(S)&#160;&#160;&#160;((S)-&gt;data + (S)-&gt;putp)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a978296f2149fa2e0456bfba5ff169274">OSPF_OUTPUT_LENGTH</a>(S)&#160;&#160;&#160;((S)-&gt;endp)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a63eec6702c492926fcdfd84f33eaa836">IS_SET_DD_MS</a>(<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)&#160;&#160;&#160;((<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>) &amp; OSPF_DD_FLAG_MS)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a05e41ae2cb53cca5409902b486e732ec">IS_SET_DD_M</a>(<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)&#160;&#160;&#160;((<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>) &amp; OSPF_DD_FLAG_M)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#aa9ac12af4b4bd7b1a1c5bed8bd39b937">IS_SET_DD_I</a>(<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)&#160;&#160;&#160;((<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>) &amp; OSPF_DD_FLAG_I)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a23b86af94d483f75ac067cccfa70b844">IS_SET_DD_ALL</a>(<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)&#160;&#160;&#160;((<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>) &amp; OSPF_DD_FLAG_ALL)</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#af00ce30dbcd842fbc2da3af8d0f3084c">ospf_output_forward</a> (struct <a class="el" href="structstream.html">stream</a> *, int)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__packet.html">ospf_packet</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a3b4d356cc16f9c8e196c87aa0fea9678">ospf_packet_new</a> (size_t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#adc1e7a8e7ced436f0406748974f177f5">ospf_packet_free</a> (struct <a class="el" href="structospf__packet.html">ospf_packet</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__fifo.html">ospf_fifo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a098bdd57c739bf8ba5346f5270a49835">ospf_fifo_new</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a70055b43ac41fddb8a8d8c332a605611">ospf_fifo_push</a> (struct <a class="el" href="structospf__fifo.html">ospf_fifo</a> *, struct <a class="el" href="structospf__packet.html">ospf_packet</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__packet.html">ospf_packet</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a42831224d0da841757178a1332c374b9">ospf_fifo_pop</a> (struct <a class="el" href="structospf__fifo.html">ospf_fifo</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__packet.html">ospf_packet</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#aab01327dbd651506937a8e31e8e3c6a1">ospf_fifo_head</a> (struct <a class="el" href="structospf__fifo.html">ospf_fifo</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a9a35170d8273ed14a2442cfabdda2dfc">ospf_fifo_flush</a> (struct <a class="el" href="structospf__fifo.html">ospf_fifo</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a7e088b006a263ec5f67e42ae3d83b168">ospf_fifo_free</a> (struct <a class="el" href="structospf__fifo.html">ospf_fifo</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a28983be848524bf2b196d0de680d4586">ospf_packet_add</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *, struct <a class="el" href="structospf__packet.html">ospf_packet</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a2ed90742bf57be56a168cd0876f3efd7">ospf_packet_delete</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structstream.html">stream</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#ace1e595688aafad876ace00f3c69dfec">ospf_stream_dup</a> (struct <a class="el" href="structstream.html">stream</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__packet.html">ospf_packet</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a69220479be88620cdc940960e0c3373c">ospf_packet_dup</a> (struct <a class="el" href="structospf__packet.html">ospf_packet</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a3bbbd5584ef93691fbd0b1e22e8a08ae">ospf_read</a> (struct <a class="el" href="structthread.html">thread</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a1fb8b9605dcc524a54fd41cedac834d0">ospf_hello_send</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a7130ce5d875da36257ad4d60fde78b58">ospf_db_desc_send</a> (struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#ab49647de83d0bca25a302a47b3f0d25c">ospf_db_desc_resend</a> (struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a735984b00d09d2a158eaf1d3e2428349">ospf_ls_req_send</a> (struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#adc5da1b60477e64c8997d798ef6ac03b">ospf_ls_upd_send_lsa</a> (struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *, struct <a class="el" href="structospf__lsa.html">ospf_lsa</a> *, int)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a2375af385f6283629913b25806adb40a">ospf_ls_upd_send</a> (struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *, struct <a class="el" href="structlist.html">list</a> *, int)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a6ed680a77d300ba61ccb044a10ce6671">ospf_ls_ack_send</a> (struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *, struct <a class="el" href="structospf__lsa.html">ospf_lsa</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a626b7ed609e96786ecbd315cbaabf768">ospf_ls_ack_send_delayed</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#aa5153a7db20ddf4dbae9666b12f5666b">ospf_ls_retransmit</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *, struct <a class="el" href="structospf__lsa.html">ospf_lsa</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a65372218adb97f2a656a773d2ab66c44">ospf_ls_req_event</a> (struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a4555a9430dac3f5bc627b2e3dff05b90">ospf_ls_upd_timer</a> (struct <a class="el" href="structthread.html">thread</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#ae9c7a60c34e0e56e3dbd7e9d028e3bdc">ospf_ls_ack_timer</a> (struct <a class="el" href="structthread.html">thread</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#af15f4380467064446745acb56e631216">ospf_poll_timer</a> (struct <a class="el" href="structthread.html">thread</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a6756b631688bb3dabb18a7257c00ad02">ospf_hello_reply_timer</a> (struct <a class="el" href="structthread.html">thread</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__packet_8h.html#a4d6ac2df9d55c817cb3be6ee5adc95c3">ospf_hello_send_sub</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *, struct in_addr *)</td></tr>
</table>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="a23b86af94d483f75ac067cccfa70b844"></a><!-- doxytag: member="ospf_packet.h::IS_SET_DD_ALL" ref="a23b86af94d483f75ac067cccfa70b844" args="(X)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IS_SET_DD_ALL</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a></td><td>)</td>
          <td>&#160;&#160;&#160;((<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>) &amp; OSPF_DD_FLAG_ALL)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00131">131</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa9ac12af4b4bd7b1a1c5bed8bd39b937"></a><!-- doxytag: member="ospf_packet.h::IS_SET_DD_I" ref="aa9ac12af4b4bd7b1a1c5bed8bd39b937" args="(X)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IS_SET_DD_I</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a></td><td>)</td>
          <td>&#160;&#160;&#160;((<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>) &amp; OSPF_DD_FLAG_I)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00130">130</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="a05e41ae2cb53cca5409902b486e732ec"></a><!-- doxytag: member="ospf_packet.h::IS_SET_DD_M" ref="a05e41ae2cb53cca5409902b486e732ec" args="(X)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IS_SET_DD_M</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a></td><td>)</td>
          <td>&#160;&#160;&#160;((<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>) &amp; OSPF_DD_FLAG_M)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00129">129</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="a63eec6702c492926fcdfd84f33eaa836"></a><!-- doxytag: member="ospf_packet.h::IS_SET_DD_MS" ref="a63eec6702c492926fcdfd84f33eaa836" args="(X)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IS_SET_DD_MS</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a></td><td>)</td>
          <td>&#160;&#160;&#160;((<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>) &amp; OSPF_DD_FLAG_MS)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00128">128</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="a4361f27185f8d7ea61101c3033a85952"></a><!-- doxytag: member="ospf_packet.h::OSPF_AUTH_MD5_SIZE" ref="a4361f27185f8d7ea61101c3033a85952" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_AUTH_MD5_SIZE&#160;&#160;&#160;16U</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00028">28</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa86d20cb35e939c8f584f31b0907531a"></a><!-- doxytag: member="ospf_packet.h::OSPF_AUTH_SIMPLE_SIZE" ref="aa86d20cb35e939c8f584f31b0907531a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_AUTH_SIMPLE_SIZE&#160;&#160;&#160;8U</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00027">27</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="a872e1fdf510665b31c5090348d51b8ab"></a><!-- doxytag: member="ospf_packet.h::OSPF_DB_DESC_MIN_SIZE" ref="a872e1fdf510665b31c5090348d51b8ab" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_DB_DESC_MIN_SIZE&#160;&#160;&#160;8U</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00032">32</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa0e82e0da0245541e042fcad8b9a0f2e"></a><!-- doxytag: member="ospf_packet.h::OSPF_HEADER_SIZE" ref="aa0e82e0da0245541e042fcad8b9a0f2e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_HEADER_SIZE&#160;&#160;&#160;24U</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00026">26</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="a66e89ac395b84382b108574f1f46fd1b"></a><!-- doxytag: member="ospf_packet.h::OSPF_HELLO_MIN_SIZE" ref="a66e89ac395b84382b108574f1f46fd1b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_HELLO_MIN_SIZE&#160;&#160;&#160;20U</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00031">31</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="a76abb348c56b6da3442d887572f29cb2"></a><!-- doxytag: member="ospf_packet.h::OSPF_HELLO_REPLY_DELAY" ref="a76abb348c56b6da3442d887572f29cb2" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_HELLO_REPLY_DELAY&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00047">47</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="a78d2a951ce65fa884583b770ea971b01"></a><!-- doxytag: member="ospf_packet.h::OSPF_LS_ACK_MIN_SIZE" ref="a78d2a951ce65fa884583b770ea971b01" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_LS_ACK_MIN_SIZE&#160;&#160;&#160;0U</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00035">35</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="abb512c6d6c0730264d12f1c3108d45bf"></a><!-- doxytag: member="ospf_packet.h::OSPF_LS_REQ_MIN_SIZE" ref="abb512c6d6c0730264d12f1c3108d45bf" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_LS_REQ_MIN_SIZE&#160;&#160;&#160;0U</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00033">33</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="a003fcbfbe0b11e037553bead044725d8"></a><!-- doxytag: member="ospf_packet.h::OSPF_LS_UPD_MIN_SIZE" ref="a003fcbfbe0b11e037553bead044725d8" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_LS_UPD_MIN_SIZE&#160;&#160;&#160;4U</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00034">34</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="a931e4cc5c8888b6cf1d91636fd4340a6"></a><!-- doxytag: member="ospf_packet.h::OSPF_MAX_PACKET_SIZE" ref="a931e4cc5c8888b6cf1d91636fd4340a6" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_MAX_PACKET_SIZE&#160;&#160;&#160;65535U</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00030">30</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="a367312ccca45c75e90fd72d241fa1628"></a><!-- doxytag: member="ospf_packet.h::OSPF_MSG_DB_DESC" ref="a367312ccca45c75e90fd72d241fa1628" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_MSG_DB_DESC&#160;&#160;&#160;2</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00038">38</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="a1fa975559e07a39ee83b194caa6ae56b"></a><!-- doxytag: member="ospf_packet.h::OSPF_MSG_HELLO" ref="a1fa975559e07a39ee83b194caa6ae56b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_MSG_HELLO&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00037">37</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="ad9b68de6334b262d7ca66dac18c96f48"></a><!-- doxytag: member="ospf_packet.h::OSPF_MSG_LS_ACK" ref="ad9b68de6334b262d7ca66dac18c96f48" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_MSG_LS_ACK&#160;&#160;&#160;5</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00041">41</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="a512b62b0a53781cc39bf1e5af29cd87d"></a><!-- doxytag: member="ospf_packet.h::OSPF_MSG_LS_REQ" ref="a512b62b0a53781cc39bf1e5af29cd87d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_MSG_LS_REQ&#160;&#160;&#160;3</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00039">39</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="a2021ef5cd86ec563bffe0a94f3d23a9e"></a><!-- doxytag: member="ospf_packet.h::OSPF_MSG_LS_UPD" ref="a2021ef5cd86ec563bffe0a94f3d23a9e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_MSG_LS_UPD&#160;&#160;&#160;4</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00040">40</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="a978296f2149fa2e0456bfba5ff169274"></a><!-- doxytag: member="ospf_packet.h::OSPF_OUTPUT_LENGTH" ref="a978296f2149fa2e0456bfba5ff169274" args="(S)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_OUTPUT_LENGTH</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">S</td><td>)</td>
          <td>&#160;&#160;&#160;((S)-&gt;endp)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00126">126</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="a17381f7881add118ca5ab6d7eddeded2"></a><!-- doxytag: member="ospf_packet.h::OSPF_OUTPUT_PNT" ref="a17381f7881add118ca5ab6d7eddeded2" args="(S)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_OUTPUT_PNT</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">S</td><td>)</td>
          <td>&#160;&#160;&#160;((S)-&gt;data + (S)-&gt;putp)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00125">125</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="ae5a911c5827726028fd5e2ff27189a45"></a><!-- doxytag: member="ospf_packet.h::OSPF_PACKET_MAX" ref="ae5a911c5827726028fd5e2ff27189a45" args="(oi)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_PACKET_MAX</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">oi</td><td>)</td>
          <td>&#160;&#160;&#160;ospf_packet_max (oi)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00123">123</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="a040f276a34d92cb9426454753718e81b"></a><!-- doxytag: member="ospf_packet.h::OSPF_SEND_PACKET_DIRECT" ref="a040f276a34d92cb9426454753718e81b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_SEND_PACKET_DIRECT&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00043">43</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="a76f6e5970f4cddaa077a801063a4c0ef"></a><!-- doxytag: member="ospf_packet.h::OSPF_SEND_PACKET_INDIRECT" ref="a76f6e5970f4cddaa077a801063a4c0ef" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_SEND_PACKET_INDIRECT&#160;&#160;&#160;2</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00044">44</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<a class="anchor" id="a0a929e6a74bce7ed9d2c66a65e846433"></a><!-- doxytag: member="ospf_packet.h::OSPF_SEND_PACKET_LOOP" ref="a0a929e6a74bce7ed9d2c66a65e846433" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_SEND_PACKET_LOOP&#160;&#160;&#160;3</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8h_source.html#l00045">45</a> of file <a class="el" href="ospf__packet_8h_source.html">ospf_packet.h</a>.</p>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ab49647de83d0bca25a302a47b3f0d25c"></a><!-- doxytag: member="ospf_packet.h::ospf_db_desc_resend" ref="ab49647de83d0bca25a302a47b3f0d25c" args="(struct ospf_neighbor *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_db_desc_resend </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l03185">3185</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;

  oi = nbr-&gt;oi;

  <span class="comment">/* Add packet to the interface output queue. */</span>
  <a class="code" href="ospf__packet_8c.html#ac55f65cc4d651ee73476c4eb974ce055">ospf_packet_add</a> (oi, <a class="code" href="ospf__packet_8c.html#a47248d16b5708ee3b44409020a6bb125">ospf_packet_dup</a> (nbr-&gt;last_send));

  <span class="comment">/* Hook thread to write packet. */</span>
  <a class="code" href="ospf__ism_8h.html#acd2a285495892c5423a0c4894c43ce94">OSPF_ISM_WRITE_ON</a> (oi-&gt;<a class="code" href="structospf__interface.html#a159ae1c542016fc78f68c3e39a1b132e">ospf</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a7130ce5d875da36257ad4d60fde78b58"></a><!-- doxytag: member="ospf_packet.h::ospf_db_desc_send" ref="a7130ce5d875da36257ad4d60fde78b58" args="(struct ospf_neighbor *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_db_desc_send </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l03143">3143</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
  <span class="keyword">struct </span><a class="code" href="structospf__packet.html">ospf_packet</a> *op;
  u_int16_t <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a> = <a class="code" href="ospf__packet_8h.html#aa0e82e0da0245541e042fcad8b9a0f2e">OSPF_HEADER_SIZE</a>;

  oi = nbr-&gt;oi;
  op = <a class="code" href="ospf__packet_8c.html#aa2f83b94a7be3ca5a93f9fa65dfe1bc1">ospf_packet_new</a> (oi-&gt;<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>-&gt;<a class="code" href="structinterface.html#aadd24df2d261a3bfcbdfe4797e639afb">mtu</a>);

  <span class="comment">/* Prepare OSPF common header. */</span>
  <a class="code" href="ospf__packet_8c.html#a96ce66f46bd9e9357b585540470e33c0">ospf_make_header</a> (<a class="code" href="ospf__packet_8h.html#a367312ccca45c75e90fd72d241fa1628">OSPF_MSG_DB_DESC</a>, oi, op-&gt;<a class="code" href="structospf__packet.html#a5ebe2d160ac3b91233387fc87eff17f3">s</a>);

  <span class="comment">/* Prepare OSPF Database Description body. */</span>
  length += <a class="code" href="ospf__packet_8c.html#a2ce501a5599cdabe2d6a9f1beea1fd14">ospf_make_db_desc</a> (oi, nbr, op-&gt;<a class="code" href="structospf__packet.html#a5ebe2d160ac3b91233387fc87eff17f3">s</a>);

  <span class="comment">/* Fill OSPF header. */</span>
  <a class="code" href="ospf__packet_8c.html#a200c548a243d95de3095eb0efff76458">ospf_fill_header</a> (oi, op-&gt;<a class="code" href="structospf__packet.html#a5ebe2d160ac3b91233387fc87eff17f3">s</a>, length);

  <span class="comment">/* Set packet length. */</span>
  op-&gt;<a class="code" href="structospf__packet.html#aa88c6259af943426a28bd5f1dabab596">length</a> = <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>;

  <span class="comment">/* Decide destination address. */</span>
  <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#a7722c258e67d21a5c6f367811664cccb">OSPF_IFTYPE_POINTOPOINT</a>) 
    op-&gt;<a class="code" href="structospf__packet.html#a37ac8ced9627ad1a210e214aa94cc2e7">dst</a>.s_addr = htonl (<a class="code" href="ospfd_8h.html#a80bda0f2566dc7b64f07a28562cfb2c1">OSPF_ALLSPFROUTERS</a>);
  <span class="keywordflow">else</span>
    op-&gt;<a class="code" href="structospf__packet.html#a37ac8ced9627ad1a210e214aa94cc2e7">dst</a> = nbr-&gt;address.u.prefix4;

  <span class="comment">/* Add packet to the interface output queue. */</span>
  <a class="code" href="ospf__packet_8c.html#ac55f65cc4d651ee73476c4eb974ce055">ospf_packet_add</a> (oi, op);

  <span class="comment">/* Hook thread to write packet. */</span>
  <a class="code" href="ospf__ism_8h.html#acd2a285495892c5423a0c4894c43ce94">OSPF_ISM_WRITE_ON</a> (oi-&gt;<a class="code" href="structospf__interface.html#a159ae1c542016fc78f68c3e39a1b132e">ospf</a>);

  <span class="comment">/* Remove old DD packet, then copy new one and keep in neighbor structure. */</span>
  <span class="keywordflow">if</span> (nbr-&gt;last_send)
    <a class="code" href="ospf__packet_8c.html#a809c1e09677b5aaee9ed0c336a04a4c6">ospf_packet_free</a> (nbr-&gt;last_send);
  nbr-&gt;last_send = <a class="code" href="ospf__packet_8c.html#a47248d16b5708ee3b44409020a6bb125">ospf_packet_dup</a> (op);
  <a class="code" href="thread_8c.html#abf5861abe71d6f9a1ddd493be0218de1">quagga_gettime</a> (<a class="code" href="thread_8h.html#a64fff521e88ba8b01645c5bb89085b33a7f92aaa461f13c163b13f96085eb3cd9">QUAGGA_CLK_MONOTONIC</a>, &amp;nbr-&gt;last_send_ts);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9a35170d8273ed14a2442cfabdda2dfc"></a><!-- doxytag: member="ospf_packet.h::ospf_fifo_flush" ref="a9a35170d8273ed14a2442cfabdda2dfc" args="(struct ospf_fifo *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_fifo_flush </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__fifo.html">ospf_fifo</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l00158">158</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__packet.html">ospf_packet</a> *op;
  <span class="keyword">struct </span><a class="code" href="structospf__packet.html">ospf_packet</a> *<a class="code" href="structospf__packet.html#a9c4325412060269faf41010429f07203">next</a>;

  <span class="keywordflow">for</span> (op = <a class="code" href="structfifo.html">fifo</a>-&gt;head; op; op = next)
    {
      next = op-&gt;<a class="code" href="structospf__packet.html#a9c4325412060269faf41010429f07203">next</a>;
      <a class="code" href="ospf__packet_8c.html#a809c1e09677b5aaee9ed0c336a04a4c6">ospf_packet_free</a> (op);
    }
  <a class="code" href="structfifo.html">fifo</a>-&gt;head = <a class="code" href="structfifo.html">fifo</a>-&gt;tail = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <a class="code" href="structfifo.html">fifo</a>-&gt;count = 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a7e088b006a263ec5f67e42ae3d83b168"></a><!-- doxytag: member="ospf_packet.h::ospf_fifo_free" ref="a7e088b006a263ec5f67e42ae3d83b168" args="(struct ospf_fifo *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_fifo_free </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__fifo.html">ospf_fifo</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l00174">174</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="ospf__packet_8c.html#af8e862ad9b0b53400b803da7c203191d">ospf_fifo_flush</a> (<a class="code" href="structfifo.html">fifo</a>);

  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba96166b26bd99309f1ed9d89e45a1b0f2">MTYPE_OSPF_FIFO</a>, <a class="code" href="structfifo.html">fifo</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="aab01327dbd651506937a8e31e8e3c6a1"></a><!-- doxytag: member="ospf_packet.h::ospf_fifo_head" ref="aab01327dbd651506937a8e31e8e3c6a1" args="(struct ospf_fifo *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__packet.html">ospf_packet</a>* ospf_fifo_head </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__fifo.html">ospf_fifo</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l00151">151</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="structfifo.html">fifo</a>-&gt;head;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a098bdd57c739bf8ba5346f5270a49835"></a><!-- doxytag: member="ospf_packet.h::ospf_fifo_new" ref="a098bdd57c739bf8ba5346f5270a49835" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__fifo.html">ospf_fifo</a>* ospf_fifo_new </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l00106">106</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__fifo.html">ospf_fifo</a> *<span class="keyword">new</span>;

  <span class="keyword">new</span> = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba96166b26bd99309f1ed9d89e45a1b0f2">MTYPE_OSPF_FIFO</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structospf__fifo.html">ospf_fifo</a>));
  <span class="keywordflow">return</span> <span class="keyword">new</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a42831224d0da841757178a1332c374b9"></a><!-- doxytag: member="ospf_packet.h::ospf_fifo_pop" ref="a42831224d0da841757178a1332c374b9" args="(struct ospf_fifo *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__packet.html">ospf_packet</a>* ospf_fifo_pop </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__fifo.html">ospf_fifo</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l00130">130</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__packet.html">ospf_packet</a> *op;

  op = <a class="code" href="structfifo.html">fifo</a>-&gt;head;

  <span class="keywordflow">if</span> (op)
    {
      <a class="code" href="structfifo.html">fifo</a>-&gt;head = op-&gt;<a class="code" href="structospf__packet.html#a9c4325412060269faf41010429f07203">next</a>;

      <span class="keywordflow">if</span> (<a class="code" href="structfifo.html">fifo</a>-&gt;head == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <a class="code" href="structfifo.html">fifo</a>-&gt;tail = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

      <a class="code" href="structfifo.html">fifo</a>-&gt;count--;
    }

  <span class="keywordflow">return</span> op;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a70055b43ac41fddb8a8d8c332a605611"></a><!-- doxytag: member="ospf_packet.h::ospf_fifo_push" ref="a70055b43ac41fddb8a8d8c332a605611" args="(struct ospf_fifo *, struct ospf_packet *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_fifo_push </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__fifo.html">ospf_fifo</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__packet.html">ospf_packet</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l00116">116</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structfifo.html">fifo</a>-&gt;tail)
    <a class="code" href="structfifo.html">fifo</a>-&gt;tail-&gt;<a class="code" href="structfifo.html#a10b4f39cc3a18e73f3b40a58046be188">next</a> = op;
  <span class="keywordflow">else</span>
    <a class="code" href="structfifo.html">fifo</a>-&gt;head = op;

  <a class="code" href="structfifo.html">fifo</a>-&gt;tail = op;

  <a class="code" href="structfifo.html">fifo</a>-&gt;count++;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6756b631688bb3dabb18a7257c00ad02"></a><!-- doxytag: member="ospf_packet.h::ospf_hello_reply_timer" ref="a6756b631688bb3dabb18a7257c00ad02" args="(struct thread *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_hello_reply_timer </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l03038">3038</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr;

  nbr = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (<a class="code" href="structthread.html">thread</a>);
  nbr-&gt;<a class="code" href="structospf__neighbor.html#a9bb86528f191dbbe6c6272501ccc7ad6">t_hello_reply</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (nbr-&gt;<a class="code" href="structospf__neighbor.html#a24eabbd825aa53aba5343ae2d5ea7233">oi</a>);

  <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (nsm, NSM_TIMERS))
    <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_DEBUG, <span class="stringliteral">&quot;NSM[%s:%s]: Timer (hello-reply timer expire)&quot;</span>,
      <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (nbr-&gt;<a class="code" href="structospf__neighbor.html#a24eabbd825aa53aba5343ae2d5ea7233">oi</a>), inet_ntoa (nbr-&gt;<a class="code" href="structospf__neighbor.html#a2257238c9040a76e9de9a78cf95bae0d">router_id</a>));

  <a class="code" href="ospf__packet_8c.html#ae580c694ac036ef02635ff750d37fd8a">ospf_hello_send_sub</a> (nbr-&gt;<a class="code" href="structospf__neighbor.html#a24eabbd825aa53aba5343ae2d5ea7233">oi</a>, &amp;nbr-&gt;<a class="code" href="structospf__neighbor.html#a4be3cd4b416bc267a4e3b35b9e2b1102">address</a>.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>);

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a1fb8b9605dcc524a54fd41cedac834d0"></a><!-- doxytag: member="ospf_packet.h::ospf_hello_send" ref="a1fb8b9605dcc524a54fd41cedac834d0" args="(struct ospf_interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_hello_send </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l03058">3058</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__packet.html">ospf_packet</a> *op;
  u_int16_t <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a> = <a class="code" href="ospf__packet_8h.html#aa0e82e0da0245541e042fcad8b9a0f2e">OSPF_HEADER_SIZE</a>;

  <span class="comment">/* If this is passive interface, do not send OSPF Hello. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="ospf__interface_8h.html#abe2e84be7bf9a73954a72fa5fbb728db">OSPF_IF_PASSIVE_STATUS</a> (oi) == <a class="code" href="ospf__interface_8h.html#a68e4f61453d94a303183c773f0d02a27">OSPF_IF_PASSIVE</a>)
    <span class="keywordflow">return</span>;

  op = <a class="code" href="ospf__packet_8c.html#aa2f83b94a7be3ca5a93f9fa65dfe1bc1">ospf_packet_new</a> (oi-&gt;ifp-&gt;mtu);

  <span class="comment">/* Prepare OSPF common header. */</span>
  <a class="code" href="ospf__packet_8c.html#a96ce66f46bd9e9357b585540470e33c0">ospf_make_header</a> (<a class="code" href="ospf__packet_8h.html#a1fa975559e07a39ee83b194caa6ae56b">OSPF_MSG_HELLO</a>, oi, op-&gt;<a class="code" href="structospf__packet.html#a5ebe2d160ac3b91233387fc87eff17f3">s</a>);

  <span class="comment">/* Prepare OSPF Hello body. */</span>
  length += <a class="code" href="ospf__packet_8c.html#aae99e08e101483b1f7ceeeb0d9479625">ospf_make_hello</a> (oi, op-&gt;<a class="code" href="structospf__packet.html#a5ebe2d160ac3b91233387fc87eff17f3">s</a>);

  <span class="comment">/* Fill OSPF header. */</span>
  <a class="code" href="ospf__packet_8c.html#a200c548a243d95de3095eb0efff76458">ospf_fill_header</a> (oi, op-&gt;<a class="code" href="structospf__packet.html#a5ebe2d160ac3b91233387fc87eff17f3">s</a>, length);

  <span class="comment">/* Set packet length. */</span>
  op-&gt;<a class="code" href="structospf__packet.html#aa88c6259af943426a28bd5f1dabab596">length</a> = <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>;

  <span class="keywordflow">if</span> (oi-&gt;type == <a class="code" href="ospf__interface_8h.html#abf2c650e64355936c071432d92dd5ecb">OSPF_IFTYPE_NBMA</a>)
    {
      <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr;
      <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;

      <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (oi-&gt;nbrs); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
    <span class="keywordflow">if</span> ((nbr = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>))
      <span class="keywordflow">if</span> (nbr != oi-&gt;nbr_self)
        <span class="keywordflow">if</span> (nbr-&gt;<a class="code" href="structospf__neighbor.html#a07061a68f4e15effd12479e1047120c7">state</a> != <a class="code" href="ospf__nsm_8h.html#a4bdf4e7631050dcf28cbe7959f0675ce">NSM_Down</a>)
          {
        <span class="comment">/*  RFC 2328  Section 9.5.1</span>
<span class="comment">            If the router is not eligible to become Designated Router,</span>
<span class="comment">            it must periodically send Hello Packets to both the</span>
<span class="comment">            Designated Router and the Backup Designated Router (if they</span>
<span class="comment">            exist).  */</span>
        <span class="keywordflow">if</span> (<a class="code" href="ospf__interface_8h.html#accb5457e43688e067b0b9844b08ae520">PRIORITY</a>(oi) == 0 &amp;&amp;
            <a class="code" href="prefix_8h.html#aed79e5e7f07f40fd10b39c04fbb24fc8">IPV4_ADDR_CMP</a>(&amp;<a class="code" href="ospf__interface_8h.html#aa84a7dde76ac0a31898992d050858ec5">DR</a>(oi),  &amp;nbr-&gt;<a class="code" href="structospf__neighbor.html#a4be3cd4b416bc267a4e3b35b9e2b1102">address</a>.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>) &amp;&amp;
            <a class="code" href="prefix_8h.html#aed79e5e7f07f40fd10b39c04fbb24fc8">IPV4_ADDR_CMP</a>(&amp;<a class="code" href="ospf__interface_8h.html#ab9a182dc79cc0d10a77a27c60f2351cd">BDR</a>(oi), &amp;nbr-&gt;<a class="code" href="structospf__neighbor.html#a4be3cd4b416bc267a4e3b35b9e2b1102">address</a>.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>))
          <span class="keywordflow">continue</span>;

        <span class="comment">/*  If the router is eligible to become Designated Router, it</span>
<span class="comment">            must periodically send Hello Packets to all neighbors that</span>
<span class="comment">            are also eligible. In addition, if the router is itself the</span>
<span class="comment">            Designated Router or Backup Designated Router, it must also</span>
<span class="comment">            send periodic Hello Packets to all other neighbors. */</span>

        <span class="keywordflow">if</span> (nbr-&gt;<a class="code" href="structospf__neighbor.html#ade51baa719592185df1db62d13e9cf63">priority</a> == 0 &amp;&amp; oi-&gt;state == <a class="code" href="ospf__ism_8h.html#a63c91d64f244427665286ca82eaeea04">ISM_DROther</a>)
          <span class="keywordflow">continue</span>;
        <span class="comment">/* if oi-&gt;state == Waiting, send hello to all neighbors */</span>
        {
          <span class="keyword">struct </span><a class="code" href="structospf__packet.html">ospf_packet</a> *op_dup;

          op_dup = <a class="code" href="ospf__packet_8c.html#a47248d16b5708ee3b44409020a6bb125">ospf_packet_dup</a>(op);
          op_dup-&gt;<a class="code" href="structospf__packet.html#a37ac8ced9627ad1a210e214aa94cc2e7">dst</a> = nbr-&gt;<a class="code" href="structospf__neighbor.html#a4be3cd4b416bc267a4e3b35b9e2b1102">address</a>.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>;

          <span class="comment">/* Add packet to the interface output queue. */</span>
          <a class="code" href="ospf__packet_8c.html#ac55f65cc4d651ee73476c4eb974ce055">ospf_packet_add</a> (oi, op_dup);

          <a class="code" href="ospf__ism_8h.html#acd2a285495892c5423a0c4894c43ce94">OSPF_ISM_WRITE_ON</a> (oi-&gt;ospf);
        }

          }
      <a class="code" href="ospf__packet_8c.html#a809c1e09677b5aaee9ed0c336a04a4c6">ospf_packet_free</a> (op);
    }
  <span class="keywordflow">else</span>
    {
      <span class="comment">/* Decide destination address. */</span>
      <span class="keywordflow">if</span> (oi-&gt;type == <a class="code" href="ospf__interface_8h.html#a45798a2a8b566abd1907f7ae8bc0a2be">OSPF_IFTYPE_VIRTUALLINK</a>)
    op-&gt;<a class="code" href="structospf__packet.html#a37ac8ced9627ad1a210e214aa94cc2e7">dst</a>.s_addr = oi-&gt;vl_data-&gt;peer_addr.s_addr;
      <span class="keywordflow">else</span> 
    op-&gt;<a class="code" href="structospf__packet.html#a37ac8ced9627ad1a210e214aa94cc2e7">dst</a>.s_addr = htonl (<a class="code" href="ospfd_8h.html#a80bda0f2566dc7b64f07a28562cfb2c1">OSPF_ALLSPFROUTERS</a>);

      <span class="comment">/* Add packet to the interface output queue. */</span>
      <a class="code" href="ospf__packet_8c.html#ac55f65cc4d651ee73476c4eb974ce055">ospf_packet_add</a> (oi, op);

      <span class="comment">/* Hook thread to write packet. */</span>
      <a class="code" href="ospf__ism_8h.html#acd2a285495892c5423a0c4894c43ce94">OSPF_ISM_WRITE_ON</a> (oi-&gt;ospf);
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4d6ac2df9d55c817cb3be6ee5adc95c3"></a><!-- doxytag: member="ospf_packet.h::ospf_hello_send_sub" ref="a4d6ac2df9d55c817cb3be6ee5adc95c3" args="(struct ospf_interface *, struct in_addr *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_hello_send_sub </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l02959">2959</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__packet.html">ospf_packet</a> *op;
  u_int16_t <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a> = <a class="code" href="ospf__packet_8h.html#aa0e82e0da0245541e042fcad8b9a0f2e">OSPF_HEADER_SIZE</a>;

  op = <a class="code" href="ospf__packet_8c.html#aa2f83b94a7be3ca5a93f9fa65dfe1bc1">ospf_packet_new</a> (oi-&gt;ifp-&gt;mtu);

  <span class="comment">/* Prepare OSPF common header. */</span>
  <a class="code" href="ospf__packet_8c.html#a96ce66f46bd9e9357b585540470e33c0">ospf_make_header</a> (<a class="code" href="ospf__packet_8h.html#a1fa975559e07a39ee83b194caa6ae56b">OSPF_MSG_HELLO</a>, oi, op-&gt;<a class="code" href="structospf__packet.html#a5ebe2d160ac3b91233387fc87eff17f3">s</a>);

  <span class="comment">/* Prepare OSPF Hello body. */</span>
  length += <a class="code" href="ospf__packet_8c.html#aae99e08e101483b1f7ceeeb0d9479625">ospf_make_hello</a> (oi, op-&gt;<a class="code" href="structospf__packet.html#a5ebe2d160ac3b91233387fc87eff17f3">s</a>);

  <span class="comment">/* Fill OSPF header. */</span>
  <a class="code" href="ospf__packet_8c.html#a200c548a243d95de3095eb0efff76458">ospf_fill_header</a> (oi, op-&gt;<a class="code" href="structospf__packet.html#a5ebe2d160ac3b91233387fc87eff17f3">s</a>, length);

  <span class="comment">/* Set packet length. */</span>
  op-&gt;<a class="code" href="structospf__packet.html#aa88c6259af943426a28bd5f1dabab596">length</a> = <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>;

  op-&gt;<a class="code" href="structospf__packet.html#a37ac8ced9627ad1a210e214aa94cc2e7">dst</a>.s_addr = addr-&gt;s_addr;

  <span class="comment">/* Add packet to the interface output queue. */</span>
  <a class="code" href="ospf__packet_8c.html#ac55f65cc4d651ee73476c4eb974ce055">ospf_packet_add</a> (oi, op);

  <span class="comment">/* Hook thread to write packet. */</span>
  <a class="code" href="ospf__ism_8h.html#acd2a285495892c5423a0c4894c43ce94">OSPF_ISM_WRITE_ON</a> (oi-&gt;ospf);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6ed680a77d300ba61ccb044a10ce6671"></a><!-- doxytag: member="ospf_packet.h::ospf_ls_ack_send" ref="a6ed680a77d300ba61ccb044a10ce6671" args="(struct ospf_neighbor *, struct ospf_lsa *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_ls_ack_send </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__lsa.html">ospf_lsa</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l03512">3512</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi = nbr-&gt;oi;

  <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (oi-&gt;<a class="code" href="structospf__interface.html#ad6998c388e24ac857e8059786f9d79e7">ls_ack_direct</a>.<a class="code" href="structospf__interface.html#acbc88d1aa86ff7a082fe2c77ae984d1f">ls_ack</a>) == 0)
    oi-&gt;<a class="code" href="structospf__interface.html#ad6998c388e24ac857e8059786f9d79e7">ls_ack_direct</a>.<a class="code" href="structospf__interface.html#a19d6a7edb5bceb7d3928aec92808f540">dst</a> = nbr-&gt;address.u.prefix4;
  
  <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (oi-&gt;<a class="code" href="structospf__interface.html#ad6998c388e24ac857e8059786f9d79e7">ls_ack_direct</a>.<a class="code" href="structospf__interface.html#acbc88d1aa86ff7a082fe2c77ae984d1f">ls_ack</a>, <a class="code" href="ospf__lsa_8c.html#a312850eed27e83bb9f66d27bb5bfb144">ospf_lsa_lock</a> (lsa));
  
  <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#a1fef0480466c761ca2921c55748b9d53">t_ls_ack_direct</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    oi-&gt;<a class="code" href="structospf__interface.html#a1fef0480466c761ca2921c55748b9d53">t_ls_ack_direct</a> =
      <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf__packet_8c.html#aba45b62b61a78861e6e6e6f12e4d9a35">ospf_ls_ack_send_event</a>, oi, 0);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a626b7ed609e96786ecbd315cbaabf768"></a><!-- doxytag: member="ospf_packet.h::ospf_ls_ack_send_delayed" ref="a626b7ed609e96786ecbd315cbaabf768" args="(struct ospf_interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_ls_ack_send_delayed </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l03528">3528</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span>in_addr dst;
  
  <span class="comment">/* Decide destination address. */</span>
  <span class="comment">/* RFC2328 Section 13.5                           On non-broadcast</span>
<span class="comment">    networks, delayed Link State Acknowledgment packets must be</span>
<span class="comment">    unicast separately over each adjacency (i.e., neighbor whose</span>
<span class="comment">    state is &gt;= Exchange).  */</span>
  <span class="keywordflow">if</span> (oi-&gt;type == <a class="code" href="ospf__interface_8h.html#abf2c650e64355936c071432d92dd5ecb">OSPF_IFTYPE_NBMA</a>)
    {
      <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr;
      <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;

      <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (oi-&gt;nbrs); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
    <span class="keywordflow">if</span> ((nbr = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
      <span class="keywordflow">if</span> (nbr != oi-&gt;nbr_self &amp;&amp; nbr-&gt;<a class="code" href="structospf__neighbor.html#a07061a68f4e15effd12479e1047120c7">state</a> &gt;= <a class="code" href="ospf__nsm_8h.html#a2bac91ff388bd6722ce1cdd682184e83">NSM_Exchange</a>)
        <span class="keywordflow">while</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (oi-&gt;ls_ack))
          <a class="code" href="ospf__packet_8c.html#a5daf949f0e045297ba11fcb03408e301">ospf_ls_ack_send_list</a> (oi, oi-&gt;ls_ack, nbr-&gt;<a class="code" href="structospf__neighbor.html#a4be3cd4b416bc267a4e3b35b9e2b1102">address</a>.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>);
      <span class="keywordflow">return</span>;
    }
  <span class="keywordflow">if</span> (oi-&gt;type == <a class="code" href="ospf__interface_8h.html#a45798a2a8b566abd1907f7ae8bc0a2be">OSPF_IFTYPE_VIRTUALLINK</a>)
    dst.s_addr = oi-&gt;vl_data-&gt;peer_addr.s_addr;
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (oi-&gt;state == <a class="code" href="ospf__ism_8h.html#a7f179a571f4f8e112c0b887f39c87f23">ISM_DR</a> || oi-&gt;state == <a class="code" href="ospf__ism_8h.html#a3676782add5a8ecdb86981965ef9f37e">ISM_Backup</a>)
    dst.s_addr = htonl (<a class="code" href="ospfd_8h.html#a80bda0f2566dc7b64f07a28562cfb2c1">OSPF_ALLSPFROUTERS</a>);
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (oi-&gt;type == <a class="code" href="ospf__interface_8h.html#a7722c258e67d21a5c6f367811664cccb">OSPF_IFTYPE_POINTOPOINT</a>)
    dst.s_addr = htonl (<a class="code" href="ospfd_8h.html#a80bda0f2566dc7b64f07a28562cfb2c1">OSPF_ALLSPFROUTERS</a>);
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (oi-&gt;type == <a class="code" href="ospf__interface_8h.html#aa65cd67781b9573131ead326b8976194">OSPF_IFTYPE_POINTOMULTIPOINT</a>)
    dst.s_addr = htonl (<a class="code" href="ospfd_8h.html#a80bda0f2566dc7b64f07a28562cfb2c1">OSPF_ALLSPFROUTERS</a>);
  <span class="keywordflow">else</span>
    dst.s_addr = htonl (<a class="code" href="ospfd_8h.html#a8ba5ca00e358c35a32b660dc87e4b7cd">OSPF_ALLDROUTERS</a>);

  <span class="keywordflow">while</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (oi-&gt;ls_ack))
    <a class="code" href="ospf__packet_8c.html#a5daf949f0e045297ba11fcb03408e301">ospf_ls_ack_send_list</a> (oi, oi-&gt;ls_ack, dst);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae9c7a60c34e0e56e3dbd7e9d028e3bdc"></a><!-- doxytag: member="ospf_packet.h::ospf_ls_ack_timer" ref="ae9c7a60c34e0e56e3dbd7e9d028e3bdc" args="(struct thread *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_ls_ack_timer </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l00470">470</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;

  oi = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (<a class="code" href="structthread.html">thread</a>);
  oi-&gt;<a class="code" href="structospf__interface.html#aa1f8a2d1d1212c2cfdd530c7ca9f7534">t_ls_ack</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="comment">/* Send Link State Acknowledgment. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (oi-&gt;<a class="code" href="structospf__interface.html#acbc88d1aa86ff7a082fe2c77ae984d1f">ls_ack</a>) &gt; 0)
    <a class="code" href="ospf__packet_8c.html#a579d018454c1f072266f76db636173c6">ospf_ls_ack_send_delayed</a> (oi);

  <span class="comment">/* Set LS Ack timer. */</span>
  <a class="code" href="ospf__ism_8h.html#a9aca7fd1780267f224441174f992bfc9">OSPF_ISM_TIMER_ON</a> (oi-&gt;<a class="code" href="structospf__interface.html#aa1f8a2d1d1212c2cfdd530c7ca9f7534">t_ls_ack</a>, <a class="code" href="ospf__packet_8c.html#afbe22efd3efbb5e37fccfa54d9f9f05a">ospf_ls_ack_timer</a>, oi-&gt;<a class="code" href="structospf__interface.html#ab715712eda2750aa107ca2457f234a9c">v_ls_ack</a>);

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a65372218adb97f2a656a773d2ab66c44"></a><!-- doxytag: member="ospf_packet.h::ospf_ls_req_event" ref="a65372218adb97f2a656a773d2ab66c44" args="(struct ospf_neighbor *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_ls_req_event </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l00402">402</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (nbr-&gt;t_ls_req)
    {
      <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (nbr-&gt;t_ls_req);
      nbr-&gt;t_ls_req = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }
  nbr-&gt;t_ls_req = <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf__packet_8c.html#ad3a6a5d5edd50ea50ea23dbc17d4fb0b">ospf_ls_req_timer</a>, nbr, 0);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a735984b00d09d2a158eaf1d3e2428349"></a><!-- doxytag: member="ospf_packet.h::ospf_ls_req_send" ref="a735984b00d09d2a158eaf1d3e2428349" args="(struct ospf_neighbor *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_ls_req_send </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l03200">3200</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
  <span class="keyword">struct </span><a class="code" href="structospf__packet.html">ospf_packet</a> *op;
  u_int16_t <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a> = <a class="code" href="ospf__packet_8h.html#aa0e82e0da0245541e042fcad8b9a0f2e">OSPF_HEADER_SIZE</a>;

  oi = nbr-&gt;oi;
  op = <a class="code" href="ospf__packet_8c.html#aa2f83b94a7be3ca5a93f9fa65dfe1bc1">ospf_packet_new</a> (oi-&gt;<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>-&gt;<a class="code" href="structinterface.html#aadd24df2d261a3bfcbdfe4797e639afb">mtu</a>);

  <span class="comment">/* Prepare OSPF common header. */</span>
  <a class="code" href="ospf__packet_8c.html#a96ce66f46bd9e9357b585540470e33c0">ospf_make_header</a> (<a class="code" href="ospf__packet_8h.html#a512b62b0a53781cc39bf1e5af29cd87d">OSPF_MSG_LS_REQ</a>, oi, op-&gt;<a class="code" href="structospf__packet.html#a5ebe2d160ac3b91233387fc87eff17f3">s</a>);

  <span class="comment">/* Prepare OSPF Link State Request body. */</span>
  length += <a class="code" href="ospf__packet_8c.html#ae4d87c81eeb19a950b4e8da4852401da">ospf_make_ls_req</a> (nbr, op-&gt;<a class="code" href="structospf__packet.html#a5ebe2d160ac3b91233387fc87eff17f3">s</a>);
  <span class="keywordflow">if</span> (length == <a class="code" href="ospf__packet_8h.html#aa0e82e0da0245541e042fcad8b9a0f2e">OSPF_HEADER_SIZE</a>)
    {
      <a class="code" href="ospf__packet_8c.html#a809c1e09677b5aaee9ed0c336a04a4c6">ospf_packet_free</a> (op);
      <span class="keywordflow">return</span>;
    }

  <span class="comment">/* Fill OSPF header. */</span>
  <a class="code" href="ospf__packet_8c.html#a200c548a243d95de3095eb0efff76458">ospf_fill_header</a> (oi, op-&gt;<a class="code" href="structospf__packet.html#a5ebe2d160ac3b91233387fc87eff17f3">s</a>, length);

  <span class="comment">/* Set packet length. */</span>
  op-&gt;<a class="code" href="structospf__packet.html#aa88c6259af943426a28bd5f1dabab596">length</a> = <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>;

  <span class="comment">/* Decide destination address. */</span>
  <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#a7722c258e67d21a5c6f367811664cccb">OSPF_IFTYPE_POINTOPOINT</a>) 
    op-&gt;<a class="code" href="structospf__packet.html#a37ac8ced9627ad1a210e214aa94cc2e7">dst</a>.s_addr = htonl (<a class="code" href="ospfd_8h.html#a80bda0f2566dc7b64f07a28562cfb2c1">OSPF_ALLSPFROUTERS</a>);
  <span class="keywordflow">else</span>
    op-&gt;<a class="code" href="structospf__packet.html#a37ac8ced9627ad1a210e214aa94cc2e7">dst</a> = nbr-&gt;address.u.prefix4;

  <span class="comment">/* Add packet to the interface output queue. */</span>
  <a class="code" href="ospf__packet_8c.html#ac55f65cc4d651ee73476c4eb974ce055">ospf_packet_add</a> (oi, op);

  <span class="comment">/* Hook thread to write packet. */</span>
  <a class="code" href="ospf__ism_8h.html#acd2a285495892c5423a0c4894c43ce94">OSPF_ISM_WRITE_ON</a> (oi-&gt;<a class="code" href="structospf__interface.html#a159ae1c542016fc78f68c3e39a1b132e">ospf</a>);

  <span class="comment">/* Add Link State Request Retransmission Timer. */</span>
  <a class="code" href="ospf__nsm_8h.html#a13172a390c4ab15fea61d66d2c9262d9">OSPF_NSM_TIMER_ON</a> (nbr-&gt;t_ls_req, <a class="code" href="ospf__packet_8c.html#ad3a6a5d5edd50ea50ea23dbc17d4fb0b">ospf_ls_req_timer</a>, nbr-&gt;v_ls_req);
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa5153a7db20ddf4dbae9666b12f5666b"></a><!-- doxytag: member="ospf_packet.h::ospf_ls_retransmit" ref="aa5153a7db20ddf4dbae9666b12f5666b" args="(struct ospf_interface *, struct ospf_lsa *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_ls_retransmit </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__lsa.html">ospf_lsa</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a2375af385f6283629913b25806adb40a"></a><!-- doxytag: member="ospf_packet.h::ospf_ls_upd_send" ref="a2375af385f6283629913b25806adb40a" args="(struct ospf_neighbor *, struct list *, int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_ls_upd_send </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l03418">3418</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
  <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa;
  <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  
  oi = nbr-&gt;oi;

  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.family = AF_INET;
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;
  
  <span class="comment">/* Decide destination address. */</span>
  <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#a45798a2a8b566abd1907f7ae8bc0a2be">OSPF_IFTYPE_VIRTUALLINK</a>)
    <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix = oi-&gt;<a class="code" href="structospf__interface.html#a78d2dfea28a4b72d89b194cf6a94cae1">vl_data</a>-&gt;<a class="code" href="structospf__vl__data.html#a768953a21c852dde111066d860883afb">peer_addr</a>;
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#a7722c258e67d21a5c6f367811664cccb">OSPF_IFTYPE_POINTOPOINT</a>) 
     <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix.s_addr = htonl (<a class="code" href="ospfd_8h.html#a80bda0f2566dc7b64f07a28562cfb2c1">OSPF_ALLSPFROUTERS</a>);
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (flag == <a class="code" href="ospf__packet_8h.html#a040f276a34d92cb9426454753718e81b">OSPF_SEND_PACKET_DIRECT</a>)
     <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix = nbr-&gt;address.u.prefix4;
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a> == <a class="code" href="ospf__ism_8h.html#a7f179a571f4f8e112c0b887f39c87f23">ISM_DR</a> || oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a> == <a class="code" href="ospf__ism_8h.html#a3676782add5a8ecdb86981965ef9f37e">ISM_Backup</a>)
     <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix.s_addr = htonl (<a class="code" href="ospfd_8h.html#a80bda0f2566dc7b64f07a28562cfb2c1">OSPF_ALLSPFROUTERS</a>);
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#aa65cd67781b9573131ead326b8976194">OSPF_IFTYPE_POINTOMULTIPOINT</a>)
     <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix.s_addr = htonl (<a class="code" href="ospfd_8h.html#a80bda0f2566dc7b64f07a28562cfb2c1">OSPF_ALLSPFROUTERS</a>);
  <span class="keywordflow">else</span>
     <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix.s_addr = htonl (<a class="code" href="ospfd_8h.html#a8ba5ca00e358c35a32b660dc87e4b7cd">OSPF_ALLDROUTERS</a>);

  <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#abf2c650e64355936c071432d92dd5ecb">OSPF_IFTYPE_NBMA</a>)
    {
      <span class="keywordflow">if</span> (flag == <a class="code" href="ospf__packet_8h.html#a76f6e5970f4cddaa077a801063a4c0ef">OSPF_SEND_PACKET_INDIRECT</a>)
    <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;* LS-Update is directly sent on NBMA network.&quot;</span>);
      <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a>(&amp;oi-&gt;<a class="code" href="structospf__interface.html#a43493bc2b5d951e3e38ace850332eca1">address</a>-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>, &amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix.s_addr))
    <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;* LS-Update is sent to myself.&quot;</span>);
    }

  rn = <a class="code" href="table_8c.html#ac91fdff1a0b8dc3d60ebaf152caa0f80">route_node_get</a> (oi-&gt;<a class="code" href="structospf__interface.html#a7f9d43bd1c8bf02254ac9b17be826615">ls_upd_queue</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>);

  <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (update, node, lsa))
    <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>, <a class="code" href="ospf__lsa_8c.html#a312850eed27e83bb9f66d27bb5bfb144">ospf_lsa_lock</a> (lsa)); <span class="comment">/* oi-&gt;ls_upd_queue */</span>

  <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#a29691bed1e0be212206bff3f4d0fc8dd">t_ls_upd_event</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    oi-&gt;<a class="code" href="structospf__interface.html#a29691bed1e0be212206bff3f4d0fc8dd">t_ls_upd_event</a> =
      <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf__packet_8c.html#a290998f889abb3e0de6f5d242d763090">ospf_ls_upd_send_queue_event</a>, oi, 0);
}
</pre></div>
</div>
</div>
<a class="anchor" id="adc5da1b60477e64c8997d798ef6ac03b"></a><!-- doxytag: member="ospf_packet.h::ospf_ls_upd_send_lsa" ref="adc5da1b60477e64c8997d798ef6ac03b" args="(struct ospf_neighbor *, struct ospf_lsa *, int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_ls_upd_send_lsa </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__lsa.html">ospf_lsa</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l03244">3244</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *update;

  update = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();

  <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (update, lsa);
  <a class="code" href="ospf__packet_8c.html#a7af98d8a4ccc0fc5777ae1b8512d7cbd">ospf_ls_upd_send</a> (nbr, update, flag);

  <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (update);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4555a9430dac3f5bc627b2e3dff05b90"></a><!-- doxytag: member="ospf_packet.h::ospf_ls_upd_timer" ref="a4555a9430dac3f5bc627b2e3dff05b90" args="(struct thread *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_ls_upd_timer </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l00415">415</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr;

  nbr = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (<a class="code" href="structthread.html">thread</a>);
  nbr-&gt;<a class="code" href="structospf__neighbor.html#a4529c944b245441aa81008b12d5331d1">t_ls_upd</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="comment">/* Send Link State Update. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="ospf__flood_8c.html#a9fc5f626cdb9afa119113fb7a8b9daf2">ospf_ls_retransmit_count</a> (nbr) &gt; 0)
    {
      <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *update;
      <span class="keyword">struct </span><a class="code" href="structospf__lsdb.html">ospf_lsdb</a> *lsdb;
      <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
      <span class="keywordtype">int</span> retransmit_interval;

      retransmit_interval = <a class="code" href="ospf__interface_8h.html#a3082a40385804021e56001ea2bc5bdb1">OSPF_IF_PARAM</a> (nbr-&gt;<a class="code" href="structospf__neighbor.html#a24eabbd825aa53aba5343ae2d5ea7233">oi</a>, retransmit_interval);

      lsdb = &amp;nbr-&gt;<a class="code" href="structospf__neighbor.html#aaab4ea26de244d322ac4c82abb4defab">ls_rxmt</a>;
      update = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();

      <span class="keywordflow">for</span> (i = <a class="code" href="ospf__lsa_8h.html#a28f56e6e5dedc2dd8223832a029e18b1">OSPF_MIN_LSA</a>; i &lt; <a class="code" href="ospf__lsa_8h.html#a3e45213a5a73c9e6ca277573059d1fbc">OSPF_MAX_LSA</a>; i++)
    {
      <span class="keyword">struct </span><a class="code" href="structroute__table.html">route_table</a> *table = lsdb-&gt;<a class="code" href="structospf__lsdb.html#a0af6d8740509eb2ed0ad1aa9c6599d56">type</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].<a class="code" href="structospf__lsdb.html#ac02ad39566534869219d3e9d942bf565">db</a>;
      <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
      
      <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (table); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
        {
          <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa;
          
          <span class="keywordflow">if</span> ((lsa = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
        <span class="comment">/* Don&#39;t retransmit an LSA if we received it within</span>
<span class="comment">          the last RxmtInterval seconds - this is to allow the</span>
<span class="comment">          neighbour a chance to acknowledge the LSA as it may</span>
<span class="comment">          have ben just received before the retransmit timer</span>
<span class="comment">          fired.  This is a small tweak to what is in the RFC,</span>
<span class="comment">          but it will cut out out a lot of retransmit traffic</span>
<span class="comment">          - MAG */</span>
        <span class="keywordflow">if</span> (<a class="code" href="ospf__lsa_8c.html#a5ba57790910a88ececacfd1d3f69538c">tv_cmp</a> (<a class="code" href="ospf__lsa_8c.html#aaa9daa06f817fbcc8ff12657aeb5996c">tv_sub</a> (<a class="code" href="thread_8c.html#a010d58e49a3c74ae856d5cd111f7eb62">recent_relative_time</a> (), lsa-&gt;<a class="code" href="structospf__lsa.html#a2bd331d17d54cdfcec251473668346da">tv_recv</a>), 
                <a class="code" href="ospf__lsa_8c.html#a2543635ecb435d64f2b40f9cfdf75fc5">int2tv</a> (retransmit_interval)) &gt;= 0)
          <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (update, rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>);
        }
    }

      <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (update) &gt; 0)
    <a class="code" href="ospf__packet_8c.html#a7af98d8a4ccc0fc5777ae1b8512d7cbd">ospf_ls_upd_send</a> (nbr, update, <a class="code" href="ospf__packet_8h.html#a040f276a34d92cb9426454753718e81b">OSPF_SEND_PACKET_DIRECT</a>);
      <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (update);
    }

  <span class="comment">/* Set LS Update retransmission timer. */</span>
  <a class="code" href="ospf__nsm_8h.html#a13172a390c4ab15fea61d66d2c9262d9">OSPF_NSM_TIMER_ON</a> (nbr-&gt;<a class="code" href="structospf__neighbor.html#a4529c944b245441aa81008b12d5331d1">t_ls_upd</a>, <a class="code" href="ospf__packet_8c.html#a6ddfa710e48ff5c20abef26d78456ceb">ospf_ls_upd_timer</a>, nbr-&gt;<a class="code" href="structospf__neighbor.html#aae25ef8d8903b3aecf90a95b4c5c7bc3">v_ls_upd</a>);

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af00ce30dbcd842fbc2da3af8d0f3084c"></a><!-- doxytag: member="ospf_packet.h::ospf_output_forward" ref="af00ce30dbcd842fbc2da3af8d0f3084c" args="(struct stream *, int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_output_forward </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structstream.html">stream</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a28983be848524bf2b196d0de680d4586"></a><!-- doxytag: member="ospf_packet.h::ospf_packet_add" ref="a28983be848524bf2b196d0de680d4586" args="(struct ospf_interface *, struct ospf_packet *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_packet_add </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__packet.html">ospf_packet</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l00182">182</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (!oi-&gt;obuf)
    {
      <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a>(<span class="stringliteral">&quot;ospf_packet_add(interface %s in state %d [%s], packet type %s, &quot;</span>
           <span class="stringliteral">&quot;destination %s) called with NULL obuf, ignoring &quot;</span>
           <span class="stringliteral">&quot;(please report this bug)!\n&quot;</span>,
           <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a>(oi), oi-&gt;state, <a class="code" href="log_8h.html#a3a4b1cad85aa6752f39580944e24a868">LOOKUP</a> (<a class="code" href="ospf__dump_8c.html#ae4c65baac757ab6ffaaf05421dd53b3a">ospf_ism_state_msg</a>, oi-&gt;state),
           <a class="code" href="ospf__dump_8h.html#a6dfce52e3c137fbfe9187f7055c5f455">ospf_packet_type_str</a>[<a class="code" href="stream_8c.html#af7a4ed58eb43625677649eb111f52feb">stream_getc_from</a>(op-&gt;s, 1)],
           inet_ntoa (op-&gt;dst));
      <span class="keywordflow">return</span>;
    }

  <span class="comment">/* Add packet to end of queue. */</span>
  <a class="code" href="ospf__packet_8c.html#adaf7d3e4a58a34bfb30e25c1a8aef630">ospf_fifo_push</a> (oi-&gt;obuf, op);

  <span class="comment">/* Debug of packet fifo*/</span>
  <span class="comment">/* ospf_fifo_debug (oi-&gt;obuf); */</span>
}
</pre></div>
</div>
</div>
<a class="anchor" id="a2ed90742bf57be56a168cd0876f3efd7"></a><!-- doxytag: member="ospf_packet.h::ospf_packet_delete" ref="a2ed90742bf57be56a168cd0876f3efd7" args="(struct ospf_interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_packet_delete </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l00203">203</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__packet.html">ospf_packet</a> *op;
  
  op = <a class="code" href="ospf__packet_8c.html#a2ca85facdb171109c0be3d1e4948f193">ospf_fifo_pop</a> (oi-&gt;obuf);

  <span class="keywordflow">if</span> (op)
    <a class="code" href="ospf__packet_8c.html#a809c1e09677b5aaee9ed0c336a04a4c6">ospf_packet_free</a> (op);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a69220479be88620cdc940960e0c3373c"></a><!-- doxytag: member="ospf_packet.h::ospf_packet_dup" ref="a69220479be88620cdc940960e0c3373c" args="(struct ospf_packet *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__packet.html">ospf_packet</a>* ospf_packet_dup </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__packet.html">ospf_packet</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l00214">214</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__packet.html">ospf_packet</a> *<span class="keyword">new</span>;

  <span class="keywordflow">if</span> (<a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a>(op-&gt;s) != op-&gt;length)
    <span class="comment">/* XXX size_t */</span>
    <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;ospf_packet_dup stream %lu ospf_packet %u size mismatch&quot;</span>,
           (u_long)<a class="code" href="stream_8h.html#a6e3b6e25ed5cfa2faea8485414a0c1a4">STREAM_SIZE</a>(op-&gt;s), op-&gt;length);

  <span class="comment">/* Reserve space for MD5 authentication that may be added later. */</span>
  <span class="keyword">new</span> = <a class="code" href="ospf__packet_8c.html#aa2f83b94a7be3ca5a93f9fa65dfe1bc1">ospf_packet_new</a> (<a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a>(op-&gt;s) + <a class="code" href="ospf__packet_8h.html#a4361f27185f8d7ea61101c3033a85952">OSPF_AUTH_MD5_SIZE</a>);
  <a class="code" href="stream_8c.html#a53dd7429b44228c374706fdc5e35c6ae">stream_copy</a> (new-&gt;s, op-&gt;s);

  <span class="keyword">new</span>-&gt;dst = op-&gt;dst;
  <span class="keyword">new</span>-&gt;length = op-&gt;length;

  <span class="keywordflow">return</span> <span class="keyword">new</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="adc1e7a8e7ced436f0406748974f177f5"></a><!-- doxytag: member="ospf_packet.h::ospf_packet_free" ref="adc1e7a8e7ced436f0406748974f177f5" args="(struct ospf_packet *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_packet_free </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__packet.html">ospf_packet</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l00095">95</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (op-&gt;s)
    <a class="code" href="stream_8c.html#ac25ca0f9b32a76b4ea34ecb3c9d62481">stream_free</a> (op-&gt;s);

  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba7f031d26c73e93b89739ca73e4adf6fc">MTYPE_OSPF_PACKET</a>, op);

  op = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3b4d356cc16f9c8e196c87aa0fea9678"></a><!-- doxytag: member="ospf_packet.h::ospf_packet_new" ref="a3b4d356cc16f9c8e196c87aa0fea9678" args="(size_t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__packet.html">ospf_packet</a>* ospf_packet_new </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l00084">84</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__packet.html">ospf_packet</a> *<span class="keyword">new</span>;

  <span class="keyword">new</span> = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba7f031d26c73e93b89739ca73e4adf6fc">MTYPE_OSPF_PACKET</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structospf__packet.html">ospf_packet</a>));
  <span class="keyword">new</span>-&gt;s = <a class="code" href="stream_8c.html#a7117cdad9fa5e5ae633e0cf08d047459">stream_new</a> (size);

  <span class="keywordflow">return</span> <span class="keyword">new</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af15f4380467064446745acb56e631216"></a><!-- doxytag: member="ospf_packet.h::ospf_poll_timer" ref="af15f4380467064446745acb56e631216" args="(struct thread *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_poll_timer </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l03016">3016</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma;

  nbr_nbma = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (<a class="code" href="structthread.html">thread</a>);
  nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a9aa6dd806f5903f6a4ded3ee4ca26e29">t_poll</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (nsm, NSM_TIMERS))
    <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_DEBUG, <span class="stringliteral">&quot;NSM[%s:%s]: Timer (Poll timer expire)&quot;</span>,
    <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a501752990df8f83d0efae32fbb9dead9">oi</a>), inet_ntoa (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a5fc2a7f849288ef91acc9c055a934fe8">addr</a>));

  <a class="code" href="ospf__packet_8c.html#a627151062fdddeffcc2a5fb420518f1e">ospf_poll_send</a> (nbr_nbma);

  <span class="keywordflow">if</span> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#ac2f40d497fd994774eaa662ba7a45f9d">v_poll</a> &gt; 0)
    <a class="code" href="ospfd_8h.html#ac2416fe7bfb9581d7d9c05b7326be6c1">OSPF_POLL_TIMER_ON</a> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a9aa6dd806f5903f6a4ded3ee4ca26e29">t_poll</a>, <a class="code" href="ospf__packet_8c.html#a2232cdce5e30b12f8f9d29a49952b8f8">ospf_poll_timer</a>,
            nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#ac2f40d497fd994774eaa662ba7a45f9d">v_poll</a>);

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3bbbd5584ef93691fbd0b1e22e8a08ae"></a><!-- doxytag: member="ospf_packet.h::ospf_read" ref="a3bbbd5584ef93691fbd0b1e22e8a08ae" args="(struct thread *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_read </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__packet_8c_source.html#l02319">2319</a> of file <a class="el" href="ospf__packet_8c_source.html">ospf_packet.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret;
  <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *ibuf;
  <span class="keyword">struct </span><a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>;
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
  <span class="keyword">struct </span><a class="code" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> *iph;
  <span class="keyword">struct </span><a class="code" href="structospf__header.html">ospf_header</a> *ospfh;
  u_int16_t <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;

  <span class="comment">/* first of all get interface pointer. */</span>
  ospf = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (<a class="code" href="structthread.html">thread</a>);

  <span class="comment">/* prepare for next packet. */</span>
  ospf-&gt;<a class="code" href="structospf.html#ace995e4406c0eab0fcbe9353107e06f6">t_read</a> = <a class="code" href="thread_8h.html#abd1714f11834a150c84b040c0c69b620">thread_add_read</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf__packet_8c.html#a6327e5b8ab0bf00617153a9e6225ec2b">ospf_read</a>, ospf, ospf-&gt;<a class="code" href="structospf.html#a13100b27c547a3ba3572908aa24259c5">fd</a>);

  <span class="comment">/* read OSPF packet. */</span>
  <a class="code" href="stream_8c.html#aee8fd31485ebc2f0a556a6a5d5c2d1e6">stream_reset</a>(ospf-&gt;<a class="code" href="structospf.html#a43a02c52efc45fdd5a775688aed3d66b">ibuf</a>);
  <span class="keywordflow">if</span> (!(ibuf = <a class="code" href="ospf__packet_8c.html#a08b17df5a285620f9ceb7bebbec51067">ospf_recv_packet</a> (ospf-&gt;<a class="code" href="structospf.html#a13100b27c547a3ba3572908aa24259c5">fd</a>, &amp;ifp, ospf-&gt;<a class="code" href="structospf.html#a43a02c52efc45fdd5a775688aed3d66b">ibuf</a>)))
    <span class="keywordflow">return</span> -1;
  
  <span class="comment">/* Note that there should not be alignment problems with this assignment</span>
<span class="comment">     because this is at the beginning of the stream data buffer. */</span>
  iph = (<span class="keyword">struct </span><a class="code" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> *) <a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (ibuf);
  <span class="comment">/* Note that sockopt_iphdrincl_swab_systoh was called in ospf_recv_packet. */</span>

  <span class="keywordflow">if</span> (ifp == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="comment">/* Handle cases where the platform does not support retrieving the ifindex,</span>
<span class="comment">       and also platforms (such as Solaris 8) that claim to support ifindex</span>
<span class="comment">       retrieval but do not. */</span>
    ifp = <a class="code" href="if_8c.html#a84f550f6181fac06214b71b6408fc8db">if_lookup_address</a> (iph-&gt;ip_src);
  
  <span class="keywordflow">if</span> (ifp == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> 0;

  <span class="comment">/* IP Header dump. */</span>
    <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a50782c413033fa4a13d47121831e0ab1">IS_DEBUG_OSPF_PACKET</a>(0, <a class="code" href="bgp__debug_8h.html#a5c3976553336476b6fea4108b844ecf2">RECV</a>))
        <a class="code" href="ospf__dump_8c.html#adedd77798f087b36b611a6a13aa6e9a8">ospf_ip_header_dump</a> (iph);

  <span class="comment">/* Self-originated packet should be discarded silently. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="ospf__interface_8c.html#ab6de66b3bd1fb23d3469ecf70210d280">ospf_if_lookup_by_local_addr</a> (ospf, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, iph-&gt;ip_src))
    {
      <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a50782c413033fa4a13d47121831e0ab1">IS_DEBUG_OSPF_PACKET</a> (0, <a class="code" href="bgp__debug_8h.html#a5c3976553336476b6fea4108b844ecf2">RECV</a>))
        {
          <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_read[%s]: Dropping self-originated packet&quot;</span>,
                     inet_ntoa (iph-&gt;ip_src));
        }
      <span class="keywordflow">return</span> 0;
    }

  <span class="comment">/* Adjust size to message length. */</span>
  <a class="code" href="stream_8c.html#a1deb508ba8ee96eeea12f1b690373260">stream_forward_getp</a> (ibuf, iph-&gt;ip_hl * 4);
  
  <span class="comment">/* Get ospf packet header. */</span>
  ospfh = (<span class="keyword">struct </span><a class="code" href="structospf__header.html">ospf_header</a> *) <a class="code" href="stream_8h.html#a4bb95ef1391c2b8b7b97678a5ad87cb7">STREAM_PNT</a> (ibuf);

  <span class="comment">/* associate packet with ospf interface */</span>
  oi = <a class="code" href="ospf__interface_8c.html#a4e3a74bf97746313364b81e1a272e028">ospf_if_lookup_recv_if</a> (ospf, iph-&gt;ip_src, ifp);

  <span class="comment">/* If incoming interface is passive one, ignore it. */</span>
  <span class="keywordflow">if</span> (oi &amp;&amp; <a class="code" href="ospf__interface_8h.html#abe2e84be7bf9a73954a72fa5fbb728db">OSPF_IF_PASSIVE_STATUS</a> (oi) == <a class="code" href="ospf__interface_8h.html#a68e4f61453d94a303183c773f0d02a27">OSPF_IF_PASSIVE</a>)
    {
      <span class="keywordtype">char</span> buf[3][<a class="code" href="prefix_8h.html#a93b37007689284fd9c4bde1a8f4b9199">INET_ADDRSTRLEN</a>];

      <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ignoring packet from router %s sent to %s, &quot;</span>
            <span class="stringliteral">&quot;received on a passive interface, %s&quot;</span>,
            <a class="code" href="sockunion_8c.html#a5bfb767e8fa3f9ff5d2a1e19d71791f4">inet_ntop</a>(AF_INET, &amp;ospfh-&gt;<a class="code" href="structospf__header.html#a412ee04aed6f3918a5a7351d3d23f4a0">router_id</a>, buf[0], <span class="keyword">sizeof</span>(buf[0])),
            <a class="code" href="sockunion_8c.html#a5bfb767e8fa3f9ff5d2a1e19d71791f4">inet_ntop</a>(AF_INET, &amp;iph-&gt;ip_dst, buf[1], <span class="keyword">sizeof</span>(buf[1])),
            <a class="code" href="sockunion_8c.html#a5bfb767e8fa3f9ff5d2a1e19d71791f4">inet_ntop</a>(AF_INET, &amp;oi-&gt;<a class="code" href="structospf__interface.html#a43493bc2b5d951e3e38ace850332eca1">address</a>-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>,
                  buf[2], <span class="keyword">sizeof</span>(buf[2])));

      <span class="keywordflow">if</span> (iph-&gt;ip_dst.s_addr == htonl(<a class="code" href="ospfd_8h.html#a80bda0f2566dc7b64f07a28562cfb2c1">OSPF_ALLSPFROUTERS</a>))
    {
      <span class="comment">/* Try to fix multicast membership.</span>
<span class="comment">       * Some OS:es may have problems in this area,</span>
<span class="comment">       * make sure it is removed.</span>
<span class="comment">       */</span>
      <a class="code" href="ospf__interface_8h.html#a1ca2c1bc3588bb126c3856c2b70b86bb">OI_MEMBER_JOINED</a>(oi, <a class="code" href="ospf__interface_8h.html#a157d5577a5b2f5986037d0d09c7dc77da1a4c3684ddae56a371d771435185fbc9">MEMBER_ALLROUTERS</a>);
      <a class="code" href="ospf__interface_8c.html#a4d1ed1c93fa9a91e2461470344b8a977">ospf_if_set_multicast</a>(oi);
    }
      <span class="keywordflow">return</span> 0;
  }


  <span class="comment">/* if no local ospf_interface, </span>
<span class="comment">   * or header area is backbone but ospf_interface is not</span>
<span class="comment">   * check for VLINK interface</span>
<span class="comment">   */</span>
  <span class="keywordflow">if</span> ( (oi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) ||
      (<a class="code" href="ospfd_8h.html#a3c9df8914219b5ad5aa165ecc3428ae0">OSPF_IS_AREA_ID_BACKBONE</a>(ospfh-&gt;<a class="code" href="structospf__header.html#abc28c3f03a35afd1da498979dd99bc6d">area_id</a>)
      &amp;&amp; !<a class="code" href="ospfd_8h.html#a3c9df8914219b5ad5aa165ecc3428ae0">OSPF_IS_AREA_ID_BACKBONE</a>(oi-&gt;<a class="code" href="structospf__interface.html#a7a0df59739f1ffa31ab75ff4b9bbcd95">area</a>-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>))
     )
    {
      <span class="keywordflow">if</span> ((oi = <a class="code" href="ospf__packet_8c.html#a4249d88bd6e928079bc596afedc8b4bb">ospf_associate_packet_vl</a> (ospf, ifp, iph, ospfh)) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
        {
          <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
            <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Packet from [%s] received on link %s&quot;</span>
                        <span class="stringliteral">&quot; but no ospf_interface&quot;</span>,
                        inet_ntoa (iph-&gt;ip_src), ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
          <span class="keywordflow">return</span> 0;
        }
    }

  <span class="comment">/* else it must be a local ospf interface, check it was received on </span>
<span class="comment">   * correct link </span>
<span class="comment">   */</span>
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a> != ifp)
    {
      <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
        <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;Packet from [%s] received on wrong link %s&quot;</span>,
                   inet_ntoa (iph-&gt;ip_src), ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>); 
      <span class="keywordflow">return</span> 0;
    }
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a> == <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a>)
    {
      <span class="keywordtype">char</span> buf[2][<a class="code" href="prefix_8h.html#a93b37007689284fd9c4bde1a8f4b9199">INET_ADDRSTRLEN</a>];
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;Ignoring packet from %s to %s received on interface that is &quot;</span>
             <span class="stringliteral">&quot;down [%s]; interface flags are %s&quot;</span>,
         <a class="code" href="sockunion_8c.html#a5bfb767e8fa3f9ff5d2a1e19d71791f4">inet_ntop</a>(AF_INET, &amp;iph-&gt;ip_src, buf[0], <span class="keyword">sizeof</span>(buf[0])),
         <a class="code" href="sockunion_8c.html#a5bfb767e8fa3f9ff5d2a1e19d71791f4">inet_ntop</a>(AF_INET, &amp;iph-&gt;ip_dst, buf[1], <span class="keyword">sizeof</span>(buf[1])),
             ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, <a class="code" href="if_8c.html#a75d5485663b09e8a83a1d79d67d5ea39">if_flag_dump</a>(ifp-&gt;<a class="code" href="structinterface.html#a09ed96b900f31d769a76a32b67217c8f">flags</a>));
      <span class="comment">/* Fix multicast memberships? */</span>
      <span class="keywordflow">if</span> (iph-&gt;ip_dst.s_addr == htonl(<a class="code" href="ospfd_8h.html#a80bda0f2566dc7b64f07a28562cfb2c1">OSPF_ALLSPFROUTERS</a>))
        <a class="code" href="ospf__interface_8h.html#a1ca2c1bc3588bb126c3856c2b70b86bb">OI_MEMBER_JOINED</a>(oi, <a class="code" href="ospf__interface_8h.html#a157d5577a5b2f5986037d0d09c7dc77da1a4c3684ddae56a371d771435185fbc9">MEMBER_ALLROUTERS</a>);
      <span class="keywordflow">else</span> <span class="keywordflow">if</span> (iph-&gt;ip_dst.s_addr == htonl(<a class="code" href="ospfd_8h.html#a8ba5ca00e358c35a32b660dc87e4b7cd">OSPF_ALLDROUTERS</a>))
    <a class="code" href="ospf__interface_8h.html#a1ca2c1bc3588bb126c3856c2b70b86bb">OI_MEMBER_JOINED</a>(oi, <a class="code" href="ospf__interface_8h.html#a157d5577a5b2f5986037d0d09c7dc77da9147ef980218375b970ea2ffe3ca013b">MEMBER_DROUTERS</a>);
      <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#ae55fb42c5b5096720016b8c586d35339">multicast_memberships</a>)
    <a class="code" href="ospf__interface_8c.html#a4d1ed1c93fa9a91e2461470344b8a977">ospf_if_set_multicast</a>(oi);
      <span class="keywordflow">return</span> 0;
    }

  <span class="comment">/*</span>
<span class="comment">   * If the received packet is destined for AllDRouters, the packet</span>
<span class="comment">   * should be accepted only if the received ospf interface state is</span>
<span class="comment">   * either DR or Backup -- endo.</span>
<span class="comment">   */</span>
  <span class="keywordflow">if</span> (iph-&gt;ip_dst.s_addr == htonl (<a class="code" href="ospfd_8h.html#a8ba5ca00e358c35a32b660dc87e4b7cd">OSPF_ALLDROUTERS</a>)
  &amp;&amp; (oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a> != <a class="code" href="ospf__ism_8h.html#a7f179a571f4f8e112c0b887f39c87f23">ISM_DR</a> &amp;&amp; oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a> != <a class="code" href="ospf__ism_8h.html#a3676782add5a8ecdb86981965ef9f37e">ISM_Backup</a>))
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;Dropping packet for AllDRouters from [%s] via [%s] (ISM: %s)&quot;</span>,
                 inet_ntoa (iph-&gt;ip_src), <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (oi),
                 <a class="code" href="log_8h.html#a3a4b1cad85aa6752f39580944e24a868">LOOKUP</a> (<a class="code" href="ospf__dump_8c.html#ae4c65baac757ab6ffaaf05421dd53b3a">ospf_ism_state_msg</a>, oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a>));
      <span class="comment">/* Try to fix multicast membership. */</span>
      <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a>(oi-&gt;<a class="code" href="structospf__interface.html#ae55fb42c5b5096720016b8c586d35339">multicast_memberships</a>, <a class="code" href="ospf__interface_8h.html#a157d5577a5b2f5986037d0d09c7dc77da9147ef980218375b970ea2ffe3ca013b">MEMBER_DROUTERS</a>);
      <a class="code" href="ospf__interface_8c.html#a4d1ed1c93fa9a91e2461470344b8a977">ospf_if_set_multicast</a>(oi);
      <span class="keywordflow">return</span> 0;
    }

  <span class="comment">/* Show debug receiving packet. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a50782c413033fa4a13d47121831e0ab1">IS_DEBUG_OSPF_PACKET</a> (ospfh-&gt;<a class="code" href="structospf__header.html#a2f832538a5f930a155b8f4981284ffe1">type</a> - 1, <a class="code" href="bgp__debug_8h.html#a5c3976553336476b6fea4108b844ecf2">RECV</a>))
    {
      <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a50782c413033fa4a13d47121831e0ab1">IS_DEBUG_OSPF_PACKET</a> (ospfh-&gt;<a class="code" href="structospf__header.html#a2f832538a5f930a155b8f4981284ffe1">type</a> - 1, <a class="code" href="bgp__debug_8h.html#a7c5b2b199cc1d0b7645bc3c7c234fd3a">DETAIL</a>))
        {
          <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;-----------------------------------------------------&quot;</span>);
          <a class="code" href="ospf__dump_8c.html#a461bc2850902bd555113ddfc8fea4611">ospf_packet_dump</a> (ibuf);
        }

      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s received from [%s] via [%s]&quot;</span>,
                 <a class="code" href="ospf__dump_8h.html#a6dfce52e3c137fbfe9187f7055c5f455">ospf_packet_type_str</a>[ospfh-&gt;<a class="code" href="structospf__header.html#a2f832538a5f930a155b8f4981284ffe1">type</a>],
                 inet_ntoa (ospfh-&gt;<a class="code" href="structospf__header.html#a412ee04aed6f3918a5a7351d3d23f4a0">router_id</a>), <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (oi));
      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot; src [%s],&quot;</span>, inet_ntoa (iph-&gt;ip_src));
      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot; dst [%s]&quot;</span>, inet_ntoa (iph-&gt;ip_dst));

      <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a50782c413033fa4a13d47121831e0ab1">IS_DEBUG_OSPF_PACKET</a> (ospfh-&gt;<a class="code" href="structospf__header.html#a2f832538a5f930a155b8f4981284ffe1">type</a> - 1, <a class="code" href="bgp__debug_8h.html#a7c5b2b199cc1d0b7645bc3c7c234fd3a">DETAIL</a>))
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;-----------------------------------------------------&quot;</span>);
  }

  <span class="comment">/* Some header verification. */</span>
  ret = <a class="code" href="ospf__packet_8c.html#afa26be342bd698a0c5463eb6a8c09a8b">ospf_verify_header</a> (ibuf, oi, iph, ospfh);
  <span class="keywordflow">if</span> (ret &lt; 0)
    {
      <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a50782c413033fa4a13d47121831e0ab1">IS_DEBUG_OSPF_PACKET</a> (ospfh-&gt;<a class="code" href="structospf__header.html#a2f832538a5f930a155b8f4981284ffe1">type</a> - 1, <a class="code" href="bgp__debug_8h.html#a5c3976553336476b6fea4108b844ecf2">RECV</a>))
        {
          <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_read[%s/%s]: Header check failed, &quot;</span>
                     <span class="stringliteral">&quot;dropping.&quot;</span>,
                     <a class="code" href="ospf__dump_8h.html#a6dfce52e3c137fbfe9187f7055c5f455">ospf_packet_type_str</a>[ospfh-&gt;<a class="code" href="structospf__header.html#a2f832538a5f930a155b8f4981284ffe1">type</a>],
                     inet_ntoa (iph-&gt;ip_src));
        }
      <span class="keywordflow">return</span> ret;
    }

  <a class="code" href="stream_8c.html#a1deb508ba8ee96eeea12f1b690373260">stream_forward_getp</a> (ibuf, <a class="code" href="ospf__packet_8h.html#aa0e82e0da0245541e042fcad8b9a0f2e">OSPF_HEADER_SIZE</a>);

  <span class="comment">/* Adjust size to message length. */</span>
  length = ntohs (ospfh-&gt;<a class="code" href="structospf__header.html#afb005873a7409b826e6e3cdd0260cb19">length</a>) - <a class="code" href="ospf__packet_8h.html#aa0e82e0da0245541e042fcad8b9a0f2e">OSPF_HEADER_SIZE</a>;

  <span class="comment">/* Read rest of the packet and call each sort of packet routine. */</span>
  <span class="keywordflow">switch</span> (ospfh-&gt;<a class="code" href="structospf__header.html#a2f832538a5f930a155b8f4981284ffe1">type</a>)
    {
    <span class="keywordflow">case</span> <a class="code" href="ospf__packet_8h.html#a1fa975559e07a39ee83b194caa6ae56b">OSPF_MSG_HELLO</a>:
      <a class="code" href="ospf__packet_8c.html#afdba0c6658c739d82677daa810522d7f">ospf_hello</a> (iph, ospfh, ibuf, oi, length);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="ospf__packet_8h.html#a367312ccca45c75e90fd72d241fa1628">OSPF_MSG_DB_DESC</a>:
      <a class="code" href="ospf__packet_8c.html#a89b5a1f830849455a41ea97d8278216e">ospf_db_desc</a> (iph, ospfh, ibuf, oi, length);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="ospf__packet_8h.html#a512b62b0a53781cc39bf1e5af29cd87d">OSPF_MSG_LS_REQ</a>:
      <a class="code" href="ospf__packet_8c.html#a67c5af7ccab57522caf7c41782ddf507">ospf_ls_req</a> (iph, ospfh, ibuf, oi, length);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="ospf__packet_8h.html#a2021ef5cd86ec563bffe0a94f3d23a9e">OSPF_MSG_LS_UPD</a>:
      <a class="code" href="ospf__packet_8c.html#ae6d6c24939d4be655119e40f91955c4a">ospf_ls_upd</a> (iph, ospfh, ibuf, oi, length);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="ospf__packet_8h.html#ad9b68de6334b262d7ca66dac18c96f48">OSPF_MSG_LS_ACK</a>:
      <a class="code" href="ospf__packet_8c.html#a09c6622500acd269049149c060ffda75">ospf_ls_ack</a> (iph, ospfh, ibuf, oi, length);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">default</span>:
      <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_WARNING,
        <span class="stringliteral">&quot;interface %s: OSPF packet header type %d is illegal&quot;</span>,
        <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (oi), ospfh-&gt;<a class="code" href="structospf__header.html#a2f832538a5f930a155b8f4981284ffe1">type</a>);
      <span class="keywordflow">break</span>;
    }

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ace1e595688aafad876ace00f3c69dfec"></a><!-- doxytag: member="ospf_packet.h::ospf_stream_dup" ref="ace1e595688aafad876ace00f3c69dfec" args="(struct stream *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structstream.html">stream</a>* ospf_stream_dup </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structstream.html">stream</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="ospf__packet_8h.html">ospf_packet.h</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:30 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
