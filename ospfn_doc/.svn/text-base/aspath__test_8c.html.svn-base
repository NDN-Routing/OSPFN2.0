<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: tests/aspath_test.c File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('aspath__test_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Defines</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">tests/aspath_test.c File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="zebra_8h_source.html">zebra.h</a>&gt;</code><br/>
<code>#include &quot;<a class="el" href="vty_8h_source.html">vty.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="stream_8h_source.html">stream.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="privs_8h_source.html">privs.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="bgpd_8h_source.html">bgpd/bgpd.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="bgp__aspath_8h_source.html">bgpd/bgp_aspath.h</a>&quot;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for aspath_test.c:</div>
<div class="dyncontent">
<div class="center"><img src="aspath__test_8c__incl.png" border="0" usemap="#tests_2aspath__test_8c" alt=""/></div>
<map name="tests_2aspath__test_8c" id="tests_2aspath__test_8c">
<area shape="rect" id="node3" href="zebra_8h.html" title="zebra.h" alt="" coords="1345,80,1412,107"/><area shape="rect" id="node61" href="vty_8h.html" title="vty.h" alt="" coords="2809,80,2860,107"/><area shape="rect" id="node68" href="stream_8h.html" title="stream.h" alt="" coords="2885,80,2960,107"/><area shape="rect" id="node74" href="privs_8h.html" title="privs.h" alt="" coords="2985,80,3047,107"/><area shape="rect" id="node76" href="bgpd_8h.html" title="bgpd/bgpd.h" alt="" coords="3071,80,3171,107"/><area shape="rect" id="node79" href="bgp__aspath_8h.html" title="bgpd/bgp_aspath.h" alt="" coords="3195,80,3335,107"/><area shape="rect" id="node57" href="zassert_8h.html" title="zassert.h" alt="" coords="2623,155,2700,181"/><area shape="rect" id="node59" href="str_8h.html" title="str.h" alt="" coords="2725,155,2773,181"/><area shape="rect" id="node63" href="thread_8h.html" title="thread.h" alt="" coords="2799,155,2871,181"/><area shape="rect" id="node65" href="log_8h.html" title="log.h" alt="" coords="2895,155,2947,181"/><area shape="rect" id="node70" href="prefix_8h.html" title="prefix.h" alt="" coords="2983,155,3051,181"/><area shape="rect" id="node72" href="sockunion_8h.html" title="sockunion.h" alt="" coords="3015,229,3108,256"/></map>
</div>
</div>
<p><a href="aspath__test_8c_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structtest__spec.html">test_spec</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structtest__segment.html">test_segment</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structtests.html">tests</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structcompare__tests.html">compare_tests</a></td></tr>
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#a7ad4ab58f02912d2bc7e3650291075d6">VT100_RESET</a>&#160;&#160;&#160;&quot;\x1b[0m&quot;</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#a411151080b9459214992a70d32b8d88c">VT100_RED</a>&#160;&#160;&#160;&quot;\x1b[31m&quot;</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#a3a1365446cc4931c92c556bf69ee0e14">VT100_GREEN</a>&#160;&#160;&#160;&quot;\x1b[32m&quot;</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#acf9043eb0733f63a14fb04f9e016f5ea">VT100_YELLOW</a>&#160;&#160;&#160;&quot;\x1b[33m&quot;</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#aba51915c87d64af47fb1cc59348961c9">OK</a>&#160;&#160;&#160;VT100_GREEN &quot;OK&quot; VT100_RESET</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#a681680feae4df4182d532564c42fa1fc">FAILED</a>&#160;&#160;&#160;VT100_RED &quot;failed&quot; VT100_RESET</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>&#160;&#160;&#160;0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#a290f263c8da182c9494f9325c7c2a96f">ALL_PRIVATE</a>&#160;&#160;&#160;1</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#a5b186fff0ea4104d059228ef623bc461">NULL_ASN</a>&#160;&#160;&#160;0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#a20db74eb8b66f06d57b3202db8d9b769">CMP_RES_YES</a>&#160;&#160;&#160;1</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a>&#160;&#160;&#160;0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#a5e9dc8d941f2a9ea3275b87a2db490d9">CMP_TESTS_MAX</a>&#160;&#160;&#160;(sizeof(<a class="el" href="aspath__test_8c.html#ac4902a861de8936a2d35014cc21c1f3a">left_compare</a>) / sizeof (struct <a class="el" href="structcompare__tests.html">compare_tests</a>))</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structaspath.html">aspath</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (const u_char *data, size_t len, int use32bit)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#a9dda9defba22f8bf925582c0c0a00c2a">printbytes</a> (const u_char *bytes, int len)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#a2be8f4ecae883a2b486e6b1cd7bafe73">validate</a> (struct <a class="el" href="structaspath.html">aspath</a> *as, const struct <a class="el" href="structtest__spec.html">test_spec</a> *sp)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#af469fbbb5488f58abd7af612fa7fd558">empty_get_test</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#a281fc4418b741bf17dff0594d83c13f7">parse_test</a> (struct <a class="el" href="structtest__segment.html">test_segment</a> *<a class="el" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#a3620ec4b829b159d7e07477fcb560ff2">prepend_test</a> (struct <a class="el" href="structtests.html">tests</a> *<a class="el" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#a6e4af653066fa0503b0d04545ab5a1c3">empty_prepend_test</a> (struct <a class="el" href="structtest__segment.html">test_segment</a> *<a class="el" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#ae39c18dbcf182cc47306199e3b78d27a">as4_reconcile_test</a> (struct <a class="el" href="structtests.html">tests</a> *<a class="el" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#aa064753241609ff2054f1b997d06670c">aggregate_test</a> (struct <a class="el" href="structtests.html">tests</a> *<a class="el" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#a6f7819438e9edd995b707192ab2920a1">cmp_test</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#a840291bc02cba5474a4cb46a9b9566fe">main</a> (void)</td></tr>
<tr><td colspan="2"><h2><a name="var-members"></a>
Variables</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structzebra__privs__t.html">zebra_privs_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#aedaa2650b5e24bd10ce066e022858877">bgpd_privs</a> = NULL</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structthread__master.html">thread_master</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a> = NULL</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#ad4ec5aab9b62fbbe9b8fc2d8ac0a5989">failed</a> = 0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structtest__segment.html">test_segment</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a> []</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structtests.html">tests</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#abad2f044fa19335311b056f120c477bd">prepend_tests</a> []</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structtests.html">tests</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#a9e351ac640403971252bf832343756d7">reconcile_tests</a> []</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structtests.html">tests</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#a9b85d4110efd0617d6e3af74fc5dffca">aggregate_tests</a> []</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structcompare__tests.html">compare_tests</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="aspath__test_8c.html#ac4902a861de8936a2d35014cc21c1f3a">left_compare</a> []</td></tr>
</table>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="a290f263c8da182c9494f9325c7c2a96f"></a><!-- doxytag: member="aspath_test.c::ALL_PRIVATE" ref="a290f263c8da182c9494f9325c7c2a96f" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ALL_PRIVATE&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00032">32</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>

</div>
</div>
<a class="anchor" id="a4d779c1734a5009c0311792ab92feecb"></a><!-- doxytag: member="aspath_test.c::CMP_RES_NO" ref="a4d779c1734a5009c0311792ab92feecb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CMP_RES_NO&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00611">611</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>

</div>
</div>
<a class="anchor" id="a20db74eb8b66f06d57b3202db8d9b769"></a><!-- doxytag: member="aspath_test.c::CMP_RES_YES" ref="a20db74eb8b66f06d57b3202db8d9b769" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CMP_RES_YES&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00610">610</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>

</div>
</div>
<a class="anchor" id="a5e9dc8d941f2a9ea3275b87a2db490d9"></a><!-- doxytag: member="aspath_test.c::CMP_TESTS_MAX" ref="a5e9dc8d941f2a9ea3275b87a2db490d9" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CMP_TESTS_MAX&#160;&#160;&#160;(sizeof(<a class="el" href="aspath__test_8c.html#ac4902a861de8936a2d35014cc21c1f3a">left_compare</a>) / sizeof (struct <a class="el" href="structcompare__tests.html">compare_tests</a>))</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a681680feae4df4182d532564c42fa1fc"></a><!-- doxytag: member="aspath_test.c::FAILED" ref="a681680feae4df4182d532564c42fa1fc" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FAILED&#160;&#160;&#160;VT100_RED &quot;failed&quot; VT100_RESET</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00015">15</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>

</div>
</div>
<a class="anchor" id="a74aaf5c2b09864e695a5c1e743fa2659"></a><!-- doxytag: member="aspath_test.c::NOT_ALL_PRIVATE" ref="a74aaf5c2b09864e695a5c1e743fa2659" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define NOT_ALL_PRIVATE&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00031">31</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>

</div>
</div>
<a class="anchor" id="a5b186fff0ea4104d059228ef623bc461"></a><!-- doxytag: member="aspath_test.c::NULL_ASN" ref="a5b186fff0ea4104d059228ef623bc461" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define NULL_ASN&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00036">36</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>

</div>
</div>
<a class="anchor" id="aba51915c87d64af47fb1cc59348961c9"></a><!-- doxytag: member="aspath_test.c::OK" ref="aba51915c87d64af47fb1cc59348961c9" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OK&#160;&#160;&#160;VT100_GREEN &quot;OK&quot; VT100_RESET</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00014">14</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>

</div>
</div>
<a class="anchor" id="a3a1365446cc4931c92c556bf69ee0e14"></a><!-- doxytag: member="aspath_test.c::VT100_GREEN" ref="a3a1365446cc4931c92c556bf69ee0e14" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VT100_GREEN&#160;&#160;&#160;&quot;\x1b[32m&quot;</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00012">12</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>

</div>
</div>
<a class="anchor" id="a411151080b9459214992a70d32b8d88c"></a><!-- doxytag: member="aspath_test.c::VT100_RED" ref="a411151080b9459214992a70d32b8d88c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VT100_RED&#160;&#160;&#160;&quot;\x1b[31m&quot;</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00011">11</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>

</div>
</div>
<a class="anchor" id="a7ad4ab58f02912d2bc7e3650291075d6"></a><!-- doxytag: member="aspath_test.c::VT100_RESET" ref="a7ad4ab58f02912d2bc7e3650291075d6" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VT100_RESET&#160;&#160;&#160;&quot;\x1b[0m&quot;</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00010">10</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>

</div>
</div>
<a class="anchor" id="acf9043eb0733f63a14fb04f9e016f5ea"></a><!-- doxytag: member="aspath_test.c::VT100_YELLOW" ref="acf9043eb0733f63a14fb04f9e016f5ea" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VT100_YELLOW&#160;&#160;&#160;&quot;\x1b[33m&quot;</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00013">13</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="aa064753241609ff2054f1b997d06670c"></a><!-- doxytag: member="aspath_test.c::aggregate_test" ref="aa064753241609ff2054f1b997d06670c" args="(struct tests *t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void aggregate_test </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structtests.html">tests</a> *&#160;</td>
          <td class="paramname"><em>t</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00926">926</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *asp1, *asp2, *ascratch;
  
  printf (<span class="stringliteral">&quot;aggregate %s: %s\n&quot;</span>, t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#aafa6de67016b06ae43ef95d9148776ca">name</a>, t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#ae7e9205b13ccc44263f7a42847bef847">desc</a>);
  printf (<span class="stringliteral">&quot;with %s: %s\n&quot;</span>, t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#aafa6de67016b06ae43ef95d9148776ca">name</a>, t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#ae7e9205b13ccc44263f7a42847bef847">desc</a>);
  
  asp1 = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#ad2b4899e4219ecf54f65af3640cbd890">asdata</a>, t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#a7508591adaa363fa0f2cda46893fbb6d">len</a>, 0);
  asp2 = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#ad2b4899e4219ecf54f65af3640cbd890">asdata</a>, t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#a7508591adaa363fa0f2cda46893fbb6d">len</a>, 0);
  
  ascratch = <a class="code" href="bgp__aspath_8c.html#a615342ae906f2fd579780ce7eda4ff6a">aspath_aggregate</a> (asp1, asp2);
  
  <span class="keywordflow">if</span> (!<a class="code" href="aspath__test_8c.html#a2be8f4ecae883a2b486e6b1cd7bafe73">validate</a> (ascratch, &amp;t-&gt;<a class="code" href="structtests.html#a62193cefad2a26922a1db10be65d9644">sp</a>))
    printf (<a class="code" href="aspath__test_8c.html#aba51915c87d64af47fb1cc59348961c9">OK</a> <span class="stringliteral">&quot;\n&quot;</span>);
  <span class="keywordflow">else</span>
    printf (<a class="code" href="aspath__test_8c.html#a681680feae4df4182d532564c42fa1fc">FAILED</a> <span class="stringliteral">&quot;!\n&quot;</span>);
  
  printf (<span class="stringliteral">&quot;\n&quot;</span>);
  <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asp1);
  <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asp2);
  <a class="code" href="bgp__aspath_8c.html#af8db79f3e25ae5a01dfec9070557c21a">aspath_free</a> (ascratch);
<span class="comment">/*  aspath_unintern (ascratch);*/</span>
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae39c18dbcf182cc47306199e3b78d27a"></a><!-- doxytag: member="aspath_test.c::as4_reconcile_test" ref="ae39c18dbcf182cc47306199e3b78d27a" args="(struct tests *t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void as4_reconcile_test </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structtests.html">tests</a> *&#160;</td>
          <td class="paramname"><em>t</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00900">900</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *asp1, *asp2, *ascratch;
  
  printf (<span class="stringliteral">&quot;reconciling %s:\n  %s\n&quot;</span>, t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#aafa6de67016b06ae43ef95d9148776ca">name</a>, t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#ae7e9205b13ccc44263f7a42847bef847">desc</a>);
  printf (<span class="stringliteral">&quot;with %s:\n  %s\n&quot;</span>, t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#aafa6de67016b06ae43ef95d9148776ca">name</a>, t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#ae7e9205b13ccc44263f7a42847bef847">desc</a>);
  
  asp1 = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#ad2b4899e4219ecf54f65af3640cbd890">asdata</a>, t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#a7508591adaa363fa0f2cda46893fbb6d">len</a>, 0);
  asp2 = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#ad2b4899e4219ecf54f65af3640cbd890">asdata</a>, t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#a7508591adaa363fa0f2cda46893fbb6d">len</a>, 0);
  
  ascratch = <a class="code" href="bgp__aspath_8c.html#a1a485a8779fb5fcf0ac2efeb2bdc204d">aspath_reconcile_as4</a> (asp1, asp2);
  
  <span class="keywordflow">if</span> (!<a class="code" href="aspath__test_8c.html#a2be8f4ecae883a2b486e6b1cd7bafe73">validate</a> (ascratch, &amp;t-&gt;<a class="code" href="structtests.html#a62193cefad2a26922a1db10be65d9644">sp</a>))
    printf (<a class="code" href="aspath__test_8c.html#aba51915c87d64af47fb1cc59348961c9">OK</a> <span class="stringliteral">&quot;\n&quot;</span>);
  <span class="keywordflow">else</span>
    printf (<a class="code" href="aspath__test_8c.html#a681680feae4df4182d532564c42fa1fc">FAILED</a> <span class="stringliteral">&quot;!\n&quot;</span>);
  
  printf (<span class="stringliteral">&quot;\n&quot;</span>);
  <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asp1);
  <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asp2);
  <a class="code" href="bgp__aspath_8c.html#af8db79f3e25ae5a01dfec9070557c21a">aspath_free</a> (ascratch);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6f7819438e9edd995b707192ab2920a1"></a><!-- doxytag: member="aspath_test.c::cmp_test" ref="a6f7819438e9edd995b707192ab2920a1" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void cmp_test </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00952">952</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<span class="preprocessor">#define CMP_TESTS_MAX \</span>
<span class="preprocessor">  (sizeof(left_compare) / sizeof (struct compare_tests))</span>
<span class="preprocessor"></span>
  <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="aspath__test_8c.html#a5e9dc8d941f2a9ea3275b87a2db490d9">CMP_TESTS_MAX</a>; i++)
    {
      <span class="keyword">struct </span><a class="code" href="structtest__segment.html">test_segment</a> *t1 = &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[<a class="code" href="aspath__test_8c.html#ac4902a861de8936a2d35014cc21c1f3a">left_compare</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].<a class="code" href="structcompare__tests.html#a41bff5b405b062610fe202513279711b">test_index1</a>];
      <span class="keyword">struct </span><a class="code" href="structtest__segment.html">test_segment</a> *t2 = &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[left_compare[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].test_index2];
      <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *asp1, *asp2;
      
      printf (<span class="stringliteral">&quot;left cmp %s: %s\n&quot;</span>, t1-&gt;<a class="code" href="structtest__segment.html#aafa6de67016b06ae43ef95d9148776ca">name</a>, t1-&gt;<a class="code" href="structtest__segment.html#ae7e9205b13ccc44263f7a42847bef847">desc</a>);
      printf (<span class="stringliteral">&quot;and %s: %s\n&quot;</span>, t2-&gt;<a class="code" href="structtest__segment.html#aafa6de67016b06ae43ef95d9148776ca">name</a>, t2-&gt;<a class="code" href="structtest__segment.html#ae7e9205b13ccc44263f7a42847bef847">desc</a>);
      
      asp1 = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (t1-&gt;<a class="code" href="structtest__segment.html#ad2b4899e4219ecf54f65af3640cbd890">asdata</a>, t1-&gt;<a class="code" href="structtest__segment.html#a7508591adaa363fa0f2cda46893fbb6d">len</a>, 0);
      asp2 = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (t2-&gt;<a class="code" href="structtest__segment.html#ad2b4899e4219ecf54f65af3640cbd890">asdata</a>, t2-&gt;<a class="code" href="structtest__segment.html#a7508591adaa363fa0f2cda46893fbb6d">len</a>, 0);
      
      <span class="keywordflow">if</span> (<a class="code" href="bgp__aspath_8c.html#a5f979a1ff3bc3908684e4592e5c383eb">aspath_cmp_left</a> (asp1, asp2) != left_compare[i].shouldbe_cmp
          || <a class="code" href="bgp__aspath_8c.html#a5f979a1ff3bc3908684e4592e5c383eb">aspath_cmp_left</a> (asp2, asp1) != left_compare[i].shouldbe_cmp
          || <a class="code" href="bgp__aspath_8c.html#ace7eb37e6ea088fb0ea82c9ae4c58375">aspath_cmp_left_confed</a> (asp1, asp2) 
               != left_compare[i].shouldbe_confed
          || <a class="code" href="bgp__aspath_8c.html#ace7eb37e6ea088fb0ea82c9ae4c58375">aspath_cmp_left_confed</a> (asp2, asp1) 
               != left_compare[i].shouldbe_confed)
        {
          <a class="code" href="aspath__test_8c.html#ad4ec5aab9b62fbbe9b8fc2d8ac0a5989">failed</a>++;
          printf (<a class="code" href="aspath__test_8c.html#a681680feae4df4182d532564c42fa1fc">FAILED</a> <span class="stringliteral">&quot;\n&quot;</span>);
          printf (<span class="stringliteral">&quot;result should be: cmp: %d, confed: %d\n&quot;</span>, 
                  left_compare[i].shouldbe_cmp,
                  left_compare[i].shouldbe_confed);
          printf (<span class="stringliteral">&quot;got: cmp %d, cmp_confed: %d\n&quot;</span>,
                  <a class="code" href="bgp__aspath_8c.html#a5f979a1ff3bc3908684e4592e5c383eb">aspath_cmp_left</a> (asp1, asp2),
                  <a class="code" href="bgp__aspath_8c.html#ace7eb37e6ea088fb0ea82c9ae4c58375">aspath_cmp_left_confed</a> (asp1, asp2));
          printf(<span class="stringliteral">&quot;path1: %s\npath2: %s\n&quot;</span>, <a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asp1),
                 <a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asp2));
        }
      <span class="keywordflow">else</span>
        printf (<a class="code" href="aspath__test_8c.html#aba51915c87d64af47fb1cc59348961c9">OK</a> <span class="stringliteral">&quot;\n&quot;</span>);
      
      printf (<span class="stringliteral">&quot;\n&quot;</span>);
      <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asp1);
      <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asp2);
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="af469fbbb5488f58abd7af612fa7fd558"></a><!-- doxytag: member="aspath_test.c::empty_get_test" ref="af469fbbb5488f58abd7af612fa7fd558" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void empty_get_test </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00804">804</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *as = <a class="code" href="bgp__aspath_8c.html#aa737121f7df6f3e64869fc9a6c330b2f">aspath_empty_get</a> ();
  <span class="keyword">struct </span><a class="code" href="structtest__spec.html">test_spec</a> sp = { <span class="stringliteral">&quot;&quot;</span>, <span class="stringliteral">&quot;&quot;</span>, 0, 0, 0, 0, 0, 0 };

  printf (<span class="stringliteral">&quot;empty_get_test, as: %s\n&quot;</span>,<a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (as));
  <span class="keywordflow">if</span> (!<a class="code" href="aspath__test_8c.html#a2be8f4ecae883a2b486e6b1cd7bafe73">validate</a> (as, &amp;sp))
    printf (<span class="stringliteral">&quot;%s\n&quot;</span>, <a class="code" href="aspath__test_8c.html#aba51915c87d64af47fb1cc59348961c9">OK</a>);
  <span class="keywordflow">else</span>
    printf (<span class="stringliteral">&quot;%s!\n&quot;</span>, <a class="code" href="aspath__test_8c.html#a681680feae4df4182d532564c42fa1fc">FAILED</a>);
  
  printf (<span class="stringliteral">&quot;\n&quot;</span>);
  
  <a class="code" href="bgp__aspath_8c.html#af8db79f3e25ae5a01dfec9070557c21a">aspath_free</a> (as);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6e4af653066fa0503b0d04545ab5a1c3"></a><!-- doxytag: member="aspath_test.c::empty_prepend_test" ref="a6e4af653066fa0503b0d04545ab5a1c3" args="(struct test_segment *t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void empty_prepend_test </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structtest__segment.html">test_segment</a> *&#160;</td>
          <td class="paramname"><em>t</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00872">872</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *asp1, *asp2, *ascratch;
  
  printf (<span class="stringliteral">&quot;empty prepend %s: %s\n&quot;</span>, t-&gt;<a class="code" href="structtest__segment.html#aafa6de67016b06ae43ef95d9148776ca">name</a>, t-&gt;<a class="code" href="structtest__segment.html#ae7e9205b13ccc44263f7a42847bef847">desc</a>);
  
  asp1 = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (t-&gt;<a class="code" href="structtest__segment.html#ad2b4899e4219ecf54f65af3640cbd890">asdata</a>, t-&gt;<a class="code" href="structtest__segment.html#a7508591adaa363fa0f2cda46893fbb6d">len</a>, 0);
  asp2 = <a class="code" href="bgp__aspath_8c.html#aadc92a26e3c657307be1c2057b187cda">aspath_empty</a> ();
  
  ascratch = <a class="code" href="bgp__aspath_8c.html#a2de7834df2eead0bfa5a117ce265e6ca">aspath_dup</a> (asp2);
  <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asp2);
  
  asp2 = <a class="code" href="bgp__aspath_8c.html#a042b5a8463ffb3adedffa05e69640726">aspath_prepend</a> (asp1, ascratch);
  
  printf (<span class="stringliteral">&quot;aspath: %s\n&quot;</span>, <a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asp2));
  
  <span class="keywordflow">if</span> (!<a class="code" href="aspath__test_8c.html#a2be8f4ecae883a2b486e6b1cd7bafe73">validate</a> (asp2, &amp;t-&gt;<a class="code" href="structtest__segment.html#a973b8ffe4f03407241c74272624c909f">sp</a>))
    printf (<a class="code" href="aspath__test_8c.html#aba51915c87d64af47fb1cc59348961c9">OK</a> <span class="stringliteral">&quot;\n&quot;</span>);
  <span class="keywordflow">else</span>
    printf (<a class="code" href="aspath__test_8c.html#a681680feae4df4182d532564c42fa1fc">FAILED</a> <span class="stringliteral">&quot;!\n&quot;</span>);
  
  printf (<span class="stringliteral">&quot;\n&quot;</span>);
  <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asp1);
  <a class="code" href="bgp__aspath_8c.html#af8db79f3e25ae5a01dfec9070557c21a">aspath_free</a> (asp2);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a840291bc02cba5474a4cb46a9b9566fe"></a><!-- doxytag: member="aspath_test.c::main" ref="a840291bc02cba5474a4cb46a9b9566fe" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int main </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00998">998</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a> = 0;
  <a class="code" href="bgp__aspath_8c.html#a34b9f56e53531a0e4ceedcb31d59e027">aspath_init</a>();
  <span class="keywordflow">while</span> (<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[i].<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>)
    {
      <a class="code" href="aspath__test_8c.html#a281fc4418b741bf17dff0594d83c13f7">parse_test</a> (&amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[i]);
      <a class="code" href="aspath__test_8c.html#a6e4af653066fa0503b0d04545ab5a1c3">empty_prepend_test</a> (&amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[i++]);
    }
  
  i = 0;
  <span class="keywordflow">while</span> (<a class="code" href="aspath__test_8c.html#abad2f044fa19335311b056f120c477bd">prepend_tests</a>[i].test1)
    <a class="code" href="aspath__test_8c.html#a3620ec4b829b159d7e07477fcb560ff2">prepend_test</a> (&amp;<a class="code" href="aspath__test_8c.html#abad2f044fa19335311b056f120c477bd">prepend_tests</a>[i++]);
  
  i = 0;
  <span class="keywordflow">while</span> (<a class="code" href="aspath__test_8c.html#a9b85d4110efd0617d6e3af74fc5dffca">aggregate_tests</a>[i].test1)
    <a class="code" href="aspath__test_8c.html#aa064753241609ff2054f1b997d06670c">aggregate_test</a> (&amp;<a class="code" href="aspath__test_8c.html#a9b85d4110efd0617d6e3af74fc5dffca">aggregate_tests</a>[i++]);
  
  i = 0;
  
  <span class="keywordflow">while</span> (<a class="code" href="aspath__test_8c.html#a9e351ac640403971252bf832343756d7">reconcile_tests</a>[i].test1)
    <a class="code" href="aspath__test_8c.html#ae39c18dbcf182cc47306199e3b78d27a">as4_reconcile_test</a> (&amp;<a class="code" href="aspath__test_8c.html#a9e351ac640403971252bf832343756d7">reconcile_tests</a>[i++]);
  
  i = 0;
  
  <a class="code" href="aspath__test_8c.html#a6f7819438e9edd995b707192ab2920a1">cmp_test</a>();
  
  i = 0;
  
  <a class="code" href="aspath__test_8c.html#af469fbbb5488f58abd7af612fa7fd558">empty_get_test</a>();
  
  printf (<span class="stringliteral">&quot;failures: %d\n&quot;</span>, <a class="code" href="aspath__test_8c.html#ad4ec5aab9b62fbbe9b8fc2d8ac0a5989">failed</a>);
  printf (<span class="stringliteral">&quot;aspath count: %ld\n&quot;</span>, <a class="code" href="bgp__aspath_8c.html#ad62e86fb815f7395ccd758f5fe5bf2cb">aspath_count</a>());
  
  <span class="keywordflow">return</span> (<a class="code" href="aspath__test_8c.html#ad4ec5aab9b62fbbe9b8fc2d8ac0a5989">failed</a> + <a class="code" href="bgp__aspath_8c.html#ad62e86fb815f7395ccd758f5fe5bf2cb">aspath_count</a>());
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3be07c933aa7e5a32f9d99ebfda58f42"></a><!-- doxytag: member="aspath_test.c::make_aspath" ref="a3be07c933aa7e5a32f9d99ebfda58f42" args="(const u_char *data, size_t len, int use32bit)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static struct <a class="el" href="structaspath.html">aspath</a>* make_aspath </td>
          <td>(</td>
          <td class="paramtype">const u_char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>use32bit</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static, read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00642">642</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *as;
  
  <span class="keywordflow">if</span> (len)
    {
      s = <a class="code" href="stream_8c.html#a7117cdad9fa5e5ae633e0cf08d047459">stream_new</a> (len);
      <a class="code" href="stream_8c.html#a2f540a71efdf46e8c3a923f73e9f3b73">stream_put</a> (s, <a class="code" href="dict_8c.html#a43a278d13284fb3412e9eee1db1d967e">data</a>, len);
    }
  as = <a class="code" href="bgp__aspath_8c.html#ac9e8aff45338b803e560318286e3f2af">aspath_parse</a> (s, len, use32bit, 0);
  
  <span class="keywordflow">if</span> (s)
    <a class="code" href="stream_8c.html#ac25ca0f9b32a76b4ea34ecb3c9d62481">stream_free</a> (s);
  
  <span class="keywordflow">return</span> as;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a281fc4418b741bf17dff0594d83c13f7"></a><!-- doxytag: member="aspath_test.c::parse_test" ref="a281fc4418b741bf17dff0594d83c13f7" args="(struct test_segment *t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void parse_test </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structtest__segment.html">test_segment</a> *&#160;</td>
          <td class="paramname"><em>t</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00822">822</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *asp;
  
  printf (<span class="stringliteral">&quot;%s: %s\n&quot;</span>, t-&gt;<a class="code" href="structtest__segment.html#aafa6de67016b06ae43ef95d9148776ca">name</a>, t-&gt;<a class="code" href="structtest__segment.html#ae7e9205b13ccc44263f7a42847bef847">desc</a>);

  asp = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (t-&gt;<a class="code" href="structtest__segment.html#ad2b4899e4219ecf54f65af3640cbd890">asdata</a>, t-&gt;<a class="code" href="structtest__segment.html#a7508591adaa363fa0f2cda46893fbb6d">len</a>, 0);

  printf (<span class="stringliteral">&quot;aspath: %s\nvalidating...:\n&quot;</span>, <a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asp));

  <span class="keywordflow">if</span> (!<a class="code" href="aspath__test_8c.html#a2be8f4ecae883a2b486e6b1cd7bafe73">validate</a> (asp, &amp;t-&gt;<a class="code" href="structtest__segment.html#a973b8ffe4f03407241c74272624c909f">sp</a>))
    printf (<a class="code" href="aspath__test_8c.html#aba51915c87d64af47fb1cc59348961c9">OK</a> <span class="stringliteral">&quot;\n&quot;</span>);
  <span class="keywordflow">else</span>
    printf (<a class="code" href="aspath__test_8c.html#a681680feae4df4182d532564c42fa1fc">FAILED</a> <span class="stringliteral">&quot;\n&quot;</span>);
  
  printf (<span class="stringliteral">&quot;\n&quot;</span>);
  <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asp);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3620ec4b829b159d7e07477fcb560ff2"></a><!-- doxytag: member="aspath_test.c::prepend_test" ref="a3620ec4b829b159d7e07477fcb560ff2" args="(struct tests *t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void prepend_test </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structtests.html">tests</a> *&#160;</td>
          <td class="paramname"><em>t</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00843">843</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *asp1, *asp2, *ascratch;
  
  printf (<span class="stringliteral">&quot;prepend %s: %s\n&quot;</span>, t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#aafa6de67016b06ae43ef95d9148776ca">name</a>, t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#ae7e9205b13ccc44263f7a42847bef847">desc</a>);
  printf (<span class="stringliteral">&quot;to %s: %s\n&quot;</span>, t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#aafa6de67016b06ae43ef95d9148776ca">name</a>, t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#ae7e9205b13ccc44263f7a42847bef847">desc</a>);
  
  asp1 = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#ad2b4899e4219ecf54f65af3640cbd890">asdata</a>, t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#a7508591adaa363fa0f2cda46893fbb6d">len</a>, 0);
  asp2 = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#ad2b4899e4219ecf54f65af3640cbd890">asdata</a>, t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#a7508591adaa363fa0f2cda46893fbb6d">len</a>, 0);
  
  ascratch = <a class="code" href="bgp__aspath_8c.html#a2de7834df2eead0bfa5a117ce265e6ca">aspath_dup</a> (asp2);
  <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asp2);
  
  asp2 = <a class="code" href="bgp__aspath_8c.html#a042b5a8463ffb3adedffa05e69640726">aspath_prepend</a> (asp1, ascratch);
  
  printf (<span class="stringliteral">&quot;aspath: %s\n&quot;</span>, <a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asp2));
  
  <span class="keywordflow">if</span> (!<a class="code" href="aspath__test_8c.html#a2be8f4ecae883a2b486e6b1cd7bafe73">validate</a> (asp2, &amp;t-&gt;<a class="code" href="structtests.html#a62193cefad2a26922a1db10be65d9644">sp</a>))
    printf (<span class="stringliteral">&quot;%s\n&quot;</span>, <a class="code" href="aspath__test_8c.html#aba51915c87d64af47fb1cc59348961c9">OK</a>);
  <span class="keywordflow">else</span>
    printf (<span class="stringliteral">&quot;%s!\n&quot;</span>, <a class="code" href="aspath__test_8c.html#a681680feae4df4182d532564c42fa1fc">FAILED</a>);
  
  printf (<span class="stringliteral">&quot;\n&quot;</span>);
  <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asp1);
  <a class="code" href="bgp__aspath_8c.html#af8db79f3e25ae5a01dfec9070557c21a">aspath_free</a> (asp2);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9dda9defba22f8bf925582c0c0a00c2a"></a><!-- doxytag: member="aspath_test.c::printbytes" ref="a9dda9defba22f8bf925582c0c0a00c2a" args="(const u_char *bytes, int len)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void printbytes </td>
          <td>(</td>
          <td class="paramtype">const u_char *&#160;</td>
          <td class="paramname"><em>bytes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00661">661</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a> = 0;
  <span class="keywordflow">while</span> (i &lt; len)
    {
      <span class="keywordflow">if</span> (i % 2)
        printf (<span class="stringliteral">&quot;%02hhx%s&quot;</span>, bytes[i], <span class="stringliteral">&quot; &quot;</span>);
      <span class="keywordflow">else</span>
        printf (<span class="stringliteral">&quot;0x%02hhx&quot;</span>, bytes[i]);
      i++;
    }
  printf (<span class="stringliteral">&quot;\n&quot;</span>);
}  
</pre></div>
</div>
</div>
<a class="anchor" id="a2be8f4ecae883a2b486e6b1cd7bafe73"></a><!-- doxytag: member="aspath_test.c::validate" ref="a2be8f4ecae883a2b486e6b1cd7bafe73" args="(struct aspath *as, const struct test_spec *sp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int validate </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structaspath.html">aspath</a> *&#160;</td>
          <td class="paramname"><em>as</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const struct <a class="el" href="structtest__spec.html">test_spec</a> *&#160;</td>
          <td class="paramname"><em>sp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00677">677</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">size_t</span> bytes, bytes4;
  <span class="keywordtype">int</span> fails = 0;
  <span class="keyword">const</span> u_char *out;
  <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>;
  <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *asinout, *asconfeddel, *asstr, *as4;
  
  out = <a class="code" href="bgp__aspath_8c.html#a46008828118eb829c4f5b010175de9ab">aspath_snmp_pathseg</a> (as, &amp;bytes);
  asinout = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (out, bytes, 0);
  
  <span class="comment">/* Excercise AS4 parsing a bit, with a dogfood test */</span>
  <span class="keywordflow">if</span> (!s)
    s = <a class="code" href="stream_8c.html#a7117cdad9fa5e5ae633e0cf08d047459">stream_new</a> (4096);
  bytes4 = <a class="code" href="bgp__aspath_8c.html#a716059e44a39a56b3e05020bec13872e">aspath_put</a> (s, as, 1);
  as4 = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (<a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a>(s), bytes4, 1);
  
  asstr = <a class="code" href="bgp__aspath_8c.html#aa2514807244e353a19d3f48316cc7885">aspath_str2aspath</a> (sp-&gt;<a class="code" href="structtest__spec.html#a2eb0ac4de4590460526ff41c43b664c9">shouldbe</a>);
  
  asconfeddel = <a class="code" href="bgp__aspath_8c.html#a3a932cff645a730d2e5d9aeec874e127">aspath_delete_confed_seq</a> (<a class="code" href="bgp__aspath_8c.html#a2de7834df2eead0bfa5a117ce265e6ca">aspath_dup</a> (asinout));
  
  printf (<span class="stringliteral">&quot;got: %s\n&quot;</span>, <a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a>(as));
  
  <span class="comment">/* the parsed path should match the specified &#39;shouldbe&#39; string.</span>
<span class="comment">   * We should pass the &quot;eat our own dog food&quot; test, be able to output</span>
<span class="comment">   * this path and then input it again. Ie the path resulting from:</span>
<span class="comment">   *</span>
<span class="comment">   *   aspath_parse(aspath_put(as)) </span>
<span class="comment">   *</span>
<span class="comment">   * should:</span>
<span class="comment">   *</span>
<span class="comment">   * - also match the specified &#39;shouldbe&#39; value</span>
<span class="comment">   * - hash to same value as original path</span>
<span class="comment">   * - have same hops and confed counts as original, and as the</span>
<span class="comment">   *   the specified counts</span>
<span class="comment">   *</span>
<span class="comment">   * aspath_str2aspath() and shouldbe should match</span>
<span class="comment">   *</span>
<span class="comment">   * We do the same for:</span>
<span class="comment">   *</span>
<span class="comment">   *   aspath_parse(aspath_put(as,USE32BIT))</span>
<span class="comment">   *</span>
<span class="comment">   * Confederation related tests: </span>
<span class="comment">   * - aspath_delete_confed_seq(aspath) should match shouldbe_confed</span>
<span class="comment">   * - aspath_delete_confed_seq should be idempotent.</span>
<span class="comment">   */</span>
  <span class="keywordflow">if</span> (strcmp(<a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (as), sp-&gt;<a class="code" href="structtest__spec.html#a2eb0ac4de4590460526ff41c43b664c9">shouldbe</a>)
         <span class="comment">/* hash validation */</span>
      || (<a class="code" href="bgp__aspath_8c.html#a0ff2c762b3aea1084db8500839a8d314">aspath_key_make</a> (as) != <a class="code" href="bgp__aspath_8c.html#a0ff2c762b3aea1084db8500839a8d314">aspath_key_make</a> (asinout))
         <span class="comment">/* by string */</span>
      || strcmp(<a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asinout), sp-&gt;<a class="code" href="structtest__spec.html#a2eb0ac4de4590460526ff41c43b664c9">shouldbe</a>)
         <span class="comment">/* By 4-byte parsing */</span>
      || strcmp(<a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (as4), sp-&gt;<a class="code" href="structtest__spec.html#a2eb0ac4de4590460526ff41c43b664c9">shouldbe</a>)
         <span class="comment">/* by various path counts */</span>
      || (<a class="code" href="bgp__aspath_8c.html#ae0142a952a7219bbe0244f266ab0f0f5">aspath_count_hops</a> (as) != sp-&gt;<a class="code" href="structtest__spec.html#af0db615126b91ae525c29ad29e68623f">hops</a>)
      || (<a class="code" href="bgp__aspath_8c.html#a8638c553cd3d2c87161aa489ea0a45d7">aspath_count_confeds</a> (as) != sp-&gt;<a class="code" href="structtest__spec.html#a80c9f70ca6d4e7d6c02f8b97fbea49b1">confeds</a>)
      || (<a class="code" href="bgp__aspath_8c.html#ae0142a952a7219bbe0244f266ab0f0f5">aspath_count_hops</a> (asinout) != sp-&gt;<a class="code" href="structtest__spec.html#af0db615126b91ae525c29ad29e68623f">hops</a>)
      || (<a class="code" href="bgp__aspath_8c.html#a8638c553cd3d2c87161aa489ea0a45d7">aspath_count_confeds</a> (asinout) != sp-&gt;<a class="code" href="structtest__spec.html#a80c9f70ca6d4e7d6c02f8b97fbea49b1">confeds</a>))
    {
      <a class="code" href="aspath__test_8c.html#ad4ec5aab9b62fbbe9b8fc2d8ac0a5989">failed</a>++;
      fails++;
      printf (<span class="stringliteral">&quot;shouldbe:\n%s\n&quot;</span>, sp-&gt;<a class="code" href="structtest__spec.html#a2eb0ac4de4590460526ff41c43b664c9">shouldbe</a>);
      printf (<span class="stringliteral">&quot;as4:\n%s\n&quot;</span>, <a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (as4));
      printf (<span class="stringliteral">&quot;hash keys: in: %d out-&gt;in: %d\n&quot;</span>, 
              <a class="code" href="bgp__aspath_8c.html#a0ff2c762b3aea1084db8500839a8d314">aspath_key_make</a> (as), <a class="code" href="bgp__aspath_8c.html#a0ff2c762b3aea1084db8500839a8d314">aspath_key_make</a> (asinout));
      printf (<span class="stringliteral">&quot;hops: %d, counted %d %d\n&quot;</span>, sp-&gt;<a class="code" href="structtest__spec.html#af0db615126b91ae525c29ad29e68623f">hops</a>, 
              <a class="code" href="bgp__aspath_8c.html#ae0142a952a7219bbe0244f266ab0f0f5">aspath_count_hops</a> (as),
              <a class="code" href="bgp__aspath_8c.html#ae0142a952a7219bbe0244f266ab0f0f5">aspath_count_hops</a> (asinout) );
      printf (<span class="stringliteral">&quot;confeds: %d, counted %d %d\n&quot;</span>, sp-&gt;<a class="code" href="structtest__spec.html#a80c9f70ca6d4e7d6c02f8b97fbea49b1">confeds</a>,
              <a class="code" href="bgp__aspath_8c.html#a8638c553cd3d2c87161aa489ea0a45d7">aspath_count_confeds</a> (as),
              <a class="code" href="bgp__aspath_8c.html#a8638c553cd3d2c87161aa489ea0a45d7">aspath_count_confeds</a> (asinout));
      printf (<span class="stringliteral">&quot;out-&gt;in:\n%s\nbytes: &quot;</span>, <a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a>(asinout));
      <a class="code" href="aspath__test_8c.html#a9dda9defba22f8bf925582c0c0a00c2a">printbytes</a> (out, bytes);
    }
         <span class="comment">/* basic confed related tests */</span>
  <span class="keywordflow">if</span> ((<a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asconfeddel) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> 
          &amp;&amp; sp-&gt;<a class="code" href="structtest__spec.html#ac41569f24493df6c959f4658aba11f00">shouldbe_delete_confed</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
      || (<a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asconfeddel) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> 
          &amp;&amp; sp-&gt;<a class="code" href="structtest__spec.html#ac41569f24493df6c959f4658aba11f00">shouldbe_delete_confed</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
      || strcmp(<a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asconfeddel), sp-&gt;<a class="code" href="structtest__spec.html#ac41569f24493df6c959f4658aba11f00">shouldbe_delete_confed</a>)
         <span class="comment">/* delete_confed_seq should be idempotent */</span>
      || (<a class="code" href="bgp__aspath_8c.html#a0ff2c762b3aea1084db8500839a8d314">aspath_key_make</a> (asconfeddel) 
          != <a class="code" href="bgp__aspath_8c.html#a0ff2c762b3aea1084db8500839a8d314">aspath_key_make</a> (<a class="code" href="bgp__aspath_8c.html#a3a932cff645a730d2e5d9aeec874e127">aspath_delete_confed_seq</a> (asconfeddel))))
    {
      <a class="code" href="aspath__test_8c.html#ad4ec5aab9b62fbbe9b8fc2d8ac0a5989">failed</a>++;
      fails++;
      printf (<span class="stringliteral">&quot;confed_del: %s\n&quot;</span>, <a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asconfeddel));
      printf (<span class="stringliteral">&quot;should be: %s\n&quot;</span>, sp-&gt;<a class="code" href="structtest__spec.html#ac41569f24493df6c959f4658aba11f00">shouldbe_delete_confed</a>);
    }
      <span class="comment">/* aspath_str2aspath test */</span>
  <span class="keywordflow">if</span> ((<a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asstr) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; sp-&gt;<a class="code" href="structtest__spec.html#a2eb0ac4de4590460526ff41c43b664c9">shouldbe</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
      || (<a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asstr) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; sp-&gt;<a class="code" href="structtest__spec.html#a2eb0ac4de4590460526ff41c43b664c9">shouldbe</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
      || strcmp(<a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asstr), sp-&gt;<a class="code" href="structtest__spec.html#a2eb0ac4de4590460526ff41c43b664c9">shouldbe</a>))
    {
      <a class="code" href="aspath__test_8c.html#ad4ec5aab9b62fbbe9b8fc2d8ac0a5989">failed</a>++;
      fails++;
      printf (<span class="stringliteral">&quot;asstr: %s\n&quot;</span>, <a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asstr));
    }
  
    <span class="comment">/* loop, private and first as checks */</span>
  <span class="keywordflow">if</span> ((sp-&gt;<a class="code" href="structtest__spec.html#add5530fb487a9c8303630fbfa4555e38">does_loop</a> &amp;&amp; <a class="code" href="bgp__aspath_8c.html#a09c83e4313915a5191a19439186f2280">aspath_loop_check</a> (as, sp-&gt;<a class="code" href="structtest__spec.html#add5530fb487a9c8303630fbfa4555e38">does_loop</a>) == 0)
      || (sp-&gt;<a class="code" href="structtest__spec.html#ad36a95dce2160851f702bb30559a0690">doesnt_loop</a> &amp;&amp; <a class="code" href="bgp__aspath_8c.html#a09c83e4313915a5191a19439186f2280">aspath_loop_check</a> (as, sp-&gt;<a class="code" href="structtest__spec.html#ad36a95dce2160851f702bb30559a0690">doesnt_loop</a>) != 0)
      || (<a class="code" href="bgp__aspath_8c.html#a808020dd81343ccfb8f4cf5f50f5f11c">aspath_private_as_check</a> (as) != sp-&gt;<a class="code" href="structtest__spec.html#a1e7d302696d26728c37fa5c776be351a">private_as</a>)
      || (<a class="code" href="bgp__aspath_8c.html#a9ed7eb61027a6f70bb24f3ffc5cc399f">aspath_firstas_check</a> (as,sp-&gt;<a class="code" href="structtest__spec.html#a3d644bb1c3a265912fa3fcc7279fc239">first</a>)
          &amp;&amp; sp-&gt;<a class="code" href="structtest__spec.html#a3d644bb1c3a265912fa3fcc7279fc239">first</a> == 0))
    {
      <a class="code" href="aspath__test_8c.html#ad4ec5aab9b62fbbe9b8fc2d8ac0a5989">failed</a>++;
      fails++;
      printf (<span class="stringliteral">&quot;firstas: %d,  got %d\n&quot;</span>, sp-&gt;<a class="code" href="structtest__spec.html#a3d644bb1c3a265912fa3fcc7279fc239">first</a>,
              <a class="code" href="bgp__aspath_8c.html#a9ed7eb61027a6f70bb24f3ffc5cc399f">aspath_firstas_check</a> (as,sp-&gt;<a class="code" href="structtest__spec.html#a3d644bb1c3a265912fa3fcc7279fc239">first</a>));
      printf (<span class="stringliteral">&quot;loop does: %d %d, doesnt: %d %d\n&quot;</span>,
              sp-&gt;<a class="code" href="structtest__spec.html#add5530fb487a9c8303630fbfa4555e38">does_loop</a>, <a class="code" href="bgp__aspath_8c.html#a09c83e4313915a5191a19439186f2280">aspath_loop_check</a> (as, sp-&gt;<a class="code" href="structtest__spec.html#add5530fb487a9c8303630fbfa4555e38">does_loop</a>),
              sp-&gt;<a class="code" href="structtest__spec.html#ad36a95dce2160851f702bb30559a0690">doesnt_loop</a>, <a class="code" href="bgp__aspath_8c.html#a09c83e4313915a5191a19439186f2280">aspath_loop_check</a> (as, sp-&gt;<a class="code" href="structtest__spec.html#ad36a95dce2160851f702bb30559a0690">doesnt_loop</a>));
      printf (<span class="stringliteral">&quot;private check: %d %d\n&quot;</span>, sp-&gt;<a class="code" href="structtest__spec.html#a1e7d302696d26728c37fa5c776be351a">private_as</a>,
              <a class="code" href="bgp__aspath_8c.html#a808020dd81343ccfb8f4cf5f50f5f11c">aspath_private_as_check</a> (as));
    }
  <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asinout);
  <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (as4);
  
  <a class="code" href="bgp__aspath_8c.html#af8db79f3e25ae5a01dfec9070557c21a">aspath_free</a> (asconfeddel);
  <a class="code" href="bgp__aspath_8c.html#af8db79f3e25ae5a01dfec9070557c21a">aspath_free</a> (asstr);
  <a class="code" href="stream_8c.html#aee8fd31485ebc2f0a556a6a5d5c2d1e6">stream_reset</a> (s);
  
  <span class="keywordflow">return</span> fails;
}
</pre></div>
</div>
</div>
<hr/><h2>Variable Documentation</h2>
<a class="anchor" id="a9b85d4110efd0617d6e3af74fc5dffca"></a><!-- doxytag: member="aspath_test.c::aggregate_tests" ref="a9b85d4110efd0617d6e3af74fc5dffca" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structtests.html">tests</a> <a class="el" href="aspath__test_8c.html#a9b85d4110efd0617d6e3af74fc5dffca">aggregate_tests</a>[]</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00574">574</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>

</div>
</div>
<a class="anchor" id="aedaa2650b5e24bd10ce066e022858877"></a><!-- doxytag: member="aspath_test.c::bgpd_privs" ref="aedaa2650b5e24bd10ce066e022858877" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structzebra__privs__t.html">zebra_privs_t</a>* <a class="el" href="ecommunity__test_8c.html#aedaa2650b5e24bd10ce066e022858877">bgpd_privs</a> = NULL</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00018">18</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>

</div>
</div>
<a class="anchor" id="ad4ec5aab9b62fbbe9b8fc2d8ac0a5989"></a><!-- doxytag: member="aspath_test.c::failed" ref="ad4ec5aab9b62fbbe9b8fc2d8ac0a5989" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="ecommunity__test_8c.html#ad4ec5aab9b62fbbe9b8fc2d8ac0a5989">failed</a> = 0<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00021">21</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>

</div>
</div>
<a class="anchor" id="ac4902a861de8936a2d35014cc21c1f3a"></a><!-- doxytag: member="aspath_test.c::left_compare" ref="ac4902a861de8936a2d35014cc21c1f3a" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structcompare__tests.html">compare_tests</a>  <a class="el" href="aspath__test_8c.html#ac4902a861de8936a2d35014cc21c1f3a">left_compare</a>[]</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="af7f9077bc08df049beb65a1c09cde5fa"></a><!-- doxytag: member="aspath_test.c::master" ref="af7f9077bc08df049beb65a1c09cde5fa" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structthread__master.html">thread_master</a>* <a class="el" href="test__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a> = NULL</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00019">19</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>

</div>
</div>
<a class="anchor" id="abad2f044fa19335311b056f120c477bd"></a><!-- doxytag: member="aspath_test.c::prepend_tests" ref="abad2f044fa19335311b056f120c477bd" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structtests.html">tests</a>  <a class="el" href="aspath__test_8c.html#abad2f044fa19335311b056f120c477bd">prepend_tests</a>[]<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a9e351ac640403971252bf832343756d7"></a><!-- doxytag: member="aspath_test.c::reconcile_tests" ref="a9e351ac640403971252bf832343756d7" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structtests.html">tests</a> <a class="el" href="aspath__test_8c.html#a9e351ac640403971252bf832343756d7">reconcile_tests</a>[]</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="aspath__test_8c_source.html#l00539">539</a> of file <a class="el" href="aspath__test_8c_source.html">aspath_test.c</a>.</p>

</div>
</div>
<a class="anchor" id="a1b87c36a5cb9fea0a6957dbdfe16f875"></a><!-- doxytag: member="aspath_test.c::test_segments" ref="a1b87c36a5cb9fea0a6957dbdfe16f875" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structtest__segment.html">test_segment</a>  <a class="el" href="ecommunity__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[]<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="aspath__test_8c.html">aspath_test.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:37 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
