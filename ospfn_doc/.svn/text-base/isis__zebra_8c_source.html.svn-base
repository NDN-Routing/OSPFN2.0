<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: isisd/isis_zebra.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('isis__zebra_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">isisd/isis_zebra.c</div>  </div>
</div>
<div class="contents">
<a href="isis__zebra_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * IS-IS Rout(e)ing protocol - isis_zebra.c   </span>
<a name="l00003"></a>00003 <span class="comment"> *</span>
<a name="l00004"></a>00004 <span class="comment"> * Copyright (C) 2001,2002   Sampo Saaristo</span>
<a name="l00005"></a>00005 <span class="comment"> *                           Tampere University of Technology      </span>
<a name="l00006"></a>00006 <span class="comment"> *                           Institute of Communications Engineering</span>
<a name="l00007"></a>00007 <span class="comment"> *</span>
<a name="l00008"></a>00008 <span class="comment"> * This program is free software; you can redistribute it and/or modify it </span>
<a name="l00009"></a>00009 <span class="comment"> * under the terms of the GNU General Public Licenseas published by the Free </span>
<a name="l00010"></a>00010 <span class="comment"> * Software Foundation; either version 2 of the License, or (at your option) </span>
<a name="l00011"></a>00011 <span class="comment"> * any later version.</span>
<a name="l00012"></a>00012 <span class="comment"> *</span>
<a name="l00013"></a>00013 <span class="comment"> * This program is distributed in the hope that it will be useful,but WITHOUT </span>
<a name="l00014"></a>00014 <span class="comment"> * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or </span>
<a name="l00015"></a>00015 <span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for </span>
<a name="l00016"></a>00016 <span class="comment"> * more details.</span>
<a name="l00017"></a>00017 <span class="comment"></span>
<a name="l00018"></a>00018 <span class="comment"> * You should have received a copy of the GNU General Public License along </span>
<a name="l00019"></a>00019 <span class="comment"> * with this program; if not, write to the Free Software Foundation, Inc., </span>
<a name="l00020"></a>00020 <span class="comment"> * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.</span>
<a name="l00021"></a>00021 <span class="comment"> */</span>
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;<a class="code" href="zebra_8h.html">zebra.h</a>&gt;</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="thread_8h.html">thread.h</a>&quot;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="command_8h.html">command.h</a>&quot;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="memory_8h.html">memory.h</a>&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="log_8h.html">log.h</a>&quot;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="if_8h.html">if.h</a>&quot;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="network_8h.html">network.h</a>&quot;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &quot;<a class="code" href="prefix_8h.html">prefix.h</a>&quot;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="zclient_8h.html">zclient.h</a>&quot;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &quot;<a class="code" href="stream_8h.html">stream.h</a>&quot;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &quot;<a class="code" href="linklist_8h.html">linklist.h</a>&quot;</span>
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="preprocessor">#include &quot;<a class="code" href="dict_8h.html">isisd/dict.h</a>&quot;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#include &quot;<a class="code" href="isis__constants_8h.html">isisd/isis_constants.h</a>&quot;</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include &quot;<a class="code" href="isis__common_8h.html">isisd/isis_common.h</a>&quot;</span>
<a name="l00039"></a>00039 <span class="preprocessor">#include &quot;<a class="code" href="isisd_8h.html">isisd/isisd.h</a>&quot;</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include &quot;<a class="code" href="isis__circuit_8h.html">isisd/isis_circuit.h</a>&quot;</span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &quot;<a class="code" href="isis__csm_8h.html">isisd/isis_csm.h</a>&quot;</span>
<a name="l00042"></a>00042 <span class="preprocessor">#include &quot;<a class="code" href="isis__route_8h.html">isisd/isis_route.h</a>&quot;</span>
<a name="l00043"></a>00043 <span class="preprocessor">#include &quot;<a class="code" href="isis__zebra_8h.html">isisd/isis_zebra.h</a>&quot;</span>
<a name="l00044"></a>00044 
<a name="l00045"></a><a class="code" href="isis__zebra_8c.html#abe1502972ba9aa40adc080e419c496bf">00045</a> <span class="keyword">struct </span><a class="code" href="structzclient.html">zclient</a> *<a class="code" href="structzclient.html">zclient</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00046"></a>00046 
<a name="l00047"></a>00047 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structthread__master.html">thread_master</a> *<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>;
<a name="l00048"></a>00048 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structisis.html">isis</a> *<a class="code" href="isis__adjacency_8c.html#aa8cfdc8f7777fd242bd2c45f3a48b950">isis</a>;
<a name="l00049"></a>00049 
<a name="l00050"></a><a class="code" href="isis__zebra_8c.html#a5ff73fe88ce576fe7fc3877984367add">00050</a> <span class="keyword">struct </span>in_addr <a class="code" href="bgp__vty_8c.html#a5ff73fe88ce576fe7fc3877984367add">router_id_zebra</a>;
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 <span class="comment">/* Router-id update message from zebra. */</span>
<a name="l00053"></a>00053 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00054"></a><a class="code" href="isis__zebra_8c.html#aca517fedd8c50691b81de0c89e65f1d3">00054</a> <a class="code" href="isis__zebra_8c.html#aca517fedd8c50691b81de0c89e65f1d3">isis_router_id_update_zebra</a> (<span class="keywordtype">int</span> command, <span class="keyword">struct</span> zclient *zclient,
<a name="l00055"></a>00055                  <a class="code" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a> <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>)
<a name="l00056"></a>00056 {
<a name="l00057"></a>00057   <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> router_id;
<a name="l00058"></a>00058 
<a name="l00059"></a>00059   <a class="code" href="zclient_8c.html#a6adcd87e46d205582c81673f669067f3">zebra_router_id_update_read</a> (zclient-&gt;<a class="code" href="structzclient.html#a1b9d2a1e869c1008c2bc70d14ce2bf49">ibuf</a>,&amp;router_id);
<a name="l00060"></a>00060   <a class="code" href="bgp__vty_8c.html#a5ff73fe88ce576fe7fc3877984367add">router_id_zebra</a> = router_id.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>;
<a name="l00061"></a>00061 
<a name="l00062"></a>00062   <span class="comment">/* FIXME: Do we react somehow? */</span>
<a name="l00063"></a>00063   <span class="keywordflow">return</span> 0;
<a name="l00064"></a>00064 }
<a name="l00065"></a>00065 
<a name="l00066"></a>00066 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00067"></a><a class="code" href="isis__zebra_8c.html#a0050c6738bc25dd95d0a764b5f1e7b6f">00067</a> <a class="code" href="isis__zebra_8c.html#a0050c6738bc25dd95d0a764b5f1e7b6f">isis_zebra_if_add</a> (<span class="keywordtype">int</span> command, <span class="keyword">struct</span> zclient *zclient, <a class="code" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a> <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>)
<a name="l00068"></a>00068 {
<a name="l00069"></a>00069   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l00070"></a>00070 
<a name="l00071"></a>00071   ifp = <a class="code" href="zclient_8c.html#af2dbed49848c57eaae1185751ec18648">zebra_interface_add_read</a> (zclient-&gt;<a class="code" href="structzclient.html#a1b9d2a1e869c1008c2bc70d14ce2bf49">ibuf</a>);
<a name="l00072"></a>00072 
<a name="l00073"></a>00073   <span class="keywordflow">if</span> (isis-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#a5c2859a260ca31feae33a25a568a9bb9">DEBUG_ZEBRA</a>)
<a name="l00074"></a>00074     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Zebra I/F add: %s index %d flags %ld metric %d mtu %d&quot;</span>,
<a name="l00075"></a>00075         ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>, (<span class="keywordtype">long</span>)ifp-&gt;<a class="code" href="structinterface.html#a09ed96b900f31d769a76a32b67217c8f">flags</a>, ifp-&gt;<a class="code" href="structinterface.html#adbb7ad89b817a388e9442e85f1e72cc8">metric</a>, ifp-&gt;<a class="code" href="structinterface.html#aadd24df2d261a3bfcbdfe4797e639afb">mtu</a>);
<a name="l00076"></a>00076 
<a name="l00077"></a>00077   <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a96741fba2059f7591f57d18325664b7b">if_is_operative</a> (ifp))
<a name="l00078"></a>00078     <a class="code" href="isis__csm_8c.html#a96513c42708761fe8f65230cc2cfbb46">isis_csm_state_change</a> (<a class="code" href="isis__csm_8h.html#a2fc6ac6279e3555b55cfda022a9fb46b">IF_UP_FROM_Z</a>, <a class="code" href="isis__circuit_8c.html#ac745f22b7616f69709cf336bfe91c9cc">circuit_scan_by_ifp</a> (ifp), ifp);
<a name="l00079"></a>00079 
<a name="l00080"></a>00080   <span class="keywordflow">return</span> 0;
<a name="l00081"></a>00081 }
<a name="l00082"></a>00082 
<a name="l00083"></a>00083 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00084"></a><a class="code" href="isis__zebra_8c.html#a59eb03c7901949598d99352ef96a3ea6">00084</a> <a class="code" href="isis__zebra_8c.html#a59eb03c7901949598d99352ef96a3ea6">isis_zebra_if_del</a> (<span class="keywordtype">int</span> command, <span class="keyword">struct</span> zclient *zclient, <a class="code" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a> <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>)
<a name="l00085"></a>00085 {
<a name="l00086"></a>00086   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l00087"></a>00087   <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>;
<a name="l00088"></a>00088 
<a name="l00089"></a>00089   s = zclient-&gt;<a class="code" href="structzclient.html#a1b9d2a1e869c1008c2bc70d14ce2bf49">ibuf</a>;
<a name="l00090"></a>00090   ifp = <a class="code" href="zclient_8c.html#a989f3e044d41b4e18463027a94b846e7">zebra_interface_state_read</a> (s);
<a name="l00091"></a>00091 
<a name="l00092"></a>00092   <span class="keywordflow">if</span> (!ifp)
<a name="l00093"></a>00093     <span class="keywordflow">return</span> 0;
<a name="l00094"></a>00094 
<a name="l00095"></a>00095   <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a96741fba2059f7591f57d18325664b7b">if_is_operative</a> (ifp))
<a name="l00096"></a>00096     <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;Zebra: got delete of %s, but interface is still up&quot;</span>,
<a name="l00097"></a>00097            ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
<a name="l00098"></a>00098 
<a name="l00099"></a>00099   <span class="keywordflow">if</span> (isis-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#a5c2859a260ca31feae33a25a568a9bb9">DEBUG_ZEBRA</a>)
<a name="l00100"></a>00100     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Zebra I/F delete: %s index %d flags %ld metric %d mtu %d&quot;</span>,
<a name="l00101"></a>00101         ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>, (<span class="keywordtype">long</span>)ifp-&gt;<a class="code" href="structinterface.html#a09ed96b900f31d769a76a32b67217c8f">flags</a>, ifp-&gt;<a class="code" href="structinterface.html#adbb7ad89b817a388e9442e85f1e72cc8">metric</a>, ifp-&gt;<a class="code" href="structinterface.html#aadd24df2d261a3bfcbdfe4797e639afb">mtu</a>);
<a name="l00102"></a>00102 
<a name="l00103"></a>00103 
<a name="l00104"></a>00104   <span class="comment">/* Cannot call if_delete because we should retain the pseudo interface</span>
<a name="l00105"></a>00105 <span class="comment">     in case there is configuration info attached to it. */</span>
<a name="l00106"></a>00106   <a class="code" href="if_8c.html#a439fd4917061b73dbeef59aac5a0bd5e">if_delete_retain</a>(ifp);
<a name="l00107"></a>00107 
<a name="l00108"></a>00108   <a class="code" href="isis__csm_8c.html#a96513c42708761fe8f65230cc2cfbb46">isis_csm_state_change</a> (<a class="code" href="isis__csm_8h.html#a4405955f5c221d73d3c1f8e55ccef1cc">IF_DOWN_FROM_Z</a>, <a class="code" href="isis__circuit_8c.html#ac745f22b7616f69709cf336bfe91c9cc">circuit_scan_by_ifp</a> (ifp), ifp);
<a name="l00109"></a>00109 
<a name="l00110"></a>00110   ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a> = <a class="code" href="if_8h.html#a18949aeeb4a8fbe7e3be43e6bbe86527">IFINDEX_INTERNAL</a>;
<a name="l00111"></a>00111 
<a name="l00112"></a>00112   <span class="keywordflow">return</span> 0;
<a name="l00113"></a>00113 }
<a name="l00114"></a>00114 
<a name="l00115"></a>00115 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *
<a name="l00116"></a><a class="code" href="isis__zebra_8c.html#a5b145abf4342f5655667f9359ced89d0">00116</a> <a class="code" href="isis__zebra_8c.html#a5b145abf4342f5655667f9359ced89d0">zebra_interface_if_lookup</a> (<span class="keyword">struct</span> <a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>)
<a name="l00117"></a>00117 {
<a name="l00118"></a>00118   <span class="keywordtype">char</span> ifname_tmp[<a class="code" href="if_8h.html#ab819b6f1f4d393be3e866af97297b9cb">INTERFACE_NAMSIZ</a>];
<a name="l00119"></a>00119 
<a name="l00120"></a>00120   <span class="comment">/* Read interface name. */</span>
<a name="l00121"></a>00121   <a class="code" href="stream_8c.html#ab7101e57ef0d9dc1a33e7f7e30c91b9a">stream_get</a> (ifname_tmp, s, <a class="code" href="if_8h.html#ab819b6f1f4d393be3e866af97297b9cb">INTERFACE_NAMSIZ</a>);
<a name="l00122"></a>00122 
<a name="l00123"></a>00123   <span class="comment">/* And look it up. */</span>
<a name="l00124"></a>00124   <span class="keywordflow">return</span> <a class="code" href="if_8c.html#a8ae0929167c87a44b1933994a0254d29">if_lookup_by_name_len</a>(ifname_tmp,
<a name="l00125"></a>00125                    <a class="code" href="str_8c.html#afc92d2231e45d19988c7894aa2a07f0c">strnlen</a>(ifname_tmp, <a class="code" href="if_8h.html#ab819b6f1f4d393be3e866af97297b9cb">INTERFACE_NAMSIZ</a>));
<a name="l00126"></a>00126 }
<a name="l00127"></a>00127 
<a name="l00128"></a>00128 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00129"></a><a class="code" href="isis__zebra_8c.html#a9f8318c84dd5ca62bba515a3dd239f81">00129</a> <a class="code" href="isis__zebra_8c.html#a9f8318c84dd5ca62bba515a3dd239f81">isis_zebra_if_state_up</a> (<span class="keywordtype">int</span> command, <span class="keyword">struct</span> zclient *zclient,
<a name="l00130"></a>00130             <a class="code" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a> <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>)
<a name="l00131"></a>00131 {
<a name="l00132"></a>00132   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l00133"></a>00133 
<a name="l00134"></a>00134   ifp = <a class="code" href="isis__zebra_8c.html#a5b145abf4342f5655667f9359ced89d0">zebra_interface_if_lookup</a> (zclient-&gt;<a class="code" href="structzclient.html#a1b9d2a1e869c1008c2bc70d14ce2bf49">ibuf</a>);
<a name="l00135"></a>00135 
<a name="l00136"></a>00136   <span class="keywordflow">if</span> (!ifp)
<a name="l00137"></a>00137     <span class="keywordflow">return</span> 0;
<a name="l00138"></a>00138 
<a name="l00139"></a>00139   <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a96741fba2059f7591f57d18325664b7b">if_is_operative</a> (ifp))
<a name="l00140"></a>00140     {
<a name="l00141"></a>00141       <a class="code" href="zclient_8c.html#a2366afba487613909591ecadd8985f1a">zebra_interface_if_set_value</a> (zclient-&gt;<a class="code" href="structzclient.html#a1b9d2a1e869c1008c2bc70d14ce2bf49">ibuf</a>, ifp);
<a name="l00142"></a>00142       <span class="comment">/* HT: This is wrong actually. We can&#39;t assume that circuit exist</span>
<a name="l00143"></a>00143 <span class="comment">       * if we delete circuit during if_state_down event. Needs rethink.</span>
<a name="l00144"></a>00144 <span class="comment">       * TODO */</span>
<a name="l00145"></a>00145       <a class="code" href="isis__circuit_8c.html#aec239848920be5d6c27e0468ee98f723">isis_circuit_update_params</a> (<a class="code" href="isis__circuit_8c.html#ac745f22b7616f69709cf336bfe91c9cc">circuit_scan_by_ifp</a> (ifp), ifp);
<a name="l00146"></a>00146       <span class="keywordflow">return</span> 0;
<a name="l00147"></a>00147     }
<a name="l00148"></a>00148 
<a name="l00149"></a>00149   <a class="code" href="zclient_8c.html#a2366afba487613909591ecadd8985f1a">zebra_interface_if_set_value</a> (zclient-&gt;<a class="code" href="structzclient.html#a1b9d2a1e869c1008c2bc70d14ce2bf49">ibuf</a>, ifp);
<a name="l00150"></a>00150   <a class="code" href="isis__csm_8c.html#a96513c42708761fe8f65230cc2cfbb46">isis_csm_state_change</a> (<a class="code" href="isis__csm_8h.html#a2fc6ac6279e3555b55cfda022a9fb46b">IF_UP_FROM_Z</a>, <a class="code" href="isis__circuit_8c.html#ac745f22b7616f69709cf336bfe91c9cc">circuit_scan_by_ifp</a> (ifp), ifp);
<a name="l00151"></a>00151 
<a name="l00152"></a>00152   <span class="keywordflow">return</span> 0;
<a name="l00153"></a>00153 }
<a name="l00154"></a>00154 
<a name="l00155"></a>00155 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00156"></a><a class="code" href="isis__zebra_8c.html#a71905923af9aef26f5339027ee6f606e">00156</a> <a class="code" href="isis__zebra_8c.html#a71905923af9aef26f5339027ee6f606e">isis_zebra_if_state_down</a> (<span class="keywordtype">int</span> command, <span class="keyword">struct</span> zclient *zclient,
<a name="l00157"></a>00157               <a class="code" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a> <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>)
<a name="l00158"></a>00158 {
<a name="l00159"></a>00159   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l00160"></a>00160 
<a name="l00161"></a>00161   ifp = <a class="code" href="isis__zebra_8c.html#a5b145abf4342f5655667f9359ced89d0">zebra_interface_if_lookup</a> (zclient-&gt;<a class="code" href="structzclient.html#a1b9d2a1e869c1008c2bc70d14ce2bf49">ibuf</a>);
<a name="l00162"></a>00162 
<a name="l00163"></a>00163   <span class="keywordflow">if</span> (ifp == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00164"></a>00164     <span class="keywordflow">return</span> 0;
<a name="l00165"></a>00165 
<a name="l00166"></a>00166   <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a96741fba2059f7591f57d18325664b7b">if_is_operative</a> (ifp))
<a name="l00167"></a>00167     {
<a name="l00168"></a>00168       <a class="code" href="zclient_8c.html#a2366afba487613909591ecadd8985f1a">zebra_interface_if_set_value</a> (zclient-&gt;<a class="code" href="structzclient.html#a1b9d2a1e869c1008c2bc70d14ce2bf49">ibuf</a>, ifp);
<a name="l00169"></a>00169       <a class="code" href="isis__csm_8c.html#a96513c42708761fe8f65230cc2cfbb46">isis_csm_state_change</a> (<a class="code" href="isis__csm_8h.html#a4405955f5c221d73d3c1f8e55ccef1cc">IF_DOWN_FROM_Z</a>, <a class="code" href="isis__circuit_8c.html#ac745f22b7616f69709cf336bfe91c9cc">circuit_scan_by_ifp</a> (ifp), ifp);
<a name="l00170"></a>00170     }
<a name="l00171"></a>00171 
<a name="l00172"></a>00172   <span class="keywordflow">return</span> 0;
<a name="l00173"></a>00173 }
<a name="l00174"></a>00174 
<a name="l00175"></a>00175 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00176"></a><a class="code" href="isis__zebra_8c.html#a8a3a958b7e27aba2c67b6903a6db7ace">00176</a> <a class="code" href="isis__zebra_8c.html#a8a3a958b7e27aba2c67b6903a6db7ace">isis_zebra_if_address_add</a> (<span class="keywordtype">int</span> command, <span class="keyword">struct</span> zclient *zclient,
<a name="l00177"></a>00177                <a class="code" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a> <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>)
<a name="l00178"></a>00178 {
<a name="l00179"></a>00179   <span class="keyword">struct </span><a class="code" href="structconnected.html">connected</a> *c;
<a name="l00180"></a>00180   <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
<a name="l00181"></a>00181   <span class="keywordtype">char</span> buf[BUFSIZ];
<a name="l00182"></a>00182 
<a name="l00183"></a>00183   c = <a class="code" href="zclient_8c.html#a361d54ec3dad267afc3335fe155367a2">zebra_interface_address_read</a> (<a class="code" href="zebra_8h.html#aea532f1b7734390e98af1be9c18b0964">ZEBRA_INTERFACE_ADDRESS_ADD</a>,
<a name="l00184"></a>00184                     zclient-&gt;<a class="code" href="structzclient.html#a1b9d2a1e869c1008c2bc70d14ce2bf49">ibuf</a>);
<a name="l00185"></a>00185 
<a name="l00186"></a>00186   <span class="keywordflow">if</span> (c == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00187"></a>00187     <span class="keywordflow">return</span> 0;
<a name="l00188"></a>00188 
<a name="l00189"></a>00189   p = c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>;
<a name="l00190"></a>00190 
<a name="l00191"></a>00191   <a class="code" href="prefix_8c.html#a8b848557695ae5694bd2282eba23e367">prefix2str</a> (p, buf, BUFSIZ);
<a name="l00192"></a>00192 <span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<a name="l00193"></a>00193 <span class="preprocessor"></span>  <span class="keywordflow">if</span> (p-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == AF_INET)
<a name="l00194"></a>00194     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;connected IP address %s&quot;</span>, buf);
<a name="l00195"></a>00195 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00196"></a>00196 <span class="preprocessor"></span>  <span class="keywordflow">if</span> (p-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == AF_INET6)
<a name="l00197"></a>00197     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;connected IPv6 address %s&quot;</span>, buf);
<a name="l00198"></a>00198 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l00199"></a>00199 <span class="preprocessor">#endif </span><span class="comment">/* EXTREME_DEBUG */</span>
<a name="l00200"></a>00200   <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a96741fba2059f7591f57d18325664b7b">if_is_operative</a> (c-&gt;<a class="code" href="structconnected.html#a93c575385a71507f8c29ec26344d09d3">ifp</a>))
<a name="l00201"></a>00201     <a class="code" href="isis__circuit_8c.html#a52dfd04507c31c59f97c524f4b042483">isis_circuit_add_addr</a> (<a class="code" href="isis__circuit_8c.html#ac745f22b7616f69709cf336bfe91c9cc">circuit_scan_by_ifp</a> (c-&gt;<a class="code" href="structconnected.html#a93c575385a71507f8c29ec26344d09d3">ifp</a>), c);
<a name="l00202"></a>00202 
<a name="l00203"></a>00203   <span class="keywordflow">return</span> 0;
<a name="l00204"></a>00204 }
<a name="l00205"></a>00205 
<a name="l00206"></a>00206 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00207"></a><a class="code" href="isis__zebra_8c.html#a06f91e50f72be78817656d49fbbf4ab3">00207</a> <a class="code" href="isis__zebra_8c.html#a06f91e50f72be78817656d49fbbf4ab3">isis_zebra_if_address_del</a> (<span class="keywordtype">int</span> command, <span class="keyword">struct</span> zclient *client,
<a name="l00208"></a>00208                <a class="code" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a> <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>)
<a name="l00209"></a>00209 {
<a name="l00210"></a>00210   <span class="keyword">struct </span><a class="code" href="structconnected.html">connected</a> *c;
<a name="l00211"></a>00211   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l00212"></a>00212 <span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<a name="l00213"></a>00213 <span class="preprocessor"></span>  <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
<a name="l00214"></a>00214   u_char buf[BUFSIZ];
<a name="l00215"></a>00215 <span class="preprocessor">#endif </span><span class="comment">/* EXTREME_DEBUG */</span>
<a name="l00216"></a>00216 
<a name="l00217"></a>00217   c = <a class="code" href="zclient_8c.html#a361d54ec3dad267afc3335fe155367a2">zebra_interface_address_read</a> (<a class="code" href="zebra_8h.html#a8965100a302cd587b7afa842473c8be2">ZEBRA_INTERFACE_ADDRESS_DELETE</a>,
<a name="l00218"></a>00218                     zclient-&gt;<a class="code" href="structzclient.html#a1b9d2a1e869c1008c2bc70d14ce2bf49">ibuf</a>);
<a name="l00219"></a>00219 
<a name="l00220"></a>00220   <span class="keywordflow">if</span> (c == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00221"></a>00221     <span class="keywordflow">return</span> 0;
<a name="l00222"></a>00222 
<a name="l00223"></a>00223   ifp = c-&gt;<a class="code" href="structconnected.html#a93c575385a71507f8c29ec26344d09d3">ifp</a>;
<a name="l00224"></a>00224 
<a name="l00225"></a>00225 <span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<a name="l00226"></a>00226 <span class="preprocessor"></span>  p = c-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>;
<a name="l00227"></a>00227   <a class="code" href="prefix_8c.html#a8b848557695ae5694bd2282eba23e367">prefix2str</a> (p, buf, BUFSIZ);
<a name="l00228"></a>00228 
<a name="l00229"></a>00229   <span class="keywordflow">if</span> (p-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == AF_INET)
<a name="l00230"></a>00230     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;disconnected IP address %s&quot;</span>, buf);
<a name="l00231"></a>00231 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00232"></a>00232 <span class="preprocessor"></span>  <span class="keywordflow">if</span> (p-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == AF_INET6)
<a name="l00233"></a>00233     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;disconnected IPv6 address %s&quot;</span>, buf);
<a name="l00234"></a>00234 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l00235"></a>00235 <span class="preprocessor">#endif </span><span class="comment">/* EXTREME_DEBUG */</span>
<a name="l00236"></a>00236 
<a name="l00237"></a>00237   <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a96741fba2059f7591f57d18325664b7b">if_is_operative</a> (ifp))
<a name="l00238"></a>00238     <a class="code" href="isis__circuit_8c.html#a40467f80d25a3d5fc46184634d38a163">isis_circuit_del_addr</a> (<a class="code" href="isis__circuit_8c.html#ac745f22b7616f69709cf336bfe91c9cc">circuit_scan_by_ifp</a> (ifp), c);
<a name="l00239"></a>00239   <a class="code" href="if_8c.html#aefcfc40d0358af75f26135eb0a33903d">connected_free</a> (c);
<a name="l00240"></a>00240 
<a name="l00241"></a>00241   <span class="keywordflow">return</span> 0;
<a name="l00242"></a>00242 }
<a name="l00243"></a>00243 
<a name="l00244"></a>00244 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00245"></a><a class="code" href="isis__zebra_8c.html#aaa4a7252082b6d940d23552e08f96413">00245</a> <a class="code" href="isis__zebra_8c.html#aaa4a7252082b6d940d23552e08f96413">isis_zebra_route_add_ipv4</a> (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>,
<a name="l00246"></a>00246                <span class="keyword">struct</span> <a class="code" href="structisis__route__info.html">isis_route_info</a> *<a class="code" href="zebra__rib_8c.html#a2cb61c6ddc0de037d5a1fda1d8e55bd9">route_info</a>)
<a name="l00247"></a>00247 {
<a name="l00248"></a>00248   u_char <a class="code" href="structmessage.html">message</a>, <a class="code" href="structflags.html">flags</a>;
<a name="l00249"></a>00249   <span class="keywordtype">int</span> psize;
<a name="l00250"></a>00250   <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="structstream.html">stream</a>;
<a name="l00251"></a>00251   <span class="keyword">struct </span><a class="code" href="structisis__nexthop.html">isis_nexthop</a> *<a class="code" href="structnexthop.html">nexthop</a>;
<a name="l00252"></a>00252   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00253"></a>00253 
<a name="l00254"></a>00254   <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (route_info-&gt;<a class="code" href="structisis__route__info.html#ae301bfed55067a97479929d4d206e711">flag</a>, <a class="code" href="isis__route_8h.html#adad06b7bc8c0870be102efcb3864bad5">ISIS_ROUTE_FLAG_ZEBRA_SYNC</a>))
<a name="l00255"></a>00255     <span class="keywordflow">return</span>;
<a name="l00256"></a>00256 
<a name="l00257"></a>00257   <span class="keywordflow">if</span> (zclient-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="zebra_8h.html#a87ef34bfb648351225e8dd877f073401">ZEBRA_ROUTE_ISIS</a>])
<a name="l00258"></a>00258     {
<a name="l00259"></a>00259       message = 0;
<a name="l00260"></a>00260       flags = 0;
<a name="l00261"></a>00261 
<a name="l00262"></a>00262       <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (message, <a class="code" href="zclient_8h.html#a321bbeaddad8bc9bffaf57f7ac6cf8fd">ZAPI_MESSAGE_NEXTHOP</a>);
<a name="l00263"></a>00263       <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (message, <a class="code" href="zclient_8h.html#a4a5d60df1ef02f794476ea1daa6ba024">ZAPI_MESSAGE_METRIC</a>);
<a name="l00264"></a>00264 <span class="preprocessor">#if 0</span>
<a name="l00265"></a>00265 <span class="preprocessor"></span>      <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (message, <a class="code" href="zclient_8h.html#abe498bb81bfbda17757173ef23e25179">ZAPI_MESSAGE_DISTANCE</a>);
<a name="l00266"></a>00266 <span class="preprocessor">#endif</span>
<a name="l00267"></a>00267 <span class="preprocessor"></span>
<a name="l00268"></a>00268       stream = zclient-&gt;<a class="code" href="structzclient.html#a6ad60dd1b329d25af807f1517634b71f">obuf</a>;
<a name="l00269"></a>00269       <a class="code" href="stream_8c.html#aee8fd31485ebc2f0a556a6a5d5c2d1e6">stream_reset</a> (stream);
<a name="l00270"></a>00270       <a class="code" href="zclient_8c.html#a70fa712bf570d588ea3b3c464bc5156f">zclient_create_header</a> (stream, <a class="code" href="zebra_8h.html#aa2913a6b1e5fbc598479aa282343a5e1">ZEBRA_IPV4_ROUTE_ADD</a>);
<a name="l00271"></a>00271       <span class="comment">/* type */</span>
<a name="l00272"></a>00272       <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (stream, <a class="code" href="zebra_8h.html#a87ef34bfb648351225e8dd877f073401">ZEBRA_ROUTE_ISIS</a>);
<a name="l00273"></a>00273       <span class="comment">/* flags */</span>
<a name="l00274"></a>00274       <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (stream, flags);
<a name="l00275"></a>00275       <span class="comment">/* message */</span>
<a name="l00276"></a>00276       <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (stream, message);
<a name="l00277"></a>00277       <span class="comment">/* prefix information */</span>
<a name="l00278"></a>00278       psize = <a class="code" href="bgpd_8h.html#a472145011d944606a257487e80cc3ace">PSIZE</a> (prefix-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
<a name="l00279"></a>00279       <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (stream, prefix-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
<a name="l00280"></a>00280       <a class="code" href="stream_8c.html#a39121b19ef0be09e9a5598a1ea1371c0">stream_write</a> (stream, (u_char *) &amp; prefix-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>, psize);
<a name="l00281"></a>00281 
<a name="l00282"></a>00282       <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (stream, <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (route_info-&gt;<a class="code" href="structisis__route__info.html#a7d171b9150f18e8347485925ccbc2a21">nexthops</a>));
<a name="l00283"></a>00283 
<a name="l00284"></a>00284       <span class="comment">/* Nexthop, ifindex, distance and metric information */</span>
<a name="l00285"></a>00285       <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (route_info-&gt;<a class="code" href="structisis__route__info.html#a7d171b9150f18e8347485925ccbc2a21">nexthops</a>, node, nexthop))
<a name="l00286"></a>00286     {
<a name="l00287"></a>00287       <span class="comment">/* FIXME: can it be ? */</span>
<a name="l00288"></a>00288       <span class="keywordflow">if</span> (nexthop-&gt;<a class="code" href="structisis__nexthop.html#af87b2edeb3bf95f9351a9f224d1b7524">ip</a>.s_addr != INADDR_ANY)
<a name="l00289"></a>00289         {
<a name="l00290"></a>00290           <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (stream, <a class="code" href="zebra_8h.html#ae603faed81a38b4507ffd9b6f9586b44">ZEBRA_NEXTHOP_IPV4</a>);
<a name="l00291"></a>00291           <a class="code" href="stream_8c.html#a9019a5de70c1b6c2715cf24103109632">stream_put_in_addr</a> (stream, &amp;nexthop-&gt;<a class="code" href="structisis__nexthop.html#af87b2edeb3bf95f9351a9f224d1b7524">ip</a>);
<a name="l00292"></a>00292         }
<a name="l00293"></a>00293       <span class="keywordflow">else</span>
<a name="l00294"></a>00294         {
<a name="l00295"></a>00295           <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (stream, <a class="code" href="zebra_8h.html#a8b5777b74f2584912603090de989e564">ZEBRA_NEXTHOP_IFINDEX</a>);
<a name="l00296"></a>00296           <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (stream, nexthop-&gt;<a class="code" href="structisis__nexthop.html#ac518df0bd2fbe07b4539292c56c9d322">ifindex</a>);
<a name="l00297"></a>00297         }
<a name="l00298"></a>00298     }
<a name="l00299"></a>00299 <span class="preprocessor">#if 0</span>
<a name="l00300"></a>00300 <span class="preprocessor"></span>      <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (message, <a class="code" href="zclient_8h.html#abe498bb81bfbda17757173ef23e25179">ZAPI_MESSAGE_DISTANCE</a>))
<a name="l00301"></a>00301     <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (stream, route_info-&gt;<a class="code" href="structisis__route__info.html#ab94ede0380ec279145c2ae5195a15edb">depth</a>);
<a name="l00302"></a>00302 <span class="preprocessor">#endif</span>
<a name="l00303"></a>00303 <span class="preprocessor"></span>      <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (message, <a class="code" href="zclient_8h.html#a4a5d60df1ef02f794476ea1daa6ba024">ZAPI_MESSAGE_METRIC</a>))
<a name="l00304"></a>00304     <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (stream, route_info-&gt;<a class="code" href="structisis__route__info.html#a0d496cd637c7458c78b9b387999595c1">cost</a>);
<a name="l00305"></a>00305 
<a name="l00306"></a>00306       <a class="code" href="stream_8c.html#a41de70a7383bac6220b787d740c0b261">stream_putw_at</a> (stream, 0, <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a> (stream));
<a name="l00307"></a>00307       <a class="code" href="zclient_8c.html#ad395166e549bd33dcc253052ac0bbd7d">zclient_send_message</a>(zclient);
<a name="l00308"></a>00308       <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (route_info-&gt;<a class="code" href="structisis__route__info.html#ae301bfed55067a97479929d4d206e711">flag</a>, <a class="code" href="isis__route_8h.html#adad06b7bc8c0870be102efcb3864bad5">ISIS_ROUTE_FLAG_ZEBRA_SYNC</a>);
<a name="l00309"></a>00309     }
<a name="l00310"></a>00310 }
<a name="l00311"></a>00311 
<a name="l00312"></a>00312 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00313"></a><a class="code" href="isis__zebra_8c.html#af648c526d0728c4602235866d20cecfa">00313</a> <a class="code" href="isis__zebra_8c.html#af648c526d0728c4602235866d20cecfa">isis_zebra_route_del_ipv4</a> (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>,
<a name="l00314"></a>00314                <span class="keyword">struct</span> <a class="code" href="structisis__route__info.html">isis_route_info</a> *<a class="code" href="zebra__rib_8c.html#a2cb61c6ddc0de037d5a1fda1d8e55bd9">route_info</a>)
<a name="l00315"></a>00315 {
<a name="l00316"></a>00316   <span class="keyword">struct </span><a class="code" href="structzapi__ipv4.html">zapi_ipv4</a> api;
<a name="l00317"></a>00317   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> prefix4;
<a name="l00318"></a>00318 
<a name="l00319"></a>00319   <span class="keywordflow">if</span> (zclient-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="zebra_8h.html#a87ef34bfb648351225e8dd877f073401">ZEBRA_ROUTE_ISIS</a>])
<a name="l00320"></a>00320     {
<a name="l00321"></a>00321       api.<a class="code" href="structzapi__ipv4.html#ae4c29fc6652367a6546104010802ac2f">type</a> = <a class="code" href="zebra_8h.html#a87ef34bfb648351225e8dd877f073401">ZEBRA_ROUTE_ISIS</a>;
<a name="l00322"></a>00322       api.<a class="code" href="structzapi__ipv4.html#af27235a3df3f1e86cdbd91bce4e0a2c9">flags</a> = 0;
<a name="l00323"></a>00323       api.<a class="code" href="structzapi__ipv4.html#a5d958982406b8e5c5792fa61d30dad2d">message</a> = 0;
<a name="l00324"></a>00324       prefix4.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
<a name="l00325"></a>00325       prefix4.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = prefix-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>;
<a name="l00326"></a>00326       prefix4.prefix = prefix-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>;
<a name="l00327"></a>00327       <a class="code" href="zclient_8c.html#ad9a398f43faa79a0bab620c985fb476a">zapi_ipv4_route</a> (<a class="code" href="zebra_8h.html#a0c9efcc3f61219a6697f5da18d8de992">ZEBRA_IPV4_ROUTE_DELETE</a>, zclient, &amp;prefix4, &amp;api);
<a name="l00328"></a>00328     }
<a name="l00329"></a>00329   <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (route_info-&gt;<a class="code" href="structisis__route__info.html#ae301bfed55067a97479929d4d206e711">flag</a>, <a class="code" href="isis__route_8h.html#adad06b7bc8c0870be102efcb3864bad5">ISIS_ROUTE_FLAG_ZEBRA_SYNC</a>);
<a name="l00330"></a>00330 
<a name="l00331"></a>00331   <span class="keywordflow">return</span>;
<a name="l00332"></a>00332 }
<a name="l00333"></a>00333 
<a name="l00334"></a>00334 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00335"></a>00335 <span class="preprocessor"></span><span class="keywordtype">void</span>
<a name="l00336"></a>00336 isis_zebra_route_add_ipv6 (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="structprefix.html">prefix</a>,
<a name="l00337"></a>00337                <span class="keyword">struct</span> <a class="code" href="structisis__route__info.html">isis_route_info</a> *<a class="code" href="zebra__rib_8c.html#a2cb61c6ddc0de037d5a1fda1d8e55bd9">route_info</a>)
<a name="l00338"></a>00338 {
<a name="l00339"></a>00339   <span class="keyword">struct </span>zapi_ipv6 api;
<a name="l00340"></a>00340   <span class="keyword">struct </span>in6_addr **nexthop_list;
<a name="l00341"></a>00341   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> *ifindex_list;
<a name="l00342"></a>00342   <span class="keyword">struct </span>isis_nexthop6 *nexthop6;
<a name="l00343"></a>00343   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>, size;
<a name="l00344"></a>00344   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00345"></a>00345   <span class="keyword">struct </span>prefix_ipv6 prefix6;
<a name="l00346"></a>00346 
<a name="l00347"></a>00347   <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (route_info-&gt;<a class="code" href="structisis__route__info.html#ae301bfed55067a97479929d4d206e711">flag</a>, <a class="code" href="isis__route_8h.html#adad06b7bc8c0870be102efcb3864bad5">ISIS_ROUTE_FLAG_ZEBRA_SYNC</a>))
<a name="l00348"></a>00348     <span class="keywordflow">return</span>;
<a name="l00349"></a>00349 
<a name="l00350"></a>00350   api.type = <a class="code" href="zebra_8h.html#a87ef34bfb648351225e8dd877f073401">ZEBRA_ROUTE_ISIS</a>;
<a name="l00351"></a>00351   api.flags = 0;
<a name="l00352"></a>00352   api.message = 0;
<a name="l00353"></a>00353   <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#a321bbeaddad8bc9bffaf57f7ac6cf8fd">ZAPI_MESSAGE_NEXTHOP</a>);
<a name="l00354"></a>00354   <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#ae8d1e48f6c2858ecda1c3aee4219a0e6">ZAPI_MESSAGE_IFINDEX</a>);
<a name="l00355"></a>00355   <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#a4a5d60df1ef02f794476ea1daa6ba024">ZAPI_MESSAGE_METRIC</a>);
<a name="l00356"></a>00356   api.metric = route_info-&gt;<a class="code" href="structisis__route__info.html#a0d496cd637c7458c78b9b387999595c1">cost</a>;
<a name="l00357"></a>00357 <span class="preprocessor">#if 0</span>
<a name="l00358"></a>00358 <span class="preprocessor"></span>  <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#abe498bb81bfbda17757173ef23e25179">ZAPI_MESSAGE_DISTANCE</a>);
<a name="l00359"></a>00359   api.distance = route_info-&gt;<a class="code" href="structisis__route__info.html#ab94ede0380ec279145c2ae5195a15edb">depth</a>;
<a name="l00360"></a>00360 <span class="preprocessor">#endif</span>
<a name="l00361"></a>00361 <span class="preprocessor"></span>  api.nexthop_num = <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (route_info-&gt;nexthops6);
<a name="l00362"></a>00362   api.ifindex_num = <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (route_info-&gt;nexthops6);
<a name="l00363"></a>00363 
<a name="l00364"></a>00364   <span class="comment">/* allocate memory for nexthop_list */</span>
<a name="l00365"></a>00365   size = <span class="keyword">sizeof</span> (<span class="keyword">struct </span>isis_nexthop6 *) * <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (route_info-&gt;nexthops6);
<a name="l00366"></a>00366   nexthop_list = (<span class="keyword">struct </span>in6_addr **) <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba80b5687b76c7243b1ec8be38fb740b3f">MTYPE_ISIS_TMP</a>, size);
<a name="l00367"></a>00367   <span class="keywordflow">if</span> (!nexthop_list)
<a name="l00368"></a>00368     {
<a name="l00369"></a>00369       <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;isis_zebra_add_route_ipv6: out of memory!&quot;</span>);
<a name="l00370"></a>00370       <span class="keywordflow">return</span>;
<a name="l00371"></a>00371     }
<a name="l00372"></a>00372 
<a name="l00373"></a>00373   <span class="comment">/* allocate memory for ifindex_list */</span>
<a name="l00374"></a>00374   size = <span class="keyword">sizeof</span> (<span class="keywordtype">unsigned</span> int) * <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (route_info-&gt;nexthops6);
<a name="l00375"></a>00375   ifindex_list = (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> *) <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba80b5687b76c7243b1ec8be38fb740b3f">MTYPE_ISIS_TMP</a>, size);
<a name="l00376"></a>00376   <span class="keywordflow">if</span> (!ifindex_list)
<a name="l00377"></a>00377     {
<a name="l00378"></a>00378       <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;isis_zebra_add_route_ipv6: out of memory!&quot;</span>);
<a name="l00379"></a>00379       <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba80b5687b76c7243b1ec8be38fb740b3f">MTYPE_ISIS_TMP</a>, nexthop_list);
<a name="l00380"></a>00380       <span class="keywordflow">return</span>;
<a name="l00381"></a>00381     }
<a name="l00382"></a>00382 
<a name="l00383"></a>00383   <span class="comment">/* for each nexthop */</span>
<a name="l00384"></a>00384   i = 0;
<a name="l00385"></a>00385   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (route_info-&gt;nexthops6, node, nexthop6))
<a name="l00386"></a>00386     {
<a name="l00387"></a>00387       <span class="keywordflow">if</span> (!IN6_IS_ADDR_LINKLOCAL (&amp;nexthop6-&gt;ip6) &amp;&amp;
<a name="l00388"></a>00388       !IN6_IS_ADDR_UNSPECIFIED (&amp;nexthop6-&gt;ip6))
<a name="l00389"></a>00389     {
<a name="l00390"></a>00390       api.nexthop_num--;
<a name="l00391"></a>00391       api.ifindex_num--;
<a name="l00392"></a>00392       <span class="keywordflow">continue</span>;
<a name="l00393"></a>00393     }
<a name="l00394"></a>00394 
<a name="l00395"></a>00395       nexthop_list[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] = &amp;nexthop6-&gt;ip6;
<a name="l00396"></a>00396       ifindex_list[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] = nexthop6-&gt;ifindex;
<a name="l00397"></a>00397       i++;
<a name="l00398"></a>00398     }
<a name="l00399"></a>00399 
<a name="l00400"></a>00400   api.nexthop = nexthop_list;
<a name="l00401"></a>00401   api.ifindex = ifindex_list;
<a name="l00402"></a>00402 
<a name="l00403"></a>00403   <span class="keywordflow">if</span> (api.nexthop_num &amp;&amp; api.ifindex_num)
<a name="l00404"></a>00404     {
<a name="l00405"></a>00405       prefix6.family = AF_INET6;
<a name="l00406"></a>00406       prefix6.prefixlen = prefix-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>;
<a name="l00407"></a>00407       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;prefix6.prefix, &amp;prefix-&gt;u.prefix6, sizeof (<span class="keyword">struct</span> in6_addr));
<a name="l00408"></a>00408       zapi_ipv6_route (<a class="code" href="zebra_8h.html#a2d0f19502bde040501c7ad64bc955739">ZEBRA_IPV6_ROUTE_ADD</a>, zclient, &amp;prefix6, &amp;api);
<a name="l00409"></a>00409       <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (route_info-&gt;<a class="code" href="structisis__route__info.html#ae301bfed55067a97479929d4d206e711">flag</a>, <a class="code" href="isis__route_8h.html#adad06b7bc8c0870be102efcb3864bad5">ISIS_ROUTE_FLAG_ZEBRA_SYNC</a>);
<a name="l00410"></a>00410     }
<a name="l00411"></a>00411 
<a name="l00412"></a>00412   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba80b5687b76c7243b1ec8be38fb740b3f">MTYPE_ISIS_TMP</a>, nexthop_list);
<a name="l00413"></a>00413   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba80b5687b76c7243b1ec8be38fb740b3f">MTYPE_ISIS_TMP</a>, ifindex_list);
<a name="l00414"></a>00414 
<a name="l00415"></a>00415   <span class="keywordflow">return</span>;
<a name="l00416"></a>00416 }
<a name="l00417"></a>00417 
<a name="l00418"></a>00418 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00419"></a>00419 isis_zebra_route_del_ipv6 (<span class="keyword">struct</span> prefix *prefix,
<a name="l00420"></a>00420                <span class="keyword">struct</span> <a class="code" href="structisis__route__info.html">isis_route_info</a> *route_info)
<a name="l00421"></a>00421 {
<a name="l00422"></a>00422   <span class="keyword">struct </span>zapi_ipv6 api;
<a name="l00423"></a>00423   <span class="keyword">struct </span>in6_addr **nexthop_list;
<a name="l00424"></a>00424   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> *ifindex_list;
<a name="l00425"></a>00425   <span class="keyword">struct </span>isis_nexthop6 *nexthop6;
<a name="l00426"></a>00426   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>, size;
<a name="l00427"></a>00427   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00428"></a>00428   <span class="keyword">struct </span>prefix_ipv6 prefix6;
<a name="l00429"></a>00429 
<a name="l00430"></a>00430   <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (route_info-&gt;<a class="code" href="structisis__route__info.html#ae301bfed55067a97479929d4d206e711">flag</a>, <a class="code" href="isis__route_8h.html#adad06b7bc8c0870be102efcb3864bad5">ISIS_ROUTE_FLAG_ZEBRA_SYNC</a>))
<a name="l00431"></a>00431     <span class="keywordflow">return</span>;
<a name="l00432"></a>00432 
<a name="l00433"></a>00433   api.type = <a class="code" href="zebra_8h.html#a87ef34bfb648351225e8dd877f073401">ZEBRA_ROUTE_ISIS</a>;
<a name="l00434"></a>00434   api.flags = 0;
<a name="l00435"></a>00435   api.message = 0;
<a name="l00436"></a>00436   <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#a321bbeaddad8bc9bffaf57f7ac6cf8fd">ZAPI_MESSAGE_NEXTHOP</a>);
<a name="l00437"></a>00437   <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#ae8d1e48f6c2858ecda1c3aee4219a0e6">ZAPI_MESSAGE_IFINDEX</a>);
<a name="l00438"></a>00438   api.nexthop_num = <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (route_info-&gt;nexthops6);
<a name="l00439"></a>00439   api.ifindex_num = <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (route_info-&gt;nexthops6);
<a name="l00440"></a>00440 
<a name="l00441"></a>00441   <span class="comment">/* allocate memory for nexthop_list */</span>
<a name="l00442"></a>00442   size = <span class="keyword">sizeof</span> (<span class="keyword">struct </span>isis_nexthop6 *) * <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (route_info-&gt;nexthops6);
<a name="l00443"></a>00443   nexthop_list = (<span class="keyword">struct </span>in6_addr **) <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba80b5687b76c7243b1ec8be38fb740b3f">MTYPE_ISIS_TMP</a>, size);
<a name="l00444"></a>00444   <span class="keywordflow">if</span> (!nexthop_list)
<a name="l00445"></a>00445     {
<a name="l00446"></a>00446       <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;isis_zebra_route_del_ipv6: out of memory!&quot;</span>);
<a name="l00447"></a>00447       <span class="keywordflow">return</span>;
<a name="l00448"></a>00448     }
<a name="l00449"></a>00449 
<a name="l00450"></a>00450   <span class="comment">/* allocate memory for ifindex_list */</span>
<a name="l00451"></a>00451   size = <span class="keyword">sizeof</span> (<span class="keywordtype">unsigned</span> int) * <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (route_info-&gt;nexthops6);
<a name="l00452"></a>00452   ifindex_list = (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> *) <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba80b5687b76c7243b1ec8be38fb740b3f">MTYPE_ISIS_TMP</a>, size);
<a name="l00453"></a>00453   <span class="keywordflow">if</span> (!ifindex_list)
<a name="l00454"></a>00454     {
<a name="l00455"></a>00455       <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;isis_zebra_route_del_ipv6: out of memory!&quot;</span>);
<a name="l00456"></a>00456       <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba80b5687b76c7243b1ec8be38fb740b3f">MTYPE_ISIS_TMP</a>, nexthop_list);
<a name="l00457"></a>00457       <span class="keywordflow">return</span>;
<a name="l00458"></a>00458     }
<a name="l00459"></a>00459 
<a name="l00460"></a>00460   <span class="comment">/* for each nexthop */</span>
<a name="l00461"></a>00461   i = 0;
<a name="l00462"></a>00462   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (route_info-&gt;nexthops6, node, nexthop6))
<a name="l00463"></a>00463     {
<a name="l00464"></a>00464       <span class="keywordflow">if</span> (!IN6_IS_ADDR_LINKLOCAL (&amp;nexthop6-&gt;ip6) &amp;&amp;
<a name="l00465"></a>00465       !IN6_IS_ADDR_UNSPECIFIED (&amp;nexthop6-&gt;ip6))
<a name="l00466"></a>00466     {
<a name="l00467"></a>00467       api.nexthop_num--;
<a name="l00468"></a>00468       api.ifindex_num--;
<a name="l00469"></a>00469       <span class="keywordflow">continue</span>;
<a name="l00470"></a>00470     }
<a name="l00471"></a>00471 
<a name="l00472"></a>00472       nexthop_list[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] = &amp;nexthop6-&gt;ip6;
<a name="l00473"></a>00473       ifindex_list[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] = nexthop6-&gt;ifindex;
<a name="l00474"></a>00474       i++;
<a name="l00475"></a>00475     }
<a name="l00476"></a>00476 
<a name="l00477"></a>00477   api.nexthop = nexthop_list;
<a name="l00478"></a>00478   api.ifindex = ifindex_list;
<a name="l00479"></a>00479 
<a name="l00480"></a>00480   <span class="keywordflow">if</span> (api.nexthop_num &amp;&amp; api.ifindex_num)
<a name="l00481"></a>00481     {
<a name="l00482"></a>00482       prefix6.family = AF_INET6;
<a name="l00483"></a>00483       prefix6.prefixlen = prefix-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>;
<a name="l00484"></a>00484       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;prefix6.prefix, &amp;prefix-&gt;u.prefix6, sizeof (<span class="keyword">struct</span> in6_addr));
<a name="l00485"></a>00485       zapi_ipv6_route (<a class="code" href="zebra_8h.html#ad98414d027f7107e91cb040a329ad48a">ZEBRA_IPV6_ROUTE_DELETE</a>, zclient, &amp;prefix6, &amp;api);
<a name="l00486"></a>00486       <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (route_info-&gt;<a class="code" href="structisis__route__info.html#ae301bfed55067a97479929d4d206e711">flag</a>, <a class="code" href="isis__route_8h.html#adad06b7bc8c0870be102efcb3864bad5">ISIS_ROUTE_FLAG_ZEBRA_SYNC</a>);
<a name="l00487"></a>00487     }
<a name="l00488"></a>00488 
<a name="l00489"></a>00489   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba80b5687b76c7243b1ec8be38fb740b3f">MTYPE_ISIS_TMP</a>, nexthop_list);
<a name="l00490"></a>00490   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba80b5687b76c7243b1ec8be38fb740b3f">MTYPE_ISIS_TMP</a>, ifindex_list);
<a name="l00491"></a>00491 }
<a name="l00492"></a>00492 
<a name="l00493"></a>00493 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l00494"></a>00494 
<a name="l00495"></a>00495 <span class="keywordtype">void</span>
<a name="l00496"></a><a class="code" href="isis__zebra_8h.html#ac6ae8b43e40dcfe3dc2e1b10af299f7e">00496</a> <a class="code" href="isis__zebra_8c.html#ac6ae8b43e40dcfe3dc2e1b10af299f7e">isis_zebra_route_update</a> (<span class="keyword">struct</span> prefix *prefix,
<a name="l00497"></a>00497              <span class="keyword">struct</span> <a class="code" href="structisis__route__info.html">isis_route_info</a> *route_info)
<a name="l00498"></a>00498 {
<a name="l00499"></a>00499   <span class="keywordflow">if</span> (zclient-&gt;<a class="code" href="structzclient.html#a53dfb4d4cfc1331edf8a62d04d99f08f">sock</a> &lt; 0)
<a name="l00500"></a>00500     <span class="keywordflow">return</span>;
<a name="l00501"></a>00501 
<a name="l00502"></a>00502   <span class="keywordflow">if</span> (!zclient-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="zebra_8h.html#a87ef34bfb648351225e8dd877f073401">ZEBRA_ROUTE_ISIS</a>])
<a name="l00503"></a>00503     <span class="keywordflow">return</span>;
<a name="l00504"></a>00504 
<a name="l00505"></a>00505   <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (route_info-&gt;<a class="code" href="structisis__route__info.html#ae301bfed55067a97479929d4d206e711">flag</a>, <a class="code" href="isis__route_8h.html#ad8a8597e10122462fa10436974565796">ISIS_ROUTE_FLAG_ACTIVE</a>))
<a name="l00506"></a>00506     {
<a name="l00507"></a>00507       <span class="keywordflow">if</span> (prefix-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == AF_INET)
<a name="l00508"></a>00508     <a class="code" href="isis__zebra_8c.html#aaa4a7252082b6d940d23552e08f96413">isis_zebra_route_add_ipv4</a> (prefix, route_info);
<a name="l00509"></a>00509 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00510"></a>00510 <span class="preprocessor"></span>      <span class="keywordflow">else</span> <span class="keywordflow">if</span> (prefix-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == AF_INET6)
<a name="l00511"></a>00511     isis_zebra_route_add_ipv6 (prefix, route_info);
<a name="l00512"></a>00512 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l00513"></a>00513     }
<a name="l00514"></a>00514   <span class="keywordflow">else</span>
<a name="l00515"></a>00515     {
<a name="l00516"></a>00516       <span class="keywordflow">if</span> (prefix-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == AF_INET)
<a name="l00517"></a>00517     <a class="code" href="isis__zebra_8c.html#af648c526d0728c4602235866d20cecfa">isis_zebra_route_del_ipv4</a> (prefix, route_info);
<a name="l00518"></a>00518 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00519"></a>00519 <span class="preprocessor"></span>      <span class="keywordflow">else</span> <span class="keywordflow">if</span> (prefix-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == AF_INET6)
<a name="l00520"></a>00520     isis_zebra_route_del_ipv6 (prefix, route_info);
<a name="l00521"></a>00521 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l00522"></a>00522     }
<a name="l00523"></a>00523   <span class="keywordflow">return</span>;
<a name="l00524"></a>00524 }
<a name="l00525"></a>00525 
<a name="l00526"></a>00526 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00527"></a><a class="code" href="isis__zebra_8c.html#a7663aad2b452852f089314ca0ca5190e">00527</a> <a class="code" href="isis__zebra_8c.html#a7663aad2b452852f089314ca0ca5190e">isis_zebra_read_ipv4</a> (<span class="keywordtype">int</span> command, <span class="keyword">struct</span> zclient *zclient,
<a name="l00528"></a>00528               <a class="code" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a> <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>)
<a name="l00529"></a>00529 {
<a name="l00530"></a>00530   <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="structstream.html">stream</a>;
<a name="l00531"></a>00531   <span class="keyword">struct </span><a class="code" href="structzapi__ipv4.html">zapi_ipv4</a> api;
<a name="l00532"></a>00532   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> p;
<a name="l00533"></a>00533   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> ifindex;
<a name="l00534"></a>00534   <span class="keyword">struct </span>in_addr nexthop;
<a name="l00535"></a>00535 
<a name="l00536"></a>00536   stream = zclient-&gt;<a class="code" href="structzclient.html#a1b9d2a1e869c1008c2bc70d14ce2bf49">ibuf</a>;
<a name="l00537"></a>00537   memset (&amp;p, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a>));
<a name="l00538"></a>00538   ifindex = 0;
<a name="l00539"></a>00539 
<a name="l00540"></a>00540   api.<a class="code" href="structzapi__ipv4.html#ae4c29fc6652367a6546104010802ac2f">type</a> = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (stream);
<a name="l00541"></a>00541   api.<a class="code" href="structzapi__ipv4.html#af27235a3df3f1e86cdbd91bce4e0a2c9">flags</a> = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (stream);
<a name="l00542"></a>00542   api.<a class="code" href="structzapi__ipv4.html#a5d958982406b8e5c5792fa61d30dad2d">message</a> = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (stream);
<a name="l00543"></a>00543 
<a name="l00544"></a>00544   p.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
<a name="l00545"></a>00545   p.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (stream);
<a name="l00546"></a>00546   <a class="code" href="stream_8c.html#ab7101e57ef0d9dc1a33e7f7e30c91b9a">stream_get</a> (&amp;p.prefix, stream, <a class="code" href="bgpd_8h.html#a472145011d944606a257487e80cc3ace">PSIZE</a> (p.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a>));
<a name="l00547"></a>00547 
<a name="l00548"></a>00548   <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (api.<a class="code" href="structzapi__ipv4.html#a5d958982406b8e5c5792fa61d30dad2d">message</a>, <a class="code" href="zclient_8h.html#a321bbeaddad8bc9bffaf57f7ac6cf8fd">ZAPI_MESSAGE_NEXTHOP</a>))
<a name="l00549"></a>00549     {
<a name="l00550"></a>00550       api.<a class="code" href="structzapi__ipv4.html#a7af9e3fe513c80387289b433e33dfd7b">nexthop_num</a> = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (stream);
<a name="l00551"></a>00551       nexthop.s_addr = <a class="code" href="stream_8c.html#a0d93aa3e961894e5215d343625488576">stream_get_ipv4</a> (stream);
<a name="l00552"></a>00552     }
<a name="l00553"></a>00553   <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (api.<a class="code" href="structzapi__ipv4.html#a5d958982406b8e5c5792fa61d30dad2d">message</a>, <a class="code" href="zclient_8h.html#ae8d1e48f6c2858ecda1c3aee4219a0e6">ZAPI_MESSAGE_IFINDEX</a>))
<a name="l00554"></a>00554     {
<a name="l00555"></a>00555       api.<a class="code" href="structzapi__ipv4.html#ae831960c79c5bbf79345fe148c202641">ifindex_num</a> = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (stream);
<a name="l00556"></a>00556       ifindex = <a class="code" href="stream_8c.html#af857bfab0cbe7d5681e9108b58f939f2">stream_getl</a> (stream);
<a name="l00557"></a>00557     }
<a name="l00558"></a>00558   <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (api.<a class="code" href="structzapi__ipv4.html#a5d958982406b8e5c5792fa61d30dad2d">message</a>, <a class="code" href="zclient_8h.html#abe498bb81bfbda17757173ef23e25179">ZAPI_MESSAGE_DISTANCE</a>))
<a name="l00559"></a>00559     api.<a class="code" href="structzapi__ipv4.html#a78e8151136680e3bd6160864426f4ab3">distance</a> = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (stream);
<a name="l00560"></a>00560   <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (api.<a class="code" href="structzapi__ipv4.html#a5d958982406b8e5c5792fa61d30dad2d">message</a>, <a class="code" href="zclient_8h.html#a4a5d60df1ef02f794476ea1daa6ba024">ZAPI_MESSAGE_METRIC</a>))
<a name="l00561"></a>00561     api.<a class="code" href="structzapi__ipv4.html#a4894d78fb0f8be44470318b265e5a487">metric</a> = <a class="code" href="stream_8c.html#af857bfab0cbe7d5681e9108b58f939f2">stream_getl</a> (stream);
<a name="l00562"></a>00562   <span class="keywordflow">else</span>
<a name="l00563"></a>00563     api.<a class="code" href="structzapi__ipv4.html#a4894d78fb0f8be44470318b265e5a487">metric</a> = 0;
<a name="l00564"></a>00564 
<a name="l00565"></a>00565   <span class="keywordflow">if</span> (command == <a class="code" href="zebra_8h.html#aa2913a6b1e5fbc598479aa282343a5e1">ZEBRA_IPV4_ROUTE_ADD</a>)
<a name="l00566"></a>00566     {
<a name="l00567"></a>00567       <span class="keywordflow">if</span> (isis-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#a5c2859a260ca31feae33a25a568a9bb9">DEBUG_ZEBRA</a>)
<a name="l00568"></a>00568     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;IPv4 Route add from Z&quot;</span>);
<a name="l00569"></a>00569     }
<a name="l00570"></a>00570 
<a name="l00571"></a>00571   <span class="keywordflow">return</span> 0;
<a name="l00572"></a>00572 }
<a name="l00573"></a>00573 
<a name="l00574"></a>00574 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00575"></a>00575 <span class="preprocessor"></span><span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00576"></a>00576 isis_zebra_read_ipv6 (<span class="keywordtype">int</span> command, <span class="keyword">struct</span> zclient *zclient,
<a name="l00577"></a>00577               <a class="code" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a> <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>)
<a name="l00578"></a>00578 {
<a name="l00579"></a>00579   <span class="keywordflow">return</span> 0;
<a name="l00580"></a>00580 }
<a name="l00581"></a>00581 <span class="preprocessor">#endif</span>
<a name="l00582"></a>00582 <span class="preprocessor"></span>
<a name="l00583"></a><a class="code" href="isis__zebra_8c.html#adedb1bc9e15fabd8e8bb06a0eb9c298d">00583</a> <span class="preprocessor">#define ISIS_TYPE_IS_REDISTRIBUTED(T) \</span>
<a name="l00584"></a>00584 <span class="preprocessor">T == ZEBRA_ROUTE_MAX ? zclient-&gt;default_information : zclient-&gt;redist[type]</span>
<a name="l00585"></a>00585 <span class="preprocessor"></span>
<a name="l00586"></a>00586 <span class="keywordtype">int</span>
<a name="l00587"></a><a class="code" href="isis__zebra_8h.html#a4ad5373c4fa2d8de38bac407ab524341">00587</a> <a class="code" href="isis__zebra_8c.html#a4ad5373c4fa2d8de38bac407ab524341">isis_distribute_list_update</a> (<span class="keywordtype">int</span> routetype)
<a name="l00588"></a>00588 {
<a name="l00589"></a>00589   <span class="keywordflow">return</span> 0;
<a name="l00590"></a>00590 }
<a name="l00591"></a>00591 
<a name="l00592"></a>00592 <span class="preprocessor">#if 0 </span><span class="comment">/* Not yet. */</span>
<a name="l00593"></a>00593 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00594"></a>00594 isis_redistribute_default_set (<span class="keywordtype">int</span> routetype, <span class="keywordtype">int</span> <a class="code" href="ospf__lsa_8c.html#a10781678cf0418caa60ce806cb18f7f1">metric_type</a>,
<a name="l00595"></a>00595                    <span class="keywordtype">int</span> <a class="code" href="ospf__lsa_8c.html#aebf4067916a42ca176b32e7dbb15621d">metric_value</a>)
<a name="l00596"></a>00596 {
<a name="l00597"></a>00597   <span class="keywordflow">return</span> 0;
<a name="l00598"></a>00598 }
<a name="l00599"></a>00599 <span class="preprocessor">#endif </span><span class="comment">/* 0 */</span>
<a name="l00600"></a>00600 
<a name="l00601"></a>00601 <span class="keywordtype">void</span>
<a name="l00602"></a><a class="code" href="isis__zebra_8h.html#a1ae4c4cf0dffcb57560c6252aaf0b63c">00602</a> <a class="code" href="isis__zebra_8c.html#af8996c6e8d8285bb9700c1abff47d5d9">isis_zebra_init</a> ()
<a name="l00603"></a>00603 {
<a name="l00604"></a>00604   zclient = <a class="code" href="zclient_8c.html#aa521f2a71596b1dc50f76fcb57dff30b">zclient_new</a> ();
<a name="l00605"></a>00605   <a class="code" href="zclient_8c.html#ac649a246f405850a3ade72de002745e3">zclient_init</a> (zclient, <a class="code" href="zebra_8h.html#a87ef34bfb648351225e8dd877f073401">ZEBRA_ROUTE_ISIS</a>);
<a name="l00606"></a>00606   zclient-&gt;<a class="code" href="structzclient.html#a91ae88d0aa9ff087af5b7567334197f6">router_id_update</a> = <a class="code" href="isis__zebra_8c.html#aca517fedd8c50691b81de0c89e65f1d3">isis_router_id_update_zebra</a>;
<a name="l00607"></a>00607   zclient-&gt;<a class="code" href="structzclient.html#a42e63c358fc87552ca16a1eea8b69c4f">interface_add</a> = <a class="code" href="isis__zebra_8c.html#a0050c6738bc25dd95d0a764b5f1e7b6f">isis_zebra_if_add</a>;
<a name="l00608"></a>00608   zclient-&gt;<a class="code" href="structzclient.html#a59d608db28363c236285c6323d5697ab">interface_delete</a> = <a class="code" href="isis__zebra_8c.html#a59eb03c7901949598d99352ef96a3ea6">isis_zebra_if_del</a>;
<a name="l00609"></a>00609   zclient-&gt;<a class="code" href="structzclient.html#a45465702e655472187e9efc3c1734daa">interface_up</a> = <a class="code" href="isis__zebra_8c.html#a9f8318c84dd5ca62bba515a3dd239f81">isis_zebra_if_state_up</a>;
<a name="l00610"></a>00610   zclient-&gt;<a class="code" href="structzclient.html#a426b5e0ec3b5ad8843eb42deaa4fe335">interface_down</a> = <a class="code" href="isis__zebra_8c.html#a71905923af9aef26f5339027ee6f606e">isis_zebra_if_state_down</a>;
<a name="l00611"></a>00611   zclient-&gt;<a class="code" href="structzclient.html#a75ee908bb229653f271356b982fa76e7">interface_address_add</a> = <a class="code" href="isis__zebra_8c.html#a8a3a958b7e27aba2c67b6903a6db7ace">isis_zebra_if_address_add</a>;
<a name="l00612"></a>00612   zclient-&gt;<a class="code" href="structzclient.html#a3494b722f85fe14ff8c99ddae54bad94">interface_address_delete</a> = <a class="code" href="isis__zebra_8c.html#a06f91e50f72be78817656d49fbbf4ab3">isis_zebra_if_address_del</a>;
<a name="l00613"></a>00613   zclient-&gt;<a class="code" href="structzclient.html#ac2fe2ea5a7f820e1ac572f7629be997f">ipv4_route_add</a> = <a class="code" href="isis__zebra_8c.html#a7663aad2b452852f089314ca0ca5190e">isis_zebra_read_ipv4</a>;
<a name="l00614"></a>00614   zclient-&gt;<a class="code" href="structzclient.html#a2fa1fdde8885665490f46edc8c102d4a">ipv4_route_delete</a> = <a class="code" href="isis__zebra_8c.html#a7663aad2b452852f089314ca0ca5190e">isis_zebra_read_ipv4</a>;
<a name="l00615"></a>00615 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00616"></a>00616 <span class="preprocessor"></span>  zclient-&gt;<a class="code" href="structzclient.html#a9d185464cca684ac3d024ec4be7b9881">ipv6_route_add</a> = isis_zebra_read_ipv6;
<a name="l00617"></a>00617   zclient-&gt;<a class="code" href="structzclient.html#a86d1ece8718111eee4bdd79ca320e8ea">ipv6_route_delete</a> = isis_zebra_read_ipv6;
<a name="l00618"></a>00618 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l00619"></a>00619 
<a name="l00620"></a>00620   <span class="keywordflow">return</span>;
<a name="l00621"></a>00621 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="isis__zebra_8c.html">isis_zebra.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:05 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
