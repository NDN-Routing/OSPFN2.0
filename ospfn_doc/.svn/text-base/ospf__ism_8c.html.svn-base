<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: ospfd/ospf_ism.c File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('ospf__ism_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">ospfd/ospf_ism.c File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="zebra_8h_source.html">zebra.h</a>&gt;</code><br/>
<code>#include &quot;<a class="el" href="thread_8h_source.html">thread.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="linklist_8h_source.html">linklist.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="prefix_8h_source.html">prefix.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="if_8h_source.html">if.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="table_8h_source.html">table.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="log_8h_source.html">log.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospfd_8h_source.html">ospfd/ospfd.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__interface_8h_source.html">ospfd/ospf_interface.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__ism_8h_source.html">ospfd/ospf_ism.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__asbr_8h_source.html">ospfd/ospf_asbr.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__lsa_8h_source.html">ospfd/ospf_lsa.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__lsdb_8h_source.html">ospfd/ospf_lsdb.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__neighbor_8h_source.html">ospfd/ospf_neighbor.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__nsm_8h_source.html">ospfd/ospf_nsm.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__network_8h_source.html">ospfd/ospf_network.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__dump_8h_source.html">ospfd/ospf_dump.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__packet_8h_source.html">ospfd/ospf_packet.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__flood_8h_source.html">ospfd/ospf_flood.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__abr_8h_source.html">ospfd/ospf_abr.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__snmp_8h_source.html">ospfd/ospf_snmp.h</a>&quot;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for ospf_ism.c:</div>
<div class="dyncontent">
<div class="center"><img src="ospf__ism_8c__incl.png" border="0" usemap="#ospfd_2ospf__ism_8c" alt=""/></div>
<map name="ospfd_2ospf__ism_8c" id="ospfd_2ospf__ism_8c">
<area shape="rect" id="node3" href="zebra_8h.html" title="zebra.h" alt="" coords="1347,155,1413,181"/><area shape="rect" id="node61" href="thread_8h.html" title="thread.h" alt="" coords="1113,80,1185,107"/><area shape="rect" id="node63" href="linklist_8h.html" title="linklist.h" alt="" coords="1117,155,1187,181"/><area shape="rect" id="node65" href="prefix_8h.html" title="prefix.h" alt="" coords="1274,80,1341,107"/><area shape="rect" id="node67" href="if_8h.html" title="if.h" alt="" coords="1209,80,1249,107"/><area shape="rect" id="node70" href="table_8h.html" title="table.h" alt="" coords="1417,80,1481,107"/><area shape="rect" id="node72" href="log_8h.html" title="log.h" alt="" coords="1623,155,1675,181"/><area shape="rect" id="node75" href="ospfd_8h.html" title="ospfd/ospfd.h" alt="" coords="1505,80,1612,107"/><area shape="rect" id="node79" href="ospf__interface_8h.html" title="ospfd/ospf_interface.h" alt="" coords="1687,80,1845,107"/><area shape="rect" id="node81" href="ospf__packet_8h.html" title="ospfd/ospf_packet.h" alt="" coords="1811,155,1957,181"/><area shape="rect" id="node83" href="ospf__ism_8h.html" title="ospfd/ospf_ism.h" alt="" coords="1922,80,2048,107"/><area shape="rect" id="node85" href="ospf__asbr_8h.html" title="ospfd/ospf_asbr.h" alt="" coords="2073,80,2204,107"/><area shape="rect" id="node87" href="ospf__lsa_8h.html" title="ospfd/ospf_lsa.h" alt="" coords="2228,80,2351,107"/><area shape="rect" id="node89" href="ospf__lsdb_8h.html" title="ospfd/ospf_lsdb.h" alt="" coords="2375,80,2505,107"/><area shape="rect" id="node91" href="ospf__neighbor_8h.html" title="ospfd/ospf_neighbor.h" alt="" coords="2530,80,2688,107"/><area shape="rect" id="node94" href="ospf__nsm_8h.html" title="ospfd/ospf_nsm.h" alt="" coords="2713,80,2844,107"/><area shape="rect" id="node96" href="ospf__network_8h.html" title="ospfd/ospf_network.h" alt="" coords="2868,80,3023,107"/><area shape="rect" id="node98" href="ospf__dump_8h.html" title="ospfd/ospf_dump.h" alt="" coords="3047,80,3185,107"/><area shape="rect" id="node101" href="ospf__flood_8h.html" title="ospfd/ospf_flood.h" alt="" coords="3209,80,3345,107"/><area shape="rect" id="node103" href="ospf__abr_8h.html" title="ospfd/ospf_abr.h" alt="" coords="3370,80,3493,107"/><area shape="rect" id="node105" href="ospf__snmp_8h.html" title="ospfd/ospf_snmp.h" alt="" coords="3519,80,3657,107"/><area shape="rect" id="node57" href="zassert_8h.html" title="zassert.h" alt="" coords="2477,229,2555,256"/><area shape="rect" id="node59" href="str_8h.html" title="str.h" alt="" coords="2579,229,2628,256"/></map>
</div>
</div>
<p><a href="ospf__ism_8c_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__ism_8c.html#a7bbdb25f453c311eabbe4b889a3f984b">ospf_dr_election_sub</a> (struct <a class="el" href="structlist.html">list</a> *routers)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__ism_8c.html#a5b4c45eb26c85fcb0834e42879284490">ospf_elect_dr</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi, struct <a class="el" href="structlist.html">list</a> *el_list)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__ism_8c.html#acef652f2cc60b9a982cd7b336db7bab6">ospf_elect_bdr</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi, struct <a class="el" href="structlist.html">list</a> *el_list)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__ism_8c.html#ad657e6327e3b1ef6721cd302246b2f60">ospf_ism_state</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__ism_8c.html#a0b3475d6936b031942ddf94014dd3446">ospf_dr_eligible_routers</a> (struct <a class="el" href="structroute__table.html">route_table</a> *nbrs, struct <a class="el" href="structlist.html">list</a> *el_list)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__ism_8c.html#af4764e64fca5e39071fa4d876793b2d9">ospf_dr_change</a> (struct <a class="el" href="structospf.html">ospf</a> *<a class="el" href="structospf.html">ospf</a>, struct <a class="el" href="structroute__table.html">route_table</a> *nbrs)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__ism_8c.html#a6542f314f5d9994ead98814c2d9f79fb">ospf_dr_election</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__ism_8c.html#adec27301f3c252356a85e6ed6758d3be">ospf_hello_timer</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="structthread.html">thread</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__ism_8c.html#a9d8e8ec0af821785432ce75775452e82">ospf_wait_timer</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="structthread.html">thread</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__ism_8c.html#a9b8d1474016af78d544cb72802ac5470">ism_timer_set</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__ism_8c.html#a33972a8ae29cf4101a38520a9df97f3e">ism_interface_up</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__ism_8c.html#aafba9d9a628e6494aba4edfbe96a98d2">ism_loop_ind</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__ism_8c.html#a77535cd070c352cab0ab75c36a4e7760">ism_interface_down</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__ism_8c.html#acafc98c691175222f28fc9a286783412">ism_backup_seen</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__ism_8c.html#ac08f9be03c6f1c325f89189ba818659d">ism_wait_timer</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__ism_8c.html#a51213b0b544e85c62427a28d67701a25">ism_neighbor_change</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__ism_8c.html#a1e37f428fe04d4bcdd3fee7e5c71d194">ism_ignore</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__ism_8c.html#a07ae5b5b9200723fafc04b741e5fe0c2">ism_change_state</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi, int state)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__ism_8c.html#a6a90f4f003e80ca5ba3240d1f7106a74">ospf_ism_event</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="structthread.html">thread</a>)</td></tr>
<tr><td colspan="2"><h2><a name="var-members"></a>
Variables</h2></td></tr>
<tr><td class="memItemLeft" >struct {</td></tr>
<tr><td class="memItemLeft" >&#160;&#160;&#160;int(*&#160;&#160;&#160;<a class="el" href="ospf__ism_8c.html#a3bb35931dd3daced1e996b8c5ca23021">func</a> )(struct <a class="el" href="structospf__interface.html">ospf_interface</a> *)</td></tr>
<tr><td class="memItemLeft" >&#160;&#160;&#160;int&#160;&#160;&#160;<a class="el" href="ospf__ism_8c.html#ac0c302bc97f010b7f5965faa07b00354">next_state</a></td></tr>
<tr><td class="memItemLeft" valign="top">}&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__ism_8c.html#aed4e1447c6afb26301f71782f3b8922f">ISM</a> [OSPF_ISM_STATE_MAX][OSPF_ISM_EVENT_MAX]</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__ism_8c.html#a3f6a5ac88ac8c4e9118cc4cbf0b73140">ospf_ism_event_str</a> []</td></tr>
</table>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="acafc98c691175222f28fc9a286783412"></a><!-- doxytag: member="ospf_ism.c::ism_backup_seen" ref="acafc98c691175222f28fc9a286783412" args="(struct ospf_interface *oi)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int ism_backup_seen </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__ism_8c_source.html#l00401">401</a> of file <a class="el" href="ospf__ism_8c_source.html">ospf_ism.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="ospf__ism_8c.html#a6542f314f5d9994ead98814c2d9f79fb">ospf_dr_election</a> (oi);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a07ae5b5b9200723fafc04b741e5fe0c2"></a><!-- doxytag: member="ospf_ism.c::ism_change_state" ref="a07ae5b5b9200723fafc04b741e5fe0c2" args="(struct ospf_interface *oi, int state)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ism_change_state </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>state</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__ism_8c_source.html#l00536">536</a> of file <a class="el" href="ospf__ism_8c_source.html">ospf_ism.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> old_state;
  <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa;

  <span class="comment">/* Logging change of state. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (ism, ISM_STATUS))
    <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_DEBUG, <span class="stringliteral">&quot;ISM[%s]: State change %s -&gt; %s&quot;</span>, <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (oi),
      <a class="code" href="log_8h.html#a3a4b1cad85aa6752f39580944e24a868">LOOKUP</a> (<a class="code" href="ospf__dump_8c.html#ae4c65baac757ab6ffaaf05421dd53b3a">ospf_ism_state_msg</a>, oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a>),
      <a class="code" href="log_8h.html#a3a4b1cad85aa6752f39580944e24a868">LOOKUP</a> (<a class="code" href="ospf__dump_8c.html#ae4c65baac757ab6ffaaf05421dd53b3a">ospf_ism_state_msg</a>, state));

  old_state = oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a>;
  oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a> = state;
  oi-&gt;<a class="code" href="structospf__interface.html#a00f77cdcfa5c89c1b02675c956e582f5">state_change</a>++;

<span class="preprocessor">#ifdef HAVE_SNMP</span>
<span class="preprocessor"></span>  <span class="comment">/* Terminal state or regression */</span> 
  <span class="keywordflow">if</span> ((state == <a class="code" href="ospf__ism_8h.html#a7f179a571f4f8e112c0b887f39c87f23">ISM_DR</a>) || (state == <a class="code" href="ospf__ism_8h.html#a3676782add5a8ecdb86981965ef9f37e">ISM_Backup</a>) || (state == <a class="code" href="ospf__ism_8h.html#a63c91d64f244427665286ca82eaeea04">ISM_DROther</a>) ||
      (state == <a class="code" href="ospf__ism_8h.html#a1076f1da99a0944266b120fe42fe4426">ISM_PointToPoint</a>) || (state &lt; old_state))
    {
      <span class="comment">/* ospfVirtIfStateChange */</span>
      <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#a45798a2a8b566abd1907f7ae8bc0a2be">OSPF_IFTYPE_VIRTUALLINK</a>)
        <a class="code" href="ospf__snmp_8h.html#a4500f13e4245e8170a07493e3fc76f16">ospfTrapVirtIfStateChange</a> (oi);
      <span class="comment">/* ospfIfStateChange */</span>
      <span class="keywordflow">else</span>
        <a class="code" href="ospf__snmp_8h.html#a214b7d1fa78440c0bb5512d10e9510ad">ospfTrapIfStateChange</a> (oi);
    }
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>
  <span class="comment">/* Set multicast memberships appropriately for new state. */</span>
  <a class="code" href="ospf__interface_8c.html#a4d1ed1c93fa9a91e2461470344b8a977">ospf_if_set_multicast</a>(oi);

  <span class="keywordflow">if</span> (old_state == <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a> || state == <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a>)
    <a class="code" href="ospf__abr_8c.html#aae7756099eb070db13009f36bfd7736f">ospf_check_abr_status</a> (oi-&gt;<a class="code" href="structospf__interface.html#a159ae1c542016fc78f68c3e39a1b132e">ospf</a>);

  <span class="comment">/* Originate router-LSA. */</span>
  <span class="keywordflow">if</span> (state == <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a>)
    {
      <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#a7a0df59739f1ffa31ab75ff4b9bbcd95">area</a>-&gt;<a class="code" href="structospf__area.html#ade0d91a8747b46926ed25794d2c25b84">act_ints</a> &gt; 0)
        oi-&gt;<a class="code" href="structospf__interface.html#a7a0df59739f1ffa31ab75ff4b9bbcd95">area</a>-&gt;<a class="code" href="structospf__area.html#ade0d91a8747b46926ed25794d2c25b84">act_ints</a>--;
    }
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (old_state == <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a>)
    oi-&gt;<a class="code" href="structospf__interface.html#a7a0df59739f1ffa31ab75ff4b9bbcd95">area</a>-&gt;<a class="code" href="structospf__area.html#ade0d91a8747b46926ed25794d2c25b84">act_ints</a>++;

  <span class="comment">/* schedule router-LSA originate. */</span>
  <a class="code" href="ospf__lsa_8c.html#a66ad8a1fd151b43b11d7ec9650a644bf">ospf_router_lsa_timer_add</a> (oi-&gt;<a class="code" href="structospf__interface.html#a7a0df59739f1ffa31ab75ff4b9bbcd95">area</a>);

  <span class="comment">/* Originate network-LSA. */</span>
  <span class="keywordflow">if</span> (old_state != <a class="code" href="ospf__ism_8h.html#a7f179a571f4f8e112c0b887f39c87f23">ISM_DR</a> &amp;&amp; state == <a class="code" href="ospf__ism_8h.html#a7f179a571f4f8e112c0b887f39c87f23">ISM_DR</a>)
    <a class="code" href="ospf__lsa_8c.html#a42678c90c94d537b3d9c905d4685e2c5">ospf_network_lsa_timer_add</a> (oi);
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (old_state == <a class="code" href="ospf__ism_8h.html#a7f179a571f4f8e112c0b887f39c87f23">ISM_DR</a> &amp;&amp; state != <a class="code" href="ospf__ism_8h.html#a7f179a571f4f8e112c0b887f39c87f23">ISM_DR</a>)
    {
      <span class="comment">/* Free self originated network LSA. */</span>
      lsa = oi-&gt;<a class="code" href="structospf__interface.html#a175c090a388cfc7d255012d0d569df6d">network_lsa_self</a>;
      <span class="keywordflow">if</span> (lsa)
    {
      <a class="code" href="ospf__flood_8c.html#ad3049ba87364a6fbed7d352023e33a4a">ospf_lsa_flush_area</a> (lsa, oi-&gt;<a class="code" href="structospf__interface.html#a7a0df59739f1ffa31ab75ff4b9bbcd95">area</a>);
      <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#a278866980d98aa3ae2c393acb08c0337">t_network_lsa_self</a>);
    }

      <a class="code" href="ospf__lsa_8c.html#a268fc5c6673caf7ee94c0eaaa88455b8">ospf_lsa_unlock</a> (&amp;oi-&gt;<a class="code" href="structospf__interface.html#a175c090a388cfc7d255012d0d569df6d">network_lsa_self</a>);
      oi-&gt;<a class="code" href="structospf__interface.html#a175c090a388cfc7d255012d0d569df6d">network_lsa_self</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }

<span class="preprocessor">#ifdef HAVE_OPAQUE_LSA</span>
<span class="preprocessor"></span>  <a class="code" href="ospf__opaque_8h.html#affdc5ee3a6fab6f28d76b6a3d087e834">ospf_opaque_ism_change</a> (oi, old_state);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_OPAQUE_LSA */</span>

  <span class="comment">/* Check area border status.  */</span>
  <a class="code" href="ospf__abr_8c.html#aae7756099eb070db13009f36bfd7736f">ospf_check_abr_status</a> (oi-&gt;<a class="code" href="structospf__interface.html#a159ae1c542016fc78f68c3e39a1b132e">ospf</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a1e37f428fe04d4bcdd3fee7e5c71d194"></a><!-- doxytag: member="ospf_ism.c::ism_ignore" ref="a1e37f428fe04d4bcdd3fee7e5c71d194" args="(struct ospf_interface *oi)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int ism_ignore </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__ism_8c_source.html#l00419">419</a> of file <a class="el" href="ospf__ism_8c_source.html">ospf_ism.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (ism, ISM_EVENTS))
    <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_DEBUG, <span class="stringliteral">&quot;ISM[%s]: ism_ignore called&quot;</span>, <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (oi));

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a77535cd070c352cab0ab75c36a4e7760"></a><!-- doxytag: member="ospf_ism.c::ism_interface_down" ref="a77535cd070c352cab0ab75c36a4e7760" args="(struct ospf_interface *oi)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int ism_interface_down </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__ism_8c_source.html#l00393">393</a> of file <a class="el" href="ospf__ism_8c_source.html">ospf_ism.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="ospf__interface_8c.html#ac85cde0449107c57705e459658486dd5">ospf_if_cleanup</a> (oi);
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a33972a8ae29cf4101a38520a9df97f3e"></a><!-- doxytag: member="ospf_ism.c::ism_interface_up" ref="a33972a8ae29cf4101a38520a9df97f3e" args="(struct ospf_interface *oi)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int ism_interface_up </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__ism_8c_source.html#l00355">355</a> of file <a class="el" href="ospf__ism_8c_source.html">ospf_ism.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="bgp__fsm_8c.html#ac0c302bc97f010b7f5965faa07b00354">next_state</a> = 0;

  <span class="comment">/* if network type is point-to-point, Point-to-MultiPoint or virtual link,</span>
<span class="comment">     the state transitions to Point-to-Point. */</span>
  <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#a7722c258e67d21a5c6f367811664cccb">OSPF_IFTYPE_POINTOPOINT</a> ||
      oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#aa65cd67781b9573131ead326b8976194">OSPF_IFTYPE_POINTOMULTIPOINT</a> ||
      oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#a45798a2a8b566abd1907f7ae8bc0a2be">OSPF_IFTYPE_VIRTUALLINK</a>)
    next_state = <a class="code" href="ospf__ism_8h.html#a1076f1da99a0944266b120fe42fe4426">ISM_PointToPoint</a>;
  <span class="comment">/* Else if the router is not eligible to DR, the state transitions to</span>
<span class="comment">     DROther. */</span>
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="ospf__interface_8h.html#accb5457e43688e067b0b9844b08ae520">PRIORITY</a> (oi) == 0) <span class="comment">/* router is eligible? */</span>
    next_state = <a class="code" href="ospf__ism_8h.html#a63c91d64f244427665286ca82eaeea04">ISM_DROther</a>;
  <span class="keywordflow">else</span>
    <span class="comment">/* Otherwise, the state transitions to Waiting. */</span>
    next_state = <a class="code" href="ospf__ism_8h.html#ad2f0936e61c22de1c5ffbb51f0f640a0">ISM_Waiting</a>;

  <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#abf2c650e64355936c071432d92dd5ecb">OSPF_IFTYPE_NBMA</a>)
    <a class="code" href="ospfd_8c.html#a053c1c99419abc1738ed63cc58a910d1">ospf_nbr_nbma_if_update</a> (oi-&gt;<a class="code" href="structospf__interface.html#a159ae1c542016fc78f68c3e39a1b132e">ospf</a>, oi);

  <span class="comment">/*  ospf_ism_event (t); */</span>
  <span class="keywordflow">return</span> <a class="code" href="bgp__fsm_8c.html#ac0c302bc97f010b7f5965faa07b00354">next_state</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aafba9d9a628e6494aba4edfbe96a98d2"></a><!-- doxytag: member="ospf_ism.c::ism_loop_ind" ref="aafba9d9a628e6494aba4edfbe96a98d2" args="(struct ospf_interface *oi)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int ism_loop_ind </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__ism_8c_source.html#l00381">381</a> of file <a class="el" href="ospf__ism_8c_source.html">ospf_ism.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret = 0;

  <span class="comment">/* call ism_interface_down. */</span>
  <span class="comment">/* ret = ism_interface_down (oi); */</span>

  <span class="keywordflow">return</span> ret;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a51213b0b544e85c62427a28d67701a25"></a><!-- doxytag: member="ospf_ism.c::ism_neighbor_change" ref="a51213b0b544e85c62427a28d67701a25" args="(struct ospf_interface *oi)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int ism_neighbor_change </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__ism_8c_source.html#l00413">413</a> of file <a class="el" href="ospf__ism_8c_source.html">ospf_ism.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="ospf__ism_8c.html#a6542f314f5d9994ead98814c2d9f79fb">ospf_dr_election</a> (oi);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9b8d1474016af78d544cb72802ac5470"></a><!-- doxytag: member="ospf_ism.c::ism_timer_set" ref="a9b8d1474016af78d544cb72802ac5470" args="(struct ospf_interface *oi)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ism_timer_set </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__ism_8c_source.html#l00292">292</a> of file <a class="el" href="ospf__ism_8c_source.html">ospf_ism.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">switch</span> (oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a>)
    {
    <span class="keywordflow">case</span> <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a>:
      <span class="comment">/* First entry point of ospf interface state machine. In this state</span>
<span class="comment">     interface parameters must be set to initial values, and timers are</span>
<span class="comment">     reset also. */</span>
      <a class="code" href="ospf__ism_8h.html#a2cacab48c8f81e562591540802fd54a1">OSPF_ISM_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#ab4ff164900af9fe9f6b1127ce7da2a8b">t_hello</a>);
      <a class="code" href="ospf__ism_8h.html#a2cacab48c8f81e562591540802fd54a1">OSPF_ISM_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#a86390c93b5f81f8b8b73c2279e28a2fa">t_wait</a>);
      <a class="code" href="ospf__ism_8h.html#a2cacab48c8f81e562591540802fd54a1">OSPF_ISM_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#aa1f8a2d1d1212c2cfdd530c7ca9f7534">t_ls_ack</a>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="ospf__ism_8h.html#ad5bbcdc6e422bf33064865a4aac0a172">ISM_Loopback</a>:
      <span class="comment">/* In this state, the interface may be looped back and will be</span>
<span class="comment">     unavailable for regular data traffic. */</span>
      <a class="code" href="ospf__ism_8h.html#a2cacab48c8f81e562591540802fd54a1">OSPF_ISM_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#ab4ff164900af9fe9f6b1127ce7da2a8b">t_hello</a>);
      <a class="code" href="ospf__ism_8h.html#a2cacab48c8f81e562591540802fd54a1">OSPF_ISM_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#a86390c93b5f81f8b8b73c2279e28a2fa">t_wait</a>);
      <a class="code" href="ospf__ism_8h.html#a2cacab48c8f81e562591540802fd54a1">OSPF_ISM_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#aa1f8a2d1d1212c2cfdd530c7ca9f7534">t_ls_ack</a>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="ospf__ism_8h.html#ad2f0936e61c22de1c5ffbb51f0f640a0">ISM_Waiting</a>:
      <span class="comment">/* The router is trying to determine the identity of DRouter and</span>
<span class="comment">     BDRouter. The router begin to receive and send Hello Packets. */</span>
      <span class="comment">/* send first hello immediately */</span>
      <a class="code" href="ospf__ism_8h.html#abec66d8335bdee3d2c9812068d37cba5">OSPF_ISM_TIMER_MSEC_ON</a> (oi-&gt;<a class="code" href="structospf__interface.html#ab4ff164900af9fe9f6b1127ce7da2a8b">t_hello</a>, <a class="code" href="ospf__ism_8c.html#adec27301f3c252356a85e6ed6758d3be">ospf_hello_timer</a>, 1);
      <a class="code" href="ospf__ism_8h.html#a9aca7fd1780267f224441174f992bfc9">OSPF_ISM_TIMER_ON</a> (oi-&gt;<a class="code" href="structospf__interface.html#a86390c93b5f81f8b8b73c2279e28a2fa">t_wait</a>, <a class="code" href="ospf__ism_8c.html#a9d8e8ec0af821785432ce75775452e82">ospf_wait_timer</a>,
             <a class="code" href="ospf__interface_8h.html#a3082a40385804021e56001ea2bc5bdb1">OSPF_IF_PARAM</a> (oi, v_wait));
      <a class="code" href="ospf__ism_8h.html#a2cacab48c8f81e562591540802fd54a1">OSPF_ISM_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#aa1f8a2d1d1212c2cfdd530c7ca9f7534">t_ls_ack</a>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="ospf__ism_8h.html#a1076f1da99a0944266b120fe42fe4426">ISM_PointToPoint</a>:
      <span class="comment">/* The interface connects to a physical Point-to-point network or</span>
<span class="comment">     virtual link. The router attempts to form an adjacency with</span>
<span class="comment">     neighboring router. Hello packets are also sent. */</span>
      <span class="comment">/* send first hello immediately */</span>
      <a class="code" href="ospf__ism_8h.html#abec66d8335bdee3d2c9812068d37cba5">OSPF_ISM_TIMER_MSEC_ON</a> (oi-&gt;<a class="code" href="structospf__interface.html#ab4ff164900af9fe9f6b1127ce7da2a8b">t_hello</a>, <a class="code" href="ospf__ism_8c.html#adec27301f3c252356a85e6ed6758d3be">ospf_hello_timer</a>, 1);      
      <a class="code" href="ospf__ism_8h.html#a2cacab48c8f81e562591540802fd54a1">OSPF_ISM_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#a86390c93b5f81f8b8b73c2279e28a2fa">t_wait</a>);
      <a class="code" href="ospf__ism_8h.html#a9aca7fd1780267f224441174f992bfc9">OSPF_ISM_TIMER_ON</a> (oi-&gt;<a class="code" href="structospf__interface.html#aa1f8a2d1d1212c2cfdd530c7ca9f7534">t_ls_ack</a>, <a class="code" href="ospf__packet_8c.html#afbe22efd3efbb5e37fccfa54d9f9f05a">ospf_ls_ack_timer</a>, oi-&gt;<a class="code" href="structospf__interface.html#ab715712eda2750aa107ca2457f234a9c">v_ls_ack</a>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="ospf__ism_8h.html#a63c91d64f244427665286ca82eaeea04">ISM_DROther</a>:
      <span class="comment">/* The network type of the interface is broadcast or NBMA network,</span>
<span class="comment">     and the router itself is neither Designated Router nor</span>
<span class="comment">     Backup Designated Router. */</span>
      <a class="code" href="ospf__ism_8h.html#ab792a769e6c4eda18410c8b452fa92cb">OSPF_HELLO_TIMER_ON</a> (oi);
      <a class="code" href="ospf__ism_8h.html#a2cacab48c8f81e562591540802fd54a1">OSPF_ISM_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#a86390c93b5f81f8b8b73c2279e28a2fa">t_wait</a>);
      <a class="code" href="ospf__ism_8h.html#a9aca7fd1780267f224441174f992bfc9">OSPF_ISM_TIMER_ON</a> (oi-&gt;<a class="code" href="structospf__interface.html#aa1f8a2d1d1212c2cfdd530c7ca9f7534">t_ls_ack</a>, <a class="code" href="ospf__packet_8c.html#afbe22efd3efbb5e37fccfa54d9f9f05a">ospf_ls_ack_timer</a>, oi-&gt;<a class="code" href="structospf__interface.html#ab715712eda2750aa107ca2457f234a9c">v_ls_ack</a>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="ospf__ism_8h.html#a3676782add5a8ecdb86981965ef9f37e">ISM_Backup</a>:
      <span class="comment">/* The network type of the interface is broadcast os NBMA network,</span>
<span class="comment">     and the router is Backup Designated Router. */</span>
      <a class="code" href="ospf__ism_8h.html#ab792a769e6c4eda18410c8b452fa92cb">OSPF_HELLO_TIMER_ON</a> (oi);
      <a class="code" href="ospf__ism_8h.html#a2cacab48c8f81e562591540802fd54a1">OSPF_ISM_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#a86390c93b5f81f8b8b73c2279e28a2fa">t_wait</a>);
      <a class="code" href="ospf__ism_8h.html#a9aca7fd1780267f224441174f992bfc9">OSPF_ISM_TIMER_ON</a> (oi-&gt;<a class="code" href="structospf__interface.html#aa1f8a2d1d1212c2cfdd530c7ca9f7534">t_ls_ack</a>, <a class="code" href="ospf__packet_8c.html#afbe22efd3efbb5e37fccfa54d9f9f05a">ospf_ls_ack_timer</a>, oi-&gt;<a class="code" href="structospf__interface.html#ab715712eda2750aa107ca2457f234a9c">v_ls_ack</a>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="ospf__ism_8h.html#a7f179a571f4f8e112c0b887f39c87f23">ISM_DR</a>:
      <span class="comment">/* The network type of the interface is broadcast or NBMA network,</span>
<span class="comment">     and the router is Designated Router. */</span>
      <a class="code" href="ospf__ism_8h.html#ab792a769e6c4eda18410c8b452fa92cb">OSPF_HELLO_TIMER_ON</a> (oi);
      <a class="code" href="ospf__ism_8h.html#a2cacab48c8f81e562591540802fd54a1">OSPF_ISM_TIMER_OFF</a> (oi-&gt;<a class="code" href="structospf__interface.html#a86390c93b5f81f8b8b73c2279e28a2fa">t_wait</a>);
      <a class="code" href="ospf__ism_8h.html#a9aca7fd1780267f224441174f992bfc9">OSPF_ISM_TIMER_ON</a> (oi-&gt;<a class="code" href="structospf__interface.html#aa1f8a2d1d1212c2cfdd530c7ca9f7534">t_ls_ack</a>, <a class="code" href="ospf__packet_8c.html#afbe22efd3efbb5e37fccfa54d9f9f05a">ospf_ls_ack_timer</a>, oi-&gt;<a class="code" href="structospf__interface.html#ab715712eda2750aa107ca2457f234a9c">v_ls_ack</a>);
      <span class="keywordflow">break</span>;
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac08f9be03c6f1c325f89189ba818659d"></a><!-- doxytag: member="ospf_ism.c::ism_wait_timer" ref="ac08f9be03c6f1c325f89189ba818659d" args="(struct ospf_interface *oi)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int ism_wait_timer </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__ism_8c_source.html#l00407">407</a> of file <a class="el" href="ospf__ism_8c_source.html">ospf_ism.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="ospf__ism_8c.html#a6542f314f5d9994ead98814c2d9f79fb">ospf_dr_election</a> (oi);
}
</pre></div>
</div>
</div>
<a class="anchor" id="af4764e64fca5e39071fa4d876793b2d9"></a><!-- doxytag: member="ospf_ism.c::ospf_dr_change" ref="af4764e64fca5e39071fa4d876793b2d9" args="(struct ospf *ospf, struct route_table *nbrs)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ospf_dr_change </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>ospf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structroute__table.html">route_table</a> *&#160;</td>
          <td class="paramname"><em>nbrs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__ism_8c_source.html#l00184">184</a> of file <a class="el" href="ospf__ism_8c_source.html">ospf_ism.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr;

  <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (nbrs); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
    <span class="keywordflow">if</span> ((nbr = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
      <span class="comment">/* Ignore 0.0.0.0 node*/</span>
      <span class="keywordflow">if</span> (nbr-&gt;<a class="code" href="structospf__neighbor.html#a2257238c9040a76e9de9a78cf95bae0d">router_id</a>.s_addr != 0)
    <span class="comment">/* Is neighbor upper 2-Way? */</span>
    <span class="keywordflow">if</span> (nbr-&gt;<a class="code" href="structospf__neighbor.html#a07061a68f4e15effd12479e1047120c7">state</a> &gt;= <a class="code" href="ospf__nsm_8h.html#a8a9d14bfc7d840e04eff13df3337fa24">NSM_TwoWay</a>)
      <span class="comment">/* Ignore myself. */</span>
      <span class="keywordflow">if</span> (!<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;nbr-&gt;<a class="code" href="structospf__neighbor.html#a2257238c9040a76e9de9a78cf95bae0d">router_id</a>, &amp;ospf-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>))
        <a class="code" href="ospf__nsm_8h.html#a1cb080254e9d0314d6ef4bc2c05e36b4">OSPF_NSM_EVENT_SCHEDULE</a> (nbr, <a class="code" href="ospf__nsm_8h.html#a76de05478051ac94f835bb5523c319af">NSM_AdjOK</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6542f314f5d9994ead98814c2d9f79fb"></a><!-- doxytag: member="ospf_ism.c::ospf_dr_election" ref="a6542f314f5d9994ead98814c2d9f79fb" args="(struct ospf_interface *oi)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int ospf_dr_election </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__ism_8c_source.html#l00201">201</a> of file <a class="el" href="ospf__ism_8c_source.html">ospf_ism.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span>in_addr old_dr, old_bdr;
  <span class="keywordtype">int</span> old_state, new_state;
  <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *el_list;
  <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *dr, *bdr;

  <span class="comment">/* backup current values. */</span>
  old_dr = <a class="code" href="ospf__interface_8h.html#aa84a7dde76ac0a31898992d050858ec5">DR</a> (oi);
  old_bdr = <a class="code" href="ospf__interface_8h.html#ab9a182dc79cc0d10a77a27c60f2351cd">BDR</a> (oi);
  old_state = oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a>;

  el_list = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();

  <span class="comment">/* List eligible routers. */</span>
  <a class="code" href="ospf__ism_8c.html#a0b3475d6936b031942ddf94014dd3446">ospf_dr_eligible_routers</a> (oi-&gt;<a class="code" href="structospf__interface.html#aeb2e2f33698c499957bb55bfc80835d9">nbrs</a>, el_list);

  <span class="comment">/* First election of DR and BDR. */</span>
  bdr = <a class="code" href="ospf__ism_8c.html#acef652f2cc60b9a982cd7b336db7bab6">ospf_elect_bdr</a> (oi, el_list);
  dr = <a class="code" href="ospf__ism_8c.html#a5b4c45eb26c85fcb0834e42879284490">ospf_elect_dr</a> (oi, el_list);

  new_state = <a class="code" href="ospf__ism_8c.html#ad657e6327e3b1ef6721cd302246b2f60">ospf_ism_state</a> (oi);

  <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;DR-Election[1st]: Backup %s&quot;</span>, inet_ntoa (<a class="code" href="ospf__interface_8h.html#ab9a182dc79cc0d10a77a27c60f2351cd">BDR</a> (oi)));
  <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;DR-Election[1st]: DR     %s&quot;</span>, inet_ntoa (<a class="code" href="ospf__interface_8h.html#aa84a7dde76ac0a31898992d050858ec5">DR</a> (oi)));

  <span class="keywordflow">if</span> (new_state != old_state &amp;&amp;
      !(new_state == <a class="code" href="ospf__ism_8h.html#a63c91d64f244427665286ca82eaeea04">ISM_DROther</a> &amp;&amp; old_state &lt; <a class="code" href="ospf__ism_8h.html#a63c91d64f244427665286ca82eaeea04">ISM_DROther</a>))
    {
      <a class="code" href="ospf__ism_8c.html#acef652f2cc60b9a982cd7b336db7bab6">ospf_elect_bdr</a> (oi, el_list);
      <a class="code" href="ospf__ism_8c.html#a5b4c45eb26c85fcb0834e42879284490">ospf_elect_dr</a> (oi, el_list); 

      new_state = <a class="code" href="ospf__ism_8c.html#ad657e6327e3b1ef6721cd302246b2f60">ospf_ism_state</a> (oi);

      <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;DR-Election[2nd]: Backup %s&quot;</span>, inet_ntoa (<a class="code" href="ospf__interface_8h.html#ab9a182dc79cc0d10a77a27c60f2351cd">BDR</a> (oi)));
      <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;DR-Election[2nd]: DR     %s&quot;</span>, inet_ntoa (<a class="code" href="ospf__interface_8h.html#aa84a7dde76ac0a31898992d050858ec5">DR</a> (oi)));
    }

  <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (el_list);

  <span class="comment">/* if DR or BDR changes, cause AdjOK? neighbor event. */</span>
  <span class="keywordflow">if</span> (!<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;old_dr, &amp;<a class="code" href="ospf__interface_8h.html#aa84a7dde76ac0a31898992d050858ec5">DR</a> (oi)) ||
      !<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;old_bdr, &amp;<a class="code" href="ospf__interface_8h.html#ab9a182dc79cc0d10a77a27c60f2351cd">BDR</a> (oi)))
    <a class="code" href="ospf__ism_8c.html#af4764e64fca5e39071fa4d876793b2d9">ospf_dr_change</a> (oi-&gt;<a class="code" href="structospf__interface.html#a159ae1c542016fc78f68c3e39a1b132e">ospf</a>, oi-&gt;<a class="code" href="structospf__interface.html#aeb2e2f33698c499957bb55bfc80835d9">nbrs</a>);

  <span class="keywordflow">return</span> new_state;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a7bbdb25f453c311eabbe4b889a3f984b"></a><!-- doxytag: member="ospf_ism.c::ospf_dr_election_sub" ref="a7bbdb25f453c311eabbe4b889a3f984b" args="(struct list *routers)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a>* ospf_dr_election_sub </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>routers</em></td><td>)</td>
          <td><code> [static, read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__ism_8c_source.html#l00050">50</a> of file <a class="el" href="ospf__ism_8c_source.html">ospf_ism.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr, *max = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="comment">/* Choose highest router priority.</span>
<span class="comment">     In case of tie, choose highest Router ID. */</span>
  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (routers, node, nbr))
    {
      <span class="keywordflow">if</span> (max == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    max = nbr;
      <span class="keywordflow">else</span>
    {
      <span class="keywordflow">if</span> (max-&gt;<a class="code" href="structospf__neighbor.html#ade51baa719592185df1db62d13e9cf63">priority</a> &lt; nbr-&gt;<a class="code" href="structospf__neighbor.html#ade51baa719592185df1db62d13e9cf63">priority</a>)
        max = nbr;
      <span class="keywordflow">else</span> <span class="keywordflow">if</span> (max-&gt;<a class="code" href="structospf__neighbor.html#ade51baa719592185df1db62d13e9cf63">priority</a> == nbr-&gt;<a class="code" href="structospf__neighbor.html#ade51baa719592185df1db62d13e9cf63">priority</a>)
        <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#aed79e5e7f07f40fd10b39c04fbb24fc8">IPV4_ADDR_CMP</a> (&amp;max-&gt;<a class="code" href="structospf__neighbor.html#a2257238c9040a76e9de9a78cf95bae0d">router_id</a>, &amp;nbr-&gt;<a class="code" href="structospf__neighbor.html#a2257238c9040a76e9de9a78cf95bae0d">router_id</a>) &lt; 0)
          max = nbr;
    }
    }

  <span class="keywordflow">return</span> max;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a0b3475d6936b031942ddf94014dd3446"></a><!-- doxytag: member="ospf_ism.c::ospf_dr_eligible_routers" ref="a0b3475d6936b031942ddf94014dd3446" args="(struct route_table *nbrs, struct list *el_list)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ospf_dr_eligible_routers </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structroute__table.html">route_table</a> *&#160;</td>
          <td class="paramname"><em>nbrs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>el_list</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__ism_8c_source.html#l00166">166</a> of file <a class="el" href="ospf__ism_8c_source.html">ospf_ism.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr;

  <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (nbrs); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
    <span class="keywordflow">if</span> ((nbr = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
      <span class="comment">/* Ignore 0.0.0.0 node*/</span>
      <span class="keywordflow">if</span> (nbr-&gt;<a class="code" href="structospf__neighbor.html#a2257238c9040a76e9de9a78cf95bae0d">router_id</a>.s_addr != 0)
    <span class="comment">/* Is neighbor eligible? */</span>
    <span class="keywordflow">if</span> (nbr-&gt;<a class="code" href="structospf__neighbor.html#ade51baa719592185df1db62d13e9cf63">priority</a> &gt; 0)
      <span class="comment">/* Is neighbor upper 2-Way? */</span>
      <span class="keywordflow">if</span> (nbr-&gt;<a class="code" href="structospf__neighbor.html#a07061a68f4e15effd12479e1047120c7">state</a> &gt;= <a class="code" href="ospf__nsm_8h.html#a8a9d14bfc7d840e04eff13df3337fa24">NSM_TwoWay</a>)
        <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (el_list, nbr);
}
</pre></div>
</div>
</div>
<a class="anchor" id="acef652f2cc60b9a982cd7b336db7bab6"></a><!-- doxytag: member="ospf_ism.c::ospf_elect_bdr" ref="acef652f2cc60b9a982cd7b336db7bab6" args="(struct ospf_interface *oi, struct list *el_list)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a>* ospf_elect_bdr </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>el_list</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static, read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__ism_8c_source.html#l00113">113</a> of file <a class="el" href="ospf__ism_8c_source.html">ospf_ism.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *bdr_list, *no_dr_list;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr, *bdr = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  bdr_list = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
  no_dr_list = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();

  <span class="comment">/* Add neighbors to the list. */</span>
  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (el_list, node, nbr))
    {
      <span class="comment">/* neighbor declared to be DR. */</span>
      <span class="keywordflow">if</span> (<a class="code" href="ospf__neighbor_8h.html#ad422e372f51656c4649d96641b24f6e0">NBR_IS_DR</a> (nbr))
    <span class="keywordflow">continue</span>;

      <span class="comment">/* neighbor declared to be BDR. */</span>
      <span class="keywordflow">if</span> (<a class="code" href="ospf__neighbor_8h.html#a1b94db83d088198f33a207de991a5316">NBR_IS_BDR</a> (nbr))
    <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (bdr_list, nbr);

      <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (no_dr_list, nbr);
    }

  <span class="comment">/* Elect Backup Designated Router. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (bdr_list) &gt; 0)
    bdr = <a class="code" href="ospf__ism_8c.html#a7bbdb25f453c311eabbe4b889a3f984b">ospf_dr_election_sub</a> (bdr_list);
  <span class="keywordflow">else</span>
    bdr = <a class="code" href="ospf__ism_8c.html#a7bbdb25f453c311eabbe4b889a3f984b">ospf_dr_election_sub</a> (no_dr_list);

  <span class="comment">/* Set BDR to interface. */</span>
  <span class="keywordflow">if</span> (bdr)
    <a class="code" href="ospf__interface_8h.html#ab9a182dc79cc0d10a77a27c60f2351cd">BDR</a> (oi) = bdr-&gt;<a class="code" href="structospf__neighbor.html#a4be3cd4b416bc267a4e3b35b9e2b1102">address</a>.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>;
  <span class="keywordflow">else</span>
    <a class="code" href="ospf__interface_8h.html#ab9a182dc79cc0d10a77a27c60f2351cd">BDR</a> (oi).s_addr = 0;

  <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (bdr_list);
  <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (no_dr_list);

  <span class="keywordflow">return</span> bdr;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5b4c45eb26c85fcb0834e42879284490"></a><!-- doxytag: member="ospf_ism.c::ospf_elect_dr" ref="a5b4c45eb26c85fcb0834e42879284490" args="(struct ospf_interface *oi, struct list *el_list)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a>* ospf_elect_dr </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>el_list</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static, read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__ism_8c_source.html#l00075">75</a> of file <a class="el" href="ospf__ism_8c_source.html">ospf_ism.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *dr_list;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr, *dr = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, *bdr = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  dr_list = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();

  <span class="comment">/* Add neighbors to the list. */</span>
  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (el_list, node, nbr))
    {
      <span class="comment">/* neighbor declared to be DR. */</span>
      <span class="keywordflow">if</span> (<a class="code" href="ospf__neighbor_8h.html#ad422e372f51656c4649d96641b24f6e0">NBR_IS_DR</a> (nbr))
    <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (dr_list, nbr);

      <span class="comment">/* Preserve neighbor BDR. */</span>
      <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;<a class="code" href="ospf__interface_8h.html#ab9a182dc79cc0d10a77a27c60f2351cd">BDR</a> (oi), &amp;nbr-&gt;<a class="code" href="structospf__neighbor.html#a4be3cd4b416bc267a4e3b35b9e2b1102">address</a>.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>))
    bdr = nbr;
    }

  <span class="comment">/* Elect Designated Router. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (dr_list) &gt; 0)
    dr = <a class="code" href="ospf__ism_8c.html#a7bbdb25f453c311eabbe4b889a3f984b">ospf_dr_election_sub</a> (dr_list);
  <span class="keywordflow">else</span>
    dr = bdr;

  <span class="comment">/* Set DR to interface. */</span>
  <span class="keywordflow">if</span> (dr)
    <a class="code" href="ospf__interface_8h.html#aa84a7dde76ac0a31898992d050858ec5">DR</a> (oi) = dr-&gt;<a class="code" href="structospf__neighbor.html#a4be3cd4b416bc267a4e3b35b9e2b1102">address</a>.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>;
  <span class="keywordflow">else</span>
    <a class="code" href="ospf__interface_8h.html#aa84a7dde76ac0a31898992d050858ec5">DR</a> (oi).s_addr = 0;

  <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (dr_list);

  <span class="keywordflow">return</span> dr;
}
</pre></div>
</div>
</div>
<a class="anchor" id="adec27301f3c252356a85e6ed6758d3be"></a><!-- doxytag: member="ospf_ism.c::ospf_hello_timer" ref="adec27301f3c252356a85e6ed6758d3be" args="(struct thread *thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_hello_timer </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>thread</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__ism_8c_source.html#l00251">251</a> of file <a class="el" href="ospf__ism_8c_source.html">ospf_ism.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;

  oi = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
  oi-&gt;<a class="code" href="structospf__interface.html#ab4ff164900af9fe9f6b1127ce7da2a8b">t_hello</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (ism, ISM_TIMERS))
    <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_DEBUG, <span class="stringliteral">&quot;ISM[%s]: Timer (Hello timer expire)&quot;</span>,
      <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (oi));

  <span class="comment">/* Sending hello packet. */</span>
  <a class="code" href="ospf__packet_8c.html#a0ec5bea1d903b79d5dca071f0fabb268">ospf_hello_send</a> (oi);

  <span class="comment">/* Hello timer set. */</span>
  <a class="code" href="ospf__ism_8h.html#ab792a769e6c4eda18410c8b452fa92cb">OSPF_HELLO_TIMER_ON</a> (oi);
  
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6a90f4f003e80ca5ba3240d1f7106a74"></a><!-- doxytag: member="ospf_ism.c::ospf_ism_event" ref="a6a90f4f003e80ca5ba3240d1f7106a74" args="(struct thread *thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_ism_event </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>thread</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__ism_8c_source.html#l00610">610</a> of file <a class="el" href="ospf__ism_8c_source.html">ospf_ism.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a>;
  <span class="keywordtype">int</span> <a class="code" href="bgp__fsm_8c.html#ac0c302bc97f010b7f5965faa07b00354">next_state</a>;
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;

  oi = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
  <span class="keyword">event</span> = <a class="code" href="thread_8h.html#a88d7c483cad15baac709fac747480a11">THREAD_VAL</a> (thread);

  <span class="comment">/* Call function. */</span>
  next_state = (*(<a class="code" href="ospf__ism_8c.html#aed4e1447c6afb26301f71782f3b8922f">ISM</a> [oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a>][<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a>].func))(oi);

  <span class="keywordflow">if</span> (! next_state)
    next_state = <a class="code" href="ospf__ism_8c.html#aed4e1447c6afb26301f71782f3b8922f">ISM</a> [oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a>][<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a>].next_state;

  <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (ism, ISM_EVENTS))
    <a class="code" href="structzlog.html">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_DEBUG, <span class="stringliteral">&quot;ISM[%s]: %s (%s)&quot;</span>, <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (oi),
      <a class="code" href="log_8h.html#a3a4b1cad85aa6752f39580944e24a868">LOOKUP</a> (<a class="code" href="ospf__dump_8c.html#ae4c65baac757ab6ffaaf05421dd53b3a">ospf_ism_state_msg</a>, oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a>),
      <a class="code" href="ospf__ism_8c.html#a3f6a5ac88ac8c4e9118cc4cbf0b73140">ospf_ism_event_str</a>[<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a>]);

  <span class="comment">/* If state is changed. */</span>
  <span class="keywordflow">if</span> (next_state != oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a>)
    <a class="code" href="ospf__ism_8c.html#a07ae5b5b9200723fafc04b741e5fe0c2">ism_change_state</a> (oi, next_state);

  <span class="comment">/* Make sure timer is set. */</span>
  <a class="code" href="ospf__ism_8c.html#a9b8d1474016af78d544cb72802ac5470">ism_timer_set</a> (oi);

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad657e6327e3b1ef6721cd302246b2f60"></a><!-- doxytag: member="ospf_ism.c::ospf_ism_state" ref="ad657e6327e3b1ef6721cd302246b2f60" args="(struct ospf_interface *oi)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int ospf_ism_state </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__ism_8c_source.html#l00155">155</a> of file <a class="el" href="ospf__ism_8c_source.html">ospf_ism.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;<a class="code" href="ospf__interface_8h.html#aa84a7dde76ac0a31898992d050858ec5">DR</a> (oi), &amp;oi-&gt;<a class="code" href="structospf__interface.html#a43493bc2b5d951e3e38ace850332eca1">address</a>-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>))
    <span class="keywordflow">return</span> <a class="code" href="ospf__ism_8h.html#a7f179a571f4f8e112c0b887f39c87f23">ISM_DR</a>;
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;<a class="code" href="ospf__interface_8h.html#ab9a182dc79cc0d10a77a27c60f2351cd">BDR</a> (oi), &amp;oi-&gt;<a class="code" href="structospf__interface.html#a43493bc2b5d951e3e38ace850332eca1">address</a>-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>))
    <span class="keywordflow">return</span> <a class="code" href="ospf__ism_8h.html#a3676782add5a8ecdb86981965ef9f37e">ISM_Backup</a>;
  <span class="keywordflow">else</span>
    <span class="keywordflow">return</span> <a class="code" href="ospf__ism_8h.html#a63c91d64f244427665286ca82eaeea04">ISM_DROther</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9d8e8ec0af821785432ce75775452e82"></a><!-- doxytag: member="ospf_ism.c::ospf_wait_timer" ref="a9d8e8ec0af821785432ce75775452e82" args="(struct thread *thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int ospf_wait_timer </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>thread</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__ism_8c_source.html#l00272">272</a> of file <a class="el" href="ospf__ism_8c_source.html">ospf_ism.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;

  oi = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
  oi-&gt;<a class="code" href="structospf__interface.html#a86390c93b5f81f8b8b73c2279e28a2fa">t_wait</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (ism, ISM_TIMERS))
    <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_DEBUG, <span class="stringliteral">&quot;ISM[%s]: Timer (Wait timer expire)&quot;</span>,
      <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (oi));

  <a class="code" href="ospf__ism_8h.html#a92d8b8f5e3c324698ef17d8ab3ee9781">OSPF_ISM_EVENT_SCHEDULE</a> (oi, <a class="code" href="ospf__ism_8h.html#a516f61e03aaf3c1560792ead947e4335">ISM_WaitTimer</a>);

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<hr/><h2>Variable Documentation</h2>
<a class="anchor" id="a3bb35931dd3daced1e996b8c5ca23021"></a><!-- doxytag: member="ospf_ism.c::func" ref="a3bb35931dd3daced1e996b8c5ca23021" args=")(struct ospf_interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int(* <a class="el" href="ospf__nsm_8c.html#a03307f8a561731a5c5657834da57ab11">func</a>)(struct <a class="el" href="structospf__interface.html">ospf_interface</a> *)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__ism_8c_source.html#l00429">429</a> of file <a class="el" href="ospf__ism_8c_source.html">ospf_ism.c</a>.</p>

</div>
</div>
<a class="anchor" id="aed4e1447c6afb26301f71782f3b8922f"></a><!-- doxytag: member="ospf_ism.c::ISM" ref="aed4e1447c6afb26301f71782f3b8922f" args="[OSPF_ISM_STATE_MAX][OSPF_ISM_EVENT_MAX]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct { ... }   <a class="el" href="ospf__ism_8c.html#aed4e1447c6afb26301f71782f3b8922f">ISM</a>[OSPF_ISM_STATE_MAX][OSPF_ISM_EVENT_MAX]</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ac0c302bc97f010b7f5965faa07b00354"></a><!-- doxytag: member="ospf_ism.c::next_state" ref="ac0c302bc97f010b7f5965faa07b00354" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="ospf__nsm_8c.html#ac0c302bc97f010b7f5965faa07b00354">next_state</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__ism_8c_source.html#l00430">430</a> of file <a class="el" href="ospf__ism_8c_source.html">ospf_ism.c</a>.</p>

</div>
</div>
<a class="anchor" id="a3f6a5ac88ac8c4e9118cc4cbf0b73140"></a><!-- doxytag: member="ospf_ism.c::ospf_ism_event_str" ref="a3f6a5ac88ac8c4e9118cc4cbf0b73140" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* <a class="el" href="ospf__ism_8c.html#a3f6a5ac88ac8c4e9118cc4cbf0b73140">ospf_ism_event_str</a>[]<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment">
{
  <span class="stringliteral">&quot;NoEvent&quot;</span>,
  <span class="stringliteral">&quot;InterfaceUp&quot;</span>,
  <span class="stringliteral">&quot;WaitTimer&quot;</span>,
  <span class="stringliteral">&quot;BackupSeen&quot;</span>,
  <span class="stringliteral">&quot;NeighborChange&quot;</span>,
  <span class="stringliteral">&quot;LoopInd&quot;</span>,
  <span class="stringliteral">&quot;UnLoopInd&quot;</span>,
  <span class="stringliteral">&quot;InterfaceDown&quot;</span>,
}
</pre></div>
<p>Definition at line <a class="el" href="ospf__ism_8c_source.html#l00523">523</a> of file <a class="el" href="ospf__ism_8c_source.html">ospf_ism.c</a>.</p>

</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="ospf__ism_8c.html">ospf_ism.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:28 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
