<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: bgpd/bgp_aspath.h Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('bgp__aspath_8h.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">bgpd/bgp_aspath.h</div>  </div>
</div>
<div class="contents">
<a href="bgp__aspath_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* AS path related definitions.</span>
<a name="l00002"></a>00002 <span class="comment">   Copyright (C) 1997, 98, 99 Kunihiro Ishiguro</span>
<a name="l00003"></a>00003 <span class="comment"></span>
<a name="l00004"></a>00004 <span class="comment">This file is part of GNU Zebra.</span>
<a name="l00005"></a>00005 <span class="comment"></span>
<a name="l00006"></a>00006 <span class="comment">GNU Zebra is free software; you can redistribute it and/or modify it</span>
<a name="l00007"></a>00007 <span class="comment">under the terms of the GNU General Public License as published by the</span>
<a name="l00008"></a>00008 <span class="comment">Free Software Foundation; either version 2, or (at your option) any</span>
<a name="l00009"></a>00009 <span class="comment">later version.</span>
<a name="l00010"></a>00010 <span class="comment"></span>
<a name="l00011"></a>00011 <span class="comment">GNU Zebra is distributed in the hope that it will be useful, but</span>
<a name="l00012"></a>00012 <span class="comment">WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00014"></a>00014 <span class="comment">General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"></span>
<a name="l00016"></a>00016 <span class="comment">You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment">along with GNU Zebra; see the file COPYING.  If not, write to the Free</span>
<a name="l00018"></a>00018 <span class="comment">Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA</span>
<a name="l00019"></a>00019 <span class="comment">02111-1307, USA.  */</span>
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 <span class="preprocessor">#ifndef _QUAGGA_BGP_ASPATH_H</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span><span class="preprocessor">#define _QUAGGA_BGP_ASPATH_H</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span>
<a name="l00024"></a>00024 <span class="comment">/* AS path segment type.  */</span>
<a name="l00025"></a><a class="code" href="bgp__aspath_8h.html#a9e73037a31a479546ff6883e75dda9ea">00025</a> <span class="preprocessor">#define AS_SET                       1</span>
<a name="l00026"></a><a class="code" href="bgp__aspath_8h.html#aa05819c99e42b36fb343621486ab9839">00026</a> <span class="preprocessor"></span><span class="preprocessor">#define AS_SEQUENCE                  2</span>
<a name="l00027"></a><a class="code" href="bgp__aspath_8h.html#afe93e17cd54ee102e446b5c1b75d3565">00027</a> <span class="preprocessor"></span><span class="preprocessor">#define AS_CONFED_SEQUENCE           3</span>
<a name="l00028"></a><a class="code" href="bgp__aspath_8h.html#aa6f089de2dcdcd2b9f3270f80119225e">00028</a> <span class="preprocessor"></span><span class="preprocessor">#define AS_CONFED_SET                4</span>
<a name="l00029"></a>00029 <span class="preprocessor"></span>
<a name="l00030"></a>00030 <span class="comment">/* Private AS range defined in RFC2270.  */</span>
<a name="l00031"></a><a class="code" href="bgp__aspath_8h.html#ac7d780d83cdd277414ca9ba2785ff152">00031</a> <span class="preprocessor">#define BGP_PRIVATE_AS_MIN       64512U</span>
<a name="l00032"></a><a class="code" href="bgp__aspath_8h.html#a5eab303011de75bf71ee2d346bed9927">00032</a> <span class="preprocessor"></span><span class="preprocessor">#define BGP_PRIVATE_AS_MAX       65535U</span>
<a name="l00033"></a>00033 <span class="preprocessor"></span>
<a name="l00034"></a>00034 <span class="comment">/* we leave BGP_AS_MAX as the 16bit AS MAX number.  */</span>
<a name="l00035"></a><a class="code" href="bgp__aspath_8h.html#a5a3365c8e7924ca85bd9675dc6597908">00035</a> <span class="preprocessor">#define BGP_AS_MAX           65535U</span>
<a name="l00036"></a><a class="code" href="bgp__aspath_8h.html#acd90833d0f197c0d00067713d06777e5">00036</a> <span class="preprocessor"></span><span class="preprocessor">#define BGP_AS4_MAX     4294967295U</span>
<a name="l00037"></a>00037 <span class="preprocessor"></span><span class="comment">/* Transition 16Bit AS as defined by IANA */</span>
<a name="l00038"></a><a class="code" href="bgp__aspath_8h.html#a9fab3268cc31ac1c5faeff01f7518ba6">00038</a> <span class="preprocessor">#define BGP_AS_TRANS         23456U</span>
<a name="l00039"></a>00039 <span class="preprocessor"></span>
<a name="l00040"></a>00040 <span class="comment">/* AS_PATH segment data in abstracted form, no limit is placed on length */</span>
<a name="l00041"></a><a class="code" href="structassegment.html">00041</a> <span class="keyword">struct </span><a class="code" href="structassegment.html">assegment</a>
<a name="l00042"></a>00042 {
<a name="l00043"></a><a class="code" href="structassegment.html#a1d82e85502fabec483dd0dbfab23a7fd">00043</a>   <span class="keyword">struct </span><a class="code" href="structassegment.html">assegment</a> *<a class="code" href="structassegment.html#a1d82e85502fabec483dd0dbfab23a7fd">next</a>;
<a name="l00044"></a><a class="code" href="structassegment.html#a9b1986dd4ffe1221efbdd261cac68ade">00044</a>   <a class="code" href="bgpd_8h.html#ae54756b75cc699532543e4e2214c1c57">as_t</a> *<a class="code" href="structassegment.html#a9b1986dd4ffe1221efbdd261cac68ade">as</a>;
<a name="l00045"></a><a class="code" href="structassegment.html#a163a6c3fc55bb0e8997b82d2d1b0805a">00045</a>   u_short <a class="code" href="structassegment.html#a163a6c3fc55bb0e8997b82d2d1b0805a">length</a>;
<a name="l00046"></a><a class="code" href="structassegment.html#a60054a202d483d916c9cf7b3a5e58b10">00046</a>   u_char <a class="code" href="structassegment.html#a60054a202d483d916c9cf7b3a5e58b10">type</a>;
<a name="l00047"></a>00047 };
<a name="l00048"></a>00048 
<a name="l00049"></a>00049 <span class="comment">/* AS path may be include some AsSegments.  */</span>
<a name="l00050"></a><a class="code" href="structaspath.html">00050</a> <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> 
<a name="l00051"></a>00051 {
<a name="l00052"></a>00052   <span class="comment">/* Reference count to this aspath.  */</span>
<a name="l00053"></a><a class="code" href="structaspath.html#ad4ebb184cbb394e06b78340af8cbb336">00053</a>   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="structaspath.html#ad4ebb184cbb394e06b78340af8cbb336">refcnt</a>;
<a name="l00054"></a>00054 
<a name="l00055"></a>00055   <span class="comment">/* segment data */</span>
<a name="l00056"></a><a class="code" href="structaspath.html#a142f9a26d6c89fa4f01050cec21aa4d4">00056</a>   <span class="keyword">struct </span><a class="code" href="structassegment.html">assegment</a> *<a class="code" href="structaspath.html#a142f9a26d6c89fa4f01050cec21aa4d4">segments</a>;
<a name="l00057"></a>00057   
<a name="l00058"></a>00058   <span class="comment">/* String expression of AS path.  This string is used by vty output</span>
<a name="l00059"></a>00059 <span class="comment">     and AS path regular expression match.  */</span>
<a name="l00060"></a><a class="code" href="structaspath.html#a3e9ddee46af67cdf22d10cfead37bdc5">00060</a>   <span class="keywordtype">char</span> *<a class="code" href="structaspath.html#a3e9ddee46af67cdf22d10cfead37bdc5">str</a>;
<a name="l00061"></a>00061 };
<a name="l00062"></a>00062 
<a name="l00063"></a><a class="code" href="bgp__aspath_8h.html#ae342c8082d45828fbdf91149aec573c9">00063</a> <span class="preprocessor">#define ASPATH_STR_DEFAULT_LEN 32</span>
<a name="l00064"></a>00064 <span class="preprocessor"></span>
<a name="l00065"></a>00065 <span class="comment">/* Prototypes. */</span>
<a name="l00066"></a>00066 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="bgp__aspath_8c.html#a34b9f56e53531a0e4ceedcb31d59e027">aspath_init</a> (<span class="keywordtype">void</span>);
<a name="l00067"></a>00067 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="bgp__aspath_8c.html#ad12467085616732b130bd1edac9277fb">aspath_finish</a> (<span class="keywordtype">void</span>);
<a name="l00068"></a>00068 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *<a class="code" href="bgp__aspath_8c.html#ac9e8aff45338b803e560318286e3f2af">aspath_parse</a> (<span class="keyword">struct</span> <a class="code" href="structstream.html">stream</a> *, <span class="keywordtype">size_t</span>, <span class="keywordtype">int</span>, <span class="keywordtype">int</span>);
<a name="l00069"></a>00069 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *<a class="code" href="bgp__aspath_8c.html#a2de7834df2eead0bfa5a117ce265e6ca">aspath_dup</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *);
<a name="l00070"></a>00070 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *<a class="code" href="bgp__aspath_8c.html#a615342ae906f2fd579780ce7eda4ff6a">aspath_aggregate</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *, <span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *);
<a name="l00071"></a>00071 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *<a class="code" href="bgp__aspath_8c.html#a042b5a8463ffb3adedffa05e69640726">aspath_prepend</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *, <span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *);
<a name="l00072"></a>00072 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *<a class="code" href="bgp__aspath_8c.html#ac7f9ae7aa66eb067701e37c65edd2e78">aspath_filter_exclude</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *, <span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *);
<a name="l00073"></a>00073 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *<a class="code" href="bgp__aspath_8c.html#a8e5a3fc38d9717bcdcc75ba861459dd6">aspath_add_seq</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *, <a class="code" href="bgpd_8h.html#ae54756b75cc699532543e4e2214c1c57">as_t</a>);
<a name="l00074"></a>00074 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *<a class="code" href="bgp__aspath_8c.html#a601c9ef2ba7a75d8757e04d3f8585886">aspath_add_confed_seq</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *, <a class="code" href="bgpd_8h.html#ae54756b75cc699532543e4e2214c1c57">as_t</a>);
<a name="l00075"></a>00075 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="bgp__aspath_8c.html#a5f979a1ff3bc3908684e4592e5c383eb">aspath_cmp_left</a> (<span class="keyword">const</span> <span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *, <span class="keyword">const</span> <span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *);
<a name="l00076"></a>00076 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="bgp__aspath_8c.html#ace7eb37e6ea088fb0ea82c9ae4c58375">aspath_cmp_left_confed</a> (<span class="keyword">const</span> <span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *, <span class="keyword">const</span> <span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *);
<a name="l00077"></a>00077 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *<a class="code" href="bgp__aspath_8c.html#a3a932cff645a730d2e5d9aeec874e127">aspath_delete_confed_seq</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *);
<a name="l00078"></a>00078 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *<a class="code" href="bgp__aspath_8c.html#aadc92a26e3c657307be1c2057b187cda">aspath_empty</a> (<span class="keywordtype">void</span>);
<a name="l00079"></a>00079 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *<a class="code" href="bgp__aspath_8c.html#aa737121f7df6f3e64869fc9a6c330b2f">aspath_empty_get</a> (<span class="keywordtype">void</span>);
<a name="l00080"></a>00080 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *<a class="code" href="bgp__aspath_8c.html#aa2514807244e353a19d3f48316cc7885">aspath_str2aspath</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *);
<a name="l00081"></a>00081 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="bgp__aspath_8c.html#af8db79f3e25ae5a01dfec9070557c21a">aspath_free</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *);
<a name="l00082"></a>00082 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *<a class="code" href="bgp__aspath_8c.html#a344d7cb1b52c926464681624421bc9c1">aspath_intern</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *);
<a name="l00083"></a>00083 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *);
<a name="l00084"></a>00084 <span class="keyword">extern</span> <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *);
<a name="l00085"></a>00085 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="bgp__aspath_8c.html#a32814b0bab0791ca1b85145a1b1a0f3f">aspath_print_vty</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *, <span class="keyword">const</span> <span class="keywordtype">char</span> *, <span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *, <span class="keyword">const</span> <span class="keywordtype">char</span> *);
<a name="l00086"></a>00086 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="bgp__aspath_8c.html#a0b7af257d32ea864993dd2b3494fa0f0">aspath_print_all_vty</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *);
<a name="l00087"></a>00087 <span class="keyword">extern</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="bgp__aspath_8c.html#a0ff2c762b3aea1084db8500839a8d314">aspath_key_make</a> (<span class="keywordtype">void</span> *);
<a name="l00088"></a>00088 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="bgp__aspath_8c.html#a09c83e4313915a5191a19439186f2280">aspath_loop_check</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *, <a class="code" href="bgpd_8h.html#ae54756b75cc699532543e4e2214c1c57">as_t</a>);
<a name="l00089"></a>00089 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="bgp__aspath_8c.html#a808020dd81343ccfb8f4cf5f50f5f11c">aspath_private_as_check</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *);
<a name="l00090"></a>00090 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="bgp__aspath_8c.html#a9ed7eb61027a6f70bb24f3ffc5cc399f">aspath_firstas_check</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *, <a class="code" href="bgpd_8h.html#ae54756b75cc699532543e4e2214c1c57">as_t</a>);
<a name="l00091"></a>00091 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="bgp__aspath_8c.html#ab2915d467a13796ada52e009773a5776">aspath_confed_check</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *);
<a name="l00092"></a>00092 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="bgp__aspath_8c.html#a2ea3a3f15468d013b12a0ee4558026b5">aspath_left_confed_check</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *);
<a name="l00093"></a>00093 <span class="keyword">extern</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="bgp__aspath_8c.html#ad62e86fb815f7395ccd758f5fe5bf2cb">aspath_count</a> (<span class="keywordtype">void</span>);
<a name="l00094"></a>00094 <span class="keyword">extern</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="bgp__aspath_8c.html#ae0142a952a7219bbe0244f266ab0f0f5">aspath_count_hops</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *);
<a name="l00095"></a>00095 <span class="keyword">extern</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="bgp__aspath_8c.html#a8638c553cd3d2c87161aa489ea0a45d7">aspath_count_confeds</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *);
<a name="l00096"></a>00096 <span class="keyword">extern</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="bgp__aspath_8c.html#a20eefbd15a5076d10ad6e1e37d800bf2">aspath_size</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *);
<a name="l00097"></a>00097 <span class="keyword">extern</span> <a class="code" href="bgpd_8h.html#ae54756b75cc699532543e4e2214c1c57">as_t</a> <a class="code" href="bgp__aspath_8c.html#ab1c68ac1741167dd6e631f6eb6d12705">aspath_highest</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *);
<a name="l00098"></a>00098 <span class="keyword">extern</span> <span class="keywordtype">size_t</span> <a class="code" href="bgp__aspath_8c.html#a716059e44a39a56b3e05020bec13872e">aspath_put</a> (<span class="keyword">struct</span> <a class="code" href="structstream.html">stream</a> *, <span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *, <span class="keywordtype">int</span>);
<a name="l00099"></a>00099 
<a name="l00100"></a>00100 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *<a class="code" href="bgp__aspath_8c.html#a1a485a8779fb5fcf0ac2efeb2bdc204d">aspath_reconcile_as4</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *, <span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *);
<a name="l00101"></a>00101 <span class="keyword">extern</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="bgp__aspath_8c.html#a594fc069e213e63fc1a15af40d93b3d4">aspath_has_as4</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *);
<a name="l00102"></a>00102 
<a name="l00103"></a>00103 <span class="comment">/* For SNMP BGP4PATHATTRASPATHSEGMENT, might be useful for debug */</span>
<a name="l00104"></a>00104 <span class="keyword">extern</span> u_char *<a class="code" href="bgp__aspath_8c.html#a46008828118eb829c4f5b010175de9ab">aspath_snmp_pathseg</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *, <span class="keywordtype">size_t</span> *);
<a name="l00105"></a>00105 
<a name="l00106"></a>00106 <span class="preprocessor">#endif </span><span class="comment">/* _QUAGGA_BGP_ASPATH_H */</span>
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="bgp__aspath_8h.html">bgp_aspath.h</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:01 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
