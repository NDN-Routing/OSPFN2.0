<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: zebra/zserv.c File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('zserv_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">zebra/zserv.c File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="zebra_8h_source.html">zebra.h</a>&gt;</code><br/>
<code>#include &quot;<a class="el" href="prefix_8h_source.html">prefix.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="command_8h_source.html">command.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="if_8h_source.html">if.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="thread_8h_source.html">thread.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="stream_8h_source.html">stream.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="memory_8h_source.html">memory.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="table_8h_source.html">table.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="rib_8h_source.html">rib.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="network_8h_source.html">network.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="sockunion_8h_source.html">sockunion.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="log_8h_source.html">log.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="zclient_8h_source.html">zclient.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="privs_8h_source.html">privs.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="buffer_8h_source.html">buffer.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="zserv_8h_source.html">zebra/zserv.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="router-id_8h_source.html">zebra/router-id.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="redistribute_8h_source.html">zebra/redistribute.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="debug_8h_source.html">zebra/debug.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ipforward_8h_source.html">zebra/ipforward.h</a>&quot;</code><br/>
<code>#include &lt;sys/un.h&gt;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for zserv.c:</div>
<div class="dyncontent">
<div class="center"><img src="zserv_8c__incl.png" border="0" usemap="#zebra_2zserv_8c" alt=""/></div>
<map name="zebra_2zserv_8c" id="zebra_2zserv_8c">
<area shape="rect" id="node3" href="zebra_8h.html" title="zebra.h" alt="" coords="1700,155,1767,181"/><area shape="rect" id="node61" href="prefix_8h.html" title="prefix.h" alt="" coords="73,304,140,331"/><area shape="rect" id="node63" href="sockunion_8h.html" title="sockunion.h" alt="" coords="9,379,103,405"/><area shape="rect" id="node65" href="command_8h.html" title="command.h" alt="" coords="3302,80,3393,107"/><area shape="rect" id="node67" href="if_8h.html" title="if.h" alt="" coords="3108,229,3148,256"/><area shape="rect" id="node69" href="thread_8h.html" title="thread.h" alt="" coords="3419,80,3491,107"/><area shape="rect" id="node71" href="stream_8h.html" title="stream.h" alt="" coords="1271,155,1345,181"/><area shape="rect" id="node74" href="memory_8h.html" title="memory.h" alt="" coords="2936,155,3019,181"/><area shape="rect" id="node76" href="table_8h.html" title="table.h" alt="" coords="3168,155,3232,181"/><area shape="rect" id="node78" href="rib_8h.html" title="rib.h" alt="" coords="3036,229,3084,256"/><area shape="rect" id="node81" href="network_8h.html" title="network.h" alt="" coords="3515,80,3597,107"/><area shape="rect" id="node84" href="log_8h.html" title="log.h" alt="" coords="533,155,584,181"/><area shape="rect" id="node87" href="zclient_8h.html" title="zclient.h" alt="" coords="2840,155,2912,181"/><area shape="rect" id="node90" href="privs_8h.html" title="privs.h" alt="" coords="3622,80,3684,107"/><area shape="rect" id="node92" href="buffer_8h.html" title="buffer.h" alt="" coords="3709,80,3776,107"/><area shape="rect" id="node94" href="zserv_8h.html" title="zebra/zserv.h" alt="" coords="3043,155,3144,181"/><area shape="rect" id="node98" href="router-id_8h.html" title="zebra/router&#45;id.h" alt="" coords="2739,80,2860,107"/><area shape="rect" id="node105" href="redistribute_8h.html" title="zebra/redistribute.h" alt="" coords="3037,80,3176,107"/><area shape="rect" id="node109" href="debug_8h.html" title="zebra/debug.h" alt="" coords="3801,80,3908,107"/><area shape="rect" id="node111" href="ipforward_8h.html" title="zebra/ipforward.h" alt="" coords="3933,80,4059,107"/><area shape="rect" id="node57" href="zassert_8h.html" title="zassert.h" alt="" coords="1477,229,1555,256"/><area shape="rect" id="node59" href="str_8h.html" title="str.h" alt="" coords="1579,229,1628,256"/></map>
</div>
</div>
<p><a href="zserv_8c_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a> { <br/>
&#160;&#160;<a class="el" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea8fd18ac65705a12e09a38d18e47d12ec">VTY_SERV</a>, 
<a class="el" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea9ed3db9f85ae6bdc30382d62bc01a807">VTY_READ</a>, 
<a class="el" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea73e4d70c7cc9c2560723e639332d7f2d">VTY_WRITE</a>, 
<a class="el" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9eada5cbc98f077a6a603d7c200d654042c">VTY_TIMEOUT_RESET</a>, 
<br/>
&#160;&#160;<a class="el" href="zclient_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea826c5318cddea911fefb2c166a4bf509">ZCLIENT_SCHEDULE</a>, 
<a class="el" href="zclient_8c.html#a3b65133bb9997cd1ccf311af0927fc9eab19700a6d070e3835e08add96a1cb3b9">ZCLIENT_READ</a>, 
<a class="el" href="zclient_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea82cf139bec91c753aa00f8861f9d7dcb">ZCLIENT_CONNECT</a>, 
<a class="el" href="ospf__apiserver_8h.html#a3b65133bb9997cd1ccf311af0927fc9eaf7d27b451246b7abd5c02d73f722e711">OSPF_APISERVER_ACCEPT</a>, 
<br/>
&#160;&#160;<a class="el" href="ospf__apiserver_8h.html#a3b65133bb9997cd1ccf311af0927fc9eaafc629f281d14052686b777808801956">OSPF_APISERVER_SYNC_READ</a>, 
<a class="el" href="ospf__apiserver_8h.html#a3b65133bb9997cd1ccf311af0927fc9eaf185e2c50bffd89565783bbd9c063ea2">OSPF_APISERVER_SYNC_WRITE</a>, 
<a class="el" href="ospf__apiserver_8h.html#a3b65133bb9997cd1ccf311af0927fc9ea9b30267095ac2c8eb8c87603dea68133">OSPF_APISERVER_ASYNC_WRITE</a>, 
<a class="el" href="zserv_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea798c01376b108480a941e1e6c69a2a21">ZEBRA_SERV</a>, 
<br/>
&#160;&#160;<a class="el" href="zserv_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea8af81c1e6c659f520a29088128058a2b">ZEBRA_READ</a>, 
<a class="el" href="zserv_8c.html#a3b65133bb9997cd1ccf311af0927fc9eac02643d854489b17e1400ff30e76f7f6">ZEBRA_WRITE</a>
<br/>
 }</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#af369f575400fbb36d6e676a328d869a1">zebra_event</a> (enum <a class="el" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a> <a class="el" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a>, int sock, struct <a class="el" href="structzserv.html">zserv</a> *client)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#aaf8e120786bf27794cb7c246cfd942b3">zebra_client_close</a> (struct <a class="el" href="structzserv.html">zserv</a> *client)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#a4a58b9ca930855233c8c3ef9159bbebd">zserv_delayed_close</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="structthread.html">thread</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#a3cce1412c0532c4cdf3e5a636e96c541">zserv_flush_data</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="structthread.html">thread</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#ab5199476fdd33bbcde9cda69fd532c57">zebra_server_send_message</a> (struct <a class="el" href="structzserv.html">zserv</a> *client)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#a14cda6a8900f2fad7eaa58d4da2c92dd">zserv_create_header</a> (struct <a class="el" href="structstream.html">stream</a> *<a class="el" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>, uint16_t cmd)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#ac0fb06c3680893ca7b34202d2b8670f5">zsend_interface_add</a> (struct <a class="el" href="structzserv.html">zserv</a> *client, struct <a class="el" href="structinterface.html">interface</a> *ifp)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#ab0f362995e2eaadec2d9b906921d6a12">zsend_interface_delete</a> (struct <a class="el" href="structzserv.html">zserv</a> *client, struct <a class="el" href="structinterface.html">interface</a> *ifp)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#adb6ebd718dd70884d1315eadddf3308b">zsend_interface_address</a> (int cmd, struct <a class="el" href="structzserv.html">zserv</a> *client, struct <a class="el" href="structinterface.html">interface</a> *ifp, struct <a class="el" href="structconnected.html">connected</a> *ifc)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#ab91c1877d49bab79bd33b7394303b5f6">zsend_interface_update</a> (int cmd, struct <a class="el" href="structzserv.html">zserv</a> *client, struct <a class="el" href="structinterface.html">interface</a> *ifp)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#ad9a861cad7e1d75c869519c6132548e9">zsend_route_multipath</a> (int cmd, struct <a class="el" href="structzserv.html">zserv</a> *client, struct <a class="el" href="structprefix.html">prefix</a> *<a class="el" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, struct <a class="el" href="structrib.html">rib</a> *<a class="el" href="structrib.html">rib</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#a8b3aacdf2c0e6ccc76012b7f37d64544">zsend_ipv4_nexthop_lookup</a> (struct <a class="el" href="structzserv.html">zserv</a> *client, struct in_addr addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#aade0e4834f9b1d2cc41bd0b26b9343b9">zsend_ipv4_import_lookup</a> (struct <a class="el" href="structzserv.html">zserv</a> *client, struct <a class="el" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="el" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#ac902d118eea994cdc524465a5d2db124">zsend_router_id_update</a> (struct <a class="el" href="structzserv.html">zserv</a> *client, struct <a class="el" href="structprefix.html">prefix</a> *<a class="el" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#ae363ccd6683aebf490d8dcae937d9a2f">zread_interface_add</a> (struct <a class="el" href="structzserv.html">zserv</a> *client, u_short <a class="el" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#a298872bf1a01c37898edc39333491e12">zread_interface_delete</a> (struct <a class="el" href="structzserv.html">zserv</a> *client, u_short <a class="el" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#ad0390ed4cb8928d8407a3039b87a92c2">zread_ipv4_add</a> (struct <a class="el" href="structzserv.html">zserv</a> *client, u_short <a class="el" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#a46455bcde6ef93d0bd96bc9bb9ccfb0d">zread_ipv4_delete</a> (struct <a class="el" href="structzserv.html">zserv</a> *client, u_short <a class="el" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#ac199635f7303c91c8d23b6f976221507">zread_ipv4_nexthop_lookup</a> (struct <a class="el" href="structzserv.html">zserv</a> *client, u_short <a class="el" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#a397b0d5bfbc70aa466fcc61179b4923a">zread_ipv4_import_lookup</a> (struct <a class="el" href="structzserv.html">zserv</a> *client, u_short <a class="el" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#a6286eaace25a105670c4fb45a4be249d">zread_router_id_add</a> (struct <a class="el" href="structzserv.html">zserv</a> *client, u_short <a class="el" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#a2fcd797f6e763563d628146094342bfc">zread_router_id_delete</a> (struct <a class="el" href="structzserv.html">zserv</a> *client, u_short <a class="el" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#a736bae5ed53cd4d9497ee7d2bc5ed8a8">zebra_client_create</a> (int sock)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#aa9f5b289ef408283e9346488252b22cb">zebra_client_read</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="structthread.html">thread</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#afe2b4e341bf292b8b3e52836a29e3a99">zebra_accept</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="structthread.html">thread</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#a95339bb43fb4636cec5fc6b09a533e7c">zebra_serv_un</a> (const char *path)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#af369f575400fbb36d6e676a328d869a1">zebra_event</a> (enum <a class="el" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a> <a class="el" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a>, int sock, struct <a class="el" href="structzserv.html">zserv</a> *client)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#add3033a2358ebb21c4c23fb9bdffd9d1">DEFUN</a> (show_table, show_table_cmd,&quot;show table&quot;, SHOW_STR&quot;default routing table to use for all clients\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#af1c658c07d88f0d6d2393d309cd742a1">DEFUN</a> (config_table, config_table_cmd,&quot;table TABLENO&quot;,&quot;Configure target kernel routing table\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;TABLE integer\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#ae1892fa61292e8aad29cb70e2623b7ac">DEFUN</a> (ip_forwarding, ip_forwarding_cmd,&quot;ip forwarding&quot;, IP_STR&quot;Turn on IP forwarding&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#a10fba43cb8391798fc72fe81f7a47847">DEFUN</a> (no_ip_forwarding, no_ip_forwarding_cmd,&quot;no <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> forwarding&quot;, NO_STR IP_STR&quot;Turn off IP forwarding&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#ae60a29f926869801fa1b379aaaf2d91e">DEFUN</a> (show_zebra_client, show_zebra_client_cmd,&quot;show <a class="el" href="bgp__debug_8c.html#aacd09dfe4b60fac4ec1c5e2895066f07">zebra</a> client&quot;, SHOW_STR&quot;Zebra information&quot;&quot;Client information&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#ad9f56eddfd4039c41fa5479e3f07b580">config_write_table</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#a85a2be43d92d9e4933183d8b6f03aa5d">DEFUN</a> (show_ip_forwarding, show_ip_forwarding_cmd,&quot;show <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> forwarding&quot;, SHOW_STR IP_STR&quot;IP forwarding status\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#a8075a1af2df3fda1db3f308a3d9753c2">config_write_forwarding</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#a94f099bb450145e19c34878de7b8c99e">zebra_init</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#a73dd94d53f97f6cca94ae8d5c087023f">zebra_zserv_socket_init</a> (void)</td></tr>
<tr><td colspan="2"><h2><a name="var-members"></a>
Variables</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structzebra__t.html">zebra_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#a5a844f9c9c891ff5dfe28610da9b56ce">zebrad</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structzebra__privs__t.html">zebra_privs_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#a10659da9c59441877a609c3cd916f3cf">zserv_privs</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structcmd__node.html">cmd_node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#a52055db6b0231058bd3bc3ad3d385d53">table_node</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structcmd__node.html">cmd_node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="zserv_8c.html#a872fd0beb57dc5fda2266ed71ae02ad8">forwarding_node</a></td></tr>
</table>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9e"></a><!-- doxytag: member="zserv.c::event" ref="a3b65133bb9997cd1ccf311af0927fc9e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9ea8fd18ac65705a12e09a38d18e47d12ec"></a><!-- doxytag: member="VTY_SERV" ref="a3b65133bb9997cd1ccf311af0927fc9ea8fd18ac65705a12e09a38d18e47d12ec" args="" -->VTY_SERV</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9ea9ed3db9f85ae6bdc30382d62bc01a807"></a><!-- doxytag: member="VTY_READ" ref="a3b65133bb9997cd1ccf311af0927fc9ea9ed3db9f85ae6bdc30382d62bc01a807" args="" -->VTY_READ</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9ea73e4d70c7cc9c2560723e639332d7f2d"></a><!-- doxytag: member="VTY_WRITE" ref="a3b65133bb9997cd1ccf311af0927fc9ea73e4d70c7cc9c2560723e639332d7f2d" args="" -->VTY_WRITE</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9eada5cbc98f077a6a603d7c200d654042c"></a><!-- doxytag: member="VTY_TIMEOUT_RESET" ref="a3b65133bb9997cd1ccf311af0927fc9eada5cbc98f077a6a603d7c200d654042c" args="" -->VTY_TIMEOUT_RESET</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9ea826c5318cddea911fefb2c166a4bf509"></a><!-- doxytag: member="ZCLIENT_SCHEDULE" ref="a3b65133bb9997cd1ccf311af0927fc9ea826c5318cddea911fefb2c166a4bf509" args="" -->ZCLIENT_SCHEDULE</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9eab19700a6d070e3835e08add96a1cb3b9"></a><!-- doxytag: member="ZCLIENT_READ" ref="a3b65133bb9997cd1ccf311af0927fc9eab19700a6d070e3835e08add96a1cb3b9" args="" -->ZCLIENT_READ</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9ea82cf139bec91c753aa00f8861f9d7dcb"></a><!-- doxytag: member="ZCLIENT_CONNECT" ref="a3b65133bb9997cd1ccf311af0927fc9ea82cf139bec91c753aa00f8861f9d7dcb" args="" -->ZCLIENT_CONNECT</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9eaf7d27b451246b7abd5c02d73f722e711"></a><!-- doxytag: member="OSPF_APISERVER_ACCEPT" ref="a3b65133bb9997cd1ccf311af0927fc9eaf7d27b451246b7abd5c02d73f722e711" args="" -->OSPF_APISERVER_ACCEPT</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9eaafc629f281d14052686b777808801956"></a><!-- doxytag: member="OSPF_APISERVER_SYNC_READ" ref="a3b65133bb9997cd1ccf311af0927fc9eaafc629f281d14052686b777808801956" args="" -->OSPF_APISERVER_SYNC_READ</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9eaf185e2c50bffd89565783bbd9c063ea2"></a><!-- doxytag: member="OSPF_APISERVER_SYNC_WRITE" ref="a3b65133bb9997cd1ccf311af0927fc9eaf185e2c50bffd89565783bbd9c063ea2" args="" -->OSPF_APISERVER_SYNC_WRITE</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9ea9b30267095ac2c8eb8c87603dea68133"></a><!-- doxytag: member="OSPF_APISERVER_ASYNC_WRITE" ref="a3b65133bb9997cd1ccf311af0927fc9ea9b30267095ac2c8eb8c87603dea68133" args="" -->OSPF_APISERVER_ASYNC_WRITE</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9ea798c01376b108480a941e1e6c69a2a21"></a><!-- doxytag: member="ZEBRA_SERV" ref="a3b65133bb9997cd1ccf311af0927fc9ea798c01376b108480a941e1e6c69a2a21" args="" -->ZEBRA_SERV</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9ea8af81c1e6c659f520a29088128058a2b"></a><!-- doxytag: member="ZEBRA_READ" ref="a3b65133bb9997cd1ccf311af0927fc9ea8af81c1e6c659f520a29088128058a2b" args="" -->ZEBRA_READ</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a3b65133bb9997cd1ccf311af0927fc9eac02643d854489b17e1400ff30e76f7f6"></a><!-- doxytag: member="ZEBRA_WRITE" ref="a3b65133bb9997cd1ccf311af0927fc9eac02643d854489b17e1400ff30e76f7f6" args="" -->ZEBRA_WRITE</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="zserv_8c_source.html#l00047">47</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{ <a class="code" href="zserv_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea798c01376b108480a941e1e6c69a2a21">ZEBRA_SERV</a>, <a class="code" href="zserv_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea8af81c1e6c659f520a29088128058a2b">ZEBRA_READ</a>, <a class="code" href="zserv_8c.html#a3b65133bb9997cd1ccf311af0927fc9eac02643d854489b17e1400ff30e76f7f6">ZEBRA_WRITE</a> };
</pre></div>
</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a8075a1af2df3fda1db3f308a3d9753c2"></a><!-- doxytag: member="zserv.c::config_write_forwarding" ref="a8075a1af2df3fda1db3f308a3d9753c2" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int config_write_forwarding </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l01676">1676</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="comment">/* FIXME: Find better place for that. */</span>
  <a class="code" href="router-id_8c.html#a448b0c725323024cb3f0553725bed393">router_id_write</a> (vty);

  <span class="keywordflow">if</span> (<a class="code" href="ipforward_8h.html#a877419b23da547730edc0b685126fdd0">ipforward</a> ())
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;ip forwarding%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <span class="keywordflow">if</span> (ipforward_ipv6 ())
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;ipv6 forwarding%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;!%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad9f56eddfd4039c41fa5479e3f07b580"></a><!-- doxytag: member="zserv.c::config_write_table" ref="ad9f56eddfd4039c41fa5479e3f07b580" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int config_write_table </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l01563">1563</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="connected_8c.html#a5a844f9c9c891ff5dfe28610da9b56ce">zebrad</a>.<a class="code" href="structzebra__t.html#a5cde5668ed28c239047f536ad2b9d1c6">rtm_table_default</a>)
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;table %d%s&quot;</span>, <a class="code" href="connected_8c.html#a5a844f9c9c891ff5dfe28610da9b56ce">zebrad</a>.<a class="code" href="structzebra__t.html#a5cde5668ed28c239047f536ad2b9d1c6">rtm_table_default</a>,
         <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="add3033a2358ebb21c4c23fb9bdffd9d1"></a><!-- doxytag: member="zserv.c::DEFUN" ref="add3033a2358ebb21c4c23fb9bdffd9d1" args="(show_table, show_table_cmd,&quot;show table&quot;, SHOW_STR&quot;default routing table to use for all clients\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">show_table&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">show_table_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;show table&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SHOW_STR&quot;default routing table to use for all clients\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l01480">1480</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;table %d%s&quot;</span>, <a class="code" href="connected_8c.html#a5a844f9c9c891ff5dfe28610da9b56ce">zebrad</a>.<a class="code" href="structzebra__t.html#a5cde5668ed28c239047f536ad2b9d1c6">rtm_table_default</a>,
       <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af1c658c07d88f0d6d2393d309cd742a1"></a><!-- doxytag: member="zserv.c::DEFUN" ref="af1c658c07d88f0d6d2393d309cd742a1" args="(config_table, config_table_cmd,&quot;table TABLENO&quot;,&quot;Configure target kernel routing table\n&quot;&quot;TABLE integer\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">config_table&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">config_table_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;table TABLENO&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;Configure target kernel routing table\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;TABLE integer\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l01491">1491</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="connected_8c.html#a5a844f9c9c891ff5dfe28610da9b56ce">zebrad</a>.<a class="code" href="structzebra__t.html#a5cde5668ed28c239047f536ad2b9d1c6">rtm_table_default</a> = strtol (argv[0], (<span class="keywordtype">char</span>**)0, 10);
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae1892fa61292e8aad29cb70e2623b7ac"></a><!-- doxytag: member="zserv.c::DEFUN" ref="ae1892fa61292e8aad29cb70e2623b7ac" args="(ip_forwarding, ip_forwarding_cmd,&quot;ip forwarding&quot;, IP_STR&quot;Turn on IP forwarding&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">ip_forwarding&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ip_forwarding_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;ip forwarding&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IP_STR&quot;Turn on IP forwarding&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l01501">1501</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret;

  ret = <a class="code" href="ipforward_8h.html#a877419b23da547730edc0b685126fdd0">ipforward</a> ();
  <span class="keywordflow">if</span> (ret == 0)
    ret = <a class="code" href="ipforward_8h.html#af69401022c6eda89deda39ce15688257">ipforward_on</a> ();

  <span class="keywordflow">if</span> (ret == 0)
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Can&#39;t turn on IP forwarding%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a10fba43cb8391798fc72fe81f7a47847"></a><!-- doxytag: member="zserv.c::DEFUN" ref="a10fba43cb8391798fc72fe81f7a47847" args="(no_ip_forwarding, no_ip_forwarding_cmd,&quot;no ip forwarding&quot;, NO_STR IP_STR&quot;Turn off IP forwarding&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_ip_forwarding&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_ip_forwarding_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> forwarding&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR IP_STR&quot;Turn off IP forwarding&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l01522">1522</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret;

  ret = <a class="code" href="ipforward_8h.html#a877419b23da547730edc0b685126fdd0">ipforward</a> ();
  <span class="keywordflow">if</span> (ret != 0)
    ret = <a class="code" href="ipforward_8h.html#a74cca84fa12a5eb4e04b8ee431dea8c2">ipforward_off</a> ();

  <span class="keywordflow">if</span> (ret != 0)
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Can&#39;t turn off IP forwarding%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae60a29f926869801fa1b379aaaf2d91e"></a><!-- doxytag: member="zserv.c::DEFUN" ref="ae60a29f926869801fa1b379aaaf2d91e" args="(show_zebra_client, show_zebra_client_cmd,&quot;show zebra client&quot;, SHOW_STR&quot;Zebra information&quot;&quot;Client information&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">show_zebra_client&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">show_zebra_client_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;show <a class="el" href="bgp__debug_8c.html#aacd09dfe4b60fac4ec1c5e2895066f07">zebra</a> client&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SHOW_STR&quot;Zebra information&quot;&quot;Client information&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l01545">1545</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structzserv.html">zserv</a> *client;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="connected_8c.html#a5a844f9c9c891ff5dfe28610da9b56ce">zebrad</a>.<a class="code" href="structzebra__t.html#a7be4fa43024195462f6f65db9138c693">client_list</a>, node, client))
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Client fd %d%s&quot;</span>, client-&gt;<a class="code" href="structzserv.html#ad6501dd8068fa000ba4e36ecd4b6b12c">sock</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
  
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a85a2be43d92d9e4933183d8b6f03aa5d"></a><!-- doxytag: member="zserv.c::DEFUN" ref="a85a2be43d92d9e4933183d8b6f03aa5d" args="(show_ip_forwarding, show_ip_forwarding_cmd,&quot;show ip forwarding&quot;, SHOW_STR IP_STR&quot;IP forwarding status\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">show_ip_forwarding&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">show_ip_forwarding_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;show <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> forwarding&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SHOW_STR IP_STR&quot;IP forwarding status\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l01580">1580</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret;

  ret = <a class="code" href="ipforward_8h.html#a877419b23da547730edc0b685126fdd0">ipforward</a> ();

  <span class="keywordflow">if</span> (ret == 0)
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;IP forwarding is off%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
  <span class="keywordflow">else</span>
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;IP forwarding is on%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="afe2b4e341bf292b8b3e52836a29e3a99"></a><!-- doxytag: member="zserv.c::zebra_accept" ref="afe2b4e341bf292b8b3e52836a29e3a99" args="(struct thread *thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int zebra_accept </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>thread</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l01306">1306</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> accept_sock;
  <span class="keywordtype">int</span> client_sock;
  <span class="keyword">struct </span>sockaddr_in client;
  <a class="code" href="zebra_8h.html#a6b82106923cc13b3a9734520ecc29514">socklen_t</a> len;

  accept_sock = <a class="code" href="thread_8h.html#a89bd56f991717646441f9dffc010d4f5">THREAD_FD</a> (thread);

  <span class="comment">/* Reregister myself. */</span>
  <a class="code" href="zserv_8c.html#af369f575400fbb36d6e676a328d869a1">zebra_event</a> (<a class="code" href="zserv_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea798c01376b108480a941e1e6c69a2a21">ZEBRA_SERV</a>, accept_sock, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);

  len = <span class="keyword">sizeof</span> (<span class="keyword">struct </span>sockaddr_in);
  client_sock = accept (accept_sock, (<span class="keyword">struct</span> sockaddr *) &amp;client, &amp;len);

  <span class="keywordflow">if</span> (client_sock &lt; 0)
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;Can&#39;t accept zebra socket: %s&quot;</span>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
      <span class="keywordflow">return</span> -1;
    }

  <span class="comment">/* Make client socket non-blocking.  */</span>
  <a class="code" href="network_8c.html#a450a9be7be692d8ac42f64acddbdaadd">set_nonblocking</a>(client_sock);
  
  <span class="comment">/* Create new zebra client. */</span>
  <a class="code" href="zserv_8c.html#a736bae5ed53cd4d9497ee7d2bc5ed8a8">zebra_client_create</a> (client_sock);

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aaf8e120786bf27794cb7c246cfd942b3"></a><!-- doxytag: member="zserv.c::zebra_client_close" ref="aaf8e120786bf27794cb7c246cfd942b3" args="(struct zserv *client)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void zebra_client_close </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structzserv.html">zserv</a> *&#160;</td>
          <td class="paramname"><em>client</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l01076">1076</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="comment">/* Close file descriptor. */</span>
  <span class="keywordflow">if</span> (client-&gt;<a class="code" href="structzserv.html#ad6501dd8068fa000ba4e36ecd4b6b12c">sock</a>)
    {
      close (client-&gt;<a class="code" href="structzserv.html#ad6501dd8068fa000ba4e36ecd4b6b12c">sock</a>);
      client-&gt;<a class="code" href="structzserv.html#ad6501dd8068fa000ba4e36ecd4b6b12c">sock</a> = -1;
    }

  <span class="comment">/* Free stream buffers. */</span>
  <span class="keywordflow">if</span> (client-&gt;<a class="code" href="structzserv.html#a204afd1e1599f90f02dfb8ee0b2eceb7">ibuf</a>)
    <a class="code" href="stream_8c.html#ac25ca0f9b32a76b4ea34ecb3c9d62481">stream_free</a> (client-&gt;<a class="code" href="structzserv.html#a204afd1e1599f90f02dfb8ee0b2eceb7">ibuf</a>);
  <span class="keywordflow">if</span> (client-&gt;<a class="code" href="structzserv.html#a1d8389e20e2a44d47c4509e15b3a3443">obuf</a>)
    <a class="code" href="stream_8c.html#ac25ca0f9b32a76b4ea34ecb3c9d62481">stream_free</a> (client-&gt;<a class="code" href="structzserv.html#a1d8389e20e2a44d47c4509e15b3a3443">obuf</a>);
  <span class="keywordflow">if</span> (client-&gt;<a class="code" href="structzserv.html#a2e2a56d18487266bbe740617b5d8c3b7">wb</a>)
    <a class="code" href="buffer_8c.html#a33630b21db5f9cda080c24c3175bde5a">buffer_free</a>(client-&gt;<a class="code" href="structzserv.html#a2e2a56d18487266bbe740617b5d8c3b7">wb</a>);

  <span class="comment">/* Release threads. */</span>
  <span class="keywordflow">if</span> (client-&gt;<a class="code" href="structzserv.html#a482288940eca375c707b08b36bc2762d">t_read</a>)
    <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (client-&gt;<a class="code" href="structzserv.html#a482288940eca375c707b08b36bc2762d">t_read</a>);
  <span class="keywordflow">if</span> (client-&gt;<a class="code" href="structzserv.html#a2e7851f7fc1d5074b44dba33cdcee627">t_write</a>)
    <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (client-&gt;<a class="code" href="structzserv.html#a2e7851f7fc1d5074b44dba33cdcee627">t_write</a>);
  <span class="keywordflow">if</span> (client-&gt;<a class="code" href="structzserv.html#aa46e1eb6be1ea4780ccf5cba33dde1ec">t_suicide</a>)
    <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (client-&gt;<a class="code" href="structzserv.html#aa46e1eb6be1ea4780ccf5cba33dde1ec">t_suicide</a>);

  <span class="comment">/* Free client structure. */</span>
  <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (<a class="code" href="connected_8c.html#a5a844f9c9c891ff5dfe28610da9b56ce">zebrad</a>.<a class="code" href="structzebra__t.html#a7be4fa43024195462f6f65db9138c693">client_list</a>, client);
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (0, client);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a736bae5ed53cd4d9497ee7d2bc5ed8a8"></a><!-- doxytag: member="zserv.c::zebra_client_create" ref="a736bae5ed53cd4d9497ee7d2bc5ed8a8" args="(int sock)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void zebra_client_create </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>sock</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l01108">1108</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structzserv.html">zserv</a> *client;

  client = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structzserv.html">zserv</a>));

  <span class="comment">/* Make client input/output buffer. */</span>
  client-&gt;<a class="code" href="structzserv.html#ad6501dd8068fa000ba4e36ecd4b6b12c">sock</a> = <a class="code" href="structzserv.html#ad6501dd8068fa000ba4e36ecd4b6b12c">sock</a>;
  client-&gt;<a class="code" href="structzserv.html#a204afd1e1599f90f02dfb8ee0b2eceb7">ibuf</a> = <a class="code" href="stream_8c.html#a7117cdad9fa5e5ae633e0cf08d047459">stream_new</a> (<a class="code" href="zclient_8h.html#aeebd7bc37965845d7accd7ce370febf9">ZEBRA_MAX_PACKET_SIZ</a>);
  client-&gt;<a class="code" href="structzserv.html#a1d8389e20e2a44d47c4509e15b3a3443">obuf</a> = <a class="code" href="stream_8c.html#a7117cdad9fa5e5ae633e0cf08d047459">stream_new</a> (<a class="code" href="zclient_8h.html#aeebd7bc37965845d7accd7ce370febf9">ZEBRA_MAX_PACKET_SIZ</a>);
  client-&gt;<a class="code" href="structzserv.html#a2e2a56d18487266bbe740617b5d8c3b7">wb</a> = <a class="code" href="buffer_8c.html#a277b94d1c81d4e5ac2e5c59ede1abed9">buffer_new</a>(0);

  <span class="comment">/* Set table number. */</span>
  client-&gt;<a class="code" href="structzserv.html#a449473d585387c581bf6022973038fdb">rtm_table</a> = <a class="code" href="connected_8c.html#a5a844f9c9c891ff5dfe28610da9b56ce">zebrad</a>.<a class="code" href="structzebra__t.html#a5cde5668ed28c239047f536ad2b9d1c6">rtm_table_default</a>;

  <span class="comment">/* Add this client to linked list. */</span>
  <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (<a class="code" href="connected_8c.html#a5a844f9c9c891ff5dfe28610da9b56ce">zebrad</a>.<a class="code" href="structzebra__t.html#a7be4fa43024195462f6f65db9138c693">client_list</a>, client);
  
  <span class="comment">/* Make new read thread. */</span>
  <a class="code" href="zserv_8c.html#af369f575400fbb36d6e676a328d869a1">zebra_event</a> (<a class="code" href="zserv_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea8af81c1e6c659f520a29088128058a2b">ZEBRA_READ</a>, <a class="code" href="structzserv.html#ad6501dd8068fa000ba4e36ecd4b6b12c">sock</a>, client);
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa9f5b289ef408283e9346488252b22cb"></a><!-- doxytag: member="zserv.c::zebra_client_read" ref="aa9f5b289ef408283e9346488252b22cb" args="(struct thread *thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int zebra_client_read </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>thread</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l01132">1132</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="structzserv.html#ad6501dd8068fa000ba4e36ecd4b6b12c">sock</a>;
  <span class="keyword">struct </span><a class="code" href="structzserv.html">zserv</a> *client;
  <span class="keywordtype">size_t</span> already;
  uint16_t <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>, command;
  uint8_t marker, <a class="code" href="isis__pdu_8h.html#ac477ee30f0ed8c0b09a6f3387287191f">version</a>;

  <span class="comment">/* Get thread data.  Reset reading thread because I&#39;m running. */</span>
  sock = <a class="code" href="thread_8h.html#a89bd56f991717646441f9dffc010d4f5">THREAD_FD</a> (thread);
  client = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
  client-&gt;<a class="code" href="structzserv.html#a482288940eca375c707b08b36bc2762d">t_read</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="keywordflow">if</span> (client-&gt;<a class="code" href="structzserv.html#aa46e1eb6be1ea4780ccf5cba33dde1ec">t_suicide</a>)
    {
      <a class="code" href="zserv_8c.html#aaf8e120786bf27794cb7c246cfd942b3">zebra_client_close</a>(client);
      <span class="keywordflow">return</span> -1;
    }

  <span class="comment">/* Read length and command (if we don&#39;t have it already). */</span>
  <span class="keywordflow">if</span> ((already = <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a>(client-&gt;<a class="code" href="structzserv.html#a204afd1e1599f90f02dfb8ee0b2eceb7">ibuf</a>)) &lt; <a class="code" href="zclient_8h.html#a31ddba642897aac3d80c91cdfdb5deb1">ZEBRA_HEADER_SIZE</a>)
    {
      ssize_t nbyte;
      <span class="keywordflow">if</span> (((nbyte = <a class="code" href="stream_8c.html#a9505861c61983da4470a3689cfb994dd">stream_read_try</a> (client-&gt;<a class="code" href="structzserv.html#a204afd1e1599f90f02dfb8ee0b2eceb7">ibuf</a>, sock,
                     <a class="code" href="zclient_8h.html#a31ddba642897aac3d80c91cdfdb5deb1">ZEBRA_HEADER_SIZE</a>-already)) == 0) ||
      (nbyte == -1))
    {
      <span class="keywordflow">if</span> (<a class="code" href="debug_8h.html#ac4b9d65c78cf2e14bc9cbebcee53b252">IS_ZEBRA_DEBUG_EVENT</a>)
        <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;connection closed socket [%d]&quot;</span>, sock);
      <a class="code" href="zserv_8c.html#aaf8e120786bf27794cb7c246cfd942b3">zebra_client_close</a> (client);
      <span class="keywordflow">return</span> -1;
    }
      <span class="keywordflow">if</span> (nbyte != (ssize_t)(<a class="code" href="zclient_8h.html#a31ddba642897aac3d80c91cdfdb5deb1">ZEBRA_HEADER_SIZE</a>-already))
    {
      <span class="comment">/* Try again later. */</span>
      <a class="code" href="zserv_8c.html#af369f575400fbb36d6e676a328d869a1">zebra_event</a> (<a class="code" href="zserv_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea8af81c1e6c659f520a29088128058a2b">ZEBRA_READ</a>, sock, client);
      <span class="keywordflow">return</span> 0;
    }
      already = <a class="code" href="zclient_8h.html#a31ddba642897aac3d80c91cdfdb5deb1">ZEBRA_HEADER_SIZE</a>;
    }

  <span class="comment">/* Reset to read from the beginning of the incoming packet. */</span>
  <a class="code" href="stream_8c.html#a5506a87bd79df66accb6ad8fbbd5857c">stream_set_getp</a>(client-&gt;<a class="code" href="structzserv.html#a204afd1e1599f90f02dfb8ee0b2eceb7">ibuf</a>, 0);

  <span class="comment">/* Fetch header values */</span>
  length = <a class="code" href="stream_8c.html#a66155fa63acd1f377a5b9e98aba7b888">stream_getw</a> (client-&gt;<a class="code" href="structzserv.html#a204afd1e1599f90f02dfb8ee0b2eceb7">ibuf</a>);
  marker = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (client-&gt;<a class="code" href="structzserv.html#a204afd1e1599f90f02dfb8ee0b2eceb7">ibuf</a>);
  version = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (client-&gt;<a class="code" href="structzserv.html#a204afd1e1599f90f02dfb8ee0b2eceb7">ibuf</a>);
  command = <a class="code" href="stream_8c.html#a66155fa63acd1f377a5b9e98aba7b888">stream_getw</a> (client-&gt;<a class="code" href="structzserv.html#a204afd1e1599f90f02dfb8ee0b2eceb7">ibuf</a>);

  <span class="keywordflow">if</span> (marker != <a class="code" href="zebra_8h.html#a95ca8e88db92c66ea0c8bbb62cea622d">ZEBRA_HEADER_MARKER</a> || version != <a class="code" href="zclient_8h.html#a353879f7a2fe9365a57041c8870e8dec">ZSERV_VERSION</a>)
    {
      <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a>(<span class="stringliteral">&quot;%s: socket %d version mismatch, marker %d, version %d&quot;</span>,
               __func__, sock, marker, version);
      <a class="code" href="zserv_8c.html#aaf8e120786bf27794cb7c246cfd942b3">zebra_client_close</a> (client);
      <span class="keywordflow">return</span> -1;
    }
  <span class="keywordflow">if</span> (length &lt; <a class="code" href="zclient_8h.html#a31ddba642897aac3d80c91cdfdb5deb1">ZEBRA_HEADER_SIZE</a>) 
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;%s: socket %d message length %u is less than header size %d&quot;</span>,
            __func__, sock, length, <a class="code" href="zclient_8h.html#a31ddba642897aac3d80c91cdfdb5deb1">ZEBRA_HEADER_SIZE</a>);
      <a class="code" href="zserv_8c.html#aaf8e120786bf27794cb7c246cfd942b3">zebra_client_close</a> (client);
      <span class="keywordflow">return</span> -1;
    }
  <span class="keywordflow">if</span> (length &gt; <a class="code" href="stream_8h.html#a6e3b6e25ed5cfa2faea8485414a0c1a4">STREAM_SIZE</a>(client-&gt;<a class="code" href="structzserv.html#a204afd1e1599f90f02dfb8ee0b2eceb7">ibuf</a>))
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;%s: socket %d message length %u exceeds buffer size %lu&quot;</span>,
            __func__, sock, length, (u_long)<a class="code" href="stream_8h.html#a6e3b6e25ed5cfa2faea8485414a0c1a4">STREAM_SIZE</a>(client-&gt;<a class="code" href="structzserv.html#a204afd1e1599f90f02dfb8ee0b2eceb7">ibuf</a>));
      <a class="code" href="zserv_8c.html#aaf8e120786bf27794cb7c246cfd942b3">zebra_client_close</a> (client);
      <span class="keywordflow">return</span> -1;
    }

  <span class="comment">/* Read rest of data. */</span>
  <span class="keywordflow">if</span> (already &lt; length)
    {
      ssize_t nbyte;
      <span class="keywordflow">if</span> (((nbyte = <a class="code" href="stream_8c.html#a9505861c61983da4470a3689cfb994dd">stream_read_try</a> (client-&gt;<a class="code" href="structzserv.html#a204afd1e1599f90f02dfb8ee0b2eceb7">ibuf</a>, sock,
                     length-already)) == 0) ||
      (nbyte == -1))
    {
      <span class="keywordflow">if</span> (<a class="code" href="debug_8h.html#ac4b9d65c78cf2e14bc9cbebcee53b252">IS_ZEBRA_DEBUG_EVENT</a>)
        <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;connection closed [%d] when reading zebra data&quot;</span>, sock);
      <a class="code" href="zserv_8c.html#aaf8e120786bf27794cb7c246cfd942b3">zebra_client_close</a> (client);
      <span class="keywordflow">return</span> -1;
    }
      <span class="keywordflow">if</span> (nbyte != (ssize_t)(length-already))
        {
      <span class="comment">/* Try again later. */</span>
      <a class="code" href="zserv_8c.html#af369f575400fbb36d6e676a328d869a1">zebra_event</a> (<a class="code" href="zserv_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea8af81c1e6c659f520a29088128058a2b">ZEBRA_READ</a>, sock, client);
      <span class="keywordflow">return</span> 0;
    }
    }

  length -= <a class="code" href="zclient_8h.html#a31ddba642897aac3d80c91cdfdb5deb1">ZEBRA_HEADER_SIZE</a>;

  <span class="comment">/* Debug packet information. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="debug_8h.html#ac4b9d65c78cf2e14bc9cbebcee53b252">IS_ZEBRA_DEBUG_EVENT</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;zebra message comes from socket [%d]&quot;</span>, sock);

  <span class="keywordflow">if</span> (<a class="code" href="debug_8h.html#a956c6e52675d5f52f15b64fff3b5dfcb">IS_ZEBRA_DEBUG_PACKET</a> &amp;&amp; <a class="code" href="debug_8h.html#ac46628e628a01df354e3402a81e118a1">IS_ZEBRA_DEBUG_RECV</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;zebra message received [%s] %d&quot;</span>, 
           <a class="code" href="log_8c.html#aefa57637f4459f32822cd5eac929f039">zserv_command_string</a> (command), length);

  <span class="keywordflow">switch</span> (command) 
    {
    <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#a7fe5b4bfc1b5074695d98c043a521a16">ZEBRA_ROUTER_ID_ADD</a>:
      <a class="code" href="zserv_8c.html#a6286eaace25a105670c4fb45a4be249d">zread_router_id_add</a> (client, length);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#a977c768bd5d6565e7d620fe16e7d3239">ZEBRA_ROUTER_ID_DELETE</a>:
      <a class="code" href="zserv_8c.html#a2fcd797f6e763563d628146094342bfc">zread_router_id_delete</a> (client, length);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#af23bf4b28d6d856ed43995d31c253119">ZEBRA_INTERFACE_ADD</a>:
      <a class="code" href="zserv_8c.html#ae363ccd6683aebf490d8dcae937d9a2f">zread_interface_add</a> (client, length);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#aa7ee6fa3df5b16d052e27ff18ae4ac39">ZEBRA_INTERFACE_DELETE</a>:
      <a class="code" href="zserv_8c.html#a298872bf1a01c37898edc39333491e12">zread_interface_delete</a> (client, length);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#aa2913a6b1e5fbc598479aa282343a5e1">ZEBRA_IPV4_ROUTE_ADD</a>:
      <a class="code" href="zserv_8c.html#ad0390ed4cb8928d8407a3039b87a92c2">zread_ipv4_add</a> (client, length);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#a0c9efcc3f61219a6697f5da18d8de992">ZEBRA_IPV4_ROUTE_DELETE</a>:
      <a class="code" href="zserv_8c.html#a46455bcde6ef93d0bd96bc9bb9ccfb0d">zread_ipv4_delete</a> (client, length);
      <span class="keywordflow">break</span>;
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>    <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#a2d0f19502bde040501c7ad64bc955739">ZEBRA_IPV6_ROUTE_ADD</a>:
      zread_ipv6_add (client, length);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#ad98414d027f7107e91cb040a329ad48a">ZEBRA_IPV6_ROUTE_DELETE</a>:
      zread_ipv6_delete (client, length);
      <span class="keywordflow">break</span>;
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
    <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#aaf00306d6060095dd258463ee7cb0cc1">ZEBRA_REDISTRIBUTE_ADD</a>:
      <a class="code" href="redistribute_8c.html#a3fccd054d21e0f13c34d6407bae6dbc9">zebra_redistribute_add</a> (command, client, length);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#a1dce1941aae01a8a16dace7591398a0d">ZEBRA_REDISTRIBUTE_DELETE</a>:
      <a class="code" href="redistribute_8c.html#a452bad20e6b9abb567cb6428830d6c3e">zebra_redistribute_delete</a> (command, client, length);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#a6a54e4c8e5f637b9edb208de808a2ac6">ZEBRA_REDISTRIBUTE_DEFAULT_ADD</a>:
      <a class="code" href="redistribute_8c.html#afbd66e9d1a581d627cc85dc4760fcdc0">zebra_redistribute_default_add</a> (command, client, length);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#a2fd9f5c25e3e2e28a03047807f20e246">ZEBRA_REDISTRIBUTE_DEFAULT_DELETE</a>:
      <a class="code" href="redistribute_8c.html#aea66ce00d540385c87094e70345784b1">zebra_redistribute_default_delete</a> (command, client, length);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#a7ed7741500eb4f178369418725aef502">ZEBRA_IPV4_NEXTHOP_LOOKUP</a>:
      <a class="code" href="zserv_8c.html#ac199635f7303c91c8d23b6f976221507">zread_ipv4_nexthop_lookup</a> (client, length);
      <span class="keywordflow">break</span>;
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>    <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#aa08e113e5a8c6e41bf4e89ee1100221d">ZEBRA_IPV6_NEXTHOP_LOOKUP</a>:
      zread_ipv6_nexthop_lookup (client, length);
      <span class="keywordflow">break</span>;
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
    <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#ae2f9ecf7e0fa5362e68e4853506695bf">ZEBRA_IPV4_IMPORT_LOOKUP</a>:
      <a class="code" href="zserv_8c.html#a397b0d5bfbc70aa466fcc61179b4923a">zread_ipv4_import_lookup</a> (client, length);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">default</span>:
      <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;Zebra received unknown command %d&quot;</span>, command);
      <span class="keywordflow">break</span>;
    }

  <span class="keywordflow">if</span> (client-&gt;<a class="code" href="structzserv.html#aa46e1eb6be1ea4780ccf5cba33dde1ec">t_suicide</a>)
    {
      <span class="comment">/* No need to wait for thread callback, just kill immediately. */</span>
      <a class="code" href="zserv_8c.html#aaf8e120786bf27794cb7c246cfd942b3">zebra_client_close</a>(client);
      <span class="keywordflow">return</span> -1;
    }

  <a class="code" href="stream_8c.html#aee8fd31485ebc2f0a556a6a5d5c2d1e6">stream_reset</a> (client-&gt;<a class="code" href="structzserv.html#a204afd1e1599f90f02dfb8ee0b2eceb7">ibuf</a>);
  <a class="code" href="zserv_8c.html#af369f575400fbb36d6e676a328d869a1">zebra_event</a> (<a class="code" href="zserv_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea8af81c1e6c659f520a29088128058a2b">ZEBRA_READ</a>, sock, client);
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af369f575400fbb36d6e676a328d869a1"></a><!-- doxytag: member="zserv.c::zebra_event" ref="af369f575400fbb36d6e676a328d869a1" args="(enum event event, int sock, struct zserv *client)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void zebra_event </td>
          <td>(</td>
          <td class="paramtype">enum <a class="el" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a>&#160;</td>
          <td class="paramname"><em>event</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structzserv.html">zserv</a> *&#160;</td>
          <td class="paramname"><em>client</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="af369f575400fbb36d6e676a328d869a1"></a><!-- doxytag: member="zserv.c::zebra_event" ref="af369f575400fbb36d6e676a328d869a1" args="(enum event event, int sock, struct zserv *client)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void zebra_event </td>
          <td>(</td>
          <td class="paramtype">enum <a class="el" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a>&#160;</td>
          <td class="paramname"><em>event</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structzserv.html">zserv</a> *&#160;</td>
          <td class="paramname"><em>client</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l01462">1462</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">switch</span> (<a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a>)
    {
    <span class="keywordflow">case</span> <a class="code" href="zserv_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea798c01376b108480a941e1e6c69a2a21">ZEBRA_SERV</a>:
      <a class="code" href="thread_8h.html#abd1714f11834a150c84b040c0c69b620">thread_add_read</a> (<a class="code" href="connected_8c.html#a5a844f9c9c891ff5dfe28610da9b56ce">zebrad</a>.<a class="code" href="structzebra__t.html#a9755f929805f6555c6f86d085309f0e2">master</a>, <a class="code" href="zserv_8c.html#afe2b4e341bf292b8b3e52836a29e3a99">zebra_accept</a>, client, <a class="code" href="structzserv.html#ad6501dd8068fa000ba4e36ecd4b6b12c">sock</a>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="zserv_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea8af81c1e6c659f520a29088128058a2b">ZEBRA_READ</a>:
      client-&gt;<a class="code" href="structzserv.html#a482288940eca375c707b08b36bc2762d">t_read</a> = 
    <a class="code" href="thread_8h.html#abd1714f11834a150c84b040c0c69b620">thread_add_read</a> (<a class="code" href="connected_8c.html#a5a844f9c9c891ff5dfe28610da9b56ce">zebrad</a>.<a class="code" href="structzebra__t.html#a9755f929805f6555c6f86d085309f0e2">master</a>, <a class="code" href="zserv_8c.html#aa9f5b289ef408283e9346488252b22cb">zebra_client_read</a>, client, <a class="code" href="structzserv.html#ad6501dd8068fa000ba4e36ecd4b6b12c">sock</a>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="zserv_8c.html#a3b65133bb9997cd1ccf311af0927fc9eac02643d854489b17e1400ff30e76f7f6">ZEBRA_WRITE</a>:
      <span class="comment">/**/</span>
      <span class="keywordflow">break</span>;
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a94f099bb450145e19c34878de7b8c99e"></a><!-- doxytag: member="zserv.c::zebra_init" ref="a94f099bb450145e19c34878de7b8c99e" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void zebra_init </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l01702">1702</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="comment">/* Client list init. */</span>
  <a class="code" href="connected_8c.html#a5a844f9c9c891ff5dfe28610da9b56ce">zebrad</a>.<a class="code" href="structzebra__t.html#a7be4fa43024195462f6f65db9138c693">client_list</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();

  <span class="comment">/* Install configuration write function. */</span>
  <a class="code" href="command_8c.html#a7ee8a7c258e1e5a6e3ff6173dd1658e3">install_node</a> (&amp;<a class="code" href="zserv_8c.html#a52055db6b0231058bd3bc3ad3d385d53">table_node</a>, <a class="code" href="zserv_8c.html#ad9f56eddfd4039c41fa5479e3f07b580">config_write_table</a>);
  <a class="code" href="command_8c.html#a7ee8a7c258e1e5a6e3ff6173dd1658e3">install_node</a> (&amp;<a class="code" href="zserv_8c.html#a872fd0beb57dc5fda2266ed71ae02ad8">forwarding_node</a>, <a class="code" href="zserv_8c.html#a8075a1af2df3fda1db3f308a3d9753c2">config_write_forwarding</a>);

  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;show_ip_forwarding_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;show_ip_forwarding_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;ip_forwarding_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;no_ip_forwarding_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;show_zebra_client_cmd);

<span class="preprocessor">#ifdef HAVE_NETLINK</span>
<span class="preprocessor"></span>  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;show_table_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;show_table_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;config_table_cmd);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_NETLINK */</span>

<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;show_ipv6_forwarding_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;show_ipv6_forwarding_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;ipv6_forwarding_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;no_ipv6_forwarding_cmd);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>

  <span class="comment">/* Route-map */</span>
  <a class="code" href="zebra__routemap_8c.html#a99142c32fa04dce8d1882651f99c3c48">zebra_route_map_init</a> ();
}
</pre></div>
</div>
</div>
<a class="anchor" id="a95339bb43fb4636cec5fc6b09a533e7c"></a><!-- doxytag: member="zserv.c::zebra_serv_un" ref="a95339bb43fb4636cec5fc6b09a533e7c" args="(const char *path)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void zebra_serv_un </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l01402">1402</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret;
  <span class="keywordtype">int</span> <a class="code" href="structzserv.html#ad6501dd8068fa000ba4e36ecd4b6b12c">sock</a>, len;
  <span class="keyword">struct </span>sockaddr_un serv;
  mode_t old_mask;

  <span class="comment">/* First of all, unlink existing socket */</span>
  unlink (path);

  <span class="comment">/* Set umask */</span>
  old_mask = umask (0077);

  <span class="comment">/* Make UNIX domain socket. */</span>
  sock = socket (AF_UNIX, SOCK_STREAM, 0);
  <span class="keywordflow">if</span> (sock &lt; 0)
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;Can&#39;t create zserv unix socket: %s&quot;</span>, 
                 <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;zebra can&#39;t provide full functionality due to above error&quot;</span>);
      <span class="keywordflow">return</span>;
    }

  <span class="comment">/* Make server socket. */</span>
  memset (&amp;serv, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> sockaddr_un));
  serv.sun_family = AF_UNIX;
  strncpy (serv.sun_path, path, strlen (path));
<span class="preprocessor">#ifdef HAVE_STRUCT_SOCKADDR_UN_SUN_LEN</span>
<span class="preprocessor"></span>  len = serv.sun_len = SUN_LEN(&amp;serv);
<span class="preprocessor">#else</span>
<span class="preprocessor"></span>  len = <span class="keyword">sizeof</span> (serv.sun_family) + strlen (serv.sun_path);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_STRUCT_SOCKADDR_UN_SUN_LEN */</span>

  ret = bind (sock, (<span class="keyword">struct</span> sockaddr *) &amp;serv, len);
  <span class="keywordflow">if</span> (ret &lt; 0)
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;Can&#39;t bind to unix socket %s: %s&quot;</span>, 
                 path, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;zebra can&#39;t provide full functionality due to above error&quot;</span>);
      close (sock);
      <span class="keywordflow">return</span>;
    }

  ret = listen (sock, 5);
  <span class="keywordflow">if</span> (ret &lt; 0)
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;Can&#39;t listen to unix socket %s: %s&quot;</span>, 
                 path, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;zebra can&#39;t provide full functionality due to above error&quot;</span>);
      close (sock);
      <span class="keywordflow">return</span>;
    }

  umask (old_mask);

  <a class="code" href="zserv_8c.html#af369f575400fbb36d6e676a328d869a1">zebra_event</a> (<a class="code" href="zserv_8c.html#a3b65133bb9997cd1ccf311af0927fc9ea798c01376b108480a941e1e6c69a2a21">ZEBRA_SERV</a>, sock, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab5199476fdd33bbcde9cda69fd532c57"></a><!-- doxytag: member="zserv.c::zebra_server_send_message" ref="ab5199476fdd33bbcde9cda69fd532c57" args="(struct zserv *client)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int zebra_server_send_message </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structzserv.html">zserv</a> *&#160;</td>
          <td class="paramname"><em>client</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l00096">96</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (client-&gt;<a class="code" href="structzserv.html#aa46e1eb6be1ea4780ccf5cba33dde1ec">t_suicide</a>)
    <span class="keywordflow">return</span> -1;
  <span class="keywordflow">switch</span> (<a class="code" href="buffer_8c.html#a426b697edda52bb07fdf222e8b982e9d">buffer_write</a>(client-&gt;<a class="code" href="structzserv.html#a2e2a56d18487266bbe740617b5d8c3b7">wb</a>, client-&gt;<a class="code" href="structzserv.html#ad6501dd8068fa000ba4e36ecd4b6b12c">sock</a>, <a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a>(client-&gt;<a class="code" href="structzserv.html#a1d8389e20e2a44d47c4509e15b3a3443">obuf</a>),
               <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a>(client-&gt;<a class="code" href="structzserv.html#a1d8389e20e2a44d47c4509e15b3a3443">obuf</a>)))
    {
    <span class="keywordflow">case</span> <a class="code" href="buffer_8h.html#a11b72623a9601834584c5ecf08dd6e27a6185688e62ce527910fd779f2093c6f1">BUFFER_ERROR</a>:
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;%s: buffer_write failed to zserv client fd %d, closing&quot;</span>,
             __func__, client-&gt;<a class="code" href="structzserv.html#ad6501dd8068fa000ba4e36ecd4b6b12c">sock</a>);
      <span class="comment">/* Schedule a delayed close since many of the functions that call this</span>
<span class="comment">         one do not check the return code.  They do not allow for the</span>
<span class="comment">     possibility that an I/O error may have caused the client to be</span>
<span class="comment">     deleted. */</span>
      client-&gt;<a class="code" href="structzserv.html#aa46e1eb6be1ea4780ccf5cba33dde1ec">t_suicide</a> = <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a>(<a class="code" href="connected_8c.html#a5a844f9c9c891ff5dfe28610da9b56ce">zebrad</a>.<a class="code" href="structzebra__t.html#a9755f929805f6555c6f86d085309f0e2">master</a>, <a class="code" href="zserv_8c.html#a4a58b9ca930855233c8c3ef9159bbebd">zserv_delayed_close</a>,
                       client, 0);
      <span class="keywordflow">return</span> -1;
    <span class="keywordflow">case</span> <a class="code" href="buffer_8h.html#a11b72623a9601834584c5ecf08dd6e27a78d7168c875c46a0fbb5835cd160e2ba">BUFFER_EMPTY</a>:
      <a class="code" href="thread_8h.html#a7e1de4fc338e4feae498978461742dbb">THREAD_OFF</a>(client-&gt;<a class="code" href="structzserv.html#a2e7851f7fc1d5074b44dba33cdcee627">t_write</a>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="buffer_8h.html#a11b72623a9601834584c5ecf08dd6e27a6a5c775497aad93877d86b6a334de110">BUFFER_PENDING</a>:
      <a class="code" href="thread_8h.html#ad563eafaebb935e4371f38e37ca33b00">THREAD_WRITE_ON</a>(<a class="code" href="connected_8c.html#a5a844f9c9c891ff5dfe28610da9b56ce">zebrad</a>.<a class="code" href="structzebra__t.html#a9755f929805f6555c6f86d085309f0e2">master</a>, client-&gt;<a class="code" href="structzserv.html#a2e7851f7fc1d5074b44dba33cdcee627">t_write</a>,
              <a class="code" href="zserv_8c.html#a3cce1412c0532c4cdf3e5a636e96c541">zserv_flush_data</a>, client, client-&gt;<a class="code" href="structzserv.html#ad6501dd8068fa000ba4e36ecd4b6b12c">sock</a>);
      <span class="keywordflow">break</span>;
    }
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a73dd94d53f97f6cca94ae8d5c087023f"></a><!-- doxytag: member="zserv.c::zebra_zserv_socket_init" ref="a73dd94d53f97f6cca94ae8d5c087023f" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void zebra_zserv_socket_init </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l01736">1736</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
<span class="preprocessor">#ifdef HAVE_TCP_ZEBRA</span>
<span class="preprocessor"></span>  zebra_serv ();
<span class="preprocessor">#else</span>
<span class="preprocessor"></span>  <a class="code" href="zserv_8c.html#a95339bb43fb4636cec5fc6b09a533e7c">zebra_serv_un</a> (ZEBRA_SERV_PATH);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_TCP_ZEBRA */</span>
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae363ccd6683aebf490d8dcae937d9a2f"></a><!-- doxytag: member="zserv.c::zread_interface_add" ref="ae363ccd6683aebf490d8dcae937d9a2f" args="(struct zserv *client, u_short length)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int zread_interface_add </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structzserv.html">zserv</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_short&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l00688">688</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *ifnode, *ifnnode;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *cnode, *cnnode;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
  <span class="keyword">struct </span><a class="code" href="structconnected.html">connected</a> *c;

  <span class="comment">/* Interface information is needed. */</span>
  client-&gt;<a class="code" href="structzserv.html#a62fedf94adfdbc6484bd15b3f418dd09">ifinfo</a> = 1;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (<a class="code" href="if_8c.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a>, ifnode, ifnnode, ifp))
    {
      <span class="comment">/* Skip pseudo interface. */</span>
      <span class="keywordflow">if</span> (! <a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (ifp-&gt;<a class="code" href="structinterface.html#ae145c01f63b3abaca8e3805f9e396c4a">status</a>, <a class="code" href="if_8h.html#a977548125c39a6ba021b2d0fde8f5a52">ZEBRA_INTERFACE_ACTIVE</a>))
    <span class="keywordflow">continue</span>;

      <span class="keywordflow">if</span> (<a class="code" href="zserv_8c.html#ac0fb06c3680893ca7b34202d2b8670f5">zsend_interface_add</a> (client, ifp) &lt; 0)
        <span class="keywordflow">return</span> -1;

      <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (ifp-&gt;<a class="code" href="structinterface.html#ac7c47b5cc1df81e51bf1ecea97b4d4b3">connected</a>, cnode, cnnode, c))
    {
      <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (c-&gt;<a class="code" href="structconnected.html#a5dce94fe72d07a6f2312b12a8a9f1312">conf</a>, <a class="code" href="if_8h.html#a56abda52e44cc999ccddf7b63bc14eca">ZEBRA_IFC_REAL</a>) &amp;&amp;
          (<a class="code" href="zserv_8c.html#adb6ebd718dd70884d1315eadddf3308b">zsend_interface_address</a> (<a class="code" href="zebra_8h.html#aea532f1b7734390e98af1be9c18b0964">ZEBRA_INTERFACE_ADDRESS_ADD</a>, client, 
                        ifp, c) &lt; 0))
        <span class="keywordflow">return</span> -1;
    }
    }
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a298872bf1a01c37898edc39333491e12"></a><!-- doxytag: member="zserv.c::zread_interface_delete" ref="a298872bf1a01c37898edc39333491e12" args="(struct zserv *client, u_short length)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int zread_interface_delete </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structzserv.html">zserv</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_short&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l00720">720</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  client-&gt;<a class="code" href="structzserv.html#a62fedf94adfdbc6484bd15b3f418dd09">ifinfo</a> = 0;
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad0390ed4cb8928d8407a3039b87a92c2"></a><!-- doxytag: member="zserv.c::zread_ipv4_add" ref="ad0390ed4cb8928d8407a3039b87a92c2" args="(struct zserv *client, u_short length)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int zread_ipv4_add </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structzserv.html">zserv</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_short&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l00732">732</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
  <span class="keyword">struct </span><a class="code" href="structrib.html">rib</a> *<a class="code" href="structrib.html">rib</a>;
  <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
  u_char <a class="code" href="structmessage.html">message</a>;
  <span class="keyword">struct </span>in_addr <a class="code" href="structnexthop.html">nexthop</a>;
  u_char nexthop_num;
  u_char nexthop_type;
  <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>;
  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> ifindex;
  u_char ifname_len;

  <span class="comment">/* Get input stream.  */</span>
  s = client-&gt;<a class="code" href="structzserv.html#a204afd1e1599f90f02dfb8ee0b2eceb7">ibuf</a>;

  <span class="comment">/* Allocate new rib. */</span>
  rib = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba0ef14e77de1f08268d0d2c19603d1d67">MTYPE_RIB</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> rib));
  
  <span class="comment">/* Type, flags, message. */</span>
  rib-&gt;<a class="code" href="structrib.html#a851ad92c541e55a15bd833fa0f753ce6">type</a> = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);
  rib-&gt;<a class="code" href="structrib.html#a2d6fadf111112f45163239c602f83034">flags</a> = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);
  message = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s); 
  rib-&gt;<a class="code" href="structrib.html#ac4bc4479d273ecf626dfee778825bc5b">uptime</a> = time (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);

  <span class="comment">/* IPv4 prefix. */</span>
  memset (&amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a>));
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.family = AF_INET;
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);
  <a class="code" href="stream_8c.html#ab7101e57ef0d9dc1a33e7f7e30c91b9a">stream_get</a> (&amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix, s, <a class="code" href="bgpd_8h.html#a472145011d944606a257487e80cc3ace">PSIZE</a> (<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen));

  <span class="comment">/* Nexthop parse. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (message, <a class="code" href="zclient_8h.html#a321bbeaddad8bc9bffaf57f7ac6cf8fd">ZAPI_MESSAGE_NEXTHOP</a>))
    {
      nexthop_num = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);

      <span class="keywordflow">for</span> (i = 0; i &lt; nexthop_num; i++)
    {
      nexthop_type = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);

      <span class="keywordflow">switch</span> (nexthop_type)
        {
        <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#a8b5777b74f2584912603090de989e564">ZEBRA_NEXTHOP_IFINDEX</a>:
          ifindex = <a class="code" href="stream_8c.html#af857bfab0cbe7d5681e9108b58f939f2">stream_getl</a> (s);
          <a class="code" href="rib_8h.html#a353881daf608ea5c55ea9282db8400a7">nexthop_ifindex_add</a> (rib, ifindex);
          <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#aa38b852f0e7c729f7db77cb0c99030a5">ZEBRA_NEXTHOP_IFNAME</a>:
          ifname_len = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);
          <a class="code" href="stream_8c.html#a1deb508ba8ee96eeea12f1b690373260">stream_forward_getp</a> (s, ifname_len);
          <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#ae603faed81a38b4507ffd9b6f9586b44">ZEBRA_NEXTHOP_IPV4</a>:
          <a class="code" href="structnexthop.html">nexthop</a>.s_addr = <a class="code" href="stream_8c.html#a0d93aa3e961894e5215d343625488576">stream_get_ipv4</a> (s);
          <a class="code" href="rib_8h.html#a66650034d36f49d2e5ca51bf9557fae5">nexthop_ipv4_add</a> (rib, &amp;<a class="code" href="structnexthop.html">nexthop</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
          <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#aaeb29f4f9e313b846883f1d7462a43a7">ZEBRA_NEXTHOP_IPV6</a>:
          <a class="code" href="stream_8c.html#a1deb508ba8ee96eeea12f1b690373260">stream_forward_getp</a> (s, <a class="code" href="prefix_8h.html#ac2642af4f4d7a4209ad6261e72c658f9">IPV6_MAX_BYTELEN</a>);
          <span class="keywordflow">break</span>;
      <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#af00200aec468f2738ec3fabc3103b187">ZEBRA_NEXTHOP_BLACKHOLE</a>:
        <a class="code" href="rib_8h.html#af0dfa3aee7ea3fbc982a713e3fe2bdca">nexthop_blackhole_add</a> (rib);
        <span class="keywordflow">break</span>;
        }
    }
    }

  <span class="comment">/* Distance. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (message, <a class="code" href="zclient_8h.html#abe498bb81bfbda17757173ef23e25179">ZAPI_MESSAGE_DISTANCE</a>))
    rib-&gt;<a class="code" href="structrib.html#a019148eb7d950ca4be25faec0041b6eb">distance</a> = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);

  <span class="comment">/* Metric. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (message, <a class="code" href="zclient_8h.html#a4a5d60df1ef02f794476ea1daa6ba024">ZAPI_MESSAGE_METRIC</a>))
    rib-&gt;<a class="code" href="structrib.html#a76469a0c207c22af7e4e2b298cbb84cf">metric</a> = <a class="code" href="stream_8c.html#af857bfab0cbe7d5681e9108b58f939f2">stream_getl</a> (s);
    
  <span class="comment">/* Table */</span>
  rib-&gt;<a class="code" href="structrib.html#a3926f371eddda6867a341360ed483c50">table</a>=<a class="code" href="connected_8c.html#a5a844f9c9c891ff5dfe28610da9b56ce">zebrad</a>.<a class="code" href="structzebra__t.html#a5cde5668ed28c239047f536ad2b9d1c6">rtm_table_default</a>;
  <a class="code" href="rib_8h.html#a730ebabb9135b68be0a8bddb851244bb">rib_add_ipv4_multipath</a> (&amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, rib);
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a46455bcde6ef93d0bd96bc9bb9ccfb0d"></a><!-- doxytag: member="zserv.c::zread_ipv4_delete" ref="a46455bcde6ef93d0bd96bc9bb9ccfb0d" args="(struct zserv *client, u_short length)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int zread_ipv4_delete </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structzserv.html">zserv</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_short&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l00812">812</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
  <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>;
  <span class="keyword">struct </span><a class="code" href="structzapi__ipv4.html">zapi_ipv4</a> api;
  <span class="keyword">struct </span>in_addr <a class="code" href="structnexthop.html">nexthop</a>;
  <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> ifindex;
  <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
  u_char nexthop_num;
  u_char nexthop_type;
  u_char ifname_len;
  
  s = client-&gt;<a class="code" href="structzserv.html#a204afd1e1599f90f02dfb8ee0b2eceb7">ibuf</a>;
  ifindex = 0;
  <a class="code" href="structnexthop.html">nexthop</a>.s_addr = 0;

  <span class="comment">/* Type, flags, message. */</span>
  api.<a class="code" href="structnexthop.html#a2945ec57f56526f142592f4f578b4522">type</a> = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);
  api.flags = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);
  api.message = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);

  <span class="comment">/* IPv4 prefix. */</span>
  memset (&amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a>));
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.family = AF_INET;
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);
  <a class="code" href="stream_8c.html#ab7101e57ef0d9dc1a33e7f7e30c91b9a">stream_get</a> (&amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix, s, <a class="code" href="bgpd_8h.html#a472145011d944606a257487e80cc3ace">PSIZE</a> (<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen));

  <span class="comment">/* Nexthop, ifindex, distance, metric. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#a321bbeaddad8bc9bffaf57f7ac6cf8fd">ZAPI_MESSAGE_NEXTHOP</a>))
    {
      nexthop_num = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);

      <span class="keywordflow">for</span> (i = 0; i &lt; nexthop_num; i++)
    {
      nexthop_type = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);

      <span class="keywordflow">switch</span> (nexthop_type)
        {
        <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#a8b5777b74f2584912603090de989e564">ZEBRA_NEXTHOP_IFINDEX</a>:
          ifindex = <a class="code" href="stream_8c.html#af857bfab0cbe7d5681e9108b58f939f2">stream_getl</a> (s);
          <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#aa38b852f0e7c729f7db77cb0c99030a5">ZEBRA_NEXTHOP_IFNAME</a>:
          ifname_len = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);
          <a class="code" href="stream_8c.html#a1deb508ba8ee96eeea12f1b690373260">stream_forward_getp</a> (s, ifname_len);
          <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#ae603faed81a38b4507ffd9b6f9586b44">ZEBRA_NEXTHOP_IPV4</a>:
          <a class="code" href="structnexthop.html">nexthop</a>.s_addr = <a class="code" href="stream_8c.html#a0d93aa3e961894e5215d343625488576">stream_get_ipv4</a> (s);
          <span class="keywordflow">break</span>;
        <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#aaeb29f4f9e313b846883f1d7462a43a7">ZEBRA_NEXTHOP_IPV6</a>:
          <a class="code" href="stream_8c.html#a1deb508ba8ee96eeea12f1b690373260">stream_forward_getp</a> (s, <a class="code" href="prefix_8h.html#ac2642af4f4d7a4209ad6261e72c658f9">IPV6_MAX_BYTELEN</a>);
          <span class="keywordflow">break</span>;
        }
    }
    }

  <span class="comment">/* Distance. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#abe498bb81bfbda17757173ef23e25179">ZAPI_MESSAGE_DISTANCE</a>))
    api.distance = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);
  <span class="keywordflow">else</span>
    api.distance = 0;

  <span class="comment">/* Metric. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#a4a5d60df1ef02f794476ea1daa6ba024">ZAPI_MESSAGE_METRIC</a>))
    api.metric = <a class="code" href="stream_8c.html#af857bfab0cbe7d5681e9108b58f939f2">stream_getl</a> (s);
  <span class="keywordflow">else</span>
    api.metric = 0;
    
  <a class="code" href="rib_8h.html#a71bb35924cbe7fc66195c1876c77bb44">rib_delete_ipv4</a> (api.type, api.flags, &amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, &amp;<a class="code" href="structnexthop.html">nexthop</a>, ifindex,
           client-&gt;<a class="code" href="structzserv.html#a449473d585387c581bf6022973038fdb">rtm_table</a>);
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a397b0d5bfbc70aa466fcc61179b4923a"></a><!-- doxytag: member="zserv.c::zread_ipv4_import_lookup" ref="a397b0d5bfbc70aa466fcc61179b4923a" args="(struct zserv *client, u_short length)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int zread_ipv4_import_lookup </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structzserv.html">zserv</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_short&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l00896">896</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;

  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.family = AF_INET;
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (client-&gt;<a class="code" href="structzserv.html#a204afd1e1599f90f02dfb8ee0b2eceb7">ibuf</a>);
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix.s_addr = <a class="code" href="stream_8c.html#a0d93aa3e961894e5215d343625488576">stream_get_ipv4</a> (client-&gt;<a class="code" href="structzserv.html#a204afd1e1599f90f02dfb8ee0b2eceb7">ibuf</a>);

  <span class="keywordflow">return</span> <a class="code" href="zserv_8c.html#aade0e4834f9b1d2cc41bd0b26b9343b9">zsend_ipv4_import_lookup</a> (client, &amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac199635f7303c91c8d23b6f976221507"></a><!-- doxytag: member="zserv.c::zread_ipv4_nexthop_lookup" ref="ac199635f7303c91c8d23b6f976221507" args="(struct zserv *client, u_short length)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int zread_ipv4_nexthop_lookup </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structzserv.html">zserv</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_short&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l00886">886</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span>in_addr addr;

  addr.s_addr = <a class="code" href="stream_8c.html#a0d93aa3e961894e5215d343625488576">stream_get_ipv4</a> (client-&gt;<a class="code" href="structzserv.html#a204afd1e1599f90f02dfb8ee0b2eceb7">ibuf</a>);
  <span class="keywordflow">return</span> <a class="code" href="zserv_8c.html#a8b3aacdf2c0e6ccc76012b7f37d64544">zsend_ipv4_nexthop_lookup</a> (client, addr);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6286eaace25a105670c4fb45a4be249d"></a><!-- doxytag: member="zserv.c::zread_router_id_add" ref="a6286eaace25a105670c4fb45a4be249d" args="(struct zserv *client, u_short length)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int zread_router_id_add </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structzserv.html">zserv</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_short&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l01054">1054</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;

  <span class="comment">/* Router-id information is needed. */</span>
  client-&gt;<a class="code" href="structzserv.html#af15950dfc79107ee3d978b86b7e0dad9">ridinfo</a> = 1;

  <a class="code" href="router-id_8c.html#ad8dff6cdf343c874eab4709b47600e89">router_id_get</a> (&amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>);

  <span class="keywordflow">return</span> <a class="code" href="zserv_8c.html#ac902d118eea994cdc524465a5d2db124">zsend_router_id_update</a> (client,&amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a2fcd797f6e763563d628146094342bfc"></a><!-- doxytag: member="zserv.c::zread_router_id_delete" ref="a2fcd797f6e763563d628146094342bfc" args="(struct zserv *client, u_short length)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int zread_router_id_delete </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structzserv.html">zserv</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_short&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l01068">1068</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  client-&gt;<a class="code" href="structzserv.html#af15950dfc79107ee3d978b86b7e0dad9">ridinfo</a> = 0;
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac0fb06c3680893ca7b34202d2b8670f5"></a><!-- doxytag: member="zserv.c::zsend_interface_add" ref="ac0fb06c3680893ca7b34202d2b8670f5" args="(struct zserv *client, struct interface *ifp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int zsend_interface_add </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structzserv.html">zserv</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"><em>ifp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l00146">146</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>;

  <span class="comment">/* Check this client need interface information. */</span>
  <span class="keywordflow">if</span> (! client-&gt;<a class="code" href="structzserv.html#a62fedf94adfdbc6484bd15b3f418dd09">ifinfo</a>)
    <span class="keywordflow">return</span> 0;

  s = client-&gt;<a class="code" href="structzserv.html#a1d8389e20e2a44d47c4509e15b3a3443">obuf</a>;
  <a class="code" href="stream_8c.html#aee8fd31485ebc2f0a556a6a5d5c2d1e6">stream_reset</a> (s);

  <span class="comment">/* Message type. */</span>
  <a class="code" href="zserv_8c.html#a14cda6a8900f2fad7eaa58d4da2c92dd">zserv_create_header</a> (s, <a class="code" href="zebra_8h.html#af23bf4b28d6d856ed43995d31c253119">ZEBRA_INTERFACE_ADD</a>);

  <span class="comment">/* Interface information. */</span>
  <a class="code" href="stream_8c.html#a2f540a71efdf46e8c3a923f73e9f3b73">stream_put</a> (s, ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, <a class="code" href="if_8h.html#ab819b6f1f4d393be3e866af97297b9cb">INTERFACE_NAMSIZ</a>);
  <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>);
  <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, ifp-&gt;<a class="code" href="structinterface.html#ae145c01f63b3abaca8e3805f9e396c4a">status</a>);
  <a class="code" href="stream_8c.html#a966260eb2365bf57d649c4da5f12d5fe">stream_putq</a> (s, ifp-&gt;<a class="code" href="structinterface.html#a09ed96b900f31d769a76a32b67217c8f">flags</a>);
  <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, ifp-&gt;<a class="code" href="structinterface.html#adbb7ad89b817a388e9442e85f1e72cc8">metric</a>);
  <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, ifp-&gt;<a class="code" href="structinterface.html#aadd24df2d261a3bfcbdfe4797e639afb">mtu</a>);
  <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, ifp-&gt;<a class="code" href="structinterface.html#a75a892a4df0f60191a13ca07b6625cb1">mtu6</a>);
  <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, ifp-&gt;<a class="code" href="structinterface.html#a324b6a80459775b1e5e254369649e075">bandwidth</a>);
<span class="preprocessor">#ifdef HAVE_STRUCT_SOCKADDR_DL</span>
<span class="preprocessor"></span>  <a class="code" href="stream_8c.html#a2f540a71efdf46e8c3a923f73e9f3b73">stream_put</a> (s, &amp;ifp-&gt;sdl, sizeof (ifp-&gt;sdl));
<span class="preprocessor">#else</span>
<span class="preprocessor"></span>  <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, ifp-&gt;<a class="code" href="structinterface.html#a6521c9be15367445abca01bbba9c2cb4">hw_addr_len</a>);
  <span class="keywordflow">if</span> (ifp-&gt;<a class="code" href="structinterface.html#a6521c9be15367445abca01bbba9c2cb4">hw_addr_len</a>)
    <a class="code" href="stream_8c.html#a2f540a71efdf46e8c3a923f73e9f3b73">stream_put</a> (s, ifp-&gt;<a class="code" href="structinterface.html#a6fe2f3c7e5be26c4e376b514d86f5c22">hw_addr</a>, ifp-&gt;<a class="code" href="structinterface.html#a6521c9be15367445abca01bbba9c2cb4">hw_addr_len</a>);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_STRUCT_SOCKADDR_DL */</span>

  <span class="comment">/* Write packet size. */</span>
  <a class="code" href="stream_8c.html#a41de70a7383bac6220b787d740c0b261">stream_putw_at</a> (s, 0, <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a> (s));

  <span class="keywordflow">return</span> <a class="code" href="zserv_8c.html#ab5199476fdd33bbcde9cda69fd532c57">zebra_server_send_message</a>(client);
}
</pre></div>
</div>
</div>
<a class="anchor" id="adb6ebd718dd70884d1315eadddf3308b"></a><!-- doxytag: member="zserv.c::zsend_interface_address" ref="adb6ebd718dd70884d1315eadddf3308b" args="(int cmd, struct zserv *client, struct interface *ifp, struct connected *ifc)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int zsend_interface_address </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structzserv.html">zserv</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"><em>ifp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structconnected.html">connected</a> *&#160;</td>
          <td class="paramname"><em>ifc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l00253">253</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> blen;
  <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>;
  <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;

  <span class="comment">/* Check this client need interface information. */</span>
  <span class="keywordflow">if</span> (! client-&gt;<a class="code" href="structzserv.html#a62fedf94adfdbc6484bd15b3f418dd09">ifinfo</a>)
    <span class="keywordflow">return</span> 0;

  s = client-&gt;<a class="code" href="structzserv.html#a1d8389e20e2a44d47c4509e15b3a3443">obuf</a>;
  <a class="code" href="stream_8c.html#aee8fd31485ebc2f0a556a6a5d5c2d1e6">stream_reset</a> (s);
  
  <a class="code" href="zserv_8c.html#a14cda6a8900f2fad7eaa58d4da2c92dd">zserv_create_header</a> (s, cmd);
  <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>);

  <span class="comment">/* Interface address flag. */</span>
  <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, ifc-&gt;<a class="code" href="structconnected.html#a5928e0378e95d422553fdd37c3d66519">flags</a>);

  <span class="comment">/* Prefix information. */</span>
  p = ifc-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>;
  <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, p-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a>);
  blen = <a class="code" href="prefix_8c.html#ad076653f7c139acd0fdedb511542e915">prefix_blen</a> (p);
  <a class="code" href="stream_8c.html#a2f540a71efdf46e8c3a923f73e9f3b73">stream_put</a> (s, &amp;p-&gt;u.<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>, blen);

  <span class="comment">/* </span>
<span class="comment">   * XXX gnu version does not send prefixlen for ZEBRA_INTERFACE_ADDRESS_DELETE</span>
<span class="comment">   * but zebra_interface_address_delete_read() in the gnu version </span>
<span class="comment">   * expects to find it</span>
<span class="comment">   */</span>
  <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);

  <span class="comment">/* Destination. */</span>
  p = ifc-&gt;<a class="code" href="structconnected.html#ad13a382a19c45aaa4e5670e1422245ff">destination</a>;
  <span class="keywordflow">if</span> (p)
    <a class="code" href="stream_8c.html#a2f540a71efdf46e8c3a923f73e9f3b73">stream_put</a> (s, &amp;p-&gt;u.<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>, blen);
  <span class="keywordflow">else</span>
    <a class="code" href="stream_8c.html#a2f540a71efdf46e8c3a923f73e9f3b73">stream_put</a> (s, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, blen);

  <span class="comment">/* Write packet size. */</span>
  <a class="code" href="stream_8c.html#a41de70a7383bac6220b787d740c0b261">stream_putw_at</a> (s, 0, <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a> (s));

  <span class="keywordflow">return</span> <a class="code" href="zserv_8c.html#ab5199476fdd33bbcde9cda69fd532c57">zebra_server_send_message</a>(client);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab0f362995e2eaadec2d9b906921d6a12"></a><!-- doxytag: member="zserv.c::zsend_interface_delete" ref="ab0f362995e2eaadec2d9b906921d6a12" args="(struct zserv *client, struct interface *ifp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int zsend_interface_delete </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structzserv.html">zserv</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"><em>ifp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l00185">185</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>;

  <span class="comment">/* Check this client need interface information. */</span>
  <span class="keywordflow">if</span> (! client-&gt;<a class="code" href="structzserv.html#a62fedf94adfdbc6484bd15b3f418dd09">ifinfo</a>)
    <span class="keywordflow">return</span> 0;

  s = client-&gt;<a class="code" href="structzserv.html#a1d8389e20e2a44d47c4509e15b3a3443">obuf</a>;
  <a class="code" href="stream_8c.html#aee8fd31485ebc2f0a556a6a5d5c2d1e6">stream_reset</a> (s);
  
  <a class="code" href="zserv_8c.html#a14cda6a8900f2fad7eaa58d4da2c92dd">zserv_create_header</a> (s, <a class="code" href="zebra_8h.html#aa7ee6fa3df5b16d052e27ff18ae4ac39">ZEBRA_INTERFACE_DELETE</a>);
  
  <span class="comment">/* Interface information. */</span>
  <a class="code" href="stream_8c.html#a2f540a71efdf46e8c3a923f73e9f3b73">stream_put</a> (s, ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, <a class="code" href="if_8h.html#ab819b6f1f4d393be3e866af97297b9cb">INTERFACE_NAMSIZ</a>);
  <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>);
  <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, ifp-&gt;<a class="code" href="structinterface.html#ae145c01f63b3abaca8e3805f9e396c4a">status</a>);
  <a class="code" href="stream_8c.html#a966260eb2365bf57d649c4da5f12d5fe">stream_putq</a> (s, ifp-&gt;<a class="code" href="structinterface.html#a09ed96b900f31d769a76a32b67217c8f">flags</a>);
  <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, ifp-&gt;<a class="code" href="structinterface.html#adbb7ad89b817a388e9442e85f1e72cc8">metric</a>);
  <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, ifp-&gt;<a class="code" href="structinterface.html#aadd24df2d261a3bfcbdfe4797e639afb">mtu</a>);
  <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, ifp-&gt;<a class="code" href="structinterface.html#a75a892a4df0f60191a13ca07b6625cb1">mtu6</a>);
  <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, ifp-&gt;<a class="code" href="structinterface.html#a324b6a80459775b1e5e254369649e075">bandwidth</a>);

  <span class="comment">/* Write packet length. */</span>
  <a class="code" href="stream_8c.html#a41de70a7383bac6220b787d740c0b261">stream_putw_at</a> (s, 0, <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a> (s));

  <span class="keywordflow">return</span> <a class="code" href="zserv_8c.html#ab5199476fdd33bbcde9cda69fd532c57">zebra_server_send_message</a> (client);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab91c1877d49bab79bd33b7394303b5f6"></a><!-- doxytag: member="zserv.c::zsend_interface_update" ref="ab91c1877d49bab79bd33b7394303b5f6" args="(int cmd, struct zserv *client, struct interface *ifp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int zsend_interface_update </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structzserv.html">zserv</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"><em>ifp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l00310">310</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>;

  <span class="comment">/* Check this client need interface information. */</span>
  <span class="keywordflow">if</span> (! client-&gt;<a class="code" href="structzserv.html#a62fedf94adfdbc6484bd15b3f418dd09">ifinfo</a>)
    <span class="keywordflow">return</span> 0;

  s = client-&gt;<a class="code" href="structzserv.html#a1d8389e20e2a44d47c4509e15b3a3443">obuf</a>;
  <a class="code" href="stream_8c.html#aee8fd31485ebc2f0a556a6a5d5c2d1e6">stream_reset</a> (s);

  <a class="code" href="zserv_8c.html#a14cda6a8900f2fad7eaa58d4da2c92dd">zserv_create_header</a> (s, cmd);

  <span class="comment">/* Interface information. */</span>
  <a class="code" href="stream_8c.html#a2f540a71efdf46e8c3a923f73e9f3b73">stream_put</a> (s, ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, <a class="code" href="if_8h.html#ab819b6f1f4d393be3e866af97297b9cb">INTERFACE_NAMSIZ</a>);
  <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>);
  <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, ifp-&gt;<a class="code" href="structinterface.html#ae145c01f63b3abaca8e3805f9e396c4a">status</a>);
  <a class="code" href="stream_8c.html#a966260eb2365bf57d649c4da5f12d5fe">stream_putq</a> (s, ifp-&gt;<a class="code" href="structinterface.html#a09ed96b900f31d769a76a32b67217c8f">flags</a>);
  <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, ifp-&gt;<a class="code" href="structinterface.html#adbb7ad89b817a388e9442e85f1e72cc8">metric</a>);
  <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, ifp-&gt;<a class="code" href="structinterface.html#aadd24df2d261a3bfcbdfe4797e639afb">mtu</a>);
  <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, ifp-&gt;<a class="code" href="structinterface.html#a75a892a4df0f60191a13ca07b6625cb1">mtu6</a>);
  <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, ifp-&gt;<a class="code" href="structinterface.html#a324b6a80459775b1e5e254369649e075">bandwidth</a>);

  <span class="comment">/* Write packet size. */</span>
  <a class="code" href="stream_8c.html#a41de70a7383bac6220b787d740c0b261">stream_putw_at</a> (s, 0, <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a> (s));

  <span class="keywordflow">return</span> <a class="code" href="zserv_8c.html#ab5199476fdd33bbcde9cda69fd532c57">zebra_server_send_message</a>(client);
}
</pre></div>
</div>
</div>
<a class="anchor" id="aade0e4834f9b1d2cc41bd0b26b9343b9"></a><!-- doxytag: member="zserv.c::zsend_ipv4_import_lookup" ref="aade0e4834f9b1d2cc41bd0b26b9343b9" args="(struct zserv *client, struct prefix_ipv4 *p)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int zsend_ipv4_import_lookup </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structzserv.html">zserv</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structprefix__ipv4.html">prefix_ipv4</a> *&#160;</td>
          <td class="paramname"><em>p</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l00599">599</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>;
  <span class="keyword">struct </span><a class="code" href="structrib.html">rib</a> *<a class="code" href="structrib.html">rib</a>;
  <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> nump;
  u_char <a class="code" href="bgp__open_8h.html#ab4570498c4316aa5f7b4852c778b3320">num</a>;
  <span class="keyword">struct </span><a class="code" href="structnexthop.html">nexthop</a> *<a class="code" href="structnexthop.html">nexthop</a>;

  <span class="comment">/* Lookup nexthop. */</span>
  rib = <a class="code" href="rib_8h.html#a14646df48fa35374b0dfe2a303690626">rib_lookup_ipv4</a> (p);

  <span class="comment">/* Get output stream. */</span>
  s = client-&gt;<a class="code" href="structzserv.html#a1d8389e20e2a44d47c4509e15b3a3443">obuf</a>;
  <a class="code" href="stream_8c.html#aee8fd31485ebc2f0a556a6a5d5c2d1e6">stream_reset</a> (s);

  <span class="comment">/* Fill in result. */</span>
  <a class="code" href="zserv_8c.html#a14cda6a8900f2fad7eaa58d4da2c92dd">zserv_create_header</a> (s, <a class="code" href="zebra_8h.html#ae2f9ecf7e0fa5362e68e4853506695bf">ZEBRA_IPV4_IMPORT_LOOKUP</a>);
  <a class="code" href="stream_8c.html#a9019a5de70c1b6c2715cf24103109632">stream_put_in_addr</a> (s, &amp;p-&gt;prefix);

  <span class="keywordflow">if</span> (rib)
    {
      <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, rib-&gt;<a class="code" href="structrib.html#a76469a0c207c22af7e4e2b298cbb84cf">metric</a>);
      num = 0;
      nump = <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a>(s);
      <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, 0);
      <span class="keywordflow">for</span> (nexthop = rib-&gt;<a class="code" href="structrib.html#a333c2eb7d1db1667de78cd2593aec089">nexthop</a>; nexthop; nexthop = nexthop-&gt;<a class="code" href="structnexthop.html#a9c830710811182925d5222fee616bd83">next</a>)
    <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (nexthop-&gt;<a class="code" href="structnexthop.html#a9fe6fe2ff3e0fc1ddfabe888ee9d00ad">flags</a>, <a class="code" href="rib_8h.html#a7df095eb80d2cbf19093cbe09fcfcf77">NEXTHOP_FLAG_FIB</a>))
      {
        <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, nexthop-&gt;<a class="code" href="structnexthop.html#a2945ec57f56526f142592f4f578b4522">type</a>);
        <span class="keywordflow">switch</span> (nexthop-&gt;<a class="code" href="structnexthop.html#a2945ec57f56526f142592f4f578b4522">type</a>)
          {
          <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#ae603faed81a38b4507ffd9b6f9586b44">ZEBRA_NEXTHOP_IPV4</a>:
        <a class="code" href="stream_8c.html#a9019a5de70c1b6c2715cf24103109632">stream_put_in_addr</a> (s, &amp;nexthop-&gt;<a class="code" href="structnexthop.html#af19e05e5dd51b578246ff51322b6b6dd">gate</a>.<a class="code" href="uniong__addr.html#a3120e936e9b15510a8775865868a61d3">ipv4</a>);
        <span class="keywordflow">break</span>;
          <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#a8b5777b74f2584912603090de989e564">ZEBRA_NEXTHOP_IFINDEX</a>:
          <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#aa38b852f0e7c729f7db77cb0c99030a5">ZEBRA_NEXTHOP_IFNAME</a>:
        <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, nexthop-&gt;<a class="code" href="structnexthop.html#a4bc2f1e33f239d2d817c205460a24daa">ifindex</a>);
        <span class="keywordflow">break</span>;
          <span class="keywordflow">default</span>:
                <span class="comment">/* do nothing */</span>
        <span class="keywordflow">break</span>;
          }
        num++;
      }
      <a class="code" href="stream_8c.html#a69c37c3d7be1f834141625b2dc450891">stream_putc_at</a> (s, nump, num);
    }
  <span class="keywordflow">else</span>
    {
      <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, 0);
      <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, 0);
    }

  <a class="code" href="stream_8c.html#a41de70a7383bac6220b787d740c0b261">stream_putw_at</a> (s, 0, <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a> (s));
  
  <span class="keywordflow">return</span> <a class="code" href="zserv_8c.html#ab5199476fdd33bbcde9cda69fd532c57">zebra_server_send_message</a>(client);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a8b3aacdf2c0e6ccc76012b7f37d64544"></a><!-- doxytag: member="zserv.c::zsend_ipv4_nexthop_lookup" ref="a8b3aacdf2c0e6ccc76012b7f37d64544" args="(struct zserv *client, struct in_addr addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int zsend_ipv4_nexthop_lookup </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structzserv.html">zserv</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>addr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l00541">541</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>;
  <span class="keyword">struct </span><a class="code" href="structrib.html">rib</a> *<a class="code" href="structrib.html">rib</a>;
  <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> nump;
  u_char <a class="code" href="bgp__open_8h.html#ab4570498c4316aa5f7b4852c778b3320">num</a>;
  <span class="keyword">struct </span><a class="code" href="structnexthop.html">nexthop</a> *<a class="code" href="structnexthop.html">nexthop</a>;

  <span class="comment">/* Lookup nexthop. */</span>
  rib = <a class="code" href="rib_8h.html#ad56c7b150bda5ea14d6252e5de7a97d1">rib_match_ipv4</a> (addr);

  <span class="comment">/* Get output stream. */</span>
  s = client-&gt;<a class="code" href="structzserv.html#a1d8389e20e2a44d47c4509e15b3a3443">obuf</a>;
  <a class="code" href="stream_8c.html#aee8fd31485ebc2f0a556a6a5d5c2d1e6">stream_reset</a> (s);

  <span class="comment">/* Fill in result. */</span>
  <a class="code" href="zserv_8c.html#a14cda6a8900f2fad7eaa58d4da2c92dd">zserv_create_header</a> (s, <a class="code" href="zebra_8h.html#a7ed7741500eb4f178369418725aef502">ZEBRA_IPV4_NEXTHOP_LOOKUP</a>);
  <a class="code" href="stream_8c.html#a9019a5de70c1b6c2715cf24103109632">stream_put_in_addr</a> (s, &amp;addr);

  <span class="keywordflow">if</span> (rib)
    {
      <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, rib-&gt;<a class="code" href="structrib.html#a76469a0c207c22af7e4e2b298cbb84cf">metric</a>);
      num = 0;
      nump = <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a>(s);
      <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, 0);
      <span class="keywordflow">for</span> (nexthop = rib-&gt;<a class="code" href="structrib.html#a333c2eb7d1db1667de78cd2593aec089">nexthop</a>; nexthop; nexthop = nexthop-&gt;<a class="code" href="structnexthop.html#a9c830710811182925d5222fee616bd83">next</a>)
    <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (nexthop-&gt;<a class="code" href="structnexthop.html#a9fe6fe2ff3e0fc1ddfabe888ee9d00ad">flags</a>, <a class="code" href="rib_8h.html#a7df095eb80d2cbf19093cbe09fcfcf77">NEXTHOP_FLAG_FIB</a>))
      {
        <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, nexthop-&gt;<a class="code" href="structnexthop.html#a2945ec57f56526f142592f4f578b4522">type</a>);
        <span class="keywordflow">switch</span> (nexthop-&gt;<a class="code" href="structnexthop.html#a2945ec57f56526f142592f4f578b4522">type</a>)
          {
          <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#ae603faed81a38b4507ffd9b6f9586b44">ZEBRA_NEXTHOP_IPV4</a>:
        <a class="code" href="stream_8c.html#a9019a5de70c1b6c2715cf24103109632">stream_put_in_addr</a> (s, &amp;nexthop-&gt;<a class="code" href="structnexthop.html#af19e05e5dd51b578246ff51322b6b6dd">gate</a>.<a class="code" href="uniong__addr.html#a3120e936e9b15510a8775865868a61d3">ipv4</a>);
        <span class="keywordflow">break</span>;
          <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#a8b5777b74f2584912603090de989e564">ZEBRA_NEXTHOP_IFINDEX</a>:
          <span class="keywordflow">case</span> <a class="code" href="zebra_8h.html#aa38b852f0e7c729f7db77cb0c99030a5">ZEBRA_NEXTHOP_IFNAME</a>:
        <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, nexthop-&gt;<a class="code" href="structnexthop.html#a4bc2f1e33f239d2d817c205460a24daa">ifindex</a>);
        <span class="keywordflow">break</span>;
          <span class="keywordflow">default</span>:
                <span class="comment">/* do nothing */</span>
        <span class="keywordflow">break</span>;
          }
        num++;
      }
      <a class="code" href="stream_8c.html#a69c37c3d7be1f834141625b2dc450891">stream_putc_at</a> (s, nump, num);
    }
  <span class="keywordflow">else</span>
    {
      <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, 0);
      <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, 0);
    }

  <a class="code" href="stream_8c.html#a41de70a7383bac6220b787d740c0b261">stream_putw_at</a> (s, 0, <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a> (s));
  
  <span class="keywordflow">return</span> <a class="code" href="zserv_8c.html#ab5199476fdd33bbcde9cda69fd532c57">zebra_server_send_message</a>(client);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad9a861cad7e1d75c869519c6132548e9"></a><!-- doxytag: member="zserv.c::zsend_route_multipath" ref="ad9a861cad7e1d75c869519c6132548e9" args="(int cmd, struct zserv *client, struct prefix *p, struct rib *rib)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int zsend_route_multipath </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structzserv.html">zserv</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structprefix.html">prefix</a> *&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structrib.html">rib</a> *&#160;</td>
          <td class="paramname"><em>rib</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l00363">363</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> psize;
  <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>;
  <span class="keyword">struct </span><a class="code" href="structnexthop.html">nexthop</a> *<a class="code" href="structnexthop.html">nexthop</a>;
  <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> nhnummark = 0, messmark = 0;
  <span class="keywordtype">int</span> nhnum = 0;
  u_char zapi_flags = 0;
  
  s = client-&gt;<a class="code" href="structzserv.html#a1d8389e20e2a44d47c4509e15b3a3443">obuf</a>;
  <a class="code" href="stream_8c.html#aee8fd31485ebc2f0a556a6a5d5c2d1e6">stream_reset</a> (s);
  
  <a class="code" href="zserv_8c.html#a14cda6a8900f2fad7eaa58d4da2c92dd">zserv_create_header</a> (s, cmd);
  
  <span class="comment">/* Put type and nexthop. */</span>
  <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, rib-&gt;<a class="code" href="structrib.html#a851ad92c541e55a15bd833fa0f753ce6">type</a>);
  <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, rib-&gt;<a class="code" href="structrib.html#a2d6fadf111112f45163239c602f83034">flags</a>);
  
  <span class="comment">/* marker for message flags field */</span>
  messmark = <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a> (s);
  <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, 0);

  <span class="comment">/* Prefix. */</span>
  psize = <a class="code" href="bgpd_8h.html#a472145011d944606a257487e80cc3ace">PSIZE</a> (p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
  <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
  <a class="code" href="stream_8c.html#a39121b19ef0be09e9a5598a1ea1371c0">stream_write</a> (s, (u_char *) &amp; p-&gt;u.<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>, psize);

  <span class="comment">/* </span>
<span class="comment">   * XXX The message format sent by zebra below does not match the format</span>
<span class="comment">   * of the corresponding message expected by the zebra server</span>
<span class="comment">   * itself (e.g., see zread_ipv4_add). The nexthop_num is not set correctly,</span>
<span class="comment">   * (is there a bug on the client side if more than one segment is sent?)</span>
<span class="comment">   * nexthop ZEBRA_NEXTHOP_IPV4 is never set, ZEBRA_NEXTHOP_IFINDEX </span>
<span class="comment">   * is hard-coded.</span>
<span class="comment">   */</span>
  <span class="comment">/* Nexthop */</span>
  
  <span class="keywordflow">for</span> (nexthop = rib-&gt;<a class="code" href="structrib.html#a333c2eb7d1db1667de78cd2593aec089">nexthop</a>; nexthop; nexthop = nexthop-&gt;<a class="code" href="structnexthop.html#a9c830710811182925d5222fee616bd83">next</a>)
    {
      <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (nexthop-&gt;<a class="code" href="structnexthop.html#a9fe6fe2ff3e0fc1ddfabe888ee9d00ad">flags</a>, <a class="code" href="rib_8h.html#a7df095eb80d2cbf19093cbe09fcfcf77">NEXTHOP_FLAG_FIB</a>))
        {
          <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (zapi_flags, <a class="code" href="zclient_8h.html#a321bbeaddad8bc9bffaf57f7ac6cf8fd">ZAPI_MESSAGE_NEXTHOP</a>);
          <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (zapi_flags, <a class="code" href="zclient_8h.html#ae8d1e48f6c2858ecda1c3aee4219a0e6">ZAPI_MESSAGE_IFINDEX</a>);
          
          <span class="keywordflow">if</span> (nhnummark == 0)
            {
              nhnummark = <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a> (s);
              <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, 1); <span class="comment">/* placeholder */</span>
            }
          
          nhnum++;

          <span class="keywordflow">switch</span>(nexthop-&gt;<a class="code" href="structnexthop.html#a2945ec57f56526f142592f4f578b4522">type</a>) 
            {
              <span class="keywordflow">case</span> <a class="code" href="rib_8h.html#a0db77aa28c8e805e8621931fd0385158a9909d19d3bd1cf79727d0c809424d1e0">NEXTHOP_TYPE_IPV4</a>:
              <span class="keywordflow">case</span> <a class="code" href="rib_8h.html#a0db77aa28c8e805e8621931fd0385158a3147798b072558593867a8772925d9ba">NEXTHOP_TYPE_IPV4_IFINDEX</a>:
                <a class="code" href="stream_8c.html#a9019a5de70c1b6c2715cf24103109632">stream_put_in_addr</a> (s, &amp;nexthop-&gt;<a class="code" href="structnexthop.html#af19e05e5dd51b578246ff51322b6b6dd">gate</a>.<a class="code" href="uniong__addr.html#a3120e936e9b15510a8775865868a61d3">ipv4</a>);
                <span class="keywordflow">break</span>;
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>              <span class="keywordflow">case</span> <a class="code" href="rib_8h.html#a0db77aa28c8e805e8621931fd0385158ac5d9d9abcf5e9eb0342ca06bcfd3717e">NEXTHOP_TYPE_IPV6</a>:
              <span class="keywordflow">case</span> <a class="code" href="rib_8h.html#a0db77aa28c8e805e8621931fd0385158a9c94ccbc5fd921c831e5cb4758b225b1">NEXTHOP_TYPE_IPV6_IFINDEX</a>:
              <span class="keywordflow">case</span> <a class="code" href="rib_8h.html#a0db77aa28c8e805e8621931fd0385158a23e6cc72074db622f54c6756a87d3699">NEXTHOP_TYPE_IPV6_IFNAME</a>:
                <a class="code" href="stream_8c.html#a39121b19ef0be09e9a5598a1ea1371c0">stream_write</a> (s, (u_char *) &amp;nexthop-&gt;<a class="code" href="structnexthop.html#af19e05e5dd51b578246ff51322b6b6dd">gate</a>.ipv6, 16);
                <span class="keywordflow">break</span>;
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>              <span class="keywordflow">default</span>:
                <span class="keywordflow">if</span> (cmd == <a class="code" href="zebra_8h.html#aa2913a6b1e5fbc598479aa282343a5e1">ZEBRA_IPV4_ROUTE_ADD</a> 
                    || cmd == <a class="code" href="zebra_8h.html#a0c9efcc3f61219a6697f5da18d8de992">ZEBRA_IPV4_ROUTE_DELETE</a>)
                  {
                    <span class="keyword">struct </span>in_addr empty;
                    memset (&amp;empty, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> in_addr));
                    <a class="code" href="stream_8c.html#a39121b19ef0be09e9a5598a1ea1371c0">stream_write</a> (s, (u_char *) &amp;empty, <a class="code" href="prefix_8h.html#a013983d7a5267a63023c50ab32a85c24">IPV4_MAX_BYTELEN</a>);
                  }
                <span class="keywordflow">else</span>
                  {
                    <span class="keyword">struct </span>in6_addr empty;
                    memset (&amp;empty, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> in6_addr));
                    <a class="code" href="stream_8c.html#a39121b19ef0be09e9a5598a1ea1371c0">stream_write</a> (s, (u_char *) &amp;empty, <a class="code" href="prefix_8h.html#ac2642af4f4d7a4209ad6261e72c658f9">IPV6_MAX_BYTELEN</a>);
                  }
              }

          <span class="comment">/* Interface index. */</span>
          <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, 1);
          <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, nexthop-&gt;<a class="code" href="structnexthop.html#a4bc2f1e33f239d2d817c205460a24daa">ifindex</a>);

          <span class="keywordflow">break</span>;
        }
    }

  <span class="comment">/* Metric */</span>
  <span class="keywordflow">if</span> (cmd == <a class="code" href="zebra_8h.html#aa2913a6b1e5fbc598479aa282343a5e1">ZEBRA_IPV4_ROUTE_ADD</a> || <a class="code" href="zebra_8h.html#a2d0f19502bde040501c7ad64bc955739">ZEBRA_IPV6_ROUTE_ADD</a>)
    {
      <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (zapi_flags, <a class="code" href="zclient_8h.html#abe498bb81bfbda17757173ef23e25179">ZAPI_MESSAGE_DISTANCE</a>);
      <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, rib-&gt;<a class="code" href="structrib.html#a019148eb7d950ca4be25faec0041b6eb">distance</a>);
      <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (zapi_flags, <a class="code" href="zclient_8h.html#a4a5d60df1ef02f794476ea1daa6ba024">ZAPI_MESSAGE_METRIC</a>);
      <a class="code" href="stream_8c.html#af366d780a14cb8de53279378a8a4faeb">stream_putl</a> (s, rib-&gt;<a class="code" href="structrib.html#a76469a0c207c22af7e4e2b298cbb84cf">metric</a>);
    }
  
  <span class="comment">/* write real message flags value */</span>
  <a class="code" href="stream_8c.html#a69c37c3d7be1f834141625b2dc450891">stream_putc_at</a> (s, messmark, zapi_flags);
  
  <span class="comment">/* Write next-hop number */</span>
  <span class="keywordflow">if</span> (nhnummark)
    <a class="code" href="stream_8c.html#a69c37c3d7be1f834141625b2dc450891">stream_putc_at</a> (s, nhnummark, nhnum);
  
  <span class="comment">/* Write packet size. */</span>
  <a class="code" href="stream_8c.html#a41de70a7383bac6220b787d740c0b261">stream_putw_at</a> (s, 0, <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a> (s));

  <span class="keywordflow">return</span> <a class="code" href="zserv_8c.html#ab5199476fdd33bbcde9cda69fd532c57">zebra_server_send_message</a>(client);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac902d118eea994cdc524465a5d2db124"></a><!-- doxytag: member="zserv.c::zsend_router_id_update" ref="ac902d118eea994cdc524465a5d2db124" args="(struct zserv *client, struct prefix *p)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int zsend_router_id_update </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structzserv.html">zserv</a> *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structprefix.html">prefix</a> *&#160;</td>
          <td class="paramname"><em>p</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l00658">658</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>;
  <span class="keywordtype">int</span> blen;

  <span class="comment">/* Check this client need interface information. */</span>
  <span class="keywordflow">if</span> (!client-&gt;<a class="code" href="structzserv.html#af15950dfc79107ee3d978b86b7e0dad9">ridinfo</a>)
    <span class="keywordflow">return</span> 0;

  s = client-&gt;<a class="code" href="structzserv.html#a1d8389e20e2a44d47c4509e15b3a3443">obuf</a>;
  <a class="code" href="stream_8c.html#aee8fd31485ebc2f0a556a6a5d5c2d1e6">stream_reset</a> (s);

  <span class="comment">/* Message type. */</span>
  <a class="code" href="zserv_8c.html#a14cda6a8900f2fad7eaa58d4da2c92dd">zserv_create_header</a> (s, <a class="code" href="zebra_8h.html#ab336e7f6f414c6b3fa62531d2912af48">ZEBRA_ROUTER_ID_UPDATE</a>);

  <span class="comment">/* Prefix information. */</span>
  <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, p-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a>);
  blen = <a class="code" href="prefix_8c.html#ad076653f7c139acd0fdedb511542e915">prefix_blen</a> (p);
  <a class="code" href="stream_8c.html#a2f540a71efdf46e8c3a923f73e9f3b73">stream_put</a> (s, &amp;p-&gt;u.<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>, blen);
  <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);

  <span class="comment">/* Write packet size. */</span>
  <a class="code" href="stream_8c.html#a41de70a7383bac6220b787d740c0b261">stream_putw_at</a> (s, 0, <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a> (s));

  <span class="keywordflow">return</span> <a class="code" href="zserv_8c.html#ab5199476fdd33bbcde9cda69fd532c57">zebra_server_send_message</a>(client);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a14cda6a8900f2fad7eaa58d4da2c92dd"></a><!-- doxytag: member="zserv.c::zserv_create_header" ref="a14cda6a8900f2fad7eaa58d4da2c92dd" args="(struct stream *s, uint16_t cmd)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void zserv_create_header </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structstream.html">stream</a> *&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>cmd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l00125">125</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="comment">/* length placeholder, caller can update */</span>
  <a class="code" href="stream_8c.html#a03459a9331e0333d2b396636eca3c2e4">stream_putw</a> (s, <a class="code" href="zclient_8h.html#a31ddba642897aac3d80c91cdfdb5deb1">ZEBRA_HEADER_SIZE</a>);
  <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, <a class="code" href="zebra_8h.html#a95ca8e88db92c66ea0c8bbb62cea622d">ZEBRA_HEADER_MARKER</a>);
  <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, <a class="code" href="zclient_8h.html#a353879f7a2fe9365a57041c8870e8dec">ZSERV_VERSION</a>);
  <a class="code" href="stream_8c.html#a03459a9331e0333d2b396636eca3c2e4">stream_putw</a> (s, cmd);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4a58b9ca930855233c8c3ef9159bbebd"></a><!-- doxytag: member="zserv.c::zserv_delayed_close" ref="a4a58b9ca930855233c8c3ef9159bbebd" args="(struct thread *thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int zserv_delayed_close </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>thread</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l00058">58</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structzserv.html">zserv</a> *client = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a>(thread);

  client-&gt;<a class="code" href="structzserv.html#aa46e1eb6be1ea4780ccf5cba33dde1ec">t_suicide</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <a class="code" href="zserv_8c.html#aaf8e120786bf27794cb7c246cfd942b3">zebra_client_close</a>(client);
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3cce1412c0532c4cdf3e5a636e96c541"></a><!-- doxytag: member="zserv.c::zserv_flush_data" ref="a3cce1412c0532c4cdf3e5a636e96c541" args="(struct thread *thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int zserv_flush_data </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>thread</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zserv_8c_source.html#l00068">68</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structzserv.html">zserv</a> *client = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a>(thread);

  client-&gt;<a class="code" href="structzserv.html#a2e7851f7fc1d5074b44dba33cdcee627">t_write</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keywordflow">if</span> (client-&gt;<a class="code" href="structzserv.html#aa46e1eb6be1ea4780ccf5cba33dde1ec">t_suicide</a>)
    {
      <a class="code" href="zserv_8c.html#aaf8e120786bf27794cb7c246cfd942b3">zebra_client_close</a>(client);
      <span class="keywordflow">return</span> -1;
    }
  <span class="keywordflow">switch</span> (<a class="code" href="buffer_8c.html#a3df3e577fcbeec460e3ddab6bc6f59ec">buffer_flush_available</a>(client-&gt;<a class="code" href="structzserv.html#a2e2a56d18487266bbe740617b5d8c3b7">wb</a>, client-&gt;<a class="code" href="structzserv.html#ad6501dd8068fa000ba4e36ecd4b6b12c">sock</a>))
    {
    <span class="keywordflow">case</span> <a class="code" href="buffer_8h.html#a11b72623a9601834584c5ecf08dd6e27a6185688e62ce527910fd779f2093c6f1">BUFFER_ERROR</a>:
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;%s: buffer_flush_available failed on zserv client fd %d, &quot;</span>
            <span class="stringliteral">&quot;closing&quot;</span>, __func__, client-&gt;<a class="code" href="structzserv.html#ad6501dd8068fa000ba4e36ecd4b6b12c">sock</a>);
      <a class="code" href="zserv_8c.html#aaf8e120786bf27794cb7c246cfd942b3">zebra_client_close</a>(client);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="buffer_8h.html#a11b72623a9601834584c5ecf08dd6e27a6a5c775497aad93877d86b6a334de110">BUFFER_PENDING</a>:
      client-&gt;<a class="code" href="structzserv.html#a2e7851f7fc1d5074b44dba33cdcee627">t_write</a> = <a class="code" href="thread_8h.html#a8a2f048ba94722b1e88f08254fbd4444">thread_add_write</a>(<a class="code" href="connected_8c.html#a5a844f9c9c891ff5dfe28610da9b56ce">zebrad</a>.<a class="code" href="structzebra__t.html#a9755f929805f6555c6f86d085309f0e2">master</a>, <a class="code" href="zserv_8c.html#a3cce1412c0532c4cdf3e5a636e96c541">zserv_flush_data</a>,
                         client, client-&gt;<a class="code" href="structzserv.html#ad6501dd8068fa000ba4e36ecd4b6b12c">sock</a>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="buffer_8h.html#a11b72623a9601834584c5ecf08dd6e27a78d7168c875c46a0fbb5835cd160e2ba">BUFFER_EMPTY</a>:
      <span class="keywordflow">break</span>;
    }
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<hr/><h2>Variable Documentation</h2>
<a class="anchor" id="a872fd0beb57dc5fda2266ed71ae02ad8"></a><!-- doxytag: member="zserv.c::forwarding_node" ref="a872fd0beb57dc5fda2266ed71ae02ad8" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structcmd__node.html">cmd_node</a> <a class="el" href="zserv_8c.html#a872fd0beb57dc5fda2266ed71ae02ad8">forwarding_node</a><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment">
{
  <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a2e962d19f03c7e6249023fe5f1f311ce">FORWARDING_NODE</a>,
  <span class="stringliteral">&quot;&quot;</span>,               
  1
}
</pre></div>
<p>Definition at line <a class="el" href="zserv_8c_source.html#l01692">1692</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>

</div>
</div>
<a class="anchor" id="a52055db6b0231058bd3bc3ad3d385d53"></a><!-- doxytag: member="zserv.c::table_node" ref="a52055db6b0231058bd3bc3ad3d385d53" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structcmd__node.html">cmd_node</a> <a class="el" href="zserv_8c.html#a52055db6b0231058bd3bc3ad3d385d53">table_node</a><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment">
{
  <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ae075bb701f1ba47c1a401d3fa7d3eb73">TABLE_NODE</a>,
  <span class="stringliteral">&quot;&quot;</span>,               
  1
}
</pre></div>
<p>Definition at line <a class="el" href="zserv_8c_source.html#l01572">1572</a> of file <a class="el" href="zserv_8c_source.html">zserv.c</a>.</p>

</div>
</div>
<a class="anchor" id="a5a844f9c9c891ff5dfe28610da9b56ce"></a><!-- doxytag: member="zserv.c::zebrad" ref="a5a844f9c9c891ff5dfe28610da9b56ce" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structzebra__t.html">zebra_t</a> <a class="el" href="zserv_8c.html#a5a844f9c9c891ff5dfe28610da9b56ce">zebrad</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra_2main_8c_source.html#l00044">44</a> of file <a class="el" href="zebra_2main_8c_source.html">main.c</a>.</p>

</div>
</div>
<a class="anchor" id="a10659da9c59441877a609c3cd916f3cf"></a><!-- doxytag: member="zserv.c::zserv_privs" ref="a10659da9c59441877a609c3cd916f3cf" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structzebra__privs__t.html">zebra_privs_t</a> <a class="el" href="zserv_8c.html#a10659da9c59441877a609c3cd916f3cf">zserv_privs</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="zebra_2main_8c_source.html#l00096">96</a> of file <a class="el" href="zebra_2main_8c_source.html">main.c</a>.</p>

</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="zserv_8c.html">zserv.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:39 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
