<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: tests/main.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('tests_2main_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">tests/main.c</div>  </div>
</div>
<div class="contents">
<a href="tests_2main_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * $Id: main.c,v 1.1 2005/04/25 16:42:24 paul Exp $</span>
<a name="l00003"></a>00003 <span class="comment"> *</span>
<a name="l00004"></a>00004 <span class="comment"> * This file is part of Quagga.</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * Quagga is free software; you can redistribute it and/or modify it</span>
<a name="l00007"></a>00007 <span class="comment"> * under the terms of the GNU General Public License as published by the</span>
<a name="l00008"></a>00008 <span class="comment"> * Free Software Foundation; either version 2, or (at your option) any</span>
<a name="l00009"></a>00009 <span class="comment"> * later version.</span>
<a name="l00010"></a>00010 <span class="comment"> *</span>
<a name="l00011"></a>00011 <span class="comment"> * Quagga is distributed in the hope that it will be useful, but</span>
<a name="l00012"></a>00012 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00014"></a>00014 <span class="comment"> * General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment"> * along with Quagga; see the file COPYING.  If not, write to the Free</span>
<a name="l00018"></a>00018 <span class="comment"> * Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA</span>
<a name="l00019"></a>00019 <span class="comment"> * 02111-1307, USA.</span>
<a name="l00020"></a>00020 <span class="comment"> */</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="preprocessor">#include &lt;<a class="code" href="zebra_8h.html">zebra.h</a>&gt;</span>
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 <span class="preprocessor">#include &lt;<a class="code" href="version_8h.html">lib/version.h</a>&gt;</span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="getopt_8h.html">getopt.h</a>&quot;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="thread_8h.html">thread.h</a>&quot;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="vty_8h.html">vty.h</a>&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="command_8h.html">command.h</a>&quot;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="memory_8h.html">memory.h</a>&quot;</span>
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="heavy-thread_8c.html#a500f3e6675ddc2ae311f22f90e919653">test_init</a>();
<a name="l00032"></a>00032 
<a name="l00033"></a><a class="code" href="tests_2main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">00033</a> <span class="keyword">struct </span><a class="code" href="structthread__master.html">thread_master</a> *<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>;
<a name="l00034"></a>00034 
<a name="l00035"></a><a class="code" href="tests_2main_8c.html#a94965649155359a4c4eb047af782bf22">00035</a> <span class="keyword">struct </span><a class="code" href="structoption.html">option</a> <a class="code" href="bgp__main_8c.html#a94965649155359a4c4eb047af782bf22">longopts</a>[] = 
<a name="l00036"></a>00036 {
<a name="l00037"></a>00037   { <span class="stringliteral">&quot;daemon&quot;</span>,      <a class="code" href="getopt_8h.html#a3bc1d5f667b5b4ca4b4abb685dc874ce">no_argument</a>,       <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <span class="charliteral">&#39;d&#39;</span>},
<a name="l00038"></a>00038   { <span class="stringliteral">&quot;config_file&quot;</span>, <a class="code" href="getopt_8h.html#a6ece8d8dfa8378778f7290fdaba5b8bc">required_argument</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <span class="charliteral">&#39;f&#39;</span>},
<a name="l00039"></a>00039   { <span class="stringliteral">&quot;help&quot;</span>,        <a class="code" href="getopt_8h.html#a3bc1d5f667b5b4ca4b4abb685dc874ce">no_argument</a>,       <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <span class="charliteral">&#39;h&#39;</span>},
<a name="l00040"></a>00040   { <span class="stringliteral">&quot;vty_addr&quot;</span>,    <a class="code" href="getopt_8h.html#a6ece8d8dfa8378778f7290fdaba5b8bc">required_argument</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <span class="charliteral">&#39;A&#39;</span>},
<a name="l00041"></a>00041   { <span class="stringliteral">&quot;vty_port&quot;</span>,    <a class="code" href="getopt_8h.html#a6ece8d8dfa8378778f7290fdaba5b8bc">required_argument</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <span class="charliteral">&#39;P&#39;</span>},
<a name="l00042"></a>00042   { <span class="stringliteral">&quot;version&quot;</span>,     <a class="code" href="getopt_8h.html#a3bc1d5f667b5b4ca4b4abb685dc874ce">no_argument</a>,       <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <span class="charliteral">&#39;v&#39;</span>},
<a name="l00043"></a>00043   { 0 }
<a name="l00044"></a>00044 };
<a name="l00045"></a>00045 
<a name="l00046"></a><a class="code" href="tests_2main_8c.html#ad9bb64b690e761a950dcb5a0a994004a">00046</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (daemon_exit,
<a name="l00047"></a>00047        daemon_exit_cmd,
<a name="l00048"></a>00048        <span class="stringliteral">&quot;daemon-exit&quot;</span>,
<a name="l00049"></a>00049        <span class="stringliteral">&quot;Make the daemon exit\n&quot;</span>)
<a name="l00050"></a>00050 {
<a name="l00051"></a>00051   <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a>(0);
<a name="l00052"></a>00052 }
<a name="l00053"></a>00053 
<a name="l00054"></a><a class="code" href="tests_2main_8c.html#a6e85223fcd11d3cf3a1fff5b211332de">00054</a> <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="tests_2main_8c.html#a6e85223fcd11d3cf3a1fff5b211332de">timer_count</a>;
<a name="l00055"></a>00055 <span class="keywordtype">int</span>
<a name="l00056"></a><a class="code" href="tests_2main_8c.html#a879b4ccff7bd80be93d21eab7c824cbb">00056</a> <a class="code" href="tests_2main_8c.html#a879b4ccff7bd80be93d21eab7c824cbb">test_timer</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l00057"></a>00057 {
<a name="l00058"></a>00058   <span class="keywordtype">int</span> *<a class="code" href="spgrid_8c.html#a66e3fedede6aa372e5196e55e5e8d5c1">count</a> = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a>(thread);
<a name="l00059"></a>00059   
<a name="l00060"></a>00060   printf (<span class="stringliteral">&quot;run %d of timer\n&quot;</span>, (*count)++);
<a name="l00061"></a>00061   <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (master, <a class="code" href="tests_2main_8c.html#a879b4ccff7bd80be93d21eab7c824cbb">test_timer</a>, count, 5);
<a name="l00062"></a>00062   <span class="keywordflow">return</span> 0;
<a name="l00063"></a>00063 }
<a name="l00064"></a>00064 
<a name="l00065"></a>00065 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00066"></a><a class="code" href="tests_2main_8c.html#afb807e6d312d9222ce25695a448b6f49">00066</a> <a class="code" href="tests_2main_8c.html#afb807e6d312d9222ce25695a448b6f49">test_timer_init</a>()
<a name="l00067"></a>00067 {
<a name="l00068"></a>00068   <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (master, <a class="code" href="tests_2main_8c.html#a879b4ccff7bd80be93d21eab7c824cbb">test_timer</a>, &amp;<a class="code" href="tests_2main_8c.html#a6e85223fcd11d3cf3a1fff5b211332de">timer_count</a>, 10);
<a name="l00069"></a>00069 }
<a name="l00070"></a>00070 
<a name="l00071"></a>00071 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00072"></a><a class="code" href="tests_2main_8c.html#a2465787d275bfa47d6044419673c64f8">00072</a> <a class="code" href="tests_2main_8c.html#a2465787d275bfa47d6044419673c64f8">test_vty_init</a>()
<a name="l00073"></a>00073 {
<a name="l00074"></a>00074   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;daemon_exit_cmd);
<a name="l00075"></a>00075 }
<a name="l00076"></a>00076 
<a name="l00077"></a>00077 <span class="comment">/* Help information display. */</span>
<a name="l00078"></a>00078 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00079"></a><a class="code" href="tests_2main_8c.html#ab24f62159230cf265fc4d7ddc4c91872">00079</a> <a class="code" href="bgp__main_8c.html#ab24f62159230cf265fc4d7ddc4c91872">usage</a> (<span class="keywordtype">char</span> *<a class="code" href="isis__main_8c.html#ab9e1449fd00c98428516f0b41eddcb10">progname</a>, <span class="keywordtype">int</span> status)
<a name="l00080"></a>00080 {
<a name="l00081"></a>00081   <span class="keywordflow">if</span> (status != 0)
<a name="l00082"></a>00082     fprintf (stderr, <span class="stringliteral">&quot;Try `%s --help&#39; for more information.\n&quot;</span>, progname);
<a name="l00083"></a>00083   <span class="keywordflow">else</span>
<a name="l00084"></a>00084     {    
<a name="l00085"></a>00085       printf (<span class="stringliteral">&quot;Usage : %s [OPTION...]\n\</span>
<a name="l00086"></a>00086 <span class="stringliteral">Daemon which does &#39;slow&#39; things.\n\n\</span>
<a name="l00087"></a>00087 <span class="stringliteral">-d, --daemon       Runs in daemon mode\n\</span>
<a name="l00088"></a>00088 <span class="stringliteral">-f, --config_file  Set configuration file name\n\</span>
<a name="l00089"></a>00089 <span class="stringliteral">-A, --vty_addr     Set vty&#39;s bind address\n\</span>
<a name="l00090"></a>00090 <span class="stringliteral">-P, --vty_port     Set vty&#39;s port number\n\</span>
<a name="l00091"></a>00091 <span class="stringliteral">-v, --version      Print program version\n\</span>
<a name="l00092"></a>00092 <span class="stringliteral">-h, --help         Display this help and exit\n\</span>
<a name="l00093"></a>00093 <span class="stringliteral">\n\</span>
<a name="l00094"></a>00094 <span class="stringliteral">Report bugs to %s\n&quot;</span>, progname, <a class="code" href="version_8h.html#a568a90422884d007e54c4f2e653ddc29">ZEBRA_BUG_ADDRESS</a>);
<a name="l00095"></a>00095     }
<a name="l00096"></a>00096   <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a> (status);
<a name="l00097"></a>00097 }
<a name="l00098"></a>00098 
<a name="l00099"></a>00099 
<a name="l00100"></a>00100 <span class="comment">/* main routine. */</span>
<a name="l00101"></a>00101 <span class="keywordtype">int</span>
<a name="l00102"></a><a class="code" href="tests_2main_8c.html#a3c04138a5bfe5d72780bb7e82a18e627">00102</a> <a class="code" href="bgp__main_8c.html#a3c04138a5bfe5d72780bb7e82a18e627">main</a> (<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> **argv)
<a name="l00103"></a>00103 {
<a name="l00104"></a>00104   <span class="keywordtype">char</span> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
<a name="l00105"></a>00105   <span class="keywordtype">char</span> *<a class="code" href="bgp__main_8c.html#a06052ca37fdcbab4efc7c0ce0be0a7fb">vty_addr</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00106"></a>00106   <span class="keywordtype">int</span> <a class="code" href="bgp__main_8c.html#a29806e6619da60097189752e72067df7">vty_port</a> = 4000;
<a name="l00107"></a>00107   <span class="keywordtype">int</span> <a class="code" href="isis__main_8c.html#a4255d3efd1474d8e9d267e4b1559c1f9">daemon_mode</a> = 0;
<a name="l00108"></a>00108   <span class="keywordtype">char</span> *<a class="code" href="isis__main_8c.html#ab9e1449fd00c98428516f0b41eddcb10">progname</a>;
<a name="l00109"></a>00109   <span class="keyword">struct </span><a class="code" href="structthread.html">thread</a> thread;
<a name="l00110"></a>00110   <span class="keywordtype">char</span> *<a class="code" href="bgp__main_8c.html#ac269be8b91ae4b24df48de5d8ad7e7a7">config_file</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00111"></a>00111   
<a name="l00112"></a>00112   <span class="comment">/* Set umask before anything for security */</span>
<a name="l00113"></a>00113   umask (0027);
<a name="l00114"></a>00114 
<a name="l00115"></a>00115   <span class="comment">/* get program name */</span>
<a name="l00116"></a>00116   progname = ((p = strrchr (argv[0], <span class="charliteral">&#39;/&#39;</span>)) ? ++p : argv[0]);
<a name="l00117"></a>00117 
<a name="l00118"></a>00118   <span class="comment">/* master init. */</span>
<a name="l00119"></a>00119   master = <a class="code" href="thread_8c.html#a6d9de673f4874d0c6b7f6a84b2e0e9cf">thread_master_create</a> ();
<a name="l00120"></a>00120 
<a name="l00121"></a>00121   <span class="keywordflow">while</span> (1) 
<a name="l00122"></a>00122     {
<a name="l00123"></a>00123       <span class="keywordtype">int</span> opt;
<a name="l00124"></a>00124 
<a name="l00125"></a>00125       opt = <a class="code" href="getopt_8h.html#a8616b8a74ae6c01a7ad95ad2876226ec">getopt_long</a> (argc, argv, <span class="stringliteral">&quot;dhf:A:P:v&quot;</span>, longopts, 0);
<a name="l00126"></a>00126     
<a name="l00127"></a>00127       <span class="keywordflow">if</span> (opt == EOF)
<a name="l00128"></a>00128     <span class="keywordflow">break</span>;
<a name="l00129"></a>00129 
<a name="l00130"></a>00130       <span class="keywordflow">switch</span> (opt) 
<a name="l00131"></a>00131     {
<a name="l00132"></a>00132     <span class="keywordflow">case</span> 0:
<a name="l00133"></a>00133       <span class="keywordflow">break</span>;
<a name="l00134"></a>00134         <span class="keywordflow">case</span> <span class="charliteral">&#39;f&#39;</span>:
<a name="l00135"></a>00135           config_file = <a class="code" href="getopt_8c.html#adb50a0eab9fed92fc3bfc7dfa4f2c410">optarg</a>;
<a name="l00136"></a>00136           <span class="keywordflow">break</span>;
<a name="l00137"></a>00137     <span class="keywordflow">case</span> <span class="charliteral">&#39;d&#39;</span>:
<a name="l00138"></a>00138       daemon_mode = 1;
<a name="l00139"></a>00139       <span class="keywordflow">break</span>;
<a name="l00140"></a>00140     <span class="keywordflow">case</span> <span class="charliteral">&#39;A&#39;</span>:
<a name="l00141"></a>00141       vty_addr = <a class="code" href="getopt_8c.html#adb50a0eab9fed92fc3bfc7dfa4f2c410">optarg</a>;
<a name="l00142"></a>00142       <span class="keywordflow">break</span>;
<a name="l00143"></a>00143     <span class="keywordflow">case</span> <span class="charliteral">&#39;P&#39;</span>:
<a name="l00144"></a>00144           <span class="comment">/* Deal with atoi() returning 0 on failure */</span>
<a name="l00145"></a>00145           <span class="keywordflow">if</span> (strcmp(<a class="code" href="getopt_8c.html#adb50a0eab9fed92fc3bfc7dfa4f2c410">optarg</a>, <span class="stringliteral">&quot;0&quot;</span>) == 0)
<a name="l00146"></a>00146             {
<a name="l00147"></a>00147               vty_port = 0;
<a name="l00148"></a>00148               <span class="keywordflow">break</span>;
<a name="l00149"></a>00149             } 
<a name="l00150"></a>00150           vty_port = atoi (<a class="code" href="getopt_8c.html#adb50a0eab9fed92fc3bfc7dfa4f2c410">optarg</a>);
<a name="l00151"></a>00151           vty_port = (vty_port ? vty_port : 4000);
<a name="l00152"></a>00152       <span class="keywordflow">break</span>;
<a name="l00153"></a>00153     <span class="keywordflow">case</span> <span class="charliteral">&#39;v&#39;</span>:
<a name="l00154"></a>00154       <a class="code" href="command_8c.html#ac97b1789d0f9ace8698a54a548e344e2">print_version</a> (progname);
<a name="l00155"></a>00155       <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a> (0);
<a name="l00156"></a>00156       <span class="keywordflow">break</span>;
<a name="l00157"></a>00157     <span class="keywordflow">case</span> <span class="charliteral">&#39;h&#39;</span>:
<a name="l00158"></a>00158       <a class="code" href="bgp__main_8c.html#ab24f62159230cf265fc4d7ddc4c91872">usage</a> (progname, 0);
<a name="l00159"></a>00159       <span class="keywordflow">break</span>;
<a name="l00160"></a>00160     <span class="keywordflow">default</span>:
<a name="l00161"></a>00161       <a class="code" href="bgp__main_8c.html#ab24f62159230cf265fc4d7ddc4c91872">usage</a> (progname, 1);
<a name="l00162"></a>00162       <span class="keywordflow">break</span>;
<a name="l00163"></a>00163     }
<a name="l00164"></a>00164     }
<a name="l00165"></a>00165 
<a name="l00166"></a>00166   <span class="comment">/* Library inits. */</span>
<a name="l00167"></a>00167   <a class="code" href="command_8h.html#ac8aa19764b709737963069a30334afb5">cmd_init</a> (1);
<a name="l00168"></a>00168   <a class="code" href="vty_8c.html#a4e3540690dccdae165218c9597b311eb">vty_init</a> (master);
<a name="l00169"></a>00169   <a class="code" href="memory_8c.html#a34f25b1ca1556d0890274a971d46af10">memory_init</a> ();
<a name="l00170"></a>00170 
<a name="l00171"></a>00171   <span class="comment">/* OSPF vty inits. */</span>
<a name="l00172"></a>00172   <a class="code" href="tests_2main_8c.html#a2465787d275bfa47d6044419673c64f8">test_vty_init</a> ();
<a name="l00173"></a>00173 
<a name="l00174"></a>00174   <a class="code" href="command_8c.html#a1096cf2835e7d5fa8407898fd3bd317d">sort_node</a> ();
<a name="l00175"></a>00175 
<a name="l00176"></a>00176   <span class="comment">/* Change to the daemon program. */</span>
<a name="l00177"></a>00177   <span class="keywordflow">if</span> (daemon_mode &amp;&amp; <a class="code" href="structdaemon.html">daemon</a> (0, 0) &lt; 0)
<a name="l00178"></a>00178     {
<a name="l00179"></a>00179       fprintf(stderr, <span class="stringliteral">&quot;daemon failed: %s&quot;</span>, strerror(errno));
<a name="l00180"></a>00180       <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a> (1);
<a name="l00181"></a>00181     }
<a name="l00182"></a>00182 
<a name="l00183"></a>00183   <span class="comment">/* Create VTY socket */</span>
<a name="l00184"></a>00184   <a class="code" href="vty_8c.html#a1247b9d1681382580789652f8dad12a6">vty_serv_sock</a> (vty_addr, vty_port, <span class="stringliteral">&quot;/tmp/.heavy.sock&quot;</span>);
<a name="l00185"></a>00185   
<a name="l00186"></a>00186   <span class="comment">/* Configuration file read*/</span>
<a name="l00187"></a>00187   <span class="keywordflow">if</span> (!config_file)
<a name="l00188"></a>00188     <a class="code" href="bgp__main_8c.html#ab24f62159230cf265fc4d7ddc4c91872">usage</a> (progname, 1);
<a name="l00189"></a>00189   <a class="code" href="vty_8c.html#a414904627a8d3bbba1b20d769f836a70">vty_read_config</a> (config_file, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l00190"></a>00190   
<a name="l00191"></a>00191   <a class="code" href="tests_2main_8c.html#afb807e6d312d9222ce25695a448b6f49">test_timer_init</a>();
<a name="l00192"></a>00192   
<a name="l00193"></a>00193   <a class="code" href="heavy-thread_8c.html#a500f3e6675ddc2ae311f22f90e919653">test_init</a>();  
<a name="l00194"></a>00194   
<a name="l00195"></a>00195   <span class="comment">/* Fetch next active thread. */</span>
<a name="l00196"></a>00196   <span class="keywordflow">while</span> (<a class="code" href="thread_8c.html#a1674b380ab1baf464b4f541c0a938656">thread_fetch</a> (master, &amp;thread))
<a name="l00197"></a>00197     <a class="code" href="thread_8c.html#aebb1b7a2cf2a872d69ab8c1e6f788744">thread_call</a> (&amp;thread);
<a name="l00198"></a>00198 
<a name="l00199"></a>00199   <span class="comment">/* Not reached. */</span>
<a name="l00200"></a>00200   <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a> (0);
<a name="l00201"></a>00201 }
<a name="l00202"></a>00202 
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="tests_2main_8c.html">main.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:08 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
