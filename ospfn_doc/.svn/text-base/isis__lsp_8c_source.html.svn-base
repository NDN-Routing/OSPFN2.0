<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: isisd/isis_lsp.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('isis__lsp_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">isisd/isis_lsp.c</div>  </div>
</div>
<div class="contents">
<a href="isis__lsp_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * IS-IS Rout(e)ing protocol - isis_lsp.c</span>
<a name="l00003"></a>00003 <span class="comment"> *                             LSP processing</span>
<a name="l00004"></a>00004 <span class="comment"> *</span>
<a name="l00005"></a>00005 <span class="comment"> * Copyright (C) 2001,2002   Sampo Saaristo</span>
<a name="l00006"></a>00006 <span class="comment"> *                           Tampere University of Technology      </span>
<a name="l00007"></a>00007 <span class="comment"> *                           Institute of Communications Engineering</span>
<a name="l00008"></a>00008 <span class="comment"> *</span>
<a name="l00009"></a>00009 <span class="comment"> * This program is free software; you can redistribute it and/or modify it </span>
<a name="l00010"></a>00010 <span class="comment"> * under the terms of the GNU General Public Licenseas published by the Free </span>
<a name="l00011"></a>00011 <span class="comment"> * Software Foundation; either version 2 of the License, or (at your option) </span>
<a name="l00012"></a>00012 <span class="comment"> * any later version.</span>
<a name="l00013"></a>00013 <span class="comment"> *</span>
<a name="l00014"></a>00014 <span class="comment"> * This program is distributed in the hope that it will be useful,but WITHOUT </span>
<a name="l00015"></a>00015 <span class="comment"> * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or </span>
<a name="l00016"></a>00016 <span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for </span>
<a name="l00017"></a>00017 <span class="comment"> * more details.</span>
<a name="l00018"></a>00018 <span class="comment"></span>
<a name="l00019"></a>00019 <span class="comment"> * You should have received a copy of the GNU General Public License along </span>
<a name="l00020"></a>00020 <span class="comment"> * with this program; if not, write to the Free Software Foundation, Inc., </span>
<a name="l00021"></a>00021 <span class="comment"> * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.</span>
<a name="l00022"></a>00022 <span class="comment"> */</span>
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 <span class="preprocessor">#include &lt;<a class="code" href="zebra_8h.html">zebra.h</a>&gt;</span>
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="linklist_8h.html">linklist.h</a>&quot;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="thread_8h.html">thread.h</a>&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="vty_8h.html">vty.h</a>&quot;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="stream_8h.html">stream.h</a>&quot;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="memory_8h.html">memory.h</a>&quot;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &quot;<a class="code" href="log_8h.html">log.h</a>&quot;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="prefix_8h.html">prefix.h</a>&quot;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &quot;<a class="code" href="command_8h.html">command.h</a>&quot;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &quot;<a class="code" href="hash_8h.html">hash.h</a>&quot;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &quot;<a class="code" href="if_8h.html">if.h</a>&quot;</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include &quot;<a class="code" href="checksum_8h.html">checksum.h</a>&quot;</span>
<a name="l00037"></a>00037 
<a name="l00038"></a>00038 <span class="preprocessor">#include &quot;<a class="code" href="dict_8h.html">isisd/dict.h</a>&quot;</span>
<a name="l00039"></a>00039 <span class="preprocessor">#include &quot;<a class="code" href="isis__constants_8h.html">isisd/isis_constants.h</a>&quot;</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include &quot;<a class="code" href="isis__common_8h.html">isisd/isis_common.h</a>&quot;</span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &quot;<a class="code" href="isis__circuit_8h.html">isisd/isis_circuit.h</a>&quot;</span>
<a name="l00042"></a>00042 <span class="preprocessor">#include &quot;<a class="code" href="isisd_8h.html">isisd/isisd.h</a>&quot;</span>
<a name="l00043"></a>00043 <span class="preprocessor">#include &quot;<a class="code" href="isis__tlv_8h.html">isisd/isis_tlv.h</a>&quot;</span>
<a name="l00044"></a>00044 <span class="preprocessor">#include &quot;<a class="code" href="isis__lsp_8h.html">isisd/isis_lsp.h</a>&quot;</span>
<a name="l00045"></a>00045 <span class="preprocessor">#include &quot;<a class="code" href="isis__pdu_8h.html">isisd/isis_pdu.h</a>&quot;</span>
<a name="l00046"></a>00046 <span class="preprocessor">#include &quot;<a class="code" href="isis__dynhn_8h.html">isisd/isis_dynhn.h</a>&quot;</span>
<a name="l00047"></a>00047 <span class="preprocessor">#include &quot;<a class="code" href="isis__misc_8h.html">isisd/isis_misc.h</a>&quot;</span>
<a name="l00048"></a>00048 <span class="preprocessor">#include &quot;<a class="code" href="isis__flags_8h.html">isisd/isis_flags.h</a>&quot;</span>
<a name="l00049"></a>00049 <span class="preprocessor">#include &quot;<a class="code" href="isis__csm_8h.html">isisd/isis_csm.h</a>&quot;</span>
<a name="l00050"></a>00050 <span class="preprocessor">#include &quot;<a class="code" href="isis__adjacency_8h.html">isisd/isis_adjacency.h</a>&quot;</span>
<a name="l00051"></a>00051 <span class="preprocessor">#include &quot;<a class="code" href="isis__spf_8h.html">isisd/isis_spf.h</a>&quot;</span>
<a name="l00052"></a>00052 
<a name="l00053"></a>00053 <span class="preprocessor">#ifdef TOPOLOGY_GENERATE</span>
<a name="l00054"></a>00054 <span class="preprocessor"></span><span class="preprocessor">#include &quot;<a class="code" href="spgrid_8h.html">spgrid.h</a>&quot;</span>
<a name="l00055"></a>00055 <span class="preprocessor">#endif</span>
<a name="l00056"></a>00056 <span class="preprocessor"></span>
<a name="l00057"></a><a class="code" href="isis__lsp_8c.html#a07b3bf435d48e2570bec69501de3148f">00057</a> <span class="preprocessor">#define LSP_MEMORY_PREASSIGN</span>
<a name="l00058"></a>00058 <span class="preprocessor"></span>
<a name="l00059"></a>00059 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structisis.html">isis</a> *<a class="code" href="isis__adjacency_8c.html#aa8cfdc8f7777fd242bd2c45f3a48b950">isis</a>;
<a name="l00060"></a>00060 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structthread__master.html">thread_master</a> *<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>;
<a name="l00061"></a>00061 <span class="keyword">extern</span> <span class="keyword">struct </span>in_addr <a class="code" href="bgp__vty_8c.html#a5ff73fe88ce576fe7fc3877984367add">router_id_zebra</a>;
<a name="l00062"></a>00062 
<a name="l00063"></a>00063 <span class="comment">/* staticly assigned vars for printing purposes */</span>
<a name="l00064"></a><a class="code" href="isis__lsp_8c.html#ad3fb467068fe650f05f2e15b29a6cdf3">00064</a> <span class="keywordtype">char</span> <a class="code" href="isis__lsp_8c.html#ad3fb467068fe650f05f2e15b29a6cdf3">lsp_bits_string</a>[200];     <span class="comment">/* FIXME: enough ? */</span>
<a name="l00065"></a>00065 
<a name="l00066"></a>00066 <span class="keywordtype">int</span>
<a name="l00067"></a><a class="code" href="isis__lsp_8h.html#a04ba9b8f0efece8345a3f6e90be19da1">00067</a> <a class="code" href="isis__lsp_8c.html#a04ba9b8f0efece8345a3f6e90be19da1">lsp_id_cmp</a> (u_char * id1, u_char * id2)
<a name="l00068"></a>00068 {
<a name="l00069"></a>00069   <span class="keywordflow">return</span> <a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (id1, id2, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 2);
<a name="l00070"></a>00070 }
<a name="l00071"></a>00071 
<a name="l00072"></a>00072 <a class="code" href="structdict__t.html">dict_t</a> *
<a name="l00073"></a><a class="code" href="isis__lsp_8h.html#af93f1d3b7e8764bd70960ee03596374b">00073</a> <a class="code" href="isis__lsp_8c.html#af93f1d3b7e8764bd70960ee03596374b">lsp_db_init</a> (<span class="keywordtype">void</span>)
<a name="l00074"></a>00074 {
<a name="l00075"></a>00075   <a class="code" href="structdict__t.html">dict_t</a> *dict;
<a name="l00076"></a>00076 
<a name="l00077"></a>00077   dict = <a class="code" href="dict_8c.html#a1a1783c8987d21d1d1078f80cb614679">dict_create</a> (<a class="code" href="dict_8h.html#a7cc0c7f4164b72cfc0c8e543d6fd3951">DICTCOUNT_T_MAX</a>, (<a class="code" href="dict_8h.html#a92a0ce54764499eee8e3584a7b8795d9">dict_comp_t</a>) <a class="code" href="isis__lsp_8c.html#a04ba9b8f0efece8345a3f6e90be19da1">lsp_id_cmp</a>);
<a name="l00078"></a>00078 
<a name="l00079"></a>00079   <span class="keywordflow">return</span> dict;
<a name="l00080"></a>00080 }
<a name="l00081"></a>00081 
<a name="l00082"></a>00082 <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *
<a name="l00083"></a><a class="code" href="isis__lsp_8h.html#a3859237ab43b147f4520d060439ca002">00083</a> <a class="code" href="isis__lsp_8c.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (u_char * <span class="keywordtype">id</span>, <a class="code" href="structdict__t.html">dict_t</a> * lspdb)
<a name="l00084"></a>00084 {
<a name="l00085"></a>00085   <a class="code" href="structdnode__t.html">dnode_t</a> *node;
<a name="l00086"></a>00086 
<a name="l00087"></a>00087 <span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<a name="l00088"></a>00088 <span class="preprocessor"></span>  <a class="code" href="structdnode__t.html">dnode_t</a> *dn;
<a name="l00089"></a>00089 
<a name="l00090"></a>00090   <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;searching db&quot;</span>);
<a name="l00091"></a>00091   <span class="keywordflow">for</span> (dn = <a class="code" href="dict_8c.html#a2b439ffb63f9b3089d0306ec3b26672f">dict_first</a> (lspdb); dn; dn = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a> (lspdb, dn))
<a name="l00092"></a>00092     {
<a name="l00093"></a>00093       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s\t%pX&quot;</span>, <a class="code" href="isis__misc_8c.html#a3a0e7f92008e3167e2c09b8761d06766">rawlspid_print</a> ((<span class="keywordtype">char</span> *) <a class="code" href="dict_8h.html#a6f2633dde474b0288d6a737651f69a51">dnode_getkey</a> (dn)),
<a name="l00094"></a>00094           <a class="code" href="dict_8h.html#a17fccc85aae3874de7152f103d5945bc">dnode_get</a> (dn));
<a name="l00095"></a>00095     }
<a name="l00096"></a>00096 <span class="preprocessor">#endif </span><span class="comment">/* EXTREME DEBUG */</span>
<a name="l00097"></a>00097 
<a name="l00098"></a>00098   node = <a class="code" href="dict_8c.html#a9b4c0968674a4ff436bb8180aa56e522">dict_lookup</a> (lspdb, <span class="keywordtype">id</span>);
<a name="l00099"></a>00099 
<a name="l00100"></a>00100   <span class="keywordflow">if</span> (node)
<a name="l00101"></a>00101     <span class="keywordflow">return</span> (<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a> *) <a class="code" href="dict_8h.html#a17fccc85aae3874de7152f103d5945bc">dnode_get</a> (node);
<a name="l00102"></a>00102 
<a name="l00103"></a>00103   <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00104"></a>00104 }
<a name="l00105"></a>00105 
<a name="l00106"></a>00106 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00107"></a><a class="code" href="isis__lsp_8c.html#aa0d51cf5f190804be9b73b52db69ccd6">00107</a> <a class="code" href="isis__lsp_8c.html#aa0d51cf5f190804be9b73b52db69ccd6">lsp_clear_data</a> (<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp)
<a name="l00108"></a>00108 {
<a name="l00109"></a>00109   <span class="keywordflow">if</span> (!lsp)
<a name="l00110"></a>00110     <span class="keywordflow">return</span>;
<a name="l00111"></a>00111 
<a name="l00112"></a>00112   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a92fb19d67740e3bfde012e19af97b7d3">own_lsp</a>)
<a name="l00113"></a>00113     {
<a name="l00114"></a>00114       <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a>)
<a name="l00115"></a>00115     <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a>);
<a name="l00116"></a>00116       <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac2b8abaebfab8d2a55242d83a87a3e70">hostname</a>)
<a name="l00117"></a>00117     <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac2b8abaebfab8d2a55242d83a87a3e70">hostname</a>);
<a name="l00118"></a>00118     }
<a name="l00119"></a>00119   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>)
<a name="l00120"></a>00120     <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>);
<a name="l00121"></a>00121   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>)
<a name="l00122"></a>00122     <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>);
<a name="l00123"></a>00123   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a11d8deaa75c26e958cff5f74fee3ef10">area_addrs</a>)
<a name="l00124"></a>00124     <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a11d8deaa75c26e958cff5f74fee3ef10">area_addrs</a>);
<a name="l00125"></a>00125   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#acda3e4d69df4661e1d81a1df2d03a7dd">es_neighs</a>)
<a name="l00126"></a>00126     <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#acda3e4d69df4661e1d81a1df2d03a7dd">es_neighs</a>);
<a name="l00127"></a>00127   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae9ef317829a76d7a79d2789786a2ac1f">ipv4_addrs</a>)
<a name="l00128"></a>00128     <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae9ef317829a76d7a79d2789786a2ac1f">ipv4_addrs</a>);
<a name="l00129"></a>00129   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a202838cf00b9aeb6f746c11c8a421642">ipv4_int_reachs</a>)
<a name="l00130"></a>00130     <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a202838cf00b9aeb6f746c11c8a421642">ipv4_int_reachs</a>);
<a name="l00131"></a>00131   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a24de94a53f11ec8f24e9f133ba2f63c3">ipv4_ext_reachs</a>)
<a name="l00132"></a>00132     <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a24de94a53f11ec8f24e9f133ba2f63c3">ipv4_ext_reachs</a>);
<a name="l00133"></a>00133   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac827f5db217d1de5cc2a58c9b5a9cf81">te_ipv4_reachs</a>)
<a name="l00134"></a>00134     <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac827f5db217d1de5cc2a58c9b5a9cf81">te_ipv4_reachs</a>);
<a name="l00135"></a>00135 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00136"></a>00136 <span class="preprocessor"></span>  <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.ipv6_addrs)
<a name="l00137"></a>00137     <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.ipv6_addrs);
<a name="l00138"></a>00138   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.ipv6_reachs)
<a name="l00139"></a>00139     <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.ipv6_reachs);
<a name="l00140"></a>00140 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l00141"></a>00141 
<a name="l00142"></a>00142   memset (&amp;lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>, 0, sizeof (<span class="keyword">struct</span> <a class="code" href="structtlvs.html">tlvs</a>));
<a name="l00143"></a>00143 
<a name="l00144"></a>00144   <span class="keywordflow">return</span>;
<a name="l00145"></a>00145 }
<a name="l00146"></a>00146 
<a name="l00147"></a>00147 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00148"></a><a class="code" href="isis__lsp_8c.html#a8910aea25a4f0680a4b4945609aaf97b">00148</a> <a class="code" href="isis__lsp_8c.html#a8910aea25a4f0680a4b4945609aaf97b">lsp_destroy</a> (<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp)
<a name="l00149"></a>00149 {
<a name="l00150"></a>00150   <span class="keywordflow">if</span> (!lsp)
<a name="l00151"></a>00151     <span class="keywordflow">return</span>;
<a name="l00152"></a>00152 
<a name="l00153"></a>00153   <a class="code" href="isis__lsp_8c.html#aa0d51cf5f190804be9b73b52db69ccd6">lsp_clear_data</a> (lsp);
<a name="l00154"></a>00154 
<a name="l00155"></a>00155   <span class="keywordflow">if</span> (<a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>) == 0 &amp;&amp; lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a>)
<a name="l00156"></a>00156     {
<a name="l00157"></a>00157       <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a>);
<a name="l00158"></a>00158     }
<a name="l00159"></a>00159 
<a name="l00160"></a>00160   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>)
<a name="l00161"></a>00161     <a class="code" href="stream_8c.html#ac25ca0f9b32a76b4ea34ecb3c9d62481">stream_free</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>);
<a name="l00162"></a>00162   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167baa9874bec1ebdd728cf6272ccea1c930c">MTYPE_ISIS_LSP</a>, lsp);
<a name="l00163"></a>00163 }
<a name="l00164"></a>00164 
<a name="l00165"></a>00165 <span class="keywordtype">void</span>
<a name="l00166"></a><a class="code" href="isis__lsp_8h.html#a9a8a9a67475d18e9a6f9f73bb73ec8cc">00166</a> <a class="code" href="isis__lsp_8c.html#a9a8a9a67475d18e9a6f9f73bb73ec8cc">lsp_db_destroy</a> (<a class="code" href="structdict__t.html">dict_t</a> * lspdb)
<a name="l00167"></a>00167 {
<a name="l00168"></a>00168   <a class="code" href="structdnode__t.html">dnode_t</a> *dnode, *next;
<a name="l00169"></a>00169   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
<a name="l00170"></a>00170 
<a name="l00171"></a>00171   dnode = <a class="code" href="dict_8c.html#a2b439ffb63f9b3089d0306ec3b26672f">dict_first</a> (lspdb);
<a name="l00172"></a>00172   <span class="keywordflow">while</span> (dnode)
<a name="l00173"></a>00173     {
<a name="l00174"></a>00174       next = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a> (lspdb, dnode);
<a name="l00175"></a>00175       lsp = <a class="code" href="dict_8h.html#a17fccc85aae3874de7152f103d5945bc">dnode_get</a> (dnode);
<a name="l00176"></a>00176       <a class="code" href="isis__lsp_8c.html#a8910aea25a4f0680a4b4945609aaf97b">lsp_destroy</a> (lsp);
<a name="l00177"></a>00177       <a class="code" href="dict_8c.html#ad820577e4fba81f761665f16356823ab">dict_delete_free</a> (lspdb, dnode);
<a name="l00178"></a>00178       dnode = next;
<a name="l00179"></a>00179     }
<a name="l00180"></a>00180 
<a name="l00181"></a>00181   <a class="code" href="dict_8c.html#ab1d4e786dee93b4dc601d2f339ff81fd">dict_free</a> (lspdb);
<a name="l00182"></a>00182 
<a name="l00183"></a>00183   <span class="keywordflow">return</span>;
<a name="l00184"></a>00184 }
<a name="l00185"></a>00185 
<a name="l00186"></a>00186 <span class="comment">/*</span>
<a name="l00187"></a>00187 <span class="comment"> * Remove all the frags belonging to the given lsp</span>
<a name="l00188"></a>00188 <span class="comment"> */</span>
<a name="l00189"></a>00189 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00190"></a><a class="code" href="isis__lsp_8c.html#a0ae83d454874a8fd54be13230268bee3">00190</a> <a class="code" href="isis__lsp_8c.html#a0ae83d454874a8fd54be13230268bee3">lsp_remove_frags</a> (<span class="keyword">struct</span> <a class="code" href="structlist.html">list</a> *<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a>, <a class="code" href="structdict__t.html">dict_t</a> * lspdb)
<a name="l00191"></a>00191 {
<a name="l00192"></a>00192   <a class="code" href="structdnode__t.html">dnode_t</a> *dnode;
<a name="l00193"></a>00193   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *lnode, *lnnode;
<a name="l00194"></a>00194   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
<a name="l00195"></a>00195 
<a name="l00196"></a>00196   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (frags, lnode, lnnode, lsp))
<a name="l00197"></a>00197     {
<a name="l00198"></a>00198       dnode = <a class="code" href="dict_8c.html#a9b4c0968674a4ff436bb8180aa56e522">dict_lookup</a> (lspdb, lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>);
<a name="l00199"></a>00199       <a class="code" href="isis__lsp_8c.html#a8910aea25a4f0680a4b4945609aaf97b">lsp_destroy</a> (lsp);
<a name="l00200"></a>00200       <a class="code" href="dict_8c.html#ae494e63c2ce90dee35c2abdd940ec8cf">dnode_destroy</a> (<a class="code" href="dict_8c.html#ad51f28cd1829e1fd66caf58f553d794e">dict_delete</a> (lspdb, dnode));
<a name="l00201"></a>00201     }
<a name="l00202"></a>00202 
<a name="l00203"></a>00203   <a class="code" href="linklist_8c.html#acd6daa4be8ab3f175376e63c9d9c9500">list_delete_all_node</a> (frags);
<a name="l00204"></a>00204 
<a name="l00205"></a>00205   <span class="keywordflow">return</span>;
<a name="l00206"></a>00206 }
<a name="l00207"></a>00207 
<a name="l00208"></a>00208 <span class="keywordtype">void</span>
<a name="l00209"></a><a class="code" href="isis__lsp_8h.html#ac9198965904e0c9a57ade0011b114d3f">00209</a> <a class="code" href="isis__lsp_8c.html#ac9198965904e0c9a57ade0011b114d3f">lsp_search_and_destroy</a> (u_char * <span class="keywordtype">id</span>, <a class="code" href="structdict__t.html">dict_t</a> * lspdb)
<a name="l00210"></a>00210 {
<a name="l00211"></a>00211   <a class="code" href="structdnode__t.html">dnode_t</a> *node;
<a name="l00212"></a>00212   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
<a name="l00213"></a>00213 
<a name="l00214"></a>00214   node = <a class="code" href="dict_8c.html#a9b4c0968674a4ff436bb8180aa56e522">dict_lookup</a> (lspdb, <span class="keywordtype">id</span>);
<a name="l00215"></a>00215   <span class="keywordflow">if</span> (node)
<a name="l00216"></a>00216     {
<a name="l00217"></a>00217       node = <a class="code" href="dict_8c.html#ad51f28cd1829e1fd66caf58f553d794e">dict_delete</a> (lspdb, node);
<a name="l00218"></a>00218       lsp = <a class="code" href="dict_8h.html#a17fccc85aae3874de7152f103d5945bc">dnode_get</a> (node);
<a name="l00219"></a>00219       <span class="comment">/*</span>
<a name="l00220"></a>00220 <span class="comment">       * If this is a zero lsp, remove all the frags now </span>
<a name="l00221"></a>00221 <span class="comment">       */</span>
<a name="l00222"></a>00222       <span class="keywordflow">if</span> (<a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>) == 0)
<a name="l00223"></a>00223     {
<a name="l00224"></a>00224       <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a>)
<a name="l00225"></a>00225         <a class="code" href="isis__lsp_8c.html#a0ae83d454874a8fd54be13230268bee3">lsp_remove_frags</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a>, lspdb);
<a name="l00226"></a>00226     }
<a name="l00227"></a>00227       <span class="keywordflow">else</span>
<a name="l00228"></a>00228     {
<a name="l00229"></a>00229       <span class="comment">/* </span>
<a name="l00230"></a>00230 <span class="comment">       * else just remove this frag, from the zero lsps&#39; frag list</span>
<a name="l00231"></a>00231 <span class="comment">       */</span>
<a name="l00232"></a>00232       <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#a3113261380202a14a924c31ca87cdee1">zero_lsp</a> &amp;&amp; lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#a3113261380202a14a924c31ca87cdee1">zero_lsp</a>-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a>)
<a name="l00233"></a>00233         <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#a3113261380202a14a924c31ca87cdee1">zero_lsp</a>-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a>, lsp);
<a name="l00234"></a>00234     }
<a name="l00235"></a>00235       <a class="code" href="isis__lsp_8c.html#a8910aea25a4f0680a4b4945609aaf97b">lsp_destroy</a> (lsp);
<a name="l00236"></a>00236       <a class="code" href="dict_8c.html#ae494e63c2ce90dee35c2abdd940ec8cf">dnode_destroy</a> (node);
<a name="l00237"></a>00237     }
<a name="l00238"></a>00238 }
<a name="l00239"></a>00239 
<a name="l00240"></a>00240 <span class="comment">/*</span>
<a name="l00241"></a>00241 <span class="comment"> * Compares a LSP to given values</span>
<a name="l00242"></a>00242 <span class="comment"> * Params are given in net order</span>
<a name="l00243"></a>00243 <span class="comment"> */</span>
<a name="l00244"></a>00244 <span class="keywordtype">int</span>
<a name="l00245"></a><a class="code" href="isis__lsp_8h.html#a299d8a18662f432a07979c177e2723f0">00245</a> <a class="code" href="isis__lsp_8c.html#a299d8a18662f432a07979c177e2723f0">lsp_compare</a> (<span class="keywordtype">char</span> *areatag, <span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp, u_int32_t <a class="code" href="isis__pdu_8h.html#a4deeb76ae77c7e5dca81a8c3a07e8c23">seq_num</a>,
<a name="l00246"></a>00246          u_int16_t <a class="code" href="structchecksum.html">checksum</a>, u_int16_t <a class="code" href="isis__pdu_8h.html#a67f02ba3d294cb872271dc4d82ad7965">rem_lifetime</a>)
<a name="l00247"></a>00247 {
<a name="l00248"></a>00248   <span class="comment">/* no point in double ntohl on seqnum */</span>
<a name="l00249"></a>00249   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a> == seq_num &amp;&amp;
<a name="l00250"></a>00250       lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#afb16ee6cc606527cc2705773cc2b79c4">checksum</a> == checksum &amp;&amp;
<a name="l00251"></a>00251       <span class="comment">/*comparing with 0, no need to do ntohl */</span>
<a name="l00252"></a>00252       ((lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a> == 0 &amp;&amp; rem_lifetime == 0) ||
<a name="l00253"></a>00253        (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a> != 0 &amp;&amp; rem_lifetime != 0)))
<a name="l00254"></a>00254     {
<a name="l00255"></a>00255       <span class="keywordflow">if</span> (isis-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#ab16b82eb25717295303c7099035d9dc9">DEBUG_SNP_PACKETS</a>)
<a name="l00256"></a>00256     {
<a name="l00257"></a>00257       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Snp (%s): LSP %s seq 0x%08x, cksum 0x%04x,&quot;</span>
<a name="l00258"></a>00258               <span class="stringliteral">&quot; lifetime %us&quot;</span>,
<a name="l00259"></a>00259               areatag,
<a name="l00260"></a>00260               <a class="code" href="isis__misc_8c.html#a3a0e7f92008e3167e2c09b8761d06766">rawlspid_print</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>),
<a name="l00261"></a>00261               ntohl (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a>),
<a name="l00262"></a>00262               ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#afb16ee6cc606527cc2705773cc2b79c4">checksum</a>),
<a name="l00263"></a>00263               ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a>));
<a name="l00264"></a>00264       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Snp (%s):         is equal to ours seq 0x%08x,&quot;</span>
<a name="l00265"></a>00265               <span class="stringliteral">&quot; cksum 0x%04x, lifetime %us&quot;</span>,
<a name="l00266"></a>00266               areatag,
<a name="l00267"></a>00267               ntohl (seq_num), ntohs (checksum), ntohs (rem_lifetime));
<a name="l00268"></a>00268     }
<a name="l00269"></a>00269       <span class="keywordflow">return</span> <a class="code" href="isis__lsp_8h.html#a99cb1e872b18fd541d954846ec30aa7f">LSP_EQUAL</a>;
<a name="l00270"></a>00270     }
<a name="l00271"></a>00271 
<a name="l00272"></a>00272   <span class="keywordflow">if</span> (ntohl (seq_num) &gt;= ntohl (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a>))
<a name="l00273"></a>00273     {
<a name="l00274"></a>00274       <span class="keywordflow">if</span> (isis-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#ab16b82eb25717295303c7099035d9dc9">DEBUG_SNP_PACKETS</a>)
<a name="l00275"></a>00275     {
<a name="l00276"></a>00276       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Snp (%s): LSP %s seq 0x%08x, cksum 0x%04x,&quot;</span>
<a name="l00277"></a>00277               <span class="stringliteral">&quot; lifetime %us&quot;</span>,
<a name="l00278"></a>00278               areatag,
<a name="l00279"></a>00279               <a class="code" href="isis__misc_8c.html#a3a0e7f92008e3167e2c09b8761d06766">rawlspid_print</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>),
<a name="l00280"></a>00280               ntohl (seq_num), ntohs (checksum), ntohs (rem_lifetime));
<a name="l00281"></a>00281       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Snp (%s):       is newer than ours seq 0x%08x, &quot;</span>
<a name="l00282"></a>00282               <span class="stringliteral">&quot;cksum 0x%04x, lifetime %us&quot;</span>,
<a name="l00283"></a>00283               areatag,
<a name="l00284"></a>00284               ntohl (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a>),
<a name="l00285"></a>00285               ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#afb16ee6cc606527cc2705773cc2b79c4">checksum</a>),
<a name="l00286"></a>00286               ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a>));
<a name="l00287"></a>00287     }
<a name="l00288"></a>00288       <span class="keywordflow">return</span> <a class="code" href="isis__lsp_8h.html#a2b334f17cd54fd535379deac75b7e8f0">LSP_NEWER</a>;
<a name="l00289"></a>00289     }
<a name="l00290"></a>00290   <span class="keywordflow">if</span> (isis-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#ab16b82eb25717295303c7099035d9dc9">DEBUG_SNP_PACKETS</a>)
<a name="l00291"></a>00291     {
<a name="l00292"></a>00292       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a>
<a name="l00293"></a>00293     (<span class="stringliteral">&quot;ISIS-Snp (%s): LSP %s seq 0x%08x, cksum 0x%04x, lifetime %us&quot;</span>,
<a name="l00294"></a>00294      areatag, <a class="code" href="isis__misc_8c.html#a3a0e7f92008e3167e2c09b8761d06766">rawlspid_print</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>), ntohl (seq_num),
<a name="l00295"></a>00295      ntohs (checksum), ntohs (rem_lifetime));
<a name="l00296"></a>00296       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Snp (%s):       is older than ours seq 0x%08x,&quot;</span>
<a name="l00297"></a>00297           <span class="stringliteral">&quot; cksum 0x%04x, lifetime %us&quot;</span>, areatag,
<a name="l00298"></a>00298           ntohl (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a>),
<a name="l00299"></a>00299           ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#afb16ee6cc606527cc2705773cc2b79c4">checksum</a>),
<a name="l00300"></a>00300           ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a>));
<a name="l00301"></a>00301     }
<a name="l00302"></a>00302 
<a name="l00303"></a>00303   <span class="keywordflow">return</span> <a class="code" href="isis__lsp_8h.html#a3902417a88de806e8b32c2a5930eb9bc">LSP_OLDER</a>;
<a name="l00304"></a>00304 }
<a name="l00305"></a>00305 
<a name="l00306"></a>00306 <span class="keywordtype">void</span>
<a name="l00307"></a><a class="code" href="isis__lsp_8h.html#a95c7b93c607b9aba6b6697b136d9ad98">00307</a> <a class="code" href="isis__lsp_8c.html#a95c7b93c607b9aba6b6697b136d9ad98">lsp_inc_seqnum</a> (<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp, u_int32_t <a class="code" href="isis__pdu_8h.html#a4deeb76ae77c7e5dca81a8c3a07e8c23">seq_num</a>)
<a name="l00308"></a>00308 {
<a name="l00309"></a>00309   u_int32_t newseq;
<a name="l00310"></a>00310 
<a name="l00311"></a>00311   <span class="keywordflow">if</span> (seq_num == 0 || ntohl (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a>) &gt; seq_num)
<a name="l00312"></a>00312     newseq = ntohl (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a>) + 1;
<a name="l00313"></a>00313   <span class="keywordflow">else</span>
<a name="l00314"></a>00314     newseq = seq_num++;
<a name="l00315"></a>00315 
<a name="l00316"></a>00316   lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a> = htonl (newseq);
<a name="l00317"></a>00317   <a class="code" href="checksum_8c.html#a097fa5404eb654e8e112bb954bf4ef15">fletcher_checksum</a> (<a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>) + 12,
<a name="l00318"></a>00318            ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6f17d9f3a17625db25044ff0ff3da330">pdu_len</a>) - 12, 12);
<a name="l00319"></a>00319 
<a name="l00320"></a>00320   <span class="keywordflow">return</span>;
<a name="l00321"></a>00321 }
<a name="l00322"></a>00322 
<a name="l00323"></a>00323 <span class="comment">/*</span>
<a name="l00324"></a>00324 <span class="comment"> * Genetates checksum for LSP and its frags</span>
<a name="l00325"></a>00325 <span class="comment"> */</span>
<a name="l00326"></a>00326 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00327"></a><a class="code" href="isis__lsp_8c.html#a4a6da8fd883c32c4986e4d75e9a6f4e4">00327</a> <a class="code" href="isis__lsp_8c.html#a4a6da8fd883c32c4986e4d75e9a6f4e4">lsp_seqnum_update</a> (<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp0)
<a name="l00328"></a>00328 {
<a name="l00329"></a>00329   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
<a name="l00330"></a>00330   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00331"></a>00331 
<a name="l00332"></a>00332   <a class="code" href="isis__lsp_8c.html#a95c7b93c607b9aba6b6697b136d9ad98">lsp_inc_seqnum</a> (lsp0, 0);
<a name="l00333"></a>00333 
<a name="l00334"></a>00334   <span class="keywordflow">if</span> (!lsp0-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a>)
<a name="l00335"></a>00335     <span class="keywordflow">return</span>;
<a name="l00336"></a>00336 
<a name="l00337"></a>00337   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp0-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a>, node, lsp))
<a name="l00338"></a>00338     <a class="code" href="isis__lsp_8c.html#a95c7b93c607b9aba6b6697b136d9ad98">lsp_inc_seqnum</a> (lsp, 0);
<a name="l00339"></a>00339 
<a name="l00340"></a>00340   <span class="keywordflow">return</span>;
<a name="l00341"></a>00341 }
<a name="l00342"></a>00342 
<a name="l00343"></a>00343 <span class="keywordtype">int</span>
<a name="l00344"></a><a class="code" href="isis__lsp_8h.html#ae815308b33a56b78b9a65809bc344ac4">00344</a> <a class="code" href="isis__lsp_8c.html#ae815308b33a56b78b9a65809bc344ac4">isis_lsp_authinfo_check</a> (<span class="keyword">struct</span> <a class="code" href="structstream.html">stream</a> *<a class="code" href="structstream.html">stream</a>, <span class="keyword">struct</span> <a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>,
<a name="l00345"></a>00345              <span class="keywordtype">int</span> pdulen, <span class="keyword">struct</span> <a class="code" href="structisis__passwd.html">isis_passwd</a> *passwd)
<a name="l00346"></a>00346 {
<a name="l00347"></a>00347   uint32_t expected = 0, found;
<a name="l00348"></a>00348   <span class="keyword">struct </span><a class="code" href="structtlvs.html">tlvs</a> tlvs;
<a name="l00349"></a>00349   <span class="keywordtype">int</span> retval = 0;
<a name="l00350"></a>00350 
<a name="l00351"></a>00351   expected |= <a class="code" href="isis__tlv_8h.html#a493ed26a4a2decc55275bd699df9a4a8">TLVFLAG_AUTH_INFO</a>;
<a name="l00352"></a>00352   retval = <a class="code" href="isis__tlv_8c.html#aad6fa3b6cc5e93707f75d8247f8787c8">parse_tlvs</a> (area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>, stream-&gt;<a class="code" href="structstream.html#aa204feef08c4dcb72bf774680da7a864">data</a> +
<a name="l00353"></a>00353                <a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a> + <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>,
<a name="l00354"></a>00354                pdulen - <a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a>
<a name="l00355"></a>00355                - <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>, &amp;expected, &amp;found, &amp;tlvs);
<a name="l00356"></a>00356   <span class="keywordflow">if</span> (retval || !(found &amp; <a class="code" href="isis__tlv_8h.html#a493ed26a4a2decc55275bd699df9a4a8">TLVFLAG_AUTH_INFO</a>))
<a name="l00357"></a>00357     <span class="keywordflow">return</span> 1;           <span class="comment">/* Auth fail (parsing failed or no auth-tlv) */</span>
<a name="l00358"></a>00358 
<a name="l00359"></a>00359   <span class="keywordflow">return</span> <a class="code" href="isis__pdu_8c.html#aefd5a8caa169a427e30d599b51ab52e9">authentication_check</a> (passwd, &amp;tlvs.<a class="code" href="structtlvs.html#a53dc2cb65bc632c84b3d702ab1dc16ce">auth_info</a>);
<a name="l00360"></a>00360 }
<a name="l00361"></a>00361 
<a name="l00362"></a>00362 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00363"></a><a class="code" href="isis__lsp_8c.html#a917a11f390e10660faa69faa510da442">00363</a> <a class="code" href="isis__lsp_8c.html#a917a11f390e10660faa69faa510da442">lsp_update_data</a> (<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp, <span class="keyword">struct</span> <a class="code" href="structstream.html">stream</a> *<a class="code" href="structstream.html">stream</a>,
<a name="l00364"></a>00364          <span class="keyword">struct</span> <a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l00365"></a>00365 {
<a name="l00366"></a>00366   uint32_t expected = 0, found;
<a name="l00367"></a>00367   <span class="keywordtype">int</span> retval;
<a name="l00368"></a>00368 
<a name="l00369"></a>00369   <span class="comment">/* copying only the relevant part of our stream */</span>
<a name="l00370"></a>00370   lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a> = <a class="code" href="stream_8c.html#ad4c81d1449a5c97aa37c0acb4a5c7815">stream_dup</a> (stream);
<a name="l00371"></a>00371   
<a name="l00372"></a>00372   <span class="comment">/* setting pointers to the correct place */</span>
<a name="l00373"></a>00373   lsp-&gt;<a class="code" href="structisis__lsp.html#a4495af44aa8d877f56b8e7ce00b47344">isis_header</a> = (<span class="keyword">struct </span><a class="code" href="structisis__fixed__hdr.html">isis_fixed_hdr</a> *) (<a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>));
<a name="l00374"></a>00374   lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a> = (<span class="keyword">struct </span><a class="code" href="structisis__link__state__hdr.html">isis_link_state_hdr</a> *) (<a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>) +
<a name="l00375"></a>00375                             <a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a>);
<a name="l00376"></a>00376   lsp-&gt;<a class="code" href="structisis__lsp.html#aa2d9dce6fceedcb6af88a73f2f5a0616">age_out</a> = <a class="code" href="isis__constants_8h.html#a34e4027fe6ad8e371e370258da82dd23">ZERO_AGE_LIFETIME</a>;
<a name="l00377"></a>00377   lsp-&gt;<a class="code" href="structisis__lsp.html#a3170f0dc8ff17017cb0210bd4fc8bd4b">installed</a> = time (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l00378"></a>00378   <span class="comment">/*</span>
<a name="l00379"></a>00379 <span class="comment">   * Get LSP data i.e. TLVs</span>
<a name="l00380"></a>00380 <span class="comment">   */</span>
<a name="l00381"></a>00381   expected |= <a class="code" href="isis__tlv_8h.html#a493ed26a4a2decc55275bd699df9a4a8">TLVFLAG_AUTH_INFO</a>;
<a name="l00382"></a>00382   expected |= <a class="code" href="isis__tlv_8h.html#ae2a91163530ea4d9bfb3b00394a48316">TLVFLAG_AREA_ADDRS</a>;
<a name="l00383"></a>00383   expected |= <a class="code" href="isis__tlv_8h.html#abc2d792062e147ac65de4e8af0ea9f5a">TLVFLAG_IS_NEIGHS</a>;
<a name="l00384"></a>00384   <span class="keywordflow">if</span> ((lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a405c4b662dc97846dcca65f5c851f485">lsp_bits</a> &amp; 3) == 3) <span class="comment">/* a level 2 LSP */</span>
<a name="l00385"></a>00385     expected |= <a class="code" href="isis__tlv_8h.html#a26d1512ae89c63450b63a01288d455ac">TLVFLAG_PARTITION_DESIG_LEVEL2_IS</a>;
<a name="l00386"></a>00386   expected |= <a class="code" href="isis__tlv_8h.html#ac9149da10b98f4211a51249c752b5fee">TLVFLAG_NLPID</a>;
<a name="l00387"></a>00387   <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a633f0592cc19c913d3d18368a8f45cb7">dynhostname</a>)
<a name="l00388"></a>00388     expected |= <a class="code" href="isis__tlv_8h.html#af89b5f221b1f5b197ab98b27e5c17aac">TLVFLAG_DYN_HOSTNAME</a>;
<a name="l00389"></a>00389   <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#af81e14ff1b34169c5e05c287d7ff5529">newmetric</a>)
<a name="l00390"></a>00390     {
<a name="l00391"></a>00391       expected |= <a class="code" href="isis__tlv_8h.html#a422846a476846aafef471dd5b7e6220a">TLVFLAG_TE_IS_NEIGHS</a>;
<a name="l00392"></a>00392       expected |= <a class="code" href="isis__tlv_8h.html#ade240c15d53a2f0d6836c8bb2320c897">TLVFLAG_TE_IPV4_REACHABILITY</a>;
<a name="l00393"></a>00393       expected |= <a class="code" href="isis__tlv_8h.html#a451c9fd30d9a55842ce82211382eefc3">TLVFLAG_TE_ROUTER_ID</a>;
<a name="l00394"></a>00394     }
<a name="l00395"></a>00395   expected |= <a class="code" href="isis__tlv_8h.html#ac1d5ea73aa3cc33a2c7e4190df6fab00">TLVFLAG_IPV4_ADDR</a>;
<a name="l00396"></a>00396   expected |= <a class="code" href="isis__tlv_8h.html#a6983234a86fe907722e0ba97fe5f84d6">TLVFLAG_IPV4_INT_REACHABILITY</a>;
<a name="l00397"></a>00397   expected |= <a class="code" href="isis__tlv_8h.html#ac1563adffe169c3354eb377e8962092e">TLVFLAG_IPV4_EXT_REACHABILITY</a>;
<a name="l00398"></a>00398 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00399"></a>00399 <span class="preprocessor"></span>  expected |= <a class="code" href="isis__tlv_8h.html#af63af1cfdbe427be867d8191c1ea5b5f">TLVFLAG_IPV6_ADDR</a>;
<a name="l00400"></a>00400   expected |= <a class="code" href="isis__tlv_8h.html#a5b97a8d9bd142af3e49f1bdc02cfc3e3">TLVFLAG_IPV6_REACHABILITY</a>;
<a name="l00401"></a>00401 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l00402"></a>00402 
<a name="l00403"></a>00403   retval = <a class="code" href="isis__tlv_8c.html#aad6fa3b6cc5e93707f75d8247f8787c8">parse_tlvs</a> (area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>-&gt;<a class="code" href="structstream.html#aa204feef08c4dcb72bf774680da7a864">data</a> +
<a name="l00404"></a>00404                <a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a> + <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>,
<a name="l00405"></a>00405                ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6f17d9f3a17625db25044ff0ff3da330">pdu_len</a>) - <a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a>
<a name="l00406"></a>00406                - <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>, &amp;expected, &amp;found, &amp;lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>);
<a name="l00407"></a>00407 
<a name="l00408"></a>00408   <span class="keywordflow">if</span> (found &amp; <a class="code" href="isis__tlv_8h.html#af89b5f221b1f5b197ab98b27e5c17aac">TLVFLAG_DYN_HOSTNAME</a>)
<a name="l00409"></a>00409     {
<a name="l00410"></a>00410       <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a633f0592cc19c913d3d18368a8f45cb7">dynhostname</a>)
<a name="l00411"></a>00411     <a class="code" href="isis__dynhn_8c.html#ac659e83c583ea0c43ed5ac33dd8708b4">isis_dynhn_insert</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac2b8abaebfab8d2a55242d83a87a3e70">hostname</a>,
<a name="l00412"></a>00412                (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a405c4b662dc97846dcca65f5c851f485">lsp_bits</a> &amp; <a class="code" href="isis__constants_8h.html#a9f40952694b8ae76b12e90808bd81229">LSPBIT_IST</a>) ==
<a name="l00413"></a>00413                <a class="code" href="isis__constants_8h.html#a9906fe43cc332e34827b3c233d509da6">IS_LEVEL_1_AND_2</a> ? <a class="code" href="isis__constants_8h.html#a9daa7fbf09b604c718f3bbe189aedd1a">IS_LEVEL_2</a> :
<a name="l00414"></a>00414                (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a405c4b662dc97846dcca65f5c851f485">lsp_bits</a> &amp; <a class="code" href="isis__constants_8h.html#a9f40952694b8ae76b12e90808bd81229">LSPBIT_IST</a>));
<a name="l00415"></a>00415     }
<a name="l00416"></a>00416 
<a name="l00417"></a>00417 }
<a name="l00418"></a>00418 
<a name="l00419"></a>00419 <span class="keywordtype">void</span>
<a name="l00420"></a><a class="code" href="isis__lsp_8h.html#ad5c26e2f2f08b4a76183ca91ff454ff9">00420</a> <a class="code" href="isis__lsp_8c.html#ad5c26e2f2f08b4a76183ca91ff454ff9">lsp_update</a> (<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp, <span class="keyword">struct</span> <a class="code" href="structisis__link__state__hdr.html">isis_link_state_hdr</a> *lsp_hdr,
<a name="l00421"></a>00421         <span class="keyword">struct</span> <a class="code" href="structstream.html">stream</a> *<a class="code" href="structstream.html">stream</a>, <span class="keyword">struct</span> <a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>, <span class="keywordtype">int</span> level)
<a name="l00422"></a>00422 {
<a name="l00423"></a>00423   <a class="code" href="structdnode__t.html">dnode_t</a> *dnode = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00424"></a>00424 
<a name="l00425"></a>00425   <span class="comment">/* Remove old LSP from LSP database. */</span>
<a name="l00426"></a>00426   dnode = <a class="code" href="dict_8c.html#a9b4c0968674a4ff436bb8180aa56e522">dict_lookup</a> (area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level - 1], lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>);
<a name="l00427"></a>00427   <span class="keywordflow">if</span> (dnode)
<a name="l00428"></a>00428     <a class="code" href="dict_8c.html#ae494e63c2ce90dee35c2abdd940ec8cf">dnode_destroy</a> (<a class="code" href="dict_8c.html#ad51f28cd1829e1fd66caf58f553d794e">dict_delete</a> (area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level - 1], dnode));
<a name="l00429"></a>00429 
<a name="l00430"></a>00430   <span class="comment">/* free the old lsp data */</span>
<a name="l00431"></a>00431   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba9a2400fa8e781effd85b44c7c6455855">MTYPE_STREAM_DATA</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>);
<a name="l00432"></a>00432   <a class="code" href="isis__lsp_8c.html#aa0d51cf5f190804be9b73b52db69ccd6">lsp_clear_data</a> (lsp);
<a name="l00433"></a>00433 
<a name="l00434"></a>00434   <span class="comment">/* rebuild the lsp data */</span>
<a name="l00435"></a>00435   <a class="code" href="isis__lsp_8c.html#a917a11f390e10660faa69faa510da442">lsp_update_data</a> (lsp, stream, area);
<a name="l00436"></a>00436 
<a name="l00437"></a>00437   <span class="comment">/* set the new values for lsp header */</span>
<a name="l00438"></a>00438   <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>, lsp_hdr, <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>);
<a name="l00439"></a>00439 
<a name="l00440"></a>00440   <span class="keywordflow">if</span> (dnode)
<a name="l00441"></a>00441     <a class="code" href="isis__lsp_8c.html#a09d8f3bcc073c87f01c32b2f0994fb04">lsp_insert</a> (lsp, area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level - 1]);
<a name="l00442"></a>00442 }
<a name="l00443"></a>00443 
<a name="l00444"></a>00444 <span class="comment">/* creation of LSP directly from what we received */</span>
<a name="l00445"></a>00445 <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *
<a name="l00446"></a><a class="code" href="isis__lsp_8h.html#af11fc334a37a7a089a4c5e2d44496110">00446</a> <a class="code" href="isis__lsp_8c.html#af11fc334a37a7a089a4c5e2d44496110">lsp_new_from_stream_ptr</a> (<span class="keyword">struct</span> <a class="code" href="structstream.html">stream</a> *<a class="code" href="structstream.html">stream</a>,
<a name="l00447"></a>00447              u_int16_t <a class="code" href="isis__pdu_8h.html#a7f1310e3d90f89e9c60c543ffe337b3b">pdu_len</a>, <span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp0,
<a name="l00448"></a>00448              <span class="keyword">struct</span> <a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l00449"></a>00449 {
<a name="l00450"></a>00450   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
<a name="l00451"></a>00451 
<a name="l00452"></a>00452   lsp = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167baa9874bec1ebdd728cf6272ccea1c930c">MTYPE_ISIS_LSP</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a>));
<a name="l00453"></a>00453   <a class="code" href="isis__lsp_8c.html#a917a11f390e10660faa69faa510da442">lsp_update_data</a> (lsp, stream, area);
<a name="l00454"></a>00454 
<a name="l00455"></a>00455   <span class="keywordflow">if</span> (lsp0 == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00456"></a>00456     {
<a name="l00457"></a>00457       <span class="comment">/*</span>
<a name="l00458"></a>00458 <span class="comment">       * zero lsp -&gt; create the list for fragments</span>
<a name="l00459"></a>00459 <span class="comment">       */</span>
<a name="l00460"></a>00460       lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l00461"></a>00461     }
<a name="l00462"></a>00462   <span class="keywordflow">else</span>
<a name="l00463"></a>00463     {
<a name="l00464"></a>00464       <span class="comment">/*</span>
<a name="l00465"></a>00465 <span class="comment">       * a fragment -&gt; set the backpointer and add this to zero lsps frag list</span>
<a name="l00466"></a>00466 <span class="comment">       */</span>
<a name="l00467"></a>00467       lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#a3113261380202a14a924c31ca87cdee1">zero_lsp</a> = lsp0;
<a name="l00468"></a>00468       <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (lsp0-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a>, lsp);
<a name="l00469"></a>00469     }
<a name="l00470"></a>00470 
<a name="l00471"></a>00471   <span class="keywordflow">return</span> lsp;
<a name="l00472"></a>00472 }
<a name="l00473"></a>00473 
<a name="l00474"></a>00474 <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *
<a name="l00475"></a><a class="code" href="isis__lsp_8h.html#af43ff22a21554145c239b6c37556ce1a">00475</a> <a class="code" href="isis__lsp_8c.html#af43ff22a21554145c239b6c37556ce1a">lsp_new</a> (u_char * <a class="code" href="isis__pdu_8h.html#a2991a019d1da82fb5406bff5ab46dcf6">lsp_id</a>, u_int16_t <a class="code" href="isis__pdu_8h.html#a67f02ba3d294cb872271dc4d82ad7965">rem_lifetime</a>, u_int32_t <a class="code" href="isis__pdu_8h.html#a4deeb76ae77c7e5dca81a8c3a07e8c23">seq_num</a>,
<a name="l00476"></a>00476      u_int8_t <a class="code" href="isis__pdu_8h.html#a83e5f4c3dca022e24977611cd0a028b6">lsp_bits</a>, u_int16_t <a class="code" href="structchecksum.html">checksum</a>, <span class="keywordtype">int</span> <a class="code" href="structisis__lsp.html#ab719e4479e4fc861c4cfa7a3c9d403c6">level</a>)
<a name="l00477"></a>00477 {
<a name="l00478"></a>00478   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
<a name="l00479"></a>00479 
<a name="l00480"></a>00480   lsp = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167baa9874bec1ebdd728cf6272ccea1c930c">MTYPE_ISIS_LSP</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a>));
<a name="l00481"></a>00481   <span class="keywordflow">if</span> (!lsp)
<a name="l00482"></a>00482     {
<a name="l00483"></a>00483       <span class="comment">/* FIXME: set lspdbol bit */</span>
<a name="l00484"></a>00484       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;lsp_new(): out of memory&quot;</span>);
<a name="l00485"></a>00485       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00486"></a>00486     }
<a name="l00487"></a>00487 <span class="preprocessor">#ifdef LSP_MEMORY_PREASSIGN</span>
<a name="l00488"></a>00488 <span class="preprocessor"></span>  lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a> = <a class="code" href="stream_8c.html#a7117cdad9fa5e5ae633e0cf08d047459">stream_new</a> (1514); <span class="comment">/*Should be minimal mtu? yup... */</span>
<a name="l00489"></a>00489 <span class="preprocessor">#else</span>
<a name="l00490"></a>00490 <span class="preprocessor"></span>  <span class="comment">/* We need to do realloc on TLVs additions */</span>
<a name="l00491"></a>00491   lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a> = <a class="code" href="regex_8c.html#ab7e36af3707843f77cc5b4e831c2fa6d">malloc</a> (<a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a> + <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>);
<a name="l00492"></a>00492 <span class="preprocessor">#endif </span><span class="comment">/* LSP_MEMORY_PREASSIGN */</span>
<a name="l00493"></a>00493   <span class="keywordflow">if</span> (<a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (lsp_id) == 0)
<a name="l00494"></a>00494     lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l00495"></a>00495   lsp-&gt;<a class="code" href="structisis__lsp.html#a4495af44aa8d877f56b8e7ce00b47344">isis_header</a> = (<span class="keyword">struct </span><a class="code" href="structisis__fixed__hdr.html">isis_fixed_hdr</a> *) (<a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>));
<a name="l00496"></a>00496   lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a> = (<span class="keyword">struct </span><a class="code" href="structisis__link__state__hdr.html">isis_link_state_hdr</a> *)
<a name="l00497"></a>00497     (<a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>) + <a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a>);
<a name="l00498"></a>00498 
<a name="l00499"></a>00499   <span class="comment">/* at first we fill the FIXED HEADER */</span>
<a name="l00500"></a>00500   (level == 1) ? <a class="code" href="isis__pdu_8c.html#a5bb1429f6b41964f060f6abbfb50b5bf">fill_fixed_hdr</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a4495af44aa8d877f56b8e7ce00b47344">isis_header</a>, <a class="code" href="isis__pdu_8h.html#a37bd70be235d213245350209287f9d69">L1_LINK_STATE</a>) :
<a name="l00501"></a>00501     <a class="code" href="isis__pdu_8c.html#a5bb1429f6b41964f060f6abbfb50b5bf">fill_fixed_hdr</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a4495af44aa8d877f56b8e7ce00b47344">isis_header</a>, <a class="code" href="isis__pdu_8h.html#a0078daf40d7e45a7bdbd26a016dde2da">L2_LINK_STATE</a>);
<a name="l00502"></a>00502 
<a name="l00503"></a>00503   <span class="comment">/* now for the LSP HEADER */</span>
<a name="l00504"></a>00504   <span class="comment">/* Minimal LSP PDU size */</span>
<a name="l00505"></a>00505   lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6f17d9f3a17625db25044ff0ff3da330">pdu_len</a> = htons (<a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a> + <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>);
<a name="l00506"></a>00506   <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>, lsp_id, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 2);
<a name="l00507"></a>00507   lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#afb16ee6cc606527cc2705773cc2b79c4">checksum</a> = <a class="code" href="isis__pdu_8h.html#ac478e851f3af12545631aadafc9932ed">checksum</a>; <span class="comment">/* Provided in network order */</span>
<a name="l00508"></a>00508   lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a> = htonl (seq_num);
<a name="l00509"></a>00509   lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a> = htons (rem_lifetime);
<a name="l00510"></a>00510   lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a405c4b662dc97846dcca65f5c851f485">lsp_bits</a> = <a class="code" href="isis__pdu_8h.html#a83e5f4c3dca022e24977611cd0a028b6">lsp_bits</a>;
<a name="l00511"></a>00511   lsp-&gt;<a class="code" href="structisis__lsp.html#ab719e4479e4fc861c4cfa7a3c9d403c6">level</a> = level;
<a name="l00512"></a>00512   lsp-&gt;<a class="code" href="structisis__lsp.html#aa2d9dce6fceedcb6af88a73f2f5a0616">age_out</a> = <a class="code" href="isis__constants_8h.html#a34e4027fe6ad8e371e370258da82dd23">ZERO_AGE_LIFETIME</a>;
<a name="l00513"></a>00513 
<a name="l00514"></a>00514   <a class="code" href="stream_8c.html#aa8fdf46961b0a0aa3d014bb602712076">stream_forward_endp</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>, <a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a> + <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>);
<a name="l00515"></a>00515 
<a name="l00516"></a>00516   <span class="keywordflow">if</span> (isis-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#a133d8993848d3fa2c41270511f133eb7">DEBUG_EVENTS</a>)
<a name="l00517"></a>00517     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;New LSP with ID %s-%02x-%02x seqnum %08x&quot;</span>,
<a name="l00518"></a>00518         <a class="code" href="isis__misc_8c.html#aabccf63144f92eecd0eb77f24ee98529">sysid_print</a> (lsp_id), <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>),
<a name="l00519"></a>00519         <a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>),
<a name="l00520"></a>00520         ntohl (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a>));
<a name="l00521"></a>00521 
<a name="l00522"></a>00522   <span class="keywordflow">return</span> lsp;
<a name="l00523"></a>00523 }
<a name="l00524"></a>00524 
<a name="l00525"></a>00525 <span class="keywordtype">void</span>
<a name="l00526"></a><a class="code" href="isis__lsp_8h.html#a09d8f3bcc073c87f01c32b2f0994fb04">00526</a> <a class="code" href="isis__lsp_8c.html#a09d8f3bcc073c87f01c32b2f0994fb04">lsp_insert</a> (<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp, <a class="code" href="structdict__t.html">dict_t</a> * lspdb)
<a name="l00527"></a>00527 {
<a name="l00528"></a>00528   <a class="code" href="dict_8c.html#a914a77195b15984573e3dac49f38e5f2">dict_alloc_insert</a> (lspdb, lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>, lsp);
<a name="l00529"></a>00529 }
<a name="l00530"></a>00530 
<a name="l00531"></a>00531 <span class="comment">/*</span>
<a name="l00532"></a>00532 <span class="comment"> * Build a list of LSPs with non-zero ht bounded by start and stop ids</span>
<a name="l00533"></a>00533 <span class="comment"> */</span>
<a name="l00534"></a>00534 <span class="keywordtype">void</span>
<a name="l00535"></a><a class="code" href="isis__lsp_8h.html#a66fb0f7dfcff76c23f14eaaf816b11f9">00535</a> <a class="code" href="isis__lsp_8c.html#a66fb0f7dfcff76c23f14eaaf816b11f9">lsp_build_list_nonzero_ht</a> (u_char * start_id, u_char * stop_id,
<a name="l00536"></a>00536                <span class="keyword">struct</span> <a class="code" href="structlist.html">list</a> *<a class="code" href="structlist.html">list</a>, <a class="code" href="structdict__t.html">dict_t</a> * lspdb)
<a name="l00537"></a>00537 {
<a name="l00538"></a>00538   <a class="code" href="structdnode__t.html">dnode_t</a> *first, *last, *curr;
<a name="l00539"></a>00539 
<a name="l00540"></a>00540   first = <a class="code" href="dict_8c.html#aaee9b7ed8b80f9f2dfab916a22c173ee">dict_lower_bound</a> (lspdb, start_id);
<a name="l00541"></a>00541   <span class="keywordflow">if</span> (!first)
<a name="l00542"></a>00542     <span class="keywordflow">return</span>;
<a name="l00543"></a>00543 
<a name="l00544"></a>00544   last = <a class="code" href="dict_8c.html#a6d6f2d4cc66e3859fe47d39b82cfd7ee">dict_upper_bound</a> (lspdb, stop_id);
<a name="l00545"></a>00545 
<a name="l00546"></a>00546   curr = first;
<a name="l00547"></a>00547 
<a name="l00548"></a>00548   <span class="keywordflow">if</span> (((<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a> *) (curr-&gt;<a class="code" href="structdnode__t.html#afe56267c05f044b14097c38595f4a1a4">dict_data</a>))-&gt;lsp_header-&gt;rem_lifetime)
<a name="l00549"></a>00549     <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (list, first-&gt;<a class="code" href="structdnode__t.html#afe56267c05f044b14097c38595f4a1a4">dict_data</a>);
<a name="l00550"></a>00550 
<a name="l00551"></a>00551   <span class="keywordflow">while</span> (curr)
<a name="l00552"></a>00552     {
<a name="l00553"></a>00553       curr = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a> (lspdb, curr);
<a name="l00554"></a>00554       <span class="keywordflow">if</span> (curr &amp;&amp;
<a name="l00555"></a>00555       ((<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a> *) (curr-&gt;<a class="code" href="structdnode__t.html#afe56267c05f044b14097c38595f4a1a4">dict_data</a>))-&gt;lsp_header-&gt;rem_lifetime)
<a name="l00556"></a>00556     <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (list, curr-&gt;<a class="code" href="structdnode__t.html#afe56267c05f044b14097c38595f4a1a4">dict_data</a>);
<a name="l00557"></a>00557       <span class="keywordflow">if</span> (curr == last)
<a name="l00558"></a>00558     <span class="keywordflow">break</span>;
<a name="l00559"></a>00559     }
<a name="l00560"></a>00560 
<a name="l00561"></a>00561   <span class="keywordflow">return</span>;
<a name="l00562"></a>00562 }
<a name="l00563"></a>00563 
<a name="l00564"></a>00564 <span class="comment">/*</span>
<a name="l00565"></a>00565 <span class="comment"> * Build a list of all LSPs bounded by start and stop ids</span>
<a name="l00566"></a>00566 <span class="comment"> */</span>
<a name="l00567"></a>00567 <span class="keywordtype">void</span>
<a name="l00568"></a><a class="code" href="isis__lsp_8h.html#ac59fd5f8a4d5e146a7d36dd6525e43ae">00568</a> <a class="code" href="isis__lsp_8c.html#ac59fd5f8a4d5e146a7d36dd6525e43ae">lsp_build_list</a> (u_char * start_id, u_char * stop_id,
<a name="l00569"></a>00569         <span class="keyword">struct</span> <a class="code" href="structlist.html">list</a> *<a class="code" href="structlist.html">list</a>, <a class="code" href="structdict__t.html">dict_t</a> * lspdb)
<a name="l00570"></a>00570 {
<a name="l00571"></a>00571   <a class="code" href="structdnode__t.html">dnode_t</a> *first, *last, *curr;
<a name="l00572"></a>00572 
<a name="l00573"></a>00573   first = <a class="code" href="dict_8c.html#aaee9b7ed8b80f9f2dfab916a22c173ee">dict_lower_bound</a> (lspdb, start_id);
<a name="l00574"></a>00574   <span class="keywordflow">if</span> (!first)
<a name="l00575"></a>00575     <span class="keywordflow">return</span>;
<a name="l00576"></a>00576 
<a name="l00577"></a>00577   last = <a class="code" href="dict_8c.html#a6d6f2d4cc66e3859fe47d39b82cfd7ee">dict_upper_bound</a> (lspdb, stop_id);
<a name="l00578"></a>00578 
<a name="l00579"></a>00579   curr = first;
<a name="l00580"></a>00580 
<a name="l00581"></a>00581   <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (list, first-&gt;<a class="code" href="structdnode__t.html#afe56267c05f044b14097c38595f4a1a4">dict_data</a>);
<a name="l00582"></a>00582 
<a name="l00583"></a>00583   <span class="keywordflow">while</span> (curr)
<a name="l00584"></a>00584     {
<a name="l00585"></a>00585       curr = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a> (lspdb, curr);
<a name="l00586"></a>00586       <span class="keywordflow">if</span> (curr)
<a name="l00587"></a>00587     <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (list, curr-&gt;<a class="code" href="structdnode__t.html#afe56267c05f044b14097c38595f4a1a4">dict_data</a>);
<a name="l00588"></a>00588       <span class="keywordflow">if</span> (curr == last)
<a name="l00589"></a>00589     <span class="keywordflow">break</span>;
<a name="l00590"></a>00590     }
<a name="l00591"></a>00591 
<a name="l00592"></a>00592   <span class="keywordflow">return</span>;
<a name="l00593"></a>00593 }
<a name="l00594"></a>00594 
<a name="l00595"></a>00595 <span class="comment">/*</span>
<a name="l00596"></a>00596 <span class="comment"> * Build a list of LSPs with SSN flag set for the given circuit</span>
<a name="l00597"></a>00597 <span class="comment"> */</span>
<a name="l00598"></a>00598 <span class="keywordtype">void</span>
<a name="l00599"></a><a class="code" href="isis__lsp_8h.html#ac59c6231af3791411278d2b5f3be2188">00599</a> <a class="code" href="isis__lsp_8c.html#ac59c6231af3791411278d2b5f3be2188">lsp_build_list_ssn</a> (<span class="keyword">struct</span> <a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit, <span class="keyword">struct</span> <a class="code" href="structlist.html">list</a> *<a class="code" href="structlist.html">list</a>,
<a name="l00600"></a>00600             <a class="code" href="structdict__t.html">dict_t</a> * lspdb)
<a name="l00601"></a>00601 {
<a name="l00602"></a>00602   <a class="code" href="structdnode__t.html">dnode_t</a> *dnode, *next;
<a name="l00603"></a>00603   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
<a name="l00604"></a>00604 
<a name="l00605"></a>00605   dnode = <a class="code" href="dict_8c.html#a2b439ffb63f9b3089d0306ec3b26672f">dict_first</a> (lspdb);
<a name="l00606"></a>00606   <span class="keywordflow">while</span> (dnode != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00607"></a>00607     {
<a name="l00608"></a>00608       next = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a> (lspdb, dnode);
<a name="l00609"></a>00609       lsp = <a class="code" href="dict_8h.html#a17fccc85aae3874de7152f103d5945bc">dnode_get</a> (dnode);
<a name="l00610"></a>00610       <span class="keywordflow">if</span> (<a class="code" href="isis__flags_8h.html#a7d42f17e426ff47043c37733fc3c672d">ISIS_CHECK_FLAG</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a03d0dd350cd760986f4907c5df08363a">SSNflags</a>, circuit))
<a name="l00611"></a>00611     <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (list, lsp);
<a name="l00612"></a>00612       dnode = next;
<a name="l00613"></a>00613     }
<a name="l00614"></a>00614 
<a name="l00615"></a>00615   <span class="keywordflow">return</span>;
<a name="l00616"></a>00616 }
<a name="l00617"></a>00617 
<a name="l00618"></a>00618 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00619"></a><a class="code" href="isis__lsp_8c.html#a6ae8e0acaadc3ea2b9cf07af727cef18">00619</a> <a class="code" href="isis__lsp_8c.html#a6ae8e0acaadc3ea2b9cf07af727cef18">lsp_set_time</a> (<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp)
<a name="l00620"></a>00620 {
<a name="l00621"></a>00621   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (lsp);
<a name="l00622"></a>00622 
<a name="l00623"></a>00623   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a> == 0)
<a name="l00624"></a>00624     {
<a name="l00625"></a>00625       <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#aa2d9dce6fceedcb6af88a73f2f5a0616">age_out</a> != 0)
<a name="l00626"></a>00626     lsp-&gt;<a class="code" href="structisis__lsp.html#aa2d9dce6fceedcb6af88a73f2f5a0616">age_out</a>--;
<a name="l00627"></a>00627       <span class="keywordflow">return</span>;
<a name="l00628"></a>00628     }
<a name="l00629"></a>00629 
<a name="l00630"></a>00630   <span class="comment">/* If we are turning 0 */</span>
<a name="l00631"></a>00631   <span class="comment">/* ISO 10589 - 7.3.16.4 first paragraph */</span>
<a name="l00632"></a>00632 
<a name="l00633"></a>00633   <span class="keywordflow">if</span> (ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a>) == 1)
<a name="l00634"></a>00634     {
<a name="l00635"></a>00635       <span class="comment">/* 7.3.16.4 a) set SRM flags on all */</span>
<a name="l00636"></a>00636       <a class="code" href="isis__flags_8h.html#a57f45d9b4a8c70c53f796d96e5555fac">ISIS_FLAGS_SET_ALL</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a96d155dbf3bbd20256cf7a68c8d9fd20">SRMflags</a>);
<a name="l00637"></a>00637       <span class="comment">/* 7.3.16.4 b) retain only the header FIXME  */</span>
<a name="l00638"></a>00638       <span class="comment">/* 7.3.16.4 c) record the time to purge FIXME (other way to do it) */</span>
<a name="l00639"></a>00639     }
<a name="l00640"></a>00640 
<a name="l00641"></a>00641   lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a> =
<a name="l00642"></a>00642     htons (ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a>) - 1);
<a name="l00643"></a>00643 }
<a name="l00644"></a>00644 
<a name="l00645"></a>00645 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00646"></a><a class="code" href="isis__lsp_8c.html#a5838ff5c762c49738cc88e9887fcb9fa">00646</a> <a class="code" href="isis__lsp_8c.html#a5838ff5c762c49738cc88e9887fcb9fa">lspid_print</a> (u_char * <a class="code" href="isis__pdu_8h.html#a2991a019d1da82fb5406bff5ab46dcf6">lsp_id</a>, u_char * trg, <span class="keywordtype">char</span> dynhost, <span class="keywordtype">char</span> frag)
<a name="l00647"></a>00647 {
<a name="l00648"></a>00648   <span class="keyword">struct </span><a class="code" href="structisis__dynhn.html">isis_dynhn</a> *dyn = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00649"></a>00649   u_char <span class="keywordtype">id</span>[<a class="code" href="isis__constants_8h.html#a68fe11cf734084dc335297de2f207eb1">SYSID_STRLEN</a>];
<a name="l00650"></a>00650 
<a name="l00651"></a>00651   <span class="keywordflow">if</span> (dynhost)
<a name="l00652"></a>00652     dyn = <a class="code" href="isis__dynhn_8c.html#af341024c92c783b9493cc98f7f04ec28">dynhn_find_by_id</a> (lsp_id);
<a name="l00653"></a>00653   <span class="keywordflow">else</span>
<a name="l00654"></a>00654     dyn = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00655"></a>00655 
<a name="l00656"></a>00656   <span class="keywordflow">if</span> (dyn)
<a name="l00657"></a>00657     sprintf ((<span class="keywordtype">char</span> *)<span class="keywordtype">id</span>, <span class="stringliteral">&quot;%.14s&quot;</span>, dyn-&gt;<a class="code" href="structisis__dynhn.html#a96fbe0fb7c4de340a9ed9f191859ac34">name</a>.<a class="code" href="structhostname.html#a0a14b55c4a1b6d672adfaa81b95936f3">name</a>);
<a name="l00658"></a>00658   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (!<a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (isis-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, lsp_id, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>) &amp; dynhost)
<a name="l00659"></a>00659     sprintf ((<span class="keywordtype">char</span> *)<span class="keywordtype">id</span>, <span class="stringliteral">&quot;%.14s&quot;</span>, <a class="code" href="isis__misc_8c.html#a5fc76e0c3f105d5a4ff9a9396e0fdbd7">unix_hostname</a> ());
<a name="l00660"></a>00660   <span class="keywordflow">else</span>
<a name="l00661"></a>00661     {
<a name="l00662"></a>00662       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (<span class="keywordtype">id</span>, <a class="code" href="isis__misc_8c.html#aabccf63144f92eecd0eb77f24ee98529">sysid_print</a> (lsp_id), 15);
<a name="l00663"></a>00663     }
<a name="l00664"></a>00664   <span class="keywordflow">if</span> (frag)
<a name="l00665"></a>00665     sprintf ((<span class="keywordtype">char</span> *)trg, <span class="stringliteral">&quot;%s.%02x-%02x&quot;</span>, <span class="keywordtype">id</span>, <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (lsp_id),
<a name="l00666"></a>00666          <a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (lsp_id));
<a name="l00667"></a>00667   <span class="keywordflow">else</span>
<a name="l00668"></a>00668     sprintf ((<span class="keywordtype">char</span> *)trg, <span class="stringliteral">&quot;%s.%02x&quot;</span>, <span class="keywordtype">id</span>, <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (lsp_id));
<a name="l00669"></a>00669 }
<a name="l00670"></a>00670 
<a name="l00671"></a>00671 <span class="comment">/* Convert the lsp attribute bits to attribute string */</span>
<a name="l00672"></a>00672 <span class="keyword">const</span> <span class="keywordtype">char</span> *
<a name="l00673"></a><a class="code" href="isis__lsp_8h.html#ad77c0026eada513f7540756eb141c5db">00673</a> <a class="code" href="isis__lsp_8c.html#a586294319acffcce0555e5e33377b7f6">lsp_bits2string</a> (u_char * <a class="code" href="isis__pdu_8h.html#a83e5f4c3dca022e24977611cd0a028b6">lsp_bits</a>)
<a name="l00674"></a>00674 {
<a name="l00675"></a>00675   <span class="keywordtype">char</span> *pos = <a class="code" href="isis__lsp_8c.html#ad3fb467068fe650f05f2e15b29a6cdf3">lsp_bits_string</a>;
<a name="l00676"></a>00676 
<a name="l00677"></a>00677   <span class="keywordflow">if</span> (!*lsp_bits)
<a name="l00678"></a>00678     <span class="keywordflow">return</span> <span class="stringliteral">&quot; none&quot;</span>;
<a name="l00679"></a>00679 
<a name="l00680"></a>00680   <span class="comment">/* we only focus on the default metric */</span>
<a name="l00681"></a>00681   pos += sprintf (pos, <span class="stringliteral">&quot;%d/&quot;</span>,
<a name="l00682"></a>00682           <a class="code" href="isis__constants_8h.html#acb0c822a1f2ac5ae6f8f126b9ff40c1a">ISIS_MASK_LSP_ATT_DEFAULT_BIT</a> (*lsp_bits) ? 1 : 0);
<a name="l00683"></a>00683 
<a name="l00684"></a>00684   pos += sprintf (pos, <span class="stringliteral">&quot;%d/&quot;</span>,
<a name="l00685"></a>00685           <a class="code" href="isis__constants_8h.html#add4793b649af03283f05960b902635e7">ISIS_MASK_LSP_PARTITION_BIT</a> (*lsp_bits) ? 1 : 0);
<a name="l00686"></a>00686 
<a name="l00687"></a>00687   pos += sprintf (pos, <span class="stringliteral">&quot;%d&quot;</span>, <a class="code" href="isis__constants_8h.html#a639588aea28dd1c81a81576d97df28cb">ISIS_MASK_LSP_OL_BIT</a> (*lsp_bits) ? 1 : 0);
<a name="l00688"></a>00688 
<a name="l00689"></a>00689   *(pos) = <span class="charliteral">&#39;\0&#39;</span>;
<a name="l00690"></a>00690 
<a name="l00691"></a>00691   <span class="keywordflow">return</span> <a class="code" href="isis__lsp_8c.html#ad3fb467068fe650f05f2e15b29a6cdf3">lsp_bits_string</a>;
<a name="l00692"></a>00692 }
<a name="l00693"></a>00693 
<a name="l00694"></a>00694 <span class="comment">/* this function prints the lsp on show isis database */</span>
<a name="l00695"></a>00695 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00696"></a><a class="code" href="isis__lsp_8c.html#a613e1f38d40f5feb02c859dd8933b5c5">00696</a> <a class="code" href="isis__lsp_8c.html#a613e1f38d40f5feb02c859dd8933b5c5">lsp_print</a> (<a class="code" href="structdnode__t.html">dnode_t</a> * node, <span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>, <span class="keywordtype">char</span> dynhost)
<a name="l00697"></a>00697 {
<a name="l00698"></a>00698   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp = <a class="code" href="dict_8h.html#a17fccc85aae3874de7152f103d5945bc">dnode_get</a> (node);
<a name="l00699"></a>00699   u_char LSPid[255];
<a name="l00700"></a>00700 
<a name="l00701"></a>00701   <a class="code" href="isis__lsp_8c.html#a5838ff5c762c49738cc88e9887fcb9fa">lspid_print</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>, LSPid, dynhost, 1);
<a name="l00702"></a>00702   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%-21s%c   &quot;</span>, LSPid, lsp-&gt;<a class="code" href="structisis__lsp.html#a92fb19d67740e3bfde012e19af97b7d3">own_lsp</a> ? <span class="charliteral">&#39;*&#39;</span> : <span class="charliteral">&#39; &#39;</span>);
<a name="l00703"></a>00703   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;0x%08x   &quot;</span>, ntohl (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a>));
<a name="l00704"></a>00704   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;0x%04x      &quot;</span>, ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#afb16ee6cc606527cc2705773cc2b79c4">checksum</a>));
<a name="l00705"></a>00705 
<a name="l00706"></a>00706   <span class="keywordflow">if</span> (ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a>) == 0)
<a name="l00707"></a>00707     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; (%2u)&quot;</span>, lsp-&gt;<a class="code" href="structisis__lsp.html#aa2d9dce6fceedcb6af88a73f2f5a0616">age_out</a>);
<a name="l00708"></a>00708   <span class="keywordflow">else</span>
<a name="l00709"></a>00709     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%5u&quot;</span>, ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a>));
<a name="l00710"></a>00710 
<a name="l00711"></a>00711   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;         %s%s&quot;</span>,
<a name="l00712"></a>00712        <a class="code" href="isis__lsp_8c.html#a586294319acffcce0555e5e33377b7f6">lsp_bits2string</a> (&amp;lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a405c4b662dc97846dcca65f5c851f485">lsp_bits</a>), <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00713"></a>00713 }
<a name="l00714"></a>00714 
<a name="l00715"></a>00715 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00716"></a><a class="code" href="isis__lsp_8c.html#a2a648621d46f28687f81bf572bd3e711">00716</a> <a class="code" href="isis__lsp_8c.html#a2a648621d46f28687f81bf572bd3e711">lsp_print_detail</a> (<a class="code" href="structdnode__t.html">dnode_t</a> * node, <span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>, <span class="keywordtype">char</span> dynhost)
<a name="l00717"></a>00717 {
<a name="l00718"></a>00718   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp = <a class="code" href="dict_8h.html#a17fccc85aae3874de7152f103d5945bc">dnode_get</a> (node);
<a name="l00719"></a>00719   <span class="keyword">struct </span><a class="code" href="structarea__addr.html">area_addr</a> *<a class="code" href="structarea__addr.html#ac84395fbe3f40a45edf1d7ab43a701da">area_addr</a>;
<a name="l00720"></a>00720   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l00721"></a>00721   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *lnode;
<a name="l00722"></a>00722   <span class="keyword">struct </span><a class="code" href="structis__neigh.html">is_neigh</a> *<a class="code" href="structis__neigh.html">is_neigh</a>;
<a name="l00723"></a>00723   <span class="keyword">struct </span><a class="code" href="structte__is__neigh.html">te_is_neigh</a> *<a class="code" href="structte__is__neigh.html">te_is_neigh</a>;
<a name="l00724"></a>00724   <span class="keyword">struct </span><a class="code" href="structipv4__reachability.html">ipv4_reachability</a> *ipv4_reach;
<a name="l00725"></a>00725   <span class="keyword">struct </span>in_addr *ipv4_addr;
<a name="l00726"></a>00726   <span class="keyword">struct </span><a class="code" href="structte__ipv4__reachability.html">te_ipv4_reachability</a> *te_ipv4_reach;
<a name="l00727"></a>00727 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00728"></a>00728 <span class="preprocessor"></span>  <span class="keyword">struct </span>ipv6_reachability *ipv6_reach;
<a name="l00729"></a>00729   <span class="keyword">struct </span>in6_addr in6;
<a name="l00730"></a>00730   u_char buff[BUFSIZ];
<a name="l00731"></a>00731 <span class="preprocessor">#endif</span>
<a name="l00732"></a>00732 <span class="preprocessor"></span>  u_char LSPid[255];
<a name="l00733"></a>00733   u_char <a class="code" href="structhostname.html">hostname</a>[255];
<a name="l00734"></a>00734   u_char ipv4_reach_prefix[20];
<a name="l00735"></a>00735   u_char ipv4_reach_mask[20];
<a name="l00736"></a>00736   u_char ipv4_address[20];
<a name="l00737"></a>00737 
<a name="l00738"></a>00738   <a class="code" href="isis__lsp_8c.html#a5838ff5c762c49738cc88e9887fcb9fa">lspid_print</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>, LSPid, dynhost, 1);
<a name="l00739"></a>00739   <a class="code" href="isis__lsp_8c.html#a613e1f38d40f5feb02c859dd8933b5c5">lsp_print</a> (node, vty, dynhost);
<a name="l00740"></a>00740 
<a name="l00741"></a>00741   <span class="comment">/* for all area address */</span>
<a name="l00742"></a>00742   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a11d8deaa75c26e958cff5f74fee3ef10">area_addrs</a>)
<a name="l00743"></a>00743     <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a11d8deaa75c26e958cff5f74fee3ef10">area_addrs</a>, lnode, area_addr))
<a name="l00744"></a>00744       {
<a name="l00745"></a>00745     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  Area Address: %s%s&quot;</span>,
<a name="l00746"></a>00746          <a class="code" href="isis__misc_8c.html#a5032aed64ad562c17d81f07afad28209">isonet_print</a> (area_addr-&gt;<a class="code" href="structarea__addr.html#ac84395fbe3f40a45edf1d7ab43a701da">area_addr</a>, area_addr-&gt;<a class="code" href="structarea__addr.html#ae735a6ff10c8e48ebe4e98a06e194a82">addr_len</a>),
<a name="l00747"></a>00747          <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00748"></a>00748       }
<a name="l00749"></a>00749   
<a name="l00750"></a>00750   <span class="comment">/* for the nlpid tlv */</span>
<a name="l00751"></a>00751   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a>)
<a name="l00752"></a>00752     {
<a name="l00753"></a>00753       <span class="keywordflow">for</span> (i = 0; i &lt; lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a>-&gt;<a class="code" href="structnlpids.html#a73f0f5f1e7aa64694d5802b91af6533b">count</a>; i++)
<a name="l00754"></a>00754     {
<a name="l00755"></a>00755       <span class="keywordflow">switch</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a>-&gt;<a class="code" href="structnlpids.html#a6dbd263750da21187880986a50fd5857">nlpids</a>[i])
<a name="l00756"></a>00756         {
<a name="l00757"></a>00757         <span class="keywordflow">case</span> <a class="code" href="isis__constants_8h.html#a9c1ffc4a81108d901cd8914d20cd4caf">NLPID_IP</a>:
<a name="l00758"></a>00758         <span class="keywordflow">case</span> <a class="code" href="isis__constants_8h.html#af33b1ac580353b4a2ec3b766d5f90464">NLPID_IPV6</a>:
<a name="l00759"></a>00759           <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  NLPID:        0x%X%s&quot;</span>,
<a name="l00760"></a>00760                lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a>-&gt;<a class="code" href="structnlpids.html#a6dbd263750da21187880986a50fd5857">nlpids</a>[i], <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00761"></a>00761           <span class="keywordflow">break</span>;
<a name="l00762"></a>00762         <span class="keywordflow">default</span>:
<a name="l00763"></a>00763           <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  NLPID:        %s%s&quot;</span>, <span class="stringliteral">&quot;unknown&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00764"></a>00764           <span class="keywordflow">break</span>;
<a name="l00765"></a>00765         }
<a name="l00766"></a>00766     }
<a name="l00767"></a>00767     }
<a name="l00768"></a>00768 
<a name="l00769"></a>00769   <span class="comment">/* for the hostname tlv */</span>
<a name="l00770"></a>00770   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac2b8abaebfab8d2a55242d83a87a3e70">hostname</a>)
<a name="l00771"></a>00771     {
<a name="l00772"></a>00772       memset (hostname, 0, <span class="keyword">sizeof</span> (hostname));
<a name="l00773"></a>00773       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (hostname, lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac2b8abaebfab8d2a55242d83a87a3e70">hostname</a>-&gt;<a class="code" href="structhostname.html#a0a14b55c4a1b6d672adfaa81b95936f3">name</a>,
<a name="l00774"></a>00774           lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac2b8abaebfab8d2a55242d83a87a3e70">hostname</a>-&gt;<a class="code" href="structhostname.html#af410706acabde261182a41b3579b04b6">namelen</a>);
<a name="l00775"></a>00775       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  Hostname: %s%s&quot;</span>, hostname, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00776"></a>00776     }
<a name="l00777"></a>00777 
<a name="l00778"></a>00778   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae9ef317829a76d7a79d2789786a2ac1f">ipv4_addrs</a>)
<a name="l00779"></a>00779     <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae9ef317829a76d7a79d2789786a2ac1f">ipv4_addrs</a>, lnode, ipv4_addr))
<a name="l00780"></a>00780       {
<a name="l00781"></a>00781     <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (ipv4_address, inet_ntoa (*ipv4_addr), <span class="keyword">sizeof</span> (ipv4_address));
<a name="l00782"></a>00782     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  IP:        %s%s&quot;</span>, ipv4_address, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00783"></a>00783       }
<a name="l00784"></a>00784 
<a name="l00785"></a>00785   <span class="comment">/* TE router id */</span>
<a name="l00786"></a>00786   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a84e7120ac1718546fc9bb3f80470ca69">router_id</a>)
<a name="l00787"></a>00787     {
<a name="l00788"></a>00788       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (ipv4_address, inet_ntoa (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a84e7120ac1718546fc9bb3f80470ca69">router_id</a>-&gt;<a class="code" href="structte__router__id.html#a859c4ce8787ff3914c4c7863ad187740">id</a>),
<a name="l00789"></a>00789           sizeof (ipv4_address));
<a name="l00790"></a>00790       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  Router ID: %s%s&quot;</span>, ipv4_address, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00791"></a>00791     }
<a name="l00792"></a>00792 
<a name="l00793"></a>00793   <span class="comment">/* for the IS neighbor tlv */</span>
<a name="l00794"></a>00794   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>)
<a name="l00795"></a>00795     <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>, lnode, is_neigh))
<a name="l00796"></a>00796       {
<a name="l00797"></a>00797     <a class="code" href="isis__lsp_8c.html#a5838ff5c762c49738cc88e9887fcb9fa">lspid_print</a> (is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>, LSPid, dynhost, 0);
<a name="l00798"></a>00798     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  Metric: %-10d IS %s%s&quot;</span>,
<a name="l00799"></a>00799          is_neigh-&gt;<a class="code" href="structis__neigh.html#a89a2c799e58b8ab95549581a06f2a53a">metrics</a>.<a class="code" href="structmetric.html#ae927ddb546511096f632820b678d73bf">metric_default</a>, LSPid, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00800"></a>00800       }
<a name="l00801"></a>00801   
<a name="l00802"></a>00802   <span class="comment">/* for the internal reachable tlv */</span>
<a name="l00803"></a>00803   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a202838cf00b9aeb6f746c11c8a421642">ipv4_int_reachs</a>)
<a name="l00804"></a>00804     <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a202838cf00b9aeb6f746c11c8a421642">ipv4_int_reachs</a>, lnode,
<a name="l00805"></a>00805                    ipv4_reach))
<a name="l00806"></a>00806     {
<a name="l00807"></a>00807       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (ipv4_reach_prefix, inet_ntoa (ipv4_reach-&gt;<a class="code" href="structipv4__reachability.html#a7ae516558fddb6aca89c864bd2d23d30">prefix</a>),
<a name="l00808"></a>00808           sizeof (ipv4_reach_prefix));
<a name="l00809"></a>00809       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (ipv4_reach_mask, inet_ntoa (ipv4_reach-&gt;<a class="code" href="structipv4__reachability.html#a229b4c7635d0a94d260c0929125399ee">mask</a>),
<a name="l00810"></a>00810           sizeof (ipv4_reach_mask));
<a name="l00811"></a>00811       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  Metric: %-10d IP-Internal %s %s%s&quot;</span>,
<a name="l00812"></a>00812            ipv4_reach-&gt;<a class="code" href="structipv4__reachability.html#a9fb77b6ac90d3fc4f7bfbd7f4843543a">metrics</a>.<a class="code" href="structmetric.html#ae927ddb546511096f632820b678d73bf">metric_default</a>, ipv4_reach_prefix,
<a name="l00813"></a>00813            ipv4_reach_mask, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00814"></a>00814     }
<a name="l00815"></a>00815 
<a name="l00816"></a>00816   <span class="comment">/* for the external reachable tlv */</span>
<a name="l00817"></a>00817   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a24de94a53f11ec8f24e9f133ba2f63c3">ipv4_ext_reachs</a>)
<a name="l00818"></a>00818     <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a24de94a53f11ec8f24e9f133ba2f63c3">ipv4_ext_reachs</a>, lnode, 
<a name="l00819"></a>00819                    ipv4_reach))
<a name="l00820"></a>00820     {
<a name="l00821"></a>00821       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (ipv4_reach_prefix, inet_ntoa (ipv4_reach-&gt;<a class="code" href="structipv4__reachability.html#a7ae516558fddb6aca89c864bd2d23d30">prefix</a>),
<a name="l00822"></a>00822           sizeof (ipv4_reach_prefix));
<a name="l00823"></a>00823       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (ipv4_reach_mask, inet_ntoa (ipv4_reach-&gt;<a class="code" href="structipv4__reachability.html#a229b4c7635d0a94d260c0929125399ee">mask</a>),
<a name="l00824"></a>00824           sizeof (ipv4_reach_mask));
<a name="l00825"></a>00825       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  Metric: %-10d IP-External %s %s%s&quot;</span>,
<a name="l00826"></a>00826            ipv4_reach-&gt;<a class="code" href="structipv4__reachability.html#a9fb77b6ac90d3fc4f7bfbd7f4843543a">metrics</a>.<a class="code" href="structmetric.html#ae927ddb546511096f632820b678d73bf">metric_default</a>, ipv4_reach_prefix,
<a name="l00827"></a>00827            ipv4_reach_mask, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00828"></a>00828     }
<a name="l00829"></a>00829   
<a name="l00830"></a>00830   <span class="comment">/* IPv6 tlv */</span>
<a name="l00831"></a>00831 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00832"></a>00832 <span class="preprocessor"></span>  <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.ipv6_reachs)
<a name="l00833"></a>00833     <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.ipv6_reachs, lnode, ipv6_reach))
<a name="l00834"></a>00834     {
<a name="l00835"></a>00835       memset (&amp;in6, 0, <span class="keyword">sizeof</span> (in6));
<a name="l00836"></a>00836       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (in6.s6_addr, ipv6_reach-&gt;prefix,
<a name="l00837"></a>00837           <a class="code" href="bgpd_8h.html#a472145011d944606a257487e80cc3ace">PSIZE</a> (ipv6_reach-&gt;prefix_len));
<a name="l00838"></a>00838       <a class="code" href="sockunion_8c.html#a5bfb767e8fa3f9ff5d2a1e19d71791f4">inet_ntop</a> (AF_INET6, &amp;in6, (<span class="keywordtype">char</span> *)buff, BUFSIZ);
<a name="l00839"></a>00839       <span class="keywordflow">if</span> ((ipv6_reach-&gt;control_info &amp;&amp;
<a name="l00840"></a>00840        <a class="code" href="isis__tlv_8h.html#a8cdce234e266e12e1ee3f3f232a4d6c1">CTRL_INFO_DISTRIBUTION</a>) == <a class="code" href="isis__tlv_8h.html#a6efedb856f37106e728f0b09cefe9f0c">DISTRIBUTION_INTERNAL</a>)
<a name="l00841"></a>00841     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  Metric: %-10d IPv6-Internal %s/%d%s&quot;</span>,
<a name="l00842"></a>00842          ntohl (ipv6_reach-&gt;metric),
<a name="l00843"></a>00843          buff, ipv6_reach-&gt;prefix_len, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00844"></a>00844       <span class="keywordflow">else</span>
<a name="l00845"></a>00845     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  Metric: %-10d IPv6-External %s/%d%s&quot;</span>,
<a name="l00846"></a>00846          ntohl (ipv6_reach-&gt;metric),
<a name="l00847"></a>00847          buff, ipv6_reach-&gt;prefix_len, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00848"></a>00848     }
<a name="l00849"></a>00849 <span class="preprocessor">#endif</span>
<a name="l00850"></a>00850 <span class="preprocessor"></span>
<a name="l00851"></a>00851   <span class="comment">/* TE IS neighbor tlv */</span>
<a name="l00852"></a>00852   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>)
<a name="l00853"></a>00853     <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>, lnode, te_is_neigh))
<a name="l00854"></a>00854     {
<a name="l00855"></a>00855       uint32_t <a class="code" href="structmetric.html">metric</a>;
<a name="l00856"></a>00856       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;metric, te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#a7158aa6efe17579d240123affa0a543c">te_metric</a>, 3);
<a name="l00857"></a>00857       <a class="code" href="isis__lsp_8c.html#a5838ff5c762c49738cc88e9887fcb9fa">lspid_print</a> (te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>, LSPid, dynhost, 0);
<a name="l00858"></a>00858       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  Metric: %-10d IS-Extended %s%s&quot;</span>,
<a name="l00859"></a>00859            ntohl (metric &lt;&lt; 8), LSPid, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00860"></a>00860     }
<a name="l00861"></a>00861 
<a name="l00862"></a>00862   <span class="comment">/* TE IPv4 tlv */</span>
<a name="l00863"></a>00863   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac827f5db217d1de5cc2a58c9b5a9cf81">te_ipv4_reachs</a>)
<a name="l00864"></a>00864     <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac827f5db217d1de5cc2a58c9b5a9cf81">te_ipv4_reachs</a>, lnode,
<a name="l00865"></a>00865                    te_ipv4_reach))
<a name="l00866"></a>00866     {
<a name="l00867"></a>00867       <span class="comment">/* FIXME: There should be better way to output this stuff. */</span>
<a name="l00868"></a>00868       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;  Metric: %-10d IP-Extended %s/%d%s&quot;</span>,
<a name="l00869"></a>00869            ntohl (te_ipv4_reach-&gt;<a class="code" href="structte__ipv4__reachability.html#a9704689f0bbfff1997a158427765060e">te_metric</a>),
<a name="l00870"></a>00870            inet_ntoa (<a class="code" href="isis__misc_8c.html#af795aa21c24ab7f8e6e942be669bfc34">newprefix2inaddr</a> (&amp;te_ipv4_reach-&gt;<a class="code" href="structte__ipv4__reachability.html#ad50dc67e9a53223f8083d85cbb727bfa">prefix_start</a>,
<a name="l00871"></a>00871                         te_ipv4_reach-&gt;<a class="code" href="structte__ipv4__reachability.html#ab886131ddaf522d8bc34610687a79309">control</a>)),
<a name="l00872"></a>00872            te_ipv4_reach-&gt;<a class="code" href="structte__ipv4__reachability.html#ab886131ddaf522d8bc34610687a79309">control</a> &amp; 0x3F, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00873"></a>00873     }
<a name="l00874"></a>00874 
<a name="l00875"></a>00875   <span class="keywordflow">return</span>;
<a name="l00876"></a>00876 }
<a name="l00877"></a>00877 
<a name="l00878"></a>00878 <span class="comment">/* print all the lsps info in the local lspdb */</span>
<a name="l00879"></a>00879 <span class="keywordtype">int</span>
<a name="l00880"></a><a class="code" href="isis__lsp_8h.html#a9a7fe85e348f02c16f09905ca70c6187">00880</a> <a class="code" href="isis__lsp_8c.html#a9a7fe85e348f02c16f09905ca70c6187">lsp_print_all</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>, <a class="code" href="structdict__t.html">dict_t</a> * lspdb, <span class="keywordtype">char</span> detail, <span class="keywordtype">char</span> dynhost)
<a name="l00881"></a>00881 {
<a name="l00882"></a>00882 
<a name="l00883"></a>00883   <a class="code" href="structdnode__t.html">dnode_t</a> *node = <a class="code" href="dict_8c.html#a2b439ffb63f9b3089d0306ec3b26672f">dict_first</a> (lspdb), *next;
<a name="l00884"></a>00884   <span class="keywordtype">int</span> lsp_count = 0;
<a name="l00885"></a>00885 
<a name="l00886"></a>00886   <span class="comment">/* print the title, for both modes */</span>
<a name="l00887"></a>00887   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;LSP ID                   LSP Seq Num  LSP Checksum &quot;</span>
<a name="l00888"></a>00888        <span class="stringliteral">&quot;LSP Holdtime ATT/P/OL%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l00889"></a>00889 
<a name="l00890"></a>00890   <span class="keywordflow">if</span> (detail == <a class="code" href="isis__misc_8h.html#aaf105ae5beaca1dee30ae54530691fcea9b67ed2ae41434b0cc2a75d7be8b9576">ISIS_UI_LEVEL_BRIEF</a>)
<a name="l00891"></a>00891     {
<a name="l00892"></a>00892       <span class="keywordflow">while</span> (node != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00893"></a>00893     {
<a name="l00894"></a>00894       <span class="comment">/* I think it is unnecessary, so I comment it out */</span>
<a name="l00895"></a>00895       <span class="comment">/* dict_contains (lspdb, node); */</span>
<a name="l00896"></a>00896       next = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a> (lspdb, node);
<a name="l00897"></a>00897       <a class="code" href="isis__lsp_8c.html#a613e1f38d40f5feb02c859dd8933b5c5">lsp_print</a> (node, vty, dynhost);
<a name="l00898"></a>00898       node = next;
<a name="l00899"></a>00899       lsp_count++;
<a name="l00900"></a>00900     }
<a name="l00901"></a>00901     }
<a name="l00902"></a>00902   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (detail == <a class="code" href="isis__misc_8h.html#aaf105ae5beaca1dee30ae54530691fcea92418876d4e4e759a009d13598364ae4">ISIS_UI_LEVEL_DETAIL</a>)
<a name="l00903"></a>00903     {
<a name="l00904"></a>00904       <span class="keywordflow">while</span> (node != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00905"></a>00905     {
<a name="l00906"></a>00906       next = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a> (lspdb, node);
<a name="l00907"></a>00907       <a class="code" href="isis__lsp_8c.html#a2a648621d46f28687f81bf572bd3e711">lsp_print_detail</a> (node, vty, dynhost);
<a name="l00908"></a>00908       node = next;
<a name="l00909"></a>00909       lsp_count++;
<a name="l00910"></a>00910     }
<a name="l00911"></a>00911     }
<a name="l00912"></a>00912 
<a name="l00913"></a>00913   <span class="keywordflow">return</span> lsp_count;
<a name="l00914"></a>00914 }
<a name="l00915"></a>00915 
<a name="l00916"></a><a class="code" href="isis__lsp_8c.html#ad16a88039454fce8d98bf77f09064204">00916</a> <span class="preprocessor">#define FRAG_THOLD(S,T) \</span>
<a name="l00917"></a>00917 <span class="preprocessor">((STREAM_SIZE(S)*T)/100)</span>
<a name="l00918"></a>00918 <span class="preprocessor"></span>
<a name="l00919"></a>00919 <span class="comment">/* stream*, area-&gt;lsp_frag_threshold, increment */</span>
<a name="l00920"></a><a class="code" href="isis__lsp_8c.html#acf35e8db3f0edc24594ad5db4e35f4e6">00920</a> <span class="preprocessor">#define FRAG_NEEDED(S,T,I) \</span>
<a name="l00921"></a>00921 <span class="preprocessor">  (STREAM_SIZE(S)-STREAM_REMAIN(S)+(I) &gt; FRAG_THOLD(S,T))</span>
<a name="l00922"></a>00922 <span class="preprocessor"></span>
<a name="l00923"></a>00923 <span class="comment">/* FIXME: It shouldn&#39;t be necessary to pass tlvsize here, TLVs can have</span>
<a name="l00924"></a>00924 <span class="comment"> * variable length (TE TLVs, sub TLVs). */</span>
<a name="l00925"></a>00925 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00926"></a><a class="code" href="isis__lsp_8c.html#a87fb50a6271da943f8910022759b915e">00926</a> <a class="code" href="isis__lsp_8c.html#a87fb50a6271da943f8910022759b915e">lsp_tlv_fit</a> (<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp, <span class="keyword">struct</span> <a class="code" href="structlist.html">list</a> **from, <span class="keyword">struct</span> <a class="code" href="structlist.html">list</a> **to,
<a name="l00927"></a>00927          <span class="keywordtype">int</span> tlvsize, <span class="keywordtype">int</span> frag_thold,
<a name="l00928"></a>00928          <span class="keywordtype">int</span> tlv_build_func (<span class="keyword">struct</span> <a class="code" href="structlist.html">list</a> *, <span class="keyword">struct</span> <a class="code" href="structstream.html">stream</a> *))
<a name="l00929"></a>00929 {
<a name="l00930"></a>00930   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a66e3fedede6aa372e5196e55e5e8d5c1">count</a>, <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l00931"></a>00931 
<a name="l00932"></a>00932   <span class="comment">/* can we fit all ? */</span>
<a name="l00933"></a>00933   <span class="keywordflow">if</span> (!<a class="code" href="isis__lsp_8c.html#acf35e8db3f0edc24594ad5db4e35f4e6">FRAG_NEEDED</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>, frag_thold, <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (*from) * tlvsize + 2))
<a name="l00934"></a>00934     {
<a name="l00935"></a>00935       tlv_build_func (*from, lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>);
<a name="l00936"></a>00936       *to = *from;
<a name="l00937"></a>00937       *from = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00938"></a>00938     }
<a name="l00939"></a>00939   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (!<a class="code" href="isis__lsp_8c.html#acf35e8db3f0edc24594ad5db4e35f4e6">FRAG_NEEDED</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>, frag_thold, tlvsize + 2))
<a name="l00940"></a>00940     {
<a name="l00941"></a>00941       <span class="comment">/* fit all we can */</span>
<a name="l00942"></a>00942       count = <a class="code" href="isis__lsp_8c.html#ad16a88039454fce8d98bf77f09064204">FRAG_THOLD</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>, frag_thold) - 2 -
<a name="l00943"></a>00943     (<a class="code" href="stream_8h.html#a6e3b6e25ed5cfa2faea8485414a0c1a4">STREAM_SIZE</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>) - <a class="code" href="stream_8h.html#a4705f0b1797c4f896404ec1549c91017">STREAM_REMAIN</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>));
<a name="l00944"></a>00944       <span class="keywordflow">if</span> (count)
<a name="l00945"></a>00945     count = count / tlvsize;
<a name="l00946"></a>00946       <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="spgrid_8c.html#a66e3fedede6aa372e5196e55e5e8d5c1">count</a>; i++)
<a name="l00947"></a>00947     {
<a name="l00948"></a>00948       <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (*to, <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (<a class="code" href="linklist_8h.html#a3d4492ca03b023aeecd4d6b0cdaa16fb">listhead</a> (*from)));
<a name="l00949"></a>00949       <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (*from, <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (<a class="code" href="linklist_8h.html#a3d4492ca03b023aeecd4d6b0cdaa16fb">listhead</a> (*from)));
<a name="l00950"></a>00950     }
<a name="l00951"></a>00951       tlv_build_func (*to, lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>);
<a name="l00952"></a>00952     }
<a name="l00953"></a>00953   lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6f17d9f3a17625db25044ff0ff3da330">pdu_len</a> = htons (<a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>));
<a name="l00954"></a>00954   <span class="keywordflow">return</span>;
<a name="l00955"></a>00955 }
<a name="l00956"></a>00956 
<a name="l00957"></a>00957 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *
<a name="l00958"></a><a class="code" href="isis__lsp_8c.html#aab829620b2263604cc5c0233d5a5b099">00958</a> <a class="code" href="isis__lsp_8c.html#aab829620b2263604cc5c0233d5a5b099">lsp_next_frag</a> (u_char frag_num, <span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp0, <span class="keyword">struct</span> <a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>,
<a name="l00959"></a>00959            <span class="keywordtype">int</span> <a class="code" href="structisis__lsp.html#ab719e4479e4fc861c4cfa7a3c9d403c6">level</a>)
<a name="l00960"></a>00960 {
<a name="l00961"></a>00961   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
<a name="l00962"></a>00962   u_char frag_id[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 2];
<a name="l00963"></a>00963 
<a name="l00964"></a>00964   <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (frag_id, lsp0-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 1);
<a name="l00965"></a>00965   <a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (frag_id) = frag_num;
<a name="l00966"></a>00966   lsp = <a class="code" href="isis__lsp_8c.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (frag_id, area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level - 1]);
<a name="l00967"></a>00967   <span class="keywordflow">if</span> (lsp)
<a name="l00968"></a>00968     {
<a name="l00969"></a>00969       <span class="comment">/*</span>
<a name="l00970"></a>00970 <span class="comment">       * Clear the TLVs, but inherit the authinfo</span>
<a name="l00971"></a>00971 <span class="comment">       */</span>
<a name="l00972"></a>00972       <a class="code" href="isis__lsp_8c.html#aa0d51cf5f190804be9b73b52db69ccd6">lsp_clear_data</a> (lsp);
<a name="l00973"></a>00973       <span class="keywordflow">if</span> (lsp0-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a53dc2cb65bc632c84b3d702ab1dc16ce">auth_info</a>.<a class="code" href="structisis__passwd.html#a874984e0745fbcb41df9f463d831be67">type</a>)
<a name="l00974"></a>00974     {
<a name="l00975"></a>00975       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a53dc2cb65bc632c84b3d702ab1dc16ce">auth_info</a>, &amp;lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a53dc2cb65bc632c84b3d702ab1dc16ce">auth_info</a>,
<a name="l00976"></a>00976           sizeof (<span class="keyword">struct</span> <a class="code" href="structisis__passwd.html">isis_passwd</a>));
<a name="l00977"></a>00977       <a class="code" href="isis__tlv_8c.html#a02f053566530986751054dcf500af3a9">tlv_add_authinfo</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a53dc2cb65bc632c84b3d702ab1dc16ce">auth_info</a>.<a class="code" href="structisis__passwd.html#a874984e0745fbcb41df9f463d831be67">type</a>,
<a name="l00978"></a>00978                 lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a53dc2cb65bc632c84b3d702ab1dc16ce">auth_info</a>.<a class="code" href="structisis__passwd.html#a3981443a6501783995b003ab8fd82f48">len</a>,
<a name="l00979"></a>00979                 lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a53dc2cb65bc632c84b3d702ab1dc16ce">auth_info</a>.<a class="code" href="structisis__passwd.html#a4af92e1126df2d7d2abeef451c082567">passwd</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>);
<a name="l00980"></a>00980     }
<a name="l00981"></a>00981       <span class="keywordflow">return</span> lsp;
<a name="l00982"></a>00982     }
<a name="l00983"></a>00983   lsp = <a class="code" href="isis__lsp_8c.html#af43ff22a21554145c239b6c37556ce1a">lsp_new</a> (frag_id, area-&gt;<a class="code" href="structisis__area.html#af0e5e6cfa7b7536e0700dd3645025d9b">max_lsp_lifetime</a>[level - 1], 0, area-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a>,
<a name="l00984"></a>00984          0, level);
<a name="l00985"></a>00985   lsp-&gt;<a class="code" href="structisis__lsp.html#a92fb19d67740e3bfde012e19af97b7d3">own_lsp</a> = 1;
<a name="l00986"></a>00986   <a class="code" href="isis__lsp_8c.html#a09d8f3bcc073c87f01c32b2f0994fb04">lsp_insert</a> (lsp, area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level - 1]);
<a name="l00987"></a>00987   <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (lsp0-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a>, lsp);
<a name="l00988"></a>00988   lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#a3113261380202a14a924c31ca87cdee1">zero_lsp</a> = lsp0;
<a name="l00989"></a>00989   <span class="comment">/*</span>
<a name="l00990"></a>00990 <span class="comment">   * Copy the authinfo from zero LSP</span>
<a name="l00991"></a>00991 <span class="comment">   */</span>
<a name="l00992"></a>00992   <span class="keywordflow">if</span> (lsp0-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a53dc2cb65bc632c84b3d702ab1dc16ce">auth_info</a>.<a class="code" href="structisis__passwd.html#a874984e0745fbcb41df9f463d831be67">type</a>)
<a name="l00993"></a>00993     {
<a name="l00994"></a>00994       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a53dc2cb65bc632c84b3d702ab1dc16ce">auth_info</a>, &amp;lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a53dc2cb65bc632c84b3d702ab1dc16ce">auth_info</a>,
<a name="l00995"></a>00995           sizeof (<span class="keyword">struct</span> <a class="code" href="structisis__passwd.html">isis_passwd</a>));
<a name="l00996"></a>00996       <a class="code" href="isis__tlv_8c.html#a02f053566530986751054dcf500af3a9">tlv_add_authinfo</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a53dc2cb65bc632c84b3d702ab1dc16ce">auth_info</a>.<a class="code" href="structisis__passwd.html#a874984e0745fbcb41df9f463d831be67">type</a>,
<a name="l00997"></a>00997             lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a53dc2cb65bc632c84b3d702ab1dc16ce">auth_info</a>.<a class="code" href="structisis__passwd.html#a3981443a6501783995b003ab8fd82f48">len</a>,
<a name="l00998"></a>00998             lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a53dc2cb65bc632c84b3d702ab1dc16ce">auth_info</a>.<a class="code" href="structisis__passwd.html#a4af92e1126df2d7d2abeef451c082567">passwd</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>);
<a name="l00999"></a>00999     }
<a name="l01000"></a>01000   <span class="keywordflow">return</span> lsp;
<a name="l01001"></a>01001 }
<a name="l01002"></a>01002 
<a name="l01003"></a>01003 <span class="comment">/*</span>
<a name="l01004"></a>01004 <span class="comment"> * Builds the LSP data part. This func creates a new frag whenever </span>
<a name="l01005"></a>01005 <span class="comment"> * area-&gt;lsp_frag_threshold is exceeded.</span>
<a name="l01006"></a>01006 <span class="comment"> */</span>
<a name="l01007"></a>01007 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01008"></a><a class="code" href="isis__lsp_8c.html#a8e44fcf09744fc11e91c6af9bcd17c7c">01008</a> <a class="code" href="isis__lsp_8c.html#a8e44fcf09744fc11e91c6af9bcd17c7c">lsp_build_nonpseudo</a> (<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp, <span class="keyword">struct</span> <a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l01009"></a>01009 {
<a name="l01010"></a>01010   <span class="keyword">struct </span><a class="code" href="structis__neigh.html">is_neigh</a> *<a class="code" href="structis__neigh.html">is_neigh</a>;
<a name="l01011"></a>01011   <span class="keyword">struct </span><a class="code" href="structte__is__neigh.html">te_is_neigh</a> *<a class="code" href="structte__is__neigh.html">te_is_neigh</a>;
<a name="l01012"></a>01012   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *ipnode;
<a name="l01013"></a>01013   <span class="keywordtype">int</span> level = lsp-&gt;<a class="code" href="structisis__lsp.html#ab719e4479e4fc861c4cfa7a3c9d403c6">level</a>;
<a name="l01014"></a>01014   <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
<a name="l01015"></a>01015   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *ipv4;
<a name="l01016"></a>01016   <span class="keyword">struct </span><a class="code" href="structipv4__reachability.html">ipv4_reachability</a> *ipreach;
<a name="l01017"></a>01017   <span class="keyword">struct </span><a class="code" href="structte__ipv4__reachability.html">te_ipv4_reachability</a> *te_ipreach;
<a name="l01018"></a>01018   <span class="keyword">struct </span><a class="code" href="structisis__adjacency.html">isis_adjacency</a> *nei;
<a name="l01019"></a>01019 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l01020"></a>01020 <span class="preprocessor"></span>  <span class="keyword">struct </span>prefix_ipv6 *ipv6, *ip6prefix;
<a name="l01021"></a>01021   <span class="keyword">struct </span>ipv6_reachability *ip6reach;
<a name="l01022"></a>01022 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l01023"></a>01023   <span class="keyword">struct </span><a class="code" href="structtlvs.html">tlvs</a> tlv_data;
<a name="l01024"></a>01024   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp0 = lsp;
<a name="l01025"></a>01025   <span class="keyword">struct </span><a class="code" href="structisis__passwd.html">isis_passwd</a> *<a class="code" href="structisis__passwd.html#a4af92e1126df2d7d2abeef451c082567">passwd</a>;
<a name="l01026"></a>01026   <span class="keyword">struct </span>in_addr *routerid;
<a name="l01027"></a>01027 
<a name="l01028"></a>01028   <span class="comment">/*</span>
<a name="l01029"></a>01029 <span class="comment">   * First add the tlvs related to area</span>
<a name="l01030"></a>01030 <span class="comment">   */</span>
<a name="l01031"></a>01031 
<a name="l01032"></a>01032   <span class="comment">/* Area addresses */</span>
<a name="l01033"></a>01033   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a11d8deaa75c26e958cff5f74fee3ef10">area_addrs</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01034"></a>01034     lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a11d8deaa75c26e958cff5f74fee3ef10">area_addrs</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l01035"></a>01035   <a class="code" href="linklist_8c.html#a16998dd330cc465279ed29cefc25e82f">list_add_list</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a11d8deaa75c26e958cff5f74fee3ef10">area_addrs</a>, area-&gt;<a class="code" href="structisis__area.html#aca1436df894da89fb83d7924ef248397">area_addrs</a>);
<a name="l01036"></a>01036   <span class="comment">/* Protocols Supported */</span>
<a name="l01037"></a>01037   <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a0b7b9b7b8a3eb903a0deb5c20791d761">ip_circuits</a> &gt; 0
<a name="l01038"></a>01038 #ifdef HAVE_IPV6
<a name="l01039"></a>01039       || area-&gt;ipv6_circuits &gt; 0
<a name="l01040"></a>01040 #endif <span class="comment">/* HAVE_IPV6 */</span>
<a name="l01041"></a>01041     )
<a name="l01042"></a>01042     {
<a name="l01043"></a>01043       lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a> = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structnlpids.html">nlpids</a>));
<a name="l01044"></a>01044       lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a>-&gt;<a class="code" href="structnlpids.html#a73f0f5f1e7aa64694d5802b91af6533b">count</a> = 0;
<a name="l01045"></a>01045       <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a0b7b9b7b8a3eb903a0deb5c20791d761">ip_circuits</a> &gt; 0)
<a name="l01046"></a>01046     {
<a name="l01047"></a>01047       lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a>-&gt;<a class="code" href="structnlpids.html#a73f0f5f1e7aa64694d5802b91af6533b">count</a>++;
<a name="l01048"></a>01048       lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a>-&gt;<a class="code" href="structnlpids.html#a6dbd263750da21187880986a50fd5857">nlpids</a>[0] = <a class="code" href="isis__constants_8h.html#a9c1ffc4a81108d901cd8914d20cd4caf">NLPID_IP</a>;
<a name="l01049"></a>01049     }
<a name="l01050"></a>01050 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l01051"></a>01051 <span class="preprocessor"></span>      <span class="keywordflow">if</span> (area-&gt;ipv6_circuits &gt; 0)
<a name="l01052"></a>01052     {
<a name="l01053"></a>01053       lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a>-&gt;<a class="code" href="structnlpids.html#a73f0f5f1e7aa64694d5802b91af6533b">count</a>++;
<a name="l01054"></a>01054       lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a>-&gt;<a class="code" href="structnlpids.html#a6dbd263750da21187880986a50fd5857">nlpids</a>[lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a>-&gt;<a class="code" href="structnlpids.html#a73f0f5f1e7aa64694d5802b91af6533b">count</a> - 1] =
<a name="l01055"></a>01055         <a class="code" href="isis__constants_8h.html#af33b1ac580353b4a2ec3b766d5f90464">NLPID_IPV6</a>;
<a name="l01056"></a>01056     }
<a name="l01057"></a>01057 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l01058"></a>01058     }
<a name="l01059"></a>01059   <span class="comment">/* Dynamic Hostname */</span>
<a name="l01060"></a>01060   <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a633f0592cc19c913d3d18368a8f45cb7">dynhostname</a>)
<a name="l01061"></a>01061     {
<a name="l01062"></a>01062       lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac2b8abaebfab8d2a55242d83a87a3e70">hostname</a> = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>,
<a name="l01063"></a>01063                     <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structhostname.html">hostname</a>));
<a name="l01064"></a>01064 
<a name="l01065"></a>01065       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac2b8abaebfab8d2a55242d83a87a3e70">hostname</a>-&gt;<a class="code" href="structhostname.html#a0a14b55c4a1b6d672adfaa81b95936f3">name</a>, <a class="code" href="isis__misc_8c.html#a5fc76e0c3f105d5a4ff9a9396e0fdbd7">unix_hostname</a> (),
<a name="l01066"></a>01066           strlen (<a class="code" href="isis__misc_8c.html#a5fc76e0c3f105d5a4ff9a9396e0fdbd7">unix_hostname</a> ()));
<a name="l01067"></a>01067       lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac2b8abaebfab8d2a55242d83a87a3e70">hostname</a>-&gt;<a class="code" href="structhostname.html#af410706acabde261182a41b3579b04b6">namelen</a> = strlen (<a class="code" href="isis__misc_8c.html#a5fc76e0c3f105d5a4ff9a9396e0fdbd7">unix_hostname</a> ());
<a name="l01068"></a>01068     }
<a name="l01069"></a>01069 
<a name="l01070"></a>01070   <span class="comment">/*</span>
<a name="l01071"></a>01071 <span class="comment">   * Building the zero lsp</span>
<a name="l01072"></a>01072 <span class="comment">   */</span>
<a name="l01073"></a>01073 
<a name="l01074"></a>01074   <span class="comment">/* Reset stream endp. Stream is always there and on every LSP refresh only</span>
<a name="l01075"></a>01075 <span class="comment">   * TLV part of it is overwritten. So we must seek past header we will not</span>
<a name="l01076"></a>01076 <span class="comment">   * touch. */</span>
<a name="l01077"></a>01077   <a class="code" href="stream_8c.html#aee8fd31485ebc2f0a556a6a5d5c2d1e6">stream_reset</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>);
<a name="l01078"></a>01078   <a class="code" href="stream_8c.html#aa8fdf46961b0a0aa3d014bb602712076">stream_forward_endp</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>, <a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a> + <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>);
<a name="l01079"></a>01079 
<a name="l01080"></a>01080   <span class="comment">/*</span>
<a name="l01081"></a>01081 <span class="comment">   * Add the authentication info if its present</span>
<a name="l01082"></a>01082 <span class="comment">   */</span>
<a name="l01083"></a>01083   (level == 1) ? (passwd = &amp;area-&gt;<a class="code" href="structisis__area.html#afb66934e4bd3bda094550517a94de442">area_passwd</a>) :
<a name="l01084"></a>01084     (passwd = &amp;area-&gt;<a class="code" href="structisis__area.html#a60cd44a3a31b36dc808ad3fd9efc97a0">domain_passwd</a>);
<a name="l01085"></a>01085   <span class="keywordflow">if</span> (passwd-&gt;<a class="code" href="structisis__passwd.html#a874984e0745fbcb41df9f463d831be67">type</a>)
<a name="l01086"></a>01086     {
<a name="l01087"></a>01087       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a53dc2cb65bc632c84b3d702ab1dc16ce">auth_info</a>, passwd, sizeof (<span class="keyword">struct</span> <a class="code" href="structisis__passwd.html">isis_passwd</a>));
<a name="l01088"></a>01088       <a class="code" href="isis__tlv_8c.html#a02f053566530986751054dcf500af3a9">tlv_add_authinfo</a> (passwd-&gt;<a class="code" href="structisis__passwd.html#a874984e0745fbcb41df9f463d831be67">type</a>, passwd-&gt;<a class="code" href="structisis__passwd.html#a3981443a6501783995b003ab8fd82f48">len</a>, passwd-&gt;<a class="code" href="structisis__passwd.html#a4af92e1126df2d7d2abeef451c082567">passwd</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>);
<a name="l01089"></a>01089     }
<a name="l01090"></a>01090   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a>)
<a name="l01091"></a>01091     <a class="code" href="isis__tlv_8c.html#ab4ebf52852b3eeb88bc641ce88d2657b">tlv_add_nlpid</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>);
<a name="l01092"></a>01092   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac2b8abaebfab8d2a55242d83a87a3e70">hostname</a>)
<a name="l01093"></a>01093     <a class="code" href="isis__tlv_8c.html#a4761f56f8d442a565861edbef484422e">tlv_add_dynamic_hostname</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac2b8abaebfab8d2a55242d83a87a3e70">hostname</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>);
<a name="l01094"></a>01094   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a11d8deaa75c26e958cff5f74fee3ef10">area_addrs</a> &amp;&amp; <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a11d8deaa75c26e958cff5f74fee3ef10">area_addrs</a>) &gt; 0)
<a name="l01095"></a>01095     <a class="code" href="isis__tlv_8c.html#abd5c4be878c3cab41e46d107480f433e">tlv_add_area_addrs</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a11d8deaa75c26e958cff5f74fee3ef10">area_addrs</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>);
<a name="l01096"></a>01096 
<a name="l01097"></a>01097   <span class="comment">/* IPv4 address and TE router ID TLVs. In case of the first one we don&#39;t</span>
<a name="l01098"></a>01098 <span class="comment">   * follow &quot;C&quot; vendor, but &quot;J&quot; vendor behavior - one IPv4 address is put into</span>
<a name="l01099"></a>01099 <span class="comment">   * LSP and this address is same as router id. */</span>
<a name="l01100"></a>01100   <span class="keywordflow">if</span> (<a class="code" href="bgp__vty_8c.html#a5ff73fe88ce576fe7fc3877984367add">router_id_zebra</a>.s_addr != 0)
<a name="l01101"></a>01101     {
<a name="l01102"></a>01102       <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae9ef317829a76d7a79d2789786a2ac1f">ipv4_addrs</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01103"></a>01103     {
<a name="l01104"></a>01104       lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae9ef317829a76d7a79d2789786a2ac1f">ipv4_addrs</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l01105"></a>01105       lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae9ef317829a76d7a79d2789786a2ac1f">ipv4_addrs</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = <a class="code" href="isis__tlv_8c.html#accd0682e015f53c9040ca9a68fb1a963">free_tlv</a>;
<a name="l01106"></a>01106     }
<a name="l01107"></a>01107 
<a name="l01108"></a>01108       routerid = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> in_addr));
<a name="l01109"></a>01109       routerid-&gt;s_addr = <a class="code" href="bgp__vty_8c.html#a5ff73fe88ce576fe7fc3877984367add">router_id_zebra</a>.s_addr;
<a name="l01110"></a>01110       <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae9ef317829a76d7a79d2789786a2ac1f">ipv4_addrs</a>, routerid);
<a name="l01111"></a>01111       <a class="code" href="isis__tlv_8c.html#adb351a1e5db6328c218f0a96389c06f4">tlv_add_in_addr</a> (routerid, lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>, <a class="code" href="isis__tlv_8h.html#a2f6e5548aaebfb3733d79efa8afbb3ae">IPV4_ADDR</a>);
<a name="l01112"></a>01112 
<a name="l01113"></a>01113       <span class="comment">/* Exactly same data is put into TE router ID TLV, but only if new style</span>
<a name="l01114"></a>01114 <span class="comment">       * TLV&#39;s are in use. */</span>
<a name="l01115"></a>01115       <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#af81e14ff1b34169c5e05c287d7ff5529">newmetric</a>)
<a name="l01116"></a>01116     {
<a name="l01117"></a>01117       lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a84e7120ac1718546fc9bb3f80470ca69">router_id</a> = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>,
<a name="l01118"></a>01118                          <span class="keyword">sizeof</span> (<span class="keyword">struct</span> in_addr));
<a name="l01119"></a>01119       lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a84e7120ac1718546fc9bb3f80470ca69">router_id</a>-&gt;<a class="code" href="structte__router__id.html#a859c4ce8787ff3914c4c7863ad187740">id</a>.s_addr = <a class="code" href="bgp__vty_8c.html#a5ff73fe88ce576fe7fc3877984367add">router_id_zebra</a>.s_addr;
<a name="l01120"></a>01120       <a class="code" href="isis__tlv_8c.html#adb351a1e5db6328c218f0a96389c06f4">tlv_add_in_addr</a> (&amp;lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a84e7120ac1718546fc9bb3f80470ca69">router_id</a>-&gt;<a class="code" href="structte__router__id.html#a859c4ce8787ff3914c4c7863ad187740">id</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>, <a class="code" href="isis__tlv_8h.html#af99fcaadfdb967a6de40bb5b3c0a315a">TE_ROUTER_ID</a>);
<a name="l01121"></a>01121     }
<a name="l01122"></a>01122     }
<a name="l01123"></a>01123 
<a name="l01124"></a>01124   memset (&amp;tlv_data, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structtlvs.html">tlvs</a>));
<a name="l01125"></a>01125 
<a name="l01126"></a>01126 <span class="preprocessor">#ifdef TOPOLOGY_GENERATE</span>
<a name="l01127"></a>01127 <span class="preprocessor"></span>  <span class="comment">/* If topology exists (and we create topology for level 1 only), create</span>
<a name="l01128"></a>01128 <span class="comment">   * (hardcoded) link to topology. */</span>
<a name="l01129"></a>01129   <span class="keywordflow">if</span> (area-&gt;topology &amp;&amp; level == 1)
<a name="l01130"></a>01130     {
<a name="l01131"></a>01131       <span class="keywordflow">if</span> (tlv_data.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01132"></a>01132     {
<a name="l01133"></a>01133       tlv_data.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l01134"></a>01134       tlv_data.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = <a class="code" href="isis__tlv_8c.html#accd0682e015f53c9040ca9a68fb1a963">free_tlv</a>;
<a name="l01135"></a>01135     }
<a name="l01136"></a>01136       is_neigh = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> is_neigh));
<a name="l01137"></a>01137 
<a name="l01138"></a>01138       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>, area-&gt;topology_baseis, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l01139"></a>01139       is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> - 1] = (1 &amp; 0xFF);
<a name="l01140"></a>01140       is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> - 2] = ((1 &gt;&gt; 8) &amp; 0xFF);
<a name="l01141"></a>01141       is_neigh-&gt;<a class="code" href="structis__neigh.html#a89a2c799e58b8ab95549581a06f2a53a">metrics</a>.<a class="code" href="structmetric.html#ae927ddb546511096f632820b678d73bf">metric_default</a> = 0x01;
<a name="l01142"></a>01142       is_neigh-&gt;<a class="code" href="structis__neigh.html#a89a2c799e58b8ab95549581a06f2a53a">metrics</a>.<a class="code" href="structmetric.html#aa373451a3966142956168440f174d1c5">metric_delay</a> = <a class="code" href="isis__constants_8h.html#a8e4a0ce9ffbaa12adf610ab7d67653c5">METRICS_UNSUPPORTED</a>;
<a name="l01143"></a>01143       is_neigh-&gt;<a class="code" href="structis__neigh.html#a89a2c799e58b8ab95549581a06f2a53a">metrics</a>.<a class="code" href="structmetric.html#ad32785c7cdf67ab7a3f5c5da004a7e9c">metric_expense</a> = <a class="code" href="isis__constants_8h.html#a8e4a0ce9ffbaa12adf610ab7d67653c5">METRICS_UNSUPPORTED</a>;
<a name="l01144"></a>01144       is_neigh-&gt;<a class="code" href="structis__neigh.html#a89a2c799e58b8ab95549581a06f2a53a">metrics</a>.<a class="code" href="structmetric.html#a315704ab59d2e6c334f2e2b6b4901e18">metric_error</a> = <a class="code" href="isis__constants_8h.html#a8e4a0ce9ffbaa12adf610ab7d67653c5">METRICS_UNSUPPORTED</a>;
<a name="l01145"></a>01145       <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (tlv_data.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>, is_neigh);
<a name="l01146"></a>01146     }
<a name="l01147"></a>01147 <span class="preprocessor">#endif </span><span class="comment">/* TOPOLOGY_GENERATE */</span>
<a name="l01148"></a>01148 
<a name="l01149"></a>01149   <span class="comment">/*</span>
<a name="l01150"></a>01150 <span class="comment">   * Then build lists of tlvs related to circuits</span>
<a name="l01151"></a>01151 <span class="comment">   */</span>
<a name="l01152"></a>01152   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (area-&gt;<a class="code" href="structisis__area.html#a1ef8753b22245b7d8fff0331deef3b21">circuit_list</a>, node, circuit))
<a name="l01153"></a>01153     {
<a name="l01154"></a>01154       <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a7491f48eafb46ce87d7041bd7959633b">state</a> != <a class="code" href="isis__csm_8h.html#a65d367a002446ae64678b4586f5e2cc5">C_STATE_UP</a>)
<a name="l01155"></a>01155     <span class="keywordflow">continue</span>;
<a name="l01156"></a>01156 
<a name="l01157"></a>01157       <span class="comment">/*</span>
<a name="l01158"></a>01158 <span class="comment">       * Add IPv4 internal reachability of this circuit</span>
<a name="l01159"></a>01159 <span class="comment">       */</span>
<a name="l01160"></a>01160       <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a9dbb2266ee5b76604a27fd0855e910f5">ip_router</a> &amp;&amp; circuit-&gt;<a class="code" href="structisis__circuit.html#adcde796f44a1e725abe092f95a6cb075">ip_addrs</a> &amp;&amp;
<a name="l01161"></a>01161       circuit-&gt;<a class="code" href="structisis__circuit.html#adcde796f44a1e725abe092f95a6cb075">ip_addrs</a>-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a> &gt; 0)
<a name="l01162"></a>01162     {
<a name="l01163"></a>01163       <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#ab59df347846030a9825a908f8fa1a4ae">oldmetric</a>)
<a name="l01164"></a>01164         {
<a name="l01165"></a>01165           <span class="keywordflow">if</span> (tlv_data.<a class="code" href="structtlvs.html#a202838cf00b9aeb6f746c11c8a421642">ipv4_int_reachs</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01166"></a>01166         {
<a name="l01167"></a>01167           tlv_data.<a class="code" href="structtlvs.html#a202838cf00b9aeb6f746c11c8a421642">ipv4_int_reachs</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l01168"></a>01168           tlv_data.<a class="code" href="structtlvs.html#a202838cf00b9aeb6f746c11c8a421642">ipv4_int_reachs</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = <a class="code" href="isis__tlv_8c.html#accd0682e015f53c9040ca9a68fb1a963">free_tlv</a>;
<a name="l01169"></a>01169         }
<a name="l01170"></a>01170           <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#adcde796f44a1e725abe092f95a6cb075">ip_addrs</a>, ipnode, ipv4))
<a name="l01171"></a>01171         {
<a name="l01172"></a>01172           ipreach =
<a name="l01173"></a>01173             <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structipv4__reachability.html">ipv4_reachability</a>));
<a name="l01174"></a>01174           ipreach-&gt;<a class="code" href="structipv4__reachability.html#a9fb77b6ac90d3fc4f7bfbd7f4843543a">metrics</a> = circuit-&gt;<a class="code" href="structisis__circuit.html#a33545b43653e59a814cbd283c3f8c056">metrics</a>[level - 1];
<a name="l01175"></a>01175           <a class="code" href="prefix_8c.html#ac618f277d6ed0ebc56781ec26e508157">masklen2ip</a> (ipv4-&gt;<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a>, &amp;ipreach-&gt;<a class="code" href="structipv4__reachability.html#a229b4c7635d0a94d260c0929125399ee">mask</a>);
<a name="l01176"></a>01176           ipreach-&gt;<a class="code" href="structipv4__reachability.html#a7ae516558fddb6aca89c864bd2d23d30">prefix</a>.s_addr = ((ipreach-&gt;<a class="code" href="structipv4__reachability.html#a229b4c7635d0a94d260c0929125399ee">mask</a>.s_addr) &amp;
<a name="l01177"></a>01177                         (ipv4-&gt;prefix.s_addr));
<a name="l01178"></a>01178           <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (tlv_data.<a class="code" href="structtlvs.html#a202838cf00b9aeb6f746c11c8a421642">ipv4_int_reachs</a>, ipreach);
<a name="l01179"></a>01179         }
<a name="l01180"></a>01180           tlv_data.<a class="code" href="structtlvs.html#a202838cf00b9aeb6f746c11c8a421642">ipv4_int_reachs</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = <a class="code" href="isis__tlv_8c.html#accd0682e015f53c9040ca9a68fb1a963">free_tlv</a>;
<a name="l01181"></a>01181         }
<a name="l01182"></a>01182       <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#af81e14ff1b34169c5e05c287d7ff5529">newmetric</a>)
<a name="l01183"></a>01183         {
<a name="l01184"></a>01184           <span class="keywordflow">if</span> (tlv_data.<a class="code" href="structtlvs.html#ac827f5db217d1de5cc2a58c9b5a9cf81">te_ipv4_reachs</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01185"></a>01185         {
<a name="l01186"></a>01186           tlv_data.<a class="code" href="structtlvs.html#ac827f5db217d1de5cc2a58c9b5a9cf81">te_ipv4_reachs</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l01187"></a>01187           tlv_data.<a class="code" href="structtlvs.html#ac827f5db217d1de5cc2a58c9b5a9cf81">te_ipv4_reachs</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = <a class="code" href="isis__tlv_8c.html#accd0682e015f53c9040ca9a68fb1a963">free_tlv</a>;
<a name="l01188"></a>01188         }
<a name="l01189"></a>01189           <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#adcde796f44a1e725abe092f95a6cb075">ip_addrs</a>, ipnode, ipv4))
<a name="l01190"></a>01190         {
<a name="l01191"></a>01191           <span class="comment">/* FIXME All this assumes that we have no sub TLVs. */</span>
<a name="l01192"></a>01192           te_ipreach = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>,
<a name="l01193"></a>01193                     <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structte__ipv4__reachability.html">te_ipv4_reachability</a>) +
<a name="l01194"></a>01194                     ((ipv4-&gt;<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> + 7)/8) - 1);
<a name="l01195"></a>01195 
<a name="l01196"></a>01196           <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#ab59df347846030a9825a908f8fa1a4ae">oldmetric</a>)
<a name="l01197"></a>01197             te_ipreach-&gt;<a class="code" href="structte__ipv4__reachability.html#a9704689f0bbfff1997a158427765060e">te_metric</a> = htonl (circuit-&gt;<a class="code" href="structisis__circuit.html#a33545b43653e59a814cbd283c3f8c056">metrics</a>[level - 1].<a class="code" href="structmetric.html#ae927ddb546511096f632820b678d73bf">metric_default</a>);
<a name="l01198"></a>01198           <span class="keywordflow">else</span>
<a name="l01199"></a>01199             te_ipreach-&gt;<a class="code" href="structte__ipv4__reachability.html#a9704689f0bbfff1997a158427765060e">te_metric</a> = htonl (circuit-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>[level - 1]);
<a name="l01200"></a>01200 
<a name="l01201"></a>01201           te_ipreach-&gt;<a class="code" href="structte__ipv4__reachability.html#ab886131ddaf522d8bc34610687a79309">control</a> = (ipv4-&gt;<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> &amp; 0x3F);
<a name="l01202"></a>01202           <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;te_ipreach-&gt;<a class="code" href="structte__ipv4__reachability.html#ad50dc67e9a53223f8083d85cbb727bfa">prefix_start</a>, &amp;ipv4-&gt;prefix.s_addr,
<a name="l01203"></a>01203               (ipv4-&gt;<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> + 7)/8);
<a name="l01204"></a>01204           <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (tlv_data.<a class="code" href="structtlvs.html#ac827f5db217d1de5cc2a58c9b5a9cf81">te_ipv4_reachs</a>, te_ipreach);
<a name="l01205"></a>01205         }
<a name="l01206"></a>01206         }
<a name="l01207"></a>01207     }
<a name="l01208"></a>01208 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l01209"></a>01209 <span class="preprocessor"></span>      <span class="comment">/*</span>
<a name="l01210"></a>01210 <span class="comment">       * Add IPv6 reachability of this circuit</span>
<a name="l01211"></a>01211 <span class="comment">       */</span>
<a name="l01212"></a>01212       <span class="keywordflow">if</span> (circuit-&gt;ipv6_router &amp;&amp; circuit-&gt;ipv6_non_link &amp;&amp;
<a name="l01213"></a>01213       circuit-&gt;ipv6_non_link-&gt;count &gt; 0)
<a name="l01214"></a>01214     {
<a name="l01215"></a>01215 
<a name="l01216"></a>01216       <span class="keywordflow">if</span> (tlv_data.ipv6_reachs == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01217"></a>01217         {
<a name="l01218"></a>01218           tlv_data.ipv6_reachs = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l01219"></a>01219           tlv_data.ipv6_reachs-&gt;del = <a class="code" href="isis__tlv_8c.html#accd0682e015f53c9040ca9a68fb1a963">free_tlv</a>;
<a name="l01220"></a>01220         }
<a name="l01221"></a>01221           <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (circuit-&gt;ipv6_non_link, ipnode, ipv6))
<a name="l01222"></a>01222         {
<a name="l01223"></a>01223           ip6reach =
<a name="l01224"></a>01224         <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> ipv6_reachability));
<a name="l01225"></a>01225 
<a name="l01226"></a>01226           <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#ab59df347846030a9825a908f8fa1a4ae">oldmetric</a>)
<a name="l01227"></a>01227         ip6reach-&gt;metric =
<a name="l01228"></a>01228               htonl (circuit-&gt;<a class="code" href="structisis__circuit.html#a33545b43653e59a814cbd283c3f8c056">metrics</a>[level - 1].<a class="code" href="structmetric.html#ae927ddb546511096f632820b678d73bf">metric_default</a>);
<a name="l01229"></a>01229           <span class="keywordflow">else</span>
<a name="l01230"></a>01230           ip6reach-&gt;metric = htonl (circuit-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>[level - 1]);
<a name="l01231"></a>01231 
<a name="l01232"></a>01232           ip6reach-&gt;control_info = 0;
<a name="l01233"></a>01233           ip6reach-&gt;prefix_len = ipv6-&gt;prefixlen;
<a name="l01234"></a>01234           <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;ip6prefix, &amp;ipv6, <span class="keyword">sizeof</span>(ip6prefix));
<a name="l01235"></a>01235           apply_mask_ipv6 (ip6prefix);
<a name="l01236"></a>01236           <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (ip6reach-&gt;prefix, ip6prefix-&gt;prefix.s6_addr,
<a name="l01237"></a>01237               sizeof (ip6reach-&gt;prefix));
<a name="l01238"></a>01238           <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (tlv_data.ipv6_reachs, ip6reach);
<a name="l01239"></a>01239         }
<a name="l01240"></a>01240     }
<a name="l01241"></a>01241 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l01242"></a>01242 
<a name="l01243"></a>01243       <span class="keywordflow">switch</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a569e39bbf7fafd533eae2eeafa671b8c">circ_type</a>)
<a name="l01244"></a>01244     {
<a name="l01245"></a>01245     <span class="keywordflow">case</span> <a class="code" href="isis__circuit_8h.html#a01a94c5f24c88efb64f791a749ae8f95">CIRCUIT_T_BROADCAST</a>:
<a name="l01246"></a>01246       <span class="keywordflow">if</span> (level &amp; circuit-&gt;<a class="code" href="structisis__circuit.html#ab222d6d0b054faa159d72bcb9768b3fb">circuit_is_type</a>)
<a name="l01247"></a>01247         {
<a name="l01248"></a>01248           <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#ab59df347846030a9825a908f8fa1a4ae">oldmetric</a>)
<a name="l01249"></a>01249         {
<a name="l01250"></a>01250           <span class="keywordflow">if</span> (tlv_data.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01251"></a>01251             {
<a name="l01252"></a>01252               tlv_data.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l01253"></a>01253               tlv_data.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = <a class="code" href="isis__tlv_8c.html#accd0682e015f53c9040ca9a68fb1a963">free_tlv</a>;
<a name="l01254"></a>01254             }
<a name="l01255"></a>01255           is_neigh = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> is_neigh));
<a name="l01256"></a>01256           <span class="keywordflow">if</span> (level == 1)
<a name="l01257"></a>01257             <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>,
<a name="l01258"></a>01258                 circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a015b72bf5854d99b722f9f599b9eb158">l1_desig_is</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 1);
<a name="l01259"></a>01259           <span class="keywordflow">else</span>
<a name="l01260"></a>01260             <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>,
<a name="l01261"></a>01261                 circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a2bde5462284eb2b294ed998fb5907de8">l2_desig_is</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 1);
<a name="l01262"></a>01262           is_neigh-&gt;<a class="code" href="structis__neigh.html#a89a2c799e58b8ab95549581a06f2a53a">metrics</a> = circuit-&gt;<a class="code" href="structisis__circuit.html#a33545b43653e59a814cbd283c3f8c056">metrics</a>[level - 1];
<a name="l01263"></a>01263           <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (tlv_data.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>, is_neigh);
<a name="l01264"></a>01264           tlv_data.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = <a class="code" href="isis__tlv_8c.html#accd0682e015f53c9040ca9a68fb1a963">free_tlv</a>;
<a name="l01265"></a>01265         }
<a name="l01266"></a>01266           <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#af81e14ff1b34169c5e05c287d7ff5529">newmetric</a>)
<a name="l01267"></a>01267         {
<a name="l01268"></a>01268           uint32_t <a class="code" href="structmetric.html">metric</a>;
<a name="l01269"></a>01269 
<a name="l01270"></a>01270           <span class="keywordflow">if</span> (tlv_data.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01271"></a>01271             {
<a name="l01272"></a>01272               tlv_data.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l01273"></a>01273               tlv_data.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = <a class="code" href="isis__tlv_8c.html#accd0682e015f53c9040ca9a68fb1a963">free_tlv</a>;
<a name="l01274"></a>01274             }
<a name="l01275"></a>01275           te_is_neigh = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>,
<a name="l01276"></a>01276                      <span class="keyword">sizeof</span> (<span class="keyword">struct</span> te_is_neigh));
<a name="l01277"></a>01277           <span class="keywordflow">if</span> (level == 1)
<a name="l01278"></a>01278             <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>,
<a name="l01279"></a>01279                 circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a015b72bf5854d99b722f9f599b9eb158">l1_desig_is</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 1);
<a name="l01280"></a>01280           <span class="keywordflow">else</span>
<a name="l01281"></a>01281             <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>,
<a name="l01282"></a>01282                 circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a2bde5462284eb2b294ed998fb5907de8">l2_desig_is</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 1);
<a name="l01283"></a>01283           <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#ab59df347846030a9825a908f8fa1a4ae">oldmetric</a>)
<a name="l01284"></a>01284             metric =
<a name="l01285"></a>01285               ((htonl(circuit-&gt;<a class="code" href="structisis__circuit.html#a33545b43653e59a814cbd283c3f8c056">metrics</a>[level - 1].<a class="code" href="structmetric.html#ae927ddb546511096f632820b678d73bf">metric_default</a>) &gt;&gt; 8)
<a name="l01286"></a>01286                   &amp; 0xffffff);
<a name="l01287"></a>01287           <span class="keywordflow">else</span>
<a name="l01288"></a>01288             metric = ((htonl(*circuit-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>) &gt;&gt; 8) &amp; 0xffffff);
<a name="l01289"></a>01289 
<a name="l01290"></a>01290           <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#a7158aa6efe17579d240123affa0a543c">te_metric</a>, &amp;metric, 3);
<a name="l01291"></a>01291           <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (tlv_data.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>, te_is_neigh);
<a name="l01292"></a>01292         }
<a name="l01293"></a>01293         }
<a name="l01294"></a>01294       <span class="keywordflow">break</span>;
<a name="l01295"></a>01295     <span class="keywordflow">case</span> <a class="code" href="isis__circuit_8h.html#aa2113a49e7c75a5d4997d59df0530726">CIRCUIT_T_P2P</a>:
<a name="l01296"></a>01296       nei = circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a15852a59ea8be80680abac2070659440">p2p</a>.<a class="code" href="structisis__p2p__info.html#a17d32289e6648b9855b93482cd7c45a5">neighbor</a>;
<a name="l01297"></a>01297       <span class="keywordflow">if</span> (nei &amp;&amp; (level &amp; nei-&gt;<a class="code" href="structisis__adjacency.html#a94749cb53088c1898166a701f2a3931f">circuit_t</a>))
<a name="l01298"></a>01298         {
<a name="l01299"></a>01299           <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#ab59df347846030a9825a908f8fa1a4ae">oldmetric</a>)
<a name="l01300"></a>01300         {
<a name="l01301"></a>01301           <span class="keywordflow">if</span> (tlv_data.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01302"></a>01302             {
<a name="l01303"></a>01303               tlv_data.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l01304"></a>01304               tlv_data.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = <a class="code" href="isis__tlv_8c.html#accd0682e015f53c9040ca9a68fb1a963">free_tlv</a>;
<a name="l01305"></a>01305             }
<a name="l01306"></a>01306           is_neigh = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> is_neigh));
<a name="l01307"></a>01307           <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>, nei-&gt;<a class="code" href="structisis__adjacency.html#a7b23942ae5652d5cf59b263f131c2038">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l01308"></a>01308           is_neigh-&gt;<a class="code" href="structis__neigh.html#a89a2c799e58b8ab95549581a06f2a53a">metrics</a> = circuit-&gt;<a class="code" href="structisis__circuit.html#a33545b43653e59a814cbd283c3f8c056">metrics</a>[level - 1];
<a name="l01309"></a>01309           <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (tlv_data.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>, is_neigh);
<a name="l01310"></a>01310         }
<a name="l01311"></a>01311           <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#af81e14ff1b34169c5e05c287d7ff5529">newmetric</a>)
<a name="l01312"></a>01312         {
<a name="l01313"></a>01313           uint32_t <a class="code" href="structmetric.html">metric</a>;
<a name="l01314"></a>01314 
<a name="l01315"></a>01315           <span class="keywordflow">if</span> (tlv_data.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01316"></a>01316             {
<a name="l01317"></a>01317               tlv_data.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l01318"></a>01318               tlv_data.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = <a class="code" href="isis__tlv_8c.html#accd0682e015f53c9040ca9a68fb1a963">free_tlv</a>;
<a name="l01319"></a>01319             }
<a name="l01320"></a>01320           te_is_neigh = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>,
<a name="l01321"></a>01321                      <span class="keyword">sizeof</span> (<span class="keyword">struct</span> te_is_neigh));
<a name="l01322"></a>01322           <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>, nei-&gt;<a class="code" href="structisis__adjacency.html#a7b23942ae5652d5cf59b263f131c2038">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l01323"></a>01323           metric = ((htonl(*circuit-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>) &gt;&gt; 8) &amp; 0xffffff);
<a name="l01324"></a>01324           <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#a7158aa6efe17579d240123affa0a543c">te_metric</a>, &amp;metric, 3);
<a name="l01325"></a>01325           <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (tlv_data.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>, te_is_neigh);
<a name="l01326"></a>01326         }
<a name="l01327"></a>01327         }
<a name="l01328"></a>01328       <span class="keywordflow">break</span>;
<a name="l01329"></a>01329     <span class="keywordflow">case</span> <a class="code" href="isis__circuit_8h.html#ace4e6ef60402975cbbcd42d37f4e116f">CIRCUIT_T_STATIC_IN</a>:
<a name="l01330"></a>01330       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;lsp_area_create: unsupported circuit type&quot;</span>);
<a name="l01331"></a>01331       <span class="keywordflow">break</span>;
<a name="l01332"></a>01332     <span class="keywordflow">case</span> <a class="code" href="isis__circuit_8h.html#a58c459ed939ee8997c493d00aa241800">CIRCUIT_T_STATIC_OUT</a>:
<a name="l01333"></a>01333       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;lsp_area_create: unsupported circuit type&quot;</span>);
<a name="l01334"></a>01334       <span class="keywordflow">break</span>;
<a name="l01335"></a>01335     <span class="keywordflow">case</span> <a class="code" href="isis__circuit_8h.html#a26e88232ab88ae370f75feb62f92c2b0">CIRCUIT_T_DA</a>:
<a name="l01336"></a>01336       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;lsp_area_create: unsupported circuit type&quot;</span>);
<a name="l01337"></a>01337       <span class="keywordflow">break</span>;
<a name="l01338"></a>01338     <span class="keywordflow">default</span>:
<a name="l01339"></a>01339       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;lsp_area_create: unknown circuit type&quot;</span>);
<a name="l01340"></a>01340     }
<a name="l01341"></a>01341     }
<a name="l01342"></a>01342 
<a name="l01343"></a>01343   <span class="keywordflow">while</span> (tlv_data.<a class="code" href="structtlvs.html#a202838cf00b9aeb6f746c11c8a421642">ipv4_int_reachs</a> &amp;&amp; <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (tlv_data.<a class="code" href="structtlvs.html#a202838cf00b9aeb6f746c11c8a421642">ipv4_int_reachs</a>))
<a name="l01344"></a>01344     {
<a name="l01345"></a>01345       <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a202838cf00b9aeb6f746c11c8a421642">ipv4_int_reachs</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01346"></a>01346     lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a202838cf00b9aeb6f746c11c8a421642">ipv4_int_reachs</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l01347"></a>01347       <a class="code" href="isis__lsp_8c.html#a87fb50a6271da943f8910022759b915e">lsp_tlv_fit</a> (lsp, &amp;tlv_data.<a class="code" href="structtlvs.html#a202838cf00b9aeb6f746c11c8a421642">ipv4_int_reachs</a>,
<a name="l01348"></a>01348            &amp;lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a202838cf00b9aeb6f746c11c8a421642">ipv4_int_reachs</a>,
<a name="l01349"></a>01349            <a class="code" href="isis__tlv_8h.html#a4f875375f022f9404581aa66fd4f6dcb">IPV4_REACH_LEN</a>, area-&gt;<a class="code" href="structisis__area.html#ae1bacf51d4843178d0a4219a49f93423">lsp_frag_threshold</a>,
<a name="l01350"></a>01350            <a class="code" href="isis__tlv_8c.html#a0fec2a295690de62dd51295e8930e260">tlv_add_ipv4_reachs</a>);
<a name="l01351"></a>01351       <span class="keywordflow">if</span> (tlv_data.<a class="code" href="structtlvs.html#a202838cf00b9aeb6f746c11c8a421642">ipv4_int_reachs</a> &amp;&amp; <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (tlv_data.<a class="code" href="structtlvs.html#a202838cf00b9aeb6f746c11c8a421642">ipv4_int_reachs</a>))
<a name="l01352"></a>01352     lsp = <a class="code" href="isis__lsp_8c.html#aab829620b2263604cc5c0233d5a5b099">lsp_next_frag</a> (<a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>) + 1,
<a name="l01353"></a>01353                  lsp0, area, level);
<a name="l01354"></a>01354     }
<a name="l01355"></a>01355   <span class="comment">/* FIXME: We pass maximum te_ipv4_reachability length to the lsp_tlv_fit()</span>
<a name="l01356"></a>01356 <span class="comment">   * for now. lsp_tlv_fit() needs to be fixed to deal with variable length</span>
<a name="l01357"></a>01357 <span class="comment">   * TLVs (sub TLVs!). */</span>
<a name="l01358"></a>01358   <span class="keywordflow">while</span> (tlv_data.<a class="code" href="structtlvs.html#ac827f5db217d1de5cc2a58c9b5a9cf81">te_ipv4_reachs</a> &amp;&amp; <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (tlv_data.<a class="code" href="structtlvs.html#ac827f5db217d1de5cc2a58c9b5a9cf81">te_ipv4_reachs</a>))
<a name="l01359"></a>01359     {
<a name="l01360"></a>01360       <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac827f5db217d1de5cc2a58c9b5a9cf81">te_ipv4_reachs</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01361"></a>01361     lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac827f5db217d1de5cc2a58c9b5a9cf81">te_ipv4_reachs</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l01362"></a>01362       <a class="code" href="isis__lsp_8c.html#a87fb50a6271da943f8910022759b915e">lsp_tlv_fit</a> (lsp, &amp;tlv_data.<a class="code" href="structtlvs.html#ac827f5db217d1de5cc2a58c9b5a9cf81">te_ipv4_reachs</a>,
<a name="l01363"></a>01363            &amp;lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac827f5db217d1de5cc2a58c9b5a9cf81">te_ipv4_reachs</a>,
<a name="l01364"></a>01364            9, area-&gt;<a class="code" href="structisis__area.html#ae1bacf51d4843178d0a4219a49f93423">lsp_frag_threshold</a>, <a class="code" href="isis__tlv_8c.html#af61249352f501f09c0912f6849687406">tlv_add_te_ipv4_reachs</a>);
<a name="l01365"></a>01365       <span class="keywordflow">if</span> (tlv_data.<a class="code" href="structtlvs.html#ac827f5db217d1de5cc2a58c9b5a9cf81">te_ipv4_reachs</a> &amp;&amp; <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (tlv_data.<a class="code" href="structtlvs.html#ac827f5db217d1de5cc2a58c9b5a9cf81">te_ipv4_reachs</a>))
<a name="l01366"></a>01366     lsp = <a class="code" href="isis__lsp_8c.html#aab829620b2263604cc5c0233d5a5b099">lsp_next_frag</a> (<a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>) + 1,
<a name="l01367"></a>01367                  lsp0, area, level);
<a name="l01368"></a>01368     }
<a name="l01369"></a>01369 
<a name="l01370"></a>01370 <span class="preprocessor">#ifdef  HAVE_IPV6</span>
<a name="l01371"></a>01371 <span class="preprocessor"></span>  <span class="keywordflow">while</span> (tlv_data.ipv6_reachs &amp;&amp; <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (tlv_data.ipv6_reachs))
<a name="l01372"></a>01372     {
<a name="l01373"></a>01373       <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.ipv6_reachs == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01374"></a>01374     lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.ipv6_reachs = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l01375"></a>01375       <a class="code" href="isis__lsp_8c.html#a87fb50a6271da943f8910022759b915e">lsp_tlv_fit</a> (lsp, &amp;tlv_data.ipv6_reachs,
<a name="l01376"></a>01376            &amp;lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.ipv6_reachs,
<a name="l01377"></a>01377            <a class="code" href="isis__tlv_8h.html#a27eee759b0b85d1f5e0c6e31361a7416">IPV6_REACH_LEN</a>, area-&gt;<a class="code" href="structisis__area.html#ae1bacf51d4843178d0a4219a49f93423">lsp_frag_threshold</a>,
<a name="l01378"></a>01378            tlv_add_ipv6_reachs);
<a name="l01379"></a>01379       <span class="keywordflow">if</span> (tlv_data.ipv6_reachs &amp;&amp; <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (tlv_data.ipv6_reachs))
<a name="l01380"></a>01380     lsp = <a class="code" href="isis__lsp_8c.html#aab829620b2263604cc5c0233d5a5b099">lsp_next_frag</a> (<a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>) + 1,
<a name="l01381"></a>01381                  lsp0, area, level);
<a name="l01382"></a>01382     }
<a name="l01383"></a>01383 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l01384"></a>01384 
<a name="l01385"></a>01385   <span class="keywordflow">while</span> (tlv_data.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a> &amp;&amp; <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (tlv_data.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>))
<a name="l01386"></a>01386     {
<a name="l01387"></a>01387       <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01388"></a>01388     lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l01389"></a>01389       <a class="code" href="isis__lsp_8c.html#a87fb50a6271da943f8910022759b915e">lsp_tlv_fit</a> (lsp, &amp;tlv_data.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>,
<a name="l01390"></a>01390            &amp;lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>,
<a name="l01391"></a>01391            <a class="code" href="isis__tlv_8h.html#ae1c932e01a4b166be4461bd19a4ca5c4">IS_NEIGHBOURS_LEN</a>, area-&gt;<a class="code" href="structisis__area.html#ae1bacf51d4843178d0a4219a49f93423">lsp_frag_threshold</a>,
<a name="l01392"></a>01392            <a class="code" href="isis__tlv_8c.html#aff9156f858532767e00e9f80f79cbb52">tlv_add_is_neighs</a>);
<a name="l01393"></a>01393       <span class="keywordflow">if</span> (tlv_data.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a> &amp;&amp; <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (tlv_data.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>))
<a name="l01394"></a>01394     lsp = <a class="code" href="isis__lsp_8c.html#aab829620b2263604cc5c0233d5a5b099">lsp_next_frag</a> (<a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>) + 1,
<a name="l01395"></a>01395                  lsp0, area, level);
<a name="l01396"></a>01396     }
<a name="l01397"></a>01397 
<a name="l01398"></a>01398   <span class="keywordflow">while</span> (tlv_data.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a> &amp;&amp; <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (tlv_data.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>))
<a name="l01399"></a>01399     {
<a name="l01400"></a>01400       <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01401"></a>01401     lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l01402"></a>01402       <a class="code" href="isis__lsp_8c.html#a87fb50a6271da943f8910022759b915e">lsp_tlv_fit</a> (lsp, &amp;tlv_data.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>, &amp;lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>,
<a name="l01403"></a>01403            <a class="code" href="isis__tlv_8h.html#ae1c932e01a4b166be4461bd19a4ca5c4">IS_NEIGHBOURS_LEN</a>, area-&gt;<a class="code" href="structisis__area.html#ae1bacf51d4843178d0a4219a49f93423">lsp_frag_threshold</a>,
<a name="l01404"></a>01404            <a class="code" href="isis__tlv_8c.html#aeca253d796ceaff696f3c570bab0aec5">tlv_add_te_is_neighs</a>);
<a name="l01405"></a>01405       <span class="keywordflow">if</span> (tlv_data.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a> &amp;&amp; <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (tlv_data.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>))
<a name="l01406"></a>01406     lsp = <a class="code" href="isis__lsp_8c.html#aab829620b2263604cc5c0233d5a5b099">lsp_next_frag</a> (<a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>) + 1,
<a name="l01407"></a>01407                  lsp0, area, level);
<a name="l01408"></a>01408     }
<a name="l01409"></a>01409 
<a name="l01410"></a>01410   <a class="code" href="isis__tlv_8c.html#a5f499235cf5a69697d280f5a1cd01612">free_tlvs</a> (&amp;tlv_data);
<a name="l01411"></a>01411   <span class="keywordflow">return</span>;
<a name="l01412"></a>01412 }
<a name="l01413"></a>01413 
<a name="l01414"></a>01414 <span class="comment">/*</span>
<a name="l01415"></a>01415 <span class="comment"> * 7.3.7 Generation on non-pseudonode LSPs</span>
<a name="l01416"></a>01416 <span class="comment"> */</span>
<a name="l01417"></a>01417 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l01418"></a><a class="code" href="isis__lsp_8c.html#ae63b4445cafde6ccff7526b6d4570735">01418</a> <a class="code" href="isis__lsp_8c.html#ae63b4445cafde6ccff7526b6d4570735">lsp_generate_non_pseudo</a> (<span class="keyword">struct</span> <a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>, <span class="keywordtype">int</span> level)
<a name="l01419"></a>01419 {
<a name="l01420"></a>01420   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *oldlsp, *newlsp;
<a name="l01421"></a>01421   u_int32_t <a class="code" href="isis__pdu_8h.html#a4deeb76ae77c7e5dca81a8c3a07e8c23">seq_num</a> = 0;
<a name="l01422"></a>01422   u_char <a class="code" href="isis__misc_8c.html#ac0016d3200b8885e05d151ca16ef4315">lspid</a>[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 2];
<a name="l01423"></a>01423 
<a name="l01424"></a>01424   memset (&amp;lspid, 0, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 2);
<a name="l01425"></a>01425   <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;lspid, isis-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l01426"></a>01426 
<a name="l01427"></a>01427   <span class="comment">/* only builds the lsp if the area shares the level */</span>
<a name="l01428"></a>01428   <span class="keywordflow">if</span> ((area-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a> &amp; level) == level)
<a name="l01429"></a>01429     {
<a name="l01430"></a>01430       oldlsp = <a class="code" href="isis__lsp_8c.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (lspid, area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level - 1]);
<a name="l01431"></a>01431       <span class="keywordflow">if</span> (oldlsp)
<a name="l01432"></a>01432     {
<a name="l01433"></a>01433       seq_num = ntohl (oldlsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a>);
<a name="l01434"></a>01434       <a class="code" href="isis__lsp_8c.html#ac9198965904e0c9a57ade0011b114d3f">lsp_search_and_destroy</a> (oldlsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>,
<a name="l01435"></a>01435                   area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level - 1]);
<a name="l01436"></a>01436       <span class="comment">/* FIXME: we should actually initiate a purge */</span>
<a name="l01437"></a>01437     }
<a name="l01438"></a>01438       newlsp = <a class="code" href="isis__lsp_8c.html#af43ff22a21554145c239b6c37556ce1a">lsp_new</a> (lspid, area-&gt;<a class="code" href="structisis__area.html#af0e5e6cfa7b7536e0700dd3645025d9b">max_lsp_lifetime</a>[level - 1], seq_num,
<a name="l01439"></a>01439             area-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a>, 0, level);
<a name="l01440"></a>01440       newlsp-&gt;<a class="code" href="structisis__lsp.html#a92fb19d67740e3bfde012e19af97b7d3">own_lsp</a> = 1;
<a name="l01441"></a>01441 
<a name="l01442"></a>01442       <a class="code" href="isis__lsp_8c.html#a09d8f3bcc073c87f01c32b2f0994fb04">lsp_insert</a> (newlsp, area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level - 1]);
<a name="l01443"></a>01443       <span class="comment">/* build_lsp_data (newlsp, area); */</span>
<a name="l01444"></a>01444       <a class="code" href="isis__lsp_8c.html#a8e44fcf09744fc11e91c6af9bcd17c7c">lsp_build_nonpseudo</a> (newlsp, area);
<a name="l01445"></a>01445       <span class="comment">/* time to calculate our checksum */</span>
<a name="l01446"></a>01446       <a class="code" href="isis__lsp_8c.html#a4a6da8fd883c32c4986e4d75e9a6f4e4">lsp_seqnum_update</a> (newlsp);
<a name="l01447"></a>01447     }
<a name="l01448"></a>01448 
<a name="l01449"></a>01449   <span class="comment">/* DEBUG_ADJ_PACKETS */</span>
<a name="l01450"></a>01450   <span class="keywordflow">if</span> (isis-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#a4113d6aad857cfa148450dfc6ed85b5b">DEBUG_ADJ_PACKETS</a>)
<a name="l01451"></a>01451     {
<a name="l01452"></a>01452       <span class="comment">/* FIXME: is this place right? fix missing info */</span>
<a name="l01453"></a>01453       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Upd (%s): Building L%d LSP&quot;</span>, area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>, level);
<a name="l01454"></a>01454     }
<a name="l01455"></a>01455 
<a name="l01456"></a>01456   <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
<a name="l01457"></a>01457 }
<a name="l01458"></a>01458 
<a name="l01459"></a>01459 <span class="comment">/*</span>
<a name="l01460"></a>01460 <span class="comment"> * 7.3.9 Generation of level 1 LSPs (non-pseudonode)</span>
<a name="l01461"></a>01461 <span class="comment"> */</span>
<a name="l01462"></a>01462 <span class="keywordtype">int</span>
<a name="l01463"></a><a class="code" href="isis__lsp_8h.html#a9088e620d5a41dd5a661feb5de44dc64">01463</a> <a class="code" href="isis__lsp_8c.html#a9088e620d5a41dd5a661feb5de44dc64">lsp_l1_generate</a> (<span class="keyword">struct</span> <a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l01464"></a>01464 {
<a name="l01465"></a>01465   <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, area-&gt;<a class="code" href="structisis__area.html#aa13bb9e9d007a177991fad0bbaf5b8c0">t_lsp_refresh</a>[0], <a class="code" href="isis__lsp_8c.html#adc8acfaac35e9082714fb0f5cb47b606">lsp_refresh_l1</a>, area,
<a name="l01466"></a>01466            <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a>);
<a name="l01467"></a>01467 
<a name="l01468"></a>01468   <span class="keywordflow">return</span> <a class="code" href="isis__lsp_8c.html#ae63b4445cafde6ccff7526b6d4570735">lsp_generate_non_pseudo</a> (area, 1);
<a name="l01469"></a>01469 }
<a name="l01470"></a>01470 
<a name="l01471"></a>01471 <span class="comment">/*</span>
<a name="l01472"></a>01472 <span class="comment"> * 7.3.9 Generation of level 2 LSPs (non-pseudonode)</span>
<a name="l01473"></a>01473 <span class="comment"> */</span>
<a name="l01474"></a>01474 <span class="keywordtype">int</span>
<a name="l01475"></a><a class="code" href="isis__lsp_8h.html#a9bb0ebbebc92d3307a4018ca3d24f85e">01475</a> <a class="code" href="isis__lsp_8c.html#a9bb0ebbebc92d3307a4018ca3d24f85e">lsp_l2_generate</a> (<span class="keyword">struct</span> <a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l01476"></a>01476 {
<a name="l01477"></a>01477   <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, area-&gt;<a class="code" href="structisis__area.html#aa13bb9e9d007a177991fad0bbaf5b8c0">t_lsp_refresh</a>[1], <a class="code" href="isis__lsp_8c.html#a73cd3b4cb76bb36a65016f3315dde31e">lsp_refresh_l2</a>, area,
<a name="l01478"></a>01478            <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a>);
<a name="l01479"></a>01479 
<a name="l01480"></a>01480   <span class="keywordflow">return</span> <a class="code" href="isis__lsp_8c.html#ae63b4445cafde6ccff7526b6d4570735">lsp_generate_non_pseudo</a> (area, 2);
<a name="l01481"></a>01481 }
<a name="l01482"></a>01482 
<a name="l01483"></a>01483 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l01484"></a><a class="code" href="isis__lsp_8c.html#abfcf29f408abe6994df4484a432a7b03">01484</a> <a class="code" href="isis__lsp_8c.html#abfcf29f408abe6994df4484a432a7b03">lsp_non_pseudo_regenerate</a> (<span class="keyword">struct</span> <a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>, <span class="keywordtype">int</span> <a class="code" href="structisis__lsp.html#ab719e4479e4fc861c4cfa7a3c9d403c6">level</a>)
<a name="l01485"></a>01485 {
<a name="l01486"></a>01486   <a class="code" href="structdict__t.html">dict_t</a> *lspdb = area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level - 1];
<a name="l01487"></a>01487   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp, *frag;
<a name="l01488"></a>01488   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l01489"></a>01489   u_char <a class="code" href="isis__misc_8c.html#ac0016d3200b8885e05d151ca16ef4315">lspid</a>[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 2];
<a name="l01490"></a>01490 
<a name="l01491"></a>01491   memset (lspid, 0, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 2);
<a name="l01492"></a>01492   <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (lspid, isis-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l01493"></a>01493 
<a name="l01494"></a>01494   lsp = <a class="code" href="isis__lsp_8c.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (lspid, lspdb);
<a name="l01495"></a>01495 
<a name="l01496"></a>01496   <span class="keywordflow">if</span> (!lsp)
<a name="l01497"></a>01497     {
<a name="l01498"></a>01498       <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a>
<a name="l01499"></a>01499     (<span class="stringliteral">&quot;ISIS-Upd (%s): lsp_non_pseudo_regenerate(): no L%d LSP found!&quot;</span>,
<a name="l01500"></a>01500      area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>, level);
<a name="l01501"></a>01501 
<a name="l01502"></a>01502       <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#ac694b0bd16857a3d50deea71f78e8b7f">ISIS_ERROR</a>;
<a name="l01503"></a>01503     }
<a name="l01504"></a>01504 
<a name="l01505"></a>01505   <a class="code" href="isis__lsp_8c.html#aa0d51cf5f190804be9b73b52db69ccd6">lsp_clear_data</a> (lsp);
<a name="l01506"></a>01506   <a class="code" href="isis__lsp_8c.html#a8e44fcf09744fc11e91c6af9bcd17c7c">lsp_build_nonpseudo</a> (lsp, area);
<a name="l01507"></a>01507   lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a> = htons (<a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a>
<a name="l01508"></a>01508                      (area-&gt;<a class="code" href="structisis__area.html#af0e5e6cfa7b7536e0700dd3645025d9b">max_lsp_lifetime</a>[level - 1],
<a name="l01509"></a>01509                       <a class="code" href="isis__constants_8h.html#adfaaf0b4e69adf9ae9c8dc47e3e00918">MAX_AGE_JITTER</a>));
<a name="l01510"></a>01510   <a class="code" href="isis__lsp_8c.html#a4a6da8fd883c32c4986e4d75e9a6f4e4">lsp_seqnum_update</a> (lsp);
<a name="l01511"></a>01511 
<a name="l01512"></a>01512   <span class="keywordflow">if</span> (isis-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#abd8d8358bf794de3d9fba9ef5de689b3">DEBUG_UPDATE_PACKETS</a>)
<a name="l01513"></a>01513     {
<a name="l01514"></a>01514       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Upd (%s): refreshing our L%d LSP %s, &quot;</span>
<a name="l01515"></a>01515           <span class="stringliteral">&quot;seq 0x%08x, cksum 0x%04x lifetime %us&quot;</span>,
<a name="l01516"></a>01516           area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>,
<a name="l01517"></a>01517           level,
<a name="l01518"></a>01518           <a class="code" href="isis__misc_8c.html#a3a0e7f92008e3167e2c09b8761d06766">rawlspid_print</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>),
<a name="l01519"></a>01519           ntohl (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a>),
<a name="l01520"></a>01520           ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#afb16ee6cc606527cc2705773cc2b79c4">checksum</a>),
<a name="l01521"></a>01521           ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a>));
<a name="l01522"></a>01522     }
<a name="l01523"></a>01523 
<a name="l01524"></a>01524   lsp-&gt;<a class="code" href="structisis__lsp.html#aea2ad3865df52bc01bc01fae22bf83a0">last_generated</a> = time (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l01525"></a>01525   area-&gt;<a class="code" href="structisis__area.html#affd6c83dc67d351f652205c64b91da1a">lsp_regenerate_pending</a>[level - 1] = 0;
<a name="l01526"></a>01526   <a class="code" href="isis__flags_8h.html#a57f45d9b4a8c70c53f796d96e5555fac">ISIS_FLAGS_SET_ALL</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a96d155dbf3bbd20256cf7a68c8d9fd20">SRMflags</a>);
<a name="l01527"></a>01527   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a>, node, frag))
<a name="l01528"></a>01528     {
<a name="l01529"></a>01529       frag-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a> = htons (<a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a>
<a name="l01530"></a>01530                           (area-&gt;
<a name="l01531"></a>01531                            max_lsp_lifetime[level - 1],
<a name="l01532"></a>01532                            <a class="code" href="isis__constants_8h.html#adfaaf0b4e69adf9ae9c8dc47e3e00918">MAX_AGE_JITTER</a>));
<a name="l01533"></a>01533       <a class="code" href="isis__flags_8h.html#a57f45d9b4a8c70c53f796d96e5555fac">ISIS_FLAGS_SET_ALL</a> (frag-&gt;<a class="code" href="structisis__lsp.html#a96d155dbf3bbd20256cf7a68c8d9fd20">SRMflags</a>);
<a name="l01534"></a>01534     }
<a name="l01535"></a>01535 
<a name="l01536"></a>01536   <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a0b7b9b7b8a3eb903a0deb5c20791d761">ip_circuits</a>)
<a name="l01537"></a>01537     <a class="code" href="isis__spf_8c.html#a07d72d64d2b651d969695c1f26031678">isis_spf_schedule</a> (area, level);
<a name="l01538"></a>01538 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l01539"></a>01539 <span class="preprocessor"></span>  <span class="keywordflow">if</span> (area-&gt;ipv6_circuits)
<a name="l01540"></a>01540     isis_spf_schedule6 (area, level);
<a name="l01541"></a>01541 <span class="preprocessor">#endif</span>
<a name="l01542"></a>01542 <span class="preprocessor"></span>  <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
<a name="l01543"></a>01543 }
<a name="l01544"></a>01544 
<a name="l01545"></a>01545 <span class="comment">/*</span>
<a name="l01546"></a>01546 <span class="comment"> * Done at least every MAX_LSP_GEN_INTERVAL. Search own LSPs, update holding</span>
<a name="l01547"></a>01547 <span class="comment"> * time and set SRM</span>
<a name="l01548"></a>01548 <span class="comment"> */</span>
<a name="l01549"></a>01549 <span class="keywordtype">int</span>
<a name="l01550"></a><a class="code" href="isis__lsp_8h.html#adc8acfaac35e9082714fb0f5cb47b606">01550</a> <a class="code" href="isis__lsp_8c.html#adc8acfaac35e9082714fb0f5cb47b606">lsp_refresh_l1</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l01551"></a>01551 {
<a name="l01552"></a>01552   <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01553"></a>01553   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> ref_time;
<a name="l01554"></a>01554 
<a name="l01555"></a>01555   area = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l01556"></a>01556   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (area);
<a name="l01557"></a>01557 
<a name="l01558"></a>01558   area-&gt;<a class="code" href="structisis__area.html#aa13bb9e9d007a177991fad0bbaf5b8c0">t_lsp_refresh</a>[0] = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01559"></a>01559   <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>)
<a name="l01560"></a>01560     <a class="code" href="isis__lsp_8c.html#abfcf29f408abe6994df4484a432a7b03">lsp_non_pseudo_regenerate</a> (area, 1);
<a name="l01561"></a>01561 
<a name="l01562"></a>01562   ref_time = area-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[0] &gt; <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> ?
<a name="l01563"></a>01563     <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> : area-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[0];
<a name="l01564"></a>01564 
<a name="l01565"></a>01565   <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, area-&gt;<a class="code" href="structisis__area.html#aa13bb9e9d007a177991fad0bbaf5b8c0">t_lsp_refresh</a>[0], <a class="code" href="isis__lsp_8c.html#adc8acfaac35e9082714fb0f5cb47b606">lsp_refresh_l1</a>, area,
<a name="l01566"></a>01566            <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (ref_time, <a class="code" href="isis__constants_8h.html#adfaaf0b4e69adf9ae9c8dc47e3e00918">MAX_AGE_JITTER</a>));
<a name="l01567"></a>01567 
<a name="l01568"></a>01568   <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
<a name="l01569"></a>01569 }
<a name="l01570"></a>01570 
<a name="l01571"></a>01571 <span class="keywordtype">int</span>
<a name="l01572"></a><a class="code" href="isis__lsp_8h.html#a73cd3b4cb76bb36a65016f3315dde31e">01572</a> <a class="code" href="isis__lsp_8c.html#a73cd3b4cb76bb36a65016f3315dde31e">lsp_refresh_l2</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l01573"></a>01573 {
<a name="l01574"></a>01574   <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01575"></a>01575   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> ref_time;
<a name="l01576"></a>01576 
<a name="l01577"></a>01577   area = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l01578"></a>01578   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (area);
<a name="l01579"></a>01579 
<a name="l01580"></a>01580   area-&gt;<a class="code" href="structisis__area.html#aa13bb9e9d007a177991fad0bbaf5b8c0">t_lsp_refresh</a>[1] = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01581"></a>01581   <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a9daa7fbf09b604c718f3bbe189aedd1a">IS_LEVEL_2</a>)
<a name="l01582"></a>01582     <a class="code" href="isis__lsp_8c.html#abfcf29f408abe6994df4484a432a7b03">lsp_non_pseudo_regenerate</a> (area, 2);
<a name="l01583"></a>01583 
<a name="l01584"></a>01584   ref_time = area-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[1] &gt; <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> ?
<a name="l01585"></a>01585     <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> : area-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[1];
<a name="l01586"></a>01586 
<a name="l01587"></a>01587   <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, area-&gt;<a class="code" href="structisis__area.html#aa13bb9e9d007a177991fad0bbaf5b8c0">t_lsp_refresh</a>[1], <a class="code" href="isis__lsp_8c.html#a73cd3b4cb76bb36a65016f3315dde31e">lsp_refresh_l2</a>, area,
<a name="l01588"></a>01588            <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (ref_time, <a class="code" href="isis__constants_8h.html#adfaaf0b4e69adf9ae9c8dc47e3e00918">MAX_AGE_JITTER</a>));
<a name="l01589"></a>01589 
<a name="l01590"></a>01590   <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
<a name="l01591"></a>01591 }
<a name="l01592"></a>01592 
<a name="l01593"></a>01593 <span class="comment">/*</span>
<a name="l01594"></a>01594 <span class="comment"> * Something has changed -&gt; regenerate LSP</span>
<a name="l01595"></a>01595 <span class="comment"> */</span>
<a name="l01596"></a>01596 
<a name="l01597"></a>01597 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l01598"></a><a class="code" href="isis__lsp_8c.html#a99833cb66948d6aa881bca74ab942cc5">01598</a> <a class="code" href="isis__lsp_8c.html#a99833cb66948d6aa881bca74ab942cc5">lsp_l1_regenerate</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l01599"></a>01599 {
<a name="l01600"></a>01600   <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01601"></a>01601 
<a name="l01602"></a>01602   area = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l01603"></a>01603   area-&gt;<a class="code" href="structisis__area.html#affd6c83dc67d351f652205c64b91da1a">lsp_regenerate_pending</a>[0] = 0;
<a name="l01604"></a>01604 
<a name="l01605"></a>01605   <span class="keywordflow">return</span> <a class="code" href="isis__lsp_8c.html#abfcf29f408abe6994df4484a432a7b03">lsp_non_pseudo_regenerate</a> (area, 1);
<a name="l01606"></a>01606 }
<a name="l01607"></a>01607 
<a name="l01608"></a>01608 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l01609"></a><a class="code" href="isis__lsp_8c.html#a4efb80c98e8582dc7609ffb9bdd6e597">01609</a> <a class="code" href="isis__lsp_8c.html#a4efb80c98e8582dc7609ffb9bdd6e597">lsp_l2_regenerate</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l01610"></a>01610 {
<a name="l01611"></a>01611   <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01612"></a>01612 
<a name="l01613"></a>01613   area = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l01614"></a>01614   area-&gt;<a class="code" href="structisis__area.html#affd6c83dc67d351f652205c64b91da1a">lsp_regenerate_pending</a>[1] = 0;
<a name="l01615"></a>01615 
<a name="l01616"></a>01616   <span class="keywordflow">return</span> <a class="code" href="isis__lsp_8c.html#abfcf29f408abe6994df4484a432a7b03">lsp_non_pseudo_regenerate</a> (area, 2);
<a name="l01617"></a>01617 }
<a name="l01618"></a>01618 
<a name="l01619"></a>01619 <span class="keywordtype">int</span>
<a name="l01620"></a><a class="code" href="isis__lsp_8h.html#a31456cf3ff9953708c1d0328a99bfacc">01620</a> <a class="code" href="isis__lsp_8c.html#a31456cf3ff9953708c1d0328a99bfacc">lsp_regenerate_schedule</a> (<span class="keyword">struct</span> <a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l01621"></a>01621 {
<a name="l01622"></a>01622   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
<a name="l01623"></a>01623   u_char <span class="keywordtype">id</span>[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 2];
<a name="l01624"></a>01624   time_t now, diff;
<a name="l01625"></a>01625   <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (<span class="keywordtype">id</span>, isis-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l01626"></a>01626   <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (<span class="keywordtype">id</span>) = <a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (<span class="keywordtype">id</span>) = 0;
<a name="l01627"></a>01627   now = time (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l01628"></a>01628   <span class="comment">/*</span>
<a name="l01629"></a>01629 <span class="comment">   * First level 1</span>
<a name="l01630"></a>01630 <span class="comment">   */</span>
<a name="l01631"></a>01631   <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>)
<a name="l01632"></a>01632     {
<a name="l01633"></a>01633       lsp = <a class="code" href="isis__lsp_8c.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (<span class="keywordtype">id</span>, area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[0]);
<a name="l01634"></a>01634       <span class="keywordflow">if</span> (!lsp || area-&gt;<a class="code" href="structisis__area.html#affd6c83dc67d351f652205c64b91da1a">lsp_regenerate_pending</a>[0])
<a name="l01635"></a>01635     <span class="keywordflow">goto</span> L2;
<a name="l01636"></a>01636       <span class="comment">/*</span>
<a name="l01637"></a>01637 <span class="comment">       * Throttle avoidance</span>
<a name="l01638"></a>01638 <span class="comment">       */</span>
<a name="l01639"></a>01639       diff = now - lsp-&gt;<a class="code" href="structisis__lsp.html#aea2ad3865df52bc01bc01fae22bf83a0">last_generated</a>;
<a name="l01640"></a>01640       <span class="keywordflow">if</span> (diff &lt; <a class="code" href="isis__constants_8h.html#a0e57941273060782de67219f33f895c1">MIN_LSP_GEN_INTERVAL</a>)
<a name="l01641"></a>01641     {
<a name="l01642"></a>01642       area-&gt;<a class="code" href="structisis__area.html#affd6c83dc67d351f652205c64b91da1a">lsp_regenerate_pending</a>[0] = 1;
<a name="l01643"></a>01643       <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (master, <a class="code" href="isis__lsp_8c.html#a99833cb66948d6aa881bca74ab942cc5">lsp_l1_regenerate</a>, area,
<a name="l01644"></a>01644                 <a class="code" href="isis__constants_8h.html#a0e57941273060782de67219f33f895c1">MIN_LSP_GEN_INTERVAL</a> - diff);
<a name="l01645"></a>01645       <span class="keywordflow">goto</span> L2;
<a name="l01646"></a>01646     }
<a name="l01647"></a>01647       <span class="keywordflow">else</span>
<a name="l01648"></a>01648     <a class="code" href="isis__lsp_8c.html#abfcf29f408abe6994df4484a432a7b03">lsp_non_pseudo_regenerate</a> (area, 1);
<a name="l01649"></a>01649     }
<a name="l01650"></a>01650   <span class="comment">/*</span>
<a name="l01651"></a>01651 <span class="comment">   * then 2</span>
<a name="l01652"></a>01652 <span class="comment">   */</span>
<a name="l01653"></a>01653 L2:
<a name="l01654"></a>01654   <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a9daa7fbf09b604c718f3bbe189aedd1a">IS_LEVEL_2</a>)
<a name="l01655"></a>01655     {
<a name="l01656"></a>01656       lsp = <a class="code" href="isis__lsp_8c.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (<span class="keywordtype">id</span>, area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[1]);
<a name="l01657"></a>01657       <span class="keywordflow">if</span> (!lsp || area-&gt;<a class="code" href="structisis__area.html#affd6c83dc67d351f652205c64b91da1a">lsp_regenerate_pending</a>[1])
<a name="l01658"></a>01658     <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
<a name="l01659"></a>01659       <span class="comment">/*</span>
<a name="l01660"></a>01660 <span class="comment">       * Throttle avoidance</span>
<a name="l01661"></a>01661 <span class="comment">       */</span>
<a name="l01662"></a>01662       diff = now - lsp-&gt;<a class="code" href="structisis__lsp.html#aea2ad3865df52bc01bc01fae22bf83a0">last_generated</a>;
<a name="l01663"></a>01663       <span class="keywordflow">if</span> (diff &lt; <a class="code" href="isis__constants_8h.html#a0e57941273060782de67219f33f895c1">MIN_LSP_GEN_INTERVAL</a>)
<a name="l01664"></a>01664     {
<a name="l01665"></a>01665       area-&gt;<a class="code" href="structisis__area.html#affd6c83dc67d351f652205c64b91da1a">lsp_regenerate_pending</a>[1] = 1;
<a name="l01666"></a>01666       <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (master, <a class="code" href="isis__lsp_8c.html#a4efb80c98e8582dc7609ffb9bdd6e597">lsp_l2_regenerate</a>, area,
<a name="l01667"></a>01667                 <a class="code" href="isis__constants_8h.html#a0e57941273060782de67219f33f895c1">MIN_LSP_GEN_INTERVAL</a> - diff);
<a name="l01668"></a>01668       <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
<a name="l01669"></a>01669     }
<a name="l01670"></a>01670       <span class="keywordflow">else</span>
<a name="l01671"></a>01671     <a class="code" href="isis__lsp_8c.html#abfcf29f408abe6994df4484a432a7b03">lsp_non_pseudo_regenerate</a> (area, 2);
<a name="l01672"></a>01672     }
<a name="l01673"></a>01673 
<a name="l01674"></a>01674   <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
<a name="l01675"></a>01675 }
<a name="l01676"></a>01676 
<a name="l01677"></a>01677 <span class="comment">/*</span>
<a name="l01678"></a>01678 <span class="comment"> * Funcs for pseudonode LSPs</span>
<a name="l01679"></a>01679 <span class="comment"> */</span>
<a name="l01680"></a>01680 
<a name="l01681"></a>01681 <span class="comment">/*</span>
<a name="l01682"></a>01682 <span class="comment"> * 7.3.8 and 7.3.10 Generation of level 1 and 2 pseudonode LSPs </span>
<a name="l01683"></a>01683 <span class="comment"> */</span>
<a name="l01684"></a>01684 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01685"></a><a class="code" href="isis__lsp_8c.html#a24dc6ec3f264c96f18a95ea1d6e5f1d2">01685</a> <a class="code" href="isis__lsp_8c.html#a24dc6ec3f264c96f18a95ea1d6e5f1d2">lsp_build_pseudo</a> (<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp, <span class="keyword">struct</span> <a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit,
<a name="l01686"></a>01686           <span class="keywordtype">int</span> <a class="code" href="structisis__lsp.html#ab719e4479e4fc861c4cfa7a3c9d403c6">level</a>)
<a name="l01687"></a>01687 {
<a name="l01688"></a>01688   <span class="keyword">struct </span><a class="code" href="structisis__adjacency.html">isis_adjacency</a> *adj;
<a name="l01689"></a>01689   <span class="keyword">struct </span><a class="code" href="structis__neigh.html">is_neigh</a> *<a class="code" href="structis__neigh.html">is_neigh</a>;
<a name="l01690"></a>01690   <span class="keyword">struct </span><a class="code" href="structte__is__neigh.html">te_is_neigh</a> *<a class="code" href="structte__is__neigh.html">te_is_neigh</a>;
<a name="l01691"></a>01691   <span class="keyword">struct </span><a class="code" href="structes__neigh.html">es_neigh</a> *<a class="code" href="structes__neigh.html">es_neigh</a>;
<a name="l01692"></a>01692   <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *adj_list;
<a name="l01693"></a>01693   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l01694"></a>01694   <span class="keyword">struct </span><a class="code" href="structisis__passwd.html">isis_passwd</a> *<a class="code" href="structisis__passwd.html#a4af92e1126df2d7d2abeef451c082567">passwd</a>;
<a name="l01695"></a>01695 
<a name="l01696"></a>01696   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (circuit);
<a name="l01697"></a>01697   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a569e39bbf7fafd533eae2eeafa671b8c">circ_type</a> == <a class="code" href="isis__circuit_8h.html#a01a94c5f24c88efb64f791a749ae8f95">CIRCUIT_T_BROADCAST</a>);
<a name="l01698"></a>01698 
<a name="l01699"></a>01699   <span class="keywordflow">if</span> (!circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#adb24376d01beb41cab0ed0c49c3a214c">is_dr</a>[level - 1])
<a name="l01700"></a>01700     <span class="keywordflow">return</span>;         <span class="comment">/* we are not DIS on this circuit */</span>
<a name="l01701"></a>01701 
<a name="l01702"></a>01702   lsp-&gt;<a class="code" href="structisis__lsp.html#ab719e4479e4fc861c4cfa7a3c9d403c6">level</a> = level;
<a name="l01703"></a>01703   <span class="keywordflow">if</span> (level == 1)
<a name="l01704"></a>01704     lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a405c4b662dc97846dcca65f5c851f485">lsp_bits</a> |= <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>;
<a name="l01705"></a>01705   <span class="keywordflow">else</span>
<a name="l01706"></a>01706     lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a405c4b662dc97846dcca65f5c851f485">lsp_bits</a> |= <a class="code" href="isis__constants_8h.html#a9daa7fbf09b604c718f3bbe189aedd1a">IS_LEVEL_2</a>;
<a name="l01707"></a>01707 
<a name="l01708"></a>01708   <span class="comment">/*</span>
<a name="l01709"></a>01709 <span class="comment">   * add self to IS neighbours </span>
<a name="l01710"></a>01710 <span class="comment">   */</span>
<a name="l01711"></a>01711   <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#ab59df347846030a9825a908f8fa1a4ae">oldmetric</a>)
<a name="l01712"></a>01712     {
<a name="l01713"></a>01713       <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01714"></a>01714     {
<a name="l01715"></a>01715       lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l01716"></a>01716       lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = <a class="code" href="isis__tlv_8c.html#accd0682e015f53c9040ca9a68fb1a963">free_tlv</a>;
<a name="l01717"></a>01717     }
<a name="l01718"></a>01718       is_neigh = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> is_neigh));
<a name="l01719"></a>01719 
<a name="l01720"></a>01720       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>, isis-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l01721"></a>01721       <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>, is_neigh);
<a name="l01722"></a>01722     }
<a name="l01723"></a>01723   <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#af81e14ff1b34169c5e05c287d7ff5529">newmetric</a>)
<a name="l01724"></a>01724     {
<a name="l01725"></a>01725       <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01726"></a>01726     {
<a name="l01727"></a>01727       lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l01728"></a>01728       lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = <a class="code" href="isis__tlv_8c.html#accd0682e015f53c9040ca9a68fb1a963">free_tlv</a>;
<a name="l01729"></a>01729     }
<a name="l01730"></a>01730       te_is_neigh = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> te_is_neigh));
<a name="l01731"></a>01731 
<a name="l01732"></a>01732       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>, isis-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l01733"></a>01733       <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>, te_is_neigh);
<a name="l01734"></a>01734     }
<a name="l01735"></a>01735 
<a name="l01736"></a>01736   adj_list = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l01737"></a>01737   <a class="code" href="isis__adjacency_8c.html#abcdb7608e2eb77b6e5f5bcc273c7c265">isis_adj_build_up_list</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#ada9bf2584373a37aed06b2e4c9e796f9">adjdb</a>[level - 1], adj_list);
<a name="l01738"></a>01738 
<a name="l01739"></a>01739   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (adj_list, node, adj))
<a name="l01740"></a>01740     {
<a name="l01741"></a>01741       <span class="keywordflow">if</span> (adj-&gt;<a class="code" href="structisis__adjacency.html#a94749cb53088c1898166a701f2a3931f">circuit_t</a> &amp; level)
<a name="l01742"></a>01742     {
<a name="l01743"></a>01743       <span class="keywordflow">if</span> ((level == 1 &amp;&amp; adj-&gt;<a class="code" href="structisis__adjacency.html#a187eb9cdad6881ecd2735b38a47e07e3">sys_type</a> == <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4daddebdf6ea1f78c8503dd520854310078">ISIS_SYSTYPE_L1_IS</a>) ||
<a name="l01744"></a>01744           (level == 1 &amp;&amp; adj-&gt;<a class="code" href="structisis__adjacency.html#a187eb9cdad6881ecd2735b38a47e07e3">sys_type</a> == <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4da615d7aa9f3d08cd8360e1b04a0b8806b">ISIS_SYSTYPE_L2_IS</a> &amp;&amp;
<a name="l01745"></a>01745           adj-&gt;<a class="code" href="structisis__adjacency.html#a3cb53910a1050483efa04d144bd57ffc">adj_usage</a> == <a class="code" href="isis__adjacency_8h.html#abbe0dae7a957cc6c9f9ae6a33739b434aae5d5e9d6b2655fbe76c0eaa011f9c58">ISIS_ADJ_LEVEL1AND2</a>) ||
<a name="l01746"></a>01746           (level == 2 &amp;&amp; adj-&gt;<a class="code" href="structisis__adjacency.html#a187eb9cdad6881ecd2735b38a47e07e3">sys_type</a> == <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4da615d7aa9f3d08cd8360e1b04a0b8806b">ISIS_SYSTYPE_L2_IS</a>))
<a name="l01747"></a>01747         {
<a name="l01748"></a>01748           <span class="comment">/* an IS neighbour -&gt; add it */</span>
<a name="l01749"></a>01749           <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#ab59df347846030a9825a908f8fa1a4ae">oldmetric</a>)
<a name="l01750"></a>01750         {
<a name="l01751"></a>01751           is_neigh = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> is_neigh));
<a name="l01752"></a>01752 
<a name="l01753"></a>01753           <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>, adj-&gt;<a class="code" href="structisis__adjacency.html#a7b23942ae5652d5cf59b263f131c2038">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l01754"></a>01754           <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>, is_neigh);
<a name="l01755"></a>01755         }
<a name="l01756"></a>01756           <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#af81e14ff1b34169c5e05c287d7ff5529">newmetric</a>)
<a name="l01757"></a>01757         {
<a name="l01758"></a>01758           te_is_neigh = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>,
<a name="l01759"></a>01759                      <span class="keyword">sizeof</span> (<span class="keyword">struct</span> te_is_neigh));
<a name="l01760"></a>01760           <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>, adj-&gt;<a class="code" href="structisis__adjacency.html#a7b23942ae5652d5cf59b263f131c2038">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l01761"></a>01761           <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>, te_is_neigh);
<a name="l01762"></a>01762         }
<a name="l01763"></a>01763         }
<a name="l01764"></a>01764       <span class="keywordflow">else</span> <span class="keywordflow">if</span> (level == 1 &amp;&amp; adj-&gt;<a class="code" href="structisis__adjacency.html#a187eb9cdad6881ecd2735b38a47e07e3">sys_type</a> == <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4da0b5dc35b6ff6333177392a069af08ce1">ISIS_SYSTYPE_ES</a>)
<a name="l01765"></a>01765         {
<a name="l01766"></a>01766           <span class="comment">/* an ES neigbour add it, if we are building level 1 LSP */</span>
<a name="l01767"></a>01767           <span class="comment">/* FIXME: the tlv-format is hard to use here */</span>
<a name="l01768"></a>01768           <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#acda3e4d69df4661e1d81a1df2d03a7dd">es_neighs</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01769"></a>01769         {
<a name="l01770"></a>01770           lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#acda3e4d69df4661e1d81a1df2d03a7dd">es_neighs</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l01771"></a>01771           lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#acda3e4d69df4661e1d81a1df2d03a7dd">es_neighs</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = <a class="code" href="isis__tlv_8c.html#accd0682e015f53c9040ca9a68fb1a963">free_tlv</a>;
<a name="l01772"></a>01772         }
<a name="l01773"></a>01773           es_neigh = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> es_neigh));
<a name="l01774"></a>01774           
<a name="l01775"></a>01775           <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;es_neigh-&gt;<a class="code" href="structes__neigh.html#a0f09f7880bc288b9931a8c453cc8d8e3">first_es_neigh</a>, adj-&gt;<a class="code" href="structisis__adjacency.html#a7b23942ae5652d5cf59b263f131c2038">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l01776"></a>01776           <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#acda3e4d69df4661e1d81a1df2d03a7dd">es_neighs</a>, es_neigh);
<a name="l01777"></a>01777         }
<a name="l01778"></a>01778     }
<a name="l01779"></a>01779     }
<a name="l01780"></a>01780 
<a name="l01781"></a>01781   <span class="comment">/* Reset endp of stream to overwrite only TLV part of it. */</span>
<a name="l01782"></a>01782   <a class="code" href="stream_8c.html#aee8fd31485ebc2f0a556a6a5d5c2d1e6">stream_reset</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>);
<a name="l01783"></a>01783   <a class="code" href="stream_8c.html#aa8fdf46961b0a0aa3d014bb602712076">stream_forward_endp</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>, <a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a> + <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>);
<a name="l01784"></a>01784 
<a name="l01785"></a>01785   <span class="comment">/*</span>
<a name="l01786"></a>01786 <span class="comment">   * Add the authentication info if it&#39;s present</span>
<a name="l01787"></a>01787 <span class="comment">   */</span>
<a name="l01788"></a>01788   (level == 1) ? (passwd = &amp;circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#afb66934e4bd3bda094550517a94de442">area_passwd</a>) :
<a name="l01789"></a>01789     (passwd = &amp;circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a60cd44a3a31b36dc808ad3fd9efc97a0">domain_passwd</a>);
<a name="l01790"></a>01790   <span class="keywordflow">if</span> (passwd-&gt;<a class="code" href="structisis__passwd.html#a874984e0745fbcb41df9f463d831be67">type</a>)
<a name="l01791"></a>01791     {
<a name="l01792"></a>01792       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a53dc2cb65bc632c84b3d702ab1dc16ce">auth_info</a>, passwd, sizeof (<span class="keyword">struct</span> <a class="code" href="structisis__passwd.html">isis_passwd</a>));
<a name="l01793"></a>01793       <a class="code" href="isis__tlv_8c.html#a02f053566530986751054dcf500af3a9">tlv_add_authinfo</a> (passwd-&gt;<a class="code" href="structisis__passwd.html#a874984e0745fbcb41df9f463d831be67">type</a>, passwd-&gt;<a class="code" href="structisis__passwd.html#a3981443a6501783995b003ab8fd82f48">len</a>, passwd-&gt;<a class="code" href="structisis__passwd.html#a4af92e1126df2d7d2abeef451c082567">passwd</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>);
<a name="l01794"></a>01794     }
<a name="l01795"></a>01795 
<a name="l01796"></a>01796   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a> &amp;&amp; <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>) &gt; 0)
<a name="l01797"></a>01797     <a class="code" href="isis__tlv_8c.html#aff9156f858532767e00e9f80f79cbb52">tlv_add_is_neighs</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>);
<a name="l01798"></a>01798 
<a name="l01799"></a>01799   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a> &amp;&amp; <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>) &gt; 0)
<a name="l01800"></a>01800     <a class="code" href="isis__tlv_8c.html#aeca253d796ceaff696f3c570bab0aec5">tlv_add_te_is_neighs</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>);
<a name="l01801"></a>01801 
<a name="l01802"></a>01802   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#acda3e4d69df4661e1d81a1df2d03a7dd">es_neighs</a> &amp;&amp; <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#acda3e4d69df4661e1d81a1df2d03a7dd">es_neighs</a>) &gt; 0)
<a name="l01803"></a>01803     <a class="code" href="isis__tlv_8c.html#aff9156f858532767e00e9f80f79cbb52">tlv_add_is_neighs</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#acda3e4d69df4661e1d81a1df2d03a7dd">es_neighs</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>);
<a name="l01804"></a>01804 
<a name="l01805"></a>01805   lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6f17d9f3a17625db25044ff0ff3da330">pdu_len</a> = htons (<a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>));
<a name="l01806"></a>01806   <a class="code" href="checksum_8c.html#a097fa5404eb654e8e112bb954bf4ef15">fletcher_checksum</a> (<a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>) + 12,
<a name="l01807"></a>01807            ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6f17d9f3a17625db25044ff0ff3da330">pdu_len</a>) - 12, 12);
<a name="l01808"></a>01808 
<a name="l01809"></a>01809   <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (adj_list);
<a name="l01810"></a>01810 
<a name="l01811"></a>01811   <span class="keywordflow">return</span>;
<a name="l01812"></a>01812 }
<a name="l01813"></a>01813 
<a name="l01814"></a>01814 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l01815"></a><a class="code" href="isis__lsp_8c.html#a122acef1e7b0bdf1e7f683c670525723">01815</a> <a class="code" href="isis__lsp_8c.html#a122acef1e7b0bdf1e7f683c670525723">lsp_pseudo_regenerate</a> (<span class="keyword">struct</span> <a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit, <span class="keywordtype">int</span> level)
<a name="l01816"></a>01816 {
<a name="l01817"></a>01817   <a class="code" href="structdict__t.html">dict_t</a> *lspdb = circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level - 1];
<a name="l01818"></a>01818   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
<a name="l01819"></a>01819   u_char <a class="code" href="isis__pdu_8h.html#a2991a019d1da82fb5406bff5ab46dcf6">lsp_id</a>[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 2];
<a name="l01820"></a>01820 
<a name="l01821"></a>01821   <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (lsp_id, isis-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l01822"></a>01822   <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (lsp_id) = circuit-&gt;<a class="code" href="structisis__circuit.html#a10453f6bcc1e8f1cb466240a81836ba9">circuit_id</a>;
<a name="l01823"></a>01823   <a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (lsp_id) = 0;
<a name="l01824"></a>01824 
<a name="l01825"></a>01825   lsp = <a class="code" href="isis__lsp_8c.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (lsp_id, lspdb);
<a name="l01826"></a>01826 
<a name="l01827"></a>01827   <span class="keywordflow">if</span> (!lsp)
<a name="l01828"></a>01828     {
<a name="l01829"></a>01829       <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;lsp_pseudo_regenerate(): no l%d LSP %s found!&quot;</span>, level,
<a name="l01830"></a>01830         <a class="code" href="isis__misc_8c.html#a3a0e7f92008e3167e2c09b8761d06766">rawlspid_print</a> (lsp_id));
<a name="l01831"></a>01831       <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#ac694b0bd16857a3d50deea71f78e8b7f">ISIS_ERROR</a>;
<a name="l01832"></a>01832     }
<a name="l01833"></a>01833   <a class="code" href="isis__lsp_8c.html#aa0d51cf5f190804be9b73b52db69ccd6">lsp_clear_data</a> (lsp);
<a name="l01834"></a>01834 
<a name="l01835"></a>01835   <a class="code" href="isis__lsp_8c.html#a24dc6ec3f264c96f18a95ea1d6e5f1d2">lsp_build_pseudo</a> (lsp, circuit, level);
<a name="l01836"></a>01836 
<a name="l01837"></a>01837   lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a> =
<a name="l01838"></a>01838     htons (<a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#af0e5e6cfa7b7536e0700dd3645025d9b">max_lsp_lifetime</a>[level - 1],
<a name="l01839"></a>01839             <a class="code" href="isis__constants_8h.html#adfaaf0b4e69adf9ae9c8dc47e3e00918">MAX_AGE_JITTER</a>));
<a name="l01840"></a>01840 
<a name="l01841"></a>01841   <a class="code" href="isis__lsp_8c.html#a95c7b93c607b9aba6b6697b136d9ad98">lsp_inc_seqnum</a> (lsp, 0);
<a name="l01842"></a>01842 
<a name="l01843"></a>01843   <span class="keywordflow">if</span> (isis-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#abd8d8358bf794de3d9fba9ef5de689b3">DEBUG_UPDATE_PACKETS</a>)
<a name="l01844"></a>01844     {
<a name="l01845"></a>01845       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Upd (%s): refreshing pseudo LSP L%d %s&quot;</span>,
<a name="l01846"></a>01846           circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>, level,
<a name="l01847"></a>01847           <a class="code" href="isis__misc_8c.html#a3a0e7f92008e3167e2c09b8761d06766">rawlspid_print</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>));
<a name="l01848"></a>01848     }
<a name="l01849"></a>01849 
<a name="l01850"></a>01850   lsp-&gt;<a class="code" href="structisis__lsp.html#aea2ad3865df52bc01bc01fae22bf83a0">last_generated</a> = time (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l01851"></a>01851   <a class="code" href="isis__flags_8h.html#a57f45d9b4a8c70c53f796d96e5555fac">ISIS_FLAGS_SET_ALL</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a96d155dbf3bbd20256cf7a68c8d9fd20">SRMflags</a>);
<a name="l01852"></a>01852 
<a name="l01853"></a>01853   <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
<a name="l01854"></a>01854 }
<a name="l01855"></a>01855 
<a name="l01856"></a>01856 <span class="keywordtype">int</span>
<a name="l01857"></a><a class="code" href="isis__lsp_8h.html#a9813405a112948deee3cb3c0b6b9e91b">01857</a> <a class="code" href="isis__lsp_8c.html#a9813405a112948deee3cb3c0b6b9e91b">lsp_l1_refresh_pseudo</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l01858"></a>01858 {
<a name="l01859"></a>01859   <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
<a name="l01860"></a>01860   <span class="keywordtype">int</span> retval;
<a name="l01861"></a>01861   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> ref_time;
<a name="l01862"></a>01862 
<a name="l01863"></a>01863   circuit = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l01864"></a>01864 
<a name="l01865"></a>01865   <span class="keywordflow">if</span> (!circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#adb24376d01beb41cab0ed0c49c3a214c">is_dr</a>[0])
<a name="l01866"></a>01866     <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#ac694b0bd16857a3d50deea71f78e8b7f">ISIS_ERROR</a>;      <span class="comment">/* FIXME: purge and such */</span>
<a name="l01867"></a>01867 
<a name="l01868"></a>01868   circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#afbf6ada19d1fda134ede0986124680ac">t_refresh_pseudo_lsp</a>[0] = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01869"></a>01869 
<a name="l01870"></a>01870   retval = <a class="code" href="isis__lsp_8c.html#a122acef1e7b0bdf1e7f683c670525723">lsp_pseudo_regenerate</a> (circuit, 1);
<a name="l01871"></a>01871 
<a name="l01872"></a>01872   ref_time = circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[0] &gt; <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> ?
<a name="l01873"></a>01873     <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> : circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[0];
<a name="l01874"></a>01874 
<a name="l01875"></a>01875   <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#afbf6ada19d1fda134ede0986124680ac">t_refresh_pseudo_lsp</a>[0],
<a name="l01876"></a>01876            <a class="code" href="isis__lsp_8c.html#a9813405a112948deee3cb3c0b6b9e91b">lsp_l1_refresh_pseudo</a>, circuit,
<a name="l01877"></a>01877            <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (ref_time, <a class="code" href="isis__constants_8h.html#adfaaf0b4e69adf9ae9c8dc47e3e00918">MAX_AGE_JITTER</a>));
<a name="l01878"></a>01878 
<a name="l01879"></a>01879   <span class="keywordflow">return</span> retval;
<a name="l01880"></a>01880 }
<a name="l01881"></a>01881 
<a name="l01882"></a>01882 <span class="keywordtype">int</span>
<a name="l01883"></a><a class="code" href="isis__lsp_8h.html#ad3a3875129a37eb5a3df3eaf3fcd49a1">01883</a> <a class="code" href="isis__lsp_8c.html#ad3a3875129a37eb5a3df3eaf3fcd49a1">lsp_l1_pseudo_generate</a> (<span class="keyword">struct</span> <a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit)
<a name="l01884"></a>01884 {
<a name="l01885"></a>01885   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
<a name="l01886"></a>01886   u_char <span class="keywordtype">id</span>[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 2];
<a name="l01887"></a>01887   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> ref_time;
<a name="l01888"></a>01888 
<a name="l01889"></a>01889   <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (<span class="keywordtype">id</span>, isis-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l01890"></a>01890   <a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (<span class="keywordtype">id</span>) = 0;
<a name="l01891"></a>01891   <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (<span class="keywordtype">id</span>) = circuit-&gt;<a class="code" href="structisis__circuit.html#a10453f6bcc1e8f1cb466240a81836ba9">circuit_id</a>;
<a name="l01892"></a>01892 
<a name="l01893"></a>01893   <span class="comment">/*</span>
<a name="l01894"></a>01894 <span class="comment">   * If for some reason have a pseudo LSP in the db already -&gt; regenerate</span>
<a name="l01895"></a>01895 <span class="comment">   */</span>
<a name="l01896"></a>01896   <span class="keywordflow">if</span> (<a class="code" href="isis__lsp_8c.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (<span class="keywordtype">id</span>, circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[0]))
<a name="l01897"></a>01897     <span class="keywordflow">return</span> <a class="code" href="isis__lsp_8c.html#a122acef1e7b0bdf1e7f683c670525723">lsp_pseudo_regenerate</a> (circuit, 1);
<a name="l01898"></a>01898   lsp = <a class="code" href="isis__lsp_8c.html#af43ff22a21554145c239b6c37556ce1a">lsp_new</a> (<span class="keywordtype">id</span>, circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#af0e5e6cfa7b7536e0700dd3645025d9b">max_lsp_lifetime</a>[0],
<a name="l01899"></a>01899          1, circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a>, 0, 1);
<a name="l01900"></a>01900 
<a name="l01901"></a>01901   <a class="code" href="isis__lsp_8c.html#a24dc6ec3f264c96f18a95ea1d6e5f1d2">lsp_build_pseudo</a> (lsp, circuit, 1);
<a name="l01902"></a>01902 
<a name="l01903"></a>01903   lsp-&gt;<a class="code" href="structisis__lsp.html#a92fb19d67740e3bfde012e19af97b7d3">own_lsp</a> = 1;
<a name="l01904"></a>01904   <a class="code" href="isis__lsp_8c.html#a09d8f3bcc073c87f01c32b2f0994fb04">lsp_insert</a> (lsp, circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[0]);
<a name="l01905"></a>01905   <a class="code" href="isis__flags_8h.html#a57f45d9b4a8c70c53f796d96e5555fac">ISIS_FLAGS_SET_ALL</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a96d155dbf3bbd20256cf7a68c8d9fd20">SRMflags</a>);
<a name="l01906"></a>01906 
<a name="l01907"></a>01907   ref_time = circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[0] &gt; <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> ?
<a name="l01908"></a>01908     <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> : circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[0];
<a name="l01909"></a>01909 
<a name="l01910"></a>01910   <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#afbf6ada19d1fda134ede0986124680ac">t_refresh_pseudo_lsp</a>[0],
<a name="l01911"></a>01911            <a class="code" href="isis__lsp_8c.html#a9813405a112948deee3cb3c0b6b9e91b">lsp_l1_refresh_pseudo</a>, circuit,
<a name="l01912"></a>01912            <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (ref_time, <a class="code" href="isis__constants_8h.html#adfaaf0b4e69adf9ae9c8dc47e3e00918">MAX_AGE_JITTER</a>));
<a name="l01913"></a>01913 
<a name="l01914"></a>01914   <span class="keywordflow">return</span> <a class="code" href="isis__lsp_8c.html#a31456cf3ff9953708c1d0328a99bfacc">lsp_regenerate_schedule</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>);
<a name="l01915"></a>01915 }
<a name="l01916"></a>01916 
<a name="l01917"></a>01917 <span class="keywordtype">int</span>
<a name="l01918"></a><a class="code" href="isis__lsp_8h.html#a4dcda3f6c233b53554094b98811b3394">01918</a> <a class="code" href="isis__lsp_8c.html#a4dcda3f6c233b53554094b98811b3394">lsp_l2_refresh_pseudo</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l01919"></a>01919 {
<a name="l01920"></a>01920   <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
<a name="l01921"></a>01921   <span class="keywordtype">int</span> retval;
<a name="l01922"></a>01922   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> ref_time;
<a name="l01923"></a>01923   circuit = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l01924"></a>01924 
<a name="l01925"></a>01925   <span class="keywordflow">if</span> (!circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#adb24376d01beb41cab0ed0c49c3a214c">is_dr</a>[1])
<a name="l01926"></a>01926     <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#ac694b0bd16857a3d50deea71f78e8b7f">ISIS_ERROR</a>;      <span class="comment">/* FIXME: purge and such */</span>
<a name="l01927"></a>01927 
<a name="l01928"></a>01928   circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#afbf6ada19d1fda134ede0986124680ac">t_refresh_pseudo_lsp</a>[1] = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01929"></a>01929 
<a name="l01930"></a>01930   retval = <a class="code" href="isis__lsp_8c.html#a122acef1e7b0bdf1e7f683c670525723">lsp_pseudo_regenerate</a> (circuit, 2);
<a name="l01931"></a>01931 
<a name="l01932"></a>01932   ref_time = circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[1] &gt; <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> ?
<a name="l01933"></a>01933     <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> : circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[1];
<a name="l01934"></a>01934 
<a name="l01935"></a>01935   <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#afbf6ada19d1fda134ede0986124680ac">t_refresh_pseudo_lsp</a>[1],
<a name="l01936"></a>01936            <a class="code" href="isis__lsp_8c.html#a4dcda3f6c233b53554094b98811b3394">lsp_l2_refresh_pseudo</a>, circuit,
<a name="l01937"></a>01937            <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (ref_time, <a class="code" href="isis__constants_8h.html#adfaaf0b4e69adf9ae9c8dc47e3e00918">MAX_AGE_JITTER</a>));
<a name="l01938"></a>01938 
<a name="l01939"></a>01939   <span class="keywordflow">return</span> retval;
<a name="l01940"></a>01940 }
<a name="l01941"></a>01941 
<a name="l01942"></a>01942 <span class="keywordtype">int</span>
<a name="l01943"></a><a class="code" href="isis__lsp_8h.html#a934808749ecec8173e1ba46880c80bd6">01943</a> <a class="code" href="isis__lsp_8c.html#a934808749ecec8173e1ba46880c80bd6">lsp_l2_pseudo_generate</a> (<span class="keyword">struct</span> <a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit)
<a name="l01944"></a>01944 {
<a name="l01945"></a>01945   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
<a name="l01946"></a>01946   u_char <span class="keywordtype">id</span>[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 2];
<a name="l01947"></a>01947   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> ref_time;
<a name="l01948"></a>01948 
<a name="l01949"></a>01949   <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (<span class="keywordtype">id</span>, isis-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l01950"></a>01950   <a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (<span class="keywordtype">id</span>) = 0;
<a name="l01951"></a>01951   <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (<span class="keywordtype">id</span>) = circuit-&gt;<a class="code" href="structisis__circuit.html#a10453f6bcc1e8f1cb466240a81836ba9">circuit_id</a>;
<a name="l01952"></a>01952 
<a name="l01953"></a>01953   <span class="keywordflow">if</span> (<a class="code" href="isis__lsp_8c.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (<span class="keywordtype">id</span>, circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[1]))
<a name="l01954"></a>01954     <span class="keywordflow">return</span> <a class="code" href="isis__lsp_8c.html#a122acef1e7b0bdf1e7f683c670525723">lsp_pseudo_regenerate</a> (circuit, 2);
<a name="l01955"></a>01955 
<a name="l01956"></a>01956   lsp = <a class="code" href="isis__lsp_8c.html#af43ff22a21554145c239b6c37556ce1a">lsp_new</a> (<span class="keywordtype">id</span>, circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#af0e5e6cfa7b7536e0700dd3645025d9b">max_lsp_lifetime</a>[1],
<a name="l01957"></a>01957          1, circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a>, 0, 2);
<a name="l01958"></a>01958 
<a name="l01959"></a>01959   <a class="code" href="isis__lsp_8c.html#a24dc6ec3f264c96f18a95ea1d6e5f1d2">lsp_build_pseudo</a> (lsp, circuit, 2);
<a name="l01960"></a>01960 
<a name="l01961"></a>01961   ref_time = circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[1] &gt; <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> ?
<a name="l01962"></a>01962     <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> : circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[1];
<a name="l01963"></a>01963 
<a name="l01964"></a>01964 
<a name="l01965"></a>01965   lsp-&gt;<a class="code" href="structisis__lsp.html#a92fb19d67740e3bfde012e19af97b7d3">own_lsp</a> = 1;
<a name="l01966"></a>01966   <a class="code" href="isis__lsp_8c.html#a09d8f3bcc073c87f01c32b2f0994fb04">lsp_insert</a> (lsp, circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[1]);
<a name="l01967"></a>01967   <a class="code" href="isis__flags_8h.html#a57f45d9b4a8c70c53f796d96e5555fac">ISIS_FLAGS_SET_ALL</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a96d155dbf3bbd20256cf7a68c8d9fd20">SRMflags</a>);
<a name="l01968"></a>01968 
<a name="l01969"></a>01969   <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#afbf6ada19d1fda134ede0986124680ac">t_refresh_pseudo_lsp</a>[1],
<a name="l01970"></a>01970            <a class="code" href="isis__lsp_8c.html#a4dcda3f6c233b53554094b98811b3394">lsp_l2_refresh_pseudo</a>, circuit,
<a name="l01971"></a>01971            <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (ref_time, <a class="code" href="isis__constants_8h.html#adfaaf0b4e69adf9ae9c8dc47e3e00918">MAX_AGE_JITTER</a>));
<a name="l01972"></a>01972 
<a name="l01973"></a>01973   <span class="keywordflow">return</span> <a class="code" href="isis__lsp_8c.html#a31456cf3ff9953708c1d0328a99bfacc">lsp_regenerate_schedule</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>);
<a name="l01974"></a>01974 }
<a name="l01975"></a>01975 
<a name="l01976"></a>01976 <span class="comment">/*</span>
<a name="l01977"></a>01977 <span class="comment"> * Walk through LSPs for an area</span>
<a name="l01978"></a>01978 <span class="comment"> *  - set remaining lifetime</span>
<a name="l01979"></a>01979 <span class="comment"> *  - set LSPs with SRMflag set for sending</span>
<a name="l01980"></a>01980 <span class="comment"> */</span>
<a name="l01981"></a>01981 <span class="keywordtype">int</span>
<a name="l01982"></a><a class="code" href="isis__lsp_8h.html#a8987f46b1c21556ff1281a72cce6636a">01982</a> <a class="code" href="isis__lsp_8c.html#a8987f46b1c21556ff1281a72cce6636a">lsp_tick</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l01983"></a>01983 {
<a name="l01984"></a>01984   <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01985"></a>01985   <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
<a name="l01986"></a>01986   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
<a name="l01987"></a>01987   <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *lsp_list;
<a name="l01988"></a>01988   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *lspnode, *cnode;
<a name="l01989"></a>01989   <a class="code" href="structdnode__t.html">dnode_t</a> *dnode, *dnode_next;
<a name="l01990"></a>01990   <span class="keywordtype">int</span> level;
<a name="l01991"></a>01991 
<a name="l01992"></a>01992   lsp_list = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l01993"></a>01993 
<a name="l01994"></a>01994   area = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l01995"></a>01995   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (area);
<a name="l01996"></a>01996   area-&gt;<a class="code" href="structisis__area.html#a48fdf6a46c715d962319677fc3a5b183">t_tick</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01997"></a>01997   <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, area-&gt;<a class="code" href="structisis__area.html#a48fdf6a46c715d962319677fc3a5b183">t_tick</a>, <a class="code" href="isis__lsp_8c.html#a8987f46b1c21556ff1281a72cce6636a">lsp_tick</a>, area, 1);
<a name="l01998"></a>01998 
<a name="l01999"></a>01999   <span class="comment">/*</span>
<a name="l02000"></a>02000 <span class="comment">   * Build a list of LSPs with (any) SRMflag set</span>
<a name="l02001"></a>02001 <span class="comment">   * and removed the ones that have aged out</span>
<a name="l02002"></a>02002 <span class="comment">   */</span>
<a name="l02003"></a>02003   <span class="keywordflow">for</span> (level = 0; level &lt; <a class="code" href="isis__constants_8h.html#a75b03ae2a0d626c94fe847f7d790f4af">ISIS_LEVELS</a>; level++)
<a name="l02004"></a>02004     {
<a name="l02005"></a>02005       <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level] &amp;&amp; <a class="code" href="dict_8h.html#a392c768130a1c7ed5a6c2f299cd0d2e8">dict_count</a> (area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level]) &gt; 0)
<a name="l02006"></a>02006     {
<a name="l02007"></a>02007       dnode = <a class="code" href="dict_8c.html#a2b439ffb63f9b3089d0306ec3b26672f">dict_first</a> (area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level]);
<a name="l02008"></a>02008       <span class="keywordflow">while</span> (dnode != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02009"></a>02009         {
<a name="l02010"></a>02010           dnode_next = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a> (area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level], dnode);
<a name="l02011"></a>02011           lsp = <a class="code" href="dict_8h.html#a17fccc85aae3874de7152f103d5945bc">dnode_get</a> (dnode);
<a name="l02012"></a>02012           <a class="code" href="isis__lsp_8c.html#a6ae8e0acaadc3ea2b9cf07af727cef18">lsp_set_time</a> (lsp);
<a name="l02013"></a>02013           <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#aa2d9dce6fceedcb6af88a73f2f5a0616">age_out</a> == 0)
<a name="l02014"></a>02014         {
<a name="l02015"></a>02015 
<a name="l02016"></a>02016           <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Upd (%s): L%u LSP %s seq 0x%08x aged out&quot;</span>,
<a name="l02017"></a>02017                   area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>,
<a name="l02018"></a>02018                   lsp-&gt;<a class="code" href="structisis__lsp.html#ab719e4479e4fc861c4cfa7a3c9d403c6">level</a>,
<a name="l02019"></a>02019                   <a class="code" href="isis__misc_8c.html#a3a0e7f92008e3167e2c09b8761d06766">rawlspid_print</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>),
<a name="l02020"></a>02020                   ntohl (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a>));
<a name="l02021"></a>02021 <span class="preprocessor">#ifdef TOPOLOGY_GENERATE</span>
<a name="l02022"></a>02022 <span class="preprocessor"></span>          <span class="keywordflow">if</span> (lsp-&gt;from_topology)
<a name="l02023"></a>02023             <a class="code" href="thread_8h.html#ae1dfd3f5f643212148d60a41d9f2192a">THREAD_TIMER_OFF</a> (lsp-&gt;t_lsp_top_ref);
<a name="l02024"></a>02024 <span class="preprocessor">#endif </span><span class="comment">/* TOPOLOGY_GENERATE */</span>
<a name="l02025"></a>02025           <a class="code" href="isis__lsp_8c.html#a8910aea25a4f0680a4b4945609aaf97b">lsp_destroy</a> (lsp);
<a name="l02026"></a>02026           <a class="code" href="dict_8c.html#ad51f28cd1829e1fd66caf58f553d794e">dict_delete</a> (area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level], dnode);
<a name="l02027"></a>02027         }
<a name="l02028"></a>02028           <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="isis__flags_8c.html#aa104abd02ef1ceeb11c8cea01a058796">flags_any_set</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a96d155dbf3bbd20256cf7a68c8d9fd20">SRMflags</a>))
<a name="l02029"></a>02029         <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (lsp_list, lsp);
<a name="l02030"></a>02030           dnode = dnode_next;
<a name="l02031"></a>02031         }
<a name="l02032"></a>02032 
<a name="l02033"></a>02033       <span class="comment">/*</span>
<a name="l02034"></a>02034 <span class="comment">       * Send LSPs on circuits indicated by the SRMflags</span>
<a name="l02035"></a>02035 <span class="comment">       */</span>
<a name="l02036"></a>02036       <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (lsp_list) &gt; 0)
<a name="l02037"></a>02037         {
<a name="l02038"></a>02038               <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (area-&gt;<a class="code" href="structisis__area.html#a1ef8753b22245b7d8fff0331deef3b21">circuit_list</a>, cnode, circuit))
<a name="l02039"></a>02039         {
<a name="l02040"></a>02040                   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp_list, lspnode, lsp))
<a name="l02041"></a>02041             {
<a name="l02042"></a>02042               <span class="keywordflow">if</span> (<a class="code" href="isis__flags_8h.html#a7d42f17e426ff47043c37733fc3c672d">ISIS_CHECK_FLAG</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a96d155dbf3bbd20256cf7a68c8d9fd20">SRMflags</a>, circuit))
<a name="l02043"></a>02043             {
<a name="l02044"></a>02044               <span class="comment">/* FIXME: if same or elder lsp is already in lsp</span>
<a name="l02045"></a>02045 <span class="comment">               * queue */</span>
<a name="l02046"></a>02046               <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a3540c30e2a6967daf9f9e1b76b00e2be">lsp_queue</a>, lsp);
<a name="l02047"></a>02047               <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (master, <a class="code" href="isis__pdu_8c.html#a23b42a7925a367125e6e0fa3db33f597">send_lsp</a>, circuit, 0);
<a name="l02048"></a>02048             }
<a name="l02049"></a>02049             }
<a name="l02050"></a>02050         }
<a name="l02051"></a>02051         }
<a name="l02052"></a>02052       <a class="code" href="linklist_8c.html#acd6daa4be8ab3f175376e63c9d9c9500">list_delete_all_node</a> (lsp_list);
<a name="l02053"></a>02053     }
<a name="l02054"></a>02054     }
<a name="l02055"></a>02055 
<a name="l02056"></a>02056   <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (lsp_list);
<a name="l02057"></a>02057 
<a name="l02058"></a>02058   <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
<a name="l02059"></a>02059 }
<a name="l02060"></a>02060 
<a name="l02061"></a>02061 <span class="keywordtype">void</span>
<a name="l02062"></a><a class="code" href="isis__lsp_8h.html#a326bd66d63f17cf92421e5df0d29fe32">02062</a> <a class="code" href="isis__lsp_8c.html#a326bd66d63f17cf92421e5df0d29fe32">lsp_purge_dr</a> (u_char * <span class="keywordtype">id</span>, <span class="keyword">struct</span> <a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit, <span class="keywordtype">int</span> level)
<a name="l02063"></a>02063 {
<a name="l02064"></a>02064   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
<a name="l02065"></a>02065 
<a name="l02066"></a>02066   lsp = <a class="code" href="isis__lsp_8c.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (<span class="keywordtype">id</span>, circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level - 1]);
<a name="l02067"></a>02067 
<a name="l02068"></a>02068   <span class="keywordflow">if</span> (lsp &amp;&amp; lsp-&gt;<a class="code" href="structisis__lsp.html#aab633c4836fd6efe80eed373b169fb73">purged</a> == 0)
<a name="l02069"></a>02069     {
<a name="l02070"></a>02070       lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a> = htons (0);
<a name="l02071"></a>02071       lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6f17d9f3a17625db25044ff0ff3da330">pdu_len</a> =
<a name="l02072"></a>02072     htons (<a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a> + <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>);
<a name="l02073"></a>02073       lsp-&gt;<a class="code" href="structisis__lsp.html#aab633c4836fd6efe80eed373b169fb73">purged</a> = 0;
<a name="l02074"></a>02074       <a class="code" href="checksum_8c.html#a097fa5404eb654e8e112bb954bf4ef15">fletcher_checksum</a> (<a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>) + 12,
<a name="l02075"></a>02075                ntohs (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6f17d9f3a17625db25044ff0ff3da330">pdu_len</a>) - 12, 12);
<a name="l02076"></a>02076       <a class="code" href="isis__flags_8h.html#a57f45d9b4a8c70c53f796d96e5555fac">ISIS_FLAGS_SET_ALL</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a96d155dbf3bbd20256cf7a68c8d9fd20">SRMflags</a>);
<a name="l02077"></a>02077     }
<a name="l02078"></a>02078 
<a name="l02079"></a>02079   <span class="keywordflow">return</span>;
<a name="l02080"></a>02080 }
<a name="l02081"></a>02081 
<a name="l02082"></a>02082 <span class="comment">/*</span>
<a name="l02083"></a>02083 <span class="comment"> * Purge own LSP that is received and we don&#39;t have. </span>
<a name="l02084"></a>02084 <span class="comment"> * -&gt; Do as in 7.3.16.4</span>
<a name="l02085"></a>02085 <span class="comment"> */</span>
<a name="l02086"></a>02086 <span class="keywordtype">void</span>
<a name="l02087"></a><a class="code" href="isis__lsp_8h.html#a3b934844c90f614a6f5f4a2734a23e77">02087</a> <a class="code" href="isis__lsp_8c.html#a3b934844c90f614a6f5f4a2734a23e77">lsp_purge_non_exist</a> (<span class="keyword">struct</span> <a class="code" href="structisis__link__state__hdr.html">isis_link_state_hdr</a> *lsp_hdr,
<a name="l02088"></a>02088              <span class="keyword">struct</span> <a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l02089"></a>02089 {
<a name="l02090"></a>02090   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
<a name="l02091"></a>02091 
<a name="l02092"></a>02092   <span class="comment">/*</span>
<a name="l02093"></a>02093 <span class="comment">   * We need to create the LSP to be purged </span>
<a name="l02094"></a>02094 <span class="comment">   */</span>
<a name="l02095"></a>02095   <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;LSP PURGE NON EXIST&quot;</span>);
<a name="l02096"></a>02096   lsp = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167baa9874bec1ebdd728cf6272ccea1c930c">MTYPE_ISIS_LSP</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a>));
<a name="l02097"></a>02097   <span class="comment">/*FIXME: BUG BUG BUG! the lsp doesn&#39;t exist here! */</span>
<a name="l02098"></a>02098   <span class="comment">/*did smt here, maybe good probably not */</span>
<a name="l02099"></a>02099   lsp-&gt;<a class="code" href="structisis__lsp.html#ab719e4479e4fc861c4cfa7a3c9d403c6">level</a> = ((lsp_hdr-&gt;<a class="code" href="structisis__link__state__hdr.html#a405c4b662dc97846dcca65f5c851f485">lsp_bits</a> &amp; <a class="code" href="isis__constants_8h.html#a9f40952694b8ae76b12e90808bd81229">LSPBIT_IST</a>) == <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>) ? 1 : 2;
<a name="l02100"></a>02100   lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a> = <a class="code" href="stream_8c.html#a7117cdad9fa5e5ae633e0cf08d047459">stream_new</a> (<a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a> + <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>);
<a name="l02101"></a>02101   lsp-&gt;<a class="code" href="structisis__lsp.html#a4495af44aa8d877f56b8e7ce00b47344">isis_header</a> = (<span class="keyword">struct </span><a class="code" href="structisis__fixed__hdr.html">isis_fixed_hdr</a> *) <a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>);
<a name="l02102"></a>02102   <a class="code" href="isis__pdu_8c.html#a5bb1429f6b41964f060f6abbfb50b5bf">fill_fixed_hdr</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a4495af44aa8d877f56b8e7ce00b47344">isis_header</a>, (lsp-&gt;<a class="code" href="structisis__lsp.html#ab719e4479e4fc861c4cfa7a3c9d403c6">level</a> == 1) ? <a class="code" href="isis__pdu_8h.html#a37bd70be235d213245350209287f9d69">L1_LINK_STATE</a>
<a name="l02103"></a>02103           : <a class="code" href="isis__pdu_8h.html#a0078daf40d7e45a7bdbd26a016dde2da">L2_LINK_STATE</a>);
<a name="l02104"></a>02104   lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a> = (<span class="keyword">struct </span><a class="code" href="structisis__link__state__hdr.html">isis_link_state_hdr</a> *) (<a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>) +
<a name="l02105"></a>02105                             <a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a>);
<a name="l02106"></a>02106   <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>, lsp_hdr, <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>);
<a name="l02107"></a>02107 
<a name="l02108"></a>02108   <span class="comment">/*</span>
<a name="l02109"></a>02109 <span class="comment">   * Retain only LSP header</span>
<a name="l02110"></a>02110 <span class="comment">   */</span>
<a name="l02111"></a>02111   lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6f17d9f3a17625db25044ff0ff3da330">pdu_len</a> = htons (<a class="code" href="isis__pdu_8h.html#a61f100919f790014bded41907b477263">ISIS_FIXED_HDR_LEN</a> + <a class="code" href="isis__pdu_8h.html#ac44728d163f3b54838fd7e03acf7c3f7">ISIS_LSP_HDR_LEN</a>);
<a name="l02112"></a>02112   <span class="comment">/*</span>
<a name="l02113"></a>02113 <span class="comment">   * Set the remaining lifetime to 0</span>
<a name="l02114"></a>02114 <span class="comment">   */</span>
<a name="l02115"></a>02115   lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a> = 0;
<a name="l02116"></a>02116   <span class="comment">/*</span>
<a name="l02117"></a>02117 <span class="comment">   * Put the lsp into LSPdb</span>
<a name="l02118"></a>02118 <span class="comment">   */</span>
<a name="l02119"></a>02119   <a class="code" href="isis__lsp_8c.html#a09d8f3bcc073c87f01c32b2f0994fb04">lsp_insert</a> (lsp, area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[lsp-&gt;<a class="code" href="structisis__lsp.html#ab719e4479e4fc861c4cfa7a3c9d403c6">level</a> - 1]);
<a name="l02120"></a>02120 
<a name="l02121"></a>02121   <span class="comment">/*</span>
<a name="l02122"></a>02122 <span class="comment">   * Send in to whole area</span>
<a name="l02123"></a>02123 <span class="comment">   */</span>
<a name="l02124"></a>02124   <a class="code" href="isis__flags_8h.html#a57f45d9b4a8c70c53f796d96e5555fac">ISIS_FLAGS_SET_ALL</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a96d155dbf3bbd20256cf7a68c8d9fd20">SRMflags</a>);
<a name="l02125"></a>02125 
<a name="l02126"></a>02126   <span class="keywordflow">return</span>;
<a name="l02127"></a>02127 }
<a name="l02128"></a>02128 
<a name="l02129"></a>02129 <span class="preprocessor">#ifdef TOPOLOGY_GENERATE</span>
<a name="l02130"></a>02130 <span class="preprocessor"></span><span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l02131"></a>02131 top_lsp_refresh (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l02132"></a>02132 {
<a name="l02133"></a>02133   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
<a name="l02134"></a>02134   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> ref_time;
<a name="l02135"></a>02135 
<a name="l02136"></a>02136   lsp = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l02137"></a>02137   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (lsp);
<a name="l02138"></a>02138 
<a name="l02139"></a>02139   lsp-&gt;t_lsp_top_ref = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02140"></a>02140 
<a name="l02141"></a>02141   <a class="code" href="isis__lsp_8c.html#a4a6da8fd883c32c4986e4d75e9a6f4e4">lsp_seqnum_update</a> (lsp);
<a name="l02142"></a>02142 
<a name="l02143"></a>02143   <a class="code" href="isis__flags_8h.html#a57f45d9b4a8c70c53f796d96e5555fac">ISIS_FLAGS_SET_ALL</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a96d155dbf3bbd20256cf7a68c8d9fd20">SRMflags</a>);
<a name="l02144"></a>02144   <span class="keywordflow">if</span> (isis-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#abd8d8358bf794de3d9fba9ef5de689b3">DEBUG_UPDATE_PACKETS</a>)
<a name="l02145"></a>02145     {
<a name="l02146"></a>02146       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Upd (): refreshing Topology L1 %s&quot;</span>,
<a name="l02147"></a>02147           <a class="code" href="isis__misc_8c.html#a3a0e7f92008e3167e2c09b8761d06766">rawlspid_print</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>));
<a name="l02148"></a>02148     }
<a name="l02149"></a>02149   <span class="comment">/* Refresh dynamic hostname in the cache. */</span>
<a name="l02150"></a>02150   <a class="code" href="isis__dynhn_8c.html#ac659e83c583ea0c43ed5ac33dd8708b4">isis_dynhn_insert</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac2b8abaebfab8d2a55242d83a87a3e70">hostname</a>,
<a name="l02151"></a>02151              <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>);
<a name="l02152"></a>02152 
<a name="l02153"></a>02153   lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a> =
<a name="l02154"></a>02154     htons (<a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a8ef5ac07b24974f8fcdc3dc6d5ac18ab">area</a>-&gt;<a class="code" href="structisis__area.html#af0e5e6cfa7b7536e0700dd3645025d9b">max_lsp_lifetime</a>[0], <a class="code" href="isis__constants_8h.html#adfaaf0b4e69adf9ae9c8dc47e3e00918">MAX_AGE_JITTER</a>));
<a name="l02155"></a>02155 
<a name="l02156"></a>02156   ref_time = lsp-&gt;<a class="code" href="structisis__lsp.html#a8ef5ac07b24974f8fcdc3dc6d5ac18ab">area</a>-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[0] &gt; <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> ?
<a name="l02157"></a>02157     <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> : lsp-&gt;<a class="code" href="structisis__lsp.html#a8ef5ac07b24974f8fcdc3dc6d5ac18ab">area</a>-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[0];
<a name="l02158"></a>02158 
<a name="l02159"></a>02159   <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, lsp-&gt;t_lsp_top_ref, top_lsp_refresh, lsp,
<a name="l02160"></a>02160            <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (ref_time, <a class="code" href="isis__constants_8h.html#aa031ddc54ded51fa2c0af2f658c3885e">MAX_LSP_GEN_JITTER</a>));
<a name="l02161"></a>02161 
<a name="l02162"></a>02162   <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
<a name="l02163"></a>02163 }
<a name="l02164"></a>02164 
<a name="l02165"></a>02165 <span class="keywordtype">void</span>
<a name="l02166"></a>02166 generate_topology_lsps (<span class="keyword">struct</span> <a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l02167"></a>02167 {
<a name="l02168"></a>02168   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l02169"></a>02169   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>, max = 0;
<a name="l02170"></a>02170   <span class="keyword">struct </span><a class="code" href="structarc.html">arc</a> *<a class="code" href="spgrid_8c.html#aab415c428b4d7364e595947dd263e182">arc</a>;
<a name="l02171"></a>02171   u_char <a class="code" href="isis__misc_8c.html#ac0016d3200b8885e05d151ca16ef4315">lspid</a>[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 2];
<a name="l02172"></a>02172   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
<a name="l02173"></a>02173   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> ref_time;
<a name="l02174"></a>02174 
<a name="l02175"></a>02175   <span class="comment">/* first we find the maximal node */</span>
<a name="l02176"></a>02176   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (area-&gt;topology, node, arc))
<a name="l02177"></a>02177   {
<a name="l02178"></a>02178     <span class="keywordflow">if</span> (arc-&gt;<a class="code" href="structarc.html#a87e91cd73f930013f08005bb1964b1cd">from_node</a> &gt; max)
<a name="l02179"></a>02179       max = arc-&gt;<a class="code" href="structarc.html#a87e91cd73f930013f08005bb1964b1cd">from_node</a>;
<a name="l02180"></a>02180     <span class="keywordflow">if</span> (arc-&gt;<a class="code" href="structarc.html#a43b46087fd71ba5677c1bbf483b2441e">to_node</a> &gt; max)
<a name="l02181"></a>02181       max = arc-&gt;<a class="code" href="structarc.html#a43b46087fd71ba5677c1bbf483b2441e">to_node</a>;
<a name="l02182"></a>02182   }
<a name="l02183"></a>02183 
<a name="l02184"></a>02184   <span class="keywordflow">for</span> (i = 1; i &lt; (max + 1); i++)
<a name="l02185"></a>02185     {
<a name="l02186"></a>02186       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (lspid, area-&gt;topology_baseis, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l02187"></a>02187       <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (lspid) = 0x00;
<a name="l02188"></a>02188       <a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (lspid) = 0x00;
<a name="l02189"></a>02189       lspid[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> - 1] = (i &amp; 0xFF);
<a name="l02190"></a>02190       lspid[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> - 2] = ((i &gt;&gt; 8) &amp; 0xFF);
<a name="l02191"></a>02191 
<a name="l02192"></a>02192       lsp = <a class="code" href="isis__lsp_8c.html#af43ff22a21554145c239b6c37556ce1a">lsp_new</a> (lspid, <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (area-&gt;<a class="code" href="structisis__area.html#af0e5e6cfa7b7536e0700dd3645025d9b">max_lsp_lifetime</a>[0],
<a name="l02193"></a>02193              <a class="code" href="isis__constants_8h.html#adfaaf0b4e69adf9ae9c8dc47e3e00918">MAX_AGE_JITTER</a>), 1, <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>, 0, 1);
<a name="l02194"></a>02194       <span class="keywordflow">if</span> (!lsp)
<a name="l02195"></a>02195     <span class="keywordflow">return</span>;
<a name="l02196"></a>02196       lsp-&gt;from_topology = 1;
<a name="l02197"></a>02197       lsp-&gt;<a class="code" href="structisis__lsp.html#a8ef5ac07b24974f8fcdc3dc6d5ac18ab">area</a> = <a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l02198"></a>02198 
<a name="l02199"></a>02199       <span class="comment">/* Creating LSP data based on topology info. */</span>
<a name="l02200"></a>02200       build_topology_lsp_data (lsp, area, i);
<a name="l02201"></a>02201       <span class="comment">/* Checksum is also calculated here. */</span>
<a name="l02202"></a>02202       <a class="code" href="isis__lsp_8c.html#a4a6da8fd883c32c4986e4d75e9a6f4e4">lsp_seqnum_update</a> (lsp);
<a name="l02203"></a>02203       <span class="comment">/* Take care of inserting dynamic hostname into cache. */</span>
<a name="l02204"></a>02204       <a class="code" href="isis__dynhn_8c.html#ac659e83c583ea0c43ed5ac33dd8708b4">isis_dynhn_insert</a> (lspid, lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac2b8abaebfab8d2a55242d83a87a3e70">hostname</a>, <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>);
<a name="l02205"></a>02205 
<a name="l02206"></a>02206       ref_time = area-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[0] &gt; <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> ?
<a name="l02207"></a>02207     <a class="code" href="isis__constants_8h.html#a6cda16880a90f2af40b3de9934773733">MAX_LSP_GEN_INTERVAL</a> : area-&gt;<a class="code" href="structisis__area.html#a060404363e73aea836fd9ac4738e129a">lsp_refresh</a>[0];
<a name="l02208"></a>02208 
<a name="l02209"></a>02209       <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, lsp-&gt;t_lsp_top_ref, top_lsp_refresh, lsp,
<a name="l02210"></a>02210                <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (ref_time, <a class="code" href="isis__constants_8h.html#aa031ddc54ded51fa2c0af2f658c3885e">MAX_LSP_GEN_JITTER</a>));
<a name="l02211"></a>02211       <a class="code" href="isis__flags_8h.html#a57f45d9b4a8c70c53f796d96e5555fac">ISIS_FLAGS_SET_ALL</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a96d155dbf3bbd20256cf7a68c8d9fd20">SRMflags</a>);
<a name="l02212"></a>02212       <a class="code" href="isis__lsp_8c.html#a09d8f3bcc073c87f01c32b2f0994fb04">lsp_insert</a> (lsp, area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[0]);
<a name="l02213"></a>02213     }
<a name="l02214"></a>02214 }
<a name="l02215"></a>02215 
<a name="l02216"></a>02216 <span class="keywordtype">void</span>
<a name="l02217"></a>02217 remove_topology_lsps (<span class="keyword">struct</span> <a class="code" href="structisis__area.html">isis_area</a> *area)
<a name="l02218"></a>02218 {
<a name="l02219"></a>02219   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
<a name="l02220"></a>02220   <a class="code" href="structdnode__t.html">dnode_t</a> *dnode, *dnode_next;
<a name="l02221"></a>02221 
<a name="l02222"></a>02222   dnode = <a class="code" href="dict_8c.html#a2b439ffb63f9b3089d0306ec3b26672f">dict_first</a> (area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[0]);
<a name="l02223"></a>02223   <span class="keywordflow">while</span> (dnode != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02224"></a>02224     {
<a name="l02225"></a>02225       dnode_next = <a class="code" href="dict_8c.html#a1f32888c49577ec2b2dc9d16922bf487">dict_next</a> (area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[0], dnode);
<a name="l02226"></a>02226       lsp = <a class="code" href="dict_8h.html#a17fccc85aae3874de7152f103d5945bc">dnode_get</a> (dnode);
<a name="l02227"></a>02227       <span class="keywordflow">if</span> (lsp-&gt;from_topology)
<a name="l02228"></a>02228     {
<a name="l02229"></a>02229       <a class="code" href="thread_8h.html#ae1dfd3f5f643212148d60a41d9f2192a">THREAD_TIMER_OFF</a> (lsp-&gt;t_lsp_top_ref);
<a name="l02230"></a>02230       <a class="code" href="isis__lsp_8c.html#a8910aea25a4f0680a4b4945609aaf97b">lsp_destroy</a> (lsp);
<a name="l02231"></a>02231       <a class="code" href="dict_8c.html#ad51f28cd1829e1fd66caf58f553d794e">dict_delete</a> (area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[0], dnode);
<a name="l02232"></a>02232     }
<a name="l02233"></a>02233       dnode = dnode_next;
<a name="l02234"></a>02234     }
<a name="l02235"></a>02235 }
<a name="l02236"></a>02236 
<a name="l02237"></a>02237 <span class="keywordtype">void</span>
<a name="l02238"></a>02238 build_topology_lsp_data (<span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp, <span class="keyword">struct</span> <a class="code" href="structisis__area.html">isis_area</a> *area,
<a name="l02239"></a>02239              <span class="keywordtype">int</span> lsp_top_num)
<a name="l02240"></a>02240 {
<a name="l02241"></a>02241   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l02242"></a>02242   <span class="keyword">struct </span>arc *<a class="code" href="spgrid_8c.html#aab415c428b4d7364e595947dd263e182">arc</a>;
<a name="l02243"></a>02243   <span class="keyword">struct </span><a class="code" href="structis__neigh.html">is_neigh</a> *<a class="code" href="structis__neigh.html">is_neigh</a>;
<a name="l02244"></a>02244   <span class="keyword">struct </span><a class="code" href="structte__is__neigh.html">te_is_neigh</a> *<a class="code" href="structte__is__neigh.html">te_is_neigh</a>;
<a name="l02245"></a>02245   <span class="keywordtype">char</span> buff[200];
<a name="l02246"></a>02246   <span class="keyword">struct </span><a class="code" href="structtlvs.html">tlvs</a> tlv_data;
<a name="l02247"></a>02247   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp0 = lsp;
<a name="l02248"></a>02248 
<a name="l02249"></a>02249   <span class="comment">/* Add area addresses. FIXME: Is it needed at all? */</span>
<a name="l02250"></a>02250   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a11d8deaa75c26e958cff5f74fee3ef10">area_addrs</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02251"></a>02251     lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a11d8deaa75c26e958cff5f74fee3ef10">area_addrs</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l02252"></a>02252   <a class="code" href="linklist_8c.html#a16998dd330cc465279ed29cefc25e82f">list_add_list</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a11d8deaa75c26e958cff5f74fee3ef10">area_addrs</a>, area-&gt;<a class="code" href="structisis__area.html#aca1436df894da89fb83d7924ef248397">area_addrs</a>);
<a name="l02253"></a>02253 
<a name="l02254"></a>02254   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02255"></a>02255     lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a> = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structnlpids.html">nlpids</a>));
<a name="l02256"></a>02256   lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a>-&gt;<a class="code" href="structnlpids.html#a73f0f5f1e7aa64694d5802b91af6533b">count</a> = 1;
<a name="l02257"></a>02257   lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a>-&gt;<a class="code" href="structnlpids.html#a6dbd263750da21187880986a50fd5857">nlpids</a>[0] = <a class="code" href="isis__constants_8h.html#a9c1ffc4a81108d901cd8914d20cd4caf">NLPID_IP</a>;
<a name="l02258"></a>02258 
<a name="l02259"></a>02259   <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a633f0592cc19c913d3d18368a8f45cb7">dynhostname</a>)
<a name="l02260"></a>02260     {
<a name="l02261"></a>02261       lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac2b8abaebfab8d2a55242d83a87a3e70">hostname</a> = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>,
<a name="l02262"></a>02262                     <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structhostname.html">hostname</a>));
<a name="l02263"></a>02263       memset (buff, 0x00, 200);
<a name="l02264"></a>02264       sprintf (buff, <span class="stringliteral">&quot;%s%d&quot;</span>, area-&gt;topology_basedynh ? area-&gt;topology_basedynh :
<a name="l02265"></a>02265            <span class="stringliteral">&quot;feedme&quot;</span>, lsp_top_num);
<a name="l02266"></a>02266       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac2b8abaebfab8d2a55242d83a87a3e70">hostname</a>-&gt;<a class="code" href="structhostname.html#a0a14b55c4a1b6d672adfaa81b95936f3">name</a>, buff, strlen (buff));
<a name="l02267"></a>02267       lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac2b8abaebfab8d2a55242d83a87a3e70">hostname</a>-&gt;<a class="code" href="structhostname.html#af410706acabde261182a41b3579b04b6">namelen</a> = strlen (buff);
<a name="l02268"></a>02268     }
<a name="l02269"></a>02269 
<a name="l02270"></a>02270   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a>)
<a name="l02271"></a>02271     <a class="code" href="isis__tlv_8c.html#ab4ebf52852b3eeb88bc641ce88d2657b">tlv_add_nlpid</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>);
<a name="l02272"></a>02272   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac2b8abaebfab8d2a55242d83a87a3e70">hostname</a>)
<a name="l02273"></a>02273     <a class="code" href="isis__tlv_8c.html#a4761f56f8d442a565861edbef484422e">tlv_add_dynamic_hostname</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac2b8abaebfab8d2a55242d83a87a3e70">hostname</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>);
<a name="l02274"></a>02274   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a11d8deaa75c26e958cff5f74fee3ef10">area_addrs</a> &amp;&amp; <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a11d8deaa75c26e958cff5f74fee3ef10">area_addrs</a>) &gt; 0)
<a name="l02275"></a>02275     <a class="code" href="isis__tlv_8c.html#abd5c4be878c3cab41e46d107480f433e">tlv_add_area_addrs</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a11d8deaa75c26e958cff5f74fee3ef10">area_addrs</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a944fd7d5abffb3968b729b4fc1a9e631">pdu</a>);
<a name="l02276"></a>02276 
<a name="l02277"></a>02277   memset (&amp;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structtlvs.html">tlvs</a>));
<a name="l02278"></a>02278   <span class="keywordflow">if</span> (<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02279"></a>02279     {
<a name="l02280"></a>02280       <a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l02281"></a>02281       <a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = <a class="code" href="isis__tlv_8c.html#accd0682e015f53c9040ca9a68fb1a963">free_tlv</a>;
<a name="l02282"></a>02282     }
<a name="l02283"></a>02283 
<a name="l02284"></a>02284   <span class="comment">/* Add reachability for this IS for simulated 1. */</span>
<a name="l02285"></a>02285   <span class="keywordflow">if</span> (lsp_top_num == 1)
<a name="l02286"></a>02286     {
<a name="l02287"></a>02287       is_neigh = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> is_neigh));
<a name="l02288"></a>02288 
<a name="l02289"></a>02289       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>, isis-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l02290"></a>02290       <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>) = 0x00;
<a name="l02291"></a>02291       <span class="comment">/* Metric MUST NOT be 0, unless it&#39;s not alias TLV. */</span>
<a name="l02292"></a>02292       is_neigh-&gt;<a class="code" href="structis__neigh.html#a89a2c799e58b8ab95549581a06f2a53a">metrics</a>.<a class="code" href="structmetric.html#ae927ddb546511096f632820b678d73bf">metric_default</a> = 0x01;
<a name="l02293"></a>02293       is_neigh-&gt;<a class="code" href="structis__neigh.html#a89a2c799e58b8ab95549581a06f2a53a">metrics</a>.<a class="code" href="structmetric.html#aa373451a3966142956168440f174d1c5">metric_delay</a> = <a class="code" href="isis__constants_8h.html#a8e4a0ce9ffbaa12adf610ab7d67653c5">METRICS_UNSUPPORTED</a>;
<a name="l02294"></a>02294       is_neigh-&gt;<a class="code" href="structis__neigh.html#a89a2c799e58b8ab95549581a06f2a53a">metrics</a>.<a class="code" href="structmetric.html#ad32785c7cdf67ab7a3f5c5da004a7e9c">metric_expense</a> = <a class="code" href="isis__constants_8h.html#a8e4a0ce9ffbaa12adf610ab7d67653c5">METRICS_UNSUPPORTED</a>;
<a name="l02295"></a>02295       is_neigh-&gt;<a class="code" href="structis__neigh.html#a89a2c799e58b8ab95549581a06f2a53a">metrics</a>.<a class="code" href="structmetric.html#a315704ab59d2e6c334f2e2b6b4901e18">metric_error</a> = <a class="code" href="isis__constants_8h.html#a8e4a0ce9ffbaa12adf610ab7d67653c5">METRICS_UNSUPPORTED</a>;
<a name="l02296"></a>02296       <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>, is_neigh);
<a name="l02297"></a>02297     }
<a name="l02298"></a>02298 
<a name="l02299"></a>02299   <span class="comment">/* Add IS reachabilities. */</span>
<a name="l02300"></a>02300   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (area-&gt;topology, node, arc))
<a name="l02301"></a>02301     {
<a name="l02302"></a>02302       <span class="keywordtype">int</span> to_lsp = 0;
<a name="l02303"></a>02303       
<a name="l02304"></a>02304       <span class="keywordflow">if</span> ((lsp_top_num != arc-&gt;<a class="code" href="structarc.html#a87e91cd73f930013f08005bb1964b1cd">from_node</a>) &amp;&amp; (lsp_top_num != arc-&gt;<a class="code" href="structarc.html#a43b46087fd71ba5677c1bbf483b2441e">to_node</a>))
<a name="l02305"></a>02305     <span class="keywordflow">continue</span>;
<a name="l02306"></a>02306 
<a name="l02307"></a>02307       <span class="keywordflow">if</span> (lsp_top_num == arc-&gt;<a class="code" href="structarc.html#a87e91cd73f930013f08005bb1964b1cd">from_node</a>)
<a name="l02308"></a>02308     to_lsp = arc-&gt;<a class="code" href="structarc.html#a43b46087fd71ba5677c1bbf483b2441e">to_node</a>;
<a name="l02309"></a>02309       <span class="keywordflow">else</span>
<a name="l02310"></a>02310     to_lsp = arc-&gt;<a class="code" href="structarc.html#a87e91cd73f930013f08005bb1964b1cd">from_node</a>;
<a name="l02311"></a>02311 
<a name="l02312"></a>02312       <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#ab59df347846030a9825a908f8fa1a4ae">oldmetric</a>)
<a name="l02313"></a>02313     {
<a name="l02314"></a>02314       is_neigh = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> is_neigh));
<a name="l02315"></a>02315 
<a name="l02316"></a>02316       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>, area-&gt;topology_baseis, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l02317"></a>02317       is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> - 1] = (to_lsp &amp; 0xFF);
<a name="l02318"></a>02318       is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> - 2] = ((to_lsp &gt;&gt; 8) &amp; 0xFF);
<a name="l02319"></a>02319       is_neigh-&gt;<a class="code" href="structis__neigh.html#a89a2c799e58b8ab95549581a06f2a53a">metrics</a>.<a class="code" href="structmetric.html#ae927ddb546511096f632820b678d73bf">metric_default</a> = arc-&gt;<a class="code" href="structarc.html#a264659aa9fb4563338a3716866cd63c7">distance</a>;
<a name="l02320"></a>02320       is_neigh-&gt;<a class="code" href="structis__neigh.html#a89a2c799e58b8ab95549581a06f2a53a">metrics</a>.<a class="code" href="structmetric.html#aa373451a3966142956168440f174d1c5">metric_delay</a> = <a class="code" href="isis__constants_8h.html#a8e4a0ce9ffbaa12adf610ab7d67653c5">METRICS_UNSUPPORTED</a>;
<a name="l02321"></a>02321       is_neigh-&gt;<a class="code" href="structis__neigh.html#a89a2c799e58b8ab95549581a06f2a53a">metrics</a>.<a class="code" href="structmetric.html#ad32785c7cdf67ab7a3f5c5da004a7e9c">metric_expense</a> = <a class="code" href="isis__constants_8h.html#a8e4a0ce9ffbaa12adf610ab7d67653c5">METRICS_UNSUPPORTED</a>;
<a name="l02322"></a>02322       is_neigh-&gt;<a class="code" href="structis__neigh.html#a89a2c799e58b8ab95549581a06f2a53a">metrics</a>.<a class="code" href="structmetric.html#a315704ab59d2e6c334f2e2b6b4901e18">metric_error</a> = <a class="code" href="isis__constants_8h.html#a8e4a0ce9ffbaa12adf610ab7d67653c5">METRICS_UNSUPPORTED</a>;
<a name="l02323"></a>02323       <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>, is_neigh);
<a name="l02324"></a>02324     }
<a name="l02325"></a>02325 
<a name="l02326"></a>02326       <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#af81e14ff1b34169c5e05c287d7ff5529">newmetric</a>)
<a name="l02327"></a>02327     {
<a name="l02328"></a>02328       uint32_t <a class="code" href="structmetric.html">metric</a>;
<a name="l02329"></a>02329 
<a name="l02330"></a>02330       <span class="keywordflow">if</span> (<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02331"></a>02331         {
<a name="l02332"></a>02332           <a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l02333"></a>02333           <a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = <a class="code" href="isis__tlv_8c.html#accd0682e015f53c9040ca9a68fb1a963">free_tlv</a>;
<a name="l02334"></a>02334         }
<a name="l02335"></a>02335       te_is_neigh = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba03ac060807144cc28b2c4f4d100b2fb2">MTYPE_ISIS_TLV</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> te_is_neigh));
<a name="l02336"></a>02336       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>, area-&gt;topology_baseis,
<a name="l02337"></a>02337           <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l02338"></a>02338       te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> - 1] = (to_lsp &amp; 0xFF);
<a name="l02339"></a>02339       te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> - 2] = ((to_lsp &gt;&gt; 8) &amp; 0xFF);
<a name="l02340"></a>02340       metric = ((htonl(arc-&gt;<a class="code" href="structarc.html#a264659aa9fb4563338a3716866cd63c7">distance</a>) &gt;&gt; 8) &amp; 0xffffff);
<a name="l02341"></a>02341       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#a7158aa6efe17579d240123affa0a543c">te_metric</a>, &amp;metric, 3);
<a name="l02342"></a>02342       <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>, te_is_neigh);
<a name="l02343"></a>02343     }
<a name="l02344"></a>02344     }
<a name="l02345"></a>02345 
<a name="l02346"></a>02346   <span class="keywordflow">while</span> (<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a> &amp;&amp; <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>))
<a name="l02347"></a>02347     {
<a name="l02348"></a>02348       <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02349"></a>02349     lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l02350"></a>02350       <a class="code" href="isis__lsp_8c.html#a87fb50a6271da943f8910022759b915e">lsp_tlv_fit</a> (lsp, &amp;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>, &amp;lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>,
<a name="l02351"></a>02351            <a class="code" href="isis__tlv_8h.html#ae1c932e01a4b166be4461bd19a4ca5c4">IS_NEIGHBOURS_LEN</a>, area-&gt;<a class="code" href="structisis__area.html#ae1bacf51d4843178d0a4219a49f93423">lsp_frag_threshold</a>,
<a name="l02352"></a>02352            <a class="code" href="isis__tlv_8c.html#aff9156f858532767e00e9f80f79cbb52">tlv_add_is_neighs</a>);
<a name="l02353"></a>02353       <span class="keywordflow">if</span> (<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a> &amp;&amp; <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>))
<a name="l02354"></a>02354         lsp = <a class="code" href="isis__lsp_8c.html#aab829620b2263604cc5c0233d5a5b099">lsp_next_frag</a> (<a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>) + 1,
<a name="l02355"></a>02355                  lsp0, area, <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>);
<a name="l02356"></a>02356     }
<a name="l02357"></a>02357 
<a name="l02358"></a>02358   <span class="keywordflow">while</span> (<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a> &amp;&amp; <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>))
<a name="l02359"></a>02359     {
<a name="l02360"></a>02360       <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02361"></a>02361     lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l02362"></a>02362       <a class="code" href="isis__lsp_8c.html#a87fb50a6271da943f8910022759b915e">lsp_tlv_fit</a> (lsp, &amp;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>, &amp;lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>,
<a name="l02363"></a>02363            <a class="code" href="isis__tlv_8h.html#ae1c932e01a4b166be4461bd19a4ca5c4">IS_NEIGHBOURS_LEN</a>, area-&gt;<a class="code" href="structisis__area.html#ae1bacf51d4843178d0a4219a49f93423">lsp_frag_threshold</a>,
<a name="l02364"></a>02364            <a class="code" href="isis__tlv_8c.html#aeca253d796ceaff696f3c570bab0aec5">tlv_add_te_is_neighs</a>);
<a name="l02365"></a>02365       <span class="keywordflow">if</span> (<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a> &amp;&amp; <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>))
<a name="l02366"></a>02366     lsp = <a class="code" href="isis__lsp_8c.html#aab829620b2263604cc5c0233d5a5b099">lsp_next_frag</a> (<a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a6e6f2ce4d1b33c3280827272009a5af2">lsp_id</a>) + 1,
<a name="l02367"></a>02367                  lsp0, area, <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>);
<a name="l02368"></a>02368     }
<a name="l02369"></a>02369 
<a name="l02370"></a>02370   <a class="code" href="isis__tlv_8c.html#a5f499235cf5a69697d280f5a1cd01612">free_tlvs</a> (&amp;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>);
<a name="l02371"></a>02371   <span class="keywordflow">return</span>;
<a name="l02372"></a>02372 }
<a name="l02373"></a>02373 <span class="preprocessor">#endif </span><span class="comment">/* TOPOLOGY_GENERATE */</span>
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="isis__lsp_8c.html">isis_lsp.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:04 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
