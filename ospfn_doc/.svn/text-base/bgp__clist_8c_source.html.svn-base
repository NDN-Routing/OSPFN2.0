<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: bgpd/bgp_clist.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('bgp__clist_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">bgpd/bgp_clist.c</div>  </div>
</div>
<div class="contents">
<a href="bgp__clist_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* BGP community-list and extcommunity-list.</span>
<a name="l00002"></a>00002 <span class="comment">   Copyright (C) 1999 Kunihiro Ishiguro</span>
<a name="l00003"></a>00003 <span class="comment"></span>
<a name="l00004"></a>00004 <span class="comment">This file is part of GNU Zebra.</span>
<a name="l00005"></a>00005 <span class="comment"></span>
<a name="l00006"></a>00006 <span class="comment">GNU Zebra is free software; you can redistribute it and/or modify it</span>
<a name="l00007"></a>00007 <span class="comment">under the terms of the GNU General Public License as published by the</span>
<a name="l00008"></a>00008 <span class="comment">Free Software Foundation; either version 2, or (at your option) any</span>
<a name="l00009"></a>00009 <span class="comment">later version.</span>
<a name="l00010"></a>00010 <span class="comment"></span>
<a name="l00011"></a>00011 <span class="comment">GNU Zebra is distributed in the hope that it will be useful, but</span>
<a name="l00012"></a>00012 <span class="comment">WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00014"></a>00014 <span class="comment">General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"></span>
<a name="l00016"></a>00016 <span class="comment">You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment">along with GNU Zebra; see the file COPYING.  If not, write to the Free</span>
<a name="l00018"></a>00018 <span class="comment">Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA</span>
<a name="l00019"></a>00019 <span class="comment">02111-1307, USA.  */</span>
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 <span class="preprocessor">#include &lt;<a class="code" href="zebra_8h.html">zebra.h</a>&gt;</span>
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="preprocessor">#include &quot;<a class="code" href="command_8h.html">command.h</a>&quot;</span>
<a name="l00024"></a>00024 <span class="preprocessor">#include &quot;<a class="code" href="prefix_8h.html">prefix.h</a>&quot;</span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="memory_8h.html">memory.h</a>&quot;</span>
<a name="l00026"></a>00026 
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="bgpd_8h.html">bgpd/bgpd.h</a>&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="bgp__community_8h.html">bgpd/bgp_community.h</a>&quot;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="bgp__ecommunity_8h.html">bgpd/bgp_ecommunity.h</a>&quot;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="bgp__aspath_8h.html">bgpd/bgp_aspath.h</a>&quot;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &quot;<a class="code" href="bgp__regex_8h.html">bgpd/bgp_regex.h</a>&quot;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="bgp__clist_8h.html">bgpd/bgp_clist.h</a>&quot;</span>
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 <span class="comment">/* Lookup master structure for community-list or</span>
<a name="l00035"></a>00035 <span class="comment">   extcommunity-list.  */</span>
<a name="l00036"></a>00036 <span class="keyword">struct </span><a class="code" href="structcommunity__list__master.html">community_list_master</a> *
<a name="l00037"></a><a class="code" href="bgp__clist_8h.html#af2226d8d0f37e4ec97e159ef1fef36fa">00037</a> <a class="code" href="bgp__clist_8c.html#ac34a39d4f70160eefe2b8a6d1eafc14b">community_list_master_lookup</a> (<span class="keyword">struct</span> <a class="code" href="structcommunity__list__handler.html">community_list_handler</a> *ch, <span class="keywordtype">int</span> <a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>)
<a name="l00038"></a>00038 {
<a name="l00039"></a>00039   <span class="keywordflow">if</span> (ch)
<a name="l00040"></a>00040     <span class="keywordflow">switch</span> (master)
<a name="l00041"></a>00041       {
<a name="l00042"></a>00042       <span class="keywordflow">case</span> <a class="code" href="bgp__clist_8h.html#a71bf5583c66d28746342ec73632efe06">COMMUNITY_LIST_MASTER</a>:
<a name="l00043"></a>00043     <span class="keywordflow">return</span> &amp;ch-&gt;<a class="code" href="structcommunity__list__handler.html#a9a091d6f78cb254bf4b700a20d62f930">community_list</a>;
<a name="l00044"></a>00044       <span class="keywordflow">case</span> <a class="code" href="bgp__clist_8h.html#a61c5d68dcb2d87b3cf5a0ef283a881fc">EXTCOMMUNITY_LIST_MASTER</a>:
<a name="l00045"></a>00045     <span class="keywordflow">return</span> &amp;ch-&gt;<a class="code" href="structcommunity__list__handler.html#a921907c1e9f2cf6fbf8afe20d6625e60">extcommunity_list</a>;
<a name="l00046"></a>00046       }
<a name="l00047"></a>00047   <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00048"></a>00048 }
<a name="l00049"></a>00049 
<a name="l00050"></a>00050 <span class="comment">/* Allocate a new community list entry.  */</span>
<a name="l00051"></a>00051 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structcommunity__entry.html">community_entry</a> *
<a name="l00052"></a><a class="code" href="bgp__clist_8c.html#ac513f5310a71c1f1f0db3c3f1c66e971">00052</a> <a class="code" href="bgp__clist_8c.html#ac513f5310a71c1f1f0db3c3f1c66e971">community_entry_new</a> (<span class="keywordtype">void</span>)
<a name="l00053"></a>00053 {
<a name="l00054"></a>00054   <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba39e09af40ae71fe2d910e8c87c20a310">MTYPE_COMMUNITY_LIST_ENTRY</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structcommunity__entry.html">community_entry</a>));
<a name="l00055"></a>00055 }
<a name="l00056"></a>00056 
<a name="l00057"></a>00057 <span class="comment">/* Free community list entry.  */</span>
<a name="l00058"></a>00058 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00059"></a><a class="code" href="bgp__clist_8c.html#a23e2dd7832bc852822f71b60d13ecd5a">00059</a> <a class="code" href="bgp__clist_8c.html#a23e2dd7832bc852822f71b60d13ecd5a">community_entry_free</a> (<span class="keyword">struct</span> <a class="code" href="structcommunity__entry.html">community_entry</a> *entry)
<a name="l00060"></a>00060 {
<a name="l00061"></a>00061   <span class="keywordflow">switch</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a>)
<a name="l00062"></a>00062     {
<a name="l00063"></a>00063     <span class="keywordflow">case</span> <a class="code" href="bgp__clist_8h.html#aac9f88f9f0367759b07f7bf9f5ee1f0e">COMMUNITY_LIST_STANDARD</a>:
<a name="l00064"></a>00064       <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#ab3e2023304a10f38c5eb6c9b4aaf7023">u</a>.<a class="code" href="structcommunity__entry.html#a417e7d3e1bb8d3bfb620e3d4d79e1e16">com</a>)
<a name="l00065"></a>00065         <a class="code" href="bgp__community_8c.html#a890bdfd2f7517c0fe7f30687d1d4d825">community_free</a> (entry-&gt;<a class="code" href="structcommunity__entry.html#ab3e2023304a10f38c5eb6c9b4aaf7023">u</a>.<a class="code" href="structcommunity__entry.html#a417e7d3e1bb8d3bfb620e3d4d79e1e16">com</a>);
<a name="l00066"></a>00066       <span class="keywordflow">break</span>;
<a name="l00067"></a>00067     <span class="keywordflow">case</span> <a class="code" href="bgp__clist_8h.html#a999fc8046f6d46557f06e6dc5eafb3a9">EXTCOMMUNITY_LIST_STANDARD</a>:
<a name="l00068"></a>00068       <span class="comment">/* In case of standard extcommunity-list, configuration string</span>
<a name="l00069"></a>00069 <span class="comment">         is made by ecommunity_ecom2str().  */</span>
<a name="l00070"></a>00070       <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#aa623f2755d49e17820332661599c1165">config</a>)
<a name="l00071"></a>00071         <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba88ab42bbd8fb0ec06228f8baf67a3bd6">MTYPE_ECOMMUNITY_STR</a>, entry-&gt;<a class="code" href="structcommunity__entry.html#aa623f2755d49e17820332661599c1165">config</a>);
<a name="l00072"></a>00072       <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#ab3e2023304a10f38c5eb6c9b4aaf7023">u</a>.<a class="code" href="structcommunity__entry.html#a6738f5df4deb7c87ff42f90596910063">ecom</a>)
<a name="l00073"></a>00073         <a class="code" href="bgp__ecommunity_8c.html#a56f7dda58051cbec7fd56238196dcfc2">ecommunity_free</a> (entry-&gt;<a class="code" href="structcommunity__entry.html#ab3e2023304a10f38c5eb6c9b4aaf7023">u</a>.<a class="code" href="structcommunity__entry.html#a6738f5df4deb7c87ff42f90596910063">ecom</a>);
<a name="l00074"></a>00074       <span class="keywordflow">break</span>;
<a name="l00075"></a>00075     <span class="keywordflow">case</span> <a class="code" href="bgp__clist_8h.html#ae00204887ca7891261192c1f0c2ef1b2">COMMUNITY_LIST_EXPANDED</a>:
<a name="l00076"></a>00076     <span class="keywordflow">case</span> <a class="code" href="bgp__clist_8h.html#a75f83c5ed3ca755db0e6003fb775af13">EXTCOMMUNITY_LIST_EXPANDED</a>:
<a name="l00077"></a>00077       <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#aa623f2755d49e17820332661599c1165">config</a>)
<a name="l00078"></a>00078         <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba31dfe1598365f32cd2080388b2db7a87">MTYPE_COMMUNITY_LIST_CONFIG</a>, entry-&gt;<a class="code" href="structcommunity__entry.html#aa623f2755d49e17820332661599c1165">config</a>);
<a name="l00079"></a>00079       <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#a817ea26d814de0aea503fd6d70857664">reg</a>)
<a name="l00080"></a>00080         <a class="code" href="bgp__regex_8c.html#a9a7260053c61ff8c6f58e5822d136b88">bgp_regex_free</a> (entry-&gt;<a class="code" href="structcommunity__entry.html#a817ea26d814de0aea503fd6d70857664">reg</a>);
<a name="l00081"></a>00081     <span class="keywordflow">default</span>:
<a name="l00082"></a>00082       <span class="keywordflow">break</span>;
<a name="l00083"></a>00083     }
<a name="l00084"></a>00084   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba39e09af40ae71fe2d910e8c87c20a310">MTYPE_COMMUNITY_LIST_ENTRY</a>, entry);
<a name="l00085"></a>00085 }
<a name="l00086"></a>00086 
<a name="l00087"></a>00087 <span class="comment">/* Allocate a new community-list.  */</span>
<a name="l00088"></a>00088 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structcommunity__list.html">community_list</a> *
<a name="l00089"></a><a class="code" href="bgp__clist_8c.html#a45379ff1a9832b296dcc5ba6f3b89bc6">00089</a> <a class="code" href="bgp__clist_8c.html#a45379ff1a9832b296dcc5ba6f3b89bc6">community_list_new</a> (<span class="keywordtype">void</span>)
<a name="l00090"></a>00090 {
<a name="l00091"></a>00091   <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba0fe8a34219cc31079e6aa8649477cd80">MTYPE_COMMUNITY_LIST</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structcommunity__list.html">community_list</a>));
<a name="l00092"></a>00092 }
<a name="l00093"></a>00093 
<a name="l00094"></a>00094 <span class="comment">/* Free community-list.  */</span>
<a name="l00095"></a>00095 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00096"></a><a class="code" href="bgp__clist_8c.html#ac554442b85ad396162540dbafe3d119f">00096</a> <a class="code" href="bgp__clist_8c.html#ac554442b85ad396162540dbafe3d119f">community_list_free</a> (<span class="keyword">struct</span> <a class="code" href="structcommunity__list.html">community_list</a> *<a class="code" href="structlist.html">list</a>)
<a name="l00097"></a>00097 {
<a name="l00098"></a>00098   <span class="keywordflow">if</span> (list-&gt;<a class="code" href="structcommunity__list.html#a6a8671f042f9c711fdde92e489a9a777">name</a>)
<a name="l00099"></a>00099     <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167bab1c52cd65ec14f9d1298925ebfbaf693">MTYPE_COMMUNITY_LIST_NAME</a>, list-&gt;<a class="code" href="structcommunity__list.html#a6a8671f042f9c711fdde92e489a9a777">name</a>);
<a name="l00100"></a>00100   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba0fe8a34219cc31079e6aa8649477cd80">MTYPE_COMMUNITY_LIST</a>, list);
<a name="l00101"></a>00101 }
<a name="l00102"></a>00102 
<a name="l00103"></a>00103 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structcommunity__list.html">community_list</a> *
<a name="l00104"></a><a class="code" href="bgp__clist_8c.html#a2a861b07ef1b751c0a3573152a1b9480">00104</a> <a class="code" href="bgp__clist_8c.html#a2a861b07ef1b751c0a3573152a1b9480">community_list_insert</a> (<span class="keyword">struct</span> <a class="code" href="structcommunity__list__handler.html">community_list_handler</a> *ch,
<a name="l00105"></a>00105                <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, <span class="keywordtype">int</span> <a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>)
<a name="l00106"></a>00106 {
<a name="l00107"></a>00107   <span class="keywordtype">size_t</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l00108"></a>00108   <span class="keywordtype">long</span> number;
<a name="l00109"></a>00109   <span class="keyword">struct </span><a class="code" href="structcommunity__list.html">community_list</a> *<span class="keyword">new</span>;
<a name="l00110"></a>00110   <span class="keyword">struct </span><a class="code" href="structcommunity__list.html">community_list</a> *point;
<a name="l00111"></a>00111   <span class="keyword">struct </span><a class="code" href="structcommunity__list__list.html">community_list_list</a> *<a class="code" href="structlist.html">list</a>;
<a name="l00112"></a>00112   <span class="keyword">struct </span><a class="code" href="structcommunity__list__master.html">community_list_master</a> *<a class="code" href="spgrid_8c.html#acdadc8f742bb24d7912782baf64d04c0">cm</a>;
<a name="l00113"></a>00113 
<a name="l00114"></a>00114   <span class="comment">/* Lookup community-list master.  */</span>
<a name="l00115"></a>00115   cm = <a class="code" href="bgp__clist_8c.html#ac34a39d4f70160eefe2b8a6d1eafc14b">community_list_master_lookup</a> (ch, master);
<a name="l00116"></a>00116   <span class="keywordflow">if</span> (!cm)
<a name="l00117"></a>00117     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00118"></a>00118 
<a name="l00119"></a>00119   <span class="comment">/* Allocate new community_list and copy given name. */</span>
<a name="l00120"></a>00120   <span class="keyword">new</span> = <a class="code" href="bgp__clist_8c.html#a45379ff1a9832b296dcc5ba6f3b89bc6">community_list_new</a> ();
<a name="l00121"></a>00121   <span class="keyword">new</span>-&gt;name = <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167bab1c52cd65ec14f9d1298925ebfbaf693">MTYPE_COMMUNITY_LIST_NAME</a>, name);
<a name="l00122"></a>00122 
<a name="l00123"></a>00123   <span class="comment">/* If name is made by all digit character.  We treat it as</span>
<a name="l00124"></a>00124 <span class="comment">     number. */</span>
<a name="l00125"></a>00125   <span class="keywordflow">for</span> (number = 0, i = 0; i &lt; strlen (name); i++)
<a name="l00126"></a>00126     {
<a name="l00127"></a>00127       <span class="keywordflow">if</span> (isdigit ((<span class="keywordtype">int</span>) name[i]))
<a name="l00128"></a>00128         number = (number * 10) + (name[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] - <span class="charliteral">&#39;0&#39;</span>);
<a name="l00129"></a>00129       <span class="keywordflow">else</span>
<a name="l00130"></a>00130         <span class="keywordflow">break</span>;
<a name="l00131"></a>00131     }
<a name="l00132"></a>00132 
<a name="l00133"></a>00133   <span class="comment">/* In case of name is all digit character */</span>
<a name="l00134"></a>00134   <span class="keywordflow">if</span> (i == strlen (name))
<a name="l00135"></a>00135     {
<a name="l00136"></a>00136       <span class="keyword">new</span>-&gt;sort = <a class="code" href="bgp__clist_8h.html#a2ccb0f9674aeb060cd765c8cf3e15432">COMMUNITY_LIST_NUMBER</a>;
<a name="l00137"></a>00137 
<a name="l00138"></a>00138       <span class="comment">/* Set access_list to number list. */</span>
<a name="l00139"></a>00139       list = &amp;cm-&gt;<a class="code" href="structcommunity__list__master.html#a2c072ba76924db5fcd27bf1d6f9f542c">num</a>;
<a name="l00140"></a>00140 
<a name="l00141"></a>00141       <span class="keywordflow">for</span> (point = list-&gt;<a class="code" href="structcommunity__list__list.html#a0d4c7921addc2ef057d88822410eb649">head</a>; point; point = point-&gt;<a class="code" href="structcommunity__list.html#a1b96c87153fe22c6cf7feea6da7d88e0">next</a>)
<a name="l00142"></a>00142         <span class="keywordflow">if</span> (atol (point-&gt;<a class="code" href="structcommunity__list.html#a6a8671f042f9c711fdde92e489a9a777">name</a>) &gt;= number)
<a name="l00143"></a>00143           <span class="keywordflow">break</span>;
<a name="l00144"></a>00144     }
<a name="l00145"></a>00145   <span class="keywordflow">else</span>
<a name="l00146"></a>00146     {
<a name="l00147"></a>00147       <span class="keyword">new</span>-&gt;sort = <a class="code" href="bgp__clist_8h.html#ac934d85070da313c0923ec1d7b45eb49">COMMUNITY_LIST_STRING</a>;
<a name="l00148"></a>00148 
<a name="l00149"></a>00149       <span class="comment">/* Set access_list to string list. */</span>
<a name="l00150"></a>00150       list = &amp;cm-&gt;<a class="code" href="structcommunity__list__master.html#adc6325fc227842c81faa4572a1783a40">str</a>;
<a name="l00151"></a>00151 
<a name="l00152"></a>00152       <span class="comment">/* Set point to insertion point. */</span>
<a name="l00153"></a>00153       <span class="keywordflow">for</span> (point = list-&gt;<a class="code" href="structcommunity__list__list.html#a0d4c7921addc2ef057d88822410eb649">head</a>; point; point = point-&gt;<a class="code" href="structcommunity__list.html#a1b96c87153fe22c6cf7feea6da7d88e0">next</a>)
<a name="l00154"></a>00154         <span class="keywordflow">if</span> (strcmp (point-&gt;<a class="code" href="structcommunity__list.html#a6a8671f042f9c711fdde92e489a9a777">name</a>, name) &gt;= 0)
<a name="l00155"></a>00155           <span class="keywordflow">break</span>;
<a name="l00156"></a>00156     }
<a name="l00157"></a>00157 
<a name="l00158"></a>00158   <span class="comment">/* Link to upper list.  */</span>
<a name="l00159"></a>00159   <span class="keyword">new</span>-&gt;parent = list;
<a name="l00160"></a>00160 
<a name="l00161"></a>00161   <span class="comment">/* In case of this is the first element of master. */</span>
<a name="l00162"></a>00162   <span class="keywordflow">if</span> (list-&gt;<a class="code" href="structcommunity__list__list.html#a0d4c7921addc2ef057d88822410eb649">head</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00163"></a>00163     {
<a name="l00164"></a>00164       list-&gt;<a class="code" href="structcommunity__list__list.html#a0d4c7921addc2ef057d88822410eb649">head</a> = list-&gt;<a class="code" href="structcommunity__list__list.html#a98864d7717529e82e316923e3d558b12">tail</a> = <span class="keyword">new</span>;
<a name="l00165"></a>00165       <span class="keywordflow">return</span> <span class="keyword">new</span>;
<a name="l00166"></a>00166     }
<a name="l00167"></a>00167 
<a name="l00168"></a>00168   <span class="comment">/* In case of insertion is made at the tail of access_list. */</span>
<a name="l00169"></a>00169   <span class="keywordflow">if</span> (point == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00170"></a>00170     {
<a name="l00171"></a>00171       <span class="keyword">new</span>-&gt;<a class="code" href="structcommunity__list.html#aa55578094e20a943ad5000b24730d533">prev</a> = list-&gt;<a class="code" href="structcommunity__list__list.html#a98864d7717529e82e316923e3d558b12">tail</a>;
<a name="l00172"></a>00172       list-&gt;<a class="code" href="structcommunity__list__list.html#a98864d7717529e82e316923e3d558b12">tail</a>-&gt;<a class="code" href="structcommunity__list.html#a1b96c87153fe22c6cf7feea6da7d88e0">next</a> = <span class="keyword">new</span>;
<a name="l00173"></a>00173       list-&gt;<a class="code" href="structcommunity__list__list.html#a98864d7717529e82e316923e3d558b12">tail</a> = <span class="keyword">new</span>;
<a name="l00174"></a>00174       <span class="keywordflow">return</span> <span class="keyword">new</span>;
<a name="l00175"></a>00175     }
<a name="l00176"></a>00176 
<a name="l00177"></a>00177   <span class="comment">/* In case of insertion is made at the head of access_list. */</span>
<a name="l00178"></a>00178   <span class="keywordflow">if</span> (point == list-&gt;<a class="code" href="structcommunity__list__list.html#a0d4c7921addc2ef057d88822410eb649">head</a>)
<a name="l00179"></a>00179     {
<a name="l00180"></a>00180       <span class="keyword">new</span>-&gt;<a class="code" href="structcommunity__list.html#a1b96c87153fe22c6cf7feea6da7d88e0">next</a> = list-&gt;<a class="code" href="structcommunity__list__list.html#a0d4c7921addc2ef057d88822410eb649">head</a>;
<a name="l00181"></a>00181       list-&gt;<a class="code" href="structcommunity__list__list.html#a0d4c7921addc2ef057d88822410eb649">head</a>-&gt;<a class="code" href="structcommunity__list.html#aa55578094e20a943ad5000b24730d533">prev</a> = <span class="keyword">new</span>;
<a name="l00182"></a>00182       list-&gt;<a class="code" href="structcommunity__list__list.html#a0d4c7921addc2ef057d88822410eb649">head</a> = <span class="keyword">new</span>;
<a name="l00183"></a>00183       <span class="keywordflow">return</span> <span class="keyword">new</span>;
<a name="l00184"></a>00184     }
<a name="l00185"></a>00185 
<a name="l00186"></a>00186   <span class="comment">/* Insertion is made at middle of the access_list. */</span>
<a name="l00187"></a>00187   <span class="keyword">new</span>-&gt;<a class="code" href="structcommunity__list.html#a1b96c87153fe22c6cf7feea6da7d88e0">next</a> = point;
<a name="l00188"></a>00188   <span class="keyword">new</span>-&gt;<a class="code" href="structcommunity__list.html#aa55578094e20a943ad5000b24730d533">prev</a> = point-&gt;<a class="code" href="structcommunity__list.html#aa55578094e20a943ad5000b24730d533">prev</a>;
<a name="l00189"></a>00189 
<a name="l00190"></a>00190   <span class="keywordflow">if</span> (point-&gt;<a class="code" href="structcommunity__list.html#aa55578094e20a943ad5000b24730d533">prev</a>)
<a name="l00191"></a>00191     point-&gt;<a class="code" href="structcommunity__list.html#aa55578094e20a943ad5000b24730d533">prev</a>-&gt;<a class="code" href="structcommunity__list.html#a1b96c87153fe22c6cf7feea6da7d88e0">next</a> = <span class="keyword">new</span>;
<a name="l00192"></a>00192   point-&gt;<a class="code" href="structcommunity__list.html#aa55578094e20a943ad5000b24730d533">prev</a> = <span class="keyword">new</span>;
<a name="l00193"></a>00193 
<a name="l00194"></a>00194   <span class="keywordflow">return</span> <span class="keyword">new</span>;
<a name="l00195"></a>00195 }
<a name="l00196"></a>00196 
<a name="l00197"></a>00197 <span class="keyword">struct </span><a class="code" href="structcommunity__list.html">community_list</a> *
<a name="l00198"></a><a class="code" href="bgp__clist_8h.html#acf444e3e7543a61ba8856d76e1f11666">00198</a> <a class="code" href="bgp__clist_8c.html#a2c0159e743b11dc2143b7f74a65ce156">community_list_lookup</a> (<span class="keyword">struct</span> <a class="code" href="structcommunity__list__handler.html">community_list_handler</a> *ch,
<a name="l00199"></a>00199                <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, <span class="keywordtype">int</span> <a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>)
<a name="l00200"></a>00200 {
<a name="l00201"></a>00201   <span class="keyword">struct </span><a class="code" href="structcommunity__list.html">community_list</a> *<a class="code" href="structlist.html">list</a>;
<a name="l00202"></a>00202   <span class="keyword">struct </span><a class="code" href="structcommunity__list__master.html">community_list_master</a> *<a class="code" href="spgrid_8c.html#acdadc8f742bb24d7912782baf64d04c0">cm</a>;
<a name="l00203"></a>00203 
<a name="l00204"></a>00204   <span class="keywordflow">if</span> (!name)
<a name="l00205"></a>00205     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00206"></a>00206 
<a name="l00207"></a>00207   cm = <a class="code" href="bgp__clist_8c.html#ac34a39d4f70160eefe2b8a6d1eafc14b">community_list_master_lookup</a> (ch, master);
<a name="l00208"></a>00208   <span class="keywordflow">if</span> (!cm)
<a name="l00209"></a>00209     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00210"></a>00210 
<a name="l00211"></a>00211   <span class="keywordflow">for</span> (list = cm-&gt;<a class="code" href="structcommunity__list__master.html#a2c072ba76924db5fcd27bf1d6f9f542c">num</a>.<a class="code" href="structcommunity__list__list.html#a0d4c7921addc2ef057d88822410eb649">head</a>; list; list = list-&gt;<a class="code" href="structcommunity__list.html#a1b96c87153fe22c6cf7feea6da7d88e0">next</a>)
<a name="l00212"></a>00212     <span class="keywordflow">if</span> (strcmp (list-&gt;<a class="code" href="structcommunity__list.html#a6a8671f042f9c711fdde92e489a9a777">name</a>, name) == 0)
<a name="l00213"></a>00213       <span class="keywordflow">return</span> list;
<a name="l00214"></a>00214   <span class="keywordflow">for</span> (list = cm-&gt;<a class="code" href="structcommunity__list__master.html#adc6325fc227842c81faa4572a1783a40">str</a>.<a class="code" href="structcommunity__list__list.html#a0d4c7921addc2ef057d88822410eb649">head</a>; list; list = list-&gt;<a class="code" href="structcommunity__list.html#a1b96c87153fe22c6cf7feea6da7d88e0">next</a>)
<a name="l00215"></a>00215     <span class="keywordflow">if</span> (strcmp (list-&gt;<a class="code" href="structcommunity__list.html#a6a8671f042f9c711fdde92e489a9a777">name</a>, name) == 0)
<a name="l00216"></a>00216       <span class="keywordflow">return</span> list;
<a name="l00217"></a>00217 
<a name="l00218"></a>00218   <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00219"></a>00219 }
<a name="l00220"></a>00220 
<a name="l00221"></a>00221 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structcommunity__list.html">community_list</a> *
<a name="l00222"></a><a class="code" href="bgp__clist_8c.html#ae8ef42ae0ddf78bf86a81770db967dd6">00222</a> <a class="code" href="bgp__clist_8c.html#ae8ef42ae0ddf78bf86a81770db967dd6">community_list_get</a> (<span class="keyword">struct</span> <a class="code" href="structcommunity__list__handler.html">community_list_handler</a> *ch,
<a name="l00223"></a>00223             <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, <span class="keywordtype">int</span> <a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>)
<a name="l00224"></a>00224 {
<a name="l00225"></a>00225   <span class="keyword">struct </span><a class="code" href="structcommunity__list.html">community_list</a> *<a class="code" href="structlist.html">list</a>;
<a name="l00226"></a>00226 
<a name="l00227"></a>00227   list = <a class="code" href="bgp__clist_8c.html#a2c0159e743b11dc2143b7f74a65ce156">community_list_lookup</a> (ch, name, master);
<a name="l00228"></a>00228   <span class="keywordflow">if</span> (!list)
<a name="l00229"></a>00229     list = <a class="code" href="bgp__clist_8c.html#a2a861b07ef1b751c0a3573152a1b9480">community_list_insert</a> (ch, name, master);
<a name="l00230"></a>00230   <span class="keywordflow">return</span> list;
<a name="l00231"></a>00231 }
<a name="l00232"></a>00232 
<a name="l00233"></a>00233 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00234"></a><a class="code" href="bgp__clist_8c.html#ad36feb2a463e74477a78339f7e2ccbbd">00234</a> <a class="code" href="bgp__clist_8c.html#ad36feb2a463e74477a78339f7e2ccbbd">community_list_delete</a> (<span class="keyword">struct</span> <a class="code" href="structcommunity__list.html">community_list</a> *<a class="code" href="structlist.html">list</a>)
<a name="l00235"></a>00235 {
<a name="l00236"></a>00236   <span class="keyword">struct </span><a class="code" href="structcommunity__list__list.html">community_list_list</a> *clist;
<a name="l00237"></a>00237   <span class="keyword">struct </span><a class="code" href="structcommunity__entry.html">community_entry</a> *entry, *<a class="code" href="structcommunity__entry.html#adf300c2a3193d684911ae005be92218c">next</a>;
<a name="l00238"></a>00238 
<a name="l00239"></a>00239   <span class="keywordflow">for</span> (entry = list-&gt;<a class="code" href="structcommunity__list.html#ae100c28bcf1983e18f4a6f1b0a7186aa">head</a>; entry; entry = next)
<a name="l00240"></a>00240     {
<a name="l00241"></a>00241       next = entry-&gt;<a class="code" href="structcommunity__entry.html#adf300c2a3193d684911ae005be92218c">next</a>;
<a name="l00242"></a>00242       <a class="code" href="bgp__clist_8c.html#a23e2dd7832bc852822f71b60d13ecd5a">community_entry_free</a> (entry);
<a name="l00243"></a>00243     }
<a name="l00244"></a>00244 
<a name="l00245"></a>00245   clist = list-&gt;<a class="code" href="structcommunity__list.html#afb76f93b555f8f24b6fee2b12ae33890">parent</a>;
<a name="l00246"></a>00246 
<a name="l00247"></a>00247   <span class="keywordflow">if</span> (list-&gt;<a class="code" href="structcommunity__list.html#a1b96c87153fe22c6cf7feea6da7d88e0">next</a>)
<a name="l00248"></a>00248     list-&gt;<a class="code" href="structcommunity__list.html#a1b96c87153fe22c6cf7feea6da7d88e0">next</a>-&gt;<a class="code" href="structcommunity__list.html#aa55578094e20a943ad5000b24730d533">prev</a> = list-&gt;<a class="code" href="structcommunity__list.html#aa55578094e20a943ad5000b24730d533">prev</a>;
<a name="l00249"></a>00249   <span class="keywordflow">else</span>
<a name="l00250"></a>00250     clist-&gt;<a class="code" href="structcommunity__list__list.html#a98864d7717529e82e316923e3d558b12">tail</a> = list-&gt;<a class="code" href="structcommunity__list.html#aa55578094e20a943ad5000b24730d533">prev</a>;
<a name="l00251"></a>00251 
<a name="l00252"></a>00252   <span class="keywordflow">if</span> (list-&gt;<a class="code" href="structcommunity__list.html#aa55578094e20a943ad5000b24730d533">prev</a>)
<a name="l00253"></a>00253     list-&gt;<a class="code" href="structcommunity__list.html#aa55578094e20a943ad5000b24730d533">prev</a>-&gt;<a class="code" href="structcommunity__list.html#a1b96c87153fe22c6cf7feea6da7d88e0">next</a> = list-&gt;<a class="code" href="structcommunity__list.html#a1b96c87153fe22c6cf7feea6da7d88e0">next</a>;
<a name="l00254"></a>00254   <span class="keywordflow">else</span>
<a name="l00255"></a>00255     clist-&gt;<a class="code" href="structcommunity__list__list.html#a0d4c7921addc2ef057d88822410eb649">head</a> = list-&gt;<a class="code" href="structcommunity__list.html#a1b96c87153fe22c6cf7feea6da7d88e0">next</a>;
<a name="l00256"></a>00256 
<a name="l00257"></a>00257   <a class="code" href="bgp__clist_8c.html#ac554442b85ad396162540dbafe3d119f">community_list_free</a> (list);
<a name="l00258"></a>00258 }
<a name="l00259"></a>00259 
<a name="l00260"></a>00260 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00261"></a><a class="code" href="bgp__clist_8c.html#a2759973601d972b4066dc91885bfa1b3">00261</a> <a class="code" href="bgp__clist_8c.html#a2759973601d972b4066dc91885bfa1b3">community_list_empty_p</a> (<span class="keyword">struct</span> <a class="code" href="structcommunity__list.html">community_list</a> *<a class="code" href="structlist.html">list</a>)
<a name="l00262"></a>00262 {
<a name="l00263"></a>00263   <span class="keywordflow">return</span> (list-&gt;<a class="code" href="structcommunity__list.html#ae100c28bcf1983e18f4a6f1b0a7186aa">head</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; list-&gt;<a class="code" href="structcommunity__list.html#ac478209abefa8c26d6014a7f8b2535a1">tail</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) ? 1 : 0;
<a name="l00264"></a>00264 }
<a name="l00265"></a>00265 
<a name="l00266"></a>00266 <span class="comment">/* Add community-list entry to the list.  */</span>
<a name="l00267"></a>00267 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00268"></a><a class="code" href="bgp__clist_8c.html#a5f3ead7af5477c0fa54f9e4c3dc93e0e">00268</a> <a class="code" href="bgp__clist_8c.html#a5f3ead7af5477c0fa54f9e4c3dc93e0e">community_list_entry_add</a> (<span class="keyword">struct</span> <a class="code" href="structcommunity__list.html">community_list</a> *<a class="code" href="structlist.html">list</a>,
<a name="l00269"></a>00269                           <span class="keyword">struct</span> <a class="code" href="structcommunity__entry.html">community_entry</a> *entry)
<a name="l00270"></a>00270 {
<a name="l00271"></a>00271   entry-&gt;<a class="code" href="structcommunity__entry.html#adf300c2a3193d684911ae005be92218c">next</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00272"></a>00272   entry-&gt;<a class="code" href="structcommunity__entry.html#a130945767df08a3f3ae21edb5bc741df">prev</a> = list-&gt;<a class="code" href="structcommunity__list.html#ac478209abefa8c26d6014a7f8b2535a1">tail</a>;
<a name="l00273"></a>00273 
<a name="l00274"></a>00274   <span class="keywordflow">if</span> (list-&gt;<a class="code" href="structcommunity__list.html#ac478209abefa8c26d6014a7f8b2535a1">tail</a>)
<a name="l00275"></a>00275     list-&gt;<a class="code" href="structcommunity__list.html#ac478209abefa8c26d6014a7f8b2535a1">tail</a>-&gt;<a class="code" href="structcommunity__entry.html#adf300c2a3193d684911ae005be92218c">next</a> = entry;
<a name="l00276"></a>00276   <span class="keywordflow">else</span>
<a name="l00277"></a>00277     list-&gt;<a class="code" href="structcommunity__list.html#ae100c28bcf1983e18f4a6f1b0a7186aa">head</a> = entry;
<a name="l00278"></a>00278   list-&gt;<a class="code" href="structcommunity__list.html#ac478209abefa8c26d6014a7f8b2535a1">tail</a> = entry;
<a name="l00279"></a>00279 }
<a name="l00280"></a>00280 
<a name="l00281"></a>00281 <span class="comment">/* Delete community-list entry from the list.  */</span>
<a name="l00282"></a>00282 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00283"></a><a class="code" href="bgp__clist_8c.html#adca712eca7bfce2a656f806864abf459">00283</a> <a class="code" href="bgp__clist_8c.html#adca712eca7bfce2a656f806864abf459">community_list_entry_delete</a> (<span class="keyword">struct</span> <a class="code" href="structcommunity__list.html">community_list</a> *<a class="code" href="structlist.html">list</a>,
<a name="l00284"></a>00284                              <span class="keyword">struct</span> <a class="code" href="structcommunity__entry.html">community_entry</a> *entry, <span class="keywordtype">int</span> <a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a>)
<a name="l00285"></a>00285 {
<a name="l00286"></a>00286   <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#adf300c2a3193d684911ae005be92218c">next</a>)
<a name="l00287"></a>00287     entry-&gt;<a class="code" href="structcommunity__entry.html#adf300c2a3193d684911ae005be92218c">next</a>-&gt;<a class="code" href="structcommunity__entry.html#a130945767df08a3f3ae21edb5bc741df">prev</a> = entry-&gt;<a class="code" href="structcommunity__entry.html#a130945767df08a3f3ae21edb5bc741df">prev</a>;
<a name="l00288"></a>00288   <span class="keywordflow">else</span>
<a name="l00289"></a>00289     list-&gt;<a class="code" href="structcommunity__list.html#ac478209abefa8c26d6014a7f8b2535a1">tail</a> = entry-&gt;<a class="code" href="structcommunity__entry.html#a130945767df08a3f3ae21edb5bc741df">prev</a>;
<a name="l00290"></a>00290 
<a name="l00291"></a>00291   <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#a130945767df08a3f3ae21edb5bc741df">prev</a>)
<a name="l00292"></a>00292     entry-&gt;<a class="code" href="structcommunity__entry.html#a130945767df08a3f3ae21edb5bc741df">prev</a>-&gt;<a class="code" href="structcommunity__entry.html#adf300c2a3193d684911ae005be92218c">next</a> = entry-&gt;<a class="code" href="structcommunity__entry.html#adf300c2a3193d684911ae005be92218c">next</a>;
<a name="l00293"></a>00293   <span class="keywordflow">else</span>
<a name="l00294"></a>00294     list-&gt;<a class="code" href="structcommunity__list.html#ae100c28bcf1983e18f4a6f1b0a7186aa">head</a> = entry-&gt;<a class="code" href="structcommunity__entry.html#adf300c2a3193d684911ae005be92218c">next</a>;
<a name="l00295"></a>00295 
<a name="l00296"></a>00296   <a class="code" href="bgp__clist_8c.html#a23e2dd7832bc852822f71b60d13ecd5a">community_entry_free</a> (entry);
<a name="l00297"></a>00297 
<a name="l00298"></a>00298   <span class="keywordflow">if</span> (<a class="code" href="bgp__clist_8c.html#a2759973601d972b4066dc91885bfa1b3">community_list_empty_p</a> (list))
<a name="l00299"></a>00299     <a class="code" href="bgp__clist_8c.html#ad36feb2a463e74477a78339f7e2ccbbd">community_list_delete</a> (list);
<a name="l00300"></a>00300 }
<a name="l00301"></a>00301 
<a name="l00302"></a>00302 <span class="comment">/* Lookup community-list entry from the list.  */</span>
<a name="l00303"></a>00303 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structcommunity__entry.html">community_entry</a> *
<a name="l00304"></a><a class="code" href="bgp__clist_8c.html#a98f4cc5fad1b590d42e1218962381245">00304</a> <a class="code" href="bgp__clist_8c.html#a98f4cc5fad1b590d42e1218962381245">community_list_entry_lookup</a> (<span class="keyword">struct</span> <a class="code" href="structcommunity__list.html">community_list</a> *<a class="code" href="structlist.html">list</a>, <span class="keyword">const</span> <span class="keywordtype">void</span> *arg,
<a name="l00305"></a>00305                              <span class="keywordtype">int</span> <a class="code" href="structcommunity__entry.html#ab1a1c3b9e1621e23ab0f60606cd25cb3">direct</a>)
<a name="l00306"></a>00306 {
<a name="l00307"></a>00307   <span class="keyword">struct </span><a class="code" href="structcommunity__entry.html">community_entry</a> *entry;
<a name="l00308"></a>00308 
<a name="l00309"></a>00309   <span class="keywordflow">for</span> (entry = list-&gt;<a class="code" href="structcommunity__list.html#ae100c28bcf1983e18f4a6f1b0a7186aa">head</a>; entry; entry = entry-&gt;<a class="code" href="structcommunity__entry.html#adf300c2a3193d684911ae005be92218c">next</a>)
<a name="l00310"></a>00310     {
<a name="l00311"></a>00311       <span class="keywordflow">switch</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a>)
<a name="l00312"></a>00312         {
<a name="l00313"></a>00313         <span class="keywordflow">case</span> <a class="code" href="bgp__clist_8h.html#aac9f88f9f0367759b07f7bf9f5ee1f0e">COMMUNITY_LIST_STANDARD</a>:
<a name="l00314"></a>00314           <span class="keywordflow">if</span> (<a class="code" href="bgp__community_8c.html#ab78dd69e6f3b202f3ab726654ea54193">community_cmp</a> (entry-&gt;<a class="code" href="structcommunity__entry.html#ab3e2023304a10f38c5eb6c9b4aaf7023">u</a>.<a class="code" href="structcommunity__entry.html#a417e7d3e1bb8d3bfb620e3d4d79e1e16">com</a>, arg))
<a name="l00315"></a>00315             <span class="keywordflow">return</span> entry;
<a name="l00316"></a>00316           <span class="keywordflow">break</span>;
<a name="l00317"></a>00317         <span class="keywordflow">case</span> <a class="code" href="bgp__clist_8h.html#a999fc8046f6d46557f06e6dc5eafb3a9">EXTCOMMUNITY_LIST_STANDARD</a>:
<a name="l00318"></a>00318           <span class="keywordflow">if</span> (<a class="code" href="bgp__ecommunity_8c.html#aedf7f522590389592309042fdbae6fef">ecommunity_cmp</a> (entry-&gt;<a class="code" href="structcommunity__entry.html#ab3e2023304a10f38c5eb6c9b4aaf7023">u</a>.<a class="code" href="structcommunity__entry.html#a6738f5df4deb7c87ff42f90596910063">ecom</a>, arg))
<a name="l00319"></a>00319             <span class="keywordflow">return</span> entry;
<a name="l00320"></a>00320           <span class="keywordflow">break</span>;
<a name="l00321"></a>00321         <span class="keywordflow">case</span> <a class="code" href="bgp__clist_8h.html#ae00204887ca7891261192c1f0c2ef1b2">COMMUNITY_LIST_EXPANDED</a>:
<a name="l00322"></a>00322         <span class="keywordflow">case</span> <a class="code" href="bgp__clist_8h.html#a75f83c5ed3ca755db0e6003fb775af13">EXTCOMMUNITY_LIST_EXPANDED</a>:
<a name="l00323"></a>00323           <span class="keywordflow">if</span> (strcmp (entry-&gt;<a class="code" href="structcommunity__entry.html#aa623f2755d49e17820332661599c1165">config</a>, arg) == 0)
<a name="l00324"></a>00324             <span class="keywordflow">return</span> entry;
<a name="l00325"></a>00325           <span class="keywordflow">break</span>;
<a name="l00326"></a>00326         <span class="keywordflow">default</span>:
<a name="l00327"></a>00327           <span class="keywordflow">break</span>;
<a name="l00328"></a>00328         }
<a name="l00329"></a>00329     }
<a name="l00330"></a>00330   <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00331"></a>00331 }
<a name="l00332"></a>00332 
<a name="l00333"></a>00333 <span class="comment">/* Internal function to perform regular expression match for community</span>
<a name="l00334"></a>00334 <span class="comment">   attribute.  */</span>
<a name="l00335"></a>00335 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00336"></a><a class="code" href="bgp__clist_8c.html#a9c7340bb7ef1127e6da1313f22b8f6eb">00336</a> <a class="code" href="bgp__clist_8c.html#a9c7340bb7ef1127e6da1313f22b8f6eb">community_regexp_match</a> (<span class="keyword">struct</span> <a class="code" href="structcommunity.html">community</a> *<a class="code" href="structcommunity__entry.html#a417e7d3e1bb8d3bfb620e3d4d79e1e16">com</a>, <a class="code" href="structre__pattern__buffer.html">regex_t</a> * <a class="code" href="structcommunity__entry.html#a817ea26d814de0aea503fd6d70857664">reg</a>)
<a name="l00337"></a>00337 {
<a name="l00338"></a>00338   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>;
<a name="l00339"></a>00339 
<a name="l00340"></a>00340   <span class="comment">/* When there is no communities attribute it is treated as empty</span>
<a name="l00341"></a>00341 <span class="comment">     string.  */</span>
<a name="l00342"></a>00342   <span class="keywordflow">if</span> (com == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> || com-&gt;<a class="code" href="structcommunity.html#ad54bd9c20e0cf4fa4674f5b76703d192">size</a> == 0)
<a name="l00343"></a>00343     str = <span class="stringliteral">&quot;&quot;</span>;
<a name="l00344"></a>00344   <span class="keywordflow">else</span>
<a name="l00345"></a>00345     str = <a class="code" href="bgp__community_8c.html#a46ddc4b676977762237ba3c27f9ff98e">community_str</a> (com);
<a name="l00346"></a>00346 
<a name="l00347"></a>00347   <span class="comment">/* Regular expression match.  */</span>
<a name="l00348"></a>00348   <span class="keywordflow">if</span> (<a class="code" href="regex_8c.html#a0298f60fae70832d70e8ec5d032472a8">regexec</a> (reg, str, 0, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0) == 0)
<a name="l00349"></a>00349     <span class="keywordflow">return</span> 1;
<a name="l00350"></a>00350 
<a name="l00351"></a>00351   <span class="comment">/* No match.  */</span>
<a name="l00352"></a>00352   <span class="keywordflow">return</span> 0;
<a name="l00353"></a>00353 }
<a name="l00354"></a>00354 
<a name="l00355"></a>00355 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00356"></a><a class="code" href="bgp__clist_8c.html#a6eead86ba88249766ba266fab353509a">00356</a> <a class="code" href="bgp__clist_8c.html#a6eead86ba88249766ba266fab353509a">ecommunity_regexp_match</a> (<span class="keyword">struct</span> <a class="code" href="structecommunity.html">ecommunity</a> *<a class="code" href="structcommunity__entry.html#a6738f5df4deb7c87ff42f90596910063">ecom</a>, <a class="code" href="structre__pattern__buffer.html">regex_t</a> * <a class="code" href="structcommunity__entry.html#a817ea26d814de0aea503fd6d70857664">reg</a>)
<a name="l00357"></a>00357 {
<a name="l00358"></a>00358   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>;
<a name="l00359"></a>00359 
<a name="l00360"></a>00360   <span class="comment">/* When there is no communities attribute it is treated as empty</span>
<a name="l00361"></a>00361 <span class="comment">     string.  */</span>
<a name="l00362"></a>00362   <span class="keywordflow">if</span> (ecom == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> || ecom-&gt;<a class="code" href="structecommunity.html#a4477c6c01052cb83ed9b4682302ebf5f">size</a> == 0)
<a name="l00363"></a>00363     str = <span class="stringliteral">&quot;&quot;</span>;
<a name="l00364"></a>00364   <span class="keywordflow">else</span>
<a name="l00365"></a>00365     str = <a class="code" href="bgp__ecommunity_8c.html#acf79813b21f80e7f2966706a4df198e8">ecommunity_str</a> (ecom);
<a name="l00366"></a>00366 
<a name="l00367"></a>00367   <span class="comment">/* Regular expression match.  */</span>
<a name="l00368"></a>00368   <span class="keywordflow">if</span> (<a class="code" href="regex_8c.html#a0298f60fae70832d70e8ec5d032472a8">regexec</a> (reg, str, 0, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0) == 0)
<a name="l00369"></a>00369     <span class="keywordflow">return</span> 1;
<a name="l00370"></a>00370 
<a name="l00371"></a>00371   <span class="comment">/* No match.  */</span>
<a name="l00372"></a>00372   <span class="keywordflow">return</span> 0;
<a name="l00373"></a>00373 }
<a name="l00374"></a>00374 
<a name="l00375"></a>00375 <span class="comment">/* Delete community attribute using regular expression match.  Return</span>
<a name="l00376"></a>00376 <span class="comment">   modified communites attribute.  */</span>
<a name="l00377"></a>00377 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structcommunity.html">community</a> *
<a name="l00378"></a><a class="code" href="bgp__clist_8c.html#af903a31e11b5cc5c2c372e67f41c4897">00378</a> <a class="code" href="bgp__clist_8c.html#af903a31e11b5cc5c2c372e67f41c4897">community_regexp_delete</a> (<span class="keyword">struct</span> <a class="code" href="structcommunity.html">community</a> *com, <a class="code" href="structre__pattern__buffer.html">regex_t</a> * reg)
<a name="l00379"></a>00379 {
<a name="l00380"></a>00380   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l00381"></a>00381   u_int32_t comval;
<a name="l00382"></a>00382   <span class="comment">/* Maximum is &quot;65535:65535&quot; + &#39;\0&#39;. */</span>
<a name="l00383"></a>00383   <span class="keywordtype">char</span> c[12];
<a name="l00384"></a>00384   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>;
<a name="l00385"></a>00385 
<a name="l00386"></a>00386   <span class="keywordflow">if</span> (!com)
<a name="l00387"></a>00387     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00388"></a>00388 
<a name="l00389"></a>00389   i = 0;
<a name="l00390"></a>00390   <span class="keywordflow">while</span> (i &lt; com-&gt;<a class="code" href="structcommunity.html#ad54bd9c20e0cf4fa4674f5b76703d192">size</a>)
<a name="l00391"></a>00391     {
<a name="l00392"></a>00392       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;comval, <a class="code" href="bgp__community_8h.html#af94a7f226b0984e690c90fe23355d71b">com_nthval</a> (com, i), <span class="keyword">sizeof</span> (u_int32_t));
<a name="l00393"></a>00393       comval = ntohl (comval);
<a name="l00394"></a>00394 
<a name="l00395"></a>00395       <span class="keywordflow">switch</span> (comval)
<a name="l00396"></a>00396         {
<a name="l00397"></a>00397         <span class="keywordflow">case</span> <a class="code" href="bgp__community_8h.html#a963dbe34b652eddc5e57390c16fe5063">COMMUNITY_INTERNET</a>:
<a name="l00398"></a>00398           str = <span class="stringliteral">&quot;internet&quot;</span>;
<a name="l00399"></a>00399           <span class="keywordflow">break</span>;
<a name="l00400"></a>00400         <span class="keywordflow">case</span> <a class="code" href="bgp__community_8h.html#a219dabc199faf8a9c3d75d8cccd2aa04">COMMUNITY_NO_EXPORT</a>:
<a name="l00401"></a>00401           str = <span class="stringliteral">&quot;no-export&quot;</span>;
<a name="l00402"></a>00402           <span class="keywordflow">break</span>;
<a name="l00403"></a>00403         <span class="keywordflow">case</span> <a class="code" href="bgp__community_8h.html#ad48733d7ee618f0eb7371ca7300af9fc">COMMUNITY_NO_ADVERTISE</a>:
<a name="l00404"></a>00404           str = <span class="stringliteral">&quot;no-advertise&quot;</span>;
<a name="l00405"></a>00405           <span class="keywordflow">break</span>;
<a name="l00406"></a>00406         <span class="keywordflow">case</span> <a class="code" href="bgp__community_8h.html#acacc3f9ae32baf1130b9cd46f1c7bf90">COMMUNITY_LOCAL_AS</a>:
<a name="l00407"></a>00407           str = <span class="stringliteral">&quot;local-AS&quot;</span>;
<a name="l00408"></a>00408           <span class="keywordflow">break</span>;
<a name="l00409"></a>00409         <span class="keywordflow">default</span>:
<a name="l00410"></a>00410           sprintf (c, <span class="stringliteral">&quot;%d:%d&quot;</span>, (comval &gt;&gt; 16) &amp; 0xFFFF, comval &amp; 0xFFFF);
<a name="l00411"></a>00411           str = c;
<a name="l00412"></a>00412           <span class="keywordflow">break</span>;
<a name="l00413"></a>00413         }
<a name="l00414"></a>00414 
<a name="l00415"></a>00415       <span class="keywordflow">if</span> (<a class="code" href="regex_8c.html#a0298f60fae70832d70e8ec5d032472a8">regexec</a> (reg, str, 0, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0) == 0)
<a name="l00416"></a>00416         <a class="code" href="bgp__community_8c.html#acca441f8b245fa4d9f981db44782e3ee">community_del_val</a> (com, <a class="code" href="bgp__community_8h.html#af94a7f226b0984e690c90fe23355d71b">com_nthval</a> (com, i));
<a name="l00417"></a>00417       <span class="keywordflow">else</span>
<a name="l00418"></a>00418         i++;
<a name="l00419"></a>00419     }
<a name="l00420"></a>00420   <span class="keywordflow">return</span> com;
<a name="l00421"></a>00421 }
<a name="l00422"></a>00422 
<a name="l00423"></a>00423 <span class="comment">/* When given community attribute matches to the community-list return</span>
<a name="l00424"></a>00424 <span class="comment">   1 else return 0.  */</span>
<a name="l00425"></a>00425 <span class="keywordtype">int</span>
<a name="l00426"></a><a class="code" href="bgp__clist_8h.html#af4552f361c9da82456b60ea368e85798">00426</a> <a class="code" href="bgp__clist_8c.html#a12f4fa6dfed00f5e25a73b79368151fd">community_list_match</a> (<span class="keyword">struct</span> <a class="code" href="structcommunity.html">community</a> *com, <span class="keyword">struct</span> <a class="code" href="structcommunity__list.html">community_list</a> *<a class="code" href="structlist.html">list</a>)
<a name="l00427"></a>00427 {
<a name="l00428"></a>00428   <span class="keyword">struct </span><a class="code" href="structcommunity__entry.html">community_entry</a> *entry;
<a name="l00429"></a>00429 
<a name="l00430"></a>00430   <span class="keywordflow">for</span> (entry = list-&gt;<a class="code" href="structcommunity__list.html#ae100c28bcf1983e18f4a6f1b0a7186aa">head</a>; entry; entry = entry-&gt;<a class="code" href="structcommunity__entry.html#adf300c2a3193d684911ae005be92218c">next</a>)
<a name="l00431"></a>00431     {
<a name="l00432"></a>00432       <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#ad46635f1fd412d4cd77fea982b955081">any</a>)
<a name="l00433"></a>00433         <span class="keywordflow">return</span> entry-&gt;<a class="code" href="structcommunity__entry.html#ab1a1c3b9e1621e23ab0f60606cd25cb3">direct</a> == <a class="code" href="bgp__clist_8h.html#ae6df4a7e348bcadcc65fdc56cbd9f418">COMMUNITY_PERMIT</a> ? 1 : 0;
<a name="l00434"></a>00434 
<a name="l00435"></a>00435       <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a> == <a class="code" href="bgp__clist_8h.html#aac9f88f9f0367759b07f7bf9f5ee1f0e">COMMUNITY_LIST_STANDARD</a>)
<a name="l00436"></a>00436         {
<a name="l00437"></a>00437           <span class="keywordflow">if</span> (<a class="code" href="bgp__community_8c.html#a0191e40f098590ab68b99a24c2a2e931">community_include</a> (entry-&gt;<a class="code" href="structcommunity__entry.html#ab3e2023304a10f38c5eb6c9b4aaf7023">u</a>.<a class="code" href="structcommunity__entry.html#a417e7d3e1bb8d3bfb620e3d4d79e1e16">com</a>, <a class="code" href="bgp__community_8h.html#a963dbe34b652eddc5e57390c16fe5063">COMMUNITY_INTERNET</a>))
<a name="l00438"></a>00438             <span class="keywordflow">return</span> entry-&gt;<a class="code" href="structcommunity__entry.html#ab1a1c3b9e1621e23ab0f60606cd25cb3">direct</a> == <a class="code" href="bgp__clist_8h.html#ae6df4a7e348bcadcc65fdc56cbd9f418">COMMUNITY_PERMIT</a> ? 1 : 0;
<a name="l00439"></a>00439 
<a name="l00440"></a>00440           <span class="keywordflow">if</span> (<a class="code" href="bgp__community_8c.html#a7f39155b89b53a2e34d555ad2912692e">community_match</a> (com, entry-&gt;<a class="code" href="structcommunity__entry.html#ab3e2023304a10f38c5eb6c9b4aaf7023">u</a>.<a class="code" href="structcommunity__entry.html#a417e7d3e1bb8d3bfb620e3d4d79e1e16">com</a>))
<a name="l00441"></a>00441             <span class="keywordflow">return</span> entry-&gt;<a class="code" href="structcommunity__entry.html#ab1a1c3b9e1621e23ab0f60606cd25cb3">direct</a> == <a class="code" href="bgp__clist_8h.html#ae6df4a7e348bcadcc65fdc56cbd9f418">COMMUNITY_PERMIT</a> ? 1 : 0;
<a name="l00442"></a>00442         }
<a name="l00443"></a>00443       <span class="keywordflow">else</span> <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a> == <a class="code" href="bgp__clist_8h.html#ae00204887ca7891261192c1f0c2ef1b2">COMMUNITY_LIST_EXPANDED</a>)
<a name="l00444"></a>00444         {
<a name="l00445"></a>00445           <span class="keywordflow">if</span> (<a class="code" href="bgp__clist_8c.html#a9c7340bb7ef1127e6da1313f22b8f6eb">community_regexp_match</a> (com, entry-&gt;<a class="code" href="structcommunity__entry.html#a817ea26d814de0aea503fd6d70857664">reg</a>))
<a name="l00446"></a>00446             <span class="keywordflow">return</span> entry-&gt;<a class="code" href="structcommunity__entry.html#ab1a1c3b9e1621e23ab0f60606cd25cb3">direct</a> == <a class="code" href="bgp__clist_8h.html#ae6df4a7e348bcadcc65fdc56cbd9f418">COMMUNITY_PERMIT</a> ? 1 : 0;
<a name="l00447"></a>00447         }
<a name="l00448"></a>00448     }
<a name="l00449"></a>00449   <span class="keywordflow">return</span> 0;
<a name="l00450"></a>00450 }
<a name="l00451"></a>00451 
<a name="l00452"></a>00452 <span class="keywordtype">int</span>
<a name="l00453"></a><a class="code" href="bgp__clist_8h.html#a1e771929f8c9a9adb3445a3df3f0b02f">00453</a> <a class="code" href="bgp__clist_8c.html#a98125eca200d5e9e26b9f87df48e37ed">ecommunity_list_match</a> (<span class="keyword">struct</span> <a class="code" href="structecommunity.html">ecommunity</a> *<a class="code" href="structcommunity__entry.html#a6738f5df4deb7c87ff42f90596910063">ecom</a>, <span class="keyword">struct</span> <a class="code" href="structcommunity__list.html">community_list</a> *<a class="code" href="structlist.html">list</a>)
<a name="l00454"></a>00454 {
<a name="l00455"></a>00455   <span class="keyword">struct </span><a class="code" href="structcommunity__entry.html">community_entry</a> *entry;
<a name="l00456"></a>00456 
<a name="l00457"></a>00457   <span class="keywordflow">for</span> (entry = list-&gt;<a class="code" href="structcommunity__list.html#ae100c28bcf1983e18f4a6f1b0a7186aa">head</a>; entry; entry = entry-&gt;<a class="code" href="structcommunity__entry.html#adf300c2a3193d684911ae005be92218c">next</a>)
<a name="l00458"></a>00458     {
<a name="l00459"></a>00459       <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#ad46635f1fd412d4cd77fea982b955081">any</a>)
<a name="l00460"></a>00460         <span class="keywordflow">return</span> entry-&gt;<a class="code" href="structcommunity__entry.html#ab1a1c3b9e1621e23ab0f60606cd25cb3">direct</a> == <a class="code" href="bgp__clist_8h.html#ae6df4a7e348bcadcc65fdc56cbd9f418">COMMUNITY_PERMIT</a> ? 1 : 0;
<a name="l00461"></a>00461 
<a name="l00462"></a>00462       <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a> == <a class="code" href="bgp__clist_8h.html#a999fc8046f6d46557f06e6dc5eafb3a9">EXTCOMMUNITY_LIST_STANDARD</a>)
<a name="l00463"></a>00463         {
<a name="l00464"></a>00464           <span class="keywordflow">if</span> (<a class="code" href="bgp__ecommunity_8c.html#a492220e57649c8ea7c1ef5dc4656b1f7">ecommunity_match</a> (ecom, entry-&gt;<a class="code" href="structcommunity__entry.html#ab3e2023304a10f38c5eb6c9b4aaf7023">u</a>.<a class="code" href="structcommunity__entry.html#a6738f5df4deb7c87ff42f90596910063">ecom</a>))
<a name="l00465"></a>00465             <span class="keywordflow">return</span> entry-&gt;<a class="code" href="structcommunity__entry.html#ab1a1c3b9e1621e23ab0f60606cd25cb3">direct</a> == <a class="code" href="bgp__clist_8h.html#ae6df4a7e348bcadcc65fdc56cbd9f418">COMMUNITY_PERMIT</a> ? 1 : 0;
<a name="l00466"></a>00466         }
<a name="l00467"></a>00467       <span class="keywordflow">else</span> <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a> == <a class="code" href="bgp__clist_8h.html#a75f83c5ed3ca755db0e6003fb775af13">EXTCOMMUNITY_LIST_EXPANDED</a>)
<a name="l00468"></a>00468         {
<a name="l00469"></a>00469           <span class="keywordflow">if</span> (<a class="code" href="bgp__clist_8c.html#a6eead86ba88249766ba266fab353509a">ecommunity_regexp_match</a> (ecom, entry-&gt;<a class="code" href="structcommunity__entry.html#a817ea26d814de0aea503fd6d70857664">reg</a>))
<a name="l00470"></a>00470             <span class="keywordflow">return</span> entry-&gt;<a class="code" href="structcommunity__entry.html#ab1a1c3b9e1621e23ab0f60606cd25cb3">direct</a> == <a class="code" href="bgp__clist_8h.html#ae6df4a7e348bcadcc65fdc56cbd9f418">COMMUNITY_PERMIT</a> ? 1 : 0;
<a name="l00471"></a>00471         }
<a name="l00472"></a>00472     }
<a name="l00473"></a>00473   <span class="keywordflow">return</span> 0;
<a name="l00474"></a>00474 }
<a name="l00475"></a>00475 
<a name="l00476"></a>00476 <span class="comment">/* Perform exact matching.  In case of expanded community-list, do</span>
<a name="l00477"></a>00477 <span class="comment">   same thing as community_list_match().  */</span>
<a name="l00478"></a>00478 <span class="keywordtype">int</span>
<a name="l00479"></a><a class="code" href="bgp__clist_8h.html#a203cdef6fa112225ef21656db0b6bc68">00479</a> <a class="code" href="bgp__clist_8c.html#a9c54ba0c7f95697b7a6ce9e0eafa6db3">community_list_exact_match</a> (<span class="keyword">struct</span> <a class="code" href="structcommunity.html">community</a> *<a class="code" href="structcommunity__entry.html#a417e7d3e1bb8d3bfb620e3d4d79e1e16">com</a>,
<a name="l00480"></a>00480                             <span class="keyword">struct</span> <a class="code" href="structcommunity__list.html">community_list</a> *<a class="code" href="structlist.html">list</a>)
<a name="l00481"></a>00481 {
<a name="l00482"></a>00482   <span class="keyword">struct </span><a class="code" href="structcommunity__entry.html">community_entry</a> *entry;
<a name="l00483"></a>00483 
<a name="l00484"></a>00484   <span class="keywordflow">for</span> (entry = list-&gt;<a class="code" href="structcommunity__list.html#ae100c28bcf1983e18f4a6f1b0a7186aa">head</a>; entry; entry = entry-&gt;<a class="code" href="structcommunity__entry.html#adf300c2a3193d684911ae005be92218c">next</a>)
<a name="l00485"></a>00485     {
<a name="l00486"></a>00486       <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#ad46635f1fd412d4cd77fea982b955081">any</a>)
<a name="l00487"></a>00487         <span class="keywordflow">return</span> entry-&gt;<a class="code" href="structcommunity__entry.html#ab1a1c3b9e1621e23ab0f60606cd25cb3">direct</a> == <a class="code" href="bgp__clist_8h.html#ae6df4a7e348bcadcc65fdc56cbd9f418">COMMUNITY_PERMIT</a> ? 1 : 0;
<a name="l00488"></a>00488 
<a name="l00489"></a>00489       <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a> == <a class="code" href="bgp__clist_8h.html#aac9f88f9f0367759b07f7bf9f5ee1f0e">COMMUNITY_LIST_STANDARD</a>)
<a name="l00490"></a>00490         {
<a name="l00491"></a>00491           <span class="keywordflow">if</span> (<a class="code" href="bgp__community_8c.html#a0191e40f098590ab68b99a24c2a2e931">community_include</a> (entry-&gt;<a class="code" href="structcommunity__entry.html#ab3e2023304a10f38c5eb6c9b4aaf7023">u</a>.<a class="code" href="structcommunity__entry.html#a417e7d3e1bb8d3bfb620e3d4d79e1e16">com</a>, <a class="code" href="bgp__community_8h.html#a963dbe34b652eddc5e57390c16fe5063">COMMUNITY_INTERNET</a>))
<a name="l00492"></a>00492             <span class="keywordflow">return</span> entry-&gt;<a class="code" href="structcommunity__entry.html#ab1a1c3b9e1621e23ab0f60606cd25cb3">direct</a> == <a class="code" href="bgp__clist_8h.html#ae6df4a7e348bcadcc65fdc56cbd9f418">COMMUNITY_PERMIT</a> ? 1 : 0;
<a name="l00493"></a>00493 
<a name="l00494"></a>00494           <span class="keywordflow">if</span> (<a class="code" href="bgp__community_8c.html#ab78dd69e6f3b202f3ab726654ea54193">community_cmp</a> (com, entry-&gt;<a class="code" href="structcommunity__entry.html#ab3e2023304a10f38c5eb6c9b4aaf7023">u</a>.<a class="code" href="structcommunity__entry.html#a417e7d3e1bb8d3bfb620e3d4d79e1e16">com</a>))
<a name="l00495"></a>00495             <span class="keywordflow">return</span> entry-&gt;<a class="code" href="structcommunity__entry.html#ab1a1c3b9e1621e23ab0f60606cd25cb3">direct</a> == <a class="code" href="bgp__clist_8h.html#ae6df4a7e348bcadcc65fdc56cbd9f418">COMMUNITY_PERMIT</a> ? 1 : 0;
<a name="l00496"></a>00496         }
<a name="l00497"></a>00497       <span class="keywordflow">else</span> <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a> == <a class="code" href="bgp__clist_8h.html#ae00204887ca7891261192c1f0c2ef1b2">COMMUNITY_LIST_EXPANDED</a>)
<a name="l00498"></a>00498         {
<a name="l00499"></a>00499           <span class="keywordflow">if</span> (<a class="code" href="bgp__clist_8c.html#a9c7340bb7ef1127e6da1313f22b8f6eb">community_regexp_match</a> (com, entry-&gt;<a class="code" href="structcommunity__entry.html#a817ea26d814de0aea503fd6d70857664">reg</a>))
<a name="l00500"></a>00500             <span class="keywordflow">return</span> entry-&gt;<a class="code" href="structcommunity__entry.html#ab1a1c3b9e1621e23ab0f60606cd25cb3">direct</a> == <a class="code" href="bgp__clist_8h.html#ae6df4a7e348bcadcc65fdc56cbd9f418">COMMUNITY_PERMIT</a> ? 1 : 0;
<a name="l00501"></a>00501         }
<a name="l00502"></a>00502     }
<a name="l00503"></a>00503   <span class="keywordflow">return</span> 0;
<a name="l00504"></a>00504 }
<a name="l00505"></a>00505 
<a name="l00506"></a>00506 <span class="comment">/* Delete all permitted communities in the list from com.  */</span>
<a name="l00507"></a>00507 <span class="keyword">struct </span><a class="code" href="structcommunity.html">community</a> *
<a name="l00508"></a><a class="code" href="bgp__clist_8h.html#a8baefa6c81291cde8a1c5191e2daeb30">00508</a> <a class="code" href="bgp__clist_8c.html#aaa3ebe16a5e105a177be4f76d40fcc69">community_list_match_delete</a> (<span class="keyword">struct</span> <a class="code" href="structcommunity.html">community</a> *com,
<a name="l00509"></a>00509                              <span class="keyword">struct</span> <a class="code" href="structcommunity__list.html">community_list</a> *<a class="code" href="structlist.html">list</a>)
<a name="l00510"></a>00510 {
<a name="l00511"></a>00511   <span class="keyword">struct </span><a class="code" href="structcommunity__entry.html">community_entry</a> *entry;
<a name="l00512"></a>00512 
<a name="l00513"></a>00513   <span class="keywordflow">for</span> (entry = list-&gt;<a class="code" href="structcommunity__list.html#ae100c28bcf1983e18f4a6f1b0a7186aa">head</a>; entry; entry = entry-&gt;<a class="code" href="structcommunity__entry.html#adf300c2a3193d684911ae005be92218c">next</a>)
<a name="l00514"></a>00514     {
<a name="l00515"></a>00515       <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#ad46635f1fd412d4cd77fea982b955081">any</a>)
<a name="l00516"></a>00516         {
<a name="l00517"></a>00517           <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#ab1a1c3b9e1621e23ab0f60606cd25cb3">direct</a> == <a class="code" href="bgp__clist_8h.html#ae6df4a7e348bcadcc65fdc56cbd9f418">COMMUNITY_PERMIT</a>) 
<a name="l00518"></a>00518             {
<a name="l00519"></a>00519               <span class="comment">/* This is a tricky part.  Currently only</span>
<a name="l00520"></a>00520 <span class="comment">               * route_set_community_delete() uses this function.  In the</span>
<a name="l00521"></a>00521 <span class="comment">               * function com-&gt;size is zero, it free the community</span>
<a name="l00522"></a>00522 <span class="comment">               * structure.  </span>
<a name="l00523"></a>00523 <span class="comment">               */</span>
<a name="l00524"></a>00524               com-&gt;<a class="code" href="structcommunity.html#ad54bd9c20e0cf4fa4674f5b76703d192">size</a> = 0;
<a name="l00525"></a>00525             }
<a name="l00526"></a>00526           <span class="keywordflow">return</span> <a class="code" href="structcommunity__entry.html#a417e7d3e1bb8d3bfb620e3d4d79e1e16">com</a>;
<a name="l00527"></a>00527         }
<a name="l00528"></a>00528 
<a name="l00529"></a>00529       <span class="keywordflow">if</span> ((entry-&gt;<a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a> == <a class="code" href="bgp__clist_8h.html#aac9f88f9f0367759b07f7bf9f5ee1f0e">COMMUNITY_LIST_STANDARD</a>) 
<a name="l00530"></a>00530           &amp;&amp; (<a class="code" href="bgp__community_8c.html#a0191e40f098590ab68b99a24c2a2e931">community_include</a> (entry-&gt;<a class="code" href="structcommunity__entry.html#ab3e2023304a10f38c5eb6c9b4aaf7023">u</a>.<a class="code" href="structcommunity__entry.html#a417e7d3e1bb8d3bfb620e3d4d79e1e16">com</a>, <a class="code" href="bgp__community_8h.html#a963dbe34b652eddc5e57390c16fe5063">COMMUNITY_INTERNET</a>)
<a name="l00531"></a>00531               || <a class="code" href="bgp__community_8c.html#a7f39155b89b53a2e34d555ad2912692e">community_match</a> (com, entry-&gt;<a class="code" href="structcommunity__entry.html#ab3e2023304a10f38c5eb6c9b4aaf7023">u</a>.<a class="code" href="structcommunity__entry.html#a417e7d3e1bb8d3bfb620e3d4d79e1e16">com</a>) ))
<a name="l00532"></a>00532         {
<a name="l00533"></a>00533               <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#ab1a1c3b9e1621e23ab0f60606cd25cb3">direct</a> == <a class="code" href="bgp__clist_8h.html#ae6df4a7e348bcadcc65fdc56cbd9f418">COMMUNITY_PERMIT</a>)
<a name="l00534"></a>00534                 <a class="code" href="bgp__community_8c.html#a610875add342ca4a766a41301272ca8d">community_delete</a> (com, entry-&gt;<a class="code" href="structcommunity__entry.html#ab3e2023304a10f38c5eb6c9b4aaf7023">u</a>.<a class="code" href="structcommunity__entry.html#a417e7d3e1bb8d3bfb620e3d4d79e1e16">com</a>);
<a name="l00535"></a>00535               <span class="keywordflow">else</span>
<a name="l00536"></a>00536                 <span class="keywordflow">break</span>;
<a name="l00537"></a>00537         }
<a name="l00538"></a>00538       <span class="keywordflow">else</span> <span class="keywordflow">if</span> ((entry-&gt;<a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a> == <a class="code" href="bgp__clist_8h.html#ae00204887ca7891261192c1f0c2ef1b2">COMMUNITY_LIST_EXPANDED</a>)
<a name="l00539"></a>00539                &amp;&amp; <a class="code" href="bgp__clist_8c.html#a9c7340bb7ef1127e6da1313f22b8f6eb">community_regexp_match</a> (com, entry-&gt;<a class="code" href="structcommunity__entry.html#a817ea26d814de0aea503fd6d70857664">reg</a>))
<a name="l00540"></a>00540         {
<a name="l00541"></a>00541           <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#ab1a1c3b9e1621e23ab0f60606cd25cb3">direct</a> == <a class="code" href="bgp__clist_8h.html#ae6df4a7e348bcadcc65fdc56cbd9f418">COMMUNITY_PERMIT</a>)
<a name="l00542"></a>00542             <a class="code" href="bgp__clist_8c.html#af903a31e11b5cc5c2c372e67f41c4897">community_regexp_delete</a> (com, entry-&gt;<a class="code" href="structcommunity__entry.html#a817ea26d814de0aea503fd6d70857664">reg</a>);
<a name="l00543"></a>00543           <span class="keywordflow">else</span>
<a name="l00544"></a>00544             <span class="keywordflow">break</span>;
<a name="l00545"></a>00545         }
<a name="l00546"></a>00546     }
<a name="l00547"></a>00547   <span class="keywordflow">return</span> <a class="code" href="structcommunity__entry.html#a417e7d3e1bb8d3bfb620e3d4d79e1e16">com</a>;
<a name="l00548"></a>00548 }
<a name="l00549"></a>00549 
<a name="l00550"></a>00550 <span class="comment">/* To avoid duplicated entry in the community-list, this function</span>
<a name="l00551"></a>00551 <span class="comment">   compares specified entry to existing entry.  */</span>
<a name="l00552"></a>00552 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00553"></a><a class="code" href="bgp__clist_8c.html#a67e3a353cea67dd13e2b046bc7c2b5e0">00553</a> <a class="code" href="bgp__clist_8c.html#a67e3a353cea67dd13e2b046bc7c2b5e0">community_list_dup_check</a> (<span class="keyword">struct</span> <a class="code" href="structcommunity__list.html">community_list</a> *<a class="code" href="structlist.html">list</a>,
<a name="l00554"></a>00554                           <span class="keyword">struct</span> <a class="code" href="structcommunity__entry.html">community_entry</a> *<span class="keyword">new</span>)
<a name="l00555"></a>00555 {
<a name="l00556"></a>00556   <span class="keyword">struct </span><a class="code" href="structcommunity__entry.html">community_entry</a> *entry;
<a name="l00557"></a>00557 
<a name="l00558"></a>00558   <span class="keywordflow">for</span> (entry = list-&gt;<a class="code" href="structcommunity__list.html#ae100c28bcf1983e18f4a6f1b0a7186aa">head</a>; entry; entry = entry-&gt;<a class="code" href="structcommunity__entry.html#adf300c2a3193d684911ae005be92218c">next</a>)
<a name="l00559"></a>00559     {
<a name="l00560"></a>00560       <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a> != new-&gt;style)
<a name="l00561"></a>00561         <span class="keywordflow">continue</span>;
<a name="l00562"></a>00562 
<a name="l00563"></a>00563       <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#ab1a1c3b9e1621e23ab0f60606cd25cb3">direct</a> != new-&gt;direct)
<a name="l00564"></a>00564         <span class="keywordflow">continue</span>;
<a name="l00565"></a>00565 
<a name="l00566"></a>00566       <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#ad46635f1fd412d4cd77fea982b955081">any</a> != new-&gt;any)
<a name="l00567"></a>00567         <span class="keywordflow">continue</span>;
<a name="l00568"></a>00568 
<a name="l00569"></a>00569       <span class="keywordflow">if</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#ad46635f1fd412d4cd77fea982b955081">any</a>)
<a name="l00570"></a>00570         <span class="keywordflow">return</span> 1;
<a name="l00571"></a>00571 
<a name="l00572"></a>00572       <span class="keywordflow">switch</span> (entry-&gt;<a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a>)
<a name="l00573"></a>00573         {
<a name="l00574"></a>00574         <span class="keywordflow">case</span> <a class="code" href="bgp__clist_8h.html#aac9f88f9f0367759b07f7bf9f5ee1f0e">COMMUNITY_LIST_STANDARD</a>:
<a name="l00575"></a>00575           <span class="keywordflow">if</span> (<a class="code" href="bgp__community_8c.html#ab78dd69e6f3b202f3ab726654ea54193">community_cmp</a> (entry-&gt;<a class="code" href="structcommunity__entry.html#ab3e2023304a10f38c5eb6c9b4aaf7023">u</a>.<a class="code" href="structcommunity__entry.html#a417e7d3e1bb8d3bfb620e3d4d79e1e16">com</a>, new-&gt;u.com))
<a name="l00576"></a>00576             <span class="keywordflow">return</span> 1;
<a name="l00577"></a>00577           <span class="keywordflow">break</span>;
<a name="l00578"></a>00578         <span class="keywordflow">case</span> <a class="code" href="bgp__clist_8h.html#a999fc8046f6d46557f06e6dc5eafb3a9">EXTCOMMUNITY_LIST_STANDARD</a>:
<a name="l00579"></a>00579           <span class="keywordflow">if</span> (<a class="code" href="bgp__ecommunity_8c.html#aedf7f522590389592309042fdbae6fef">ecommunity_cmp</a> (entry-&gt;<a class="code" href="structcommunity__entry.html#ab3e2023304a10f38c5eb6c9b4aaf7023">u</a>.<a class="code" href="structcommunity__entry.html#a6738f5df4deb7c87ff42f90596910063">ecom</a>, new-&gt;u.ecom))
<a name="l00580"></a>00580             <span class="keywordflow">return</span> 1;
<a name="l00581"></a>00581           <span class="keywordflow">break</span>;
<a name="l00582"></a>00582         <span class="keywordflow">case</span> <a class="code" href="bgp__clist_8h.html#ae00204887ca7891261192c1f0c2ef1b2">COMMUNITY_LIST_EXPANDED</a>:
<a name="l00583"></a>00583         <span class="keywordflow">case</span> <a class="code" href="bgp__clist_8h.html#a75f83c5ed3ca755db0e6003fb775af13">EXTCOMMUNITY_LIST_EXPANDED</a>:
<a name="l00584"></a>00584           <span class="keywordflow">if</span> (strcmp (entry-&gt;<a class="code" href="structcommunity__entry.html#aa623f2755d49e17820332661599c1165">config</a>, new-&gt;config) == 0)
<a name="l00585"></a>00585             <span class="keywordflow">return</span> 1;
<a name="l00586"></a>00586           <span class="keywordflow">break</span>;
<a name="l00587"></a>00587         <span class="keywordflow">default</span>:
<a name="l00588"></a>00588           <span class="keywordflow">break</span>;
<a name="l00589"></a>00589         }
<a name="l00590"></a>00590     }
<a name="l00591"></a>00591   <span class="keywordflow">return</span> 0;
<a name="l00592"></a>00592 }
<a name="l00593"></a>00593 
<a name="l00594"></a>00594 <span class="comment">/* Set community-list.  */</span>
<a name="l00595"></a>00595 <span class="keywordtype">int</span>
<a name="l00596"></a><a class="code" href="bgp__clist_8h.html#aa888d54db9ff0fd7dfb0185fa4fb45de">00596</a> <a class="code" href="bgp__clist_8c.html#aa888d54db9ff0fd7dfb0185fa4fb45de">community_list_set</a> (<span class="keyword">struct</span> <a class="code" href="structcommunity__list__handler.html">community_list_handler</a> *ch,
<a name="l00597"></a>00597                     <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, <span class="keywordtype">int</span> <a class="code" href="structcommunity__entry.html#ab1a1c3b9e1621e23ab0f60606cd25cb3">direct</a>, <span class="keywordtype">int</span> <a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a>)
<a name="l00598"></a>00598 {
<a name="l00599"></a>00599   <span class="keyword">struct </span><a class="code" href="structcommunity__entry.html">community_entry</a> *entry = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00600"></a>00600   <span class="keyword">struct </span><a class="code" href="structcommunity__list.html">community_list</a> *<a class="code" href="structlist.html">list</a>;
<a name="l00601"></a>00601   <span class="keyword">struct </span><a class="code" href="structcommunity.html">community</a> *com = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00602"></a>00602   <a class="code" href="structre__pattern__buffer.html">regex_t</a> *regex = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00603"></a>00603 
<a name="l00604"></a>00604   <span class="comment">/* Get community list. */</span>
<a name="l00605"></a>00605   list = <a class="code" href="bgp__clist_8c.html#ae8ef42ae0ddf78bf86a81770db967dd6">community_list_get</a> (ch, name, <a class="code" href="bgp__clist_8h.html#a71bf5583c66d28746342ec73632efe06">COMMUNITY_LIST_MASTER</a>);
<a name="l00606"></a>00606 
<a name="l00607"></a>00607   <span class="comment">/* When community-list already has entry, new entry should have same</span>
<a name="l00608"></a>00608 <span class="comment">     style.  If you want to have mixed style community-list, you can</span>
<a name="l00609"></a>00609 <span class="comment">     comment out this check.  */</span>
<a name="l00610"></a>00610   <span class="keywordflow">if</span> (!<a class="code" href="bgp__clist_8c.html#a2759973601d972b4066dc91885bfa1b3">community_list_empty_p</a> (list))
<a name="l00611"></a>00611     {
<a name="l00612"></a>00612       <span class="keyword">struct </span><a class="code" href="structcommunity__entry.html">community_entry</a> *first;
<a name="l00613"></a>00613 
<a name="l00614"></a>00614       first = list-&gt;<a class="code" href="structcommunity__list.html#ae100c28bcf1983e18f4a6f1b0a7186aa">head</a>;
<a name="l00615"></a>00615 
<a name="l00616"></a>00616       <span class="keywordflow">if</span> (style != first-&gt;<a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a>)
<a name="l00617"></a>00617     {
<a name="l00618"></a>00618       <span class="keywordflow">return</span> (first-&gt;<a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a> == <a class="code" href="bgp__clist_8h.html#aac9f88f9f0367759b07f7bf9f5ee1f0e">COMMUNITY_LIST_STANDARD</a>
<a name="l00619"></a>00619           ? <a class="code" href="bgp__clist_8h.html#a5c98fd59fb6499ef92c1b3a9e823aaa0">COMMUNITY_LIST_ERR_STANDARD_CONFLICT</a>
<a name="l00620"></a>00620           : <a class="code" href="bgp__clist_8h.html#ac73351c24c358ae687234172b02ec348">COMMUNITY_LIST_ERR_EXPANDED_CONFLICT</a>);
<a name="l00621"></a>00621     }
<a name="l00622"></a>00622     }
<a name="l00623"></a>00623 
<a name="l00624"></a>00624   <span class="keywordflow">if</span> (str)
<a name="l00625"></a>00625     {
<a name="l00626"></a>00626       <span class="keywordflow">if</span> (style == <a class="code" href="bgp__clist_8h.html#aac9f88f9f0367759b07f7bf9f5ee1f0e">COMMUNITY_LIST_STANDARD</a>)
<a name="l00627"></a>00627     com = <a class="code" href="bgp__community_8c.html#ae6b14a28bd7622ffb1b9f5b20897e648">community_str2com</a> (str);
<a name="l00628"></a>00628       <span class="keywordflow">else</span>
<a name="l00629"></a>00629     regex = <a class="code" href="bgp__regex_8c.html#a316b90543d312729a458a7ae1cec7e42">bgp_regcomp</a> (str);
<a name="l00630"></a>00630 
<a name="l00631"></a>00631       <span class="keywordflow">if</span> (! com &amp;&amp; ! regex)
<a name="l00632"></a>00632     <span class="keywordflow">return</span> <a class="code" href="bgp__clist_8h.html#af084c958195a1693a55ed60c2fdd63d1">COMMUNITY_LIST_ERR_MALFORMED_VAL</a>;
<a name="l00633"></a>00633     }
<a name="l00634"></a>00634 
<a name="l00635"></a>00635   entry = <a class="code" href="bgp__clist_8c.html#ac513f5310a71c1f1f0db3c3f1c66e971">community_entry_new</a> ();
<a name="l00636"></a>00636   entry-&gt;<a class="code" href="structcommunity__entry.html#ab1a1c3b9e1621e23ab0f60606cd25cb3">direct</a> = <a class="code" href="structcommunity__entry.html#ab1a1c3b9e1621e23ab0f60606cd25cb3">direct</a>;
<a name="l00637"></a>00637   entry-&gt;<a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a> = <a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a>;
<a name="l00638"></a>00638   entry-&gt;<a class="code" href="structcommunity__entry.html#ad46635f1fd412d4cd77fea982b955081">any</a> = (str ? 0 : 1);
<a name="l00639"></a>00639   entry-&gt;<a class="code" href="structcommunity__entry.html#ab3e2023304a10f38c5eb6c9b4aaf7023">u</a>.<a class="code" href="structcommunity__entry.html#a417e7d3e1bb8d3bfb620e3d4d79e1e16">com</a> = <a class="code" href="structcommunity__entry.html#a417e7d3e1bb8d3bfb620e3d4d79e1e16">com</a>;
<a name="l00640"></a>00640   entry-&gt;<a class="code" href="structcommunity__entry.html#a817ea26d814de0aea503fd6d70857664">reg</a> = regex;
<a name="l00641"></a>00641   entry-&gt;<a class="code" href="structcommunity__entry.html#aa623f2755d49e17820332661599c1165">config</a> = (regex ? <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba31dfe1598365f32cd2080388b2db7a87">MTYPE_COMMUNITY_LIST_CONFIG</a>, str) : <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l00642"></a>00642 
<a name="l00643"></a>00643   <span class="comment">/* Do not put duplicated community entry.  */</span>
<a name="l00644"></a>00644   <span class="keywordflow">if</span> (<a class="code" href="bgp__clist_8c.html#a67e3a353cea67dd13e2b046bc7c2b5e0">community_list_dup_check</a> (list, entry))
<a name="l00645"></a>00645     <a class="code" href="bgp__clist_8c.html#a23e2dd7832bc852822f71b60d13ecd5a">community_entry_free</a> (entry);
<a name="l00646"></a>00646   <span class="keywordflow">else</span>
<a name="l00647"></a>00647     <a class="code" href="bgp__clist_8c.html#a5f3ead7af5477c0fa54f9e4c3dc93e0e">community_list_entry_add</a> (list, entry);
<a name="l00648"></a>00648 
<a name="l00649"></a>00649   <span class="keywordflow">return</span> 0;
<a name="l00650"></a>00650 }
<a name="l00651"></a>00651 
<a name="l00652"></a>00652 <span class="comment">/* Unset community-list.  When str is NULL, delete all of</span>
<a name="l00653"></a>00653 <span class="comment">   community-list entry belongs to the specified name.  */</span>
<a name="l00654"></a>00654 <span class="keywordtype">int</span>
<a name="l00655"></a><a class="code" href="bgp__clist_8h.html#aa6dca468a007ec6ee7c24fd359155595">00655</a> <a class="code" href="bgp__clist_8c.html#aa6dca468a007ec6ee7c24fd359155595">community_list_unset</a> (<span class="keyword">struct</span> <a class="code" href="structcommunity__list__handler.html">community_list_handler</a> *ch,
<a name="l00656"></a>00656                       <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, 
<a name="l00657"></a>00657                       <span class="keywordtype">int</span> <a class="code" href="structcommunity__entry.html#ab1a1c3b9e1621e23ab0f60606cd25cb3">direct</a>, <span class="keywordtype">int</span> <a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a>)
<a name="l00658"></a>00658 {
<a name="l00659"></a>00659   <span class="keyword">struct </span><a class="code" href="structcommunity__entry.html">community_entry</a> *entry = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00660"></a>00660   <span class="keyword">struct </span><a class="code" href="structcommunity__list.html">community_list</a> *<a class="code" href="structlist.html">list</a>;
<a name="l00661"></a>00661   <span class="keyword">struct </span><a class="code" href="structcommunity.html">community</a> *com = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00662"></a>00662   <a class="code" href="structre__pattern__buffer.html">regex_t</a> *regex = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00663"></a>00663 
<a name="l00664"></a>00664   <span class="comment">/* Lookup community list.  */</span>
<a name="l00665"></a>00665   list = <a class="code" href="bgp__clist_8c.html#a2c0159e743b11dc2143b7f74a65ce156">community_list_lookup</a> (ch, name, <a class="code" href="bgp__clist_8h.html#a71bf5583c66d28746342ec73632efe06">COMMUNITY_LIST_MASTER</a>);
<a name="l00666"></a>00666   <span class="keywordflow">if</span> (list == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00667"></a>00667     <span class="keywordflow">return</span> <a class="code" href="bgp__clist_8h.html#a7aad04c858f86928ca3a94f861f1597f">COMMUNITY_LIST_ERR_CANT_FIND_LIST</a>;
<a name="l00668"></a>00668 
<a name="l00669"></a>00669   <span class="comment">/* Delete all of entry belongs to this community-list.  */</span>
<a name="l00670"></a>00670   <span class="keywordflow">if</span> (!str)
<a name="l00671"></a>00671     {
<a name="l00672"></a>00672       <a class="code" href="bgp__clist_8c.html#ad36feb2a463e74477a78339f7e2ccbbd">community_list_delete</a> (list);
<a name="l00673"></a>00673       <span class="keywordflow">return</span> 0;
<a name="l00674"></a>00674     }
<a name="l00675"></a>00675 
<a name="l00676"></a>00676   <span class="keywordflow">if</span> (style == <a class="code" href="bgp__clist_8h.html#aac9f88f9f0367759b07f7bf9f5ee1f0e">COMMUNITY_LIST_STANDARD</a>)
<a name="l00677"></a>00677     com = <a class="code" href="bgp__community_8c.html#ae6b14a28bd7622ffb1b9f5b20897e648">community_str2com</a> (str);
<a name="l00678"></a>00678   <span class="keywordflow">else</span>
<a name="l00679"></a>00679     regex = <a class="code" href="bgp__regex_8c.html#a316b90543d312729a458a7ae1cec7e42">bgp_regcomp</a> (str);
<a name="l00680"></a>00680 
<a name="l00681"></a>00681   <span class="keywordflow">if</span> (! com &amp;&amp; ! regex)
<a name="l00682"></a>00682     <span class="keywordflow">return</span> <a class="code" href="bgp__clist_8h.html#af084c958195a1693a55ed60c2fdd63d1">COMMUNITY_LIST_ERR_MALFORMED_VAL</a>;
<a name="l00683"></a>00683 
<a name="l00684"></a>00684   <span class="keywordflow">if</span> (com)
<a name="l00685"></a>00685     entry = <a class="code" href="bgp__clist_8c.html#a98f4cc5fad1b590d42e1218962381245">community_list_entry_lookup</a> (list, com, direct);
<a name="l00686"></a>00686   <span class="keywordflow">else</span>
<a name="l00687"></a>00687     entry = <a class="code" href="bgp__clist_8c.html#a98f4cc5fad1b590d42e1218962381245">community_list_entry_lookup</a> (list, str, direct);
<a name="l00688"></a>00688 
<a name="l00689"></a>00689   <span class="keywordflow">if</span> (com)
<a name="l00690"></a>00690     <a class="code" href="bgp__community_8c.html#a890bdfd2f7517c0fe7f30687d1d4d825">community_free</a> (com);
<a name="l00691"></a>00691   <span class="keywordflow">if</span> (regex)
<a name="l00692"></a>00692     <a class="code" href="bgp__regex_8c.html#a9a7260053c61ff8c6f58e5822d136b88">bgp_regex_free</a> (regex);
<a name="l00693"></a>00693 
<a name="l00694"></a>00694   <span class="keywordflow">if</span> (!entry)
<a name="l00695"></a>00695     <span class="keywordflow">return</span> <a class="code" href="bgp__clist_8h.html#a7aad04c858f86928ca3a94f861f1597f">COMMUNITY_LIST_ERR_CANT_FIND_LIST</a>;
<a name="l00696"></a>00696 
<a name="l00697"></a>00697   <a class="code" href="bgp__clist_8c.html#adca712eca7bfce2a656f806864abf459">community_list_entry_delete</a> (list, entry, style);
<a name="l00698"></a>00698 
<a name="l00699"></a>00699   <span class="keywordflow">return</span> 0;
<a name="l00700"></a>00700 }
<a name="l00701"></a>00701 
<a name="l00702"></a>00702 <span class="comment">/* Set extcommunity-list.  */</span>
<a name="l00703"></a>00703 <span class="keywordtype">int</span>
<a name="l00704"></a><a class="code" href="bgp__clist_8h.html#a3e2c46712b2558156c5074b345e3fc06">00704</a> <a class="code" href="bgp__clist_8c.html#a3e2c46712b2558156c5074b345e3fc06">extcommunity_list_set</a> (<span class="keyword">struct</span> <a class="code" href="structcommunity__list__handler.html">community_list_handler</a> *ch,
<a name="l00705"></a>00705                        <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, 
<a name="l00706"></a>00706                        <span class="keywordtype">int</span> direct, <span class="keywordtype">int</span> style)
<a name="l00707"></a>00707 {
<a name="l00708"></a>00708   <span class="keyword">struct </span><a class="code" href="structcommunity__entry.html">community_entry</a> *entry = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00709"></a>00709   <span class="keyword">struct </span><a class="code" href="structcommunity__list.html">community_list</a> *<a class="code" href="structlist.html">list</a>;
<a name="l00710"></a>00710   <span class="keyword">struct </span><a class="code" href="structecommunity.html">ecommunity</a> *ecom = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00711"></a>00711   <a class="code" href="structre__pattern__buffer.html">regex_t</a> *regex = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00712"></a>00712 
<a name="l00713"></a>00713   entry = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00714"></a>00714 
<a name="l00715"></a>00715   <span class="comment">/* Get community list. */</span>
<a name="l00716"></a>00716   list = <a class="code" href="bgp__clist_8c.html#ae8ef42ae0ddf78bf86a81770db967dd6">community_list_get</a> (ch, name, <a class="code" href="bgp__clist_8h.html#a61c5d68dcb2d87b3cf5a0ef283a881fc">EXTCOMMUNITY_LIST_MASTER</a>);
<a name="l00717"></a>00717 
<a name="l00718"></a>00718   <span class="comment">/* When community-list already has entry, new entry should have same</span>
<a name="l00719"></a>00719 <span class="comment">     style.  If you want to have mixed style community-list, you can</span>
<a name="l00720"></a>00720 <span class="comment">     comment out this check.  */</span>
<a name="l00721"></a>00721   <span class="keywordflow">if</span> (!<a class="code" href="bgp__clist_8c.html#a2759973601d972b4066dc91885bfa1b3">community_list_empty_p</a> (list))
<a name="l00722"></a>00722     {
<a name="l00723"></a>00723       <span class="keyword">struct </span><a class="code" href="structcommunity__entry.html">community_entry</a> *first;
<a name="l00724"></a>00724 
<a name="l00725"></a>00725       first = list-&gt;<a class="code" href="structcommunity__list.html#ae100c28bcf1983e18f4a6f1b0a7186aa">head</a>;
<a name="l00726"></a>00726 
<a name="l00727"></a>00727       <span class="keywordflow">if</span> (style != first-&gt;<a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a>)
<a name="l00728"></a>00728     {
<a name="l00729"></a>00729       <span class="keywordflow">return</span> (first-&gt;<a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a> == <a class="code" href="bgp__clist_8h.html#a999fc8046f6d46557f06e6dc5eafb3a9">EXTCOMMUNITY_LIST_STANDARD</a>
<a name="l00730"></a>00730           ? <a class="code" href="bgp__clist_8h.html#a5c98fd59fb6499ef92c1b3a9e823aaa0">COMMUNITY_LIST_ERR_STANDARD_CONFLICT</a>
<a name="l00731"></a>00731           : <a class="code" href="bgp__clist_8h.html#ac73351c24c358ae687234172b02ec348">COMMUNITY_LIST_ERR_EXPANDED_CONFLICT</a>);
<a name="l00732"></a>00732     }
<a name="l00733"></a>00733     }
<a name="l00734"></a>00734 
<a name="l00735"></a>00735   <span class="keywordflow">if</span> (str)
<a name="l00736"></a>00736     {
<a name="l00737"></a>00737       <span class="keywordflow">if</span> (style == <a class="code" href="bgp__clist_8h.html#a999fc8046f6d46557f06e6dc5eafb3a9">EXTCOMMUNITY_LIST_STANDARD</a>)
<a name="l00738"></a>00738     ecom = <a class="code" href="bgp__ecommunity_8c.html#a6da70afe62091b6c7ead2e602cfc03fd">ecommunity_str2com</a> (str, 0, 1);
<a name="l00739"></a>00739       <span class="keywordflow">else</span>
<a name="l00740"></a>00740     regex = <a class="code" href="bgp__regex_8c.html#a316b90543d312729a458a7ae1cec7e42">bgp_regcomp</a> (str);
<a name="l00741"></a>00741 
<a name="l00742"></a>00742       <span class="keywordflow">if</span> (! ecom &amp;&amp; ! regex)
<a name="l00743"></a>00743     <span class="keywordflow">return</span> <a class="code" href="bgp__clist_8h.html#af084c958195a1693a55ed60c2fdd63d1">COMMUNITY_LIST_ERR_MALFORMED_VAL</a>;
<a name="l00744"></a>00744     }
<a name="l00745"></a>00745 
<a name="l00746"></a>00746   <span class="keywordflow">if</span> (ecom)
<a name="l00747"></a>00747     ecom-&gt;<a class="code" href="structecommunity.html#ac84ecde7f5b18c5c070ba22400fb0cb6">str</a> = <a class="code" href="bgp__ecommunity_8c.html#a8ffcee89340db2108bd11edf28852b11">ecommunity_ecom2str</a> (ecom, <a class="code" href="bgp__ecommunity_8h.html#ae776d41484b625ccb00ad109d4965451">ECOMMUNITY_FORMAT_DISPLAY</a>);
<a name="l00748"></a>00748 
<a name="l00749"></a>00749   entry = <a class="code" href="bgp__clist_8c.html#ac513f5310a71c1f1f0db3c3f1c66e971">community_entry_new</a> ();
<a name="l00750"></a>00750   entry-&gt;<a class="code" href="structcommunity__entry.html#ab1a1c3b9e1621e23ab0f60606cd25cb3">direct</a> = <a class="code" href="structcommunity__entry.html#ab1a1c3b9e1621e23ab0f60606cd25cb3">direct</a>;
<a name="l00751"></a>00751   entry-&gt;<a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a> = <a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a>;
<a name="l00752"></a>00752   entry-&gt;<a class="code" href="structcommunity__entry.html#ad46635f1fd412d4cd77fea982b955081">any</a> = (str ? 0 : 1);
<a name="l00753"></a>00753   <span class="keywordflow">if</span> (ecom)
<a name="l00754"></a>00754     entry-&gt;<a class="code" href="structcommunity__entry.html#aa623f2755d49e17820332661599c1165">config</a> = <a class="code" href="bgp__ecommunity_8c.html#a8ffcee89340db2108bd11edf28852b11">ecommunity_ecom2str</a> (ecom, <a class="code" href="bgp__ecommunity_8h.html#acfff5b888f4007173f66dc1f83ad4e94">ECOMMUNITY_FORMAT_COMMUNITY_LIST</a>);
<a name="l00755"></a>00755   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (regex)
<a name="l00756"></a>00756     entry-&gt;<a class="code" href="structcommunity__entry.html#aa623f2755d49e17820332661599c1165">config</a> = <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba31dfe1598365f32cd2080388b2db7a87">MTYPE_COMMUNITY_LIST_CONFIG</a>, str);
<a name="l00757"></a>00757   <span class="keywordflow">else</span>
<a name="l00758"></a>00758     entry-&gt;<a class="code" href="structcommunity__entry.html#aa623f2755d49e17820332661599c1165">config</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00759"></a>00759   entry-&gt;<a class="code" href="structcommunity__entry.html#ab3e2023304a10f38c5eb6c9b4aaf7023">u</a>.<a class="code" href="structcommunity__entry.html#a6738f5df4deb7c87ff42f90596910063">ecom</a> = <a class="code" href="structcommunity__entry.html#a6738f5df4deb7c87ff42f90596910063">ecom</a>;
<a name="l00760"></a>00760   entry-&gt;<a class="code" href="structcommunity__entry.html#a817ea26d814de0aea503fd6d70857664">reg</a> = regex;
<a name="l00761"></a>00761 
<a name="l00762"></a>00762   <span class="comment">/* Do not put duplicated community entry.  */</span>
<a name="l00763"></a>00763   <span class="keywordflow">if</span> (<a class="code" href="bgp__clist_8c.html#a67e3a353cea67dd13e2b046bc7c2b5e0">community_list_dup_check</a> (list, entry))
<a name="l00764"></a>00764     <a class="code" href="bgp__clist_8c.html#a23e2dd7832bc852822f71b60d13ecd5a">community_entry_free</a> (entry);
<a name="l00765"></a>00765   <span class="keywordflow">else</span>
<a name="l00766"></a>00766     <a class="code" href="bgp__clist_8c.html#a5f3ead7af5477c0fa54f9e4c3dc93e0e">community_list_entry_add</a> (list, entry);
<a name="l00767"></a>00767 
<a name="l00768"></a>00768   <span class="keywordflow">return</span> 0;
<a name="l00769"></a>00769 }
<a name="l00770"></a>00770 
<a name="l00771"></a>00771 <span class="comment">/* Unset extcommunity-list.  When str is NULL, delete all of</span>
<a name="l00772"></a>00772 <span class="comment">   extcommunity-list entry belongs to the specified name.  */</span>
<a name="l00773"></a>00773 <span class="keywordtype">int</span>
<a name="l00774"></a><a class="code" href="bgp__clist_8h.html#add548f65d1e8eadceeb2d6d26170a85c">00774</a> <a class="code" href="bgp__clist_8c.html#add548f65d1e8eadceeb2d6d26170a85c">extcommunity_list_unset</a> (<span class="keyword">struct</span> <a class="code" href="structcommunity__list__handler.html">community_list_handler</a> *ch,
<a name="l00775"></a>00775                          <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, 
<a name="l00776"></a>00776                          <span class="keywordtype">int</span> <a class="code" href="structcommunity__entry.html#ab1a1c3b9e1621e23ab0f60606cd25cb3">direct</a>, <span class="keywordtype">int</span> <a class="code" href="structcommunity__entry.html#aae775dad4aa136af465b07fbdebd1ced">style</a>)
<a name="l00777"></a>00777 {
<a name="l00778"></a>00778   <span class="keyword">struct </span><a class="code" href="structcommunity__entry.html">community_entry</a> *entry = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00779"></a>00779   <span class="keyword">struct </span><a class="code" href="structcommunity__list.html">community_list</a> *<a class="code" href="structlist.html">list</a>;
<a name="l00780"></a>00780   <span class="keyword">struct </span><a class="code" href="structecommunity.html">ecommunity</a> *ecom = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00781"></a>00781   <a class="code" href="structre__pattern__buffer.html">regex_t</a> *regex = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00782"></a>00782 
<a name="l00783"></a>00783   <span class="comment">/* Lookup extcommunity list.  */</span>
<a name="l00784"></a>00784   list = <a class="code" href="bgp__clist_8c.html#a2c0159e743b11dc2143b7f74a65ce156">community_list_lookup</a> (ch, name, <a class="code" href="bgp__clist_8h.html#a61c5d68dcb2d87b3cf5a0ef283a881fc">EXTCOMMUNITY_LIST_MASTER</a>);
<a name="l00785"></a>00785   <span class="keywordflow">if</span> (list == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00786"></a>00786     <span class="keywordflow">return</span> <a class="code" href="bgp__clist_8h.html#a7aad04c858f86928ca3a94f861f1597f">COMMUNITY_LIST_ERR_CANT_FIND_LIST</a>;
<a name="l00787"></a>00787 
<a name="l00788"></a>00788   <span class="comment">/* Delete all of entry belongs to this extcommunity-list.  */</span>
<a name="l00789"></a>00789   <span class="keywordflow">if</span> (!str)
<a name="l00790"></a>00790     {
<a name="l00791"></a>00791       <a class="code" href="bgp__clist_8c.html#ad36feb2a463e74477a78339f7e2ccbbd">community_list_delete</a> (list);
<a name="l00792"></a>00792       <span class="keywordflow">return</span> 0;
<a name="l00793"></a>00793     }
<a name="l00794"></a>00794 
<a name="l00795"></a>00795   <span class="keywordflow">if</span> (style == <a class="code" href="bgp__clist_8h.html#a999fc8046f6d46557f06e6dc5eafb3a9">EXTCOMMUNITY_LIST_STANDARD</a>)
<a name="l00796"></a>00796     ecom = <a class="code" href="bgp__ecommunity_8c.html#a6da70afe62091b6c7ead2e602cfc03fd">ecommunity_str2com</a> (str, 0, 1);
<a name="l00797"></a>00797   <span class="keywordflow">else</span>
<a name="l00798"></a>00798     regex = <a class="code" href="bgp__regex_8c.html#a316b90543d312729a458a7ae1cec7e42">bgp_regcomp</a> (str);
<a name="l00799"></a>00799 
<a name="l00800"></a>00800   <span class="keywordflow">if</span> (! ecom &amp;&amp; ! regex)
<a name="l00801"></a>00801     <span class="keywordflow">return</span> <a class="code" href="bgp__clist_8h.html#af084c958195a1693a55ed60c2fdd63d1">COMMUNITY_LIST_ERR_MALFORMED_VAL</a>;
<a name="l00802"></a>00802 
<a name="l00803"></a>00803   <span class="keywordflow">if</span> (ecom)
<a name="l00804"></a>00804     entry = <a class="code" href="bgp__clist_8c.html#a98f4cc5fad1b590d42e1218962381245">community_list_entry_lookup</a> (list, ecom, direct);
<a name="l00805"></a>00805   <span class="keywordflow">else</span>
<a name="l00806"></a>00806     entry = <a class="code" href="bgp__clist_8c.html#a98f4cc5fad1b590d42e1218962381245">community_list_entry_lookup</a> (list, str, direct);
<a name="l00807"></a>00807 
<a name="l00808"></a>00808   <span class="keywordflow">if</span> (ecom)
<a name="l00809"></a>00809     <a class="code" href="bgp__ecommunity_8c.html#a56f7dda58051cbec7fd56238196dcfc2">ecommunity_free</a> (ecom);
<a name="l00810"></a>00810   <span class="keywordflow">if</span> (regex)
<a name="l00811"></a>00811     <a class="code" href="bgp__regex_8c.html#a9a7260053c61ff8c6f58e5822d136b88">bgp_regex_free</a> (regex);
<a name="l00812"></a>00812 
<a name="l00813"></a>00813   <span class="keywordflow">if</span> (!entry)
<a name="l00814"></a>00814     <span class="keywordflow">return</span> <a class="code" href="bgp__clist_8h.html#a7aad04c858f86928ca3a94f861f1597f">COMMUNITY_LIST_ERR_CANT_FIND_LIST</a>;
<a name="l00815"></a>00815 
<a name="l00816"></a>00816   <a class="code" href="bgp__clist_8c.html#adca712eca7bfce2a656f806864abf459">community_list_entry_delete</a> (list, entry, style);
<a name="l00817"></a>00817 
<a name="l00818"></a>00818   <span class="keywordflow">return</span> 0;
<a name="l00819"></a>00819 }
<a name="l00820"></a>00820 
<a name="l00821"></a>00821 <span class="comment">/* Initializa community-list.  Return community-list handler.  */</span>
<a name="l00822"></a>00822 <span class="keyword">struct </span><a class="code" href="structcommunity__list__handler.html">community_list_handler</a> *
<a name="l00823"></a><a class="code" href="bgp__clist_8h.html#a3074741d6eaa97bdbc1d29e6ec9d18be">00823</a> <a class="code" href="bgp__clist_8c.html#a3074741d6eaa97bdbc1d29e6ec9d18be">community_list_init</a> (<span class="keywordtype">void</span>)
<a name="l00824"></a>00824 {
<a name="l00825"></a>00825   <span class="keyword">struct </span><a class="code" href="structcommunity__list__handler.html">community_list_handler</a> *ch;
<a name="l00826"></a>00826   ch = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba1b30487eb5e03faf5008e25084ec7922">MTYPE_COMMUNITY_LIST_HANDLER</a>,
<a name="l00827"></a>00827                 <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structcommunity__list__handler.html">community_list_handler</a>));
<a name="l00828"></a>00828   <span class="keywordflow">return</span> ch;
<a name="l00829"></a>00829 }
<a name="l00830"></a>00830 
<a name="l00831"></a>00831 <span class="comment">/* Terminate community-list.  */</span>
<a name="l00832"></a>00832 <span class="keywordtype">void</span>
<a name="l00833"></a><a class="code" href="bgp__clist_8h.html#a7d62c8c4361588717798e4be431fff45">00833</a> <a class="code" href="bgp__clist_8c.html#ab24390d21ce1474ea0dc89ad36603203">community_list_terminate</a> (<span class="keyword">struct</span> <a class="code" href="structcommunity__list__handler.html">community_list_handler</a> *ch)
<a name="l00834"></a>00834 {
<a name="l00835"></a>00835   <span class="keyword">struct </span><a class="code" href="structcommunity__list__master.html">community_list_master</a> *<a class="code" href="spgrid_8c.html#acdadc8f742bb24d7912782baf64d04c0">cm</a>;
<a name="l00836"></a>00836   <span class="keyword">struct </span><a class="code" href="structcommunity__list.html">community_list</a> *<a class="code" href="structlist.html">list</a>;
<a name="l00837"></a>00837 
<a name="l00838"></a>00838   cm = &amp;ch-&gt;<a class="code" href="structcommunity__list__handler.html#a9a091d6f78cb254bf4b700a20d62f930">community_list</a>;
<a name="l00839"></a>00839   <span class="keywordflow">while</span> ((list = cm-&gt;<a class="code" href="structcommunity__list__master.html#a2c072ba76924db5fcd27bf1d6f9f542c">num</a>.<a class="code" href="structcommunity__list__list.html#a0d4c7921addc2ef057d88822410eb649">head</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00840"></a>00840     <a class="code" href="bgp__clist_8c.html#ad36feb2a463e74477a78339f7e2ccbbd">community_list_delete</a> (list);
<a name="l00841"></a>00841   <span class="keywordflow">while</span> ((list = cm-&gt;<a class="code" href="structcommunity__list__master.html#adc6325fc227842c81faa4572a1783a40">str</a>.<a class="code" href="structcommunity__list__list.html#a0d4c7921addc2ef057d88822410eb649">head</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00842"></a>00842     <a class="code" href="bgp__clist_8c.html#ad36feb2a463e74477a78339f7e2ccbbd">community_list_delete</a> (list);
<a name="l00843"></a>00843 
<a name="l00844"></a>00844   cm = &amp;ch-&gt;<a class="code" href="structcommunity__list__handler.html#a921907c1e9f2cf6fbf8afe20d6625e60">extcommunity_list</a>;
<a name="l00845"></a>00845   <span class="keywordflow">while</span> ((list = cm-&gt;<a class="code" href="structcommunity__list__master.html#a2c072ba76924db5fcd27bf1d6f9f542c">num</a>.<a class="code" href="structcommunity__list__list.html#a0d4c7921addc2ef057d88822410eb649">head</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00846"></a>00846     <a class="code" href="bgp__clist_8c.html#ad36feb2a463e74477a78339f7e2ccbbd">community_list_delete</a> (list);
<a name="l00847"></a>00847   <span class="keywordflow">while</span> ((list = cm-&gt;<a class="code" href="structcommunity__list__master.html#adc6325fc227842c81faa4572a1783a40">str</a>.<a class="code" href="structcommunity__list__list.html#a0d4c7921addc2ef057d88822410eb649">head</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00848"></a>00848     <a class="code" href="bgp__clist_8c.html#ad36feb2a463e74477a78339f7e2ccbbd">community_list_delete</a> (list);
<a name="l00849"></a>00849 
<a name="l00850"></a>00850   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba1b30487eb5e03faf5008e25084ec7922">MTYPE_COMMUNITY_LIST_HANDLER</a>, ch);
<a name="l00851"></a>00851 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="bgp__clist_8c.html">bgp_clist.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:02 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
