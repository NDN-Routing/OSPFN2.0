<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: lib/pqueue.c File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('pqueue_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#define-members">Defines</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">lib/pqueue.c File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="zebra_8h_source.html">zebra.h</a>&gt;</code><br/>
<code>#include &quot;<a class="el" href="memory_8h_source.html">memory.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="pqueue_8h_source.html">pqueue.h</a>&quot;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for pqueue.c:</div>
<div class="dyncontent">
<div class="center"><img src="pqueue_8c__incl.png" border="0" usemap="#lib_2pqueue_8c" alt=""/></div>
<map name="lib_2pqueue_8c" id="lib_2pqueue_8c">
<area shape="rect" id="node3" href="zebra_8h.html" title="zebra.h" alt="" coords="1345,80,1412,107"/><area shape="rect" id="node61" href="memory_8h.html" title="memory.h" alt="" coords="2148,80,2231,107"/><area shape="rect" id="node65" href="pqueue_8h.html" title="pqueue.h" alt="" coords="2255,80,2333,107"/><area shape="rect" id="node57" href="zassert_8h.html" title="zassert.h" alt="" coords="2669,155,2747,181"/><area shape="rect" id="node59" href="str_8h.html" title="str.h" alt="" coords="2771,155,2820,181"/><area shape="rect" id="node63" href="memtypes_8h.html" title="lib/memtypes.h" alt="" coords="2845,155,2960,181"/></map>
</div>
</div>
<p><a href="pqueue_8c_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pqueue_8c.html#af55149bc1f05cf18af067a302e31e3f9">DATA_SIZE</a>&#160;&#160;&#160;(sizeof (void *))</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pqueue_8c.html#a194510e524e9c01830b1f1fae9dcb47e">PARENT_OF</a>(<a class="el" href="spgrid_8c.html#a3162ada50d1df39e0f0555ea3d60dea1">x</a>)&#160;&#160;&#160;((<a class="el" href="spgrid_8c.html#a3162ada50d1df39e0f0555ea3d60dea1">x</a> - 1) / 2)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pqueue_8c.html#a9463c174df115b30eec183601c44067d">LEFT_OF</a>(<a class="el" href="spgrid_8c.html#a3162ada50d1df39e0f0555ea3d60dea1">x</a>)&#160;&#160;&#160;(2 * <a class="el" href="spgrid_8c.html#a3162ada50d1df39e0f0555ea3d60dea1">x</a> + 1)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pqueue_8c.html#a9cb5c9bf559ecaf191e6b06c5acaef6c">RIGHT_OF</a>(<a class="el" href="spgrid_8c.html#a3162ada50d1df39e0f0555ea3d60dea1">x</a>)&#160;&#160;&#160;(2 * <a class="el" href="spgrid_8c.html#a3162ada50d1df39e0f0555ea3d60dea1">x</a> + 2)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pqueue_8c.html#ab0c41596aa0885797e0823f25e307643">HAVE_CHILD</a>(<a class="el" href="spgrid_8c.html#a3162ada50d1df39e0f0555ea3d60dea1">x</a>, q)&#160;&#160;&#160;(<a class="el" href="spgrid_8c.html#a3162ada50d1df39e0f0555ea3d60dea1">x</a> &lt; (q)-&gt;size / 2)</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pqueue_8c.html#ab8caec03e5beeef534a0dd7258a2abe5">trickle_up</a> (int index, struct <a class="el" href="structpqueue.html">pqueue</a> *queue)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pqueue_8c.html#a827dbb24b47313012e25dc7d656c0f7a">trickle_down</a> (int index, struct <a class="el" href="structpqueue.html">pqueue</a> *queue)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structpqueue.html">pqueue</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pqueue_8c.html#a2579024e6715cbdb92af477dcdd1bb31">pqueue_create</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pqueue_8c.html#ad0099423e65490faf86a429bab2e7059">pqueue_delete</a> (struct <a class="el" href="structpqueue.html">pqueue</a> *queue)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pqueue_8c.html#a3c78ef83a0e3d7bc8b033c76271fc2b3">pqueue_expand</a> (struct <a class="el" href="structpqueue.html">pqueue</a> *queue)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pqueue_8c.html#af8c7960d1e3ce1edf2b78dfc4873d321">pqueue_enqueue</a> (void *data, struct <a class="el" href="structpqueue.html">pqueue</a> *queue)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pqueue_8c.html#a1c1a1203050a22dcd10966a857a26505">pqueue_dequeue</a> (struct <a class="el" href="structpqueue.html">pqueue</a> *queue)</td></tr>
</table>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="af55149bc1f05cf18af067a302e31e3f9"></a><!-- doxytag: member="pqueue.c::DATA_SIZE" ref="af55149bc1f05cf18af067a302e31e3f9" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DATA_SIZE&#160;&#160;&#160;(sizeof (void *))</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="pqueue_8c_source.html#l00039">39</a> of file <a class="el" href="pqueue_8c_source.html">pqueue.c</a>.</p>

</div>
</div>
<a class="anchor" id="ab0c41596aa0885797e0823f25e307643"></a><!-- doxytag: member="pqueue.c::HAVE_CHILD" ref="ab0c41596aa0885797e0823f25e307643" args="(x, q)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define HAVE_CHILD</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a3162ada50d1df39e0f0555ea3d60dea1">x</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">q&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;(<a class="el" href="spgrid_8c.html#a3162ada50d1df39e0f0555ea3d60dea1">x</a> &lt; (q)-&gt;size / 2)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="pqueue_8c_source.html#l00043">43</a> of file <a class="el" href="pqueue_8c_source.html">pqueue.c</a>.</p>

</div>
</div>
<a class="anchor" id="a9463c174df115b30eec183601c44067d"></a><!-- doxytag: member="pqueue.c::LEFT_OF" ref="a9463c174df115b30eec183601c44067d" args="(x)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LEFT_OF</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a3162ada50d1df39e0f0555ea3d60dea1">x</a></td><td>)</td>
          <td>&#160;&#160;&#160;(2 * <a class="el" href="spgrid_8c.html#a3162ada50d1df39e0f0555ea3d60dea1">x</a> + 1)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="pqueue_8c_source.html#l00041">41</a> of file <a class="el" href="pqueue_8c_source.html">pqueue.c</a>.</p>

</div>
</div>
<a class="anchor" id="a194510e524e9c01830b1f1fae9dcb47e"></a><!-- doxytag: member="pqueue.c::PARENT_OF" ref="a194510e524e9c01830b1f1fae9dcb47e" args="(x)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PARENT_OF</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a3162ada50d1df39e0f0555ea3d60dea1">x</a></td><td>)</td>
          <td>&#160;&#160;&#160;((<a class="el" href="spgrid_8c.html#a3162ada50d1df39e0f0555ea3d60dea1">x</a> - 1) / 2)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="pqueue_8c_source.html#l00040">40</a> of file <a class="el" href="pqueue_8c_source.html">pqueue.c</a>.</p>

</div>
</div>
<a class="anchor" id="a9cb5c9bf559ecaf191e6b06c5acaef6c"></a><!-- doxytag: member="pqueue.c::RIGHT_OF" ref="a9cb5c9bf559ecaf191e6b06c5acaef6c" args="(x)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define RIGHT_OF</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a3162ada50d1df39e0f0555ea3d60dea1">x</a></td><td>)</td>
          <td>&#160;&#160;&#160;(2 * <a class="el" href="spgrid_8c.html#a3162ada50d1df39e0f0555ea3d60dea1">x</a> + 2)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="pqueue_8c_source.html#l00042">42</a> of file <a class="el" href="pqueue_8c_source.html">pqueue.c</a>.</p>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a2579024e6715cbdb92af477dcdd1bb31"></a><!-- doxytag: member="pqueue.c::pqueue_create" ref="a2579024e6715cbdb92af477dcdd1bb31" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structpqueue.html">pqueue</a>* pqueue_create </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="pqueue_8c_source.html#l00110">110</a> of file <a class="el" href="pqueue_8c_source.html">pqueue.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structpqueue.html">pqueue</a> *queue;

  queue = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167bab534822c0c0cfcc0ccde77f7aec5122f">MTYPE_PQUEUE</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structpqueue.html">pqueue</a>));

  queue-&gt;<a class="code" href="structpqueue.html#ab0bd435f08b1d4b4a91ec75c4a41f888">array</a> = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba209fcd4e29f4f34c0ee34a9f21b08474">MTYPE_PQUEUE_DATA</a>, 
                          <a class="code" href="pqueue_8c.html#af55149bc1f05cf18af067a302e31e3f9">DATA_SIZE</a> * <a class="code" href="pqueue_8h.html#afbcc314a0c9163633c20d479920c8bbb">PQUEUE_INIT_ARRAYSIZE</a>);
  queue-&gt;<a class="code" href="structpqueue.html#a68a2d70ceaedec3f1d0420a1759f01f6">array_size</a> = <a class="code" href="pqueue_8h.html#afbcc314a0c9163633c20d479920c8bbb">PQUEUE_INIT_ARRAYSIZE</a>;

  <span class="comment">/* By default we want nothing to happen when a node changes. */</span>
  queue-&gt;<a class="code" href="structpqueue.html#a4ead77ed00570005794a66bf040c816f">update</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keywordflow">return</span> queue;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad0099423e65490faf86a429bab2e7059"></a><!-- doxytag: member="pqueue.c::pqueue_delete" ref="ad0099423e65490faf86a429bab2e7059" args="(struct pqueue *queue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pqueue_delete </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structpqueue.html">pqueue</a> *&#160;</td>
          <td class="paramname"><em>queue</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="pqueue_8c_source.html#l00126">126</a> of file <a class="el" href="pqueue_8c_source.html">pqueue.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba209fcd4e29f4f34c0ee34a9f21b08474">MTYPE_PQUEUE_DATA</a>, queue-&gt;<a class="code" href="structpqueue.html#ab0bd435f08b1d4b4a91ec75c4a41f888">array</a>);
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167bab534822c0c0cfcc0ccde77f7aec5122f">MTYPE_PQUEUE</a>, queue);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a1c1a1203050a22dcd10966a857a26505"></a><!-- doxytag: member="pqueue.c::pqueue_dequeue" ref="a1c1a1203050a22dcd10966a857a26505" args="(struct pqueue *queue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* pqueue_dequeue </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structpqueue.html">pqueue</a> *&#160;</td>
          <td class="paramname"><em>queue</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="pqueue_8c_source.html#l00164">164</a> of file <a class="el" href="pqueue_8c_source.html">pqueue.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">void</span> *<a class="code" href="dict_8c.html#a43a278d13284fb3412e9eee1db1d967e">data</a> = queue-&gt;<a class="code" href="structpqueue.html#ab0bd435f08b1d4b4a91ec75c4a41f888">array</a>[0];
  queue-&gt;<a class="code" href="structpqueue.html#ab0bd435f08b1d4b4a91ec75c4a41f888">array</a>[0] =  queue-&gt;<a class="code" href="structpqueue.html#ab0bd435f08b1d4b4a91ec75c4a41f888">array</a>[--queue-&gt;<a class="code" href="structpqueue.html#a15089ae2aadc39f77b8d1b9b46fb8efe">size</a>];
  <a class="code" href="pqueue_8c.html#a827dbb24b47313012e25dc7d656c0f7a">trickle_down</a> (0, queue);
  <span class="keywordflow">return</span> <a class="code" href="dict_8c.html#a43a278d13284fb3412e9eee1db1d967e">data</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af8c7960d1e3ce1edf2b78dfc4873d321"></a><!-- doxytag: member="pqueue.c::pqueue_enqueue" ref="af8c7960d1e3ce1edf2b78dfc4873d321" args="(void *data, struct pqueue *queue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pqueue_enqueue </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structpqueue.html">pqueue</a> *&#160;</td>
          <td class="paramname"><em>queue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="pqueue_8c_source.html#l00151">151</a> of file <a class="el" href="pqueue_8c_source.html">pqueue.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (queue-&gt;<a class="code" href="structpqueue.html#a15089ae2aadc39f77b8d1b9b46fb8efe">size</a> + 2 &gt;= queue-&gt;<a class="code" href="structpqueue.html#a68a2d70ceaedec3f1d0420a1759f01f6">array_size</a> &amp;&amp; ! <a class="code" href="pqueue_8c.html#a3c78ef83a0e3d7bc8b033c76271fc2b3">pqueue_expand</a> (queue))
    <span class="keywordflow">return</span>;

  queue-&gt;<a class="code" href="structpqueue.html#ab0bd435f08b1d4b4a91ec75c4a41f888">array</a>[queue-&gt;<a class="code" href="structpqueue.html#a15089ae2aadc39f77b8d1b9b46fb8efe">size</a>] = <a class="code" href="dict_8c.html#a43a278d13284fb3412e9eee1db1d967e">data</a>;
  <span class="keywordflow">if</span> (queue-&gt;<a class="code" href="structpqueue.html#a4ead77ed00570005794a66bf040c816f">update</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    (*queue-&gt;<a class="code" href="structpqueue.html#a4ead77ed00570005794a66bf040c816f">update</a>) (<a class="code" href="dict_8c.html#a43a278d13284fb3412e9eee1db1d967e">data</a>, queue-&gt;<a class="code" href="structpqueue.html#a15089ae2aadc39f77b8d1b9b46fb8efe">size</a>);
  <a class="code" href="pqueue_8c.html#ab8caec03e5beeef534a0dd7258a2abe5">trickle_up</a> (queue-&gt;<a class="code" href="structpqueue.html#a15089ae2aadc39f77b8d1b9b46fb8efe">size</a>, queue);
  queue-&gt;<a class="code" href="structpqueue.html#a15089ae2aadc39f77b8d1b9b46fb8efe">size</a> ++;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3c78ef83a0e3d7bc8b033c76271fc2b3"></a><!-- doxytag: member="pqueue.c::pqueue_expand" ref="a3c78ef83a0e3d7bc8b033c76271fc2b3" args="(struct pqueue *queue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int pqueue_expand </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structpqueue.html">pqueue</a> *&#160;</td>
          <td class="paramname"><em>queue</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="pqueue_8c_source.html#l00133">133</a> of file <a class="el" href="pqueue_8c_source.html">pqueue.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">void</span> **newarray;

  newarray = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba209fcd4e29f4f34c0ee34a9f21b08474">MTYPE_PQUEUE_DATA</a>, queue-&gt;<a class="code" href="structpqueue.html#a68a2d70ceaedec3f1d0420a1759f01f6">array_size</a> * <a class="code" href="pqueue_8c.html#af55149bc1f05cf18af067a302e31e3f9">DATA_SIZE</a> * 2);
  <span class="keywordflow">if</span> (newarray == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> 0;

  <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (newarray, queue-&gt;<a class="code" href="structpqueue.html#ab0bd435f08b1d4b4a91ec75c4a41f888">array</a>, queue-&gt;<a class="code" href="structpqueue.html#a68a2d70ceaedec3f1d0420a1759f01f6">array_size</a> * <a class="code" href="pqueue_8c.html#af55149bc1f05cf18af067a302e31e3f9">DATA_SIZE</a>);

  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba209fcd4e29f4f34c0ee34a9f21b08474">MTYPE_PQUEUE_DATA</a>, queue-&gt;<a class="code" href="structpqueue.html#ab0bd435f08b1d4b4a91ec75c4a41f888">array</a>);
  queue-&gt;<a class="code" href="structpqueue.html#ab0bd435f08b1d4b4a91ec75c4a41f888">array</a> = newarray;
  queue-&gt;<a class="code" href="structpqueue.html#a68a2d70ceaedec3f1d0420a1759f01f6">array_size</a> *= 2;

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a827dbb24b47313012e25dc7d656c0f7a"></a><!-- doxytag: member="pqueue.c::trickle_down" ref="a827dbb24b47313012e25dc7d656c0f7a" args="(int index, struct pqueue *queue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void trickle_down </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structpqueue.html">pqueue</a> *&#160;</td>
          <td class="paramname"><em>queue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="pqueue_8c_source.html#l00072">72</a> of file <a class="el" href="pqueue_8c_source.html">pqueue.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">void</span> *tmp;
  <span class="keywordtype">int</span> which;

  <span class="comment">/* Save current node as tmp node.  */</span>
  tmp = queue-&gt;<a class="code" href="structpqueue.html#ab0bd435f08b1d4b4a91ec75c4a41f888">array</a>[index];

  <span class="comment">/* Continue until the node have at least one (left) child.  */</span>
  <span class="keywordflow">while</span> (<a class="code" href="pqueue_8c.html#ab0c41596aa0885797e0823f25e307643">HAVE_CHILD</a> (index, queue))
    {
      <span class="comment">/* If right child exists, and if the right child is more proper</span>
<span class="comment">         to be moved upper.  */</span>
      <span class="keywordflow">if</span> (<a class="code" href="pqueue_8c.html#a9cb5c9bf559ecaf191e6b06c5acaef6c">RIGHT_OF</a> (index) &lt; queue-&gt;<a class="code" href="structpqueue.html#a15089ae2aadc39f77b8d1b9b46fb8efe">size</a> &amp;&amp;
          (*queue-&gt;<a class="code" href="structpqueue.html#ab07da518da86aacef25a3b94404bec09">cmp</a>) (queue-&gt;<a class="code" href="structpqueue.html#ab0bd435f08b1d4b4a91ec75c4a41f888">array</a>[<a class="code" href="pqueue_8c.html#a9463c174df115b30eec183601c44067d">LEFT_OF</a> (index)],
                         queue-&gt;<a class="code" href="structpqueue.html#ab0bd435f08b1d4b4a91ec75c4a41f888">array</a>[<a class="code" href="pqueue_8c.html#a9cb5c9bf559ecaf191e6b06c5acaef6c">RIGHT_OF</a> (index)]) &gt; 0)
        which = <a class="code" href="pqueue_8c.html#a9cb5c9bf559ecaf191e6b06c5acaef6c">RIGHT_OF</a> (index);
      <span class="keywordflow">else</span>
        which = <a class="code" href="pqueue_8c.html#a9463c174df115b30eec183601c44067d">LEFT_OF</a> (index);

      <span class="comment">/* If the tmp node should be upper than the child, break.  */</span>
      <span class="keywordflow">if</span> ((*queue-&gt;<a class="code" href="structpqueue.html#ab07da518da86aacef25a3b94404bec09">cmp</a>) (queue-&gt;<a class="code" href="structpqueue.html#ab0bd435f08b1d4b4a91ec75c4a41f888">array</a>[which], tmp) &gt; 0)
        <span class="keywordflow">break</span>;

      <span class="comment">/* Actually trickle down the tmp node.  */</span>
      queue-&gt;<a class="code" href="structpqueue.html#ab0bd435f08b1d4b4a91ec75c4a41f888">array</a>[index] = queue-&gt;<a class="code" href="structpqueue.html#ab0bd435f08b1d4b4a91ec75c4a41f888">array</a>[which];
       <span class="keywordflow">if</span> (queue-&gt;<a class="code" href="structpqueue.html#a4ead77ed00570005794a66bf040c816f">update</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
     (*queue-&gt;<a class="code" href="structpqueue.html#a4ead77ed00570005794a66bf040c816f">update</a>) (queue-&gt;<a class="code" href="structpqueue.html#ab0bd435f08b1d4b4a91ec75c4a41f888">array</a>[index], index);
      index = which;
    }

  <span class="comment">/* Restore the tmp node to appropriate place.  */</span>
  queue-&gt;<a class="code" href="structpqueue.html#ab0bd435f08b1d4b4a91ec75c4a41f888">array</a>[index] = tmp;
  <span class="keywordflow">if</span> (queue-&gt;<a class="code" href="structpqueue.html#a4ead77ed00570005794a66bf040c816f">update</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    (*queue-&gt;<a class="code" href="structpqueue.html#a4ead77ed00570005794a66bf040c816f">update</a>) (tmp, index);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab8caec03e5beeef534a0dd7258a2abe5"></a><!-- doxytag: member="pqueue.c::trickle_up" ref="ab8caec03e5beeef534a0dd7258a2abe5" args="(int index, struct pqueue *queue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void trickle_up </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structpqueue.html">pqueue</a> *&#160;</td>
          <td class="paramname"><em>queue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="pqueue_8c_source.html#l00046">46</a> of file <a class="el" href="pqueue_8c_source.html">pqueue.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">void</span> *tmp;

  <span class="comment">/* Save current node as tmp node.  */</span>
  tmp = queue-&gt;<a class="code" href="structpqueue.html#ab0bd435f08b1d4b4a91ec75c4a41f888">array</a>[index];

  <span class="comment">/* Continue until the node reaches top or the place where the parent</span>
<span class="comment">     node should be upper than the tmp node.  */</span>
  <span class="keywordflow">while</span> (index &gt; 0 &amp;&amp;
         (*queue-&gt;<a class="code" href="structpqueue.html#ab07da518da86aacef25a3b94404bec09">cmp</a>) (tmp, queue-&gt;<a class="code" href="structpqueue.html#ab0bd435f08b1d4b4a91ec75c4a41f888">array</a>[<a class="code" href="pqueue_8c.html#a194510e524e9c01830b1f1fae9dcb47e">PARENT_OF</a> (index)]) &lt; 0)
    {
      <span class="comment">/* actually trickle up */</span>
      queue-&gt;<a class="code" href="structpqueue.html#ab0bd435f08b1d4b4a91ec75c4a41f888">array</a>[index] = queue-&gt;<a class="code" href="structpqueue.html#ab0bd435f08b1d4b4a91ec75c4a41f888">array</a>[<a class="code" href="pqueue_8c.html#a194510e524e9c01830b1f1fae9dcb47e">PARENT_OF</a> (index)];
      <span class="keywordflow">if</span> (queue-&gt;<a class="code" href="structpqueue.html#a4ead77ed00570005794a66bf040c816f">update</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    (*queue-&gt;<a class="code" href="structpqueue.html#a4ead77ed00570005794a66bf040c816f">update</a>) (queue-&gt;<a class="code" href="structpqueue.html#ab0bd435f08b1d4b4a91ec75c4a41f888">array</a>[index], index);
      index = <a class="code" href="pqueue_8c.html#a194510e524e9c01830b1f1fae9dcb47e">PARENT_OF</a> (index);
    }

  <span class="comment">/* Restore the tmp node to appropriate place.  */</span>
  queue-&gt;<a class="code" href="structpqueue.html#ab0bd435f08b1d4b4a91ec75c4a41f888">array</a>[index] = tmp;
  <span class="keywordflow">if</span> (queue-&gt;<a class="code" href="structpqueue.html#a4ead77ed00570005794a66bf040c816f">update</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    (*queue-&gt;<a class="code" href="structpqueue.html#a4ead77ed00570005794a66bf040c816f">update</a>) (tmp, index);
}
</pre></div>
</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="pqueue_8c.html">pqueue.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:23 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
