<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: lib/vector.c File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('vector_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">lib/vector.c File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="zebra_8h_source.html">zebra.h</a>&gt;</code><br/>
<code>#include &quot;<a class="el" href="vector_8h_source.html">vector.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="memory_8h_source.html">memory.h</a>&quot;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for vector.c:</div>
<div class="dyncontent">
<div class="center"><img src="vector_8c__incl.png" border="0" usemap="#lib_2vector_8c" alt=""/></div>
<map name="lib_2vector_8c" id="lib_2vector_8c">
<area shape="rect" id="node3" href="zebra_8h.html" title="zebra.h" alt="" coords="1345,80,1412,107"/><area shape="rect" id="node61" href="vector_8h.html" title="vector.h" alt="" coords="1768,80,1840,107"/><area shape="rect" id="node63" href="memory_8h.html" title="memory.h" alt="" coords="2528,80,2611,107"/><area shape="rect" id="node57" href="zassert_8h.html" title="zassert.h" alt="" coords="2669,155,2747,181"/><area shape="rect" id="node59" href="str_8h.html" title="str.h" alt="" coords="2771,155,2820,181"/><area shape="rect" id="node65" href="memtypes_8h.html" title="lib/memtypes.h" alt="" coords="2845,155,2960,181"/></map>
</div>
</div>
<p><a href="vector_8c_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vector_8c.html#ae6a929ac3530de06eee1df3629d15247">vector_init</a> (unsigned int size)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vector_8c.html#ac0d218d6e04cd434ceb15fb505156251">vector_only_wrapper_free</a> (<a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a> v)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vector_8c.html#ac09d5fe94ccb5c5b0e883f2565a1a858">vector_only_index_free</a> (void *index)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vector_8c.html#af535d7daaa1dc88a3ac5c4451a6296f0">vector_free</a> (<a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a> v)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vector_8c.html#a023a26a75d23f986c89bbd73d73f01c0">vector_copy</a> (<a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a> v)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vector_8c.html#a8ad206f259bb511f00db58e52a1d6551">vector_ensure</a> (<a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a> v, unsigned int <a class="el" href="bgp__open_8h.html#ab4570498c4316aa5f7b4852c778b3320">num</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vector_8c.html#af34483597baad8ccef82d2c38f794b80">vector_empty_slot</a> (<a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a> v)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vector_8c.html#a09dff784fcc0e322c64e5975b3255fe0">vector_set</a> (<a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a> v, void *<a class="el" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vector_8c.html#a4ab15201b63a93279459a6d3d90600e5">vector_set_index</a> (<a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a> v, unsigned int <a class="el" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>, void *<a class="el" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vector_8c.html#a5308a959053a5b67010213f09ade8e20">vector_lookup</a> (<a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a> v, unsigned int <a class="el" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vector_8c.html#a346c9866c235d928f4633c192a9da52b">vector_lookup_ensure</a> (<a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a> v, unsigned int <a class="el" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vector_8c.html#aedb539ef50499b729c8bfb9c2d7989c3">vector_unset</a> (<a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a> v, unsigned int <a class="el" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="vector_8c.html#a27b7646cb874dff3b77400e95b6f8b99">vector_count</a> (<a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a> v)</td></tr>
</table>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a023a26a75d23f986c89bbd73d73f01c0"></a><!-- doxytag: member="vector.c::vector_copy" ref="a023a26a75d23f986c89bbd73d73f01c0" args="(vector v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a> vector_copy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a>&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vector_8c_source.html#l00063">63</a> of file <a class="el" href="vector_8c_source.html">vector.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> size;
  <a class="code" href="struct__vector.html">vector</a> <span class="keyword">new</span> = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba268d61aa616c52052e41592387afa521">MTYPE_VECTOR</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="struct__vector.html">_vector</a>));

  <span class="keyword">new</span>-&gt;active = v-&gt;<a class="code" href="struct__vector.html#a4e6bd9a62a7725ebdf9d693538fdab35">active</a>;
  <span class="keyword">new</span>-&gt;alloced = v-&gt;<a class="code" href="struct__vector.html#a510db4bae04133cd48363798fbf8979d">alloced</a>;

  size = <span class="keyword">sizeof</span> (<span class="keywordtype">void</span> *) * (v-&gt;<a class="code" href="struct__vector.html#a510db4bae04133cd48363798fbf8979d">alloced</a>);
  <span class="keyword">new</span>-&gt;index = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba5315450a0fbff30828c13f506619aa38">MTYPE_VECTOR_INDEX</a>, size);
  <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (new-&gt;index, v-&gt;<a class="code" href="struct__vector.html#a357e5c8b5afc67e75636eb8b91f8812a">index</a>, size);

  <span class="keywordflow">return</span> <span class="keyword">new</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a27b7646cb874dff3b77400e95b6f8b99"></a><!-- doxytag: member="vector.c::vector_count" ref="a27b7646cb874dff3b77400e95b6f8b99" args="(vector v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int vector_count </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a>&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vector_8c_source.html#l00179">179</a> of file <a class="el" href="vector_8c_source.html">vector.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
  <span class="keywordtype">unsigned</span> <a class="code" href="spgrid_8c.html#a66e3fedede6aa372e5196e55e5e8d5c1">count</a> = 0;

  <span class="keywordflow">for</span> (i = 0; i &lt; v-&gt;<a class="code" href="struct__vector.html#a4e6bd9a62a7725ebdf9d693538fdab35">active</a>; i++) 
    <span class="keywordflow">if</span> (v-&gt;<a class="code" href="struct__vector.html#a357e5c8b5afc67e75636eb8b91f8812a">index</a>[i] != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
      count++;

  <span class="keywordflow">return</span> <a class="code" href="spgrid_8c.html#a66e3fedede6aa372e5196e55e5e8d5c1">count</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af34483597baad8ccef82d2c38f794b80"></a><!-- doxytag: member="vector.c::vector_empty_slot" ref="af34483597baad8ccef82d2c38f794b80" args="(vector v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int vector_empty_slot </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a>&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vector_8c_source.html#l00098">98</a> of file <a class="el" href="vector_8c_source.html">vector.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

  <span class="keywordflow">if</span> (v-&gt;<a class="code" href="struct__vector.html#a4e6bd9a62a7725ebdf9d693538fdab35">active</a> == 0)
    <span class="keywordflow">return</span> 0;

  <span class="keywordflow">for</span> (i = 0; i &lt; v-&gt;<a class="code" href="struct__vector.html#a4e6bd9a62a7725ebdf9d693538fdab35">active</a>; i++)
    <span class="keywordflow">if</span> (v-&gt;<a class="code" href="struct__vector.html#a357e5c8b5afc67e75636eb8b91f8812a">index</a>[i] == 0)
      <span class="keywordflow">return</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

  <span class="keywordflow">return</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a8ad206f259bb511f00db58e52a1d6551"></a><!-- doxytag: member="vector.c::vector_ensure" ref="a8ad206f259bb511f00db58e52a1d6551" args="(vector v, unsigned int num)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void vector_ensure </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a>&#160;</td>
          <td class="paramname"><em>v</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>num</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vector_8c_source.html#l00080">80</a> of file <a class="el" href="vector_8c_source.html">vector.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (v-&gt;<a class="code" href="struct__vector.html#a510db4bae04133cd48363798fbf8979d">alloced</a> &gt; <a class="code" href="bgp__open_8h.html#ab4570498c4316aa5f7b4852c778b3320">num</a>)
    <span class="keywordflow">return</span>;

  v-&gt;<a class="code" href="struct__vector.html#a357e5c8b5afc67e75636eb8b91f8812a">index</a> = <a class="code" href="memory_8h.html#ad9ab7c99da79ca966328c35e9185cc57">XREALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba5315450a0fbff30828c13f506619aa38">MTYPE_VECTOR_INDEX</a>, 
               v-&gt;<a class="code" href="struct__vector.html#a357e5c8b5afc67e75636eb8b91f8812a">index</a>, sizeof (<span class="keywordtype">void</span> *) * (v-&gt;<a class="code" href="struct__vector.html#a510db4bae04133cd48363798fbf8979d">alloced</a> * 2));
  memset (&amp;v-&gt;<a class="code" href="struct__vector.html#a357e5c8b5afc67e75636eb8b91f8812a">index</a>[v-&gt;<a class="code" href="struct__vector.html#a510db4bae04133cd48363798fbf8979d">alloced</a>], 0, sizeof (<span class="keywordtype">void</span> *) * v-&gt;<a class="code" href="struct__vector.html#a510db4bae04133cd48363798fbf8979d">alloced</a>);
  v-&gt;<a class="code" href="struct__vector.html#a510db4bae04133cd48363798fbf8979d">alloced</a> *= 2;
  
  <span class="keywordflow">if</span> (v-&gt;<a class="code" href="struct__vector.html#a510db4bae04133cd48363798fbf8979d">alloced</a> &lt;= <a class="code" href="bgp__open_8h.html#ab4570498c4316aa5f7b4852c778b3320">num</a>)
    <a class="code" href="vector_8c.html#a8ad206f259bb511f00db58e52a1d6551">vector_ensure</a> (v, <a class="code" href="bgp__open_8h.html#ab4570498c4316aa5f7b4852c778b3320">num</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="af535d7daaa1dc88a3ac5c4451a6296f0"></a><!-- doxytag: member="vector.c::vector_free" ref="af535d7daaa1dc88a3ac5c4451a6296f0" args="(vector v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void vector_free </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a>&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vector_8c_source.html#l00056">56</a> of file <a class="el" href="vector_8c_source.html">vector.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba5315450a0fbff30828c13f506619aa38">MTYPE_VECTOR_INDEX</a>, v-&gt;<a class="code" href="struct__vector.html#a357e5c8b5afc67e75636eb8b91f8812a">index</a>);
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba268d61aa616c52052e41592387afa521">MTYPE_VECTOR</a>, v);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae6a929ac3530de06eee1df3629d15247"></a><!-- doxytag: member="vector.c::vector_init" ref="ae6a929ac3530de06eee1df3629d15247" args="(unsigned int size)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a> vector_init </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vector_8c_source.html#l00029">29</a> of file <a class="el" href="vector_8c_source.html">vector.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="struct__vector.html">vector</a> v = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba268d61aa616c52052e41592387afa521">MTYPE_VECTOR</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="struct__vector.html">_vector</a>));

  <span class="comment">/* allocate at least one slot */</span>
  <span class="keywordflow">if</span> (size == 0)
    size = 1;

  v-&gt;<a class="code" href="struct__vector.html#a510db4bae04133cd48363798fbf8979d">alloced</a> = size;
  v-&gt;<a class="code" href="struct__vector.html#a4e6bd9a62a7725ebdf9d693538fdab35">active</a> = 0;
  v-&gt;<a class="code" href="struct__vector.html#a357e5c8b5afc67e75636eb8b91f8812a">index</a> = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba5315450a0fbff30828c13f506619aa38">MTYPE_VECTOR_INDEX</a>, <span class="keyword">sizeof</span> (<span class="keywordtype">void</span> *) * size);
  <span class="keywordflow">return</span> v;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5308a959053a5b67010213f09ade8e20"></a><!-- doxytag: member="vector.c::vector_lookup" ref="a5308a959053a5b67010213f09ade8e20" args="(vector v, unsigned int i)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* vector_lookup </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a>&#160;</td>
          <td class="paramname"><em>v</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>i</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vector_8c_source.html#l00145">145</a> of file <a class="el" href="vector_8c_source.html">vector.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a> &gt;= v-&gt;<a class="code" href="struct__vector.html#a4e6bd9a62a7725ebdf9d693538fdab35">active</a>)
    <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keywordflow">return</span> v-&gt;<a class="code" href="struct__vector.html#a357e5c8b5afc67e75636eb8b91f8812a">index</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>];
}
</pre></div>
</div>
</div>
<a class="anchor" id="a346c9866c235d928f4633c192a9da52b"></a><!-- doxytag: member="vector.c::vector_lookup_ensure" ref="a346c9866c235d928f4633c192a9da52b" args="(vector v, unsigned int i)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* vector_lookup_ensure </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a>&#160;</td>
          <td class="paramname"><em>v</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>i</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vector_8c_source.html#l00154">154</a> of file <a class="el" href="vector_8c_source.html">vector.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="vector_8c.html#a8ad206f259bb511f00db58e52a1d6551">vector_ensure</a> (v, <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>);
  <span class="keywordflow">return</span> v-&gt;<a class="code" href="struct__vector.html#a357e5c8b5afc67e75636eb8b91f8812a">index</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>];
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac09d5fe94ccb5c5b0e883f2565a1a858"></a><!-- doxytag: member="vector.c::vector_only_index_free" ref="ac09d5fe94ccb5c5b0e883f2565a1a858" args="(void *index)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void vector_only_index_free </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vector_8c_source.html#l00050">50</a> of file <a class="el" href="vector_8c_source.html">vector.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba5315450a0fbff30828c13f506619aa38">MTYPE_VECTOR_INDEX</a>, index);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac0d218d6e04cd434ceb15fb505156251"></a><!-- doxytag: member="vector.c::vector_only_wrapper_free" ref="ac0d218d6e04cd434ceb15fb505156251" args="(vector v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void vector_only_wrapper_free </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a>&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vector_8c_source.html#l00044">44</a> of file <a class="el" href="vector_8c_source.html">vector.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba268d61aa616c52052e41592387afa521">MTYPE_VECTOR</a>, v);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a09dff784fcc0e322c64e5975b3255fe0"></a><!-- doxytag: member="vector.c::vector_set" ref="a09dff784fcc0e322c64e5975b3255fe0" args="(vector v, void *val)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int vector_set </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a>&#160;</td>
          <td class="paramname"><em>v</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vector_8c_source.html#l00114">114</a> of file <a class="el" href="vector_8c_source.html">vector.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

  i = <a class="code" href="vector_8c.html#af34483597baad8ccef82d2c38f794b80">vector_empty_slot</a> (v);
  <a class="code" href="vector_8c.html#a8ad206f259bb511f00db58e52a1d6551">vector_ensure</a> (v, i);

  v-&gt;<a class="code" href="struct__vector.html#a357e5c8b5afc67e75636eb8b91f8812a">index</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] = <a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>;

  <span class="keywordflow">if</span> (v-&gt;<a class="code" href="struct__vector.html#a4e6bd9a62a7725ebdf9d693538fdab35">active</a> &lt;= i)
    v-&gt;<a class="code" href="struct__vector.html#a4e6bd9a62a7725ebdf9d693538fdab35">active</a> = i + 1;

  <span class="keywordflow">return</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4ab15201b63a93279459a6d3d90600e5"></a><!-- doxytag: member="vector.c::vector_set_index" ref="a4ab15201b63a93279459a6d3d90600e5" args="(vector v, unsigned int i, void *val)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int vector_set_index </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a>&#160;</td>
          <td class="paramname"><em>v</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vector_8c_source.html#l00131">131</a> of file <a class="el" href="vector_8c_source.html">vector.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="vector_8c.html#a8ad206f259bb511f00db58e52a1d6551">vector_ensure</a> (v, <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>);

  v-&gt;<a class="code" href="struct__vector.html#a357e5c8b5afc67e75636eb8b91f8812a">index</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] = <a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>;

  <span class="keywordflow">if</span> (v-&gt;<a class="code" href="struct__vector.html#a4e6bd9a62a7725ebdf9d693538fdab35">active</a> &lt;= <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>)
    v-&gt;<a class="code" href="struct__vector.html#a4e6bd9a62a7725ebdf9d693538fdab35">active</a> = <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a> + 1;

  <span class="keywordflow">return</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aedb539ef50499b729c8bfb9c2d7989c3"></a><!-- doxytag: member="vector.c::vector_unset" ref="aedb539ef50499b729c8bfb9c2d7989c3" args="(vector v, unsigned int i)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void vector_unset </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="vector_8h.html#a7fe85bb4f5ec8665f4ef33dab2fdc2db">vector</a>&#160;</td>
          <td class="paramname"><em>v</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>i</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="vector_8c_source.html#l00162">162</a> of file <a class="el" href="vector_8c_source.html">vector.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a> &gt;= v-&gt;<a class="code" href="struct__vector.html#a510db4bae04133cd48363798fbf8979d">alloced</a>)
    <span class="keywordflow">return</span>;

  v-&gt;<a class="code" href="struct__vector.html#a357e5c8b5afc67e75636eb8b91f8812a">index</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="keywordflow">if</span> (<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a> + 1 == v-&gt;<a class="code" href="struct__vector.html#a4e6bd9a62a7725ebdf9d693538fdab35">active</a>) 
    {
      v-&gt;<a class="code" href="struct__vector.html#a4e6bd9a62a7725ebdf9d693538fdab35">active</a>--;
      <span class="keywordflow">while</span> (<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a> &amp;&amp; v-&gt;<a class="code" href="struct__vector.html#a357e5c8b5afc67e75636eb8b91f8812a">index</a>[--<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; v-&gt;<a class="code" href="struct__vector.html#a4e6bd9a62a7725ebdf9d693538fdab35">active</a>--) 
    ;               <span class="comment">/* Is this ugly ? */</span>
    }
}
</pre></div>
</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="vector_8c.html">vector.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:25 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
