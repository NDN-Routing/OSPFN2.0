<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: zebra/if_sysctl.c File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('if__sysctl_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#define-members">Defines</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">zebra/if_sysctl.c File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="zebra_8h_source.html">zebra.h</a>&gt;</code><br/>
<code>#include &quot;<a class="el" href="if_8h_source.html">if.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="sockunion_8h_source.html">sockunion.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="prefix_8h_source.html">prefix.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="connected_8h_source.html">connected.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="memory_8h_source.html">memory.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ioctl_8h_source.html">ioctl.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="log_8h_source.html">log.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="rt_8h_source.html">zebra/rt.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="kernel__socket_8h_source.html">zebra/kernel_socket.h</a>&quot;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for if_sysctl.c:</div>
<div class="dyncontent">
<div class="center"><img src="if__sysctl_8c__incl.png" border="0" usemap="#zebra_2if__sysctl_8c" alt=""/></div>
<map name="zebra_2if__sysctl_8c" id="zebra_2if__sysctl_8c">
<area shape="rect" id="node3" href="zebra_8h.html" title="zebra.h" alt="" coords="1519,80,1585,107"/><area shape="rect" id="node61" href="if_8h.html" title="if.h" alt="" coords="3087,155,3127,181"/><area shape="rect" id="node65" href="sockunion_8h.html" title="sockunion.h" alt="" coords="3151,304,3244,331"/><area shape="rect" id="node67" href="prefix_8h.html" title="prefix.h" alt="" coords="2945,229,3012,256"/><area shape="rect" id="node70" href="connected_8h.html" title="connected.h" alt="" coords="3000,80,3099,107"/><area shape="rect" id="node72" href="memory_8h.html" title="memory.h" alt="" coords="3256,80,3339,107"/><area shape="rect" id="node76" href="ioctl_8h.html" title="ioctl.h" alt="" coords="3173,80,3232,107"/><area shape="rect" id="node78" href="log_8h.html" title="log.h" alt="" coords="2763,80,2815,107"/><area shape="rect" id="node81" href="rt_8h.html" title="zebra/rt.h" alt="" coords="2897,80,2975,107"/><area shape="rect" id="node88" href="kernel__socket_8h.html" title="zebra/kernel_socket.h" alt="" coords="3414,80,3567,107"/><area shape="rect" id="node57" href="zassert_8h.html" title="zassert.h" alt="" coords="1941,155,2019,181"/><area shape="rect" id="node59" href="str_8h.html" title="str.h" alt="" coords="2043,155,2092,181"/><area shape="rect" id="node63" href="linklist_8h.html" title="linklist.h" alt="" coords="3071,229,3141,256"/><area shape="rect" id="node74" href="memtypes_8h.html" title="lib/memtypes.h" alt="" coords="3224,155,3339,181"/><area shape="rect" id="node85" href="rib_8h.html" title="zebra/rib.h" alt="" coords="2897,155,2980,181"/></map>
</div>
</div>
<p><a href="if__sysctl_8c_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if__sysctl_8c.html#a7cf7251f957d6aad433acc9e013accc6">MIBSIZ</a>&#160;&#160;&#160;6</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if__sysctl_8c.html#a7cf7251f957d6aad433acc9e013accc6">MIBSIZ</a>&#160;&#160;&#160;6</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if__sysctl_8c.html#a8d1660e9fb7739de19fe130ca8903fdc">ifstat_update_sysctl</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="if__sysctl_8c.html#a566ef48adbf48e92f6e0044e317b0d99">interface_list</a> ()</td></tr>
</table>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="a7cf7251f957d6aad433acc9e013accc6"></a><!-- doxytag: member="if_sysctl.c::MIBSIZ" ref="a7cf7251f957d6aad433acc9e013accc6" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MIBSIZ&#160;&#160;&#160;6</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a7cf7251f957d6aad433acc9e013accc6"></a><!-- doxytag: member="if_sysctl.c::MIBSIZ" ref="a7cf7251f957d6aad433acc9e013accc6" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MIBSIZ&#160;&#160;&#160;6</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a8d1660e9fb7739de19fe130ca8903fdc"></a><!-- doxytag: member="if_sysctl.c::ifstat_update_sysctl" ref="a8d1660e9fb7739de19fe130ca8903fdc" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ifstat_update_sysctl </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if__sysctl_8c_source.html#l00037">37</a> of file <a class="el" href="if__sysctl_8c_source.html">if_sysctl.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  caddr_t ref, buf, end;
  <span class="keywordtype">size_t</span> bufsiz;
  <span class="keyword">struct </span>if_msghdr *ifm;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;

<span class="preprocessor">#define MIBSIZ 6</span>
<span class="preprocessor"></span>  <span class="keywordtype">int</span> <a class="code" href="ipforward__sysctl_8c.html#a86a49565c28c30b8212709033abdfea4">mib</a>[<a class="code" href="if__sysctl_8c.html#a7cf7251f957d6aad433acc9e013accc6">MIBSIZ</a>] =
  { 
    CTL_NET,
    PF_ROUTE,
    0,
    0, <span class="comment">/*  AF_INET &amp; AF_INET6 */</span>
    NET_RT_IFLIST,
    0 
  };

  <span class="comment">/* Query buffer size. */</span>
  <span class="keywordflow">if</span> (sysctl (mib, MIBSIZ, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, &amp;bufsiz, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0) &lt; 0) 
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;sysctl() error by %s&quot;</span>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
      <span class="keywordflow">return</span>;
    }

  <span class="comment">/* We free this memory at the end of this function. */</span>
  ref = buf = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, bufsiz);

  <span class="comment">/* Fetch interface informations into allocated buffer. */</span>
  <span class="keywordflow">if</span> (sysctl (mib, MIBSIZ, buf, &amp;bufsiz, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0) &lt; 0) 
    {
      <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_WARNING, <span class="stringliteral">&quot;sysctl error by %s&quot;</span>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
      <span class="keywordflow">return</span>;
    }

  <span class="comment">/* Parse both interfaces and addresses. */</span>
  <span class="keywordflow">for</span> (end = buf + bufsiz; buf &lt; end; buf += ifm-&gt;ifm_msglen) 
    {
      ifm = (<span class="keyword">struct </span>if_msghdr *) buf;
      <span class="keywordflow">if</span> (ifm-&gt;ifm_type == RTM_IFINFO)
    {
      ifp = <a class="code" href="if_8c.html#a424dd1e971aee548383cca2b770e2859">if_lookup_by_index</a> (ifm-&gt;ifm_index);
      <span class="keywordflow">if</span> (ifp)
        ifp-&gt;stats = ifm-&gt;ifm_data;
    }
    }

  <span class="comment">/* Free sysctl buffer. */</span>
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, ref);

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a566ef48adbf48e92f6e0044e317b0d99"></a><!-- doxytag: member="if_sysctl.c::interface_list" ref="a566ef48adbf48e92f6e0044e317b0d99" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void interface_list </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="if__sysctl_8c_source.html#l00092">92</a> of file <a class="el" href="if__sysctl_8c_source.html">if_sysctl.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  caddr_t ref, buf, end;
  <span class="keywordtype">size_t</span> bufsiz;
  <span class="keyword">struct </span>if_msghdr *ifm;

<span class="preprocessor">#define MIBSIZ 6</span>
<span class="preprocessor"></span>  <span class="keywordtype">int</span> <a class="code" href="ipforward__sysctl_8c.html#a86a49565c28c30b8212709033abdfea4">mib</a>[<a class="code" href="if__sysctl_8c.html#a7cf7251f957d6aad433acc9e013accc6">MIBSIZ</a>] =
  { 
    CTL_NET,
    PF_ROUTE,
    0,
    0, <span class="comment">/*  AF_INET &amp; AF_INET6 */</span>
    NET_RT_IFLIST,
    0 
  };

  <span class="comment">/* Query buffer size. */</span>
  <span class="keywordflow">if</span> (sysctl (mib, MIBSIZ, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, &amp;bufsiz, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0) &lt; 0) 
    {
      <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_WARNING, <span class="stringliteral">&quot;sysctl() error by %s&quot;</span>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
      <span class="keywordflow">return</span>;
    }

  <span class="comment">/* We free this memory at the end of this function. */</span>
  ref = buf = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, bufsiz);

  <span class="comment">/* Fetch interface informations into allocated buffer. */</span>
  <span class="keywordflow">if</span> (sysctl (mib, MIBSIZ, buf, &amp;bufsiz, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0) &lt; 0) 
    {
      <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_WARNING, <span class="stringliteral">&quot;sysctl error by %s&quot;</span>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
      <span class="keywordflow">return</span>;
    }

  <span class="comment">/* Parse both interfaces and addresses. */</span>
  <span class="keywordflow">for</span> (end = buf + bufsiz; buf &lt; end; buf += ifm-&gt;ifm_msglen) 
    {
      ifm = (<span class="keyword">struct </span>if_msghdr *) buf;

      <span class="keywordflow">switch</span> (ifm-&gt;ifm_type) 
    {
    <span class="keywordflow">case</span> RTM_IFINFO:
      <a class="code" href="kernel__socket_8c.html#aa77e17c2a468e19c7bf0935bb78b6b48">ifm_read</a> (ifm);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> RTM_NEWADDR:
      <a class="code" href="kernel__socket_8c.html#a13d417744f4455ef28100a3907b3a7dd">ifam_read</a> ((<span class="keyword">struct</span> ifa_msghdr *) ifm);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">default</span>:
      <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;interfaces_list(): unexpected message type&quot;</span>);
      <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, ref);
      <span class="keywordflow">return</span>;
      <span class="keywordflow">break</span>;
    }
    }

  <span class="comment">/* Free sysctl buffer. */</span>
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, ref);
}
</pre></div>
</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="if__sysctl_8c.html">if_sysctl.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:37 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
