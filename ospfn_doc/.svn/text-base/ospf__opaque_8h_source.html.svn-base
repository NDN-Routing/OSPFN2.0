<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: ospfd/ospf_opaque.h Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('ospf__opaque_8h.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">ospfd/ospf_opaque.h</div>  </div>
</div>
<div class="contents">
<a href="ospf__opaque_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * This is an implementation of rfc2370.</span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2001 KDD R&amp;D Laboratories, Inc.</span>
<a name="l00004"></a>00004 <span class="comment"> * http://www.kddlabs.co.jp/</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * This file is part of GNU Zebra.</span>
<a name="l00007"></a>00007 <span class="comment"> *</span>
<a name="l00008"></a>00008 <span class="comment"> * GNU Zebra is free software; you can redistribute it and/or modify it</span>
<a name="l00009"></a>00009 <span class="comment"> * under the terms of the GNU General Public License as published by the</span>
<a name="l00010"></a>00010 <span class="comment"> * Free Software Foundation; either version 2, or (at your option) any</span>
<a name="l00011"></a>00011 <span class="comment"> * later version.</span>
<a name="l00012"></a>00012 <span class="comment"> * </span>
<a name="l00013"></a>00013 <span class="comment"> * GNU Zebra is distributed in the hope that it will be useful, but</span>
<a name="l00014"></a>00014 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00015"></a>00015 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00016"></a>00016 <span class="comment"> * General Public License for more details.</span>
<a name="l00017"></a>00017 <span class="comment"> *</span>
<a name="l00018"></a>00018 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00019"></a>00019 <span class="comment"> * along with GNU Zebra; see the file COPYING.  If not, write to the Free</span>
<a name="l00020"></a>00020 <span class="comment"> * Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA</span>
<a name="l00021"></a>00021 <span class="comment"> * 02111-1307, USA.</span>
<a name="l00022"></a>00022 <span class="comment"> */</span>
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 <span class="preprocessor">#ifndef _ZEBRA_OSPF_OPAQUE_H</span>
<a name="l00025"></a>00025 <span class="preprocessor"></span><span class="preprocessor">#define _ZEBRA_OSPF_OPAQUE_H</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="vty_8h.html">vty.h</a>&quot;</span>
<a name="l00028"></a>00028 
<a name="l00029"></a><a class="code" href="ospf__opaque_8h.html#adca492bee2510ab6955b68454830c021">00029</a> <span class="preprocessor">#define IS_OPAQUE_LSA(type) \</span>
<a name="l00030"></a>00030 <span class="preprocessor">    ((type) == OSPF_OPAQUE_LINK_LSA  || \</span>
<a name="l00031"></a>00031 <span class="preprocessor">     (type) == OSPF_OPAQUE_AREA_LSA  || \</span>
<a name="l00032"></a>00032 <span class="preprocessor">     (type) == OSPF_OPAQUE_AS_LSA)</span>
<a name="l00033"></a>00033 <span class="preprocessor"></span>
<a name="l00034"></a>00034 <span class="comment">/*</span>
<a name="l00035"></a>00035 <span class="comment"> * Usage of Opaque-LSA administrative flags in &quot;struct ospf&quot;.</span>
<a name="l00036"></a>00036 <span class="comment"> *</span>
<a name="l00037"></a>00037 <span class="comment"> *    7   6   5   4   3   2   1   0</span>
<a name="l00038"></a>00038 <span class="comment"> * +---+---+---+---+---+---+---+---+</span>
<a name="l00039"></a>00039 <span class="comment"> * |///|///|///|///|B11|B10|B09| O |</span>
<a name="l00040"></a>00040 <span class="comment"> * +---+---+---+---+---+---+---+---+</span>
<a name="l00041"></a>00041 <span class="comment"> *                 |&lt;---------&gt;| A</span>
<a name="l00042"></a>00042 <span class="comment"> *                       |       +--- Operation status (operational = 1)</span>
<a name="l00043"></a>00043 <span class="comment"> *                       +----------- Blocking status for each LSA type</span>
<a name="l00044"></a>00044 <span class="comment"> */</span>
<a name="l00045"></a>00045 
<a name="l00046"></a><a class="code" href="ospf__opaque_8h.html#a22f5fbb8d8c29a987847ca54159bb24e">00046</a> <span class="preprocessor">#define IS_OPAQUE_LSA_ORIGINATION_BLOCKED(V) \</span>
<a name="l00047"></a>00047 <span class="preprocessor">        CHECK_FLAG((V), (OPAQUE_BLOCK_TYPE_09_LSA_BIT | \</span>
<a name="l00048"></a>00048 <span class="preprocessor">                         OPAQUE_BLOCK_TYPE_10_LSA_BIT | \</span>
<a name="l00049"></a>00049 <span class="preprocessor">                         OPAQUE_BLOCK_TYPE_11_LSA_BIT))</span>
<a name="l00050"></a>00050 <span class="preprocessor"></span>
<a name="l00051"></a>00051 <span class="comment">/*</span>
<a name="l00052"></a>00052 <span class="comment"> * Opaque LSA&#39;s link state ID is redefined as follows.</span>
<a name="l00053"></a>00053 <span class="comment"> *</span>
<a name="l00054"></a>00054 <span class="comment"> *        24       16        8        0</span>
<a name="l00055"></a>00055 <span class="comment"> * +--------+--------+--------+--------+</span>
<a name="l00056"></a>00056 <span class="comment"> * |tttttttt|........|........|........|</span>
<a name="l00057"></a>00057 <span class="comment"> * +--------+--------+--------+--------+</span>
<a name="l00058"></a>00058 <span class="comment"> * |&lt;-Type-&gt;|&lt;------- Opaque ID ------&gt;|</span>
<a name="l00059"></a>00059 <span class="comment"> */</span>
<a name="l00060"></a><a class="code" href="ospf__opaque_8h.html#aad92d7b97a01360e91941e40fa9ce2a5">00060</a> <span class="preprocessor">#define LSID_OPAQUE_TYPE_MASK   0xff000000  </span><span class="comment">/*  8 bits */</span>
<a name="l00061"></a><a class="code" href="ospf__opaque_8h.html#a87f8b76fa89690ff3a6c9815b5c79722">00061</a> <span class="preprocessor">#define LSID_OPAQUE_ID_MASK 0x00ffffff  </span><span class="comment">/* 24 bits */</span>
<a name="l00062"></a>00062 
<a name="l00063"></a><a class="code" href="ospf__opaque_8h.html#a33d474a2ee1cabff7a723d1c5faa46f6">00063</a> <span class="preprocessor">#define GET_OPAQUE_TYPE(lsid) \</span>
<a name="l00064"></a>00064 <span class="preprocessor">    (((u_int32_t)(lsid) &amp; LSID_OPAQUE_TYPE_MASK) &gt;&gt; 24)</span>
<a name="l00065"></a>00065 <span class="preprocessor"></span>
<a name="l00066"></a><a class="code" href="ospf__opaque_8h.html#a44dd18f87765dd2c8b6003c5efd099df">00066</a> <span class="preprocessor">#define GET_OPAQUE_ID(lsid) \</span>
<a name="l00067"></a>00067 <span class="preprocessor">     ((u_int32_t)(lsid) &amp; LSID_OPAQUE_ID_MASK)</span>
<a name="l00068"></a>00068 <span class="preprocessor"></span>
<a name="l00069"></a><a class="code" href="ospf__opaque_8h.html#a44507a22a8268862dc322c292455d7a6">00069</a> <span class="preprocessor">#define SET_OPAQUE_LSID(type, id) \</span>
<a name="l00070"></a>00070 <span class="preprocessor">    ((((type) &lt;&lt; 24) &amp; LSID_OPAQUE_TYPE_MASK) \</span>
<a name="l00071"></a>00071 <span class="preprocessor">    | ((id)          &amp; LSID_OPAQUE_ID_MASK))</span>
<a name="l00072"></a>00072 <span class="preprocessor"></span>
<a name="l00073"></a>00073 <span class="comment">/*</span>
<a name="l00074"></a>00074 <span class="comment"> * Opaque LSA types will be assigned by IANA.</span>
<a name="l00075"></a>00075 <span class="comment"> * &lt;http://www.iana.org/assignments/ospf-opaque-types&gt;</span>
<a name="l00076"></a>00076 <span class="comment"> */</span>
<a name="l00077"></a><a class="code" href="ospf__opaque_8h.html#a7dddfc012a93950f7e43cf4204943852">00077</a> <span class="preprocessor">#define OPAQUE_TYPE_TRAFFIC_ENGINEERING_LSA     1</span>
<a name="l00078"></a><a class="code" href="ospf__opaque_8h.html#a1d9913a6e5433d2b7382ab593f5be802">00078</a> <span class="preprocessor"></span><span class="preprocessor">#define OPAQUE_TYPE_SYCAMORE_OPTICAL_TOPOLOGY_DESC  2</span>
<a name="l00079"></a><a class="code" href="ospf__opaque_8h.html#ae808ccee34e5f85b1b2661be3840703a">00079</a> <span class="preprocessor"></span><span class="preprocessor">#define OPAQUE_TYPE_GRACE_LSA               3</span>
<a name="l00080"></a>00080 <span class="preprocessor"></span>
<a name="l00081"></a>00081 <span class="comment">/* Followings types are proposed in internet-draft documents. */</span>
<a name="l00082"></a><a class="code" href="ospf__opaque_8h.html#a5399884d9adf33bea2a5d64d52c91b4c">00082</a> <span class="preprocessor">#define OPAQUE_TYPE_8021_QOSPF              129</span>
<a name="l00083"></a><a class="code" href="ospf__opaque_8h.html#ad5335c32793a77c070f07129a351e7b1">00083</a> <span class="preprocessor"></span><span class="preprocessor">#define OPAQUE_TYPE_SECONDARY_NEIGHBOR_DISCOVERY    224</span>
<a name="l00084"></a><a class="code" href="ospf__opaque_8h.html#a05931a8b9b126a385d8f91f84e973dbb">00084</a> <span class="preprocessor"></span><span class="preprocessor">#define OPAQUE_TYPE_FLOODGATE                           225</span>
<a name="l00085"></a>00085 <span class="preprocessor"></span>
<a name="l00086"></a>00086 <span class="comment">/* Ugly hack to make use of an unallocated value for wildcard matching! */</span>
<a name="l00087"></a><a class="code" href="ospf__opaque_8h.html#a8c73b474152f1a487791f92e35bf30fe">00087</a> <span class="preprocessor">#define OPAQUE_TYPE_WILDCARD                0</span>
<a name="l00088"></a>00088 <span class="preprocessor"></span>
<a name="l00089"></a><a class="code" href="ospf__opaque_8h.html#af2fcb53876bdd986bb4aa1f148d11e36">00089</a> <span class="preprocessor">#define OPAQUE_TYPE_RANGE_UNASSIGNED(type) \</span>
<a name="l00090"></a>00090 <span class="preprocessor">    (  4 &lt;= (type) &amp;&amp; (type) &lt;= 127)</span>
<a name="l00091"></a>00091 <span class="preprocessor"></span>
<a name="l00092"></a><a class="code" href="ospf__opaque_8h.html#a19e0d3b1dcb388c258cd129cd56afff1">00092</a> <span class="preprocessor">#define OPAQUE_TYPE_RANGE_RESERVED(type) \</span>
<a name="l00093"></a>00093 <span class="preprocessor">    (127 &lt;  (type) &amp;&amp; (type) &lt;= 255)</span>
<a name="l00094"></a>00094 <span class="preprocessor"></span>
<a name="l00095"></a><a class="code" href="ospf__opaque_8h.html#adcab14cba9d8bf4a492ee197fb0b26a9">00095</a> <span class="preprocessor">#define VALID_OPAQUE_INFO_LEN(lsahdr) \</span>
<a name="l00096"></a>00096 <span class="preprocessor">    ((ntohs((lsahdr)-&gt;length) &gt;= sizeof (struct lsa_header)) &amp;&amp; \</span>
<a name="l00097"></a>00097 <span class="preprocessor">    ((ntohs((lsahdr)-&gt;length) %  sizeof (u_int32_t)) == 0))</span>
<a name="l00098"></a>00098 <span class="preprocessor"></span>
<a name="l00099"></a>00099 <span class="comment">/* Prototypes. */</span>
<a name="l00100"></a>00100 
<a name="l00101"></a>00101 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#aeb225e682458f06002755db2fb89a0cb">ospf_opaque_init</a> (<span class="keywordtype">void</span>);
<a name="l00102"></a>00102 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#a41c39a3e75d1d5e880a5ea0ed49905ec">ospf_opaque_term</a> (<span class="keywordtype">void</span>);
<a name="l00103"></a>00103 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="ospf__opaque_8h.html#ac17f05a1ebf3fccea3febad454f66a13">ospf_opaque_type9_lsa_init</a> (<span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *oi);
<a name="l00104"></a>00104 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#a5ea00e524339f12f53f7427f3608c4a6">ospf_opaque_type9_lsa_term</a> (<span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *oi);
<a name="l00105"></a>00105 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="ospf__opaque_8h.html#a6817ba7e55ba931f75b13f719da847b0">ospf_opaque_type10_lsa_init</a> (<span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>);
<a name="l00106"></a>00106 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#adc01fc52cf0e7a2a337b760210d69a7f">ospf_opaque_type10_lsa_term</a> (<span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>);
<a name="l00107"></a>00107 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="ospf__opaque_8h.html#ab36bbe167f6dfaefff8cc6562088d5e8">ospf_opaque_type11_lsa_init</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>);
<a name="l00108"></a>00108 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#a585b78ae190eca243a024d1288611592">ospf_opaque_type11_lsa_term</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>);
<a name="l00109"></a>00109 
<a name="l00110"></a>00110 <span class="keyword">extern</span> <span class="keywordtype">int</span>
<a name="l00111"></a>00111 <a class="code" href="ospf__opaque_8h.html#a625591adfc981177469407fa6132b3c3">ospf_register_opaque_functab</a> (
<a name="l00112"></a>00112   u_char lsa_type,
<a name="l00113"></a>00113   u_char opaque_type,
<a name="l00114"></a>00114   <span class="keywordtype">int</span> (* new_if_hook)(<span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp),
<a name="l00115"></a>00115   <span class="keywordtype">int</span> (* del_if_hook)(<span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp),
<a name="l00116"></a>00116   <span class="keywordtype">void</span> (* ism_change_hook)(<span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *oi, <span class="keywordtype">int</span> old_status),
<a name="l00117"></a>00117   <span class="keywordtype">void</span> (* nsm_change_hook)(<span class="keyword">struct</span> <a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr, <span class="keywordtype">int</span> old_status),
<a name="l00118"></a>00118   <span class="keywordtype">void</span> (* config_write_router)(<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>),
<a name="l00119"></a>00119   <span class="keywordtype">void</span> (* config_write_if    )(<span class="keyword">struct</span> vty *vty, <span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp),
<a name="l00120"></a>00120   <span class="keywordtype">void</span> (* <a class="code" href="isisd_8c.html#aff90ca2b271a0d399b326d6c0552bb41">config_write_debug</a> )(<span class="keyword">struct</span> vty *vty),
<a name="l00121"></a>00121   <span class="keywordtype">void</span> (* show_opaque_info   )(<span class="keyword">struct</span> vty *vty, <span class="keyword">struct</span> <a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa),
<a name="l00122"></a>00122   <span class="keywordtype">int</span>  (* lsa_originator)(<span class="keywordtype">void</span> *arg),
<a name="l00123"></a>00123   <span class="keywordtype">void</span> (* lsa_refresher )(<span class="keyword">struct</span> <a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa),
<a name="l00124"></a>00124   <span class="keywordtype">int</span> (* new_lsa_hook)(<span class="keyword">struct</span> <a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa),
<a name="l00125"></a>00125   <span class="keywordtype">int</span> (* del_lsa_hook)(<span class="keyword">struct</span> <a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa),
<a name="l00126"></a>00126   <span class="comment">/* 08/23/2011 yic +1 */</span>
<a name="l00127"></a>00127   <span class="keywordtype">void</span> (* router_routing_table_change_hook)()
<a name="l00128"></a>00128 );
<a name="l00129"></a>00129 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#a41bea3a6d41383d3785814e97a32f4c6">ospf_delete_opaque_functab</a> (u_char lsa_type, u_char opaque_type);
<a name="l00130"></a>00130 
<a name="l00131"></a>00131 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="ospf__opaque_8h.html#a815a52d8eba68484eac70aa5c63e41fa">ospf_opaque_new_if</a> (<span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp);
<a name="l00132"></a>00132 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="ospf__opaque_8h.html#af51358fa8ab4c4ec7ad70a124a7d403c">ospf_opaque_del_if</a> (<span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp);
<a name="l00133"></a>00133 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#affdc5ee3a6fab6f28d76b6a3d087e834">ospf_opaque_ism_change</a> (<span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *oi,
<a name="l00134"></a>00134                     <span class="keywordtype">int</span> old_status);
<a name="l00135"></a>00135 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#a2349d620cc402245a1e47d7ce5b4fc2e">ospf_opaque_nsm_change</a> (<span class="keyword">struct</span> <a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr,
<a name="l00136"></a>00136                     <span class="keywordtype">int</span> old_status);
<a name="l00137"></a>00137 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#aec4d42e44af3bf8e88dc79ee07a6cace">ospf_opaque_config_write_router</a> (<span class="keyword">struct</span> vty *vty, <span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *);
<a name="l00138"></a>00138 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#a039de9d0b968bd310f91c8dfaedae8b4">ospf_opaque_config_write_if</a> (<span class="keyword">struct</span> vty *vty,
<a name="l00139"></a>00139                      <span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp);
<a name="l00140"></a>00140 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#addea18cefc8b18f0261fc8facd78be75">ospf_opaque_config_write_debug</a> (<span class="keyword">struct</span> vty *vty);
<a name="l00141"></a>00141 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#a79497924b589025bb93b611388ac70e1">show_opaque_info_detail</a> (<span class="keyword">struct</span> vty *vty, <span class="keyword">struct</span> <a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa);
<a name="l00142"></a>00142 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#ab1d29c5d2436c971e50355af688a2f78">ospf_opaque_lsa_dump</a> (<span class="keyword">struct</span> <a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>, u_int16_t <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>);
<a name="l00143"></a>00143 <span class="comment">/* 08/23/2011 yic +1 */</span>
<a name="l00144"></a>00144 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#a58d83f276124716d11804cd62e77985a">ospf_opaque_router_routing_table_change</a>();
<a name="l00145"></a>00145 
<a name="l00146"></a>00146 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#a50c104d86adbf7073dbce6f9e12f3f1f">ospf_opaque_lsa_originate_schedule</a> (<span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *oi,
<a name="l00147"></a>00147                         <span class="keywordtype">int</span> *init_delay);
<a name="l00148"></a>00148 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *<a class="code" href="ospf__opaque_8h.html#adcdf3f83a447665cfcb282c18ab5cc71">ospf_opaque_lsa_install</a> (<span class="keyword">struct</span> <a class="code" href="structospf__lsa.html">ospf_lsa</a> *,
<a name="l00149"></a>00149                          <span class="keywordtype">int</span> rt_recalc);
<a name="l00150"></a>00150 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#a5d47cc4e0de52b67511124fcb5aa2be5">ospf_opaque_lsa_refresh</a> (<span class="keyword">struct</span> <a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa);
<a name="l00151"></a>00151 
<a name="l00152"></a>00152 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#a8051c5bd74e77728c6ad70f717ce5100">ospf_opaque_lsa_reoriginate_schedule</a> (<span class="keywordtype">void</span> *lsa_type_dependent,
<a name="l00153"></a>00153                           u_char lsa_type,
<a name="l00154"></a>00154                           u_char opaque_type);
<a name="l00155"></a>00155 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#aa09894547334df306db297c657329cb9">ospf_opaque_lsa_refresh_schedule</a> (<span class="keyword">struct</span> <a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa);
<a name="l00156"></a>00156 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#adc5d31cc8c6d8fd4eff1d8069027c39b">ospf_opaque_lsa_flush_schedule</a> (<span class="keyword">struct</span> <a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa);
<a name="l00157"></a>00157 
<a name="l00158"></a>00158 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#a1305cd45c4dda8bd2a53326fef2c774d">ospf_opaque_adjust_lsreq</a> (<span class="keyword">struct</span> <a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr,
<a name="l00159"></a>00159                       <span class="keyword">struct</span> <a class="code" href="structlist.html">list</a> *lsas);
<a name="l00160"></a>00160 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#ac8060bfd88d1dd4e8b89f46952154739">ospf_opaque_self_originated_lsa_received</a> (<span class="keyword">struct</span> <a class="code" href="structospf__neighbor.html">ospf_neighbor</a>
<a name="l00161"></a>00161                               *nbr,
<a name="l00162"></a>00162                               <span class="keyword">struct</span> <a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa);
<a name="l00163"></a>00163 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#a2df97bff3c2de212258a4767dd778152">ospf_opaque_ls_ack_received</a> (<span class="keyword">struct</span> <a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr,
<a name="l00164"></a>00164                      <span class="keyword">struct</span> <a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa);
<a name="l00165"></a>00165 
<a name="l00166"></a>00166 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#a8ca22fea43623338493d6210e2eddcce">htonf</a> (<span class="keywordtype">float</span> *src, <span class="keywordtype">float</span> *dst);
<a name="l00167"></a>00167 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__opaque_8h.html#ab5166b2b901c520c7873315e0a3f6432">ntohf</a> (<span class="keywordtype">float</span> *src, <span class="keywordtype">float</span> *dst);
<a name="l00168"></a>00168 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structospf.html">ospf</a> *<a class="code" href="ospf__opaque_8h.html#acf470147baa1a2b6de79fe6e00b671af">oi_to_top</a> (<span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *oi);
<a name="l00169"></a>00169 
<a name="l00170"></a>00170 <span class="preprocessor">#endif </span><span class="comment">/* _ZEBRA_OSPF_OPAQUE_H */</span>
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="ospf__opaque_8h.html">ospf_opaque.h</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:07 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
