<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: ospfd/ospf_ism.h Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('ospf__ism_8h.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">ospfd/ospf_ism.h</div>  </div>
</div>
<div class="contents">
<a href="ospf__ism_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * OSPF version 2  Interface State Machine.</span>
<a name="l00003"></a>00003 <span class="comment"> *   From RFC2328 [OSPF Version 2]</span>
<a name="l00004"></a>00004 <span class="comment"> * Copyright (C) 1999 Toshiaki Takada</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * This file is part of GNU Zebra.</span>
<a name="l00007"></a>00007 <span class="comment"> *</span>
<a name="l00008"></a>00008 <span class="comment"> * GNU Zebra is free software; you can redistribute it and/or modify it</span>
<a name="l00009"></a>00009 <span class="comment"> * under the terms of the GNU General Public License as published by the</span>
<a name="l00010"></a>00010 <span class="comment"> * Free Software Foundation; either version 2, or (at your option) any</span>
<a name="l00011"></a>00011 <span class="comment"> * later version.</span>
<a name="l00012"></a>00012 <span class="comment"> *</span>
<a name="l00013"></a>00013 <span class="comment"> * GNU Zebra is distributed in the hope that it will be useful, but</span>
<a name="l00014"></a>00014 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00015"></a>00015 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00016"></a>00016 <span class="comment"> * General Public License for more details.</span>
<a name="l00017"></a>00017 <span class="comment"> *</span>
<a name="l00018"></a>00018 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00019"></a>00019 <span class="comment"> * along with GNU Zebra; see the file COPYING.  If not, write to the Free</span>
<a name="l00020"></a>00020 <span class="comment"> * Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA</span>
<a name="l00021"></a>00021 <span class="comment"> * 02111-1307, USA.</span>
<a name="l00022"></a>00022 <span class="comment"> */</span>
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 <span class="preprocessor">#ifndef _ZEBRA_OSPF_ISM_H</span>
<a name="l00025"></a>00025 <span class="preprocessor"></span><span class="preprocessor">#define _ZEBRA_OSPF_ISM_H</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span>
<a name="l00027"></a>00027 <span class="comment">/* OSPF Interface State Machine Status. */</span>
<a name="l00028"></a><a class="code" href="ospf__ism_8h.html#acf6f7845e8869bc4184265daf384f2a6">00028</a> <span class="preprocessor">#define ISM_DependUpon                    0</span>
<a name="l00029"></a><a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">00029</a> <span class="preprocessor"></span><span class="preprocessor">#define ISM_Down                          1</span>
<a name="l00030"></a><a class="code" href="ospf__ism_8h.html#ad5bbcdc6e422bf33064865a4aac0a172">00030</a> <span class="preprocessor"></span><span class="preprocessor">#define ISM_Loopback                      2</span>
<a name="l00031"></a><a class="code" href="ospf__ism_8h.html#ad2f0936e61c22de1c5ffbb51f0f640a0">00031</a> <span class="preprocessor"></span><span class="preprocessor">#define ISM_Waiting                       3</span>
<a name="l00032"></a><a class="code" href="ospf__ism_8h.html#a1076f1da99a0944266b120fe42fe4426">00032</a> <span class="preprocessor"></span><span class="preprocessor">#define ISM_PointToPoint                  4</span>
<a name="l00033"></a><a class="code" href="ospf__ism_8h.html#a63c91d64f244427665286ca82eaeea04">00033</a> <span class="preprocessor"></span><span class="preprocessor">#define ISM_DROther                       5</span>
<a name="l00034"></a><a class="code" href="ospf__ism_8h.html#a3676782add5a8ecdb86981965ef9f37e">00034</a> <span class="preprocessor"></span><span class="preprocessor">#define ISM_Backup                        6</span>
<a name="l00035"></a><a class="code" href="ospf__ism_8h.html#a7f179a571f4f8e112c0b887f39c87f23">00035</a> <span class="preprocessor"></span><span class="preprocessor">#define ISM_DR                            7</span>
<a name="l00036"></a><a class="code" href="ospf__ism_8h.html#ad298cb127e0c3e42e1e497391af05166">00036</a> <span class="preprocessor"></span><span class="preprocessor">#define OSPF_ISM_STATE_MAX                8</span>
<a name="l00037"></a>00037 <span class="preprocessor"></span>
<a name="l00038"></a>00038 <span class="comment">/* Because DR/DROther values are exhanged wrt RFC */</span>
<a name="l00039"></a><a class="code" href="ospf__ism_8h.html#a9a7e81bc05399a7de11d0d9ade8fe7a5">00039</a> <span class="preprocessor">#define ISM_SNMP(x) (((x) == ISM_DROther) ? ISM_DR : \</span>
<a name="l00040"></a>00040 <span class="preprocessor">                     ((x) == ISM_DR) ? ISM_DROther : (x))</span>
<a name="l00041"></a>00041 <span class="preprocessor"></span>
<a name="l00042"></a>00042 <span class="comment">/* OSPF Interface State Machine Event. */</span>
<a name="l00043"></a><a class="code" href="ospf__ism_8h.html#a896ad230955464829bb0f805a5d74413">00043</a> <span class="preprocessor">#define ISM_NoEvent                       0</span>
<a name="l00044"></a><a class="code" href="ospf__ism_8h.html#a62e1abe21aa53de288bc8b8566c481df">00044</a> <span class="preprocessor"></span><span class="preprocessor">#define ISM_InterfaceUp                   1</span>
<a name="l00045"></a><a class="code" href="ospf__ism_8h.html#a516f61e03aaf3c1560792ead947e4335">00045</a> <span class="preprocessor"></span><span class="preprocessor">#define ISM_WaitTimer                     2</span>
<a name="l00046"></a><a class="code" href="ospf__ism_8h.html#a9cf840171f8ab1524819f58d5edd895e">00046</a> <span class="preprocessor"></span><span class="preprocessor">#define ISM_BackupSeen                    3</span>
<a name="l00047"></a><a class="code" href="ospf__ism_8h.html#a2b12c9aa9a4cabd2064157cfe3d1fed4">00047</a> <span class="preprocessor"></span><span class="preprocessor">#define ISM_NeighborChange                4</span>
<a name="l00048"></a><a class="code" href="ospf__ism_8h.html#acf10d53400c12658dc3b67f301724881">00048</a> <span class="preprocessor"></span><span class="preprocessor">#define ISM_LoopInd                       5</span>
<a name="l00049"></a><a class="code" href="ospf__ism_8h.html#a6df696c2a36293be440ca93db007b750">00049</a> <span class="preprocessor"></span><span class="preprocessor">#define ISM_UnloopInd                     6</span>
<a name="l00050"></a><a class="code" href="ospf__ism_8h.html#a97b345bfc32a7b6ad1fd6ff1257a7b90">00050</a> <span class="preprocessor"></span><span class="preprocessor">#define ISM_InterfaceDown                 7</span>
<a name="l00051"></a><a class="code" href="ospf__ism_8h.html#afe5c14b076b3de44b2febe1daf2d57c7">00051</a> <span class="preprocessor"></span><span class="preprocessor">#define OSPF_ISM_EVENT_MAX                8</span>
<a name="l00052"></a>00052 <span class="preprocessor"></span>
<a name="l00053"></a><a class="code" href="ospf__ism_8h.html#acd2a285495892c5423a0c4894c43ce94">00053</a> <span class="preprocessor">#define OSPF_ISM_WRITE_ON(O)                                                  \</span>
<a name="l00054"></a>00054 <span class="preprocessor">      do                                                                      \</span>
<a name="l00055"></a>00055 <span class="preprocessor">        {                                                                     \</span>
<a name="l00056"></a>00056 <span class="preprocessor">          if (oi-&gt;on_write_q == 0)                                            \</span>
<a name="l00057"></a>00057 <span class="preprocessor">        {                                                                 \</span>
<a name="l00058"></a>00058 <span class="preprocessor">              listnode_add ((O)-&gt;oi_write_q, oi);                             \</span>
<a name="l00059"></a>00059 <span class="preprocessor">          oi-&gt;on_write_q = 1;                                             \</span>
<a name="l00060"></a>00060 <span class="preprocessor">        }                                                                 \</span>
<a name="l00061"></a>00061 <span class="preprocessor">      if ((O)-&gt;t_write == NULL)                                           \</span>
<a name="l00062"></a>00062 <span class="preprocessor">        (O)-&gt;t_write =                                                    \</span>
<a name="l00063"></a>00063 <span class="preprocessor">          thread_add_write (master, ospf_write, (O), (O)-&gt;fd);            \</span>
<a name="l00064"></a>00064 <span class="preprocessor">        } while (0)</span>
<a name="l00065"></a>00065 <span class="preprocessor"></span>     
<a name="l00066"></a>00066 <span class="comment">/* Macro for OSPF ISM timer turn on. */</span>
<a name="l00067"></a><a class="code" href="ospf__ism_8h.html#a9aca7fd1780267f224441174f992bfc9">00067</a> <span class="preprocessor">#define OSPF_ISM_TIMER_ON(T,F,V) \</span>
<a name="l00068"></a>00068 <span class="preprocessor">  do { \</span>
<a name="l00069"></a>00069 <span class="preprocessor">    if (!(T)) \</span>
<a name="l00070"></a>00070 <span class="preprocessor">      (T) = thread_add_timer (master, (F), oi, (V)); \</span>
<a name="l00071"></a>00071 <span class="preprocessor">  } while (0)</span>
<a name="l00072"></a><a class="code" href="ospf__ism_8h.html#abec66d8335bdee3d2c9812068d37cba5">00072</a> <span class="preprocessor"></span><span class="preprocessor">#define OSPF_ISM_TIMER_MSEC_ON(T,F,V) \</span>
<a name="l00073"></a>00073 <span class="preprocessor">  do { \</span>
<a name="l00074"></a>00074 <span class="preprocessor">    if (!(T)) \</span>
<a name="l00075"></a>00075 <span class="preprocessor">      (T) = thread_add_timer_msec (master, (F), oi, (V)); \</span>
<a name="l00076"></a>00076 <span class="preprocessor">  } while (0)</span>
<a name="l00077"></a>00077 <span class="preprocessor"></span>
<a name="l00078"></a>00078 <span class="comment">/* convenience macro to set hello timer correctly, according to</span>
<a name="l00079"></a>00079 <span class="comment"> * whether fast-hello is set or not</span>
<a name="l00080"></a>00080 <span class="comment"> */</span>
<a name="l00081"></a><a class="code" href="ospf__ism_8h.html#ab792a769e6c4eda18410c8b452fa92cb">00081</a> <span class="preprocessor">#define OSPF_HELLO_TIMER_ON(O) \</span>
<a name="l00082"></a>00082 <span class="preprocessor">  do { \</span>
<a name="l00083"></a>00083 <span class="preprocessor">    if (OSPF_IF_PARAM ((O), fast_hello)) \</span>
<a name="l00084"></a>00084 <span class="preprocessor">        OSPF_ISM_TIMER_MSEC_ON ((O)-&gt;t_hello, ospf_hello_timer, \</span>
<a name="l00085"></a>00085 <span class="preprocessor">                                1000 / OSPF_IF_PARAM ((O), fast_hello)); \</span>
<a name="l00086"></a>00086 <span class="preprocessor">    else \</span>
<a name="l00087"></a>00087 <span class="preprocessor">        OSPF_ISM_TIMER_ON ((O)-&gt;t_hello, ospf_hello_timer, \</span>
<a name="l00088"></a>00088 <span class="preprocessor">                                OSPF_IF_PARAM ((O), v_hello)); \</span>
<a name="l00089"></a>00089 <span class="preprocessor">  } while (0)</span>
<a name="l00090"></a>00090 <span class="preprocessor"></span>
<a name="l00091"></a>00091 <span class="comment">/* Macro for OSPF ISM timer turn off. */</span>
<a name="l00092"></a><a class="code" href="ospf__ism_8h.html#a2cacab48c8f81e562591540802fd54a1">00092</a> <span class="preprocessor">#define OSPF_ISM_TIMER_OFF(X) \</span>
<a name="l00093"></a>00093 <span class="preprocessor">  do { \</span>
<a name="l00094"></a>00094 <span class="preprocessor">    if (X) \</span>
<a name="l00095"></a>00095 <span class="preprocessor">      { \</span>
<a name="l00096"></a>00096 <span class="preprocessor">    thread_cancel (X); \</span>
<a name="l00097"></a>00097 <span class="preprocessor">    (X) = NULL; \</span>
<a name="l00098"></a>00098 <span class="preprocessor">      } \</span>
<a name="l00099"></a>00099 <span class="preprocessor">  } while (0)</span>
<a name="l00100"></a>00100 <span class="preprocessor"></span>
<a name="l00101"></a>00101 <span class="comment">/* Macro for OSPF schedule event. */</span>
<a name="l00102"></a><a class="code" href="ospf__ism_8h.html#a92d8b8f5e3c324698ef17d8ab3ee9781">00102</a> <span class="preprocessor">#define OSPF_ISM_EVENT_SCHEDULE(I,E) \</span>
<a name="l00103"></a>00103 <span class="preprocessor">      thread_add_event (master, ospf_ism_event, (I), (E))</span>
<a name="l00104"></a>00104 <span class="preprocessor"></span>
<a name="l00105"></a>00105 <span class="comment">/* Macro for OSPF execute event. */</span>
<a name="l00106"></a><a class="code" href="ospf__ism_8h.html#a49b78d0f7b9cbc604466a345265bd846">00106</a> <span class="preprocessor">#define OSPF_ISM_EVENT_EXECUTE(I,E) \</span>
<a name="l00107"></a>00107 <span class="preprocessor">      thread_execute (master, ospf_ism_event, (I), (E))</span>
<a name="l00108"></a>00108 <span class="preprocessor"></span>
<a name="l00109"></a>00109 <span class="comment">/* Prototypes. */</span>
<a name="l00110"></a>00110 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="ospf__ism_8c.html#a6a90f4f003e80ca5ba3240d1f7106a74">ospf_ism_event</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *);
<a name="l00111"></a>00111 <span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="ospf__ism_8h.html#a53aa51e60f399098b356b03832a92cef">ism_change_status</a> (<span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *, <span class="keywordtype">int</span>);
<a name="l00112"></a>00112 <span class="keyword">extern</span> <span class="keywordtype">int</span> <a class="code" href="ospf__ism_8c.html#adec27301f3c252356a85e6ed6758d3be">ospf_hello_timer</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>);
<a name="l00113"></a>00113 
<a name="l00114"></a>00114 <span class="preprocessor">#endif </span><span class="comment">/* _ZEBRA_OSPF_ISM_H */</span>
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="ospf__ism_8h.html">ospf_ism.h</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:07 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
