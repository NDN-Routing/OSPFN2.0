<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: zebra/ipforward_solaris.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('ipforward__solaris_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">zebra/ipforward_solaris.c</div>  </div>
</div>
<div class="contents">
<a href="ipforward__solaris_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * ipforward value get function for solaris.</span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 1997 Kunihiro Ishiguro</span>
<a name="l00004"></a>00004 <span class="comment"> *</span>
<a name="l00005"></a>00005 <span class="comment"> * This file is part of GNU Zebra.</span>
<a name="l00006"></a>00006 <span class="comment"> *</span>
<a name="l00007"></a>00007 <span class="comment"> * GNU Zebra is free software; you can redistribute it and/or modify it</span>
<a name="l00008"></a>00008 <span class="comment"> * under the terms of the GNU General Public License as published by the</span>
<a name="l00009"></a>00009 <span class="comment"> * Free Software Foundation; either version 2, or (at your option) any</span>
<a name="l00010"></a>00010 <span class="comment"> * later version.</span>
<a name="l00011"></a>00011 <span class="comment"> *</span>
<a name="l00012"></a>00012 <span class="comment"> * GNU Zebra is distributed in the hope that it will be useful, but</span>
<a name="l00013"></a>00013 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00014"></a>00014 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00015"></a>00015 <span class="comment"> * General Public License for more details.</span>
<a name="l00016"></a>00016 <span class="comment"> *</span>
<a name="l00017"></a>00017 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00018"></a>00018 <span class="comment"> * along with GNU Zebra; see the file COPYING.  If not, write to the Free</span>
<a name="l00019"></a>00019 <span class="comment"> * Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA</span>
<a name="l00020"></a>00020 <span class="comment"> * 02111-1307, USA.  </span>
<a name="l00021"></a>00021 <span class="comment"> */</span>
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;<a class="code" href="zebra_8h.html">zebra.h</a>&gt;</span>
<a name="l00024"></a>00024 <span class="preprocessor">#include &quot;<a class="code" href="log_8h.html">log.h</a>&quot;</span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="prefix_8h.html">prefix.h</a>&quot;</span>
<a name="l00026"></a>00026 
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="privs_8h.html">privs.h</a>&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="ipforward_8h.html">zebra/ipforward.h</a>&quot;</span>
<a name="l00029"></a>00029 
<a name="l00030"></a>00030 <span class="comment">/*</span>
<a name="l00031"></a>00031 <span class="comment">** Solaris should define IP_DEV_NAME in &lt;inet/ip.h&gt;, but we&#39;ll save</span>
<a name="l00032"></a>00032 <span class="comment">** configure.in changes for another day.  We can use the same device</span>
<a name="l00033"></a>00033 <span class="comment">** for both IPv4 and IPv6.</span>
<a name="l00034"></a>00034 <span class="comment">*/</span>
<a name="l00035"></a>00035 <span class="comment">/* #include &lt;inet/ip.h&gt; */</span>
<a name="l00036"></a>00036 <span class="preprocessor">#ifndef IP_DEV_NAME</span>
<a name="l00037"></a><a class="code" href="ipforward__solaris_8c.html#a14228e119606c1526a10f5365d39422f">00037</a> <span class="preprocessor"></span><span class="preprocessor">#define IP_DEV_NAME &quot;/dev/ip&quot;</span>
<a name="l00038"></a>00038 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00039"></a>00039 <span class="preprocessor"></span>
<a name="l00040"></a>00040 
<a name="l00041"></a>00041 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structzebra__privs__t.html">zebra_privs_t</a> <a class="code" href="if__ioctl__solaris_8c.html#a10659da9c59441877a609c3cd916f3cf">zserv_privs</a>;
<a name="l00042"></a>00042 
<a name="l00043"></a>00043 <span class="comment">/* This is a limited ndd style function that operates one integer</span>
<a name="l00044"></a>00044 <span class="comment">** value only.  Errors return -1. ND_SET commands return 0 on</span>
<a name="l00045"></a>00045 <span class="comment">** success. ND_GET commands return the value on success (which could</span>
<a name="l00046"></a>00046 <span class="comment">** be -1 and be confused for an error).  The parameter is the string</span>
<a name="l00047"></a>00047 <span class="comment">** name of the parameter being referenced.</span>
<a name="l00048"></a>00048 <span class="comment">*/</span>
<a name="l00049"></a>00049 
<a name="l00050"></a>00050 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00051"></a><a class="code" href="ipforward__solaris_8c.html#a29f668d940db6314c932031559c6a7de">00051</a> <a class="code" href="ipforward__solaris_8c.html#a29f668d940db6314c932031559c6a7de">solaris_nd</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> cmd, <span class="keyword">const</span> <span class="keywordtype">char</span>* parameter, <span class="keyword">const</span> <span class="keywordtype">int</span> value)
<a name="l00052"></a>00052 {
<a name="l00053"></a>00053 <span class="preprocessor">#define ND_BUFFER_SIZE 1024</span>
<a name="l00054"></a>00054 <span class="preprocessor"></span>  <span class="keywordtype">int</span> fd;
<a name="l00055"></a>00055   <span class="keywordtype">char</span> nd_buf[<a class="code" href="ipforward__solaris_8c.html#ace1df7266fc4be820cf0d26b5d91ae37">ND_BUFFER_SIZE</a>];
<a name="l00056"></a>00056   <span class="keyword">struct </span>strioctl strioctl;
<a name="l00057"></a>00057   <span class="keyword">const</span> <span class="keywordtype">char</span>* device = <a class="code" href="ipforward__solaris_8c.html#a14228e119606c1526a10f5365d39422f">IP_DEV_NAME</a>;
<a name="l00058"></a>00058   <span class="keywordtype">int</span> retval;
<a name="l00059"></a>00059   memset(nd_buf, <span class="charliteral">&#39;\0&#39;</span>, <a class="code" href="ipforward__solaris_8c.html#ace1df7266fc4be820cf0d26b5d91ae37">ND_BUFFER_SIZE</a>);
<a name="l00060"></a>00060   <span class="comment">/*</span>
<a name="l00061"></a>00061 <span class="comment">  ** ND_SET takes a NULL delimited list of strings further terminated</span>
<a name="l00062"></a>00062 <span class="comment">  ** buy a NULL.  ND_GET returns a list in a similar layout, although</span>
<a name="l00063"></a>00063 <span class="comment">  ** here we only use the first result.</span>
<a name="l00064"></a>00064 <span class="comment">  */</span>
<a name="l00065"></a>00065   <span class="keywordflow">if</span> (cmd == ND_SET)
<a name="l00066"></a>00066     <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a>(nd_buf, <a class="code" href="ipforward__solaris_8c.html#ace1df7266fc4be820cf0d26b5d91ae37">ND_BUFFER_SIZE</a>, <span class="stringliteral">&quot;%s%c%d%c&quot;</span>, parameter, <span class="charliteral">&#39;\0&#39;</span>, value,<span class="charliteral">&#39;\0&#39;</span>);
<a name="l00067"></a>00067   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (cmd == ND_GET)
<a name="l00068"></a>00068     <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a>(nd_buf, <a class="code" href="ipforward__solaris_8c.html#ace1df7266fc4be820cf0d26b5d91ae37">ND_BUFFER_SIZE</a>, <span class="stringliteral">&quot;%s&quot;</span>, parameter);
<a name="l00069"></a>00069   <span class="keywordflow">else</span> {
<a name="l00070"></a>00070     <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a>(<span class="stringliteral">&quot;internal error - inappropriate command given to &quot;</span>
<a name="l00071"></a>00071              <span class="stringliteral">&quot;solaris_nd()%s:%d&quot;</span>, __FILE__, __LINE__);
<a name="l00072"></a>00072     <span class="keywordflow">return</span> -1;
<a name="l00073"></a>00073   }
<a name="l00074"></a>00074 
<a name="l00075"></a>00075   strioctl.ic_cmd = cmd;
<a name="l00076"></a>00076   strioctl.ic_timout = 0;
<a name="l00077"></a>00077   strioctl.ic_len = <a class="code" href="ipforward__solaris_8c.html#ace1df7266fc4be820cf0d26b5d91ae37">ND_BUFFER_SIZE</a>;
<a name="l00078"></a>00078   strioctl.ic_dp = nd_buf;
<a name="l00079"></a>00079   
<a name="l00080"></a>00080   <span class="keywordflow">if</span> ( <a class="code" href="if__ioctl__solaris_8c.html#a10659da9c59441877a609c3cd916f3cf">zserv_privs</a>.<a class="code" href="structzebra__privs__t.html#a0c59dbc0ec6187b60a824ec421cc34c1">change</a> (<a class="code" href="privs_8h.html#aae029fe88e2d02bee4d46a2f458bd3e5a5395269196ee9bd07257f8b2b35c25fa">ZPRIVS_RAISE</a>) )
<a name="l00081"></a>00081        <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;solaris_nd: Can&#39;t raise privileges&quot;</span>);
<a name="l00082"></a>00082   <span class="keywordflow">if</span> ((fd = open (device, O_RDWR)) &lt; 0) 
<a name="l00083"></a>00083     {
<a name="l00084"></a>00084       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;failed to open device %s - %s&quot;</span>, device, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a>(errno));
<a name="l00085"></a>00085       <span class="keywordflow">if</span> ( <a class="code" href="if__ioctl__solaris_8c.html#a10659da9c59441877a609c3cd916f3cf">zserv_privs</a>.<a class="code" href="structzebra__privs__t.html#a0c59dbc0ec6187b60a824ec421cc34c1">change</a> (<a class="code" href="privs_8h.html#aae029fe88e2d02bee4d46a2f458bd3e5a7da2c6956cf712f8adc04ff2b0f072c5">ZPRIVS_LOWER</a>) )
<a name="l00086"></a>00086         <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;solaris_nd: Can&#39;t lower privileges&quot;</span>);
<a name="l00087"></a>00087       <span class="keywordflow">return</span> -1;
<a name="l00088"></a>00088     }
<a name="l00089"></a>00089   <span class="keywordflow">if</span> (ioctl (fd, I_STR, &amp;strioctl) &lt; 0) 
<a name="l00090"></a>00090     {
<a name="l00091"></a>00091       <span class="keywordtype">int</span> save_errno = errno;
<a name="l00092"></a>00092       <span class="keywordflow">if</span> ( <a class="code" href="if__ioctl__solaris_8c.html#a10659da9c59441877a609c3cd916f3cf">zserv_privs</a>.<a class="code" href="structzebra__privs__t.html#a0c59dbc0ec6187b60a824ec421cc34c1">change</a> (<a class="code" href="privs_8h.html#aae029fe88e2d02bee4d46a2f458bd3e5a7da2c6956cf712f8adc04ff2b0f072c5">ZPRIVS_LOWER</a>) )
<a name="l00093"></a>00093         <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;solaris_nd: Can&#39;t lower privileges&quot;</span>);
<a name="l00094"></a>00094       close (fd);
<a name="l00095"></a>00095       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;ioctl I_STR failed on device %s - %s&quot;</span>,
<a name="l00096"></a>00096             device, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a>(save_errno));
<a name="l00097"></a>00097       <span class="keywordflow">return</span> -1;
<a name="l00098"></a>00098     }
<a name="l00099"></a>00099   close(fd);
<a name="l00100"></a>00100   <span class="keywordflow">if</span> ( <a class="code" href="if__ioctl__solaris_8c.html#a10659da9c59441877a609c3cd916f3cf">zserv_privs</a>.<a class="code" href="structzebra__privs__t.html#a0c59dbc0ec6187b60a824ec421cc34c1">change</a> (<a class="code" href="privs_8h.html#aae029fe88e2d02bee4d46a2f458bd3e5a7da2c6956cf712f8adc04ff2b0f072c5">ZPRIVS_LOWER</a>) )
<a name="l00101"></a>00101          <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;solaris_nd: Can&#39;t lower privileges&quot;</span>);
<a name="l00102"></a>00102   
<a name="l00103"></a>00103   <span class="keywordflow">if</span> (cmd == ND_GET) 
<a name="l00104"></a>00104     {
<a name="l00105"></a>00105       errno = 0;
<a name="l00106"></a>00106       retval = atoi(nd_buf);
<a name="l00107"></a>00107       <span class="keywordflow">if</span> (errno) 
<a name="l00108"></a>00108         {
<a name="l00109"></a>00109           <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;failed to convert returned value to integer - %s&quot;</span>,
<a name="l00110"></a>00110                     <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a>(errno));
<a name="l00111"></a>00111           retval = -1;
<a name="l00112"></a>00112         }
<a name="l00113"></a>00113     } 
<a name="l00114"></a>00114   <span class="keywordflow">else</span> 
<a name="l00115"></a>00115     {
<a name="l00116"></a>00116       retval = 0;
<a name="l00117"></a>00117     }
<a name="l00118"></a>00118   <span class="keywordflow">return</span> retval;
<a name="l00119"></a>00119 }
<a name="l00120"></a>00120 
<a name="l00121"></a>00121 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00122"></a><a class="code" href="ipforward__solaris_8c.html#a456108f0806daf1ea1d075282d0d20ac">00122</a> <a class="code" href="ipforward__solaris_8c.html#a456108f0806daf1ea1d075282d0d20ac">solaris_nd_set</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* parameter, <span class="keyword">const</span> <span class="keywordtype">int</span> value) {
<a name="l00123"></a>00123   <span class="keywordflow">return</span> <a class="code" href="ipforward__solaris_8c.html#a29f668d940db6314c932031559c6a7de">solaris_nd</a>(ND_SET, parameter, value);
<a name="l00124"></a>00124 }
<a name="l00125"></a>00125 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00126"></a><a class="code" href="ipforward__solaris_8c.html#a3c1b707945244b36b3372eb9474fabcd">00126</a> <a class="code" href="ipforward__solaris_8c.html#a3c1b707945244b36b3372eb9474fabcd">solaris_nd_get</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* parameter) {
<a name="l00127"></a>00127   <span class="keywordflow">return</span> <a class="code" href="ipforward__solaris_8c.html#a29f668d940db6314c932031559c6a7de">solaris_nd</a>(ND_GET, parameter, 0);
<a name="l00128"></a>00128 }
<a name="l00129"></a>00129 <span class="keywordtype">int</span>
<a name="l00130"></a><a class="code" href="ipforward__solaris_8c.html#a877419b23da547730edc0b685126fdd0">00130</a> <a class="code" href="ipforward_8h.html#a877419b23da547730edc0b685126fdd0">ipforward</a>(<span class="keywordtype">void</span>)
<a name="l00131"></a>00131 {
<a name="l00132"></a>00132   <span class="keywordflow">return</span> <a class="code" href="ipforward__solaris_8c.html#a3c1b707945244b36b3372eb9474fabcd">solaris_nd_get</a>(<span class="stringliteral">&quot;ip_forwarding&quot;</span>);
<a name="l00133"></a>00133 }
<a name="l00134"></a>00134 
<a name="l00135"></a>00135 <span class="keywordtype">int</span>
<a name="l00136"></a><a class="code" href="ipforward__solaris_8c.html#af69401022c6eda89deda39ce15688257">00136</a> <a class="code" href="ipforward_8h.html#af69401022c6eda89deda39ce15688257">ipforward_on</a> (<span class="keywordtype">void</span>)
<a name="l00137"></a>00137 {
<a name="l00138"></a>00138   (void) <a class="code" href="ipforward__solaris_8c.html#a456108f0806daf1ea1d075282d0d20ac">solaris_nd_set</a>(<span class="stringliteral">&quot;ip_forwarding&quot;</span>, 1);
<a name="l00139"></a>00139   <span class="keywordflow">return</span> <a class="code" href="ipforward_8h.html#a877419b23da547730edc0b685126fdd0">ipforward</a>();
<a name="l00140"></a>00140 }
<a name="l00141"></a>00141 
<a name="l00142"></a>00142 <span class="keywordtype">int</span>
<a name="l00143"></a><a class="code" href="ipforward__solaris_8c.html#a74cca84fa12a5eb4e04b8ee431dea8c2">00143</a> <a class="code" href="ipforward_8h.html#a74cca84fa12a5eb4e04b8ee431dea8c2">ipforward_off</a> (<span class="keywordtype">void</span>)
<a name="l00144"></a>00144 {
<a name="l00145"></a>00145   (void) <a class="code" href="ipforward__solaris_8c.html#a456108f0806daf1ea1d075282d0d20ac">solaris_nd_set</a>(<span class="stringliteral">&quot;ip_forwarding&quot;</span>, 0);
<a name="l00146"></a>00146   <span class="keywordflow">return</span> <a class="code" href="ipforward_8h.html#a877419b23da547730edc0b685126fdd0">ipforward</a>();
<a name="l00147"></a>00147 }
<a name="l00148"></a>00148 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00149"></a>00149 <span class="preprocessor"></span><span class="keywordtype">int</span> ipforward_ipv6(<span class="keywordtype">void</span>)
<a name="l00150"></a>00150 {
<a name="l00151"></a>00151   <span class="keywordflow">return</span> <a class="code" href="ipforward__solaris_8c.html#a3c1b707945244b36b3372eb9474fabcd">solaris_nd_get</a>(<span class="stringliteral">&quot;ip6_forwarding&quot;</span>);
<a name="l00152"></a>00152 }
<a name="l00153"></a>00153 <span class="keywordtype">int</span>
<a name="l00154"></a>00154 ipforward_ipv6_on (<span class="keywordtype">void</span>)
<a name="l00155"></a>00155 {
<a name="l00156"></a>00156   (void) <a class="code" href="ipforward__solaris_8c.html#a456108f0806daf1ea1d075282d0d20ac">solaris_nd_set</a>(<span class="stringliteral">&quot;ip6_forwarding&quot;</span>, 1);
<a name="l00157"></a>00157   <span class="keywordflow">return</span> ipforward_ipv6();
<a name="l00158"></a>00158 }
<a name="l00159"></a>00159 <span class="keywordtype">int</span>
<a name="l00160"></a>00160 ipforward_ipv6_off (<span class="keywordtype">void</span>)
<a name="l00161"></a>00161 {
<a name="l00162"></a>00162   (void) <a class="code" href="ipforward__solaris_8c.html#a456108f0806daf1ea1d075282d0d20ac">solaris_nd_set</a>(<span class="stringliteral">&quot;ip6_forwarding&quot;</span>, 0);
<a name="l00163"></a>00163   <span class="keywordflow">return</span> ipforward_ipv6();
<a name="l00164"></a>00164 }
<a name="l00165"></a>00165 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="ipforward__solaris_8c.html">ipforward_solaris.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:09 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
