<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: isisd/isis_misc.h File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('isis__misc_8h.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#define-members">Defines</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">isisd/isis_misc.h File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><img src="isis__misc_8h__dep__incl.png" border="0" usemap="#isisd_2isis__misc_8hdep" alt=""/></div>
<map name="isisd_2isis__misc_8hdep" id="isisd_2isis__misc_8hdep">
<area shape="rect" id="node3" href="isis__adjacency_8c.html" title="isisd/isis_adjacency.c" alt="" coords="5,80,157,107"/><area shape="rect" id="node5" href="isis__circuit_8c.html" title="isisd/isis_circuit.c" alt="" coords="182,80,308,107"/><area shape="rect" id="node7" href="isis__csm_8c.html" title="isisd/isis_csm.c" alt="" coords="333,80,448,107"/><area shape="rect" id="node9" href="isis__dr_8c.html" title="isisd/isis_dr.c" alt="" coords="473,80,575,107"/><area shape="rect" id="node11" href="isis__dynhn_8c.html" title="isisd/isis_dynhn.c" alt="" coords="599,80,725,107"/><area shape="rect" id="node13" href="isis__events_8c.html" title="isisd/isis_events.c" alt="" coords="751,80,884,107"/><area shape="rect" id="node15" href="isis__lsp_8c.html" title="isisd/isis_lsp.c" alt="" coords="908,80,1017,107"/><area shape="rect" id="node17" href="isis__misc_8c.html" title="isisd/isis_misc.c" alt="" coords="1042,80,1160,107"/><area shape="rect" id="node19" href="isis__pdu_8c.html" title="isisd/isis_pdu.c" alt="" coords="1185,80,1300,107"/><area shape="rect" id="node21" href="isis__route_8c.html" title="isisd/isis_route.c" alt="" coords="1324,80,1447,107"/><area shape="rect" id="node23" href="isis__routemap_8c.html" title="isisd/isis_routemap.c" alt="" coords="1471,80,1620,107"/><area shape="rect" id="node25" href="isis__spf_8c.html" title="isisd/isis_spf.c" alt="" coords="1645,80,1755,107"/><area shape="rect" id="node27" href="isis__tlv_8c.html" title="isisd/isis_tlv.c" alt="" coords="1780,80,1887,107"/><area shape="rect" id="node29" href="isisd_8c.html" title="isisd/isisd.c" alt="" coords="1911,80,2003,107"/></map>
</div>
</div>
<p><a href="isis__misc_8h_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__misc_8h.html#a3eb367edc811df308fe3dbcd31318d3c">GETSYSID</a>(A, L)&#160;&#160;&#160;(A-&gt;<a class="el" href="structarea__addr.html">area_addr</a> + (A-&gt;addr_len - (L + 1)))</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__misc_8h.html#a8011aad3edacabe7850c23b5725a8f51">SECS_PER_MINUTE</a>&#160;&#160;&#160;60</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__misc_8h.html#a11528d10d5838afd2d0ec2f5841167cf">SECS_PER_HOUR</a>&#160;&#160;&#160;3600</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__misc_8h.html#ae6bc10904b2b09a717f1fb81cce017de">SECS_PER_DAY</a>&#160;&#160;&#160;86400</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__misc_8h.html#a1e3f1ac0a4b60f9a7a14641ff701bc33">SECS_PER_WEEK</a>&#160;&#160;&#160;604800</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__misc_8h.html#a8c8fff08c951b5f8702ad6f92c53d788">SECS_PER_MONTH</a>&#160;&#160;&#160;2628000</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__misc_8h.html#ae8eebe70a02e029d2834cf0a228fa547">SECS_PER_YEAR</a>&#160;&#160;&#160;31536000</td></tr>
<tr><td colspan="2"><h2><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom">{ <a class="el" href="isis__misc_8h.html#aaf105ae5beaca1dee30ae54530691fcea9b67ed2ae41434b0cc2a75d7be8b9576">ISIS_UI_LEVEL_BRIEF</a>, 
<a class="el" href="isis__misc_8h.html#aaf105ae5beaca1dee30ae54530691fcea92418876d4e4e759a009d13598364ae4">ISIS_UI_LEVEL_DETAIL</a>, 
<a class="el" href="isis__misc_8h.html#aaf105ae5beaca1dee30ae54530691fcea50265521252da3537aeaadd0ad03505f">ISIS_UI_LEVEL_EXTENSIVE</a>
 }</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__misc_8h.html#a53aed5294cc41900107e4e660ebe7dc5">string2circuit_t</a> (const u_char *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__misc_8h.html#a8eed42d3a71109a9fb98e42468a9925b">circuit_t2string</a> (int)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__misc_8h.html#a1b7a6264816a839e7ef875d91f1e1e4f">syst2string</a> (int)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct in_addr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__misc_8h.html#af795aa21c24ab7f8e6e942be669bfc34">newprefix2inaddr</a> (u_char *prefix_start, u_char prefix_masklen)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__misc_8h.html#a9c135e3de821a3b0c55d04d25952ce7e">dotformat2buff</a> (u_char *, const u_char *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__misc_8h.html#a1a4249382258d9bd451a6fc81fe26985">sysid2buff</a> (u_char *, const u_char *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__misc_8h.html#ac9d0bc22c17a931c8575205a45088a57">isonet_print</a> (u_char *, int len)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__misc_8h.html#aaab68be55f90f8cf2337042bbc402af3">sysid_print</a> (u_char *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__misc_8h.html#ad9460f55b1f9cc46f18da446a69cd47e">snpa_print</a> (u_char *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__misc_8h.html#a084a9ae632046a52e881a7f54f283593">rawlspid_print</a> (u_char *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__misc_8h.html#a1a566bbaaf973bc6447a5860dc7822d0">time2string</a> (u_int32_t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__misc_8h.html#a2a090b6fb488f74d31f534d125a6710d">nlpid2string</a> (struct <a class="el" href="structnlpids.html">nlpids</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__misc_8h.html#a8ede5433e1d31781300c8d5d123844f2">speaks</a> (struct <a class="el" href="structnlpids.html">nlpids</a> *<a class="el" href="structnlpids.html">nlpids</a>, int family)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__misc_8h.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (unsigned long timer, unsigned long jitter)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__misc_8h.html#a5fc76e0c3f105d5a4ff9a9396e0fdbd7">unix_hostname</a> (void)</td></tr>
</table>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="a3eb367edc811df308fe3dbcd31318d3c"></a><!-- doxytag: member="isis_misc.h::GETSYSID" ref="a3eb367edc811df308fe3dbcd31318d3c" args="(A, L)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GETSYSID</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">A, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">L&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;(A-&gt;<a class="el" href="structarea__addr.html">area_addr</a> + (A-&gt;addr_len - (L + 1)))</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__misc_8h_source.html#l00060">60</a> of file <a class="el" href="isis__misc_8h_source.html">isis_misc.h</a>.</p>

</div>
</div>
<a class="anchor" id="ae6bc10904b2b09a717f1fb81cce017de"></a><!-- doxytag: member="isis_misc.h::SECS_PER_DAY" ref="ae6bc10904b2b09a717f1fb81cce017de" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SECS_PER_DAY&#160;&#160;&#160;86400</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__misc_8h_source.html#l00066">66</a> of file <a class="el" href="isis__misc_8h_source.html">isis_misc.h</a>.</p>

</div>
</div>
<a class="anchor" id="a11528d10d5838afd2d0ec2f5841167cf"></a><!-- doxytag: member="isis_misc.h::SECS_PER_HOUR" ref="a11528d10d5838afd2d0ec2f5841167cf" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SECS_PER_HOUR&#160;&#160;&#160;3600</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__misc_8h_source.html#l00065">65</a> of file <a class="el" href="isis__misc_8h_source.html">isis_misc.h</a>.</p>

</div>
</div>
<a class="anchor" id="a8011aad3edacabe7850c23b5725a8f51"></a><!-- doxytag: member="isis_misc.h::SECS_PER_MINUTE" ref="a8011aad3edacabe7850c23b5725a8f51" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SECS_PER_MINUTE&#160;&#160;&#160;60</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__misc_8h_source.html#l00064">64</a> of file <a class="el" href="isis__misc_8h_source.html">isis_misc.h</a>.</p>

</div>
</div>
<a class="anchor" id="a8c8fff08c951b5f8702ad6f92c53d788"></a><!-- doxytag: member="isis_misc.h::SECS_PER_MONTH" ref="a8c8fff08c951b5f8702ad6f92c53d788" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SECS_PER_MONTH&#160;&#160;&#160;2628000</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__misc_8h_source.html#l00068">68</a> of file <a class="el" href="isis__misc_8h_source.html">isis_misc.h</a>.</p>

</div>
</div>
<a class="anchor" id="a1e3f1ac0a4b60f9a7a14641ff701bc33"></a><!-- doxytag: member="isis_misc.h::SECS_PER_WEEK" ref="a1e3f1ac0a4b60f9a7a14641ff701bc33" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SECS_PER_WEEK&#160;&#160;&#160;604800</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__misc_8h_source.html#l00067">67</a> of file <a class="el" href="isis__misc_8h_source.html">isis_misc.h</a>.</p>

</div>
</div>
<a class="anchor" id="ae8eebe70a02e029d2834cf0a228fa547"></a><!-- doxytag: member="isis_misc.h::SECS_PER_YEAR" ref="ae8eebe70a02e029d2834cf0a228fa547" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SECS_PER_YEAR&#160;&#160;&#160;31536000</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__misc_8h_source.html#l00069">69</a> of file <a class="el" href="isis__misc_8h_source.html">isis_misc.h</a>.</p>

</div>
</div>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="aaf105ae5beaca1dee30ae54530691fce"></a><!-- doxytag: member="isis_misc.h::@16" ref="aaf105ae5beaca1dee30ae54530691fce" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">anonymous enum</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="aaf105ae5beaca1dee30ae54530691fcea9b67ed2ae41434b0cc2a75d7be8b9576"></a><!-- doxytag: member="ISIS_UI_LEVEL_BRIEF" ref="aaf105ae5beaca1dee30ae54530691fcea9b67ed2ae41434b0cc2a75d7be8b9576" args="" -->ISIS_UI_LEVEL_BRIEF</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="aaf105ae5beaca1dee30ae54530691fcea92418876d4e4e759a009d13598364ae4"></a><!-- doxytag: member="ISIS_UI_LEVEL_DETAIL" ref="aaf105ae5beaca1dee30ae54530691fcea92418876d4e4e759a009d13598364ae4" args="" -->ISIS_UI_LEVEL_DETAIL</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="aaf105ae5beaca1dee30ae54530691fcea50265521252da3537aeaadd0ad03505f"></a><!-- doxytag: member="ISIS_UI_LEVEL_EXTENSIVE" ref="aaf105ae5beaca1dee30ae54530691fcea50265521252da3537aeaadd0ad03505f" args="" -->ISIS_UI_LEVEL_EXTENSIVE</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="isis__misc_8h_source.html#l00071">71</a> of file <a class="el" href="isis__misc_8h_source.html">isis_misc.h</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="isis__misc_8h.html#aaf105ae5beaca1dee30ae54530691fcea9b67ed2ae41434b0cc2a75d7be8b9576">ISIS_UI_LEVEL_BRIEF</a>,
  <a class="code" href="isis__misc_8h.html#aaf105ae5beaca1dee30ae54530691fcea92418876d4e4e759a009d13598364ae4">ISIS_UI_LEVEL_DETAIL</a>,
  <a class="code" href="isis__misc_8h.html#aaf105ae5beaca1dee30ae54530691fcea50265521252da3537aeaadd0ad03505f">ISIS_UI_LEVEL_EXTENSIVE</a>,
};
</pre></div>
</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a8eed42d3a71109a9fb98e42468a9925b"></a><!-- doxytag: member="isis_misc.h::circuit_t2string" ref="a8eed42d3a71109a9fb98e42468a9925b" args="(int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* circuit_t2string </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__misc_8c_source.html#l00293">293</a> of file <a class="el" href="isis__misc_8c_source.html">isis_misc.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">switch</span> (<a class="code" href="isis__pdu_8h.html#a4237fb9b680bb5a92208b7e02eccb6a1">circuit_t</a>)
    {
    <span class="keywordflow">case</span> <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>:
      <span class="keywordflow">return</span> <span class="stringliteral">&quot;L1&quot;</span>;
    <span class="keywordflow">case</span> <a class="code" href="isis__constants_8h.html#a9daa7fbf09b604c718f3bbe189aedd1a">IS_LEVEL_2</a>:
      <span class="keywordflow">return</span> <span class="stringliteral">&quot;L2&quot;</span>;
    <span class="keywordflow">case</span> <a class="code" href="isis__constants_8h.html#a9906fe43cc332e34827b3c233d509da6">IS_LEVEL_1_AND_2</a>:
      <span class="keywordflow">return</span> <span class="stringliteral">&quot;L1L2&quot;</span>;
    <span class="keywordflow">default</span>:
      <span class="keywordflow">return</span> <span class="stringliteral">&quot;??&quot;</span>;
    }

  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;          <span class="comment">/* not reached */</span>
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9c135e3de821a3b0c55d04d25952ce7e"></a><!-- doxytag: member="isis_misc.h::dotformat2buff" ref="a9c135e3de821a3b0c55d04d25952ce7e" args="(u_char *, const u_char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int dotformat2buff </td>
          <td>(</td>
          <td class="paramtype">u_char *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const u_char *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__misc_8c_source.html#l00102">102</a> of file <a class="el" href="isis__misc_8c_source.html">isis_misc.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> dotlen, len = 0;
  <span class="keyword">const</span> u_char *pos = dotted;
  u_char number[3];
  <span class="keywordtype">int</span> nextdotpos = 2;

  number[2] = <span class="charliteral">&#39;\0&#39;</span>;
  dotlen = strlen(dotted);
  <span class="keywordflow">if</span> (dotlen &gt; 50)
    {
      <span class="comment">/* this can&#39;t be an iso net, its too long */</span>
      <span class="keywordflow">return</span> 0;
    }

  <span class="keywordflow">while</span> ((pos - dotted) &lt; dotlen &amp;&amp; len &lt; 20)
    {
      <span class="keywordflow">if</span> (*pos == <span class="charliteral">&#39;.&#39;</span>)
    {
      <span class="comment">/* we expect the . at 2, and than every 5 */</span>
      <span class="keywordflow">if</span> ((pos - dotted) != nextdotpos)
        {
          len = 0;
          <span class="keywordflow">break</span>;
        }
      nextdotpos += 5;
      pos++;
      <span class="keywordflow">continue</span>;
    }
      <span class="comment">/* we must have at least two chars left here */</span>
      <span class="keywordflow">if</span> (dotlen - (pos - dotted) &lt; 2)
    {
      len = 0;
      <span class="keywordflow">break</span>;
    }

      <span class="keywordflow">if</span> ((isxdigit ((<span class="keywordtype">int</span>) *pos)) &amp;&amp; (isxdigit ((<span class="keywordtype">int</span>) *(pos + 1))))
    {
      <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (number, pos, 2);
      pos += 2;
    }
      <span class="keywordflow">else</span>
    {
      len = 0;
      <span class="keywordflow">break</span>;
    }

      *(buff + len) = (<span class="keywordtype">char</span>) strtol ((<span class="keywordtype">char</span> *)number, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 16);
      len++;
    }

  <span class="keywordflow">return</span> len;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a177a75676b1916fefb4eb7275911fb6e"></a><!-- doxytag: member="isis_misc.h::isis_jitter" ref="a177a75676b1916fefb4eb7275911fb6e" args="(unsigned long timer, unsigned long jitter)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long isis_jitter </td>
          <td>(</td>
          <td class="paramtype">unsigned long&#160;</td>
          <td class="paramname"><em>timer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long&#160;</td>
          <td class="paramname"><em>jitter</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__misc_8c_source.html#l00458">458</a> of file <a class="el" href="isis__misc_8c_source.html">isis_misc.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a7113d77fc628f14d4e7d1262969c613e">j</a>, <a class="code" href="spgrid_8c.html#a166d56cfd4c4c4d27db0bd3cd0fe81d9">k</a>;

  <span class="keywordflow">if</span> (jitter &gt;= 100)
    <span class="keywordflow">return</span> <a class="code" href="random_8c.html#ac71a666826c99a00c3d91f6c1c28dd26">timer</a>;

  <span class="keywordflow">if</span> (<a class="code" href="random_8c.html#ac71a666826c99a00c3d91f6c1c28dd26">timer</a> == 1)
    <span class="keywordflow">return</span> <a class="code" href="random_8c.html#ac71a666826c99a00c3d91f6c1c28dd26">timer</a>;
  <span class="comment">/* </span>
<span class="comment">   * randomizing just the percent value provides</span>
<span class="comment">   * no good random numbers - hence the spread</span>
<span class="comment">   * to RANDOM_SPREAD (100000), which is ok as</span>
<span class="comment">   * most IS-IS timers are no longer than 16 bit</span>
<span class="comment">   */</span>

  j = 1 + (int) ((<a class="code" href="isis__constants_8h.html#af51c0f778fef1393ff674bd664400b68">RANDOM_SPREAD</a> * rand ()) / (RAND_MAX + 1.0));

  k = <a class="code" href="random_8c.html#ac71a666826c99a00c3d91f6c1c28dd26">timer</a> - (<a class="code" href="random_8c.html#ac71a666826c99a00c3d91f6c1c28dd26">timer</a> * (100 - jitter)) / 100;

  <a class="code" href="random_8c.html#ac71a666826c99a00c3d91f6c1c28dd26">timer</a> = <a class="code" href="random_8c.html#ac71a666826c99a00c3d91f6c1c28dd26">timer</a> - (k * j / <a class="code" href="isis__constants_8h.html#af51c0f778fef1393ff674bd664400b68">RANDOM_SPREAD</a>);

  <span class="keywordflow">return</span> <a class="code" href="random_8c.html#ac71a666826c99a00c3d91f6c1c28dd26">timer</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac9d0bc22c17a931c8575205a45088a57"></a><!-- doxytag: member="isis_misc.h::isonet_print" ref="ac9d0bc22c17a931c8575205a45088a57" args="(u_char *, int len)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* isonet_print </td>
          <td>(</td>
          <td class="paramtype">u_char *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__misc_8c_source.html#l00063">63</a> of file <a class="el" href="isis__misc_8c_source.html">isis_misc.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a> = 0;
  <span class="keywordtype">char</span> *pos = <a class="code" href="isis__misc_8c.html#a3abd829eb25fcb895161e33760809d31">isonet</a>;

  <span class="keywordflow">if</span> (!from)
    <span class="keywordflow">return</span> <span class="stringliteral">&quot;unknown&quot;</span>;

  <span class="keywordflow">while</span> (i &lt; len)
    {
      <span class="keywordflow">if</span> (i &amp; 1)
    {
      sprintf (pos, <span class="stringliteral">&quot;%02x&quot;</span>, *(from + i));
      pos += 2;
    }
      <span class="keywordflow">else</span>
    {
      <span class="keywordflow">if</span> (i == (len - 1))
        {           <span class="comment">/* No dot at the end of address */</span>
          sprintf (pos, <span class="stringliteral">&quot;%02x&quot;</span>, *(from + i));
          pos += 2;
        }
      <span class="keywordflow">else</span>
        {
          sprintf (pos, <span class="stringliteral">&quot;%02x.&quot;</span>, *(from + i));
          pos += 3;
        }
    }
      i++;
    }
  *(pos) = <span class="charliteral">&#39;\0&#39;</span>;
  <span class="keywordflow">return</span> <a class="code" href="isis__misc_8c.html#a3abd829eb25fcb895161e33760809d31">isonet</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af795aa21c24ab7f8e6e942be669bfc34"></a><!-- doxytag: member="isis_misc.h::newprefix2inaddr" ref="af795aa21c24ab7f8e6e942be669bfc34" args="(u_char *prefix_start, u_char prefix_masklen)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct in_addr newprefix2inaddr </td>
          <td>(</td>
          <td class="paramtype">u_char *&#160;</td>
          <td class="paramname"><em>prefix_start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_char&#160;</td>
          <td class="paramname"><em>prefix_masklen</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__misc_8c_source.html#l00484">484</a> of file <a class="el" href="isis__misc_8c_source.html">isis_misc.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  memset (&amp;<a class="code" href="isis__misc_8c.html#a99c2abe39d2c14920740dc65e00b0c54">new_prefix</a>, 0, <span class="keyword">sizeof</span> (<a class="code" href="isis__misc_8c.html#a99c2abe39d2c14920740dc65e00b0c54">new_prefix</a>));
  <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;<a class="code" href="isis__misc_8c.html#a99c2abe39d2c14920740dc65e00b0c54">new_prefix</a>, prefix_start, (prefix_masklen &amp; 0x3F) ?
      ((((prefix_masklen &amp; 0x3F) - 1) &gt;&gt; 3) + 1) : 0);
  <span class="keywordflow">return</span> <a class="code" href="isis__misc_8c.html#a99c2abe39d2c14920740dc65e00b0c54">new_prefix</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a2a090b6fb488f74d31f534d125a6710d"></a><!-- doxytag: member="isis_misc.h::nlpid2string" ref="a2a090b6fb488f74d31f534d125a6710d" args="(struct nlpids *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* nlpid2string </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structnlpids.html">nlpids</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__misc_8c_source.html#l00211">211</a> of file <a class="el" href="isis__misc_8c_source.html">isis_misc.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">char</span> *pos = <a class="code" href="isis__misc_8c.html#ab9687c731ec52b291707b90bab29f56d">nlpidstring</a>;
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

  <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="structnlpids.html">nlpids</a>-&gt;<a class="code" href="structnlpids.html#a73f0f5f1e7aa64694d5802b91af6533b">count</a>; i++)
    {
      <span class="keywordflow">switch</span> (<a class="code" href="structnlpids.html">nlpids</a>-&gt;<a class="code" href="structnlpids.html#a6dbd263750da21187880986a50fd5857">nlpids</a>[i])
    {
    <span class="keywordflow">case</span> <a class="code" href="isis__constants_8h.html#a9c1ffc4a81108d901cd8914d20cd4caf">NLPID_IP</a>:
      pos += sprintf (pos, <span class="stringliteral">&quot;IPv4&quot;</span>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="isis__constants_8h.html#af33b1ac580353b4a2ec3b766d5f90464">NLPID_IPV6</a>:
      pos += sprintf (pos, <span class="stringliteral">&quot;IPv6&quot;</span>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="isis__constants_8h.html#aa253a0e203801099e64cce9fdc94ed8c">NLPID_SNAP</a>:
      pos += sprintf (pos, <span class="stringliteral">&quot;SNAP&quot;</span>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="isis__constants_8h.html#a5e299355ebc145c326b433237001cd1b">NLPID_CLNP</a>:
      pos += sprintf (pos, <span class="stringliteral">&quot;CLNP&quot;</span>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="isis__constants_8h.html#a37028f03325d11e1debc3664c367a5f7">NLPID_ESIS</a>:
      pos += sprintf (pos, <span class="stringliteral">&quot;ES-IS&quot;</span>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">default</span>:
      pos += sprintf (pos, <span class="stringliteral">&quot;unknown&quot;</span>);
      <span class="keywordflow">break</span>;
    }
      <span class="keywordflow">if</span> (<a class="code" href="structnlpids.html">nlpids</a>-&gt;<a class="code" href="structnlpids.html#a73f0f5f1e7aa64694d5802b91af6533b">count</a> - i &gt; 1)
    pos += sprintf (pos, <span class="stringliteral">&quot;, &quot;</span>);

    }

  *(pos) = <span class="charliteral">&#39;\0&#39;</span>;

  <span class="keywordflow">return</span> <a class="code" href="isis__misc_8c.html#ab9687c731ec52b291707b90bab29f56d">nlpidstring</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a084a9ae632046a52e881a7f54f283593"></a><!-- doxytag: member="isis_misc.h::rawlspid_print" ref="a084a9ae632046a52e881a7f54f283593" args="(u_char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* rawlspid_print </td>
          <td>(</td>
          <td class="paramtype">u_char *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__misc_8c_source.html#l00398">398</a> of file <a class="el" href="isis__misc_8c_source.html">isis_misc.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">char</span> *pos = <a class="code" href="isis__misc_8c.html#ac0016d3200b8885e05d151ca16ef4315">lspid</a>;
  <span class="keywordflow">if</span> (!from)
    <span class="keywordflow">return</span> <span class="stringliteral">&quot;unknown&quot;</span>;
  <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (pos, <a class="code" href="isis__misc_8c.html#aabccf63144f92eecd0eb77f24ee98529">sysid_print</a> (from), 15);
  pos += 14;
  sprintf (pos, <span class="stringliteral">&quot;.%02x&quot;</span>, <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (from));
  pos += 3;
  sprintf (pos, <span class="stringliteral">&quot;-%02x&quot;</span>, <a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (from));
  pos += 3;

  *(pos) = <span class="charliteral">&#39;\0&#39;</span>;

  <span class="keywordflow">return</span> <a class="code" href="isis__misc_8c.html#ac0016d3200b8885e05d151ca16ef4315">lspid</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad9460f55b1f9cc46f18da446a69cd47e"></a><!-- doxytag: member="isis_misc.h::snpa_print" ref="ad9460f55b1f9cc46f18da446a69cd47e" args="(u_char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* snpa_print </td>
          <td>(</td>
          <td class="paramtype">u_char *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__misc_8c_source.html#l00334">334</a> of file <a class="el" href="isis__misc_8c_source.html">isis_misc.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a> = 0;
  u_char *pos = (u_char *)<a class="code" href="isis__misc_8c.html#aa1751dc9ca6ba209edc0f7f8e51e1d11">snpa</a>;

  <span class="keywordflow">if</span> (!from)
    <span class="keywordflow">return</span> <span class="stringliteral">&quot;unknown&quot;</span>;

  <span class="keywordflow">while</span> (i &lt; <a class="code" href="isis__constants_8h.html#a9822d89774e0d6ddaa06503950130423">ETH_ALEN</a> - 1)
    {
      <span class="keywordflow">if</span> (i &amp; 1)
    {
      sprintf ((<span class="keywordtype">char</span> *)pos, <span class="stringliteral">&quot;%02x.&quot;</span>, *(from + i));
      pos += 3;
    }
      <span class="keywordflow">else</span>
    {
      sprintf ((<span class="keywordtype">char</span> *)pos, <span class="stringliteral">&quot;%02x&quot;</span>, *(from + i));
      pos += 2;

    }
      i++;
    }

  sprintf ((<span class="keywordtype">char</span> *)pos, <span class="stringliteral">&quot;%02x&quot;</span>, *(from + (<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> - 1)));
  pos += 2;
  *(pos) = <span class="charliteral">&#39;\0&#39;</span>;

  <span class="keywordflow">return</span> <a class="code" href="isis__misc_8c.html#aa1751dc9ca6ba209edc0f7f8e51e1d11">snpa</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a8ede5433e1d31781300c8d5d123844f2"></a><!-- doxytag: member="isis_misc.h::speaks" ref="a8ede5433e1d31781300c8d5d123844f2" args="(struct nlpids *nlpids, int family)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int speaks </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structnlpids.html">nlpids</a> *&#160;</td>
          <td class="paramname"><em>nlpids</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>family</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__misc_8c_source.html#l00253">253</a> of file <a class="el" href="isis__misc_8c_source.html">isis_misc.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>, <a class="code" href="isis__misc_8c.html#a8ede5433e1d31781300c8d5d123844f2">speaks</a> = 0;

  <span class="keywordflow">if</span> (nlpids == (<span class="keyword">struct</span> nlpids *) <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> <a class="code" href="isis__misc_8c.html#a8ede5433e1d31781300c8d5d123844f2">speaks</a>;
  <span class="keywordflow">for</span> (i = 0; i &lt; nlpids-&gt;<a class="code" href="structnlpids.html#a73f0f5f1e7aa64694d5802b91af6533b">count</a>; i++)
    {
      <span class="keywordflow">if</span> (family == AF_INET &amp;&amp; nlpids-&gt;<a class="code" href="structnlpids.html#a6dbd263750da21187880986a50fd5857">nlpids</a>[i] == <a class="code" href="isis__constants_8h.html#a9c1ffc4a81108d901cd8914d20cd4caf">NLPID_IP</a>)
    speaks = 1;
      <span class="keywordflow">if</span> (family == AF_INET6 &amp;&amp; nlpids-&gt;<a class="code" href="structnlpids.html#a6dbd263750da21187880986a50fd5857">nlpids</a>[i] == <a class="code" href="isis__constants_8h.html#af33b1ac580353b4a2ec3b766d5f90464">NLPID_IPV6</a>)
    speaks = 1;
    }

  <span class="keywordflow">return</span> <a class="code" href="isis__misc_8c.html#a8ede5433e1d31781300c8d5d123844f2">speaks</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a53aed5294cc41900107e4e660ebe7dc5"></a><!-- doxytag: member="isis_misc.h::string2circuit_t" ref="a53aed5294cc41900107e4e660ebe7dc5" args="(const u_char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int string2circuit_t </td>
          <td>(</td>
          <td class="paramtype">const u_char *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__misc_8c_source.html#l00274">274</a> of file <a class="el" href="isis__misc_8c_source.html">isis_misc.c</a>.</p>
<div class="fragment"><pre class="fragment">{

  <span class="keywordflow">if</span> (!<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>)
    <span class="keywordflow">return</span> 0;

  <span class="keywordflow">if</span> (!strcmp (<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, <span class="stringliteral">&quot;level-1&quot;</span>))
    <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>;

  <span class="keywordflow">if</span> (!strcmp (<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, <span class="stringliteral">&quot;level-2-only&quot;</span>) || !strcmp (<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, <span class="stringliteral">&quot;level-2&quot;</span>))
    <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a9daa7fbf09b604c718f3bbe189aedd1a">IS_LEVEL_2</a>;

  <span class="keywordflow">if</span> (!strcmp (<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, <span class="stringliteral">&quot;level-1-2&quot;</span>))
    <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a9906fe43cc332e34827b3c233d509da6">IS_LEVEL_1_AND_2</a>;

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a1a4249382258d9bd451a6fc81fe26985"></a><!-- doxytag: member="isis_misc.h::sysid2buff" ref="a1a4249382258d9bd451a6fc81fe26985" args="(u_char *, const u_char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int sysid2buff </td>
          <td>(</td>
          <td class="paramtype">u_char *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const u_char *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__misc_8c_source.html#l00160">160</a> of file <a class="el" href="isis__misc_8c_source.html">isis_misc.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> len = 0;
  <span class="keyword">const</span> u_char *pos = dotted;
  u_char number[3];

  number[2] = <span class="charliteral">&#39;\0&#39;</span>;
  <span class="comment">// surely not a sysid_string if not 14 length</span>
  <span class="keywordflow">if</span> (strlen (dotted) != 14)
    {
      <span class="keywordflow">return</span> 0;
    }

  <span class="keywordflow">while</span> (len &lt; <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>)
    {
      <span class="keywordflow">if</span> (*pos == <span class="charliteral">&#39;.&#39;</span>)
    {
      <span class="comment">/* the . is not positioned correctly */</span>
      <span class="keywordflow">if</span> (((pos - dotted) != 4) &amp;&amp; ((pos - dotted) != 9))
        {
          len = 0;
          <span class="keywordflow">break</span>;
        }
      pos++;
      <span class="keywordflow">continue</span>;
    }
      <span class="keywordflow">if</span> ((isxdigit ((<span class="keywordtype">int</span>) *pos)) &amp;&amp; (isxdigit ((<span class="keywordtype">int</span>) *(pos + 1))))
    {
      <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (number, pos, 2);
      pos += 2;
    }
      <span class="keywordflow">else</span>
    {
      len = 0;
      <span class="keywordflow">break</span>;
    }

      *(buff + len) = (<span class="keywordtype">char</span>) strtol ((<span class="keywordtype">char</span> *)number, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 16);
      len++;
    }

  <span class="keywordflow">return</span> len;

}
</pre></div>
</div>
</div>
<a class="anchor" id="aaab68be55f90f8cf2337042bbc402af3"></a><!-- doxytag: member="isis_misc.h::sysid_print" ref="aaab68be55f90f8cf2337042bbc402af3" args="(u_char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* sysid_print </td>
          <td>(</td>
          <td class="paramtype">u_char *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__misc_8c_source.html#l00366">366</a> of file <a class="el" href="isis__misc_8c_source.html">isis_misc.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a> = 0;
  <span class="keywordtype">char</span> *pos = <a class="code" href="isis__misc_8c.html#aba11fdf75896b0a0b94c02619b945c97">sysid</a>;

  <span class="keywordflow">if</span> (!from)
    <span class="keywordflow">return</span> <span class="stringliteral">&quot;unknown&quot;</span>;

  <span class="keywordflow">while</span> (i &lt; <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> - 1)
    {
      <span class="keywordflow">if</span> (i &amp; 1)
    {
      sprintf (pos, <span class="stringliteral">&quot;%02x.&quot;</span>, *(from + i));
      pos += 3;
    }
      <span class="keywordflow">else</span>
    {
      sprintf (pos, <span class="stringliteral">&quot;%02x&quot;</span>, *(from + i));
      pos += 2;

    }
      i++;
    }

  sprintf (pos, <span class="stringliteral">&quot;%02x&quot;</span>, *(from + (<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> - 1)));
  pos += 2;
  *(pos) = <span class="charliteral">&#39;\0&#39;</span>;

  <span class="keywordflow">return</span> <a class="code" href="isis__misc_8c.html#aba11fdf75896b0a0b94c02619b945c97">sysid</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a1b7a6264816a839e7ef875d91f1e1e4f"></a><!-- doxytag: member="isis_misc.h::syst2string" ref="a1b7a6264816a839e7ef875d91f1e1e4f" args="(int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* syst2string </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__misc_8c_source.html#l00311">311</a> of file <a class="el" href="isis__misc_8c_source.html">isis_misc.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">switch</span> (<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>)
    {
    <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4da0b5dc35b6ff6333177392a069af08ce1">ISIS_SYSTYPE_ES</a>:
      <span class="keywordflow">return</span> <span class="stringliteral">&quot;ES&quot;</span>;
    <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4da200778581ea795c59c48b27748eae10e">ISIS_SYSTYPE_IS</a>:
      <span class="keywordflow">return</span> <span class="stringliteral">&quot;IS&quot;</span>;
    <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4daddebdf6ea1f78c8503dd520854310078">ISIS_SYSTYPE_L1_IS</a>:
      <span class="keywordflow">return</span> <span class="stringliteral">&quot;1&quot;</span>;
    <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4da615d7aa9f3d08cd8360e1b04a0b8806b">ISIS_SYSTYPE_L2_IS</a>:
      <span class="keywordflow">return</span> <span class="stringliteral">&quot;2&quot;</span>;
    <span class="keywordflow">default</span>:
      <span class="keywordflow">return</span> <span class="stringliteral">&quot;??&quot;</span>;
    }

  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;          <span class="comment">/* not reached */</span>
}
</pre></div>
</div>
</div>
<a class="anchor" id="a1a566bbaaf973bc6447a5860dc7822d0"></a><!-- doxytag: member="isis_misc.h::time2string" ref="a1a566bbaaf973bc6447a5860dc7822d0" args="(u_int32_t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* time2string </td>
          <td>(</td>
          <td class="paramtype">u_int32_t&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__misc_8c_source.html#l00416">416</a> of file <a class="el" href="isis__misc_8c_source.html">isis_misc.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">char</span> *pos = <a class="code" href="isis__misc_8c.html#a3bba8e43b0b19a65a65afe53e9abe65a">datestring</a>;
  u_int32_t rest;

  <span class="keywordflow">if</span> (time == 0)
    <span class="keywordflow">return</span> <span class="stringliteral">&quot;-&quot;</span>;

  <span class="keywordflow">if</span> (time / <a class="code" href="isis__misc_8h.html#ae8eebe70a02e029d2834cf0a228fa547">SECS_PER_YEAR</a>)
    pos += sprintf (pos, <span class="stringliteral">&quot;%uY&quot;</span>, time / <a class="code" href="isis__misc_8h.html#ae8eebe70a02e029d2834cf0a228fa547">SECS_PER_YEAR</a>);
  rest = time % <a class="code" href="isis__misc_8h.html#ae8eebe70a02e029d2834cf0a228fa547">SECS_PER_YEAR</a>;
  <span class="keywordflow">if</span> (rest / <a class="code" href="isis__misc_8h.html#a8c8fff08c951b5f8702ad6f92c53d788">SECS_PER_MONTH</a>)
    pos += sprintf (pos, <span class="stringliteral">&quot;%uM&quot;</span>, rest / <a class="code" href="isis__misc_8h.html#a8c8fff08c951b5f8702ad6f92c53d788">SECS_PER_MONTH</a>);
  rest = rest % <a class="code" href="isis__misc_8h.html#a8c8fff08c951b5f8702ad6f92c53d788">SECS_PER_MONTH</a>;
  <span class="keywordflow">if</span> (rest / <a class="code" href="isis__misc_8h.html#a1e3f1ac0a4b60f9a7a14641ff701bc33">SECS_PER_WEEK</a>)
    pos += sprintf (pos, <span class="stringliteral">&quot;%uw&quot;</span>, rest / <a class="code" href="isis__misc_8h.html#a1e3f1ac0a4b60f9a7a14641ff701bc33">SECS_PER_WEEK</a>);
  rest = rest % <a class="code" href="isis__misc_8h.html#a1e3f1ac0a4b60f9a7a14641ff701bc33">SECS_PER_WEEK</a>;
  <span class="keywordflow">if</span> (rest / <a class="code" href="isis__misc_8h.html#ae6bc10904b2b09a717f1fb81cce017de">SECS_PER_DAY</a>)
    pos += sprintf (pos, <span class="stringliteral">&quot;%ud&quot;</span>, rest / <a class="code" href="isis__misc_8h.html#ae6bc10904b2b09a717f1fb81cce017de">SECS_PER_DAY</a>);
  rest = rest % <a class="code" href="isis__misc_8h.html#ae6bc10904b2b09a717f1fb81cce017de">SECS_PER_DAY</a>;
  <span class="keywordflow">if</span> (rest / <a class="code" href="isis__misc_8h.html#a11528d10d5838afd2d0ec2f5841167cf">SECS_PER_HOUR</a>)
    pos += sprintf (pos, <span class="stringliteral">&quot;%uh&quot;</span>, rest / <a class="code" href="isis__misc_8h.html#a11528d10d5838afd2d0ec2f5841167cf">SECS_PER_HOUR</a>);
  rest = rest % <a class="code" href="isis__misc_8h.html#a11528d10d5838afd2d0ec2f5841167cf">SECS_PER_HOUR</a>;
  <span class="keywordflow">if</span> (rest / <a class="code" href="isis__misc_8h.html#a8011aad3edacabe7850c23b5725a8f51">SECS_PER_MINUTE</a>)
    pos += sprintf (pos, <span class="stringliteral">&quot;%um&quot;</span>, rest / <a class="code" href="isis__misc_8h.html#a8011aad3edacabe7850c23b5725a8f51">SECS_PER_MINUTE</a>);
  rest = rest % <a class="code" href="isis__misc_8h.html#a8011aad3edacabe7850c23b5725a8f51">SECS_PER_MINUTE</a>;
  <span class="keywordflow">if</span> (rest)
    pos += sprintf (pos, <span class="stringliteral">&quot;%us&quot;</span>, rest);

  *(pos) = 0;

  <span class="keywordflow">return</span> <a class="code" href="isis__misc_8c.html#a3bba8e43b0b19a65a65afe53e9abe65a">datestring</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5fc76e0c3f105d5a4ff9a9396e0fdbd7"></a><!-- doxytag: member="isis_misc.h::unix_hostname" ref="a5fc76e0c3f105d5a4ff9a9396e0fdbd7" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* unix_hostname </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__misc_8c_source.html#l00497">497</a> of file <a class="el" href="isis__misc_8c_source.html">isis_misc.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">static</span> <span class="keyword">struct </span>utsname names;
  <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structhostname.html">hostname</a>;
  <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structhost.html">host</a> <a class="code" href="structhost.html">host</a>;

  hostname = <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#ae29a96977a9350ec0d4323ccd38ebc9b">name</a>;
  <span class="keywordflow">if</span> (!hostname)
    {
      uname (&amp;names);
      hostname = names.nodename;
    }

  <span class="keywordflow">return</span> hostname;
}
</pre></div>
</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="isis__misc_8h.html">isis_misc.h</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:20 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
