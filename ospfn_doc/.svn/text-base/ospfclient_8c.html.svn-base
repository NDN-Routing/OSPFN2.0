<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: ospfclient/ospfclient.c File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('ospfclient_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Defines</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">ospfclient/ospfclient.c File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="zebra_8h_source.html">zebra.h</a>&gt;</code><br/>
<code>#include &quot;<a class="el" href="prefix_8h_source.html">prefix.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="privs_8h_source.html">privs.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="log_8h_source.html">log.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="table_8h_source.html">table.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospfd_8h_source.html">ospfd/ospfd.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__asbr_8h_source.html">ospfd/ospf_asbr.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__lsa_8h_source.html">ospfd/ospf_lsa.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__opaque_8h_source.html">ospfd/ospf_opaque.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__api_8h_source.html">ospfd/ospf_api.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__apiclient_8h_source.html">ospf_apiclient.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__dump_8h_source.html">ospfd/ospf_dump.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="thread_8h_source.html">thread.h</a>&quot;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for ospfclient.c:</div>
<div class="dyncontent">
<div class="center"><img src="ospfclient_8c__incl.png" border="0" usemap="#ospfclient_2ospfclient_8c" alt=""/></div>
<map name="ospfclient_2ospfclient_8c" id="ospfclient_2ospfclient_8c">
<area shape="rect" id="node3" href="zebra_8h.html" title="zebra.h" alt="" coords="1575,155,1641,181"/><area shape="rect" id="node61" href="prefix_8h.html" title="prefix.h" alt="" coords="3114,229,3181,256"/><area shape="rect" id="node65" href="privs_8h.html" title="privs.h" alt="" coords="3295,80,3357,107"/><area shape="rect" id="node67" href="log_8h.html" title="log.h" alt="" coords="2798,229,2849,256"/><area shape="rect" id="node70" href="table_8h.html" title="table.h" alt="" coords="3383,80,3447,107"/><area shape="rect" id="node72" href="ospfd_8h.html" title="ospfd/ospfd.h" alt="" coords="2740,80,2847,107"/><area shape="rect" id="node82" href="ospf__asbr_8h.html" title="ospfd/ospf_asbr.h" alt="" coords="3471,80,3601,107"/><area shape="rect" id="node84" href="ospf__lsa_8h.html" title="ospfd/ospf_lsa.h" alt="" coords="3148,80,3271,107"/><area shape="rect" id="node89" href="ospf__opaque_8h.html" title="ospfd/ospf_opaque.h" alt="" coords="2871,80,3021,107"/><area shape="rect" id="node93" href="thread_8h.html" title="thread.h" alt="" coords="2996,229,3068,256"/><area shape="rect" id="node96" href="ospf__api_8h.html" title="ospfd/ospf_api.h" alt="" coords="3625,80,3748,107"/><area shape="rect" id="node98" href="ospf__apiclient_8h.html" title="ospf_apiclient.h" alt="" coords="3773,80,3891,107"/><area shape="rect" id="node100" href="ospf__dump_8h.html" title="ospfd/ospf_dump.h" alt="" coords="3916,80,4055,107"/><area shape="rect" id="node57" href="zassert_8h.html" title="zassert.h" alt="" coords="1525,229,1603,256"/><area shape="rect" id="node59" href="str_8h.html" title="str.h" alt="" coords="1627,229,1676,256"/><area shape="rect" id="node63" href="sockunion_8h.html" title="sockunion.h" alt="" coords="3101,304,3195,331"/><area shape="rect" id="node75" href="filter_8h.html" title="filter.h" alt="" coords="2835,155,2895,181"/><area shape="rect" id="node77" href="if_8h.html" title="if.h" alt="" coords="2875,229,2915,256"/><area shape="rect" id="node79" href="linklist_8h.html" title="linklist.h" alt="" coords="2859,304,2929,331"/><area shape="rect" id="node86" href="stream_8h.html" title="stream.h" alt="" coords="3160,155,3235,181"/><area shape="rect" id="node91" href="vty_8h.html" title="vty.h" alt="" coords="2921,155,2972,181"/></map>
</div>
</div>
<p><a href="ospfclient_8c_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structmy__opaque__lsa.html">my_opaque_lsa</a></td></tr>
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfclient_8c.html#a75d633bf6407c737d016e0690bcb2d3a">ASYNCPORT</a>&#160;&#160;&#160;4000</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfclient_8c.html#a6e06258bf5023de7705b0c15f93153d5">lsa_delete</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfclient_8c.html#a70ec769b647812cb6d023728761e922f">lsa_inject</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfclient_8c.html#afb258c6eecdc7da27d43de591dd388ba">get_router_nexthops</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfclient_8c.html#a6f2b7c919644798e75c8a2540a9c43c5">lsa_read</a> (struct <a class="el" href="structthread.html">thread</a> *<a class="el" href="structthread.html">thread</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfclient_8c.html#aad428d9875745fcef716aca47fb333a9">lsa_update_callback</a> (struct in_addr ifaddr, struct in_addr area_id, u_char is_self_originated, struct <a class="el" href="structlsa__header.html">lsa_header</a> *lsa)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfclient_8c.html#a38a3a5ae77b409561e53c4e835457abf">lsa_delete_callback</a> (struct in_addr ifaddr, struct in_addr area_id, u_char is_self_originated, struct <a class="el" href="structlsa__header.html">lsa_header</a> *lsa)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfclient_8c.html#ab8e40e3d32e8c43ded4e8c49d72361eb">ready_callback</a> (u_char lsa_type, u_char opaque_type, struct in_addr addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfclient_8c.html#a6fb050176efa11bed6399362d3b60bb2">new_if_callback</a> (struct in_addr ifaddr, struct in_addr area_id)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfclient_8c.html#a7688afd440d4917dcebc81844b40b024">del_if_callback</a> (struct in_addr ifaddr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfclient_8c.html#a16e580b288ae51e09148d44d1d075cbf">ism_change_callback</a> (struct in_addr ifaddr, struct in_addr area_id, u_char state)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfclient_8c.html#aaa137818c721bed4e592a1cd947884c2">nsm_change_callback</a> (struct in_addr ifaddr, struct in_addr nbraddr, struct in_addr router_id, u_char state)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfclient_8c.html#a947ae479f43fdc7a1707abf97eba9a59">router_routing_table_change_callback</a> (struct in_addr router_id, int nexthop_count, struct in_addr *nexthops)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfclient_8c.html#addea2018e480eece49bb50115d8f6ab9">usage</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfclient_8c.html#a0ddf1224851353fc92bfbff6f499fa97">main</a> (int argc, char *argv[])</td></tr>
<tr><td colspan="2"><h2><a name="var-members"></a>
Variables</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structzebra__privs__t.html">zebra_privs_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfclient_8c.html#a98d4a63d037cb8c579f44baa2f9801a2">ospfd_privs</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structthread__master.html">thread_master</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfclient_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__apiclient.html">ospf_apiclient</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfclient_8c.html#ae5e9b6a994307efccbb6ab8b2eb0077a">oclient</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">char **&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospfclient_8c.html#aa24f72e6a4d6a997528142211b375496">args</a></td></tr>
</table>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="a75d633bf6407c737d016e0690bcb2d3a"></a><!-- doxytag: member="ospfclient.c::ASYNCPORT" ref="a75d633bf6407c737d016e0690bcb2d3a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ASYNCPORT&#160;&#160;&#160;4000</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfclient_8c_source.html#l00047">47</a> of file <a class="el" href="ospfclient_8c_source.html">ospfclient.c</a>.</p>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a7688afd440d4917dcebc81844b40b024"></a><!-- doxytag: member="ospfclient.c::del_if_callback" ref="a7688afd440d4917dcebc81844b40b024" args="(struct in_addr ifaddr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void del_if_callback </td>
          <td>(</td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>ifaddr</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfclient_8c_source.html#l00243">243</a> of file <a class="el" href="ospfclient_8c_source.html">ospfclient.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  printf (<span class="stringliteral">&quot;new_if_callback: ifaddr: %s\n &quot;</span>, inet_ntoa (ifaddr));
}
</pre></div>
</div>
</div>
<a class="anchor" id="afb258c6eecdc7da27d43de591dd388ba"></a><!-- doxytag: member="ospfclient.c::get_router_nexthops" ref="afb258c6eecdc7da27d43de591dd388ba" args="(struct thread *t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int get_router_nexthops </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>t</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfclient_8c_source.html#l00129">129</a> of file <a class="el" href="ospfclient_8c_source.html">ospfclient.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__apiclient.html">ospf_apiclient</a> *<a class="code" href="ospfclient_8c.html#ae5e9b6a994307efccbb6ab8b2eb0077a">oclient</a>;
  <span class="keyword">struct </span>in_addr router_id;
  <span class="keywordtype">int</span> rc;

  oclient = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a>(t);
  <a class="code" href="sockunion_8c.html#a4203367afaacee3fa5cc1626b2ef63c0">inet_aton</a>(<span class="stringliteral">&quot;150.135.82.104&quot;</span>, &amp;router_id);

  printf (<span class="stringliteral">&quot;getting router nexthops... &quot;</span>);
  rc = <a class="code" href="ospf__apiclient_8c.html#aa1030e129533ccab57fad62fcdece78f">ospf_apiclient_get_router_nexthops</a>(oclient, router_id);
  printf (<span class="stringliteral">&quot;done, return code is %d\n&quot;</span>, rc);

  <span class="keywordflow">return</span> rc;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a16e580b288ae51e09148d44d1d075cbf"></a><!-- doxytag: member="ospfclient.c::ism_change_callback" ref="a16e580b288ae51e09148d44d1d075cbf" args="(struct in_addr ifaddr, struct in_addr area_id, u_char state)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ism_change_callback </td>
          <td>(</td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>ifaddr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>area_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_char&#160;</td>
          <td class="paramname"><em>state</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfclient_8c_source.html#l00249">249</a> of file <a class="el" href="ospfclient_8c_source.html">ospfclient.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  printf (<span class="stringliteral">&quot;ism_change: ifaddr: %s &quot;</span>, inet_ntoa (ifaddr));
  printf (<span class="stringliteral">&quot;area_id: %s\n&quot;</span>, inet_ntoa (area_id));
  printf (<span class="stringliteral">&quot;state: %d [%s]\n&quot;</span>, state, <a class="code" href="log_8h.html#a3a4b1cad85aa6752f39580944e24a868">LOOKUP</a> (<a class="code" href="ospf__dump_8c.html#ae4c65baac757ab6ffaaf05421dd53b3a">ospf_ism_state_msg</a>, state));
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6e06258bf5023de7705b0c15f93153d5"></a><!-- doxytag: member="ospfclient.c::lsa_delete" ref="a6e06258bf5023de7705b0c15f93153d5" args="(struct thread *t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int lsa_delete </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>t</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfclient_8c_source.html#l00070">70</a> of file <a class="el" href="ospfclient_8c_source.html">ospfclient.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__apiclient.html">ospf_apiclient</a> *<a class="code" href="ospfclient_8c.html#ae5e9b6a994307efccbb6ab8b2eb0077a">oclient</a>;
  <span class="keyword">struct </span>in_addr area_id;
  <span class="keywordtype">int</span> rc;

  oclient = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (t);

  <a class="code" href="sockunion_8c.html#a4203367afaacee3fa5cc1626b2ef63c0">inet_aton</a> (<a class="code" href="spgrid_8c.html#a2c8d3fa6d7117d15dd5c2871ac548ec4">args</a>[6], &amp;area_id);

  printf (<span class="stringliteral">&quot;Deleting LSA... &quot;</span>);
  rc = <a class="code" href="ospf__apiclient_8c.html#af068227010b19eadaf3517e85bda0bc1">ospf_apiclient_lsa_delete</a> (oclient, 
                  area_id, 
                  atoi (<a class="code" href="spgrid_8c.html#a2c8d3fa6d7117d15dd5c2871ac548ec4">args</a>[2]),       <span class="comment">/* lsa type */</span>
                  atoi (<a class="code" href="spgrid_8c.html#a2c8d3fa6d7117d15dd5c2871ac548ec4">args</a>[3]),   <span class="comment">/* opaque type */</span>
                  atoi (<a class="code" href="spgrid_8c.html#a2c8d3fa6d7117d15dd5c2871ac548ec4">args</a>[4]));  <span class="comment">/* opaque ID */</span>
  printf (<span class="stringliteral">&quot;done, return code is = %d\n&quot;</span>, rc);
  <span class="keywordflow">return</span> rc;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a38a3a5ae77b409561e53c4e835457abf"></a><!-- doxytag: member="ospfclient.c::lsa_delete_callback" ref="a38a3a5ae77b409561e53c4e835457abf" args="(struct in_addr ifaddr, struct in_addr area_id, u_char is_self_originated, struct lsa_header *lsa)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void lsa_delete_callback </td>
          <td>(</td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>ifaddr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>area_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_char&#160;</td>
          <td class="paramname"><em>is_self_originated</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structlsa__header.html">lsa_header</a> *&#160;</td>
          <td class="paramname"><em>lsa</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfclient_8c_source.html#l00204">204</a> of file <a class="el" href="ospfclient_8c_source.html">ospfclient.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  printf (<span class="stringliteral">&quot;lsa_delete_callback: &quot;</span>);
  printf (<span class="stringliteral">&quot;ifaddr: %s &quot;</span>, inet_ntoa (ifaddr));
  printf (<span class="stringliteral">&quot;area: %s\n&quot;</span>, inet_ntoa (area_id));
  printf (<span class="stringliteral">&quot;is_self_origin: %u\n&quot;</span>, is_self_originated);

  <a class="code" href="ospf__dump_8c.html#a9f6f89130826976cb32a15187c88a397">ospf_lsa_header_dump</a> (lsa);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a70ec769b647812cb6d023728761e922f"></a><!-- doxytag: member="ospfclient.c::lsa_inject" ref="a70ec769b647812cb6d023728761e922f" args="(struct thread *t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int lsa_inject </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>t</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfclient_8c_source.html#l00091">91</a> of file <a class="el" href="ospfclient_8c_source.html">ospfclient.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__apiclient.html">ospf_apiclient</a> *<a class="code" href="spgrid_8c.html#a6dd5c44547ae6870b695e43bc05c9a24">cl</a>;
  <span class="keyword">struct </span>in_addr ifaddr;
  <span class="keyword">struct </span>in_addr area_id;
  u_char lsa_type;
  u_char opaque_type;
  u_int32_t opaque_id;
  <span class="keywordtype">void</span> *opaquedata;
  <span class="keywordtype">int</span> opaquelen;

  <span class="keyword">static</span> u_int32_t counter = 1; <span class="comment">/* Incremented each time invoked */</span>
  <span class="keywordtype">int</span> rc;

  cl = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (t);

  <a class="code" href="sockunion_8c.html#a4203367afaacee3fa5cc1626b2ef63c0">inet_aton</a> (<a class="code" href="spgrid_8c.html#a2c8d3fa6d7117d15dd5c2871ac548ec4">args</a>[5], &amp;ifaddr);
  <a class="code" href="sockunion_8c.html#a4203367afaacee3fa5cc1626b2ef63c0">inet_aton</a> (<a class="code" href="spgrid_8c.html#a2c8d3fa6d7117d15dd5c2871ac548ec4">args</a>[6], &amp;area_id);
  lsa_type = atoi (<a class="code" href="spgrid_8c.html#a2c8d3fa6d7117d15dd5c2871ac548ec4">args</a>[2]);
  opaque_type = atoi (<a class="code" href="spgrid_8c.html#a2c8d3fa6d7117d15dd5c2871ac548ec4">args</a>[3]);
  opaque_id = atoi (<a class="code" href="spgrid_8c.html#a2c8d3fa6d7117d15dd5c2871ac548ec4">args</a>[4]);
  opaquedata = &amp;counter;
  opaquelen = <span class="keyword">sizeof</span> (u_int32_t);

  printf (<span class="stringliteral">&quot;Originating/updating LSA with counter=%d... &quot;</span>, counter);
  rc = <a class="code" href="ospf__apiclient_8c.html#a0bddf5cada0954167e7361d59fcf8a97">ospf_apiclient_lsa_originate</a>(cl, ifaddr, area_id,
                    lsa_type,
                    opaque_type, opaque_id,
                    opaquedata, opaquelen);

  printf (<span class="stringliteral">&quot;done, return code is %d\n&quot;</span>, rc);

  counter++;

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6f2b7c919644798e75c8a2540a9c43c5"></a><!-- doxytag: member="ospfclient.c::lsa_read" ref="a6f2b7c919644798e75c8a2540a9c43c5" args="(struct thread *thread)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int lsa_read </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structthread.html">thread</a> *&#160;</td>
          <td class="paramname"><em>thread</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfclient_8c_source.html#l00148">148</a> of file <a class="el" href="ospfclient_8c_source.html">ospfclient.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__apiclient.html">ospf_apiclient</a> *<a class="code" href="ospfclient_8c.html#ae5e9b6a994307efccbb6ab8b2eb0077a">oclient</a>;
  <span class="keywordtype">int</span> fd;
  <span class="keywordtype">int</span> ret;

  printf (<span class="stringliteral">&quot;lsa_read called\n&quot;</span>);

  oclient = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
  fd = <a class="code" href="thread_8h.html#a89bd56f991717646441f9dffc010d4f5">THREAD_FD</a> (thread);

  <span class="comment">/* Handle asynchronous message */</span>
  ret = <a class="code" href="ospf__apiclient_8c.html#ac20dd71e28279edb1dcaa72837f44ee8">ospf_apiclient_handle_async</a> (oclient);
  <span class="keywordflow">if</span> (ret &lt; 0) {
    printf (<span class="stringliteral">&quot;Connection closed, exiting...&quot;</span>);
    <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a>(0);
  }

  <span class="comment">/* Reschedule read thread */</span>
  <a class="code" href="thread_8h.html#abd1714f11834a150c84b040c0c69b620">thread_add_read</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospfclient_8c.html#a6f2b7c919644798e75c8a2540a9c43c5">lsa_read</a>, oclient, fd);

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aad428d9875745fcef716aca47fb333a9"></a><!-- doxytag: member="ospfclient.c::lsa_update_callback" ref="aad428d9875745fcef716aca47fb333a9" args="(struct in_addr ifaddr, struct in_addr area_id, u_char is_self_originated, struct lsa_header *lsa)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void lsa_update_callback </td>
          <td>(</td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>ifaddr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>area_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_char&#160;</td>
          <td class="paramname"><em>is_self_originated</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structlsa__header.html">lsa_header</a> *&#160;</td>
          <td class="paramname"><em>lsa</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfclient_8c_source.html#l00178">178</a> of file <a class="el" href="ospfclient_8c_source.html">ospfclient.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  printf (<span class="stringliteral">&quot;lsa_update_callback: &quot;</span>);
  printf (<span class="stringliteral">&quot;ifaddr: %s &quot;</span>, inet_ntoa (ifaddr));
  printf (<span class="stringliteral">&quot;area: %s\n&quot;</span>, inet_ntoa (area_id));
  printf (<span class="stringliteral">&quot;is_self_origin: %u\n&quot;</span>, is_self_originated);

  <span class="comment">/* It is important to note that lsa_header does indeed include the</span>
<span class="comment">     header and the LSA payload. To access the payload, first check</span>
<span class="comment">     the LSA type and then typecast lsa into the corresponding type,</span>
<span class="comment">     e.g.:</span>
<span class="comment">     </span>
<span class="comment">     if (lsa-&gt;type == OSPF_ROUTER_LSA) {</span>
<span class="comment">       struct router_lsa *rl = (struct router_lsa) lsa;</span>
<span class="comment">       ...</span>
<span class="comment">       u_int16_t links = rl-&gt;links;</span>
<span class="comment">       ...</span>
<span class="comment">    }</span>
<span class="comment">  */</span>
       
  <a class="code" href="ospf__dump_8c.html#a9f6f89130826976cb32a15187c88a397">ospf_lsa_header_dump</a> (lsa);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a0ddf1224851353fc92bfbff6f499fa97"></a><!-- doxytag: member="ospfclient.c::main" ref="a0ddf1224851353fc92bfbff6f499fa97" args="(int argc, char *argv[])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int main </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>argv</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfclient_8c_source.html#l00300">300</a> of file <a class="el" href="ospfclient_8c_source.html">ospfclient.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structthread.html">thread</a> <a class="code" href="structthread.html">thread</a>;

  <a class="code" href="spgrid_8c.html#a2c8d3fa6d7117d15dd5c2871ac548ec4">args</a> = argv;

  <span class="comment">/* ospfclient should be started with the following arguments:</span>
<span class="comment">   * </span>
<span class="comment">   * (1) host (2) lsa_type (3) opaque_type (4) opaque_id (5) if_addr </span>
<span class="comment">   * (6) area_id</span>
<span class="comment">   * </span>
<span class="comment">   * host: name or IP of host where ospfd is running</span>
<span class="comment">   * lsa_type: 9, 10, or 11</span>
<span class="comment">   * opaque_type: 0-255 (e.g., experimental applications use &gt; 128) </span>
<span class="comment">   * opaque_id: arbitrary application instance (24 bits)</span>
<span class="comment">   * if_addr: interface IP address (for type 9) otherwise ignored</span>
<span class="comment">   * area_id: area in IP address format (for type 10) otherwise ignored</span>
<span class="comment">   */</span>

  <span class="keywordflow">if</span> (argc != 7)
    {
      <a class="code" href="bgp__main_8c.html#ab24f62159230cf265fc4d7ddc4c91872">usage</a>();
    }

  <span class="comment">/* Initialization */</span>
  <a class="code" href="privs_8c.html#ac6082c5377fb94942a842809eb508682">zprivs_init</a> (&amp;<a class="code" href="ospfclient_8c.html#a98d4a63d037cb8c579f44baa2f9801a2">ospfd_privs</a>);
  <a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a> = <a class="code" href="thread_8c.html#a6d9de673f4874d0c6b7f6a84b2e0e9cf">thread_master_create</a> ();

  <span class="comment">/* Open connection to OSPF daemon */</span>
  <a class="code" href="ospfclient_8c.html#ae5e9b6a994307efccbb6ab8b2eb0077a">oclient</a> = <a class="code" href="ospf__apiclient_8c.html#aca9f7a18d0d50ced1ce00f268fbfd1e3">ospf_apiclient_connect</a> (args[1], <a class="code" href="ospfclient_8c.html#a75d633bf6407c737d016e0690bcb2d3a">ASYNCPORT</a>);
  <span class="keywordflow">if</span> (!<a class="code" href="ospfclient_8c.html#ae5e9b6a994307efccbb6ab8b2eb0077a">oclient</a>)
    {
      printf (<span class="stringliteral">&quot;Connecting to OSPF daemon on %s failed!\n&quot;</span>,
          args[1]);
      <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a> (1);
    }

  <span class="comment">/* Register callback functions. */</span>
  <a class="code" href="ospf__apiclient_8c.html#a919781dff26dbaf91b9da60dc8b47f49">ospf_apiclient_register_callback</a> (<a class="code" href="ospfclient_8c.html#ae5e9b6a994307efccbb6ab8b2eb0077a">oclient</a>,
                    <a class="code" href="ospfclient_8c.html#ab8e40e3d32e8c43ded4e8c49d72361eb">ready_callback</a>,
                    <a class="code" href="ospfclient_8c.html#a6fb050176efa11bed6399362d3b60bb2">new_if_callback</a>,
                    <a class="code" href="ospfclient_8c.html#a7688afd440d4917dcebc81844b40b024">del_if_callback</a>,
                    <a class="code" href="ospfclient_8c.html#a16e580b288ae51e09148d44d1d075cbf">ism_change_callback</a>,
                    <a class="code" href="ospfclient_8c.html#aaa137818c721bed4e592a1cd947884c2">nsm_change_callback</a>,
                    <a class="code" href="ospfclient_8c.html#aad428d9875745fcef716aca47fb333a9">lsa_update_callback</a>, 
                    <a class="code" href="ospfclient_8c.html#a38a3a5ae77b409561e53c4e835457abf">lsa_delete_callback</a>,
                    <span class="comment">/* 08/25/2011 yic+ */</span>
                    <a class="code" href="ospfclient_8c.html#a947ae479f43fdc7a1707abf97eba9a59">router_routing_table_change_callback</a>);

  <span class="comment">/* Register LSA type and opaque type. */</span>
  <a class="code" href="ospf__apiclient_8c.html#aa095649109dd104d2c652c18ceae8cc9">ospf_apiclient_register_opaque_type</a> (<a class="code" href="ospfclient_8c.html#ae5e9b6a994307efccbb6ab8b2eb0077a">oclient</a>, atoi (args[2]),
                       atoi (args[3]));

  <span class="comment">/* Synchronize database with OSPF daemon. */</span>
  <a class="code" href="ospf__apiclient_8c.html#a30571f833f72d7e4c05021d0821477ea">ospf_apiclient_sync_lsdb</a> (<a class="code" href="ospfclient_8c.html#ae5e9b6a994307efccbb6ab8b2eb0077a">oclient</a>);

  <span class="comment">/* Schedule thread that handles asynchronous messages */</span>
  <a class="code" href="thread_8h.html#abd1714f11834a150c84b040c0c69b620">thread_add_read</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospfclient_8c.html#a6f2b7c919644798e75c8a2540a9c43c5">lsa_read</a>, <a class="code" href="ospfclient_8c.html#ae5e9b6a994307efccbb6ab8b2eb0077a">oclient</a>, <a class="code" href="ospfclient_8c.html#ae5e9b6a994307efccbb6ab8b2eb0077a">oclient</a>-&gt;<a class="code" href="structospf__apiclient.html#ae3a5f4d039db64a899c30196b35ecfaa">fd_async</a>);

  <span class="comment">/* Now connection is established, run loop */</span>
  <span class="keywordflow">while</span> (1)
    {
      <a class="code" href="thread_8c.html#a1674b380ab1baf464b4f541c0a938656">thread_fetch</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, &amp;<a class="code" href="structthread.html">thread</a>);
      <a class="code" href="thread_8c.html#aebb1b7a2cf2a872d69ab8c1e6f788744">thread_call</a> (&amp;<a class="code" href="structthread.html">thread</a>);
    }

  <span class="comment">/* Never reached */</span>
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6fb050176efa11bed6399362d3b60bb2"></a><!-- doxytag: member="ospfclient.c::new_if_callback" ref="a6fb050176efa11bed6399362d3b60bb2" args="(struct in_addr ifaddr, struct in_addr area_id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void new_if_callback </td>
          <td>(</td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>ifaddr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>area_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfclient_8c_source.html#l00236">236</a> of file <a class="el" href="ospfclient_8c_source.html">ospfclient.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  printf (<span class="stringliteral">&quot;new_if_callback: ifaddr: %s &quot;</span>, inet_ntoa (ifaddr));
  printf (<span class="stringliteral">&quot;area_id: %s\n&quot;</span>, inet_ntoa (area_id));
}
</pre></div>
</div>
</div>
<a class="anchor" id="aaa137818c721bed4e592a1cd947884c2"></a><!-- doxytag: member="ospfclient.c::nsm_change_callback" ref="aaa137818c721bed4e592a1cd947884c2" args="(struct in_addr ifaddr, struct in_addr nbraddr, struct in_addr router_id, u_char state)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void nsm_change_callback </td>
          <td>(</td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>ifaddr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>nbraddr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>router_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_char&#160;</td>
          <td class="paramname"><em>state</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfclient_8c_source.html#l00258">258</a> of file <a class="el" href="ospfclient_8c_source.html">ospfclient.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  printf (<span class="stringliteral">&quot;nsm_change: ifaddr: %s &quot;</span>, inet_ntoa (ifaddr));
  printf (<span class="stringliteral">&quot;nbraddr: %s\n&quot;</span>, inet_ntoa (nbraddr));
  printf (<span class="stringliteral">&quot;router_id: %s\n&quot;</span>, inet_ntoa (router_id));
  printf (<span class="stringliteral">&quot;state: %d [%s]\n&quot;</span>, state, <a class="code" href="log_8h.html#a3a4b1cad85aa6752f39580944e24a868">LOOKUP</a> (<a class="code" href="ospf__dump_8c.html#a7addd69d09415cd935c591a40b74ac46">ospf_nsm_state_msg</a>, state));
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab8e40e3d32e8c43ded4e8c49d72361eb"></a><!-- doxytag: member="ospfclient.c::ready_callback" ref="ab8e40e3d32e8c43ded4e8c49d72361eb" args="(u_char lsa_type, u_char opaque_type, struct in_addr addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ready_callback </td>
          <td>(</td>
          <td class="paramtype">u_char&#160;</td>
          <td class="paramname"><em>lsa_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_char&#160;</td>
          <td class="paramname"><em>opaque_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>addr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfclient_8c_source.html#l00217">217</a> of file <a class="el" href="ospfclient_8c_source.html">ospfclient.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  printf (<span class="stringliteral">&quot;ready_callback: lsa_type: %d opaque_type: %d addr=%s\n&quot;</span>,
      lsa_type, opaque_type, inet_ntoa (addr));

  <span class="comment">/* Schedule opaque LSA originate in 5 secs */</span>
  <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospfclient_8c.html#a70ec769b647812cb6d023728761e922f">lsa_inject</a>, <a class="code" href="ospfclient_8c.html#ae5e9b6a994307efccbb6ab8b2eb0077a">oclient</a>, 5);

  <span class="comment">/* Schedule opaque LSA update with new value */</span>
  <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospfclient_8c.html#a70ec769b647812cb6d023728761e922f">lsa_inject</a>, <a class="code" href="ospfclient_8c.html#ae5e9b6a994307efccbb6ab8b2eb0077a">oclient</a>, 10);

  <span class="comment">/* Schedule delete */</span>
  <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospfclient_8c.html#a6e06258bf5023de7705b0c15f93153d5">lsa_delete</a>, <a class="code" href="ospfclient_8c.html#ae5e9b6a994307efccbb6ab8b2eb0077a">oclient</a>, 30);

  <span class="comment">/* 08/25/2011 yic+: test */</span>
  <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a>(<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospfclient_8c.html#afb258c6eecdc7da27d43de591dd388ba">get_router_nexthops</a>, <a class="code" href="ospfclient_8c.html#ae5e9b6a994307efccbb6ab8b2eb0077a">oclient</a>, 60);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a947ae479f43fdc7a1707abf97eba9a59"></a><!-- doxytag: member="ospfclient.c::router_routing_table_change_callback" ref="a947ae479f43fdc7a1707abf97eba9a59" args="(struct in_addr router_id, int nexthop_count, struct in_addr *nexthops)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void router_routing_table_change_callback </td>
          <td>(</td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"><em>router_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nexthop_count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr *&#160;</td>
          <td class="paramname"><em>nexthops</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfclient_8c_source.html#l00268">268</a> of file <a class="el" href="ospfclient_8c_source.html">ospfclient.c</a>.</p>
<div class="fragment"><pre class="fragment">{
    <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

    printf(<span class="stringliteral">&quot;router_routing_table_change\n&quot;</span>);
    printf(<span class="stringliteral">&quot;--router id: %s\n&quot;</span>, inet_ntoa(router_id));

    <span class="keywordflow">for</span> (i = 0; i &lt; nexthop_count; i ++)
        printf(<span class="stringliteral">&quot;--nexthop: %s\n&quot;</span>, inet_ntoa(nexthops[i]));
}
</pre></div>
</div>
</div>
<a class="anchor" id="addea2018e480eece49bb50115d8f6ab9"></a><!-- doxytag: member="ospfclient.c::usage" ref="addea2018e480eece49bb50115d8f6ab9" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int usage </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfclient_8c_source.html#l00286">286</a> of file <a class="el" href="ospfclient_8c_source.html">ospfclient.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  printf(<span class="stringliteral">&quot;Usage: ospfclient &lt;ospfd&gt; &lt;lsatype&gt; &lt;opaquetype&gt; &lt;opaqueid&gt; &lt;ifaddr&gt; &lt;areaid&gt;\n&quot;</span>);
  printf(<span class="stringliteral">&quot;where ospfd     : router where API-enabled OSPF daemon is running\n&quot;</span>);
  printf(<span class="stringliteral">&quot;      lsatype   : either 9, 10, or 11 depending on flooding scope\n&quot;</span>);
  printf(<span class="stringliteral">&quot;      opaquetype: 0-255 (e.g., experimental applications use &gt; 128)\n&quot;</span>);
  printf(<span class="stringliteral">&quot;      opaqueid  : arbitrary application instance (24 bits)\n&quot;</span>);
  printf(<span class="stringliteral">&quot;      ifaddr    : interface IP address (for type 9) otherwise ignored\n&quot;</span>);
  printf(<span class="stringliteral">&quot;      areaid    : area in IP address format (for type 10) otherwise ignored\n&quot;</span>);
  
  <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a>(1);
}
</pre></div>
</div>
</div>
<hr/><h2>Variable Documentation</h2>
<a class="anchor" id="aa24f72e6a4d6a997528142211b375496"></a><!-- doxytag: member="ospfclient.c::args" ref="aa24f72e6a4d6a997528142211b375496" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char** <a class="el" href="ospfclient_8c.html#aa24f72e6a4d6a997528142211b375496">args</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfclient_8c_source.html#l00054">54</a> of file <a class="el" href="ospfclient_8c_source.html">ospfclient.c</a>.</p>

</div>
</div>
<a class="anchor" id="af7f9077bc08df049beb65a1c09cde5fa"></a><!-- doxytag: member="ospfclient.c::master" ref="af7f9077bc08df049beb65a1c09cde5fa" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structthread__master.html">thread_master</a>* <a class="el" href="test__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfclient_8c_source.html#l00050">50</a> of file <a class="el" href="ospfclient_8c_source.html">ospfclient.c</a>.</p>

</div>
</div>
<a class="anchor" id="ae5e9b6a994307efccbb6ab8b2eb0077a"></a><!-- doxytag: member="ospfclient.c::oclient" ref="ae5e9b6a994307efccbb6ab8b2eb0077a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__apiclient.html">ospf_apiclient</a>* <a class="el" href="ospfclient_8c.html#ae5e9b6a994307efccbb6ab8b2eb0077a">oclient</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospfclient_8c_source.html#l00053">53</a> of file <a class="el" href="ospfclient_8c_source.html">ospfclient.c</a>.</p>

</div>
</div>
<a class="anchor" id="a98d4a63d037cb8c579f44baa2f9801a2"></a><!-- doxytag: member="ospfclient.c::ospfd_privs" ref="a98d4a63d037cb8c579f44baa2f9801a2" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structzebra__privs__t.html">zebra_privs_t</a> <a class="el" href="ospfn_8c.html#a98d4a63d037cb8c579f44baa2f9801a2">ospfd_privs</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment">
{
  .user = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>,
  .group = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>,
  .cap_num_p = 0,
  .cap_num_i = 0
}
</pre></div>
<p>Definition at line <a class="el" href="ospfclient_8c_source.html#l00029">29</a> of file <a class="el" href="ospfclient_8c_source.html">ospfclient.c</a>.</p>

</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="ospfclient_8c.html">ospfclient.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:27 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
