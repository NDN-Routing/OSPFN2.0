<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: ospfd/ospf_asbr.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('ospf__asbr_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">ospfd/ospf_asbr.c</div>  </div>
</div>
<div class="contents">
<a href="ospf__asbr_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * OSPF AS Boundary Router functions.</span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 1999, 2000 Kunihiro Ishiguro, Toshiaki Takada</span>
<a name="l00004"></a>00004 <span class="comment"> *</span>
<a name="l00005"></a>00005 <span class="comment"> * This file is part of GNU Zebra.</span>
<a name="l00006"></a>00006 <span class="comment"> *</span>
<a name="l00007"></a>00007 <span class="comment"> * GNU Zebra is free software; you can redistribute it and/or modify it</span>
<a name="l00008"></a>00008 <span class="comment"> * under the terms of the GNU General Public License as published by the</span>
<a name="l00009"></a>00009 <span class="comment"> * Free Software Foundation; either version 2, or (at your option) any</span>
<a name="l00010"></a>00010 <span class="comment"> * later version.</span>
<a name="l00011"></a>00011 <span class="comment"> *</span>
<a name="l00012"></a>00012 <span class="comment"> * GNU Zebra is distributed in the hope that it will be useful, but</span>
<a name="l00013"></a>00013 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00014"></a>00014 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00015"></a>00015 <span class="comment"> * General Public License for more details.</span>
<a name="l00016"></a>00016 <span class="comment"> *</span>
<a name="l00017"></a>00017 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00018"></a>00018 <span class="comment"> * along with GNU Zebra; see the file COPYING.  If not, write to the Free</span>
<a name="l00019"></a>00019 <span class="comment"> * Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA</span>
<a name="l00020"></a>00020 <span class="comment"> * 02111-1307, USA.</span>
<a name="l00021"></a>00021 <span class="comment"> */</span>
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;<a class="code" href="zebra_8h.html">zebra.h</a>&gt;</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="thread_8h.html">thread.h</a>&quot;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="memory_8h.html">memory.h</a>&quot;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="linklist_8h.html">linklist.h</a>&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="prefix_8h.html">prefix.h</a>&quot;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="if_8h.html">if.h</a>&quot;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="table_8h.html">table.h</a>&quot;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &quot;<a class="code" href="vty_8h.html">vty.h</a>&quot;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="filter_8h.html">filter.h</a>&quot;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &quot;<a class="code" href="log_8h.html">log.h</a>&quot;</span>
<a name="l00034"></a>00034 
<a name="l00035"></a>00035 <span class="preprocessor">#include &quot;<a class="code" href="ospfd_8h.html">ospfd/ospfd.h</a>&quot;</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include &quot;<a class="code" href="ospf__interface_8h.html">ospfd/ospf_interface.h</a>&quot;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#include &quot;<a class="code" href="ospf__asbr_8h.html">ospfd/ospf_asbr.h</a>&quot;</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include &quot;<a class="code" href="ospf__lsa_8h.html">ospfd/ospf_lsa.h</a>&quot;</span>
<a name="l00039"></a>00039 <span class="preprocessor">#include &quot;<a class="code" href="ospf__lsdb_8h.html">ospfd/ospf_lsdb.h</a>&quot;</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include &quot;<a class="code" href="ospf__neighbor_8h.html">ospfd/ospf_neighbor.h</a>&quot;</span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &quot;<a class="code" href="ospf__spf_8h.html">ospfd/ospf_spf.h</a>&quot;</span>
<a name="l00042"></a>00042 <span class="preprocessor">#include &quot;<a class="code" href="ospf__flood_8h.html">ospfd/ospf_flood.h</a>&quot;</span>
<a name="l00043"></a>00043 <span class="preprocessor">#include &quot;<a class="code" href="ospf__route_8h.html">ospfd/ospf_route.h</a>&quot;</span>
<a name="l00044"></a>00044 <span class="preprocessor">#include &quot;<a class="code" href="ospf__zebra_8h.html">ospfd/ospf_zebra.h</a>&quot;</span>
<a name="l00045"></a>00045 <span class="preprocessor">#include &quot;<a class="code" href="ospf__dump_8h.html">ospfd/ospf_dump.h</a>&quot;</span>
<a name="l00046"></a>00046 
<a name="l00047"></a>00047 
<a name="l00048"></a>00048 <span class="comment">/* Remove external route. */</span>
<a name="l00049"></a>00049 <span class="keywordtype">void</span>
<a name="l00050"></a><a class="code" href="ospf__asbr_8h.html#ac8115ecf8ca1e1bca68b8c2285c3477e">00050</a> <a class="code" href="ospf__asbr_8c.html#aafe9886932fe4a96d5cc208850fb3915">ospf_external_route_remove</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>)
<a name="l00051"></a>00051 {
<a name="l00052"></a>00052   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00053"></a>00053   <span class="keyword">struct </span><a class="code" href="structospf__route.html">ospf_route</a> *or;
<a name="l00054"></a>00054 
<a name="l00055"></a>00055   rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (ospf-&gt;<a class="code" href="structospf.html#aa4376d3468d1d9fd5a6ed373e149338c">old_external_route</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) p);
<a name="l00056"></a>00056   <span class="keywordflow">if</span> (rn)
<a name="l00057"></a>00057     <span class="keywordflow">if</span> ((or = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>))
<a name="l00058"></a>00058       {
<a name="l00059"></a>00059     <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;Route[%s/%d]: external path deleted&quot;</span>,
<a name="l00060"></a>00060            inet_ntoa (p-&gt;<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>), p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
<a name="l00061"></a>00061 
<a name="l00062"></a>00062     <span class="comment">/* Remove route from zebra. */</span>
<a name="l00063"></a>00063         <span class="keywordflow">if</span> (or-&gt;<a class="code" href="structospf__route.html#a68c9cb8cb5a39fb9d8d2b0817731c75b">type</a> == <a class="code" href="ospf__route_8h.html#a7f5d4a2b626b300ae96a502438de0615">OSPF_DESTINATION_NETWORK</a>)
<a name="l00064"></a>00064       <a class="code" href="ospf__zebra_8c.html#a083ae682548f0d7eb0761a2469c8d3f3">ospf_zebra_delete</a> ((<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *) &amp;rn-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>, or);
<a name="l00065"></a>00065 
<a name="l00066"></a>00066     <a class="code" href="ospf__route_8c.html#a2343f1c889ff5837642b6eb2a3d213f7">ospf_route_free</a> (or);
<a name="l00067"></a>00067     rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00068"></a>00068 
<a name="l00069"></a>00069     <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00070"></a>00070     <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00071"></a>00071     <span class="keywordflow">return</span>;
<a name="l00072"></a>00072       }
<a name="l00073"></a>00073 
<a name="l00074"></a>00074   <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;Route[%s/%d]: no such external path&quot;</span>,
<a name="l00075"></a>00075          inet_ntoa (p-&gt;<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>), p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
<a name="l00076"></a>00076 }
<a name="l00077"></a>00077 
<a name="l00078"></a>00078 <span class="comment">/* Lookup external route. */</span>
<a name="l00079"></a>00079 <span class="keyword">struct </span><a class="code" href="structospf__route.html">ospf_route</a> *
<a name="l00080"></a><a class="code" href="ospf__asbr_8h.html#af2027b2b22747ed37730286419191029">00080</a> <a class="code" href="ospf__asbr_8c.html#a64b13bb2f812ea0fa940e20005a4c5b2">ospf_external_route_lookup</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>,
<a name="l00081"></a>00081                 <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>)
<a name="l00082"></a>00082 {
<a name="l00083"></a>00083   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00084"></a>00084 
<a name="l00085"></a>00085   rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (ospf-&gt;<a class="code" href="structospf.html#aa4376d3468d1d9fd5a6ed373e149338c">old_external_route</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) p);
<a name="l00086"></a>00086   <span class="keywordflow">if</span> (rn)
<a name="l00087"></a>00087     {
<a name="l00088"></a>00088       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00089"></a>00089       <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
<a name="l00090"></a>00090     <span class="keywordflow">return</span> rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l00091"></a>00091     }
<a name="l00092"></a>00092 
<a name="l00093"></a>00093   <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;Route[%s/%d]: lookup, no such prefix&quot;</span>,
<a name="l00094"></a>00094          inet_ntoa (p-&gt;<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>), p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
<a name="l00095"></a>00095 
<a name="l00096"></a>00096   <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00097"></a>00097 }
<a name="l00098"></a>00098 
<a name="l00099"></a>00099 
<a name="l00100"></a>00100 <span class="comment">/* Add an External info for AS-external-LSA. */</span>
<a name="l00101"></a>00101 <span class="keyword">struct </span><a class="code" href="structexternal__info.html">external_info</a> *
<a name="l00102"></a><a class="code" href="ospf__asbr_8h.html#a056678376b6de23e622312187f2c8411">00102</a> <a class="code" href="ospf__asbr_8c.html#a24d0665d9eea194e0c0010550477768b">ospf_external_info_new</a> (u_char <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>)
<a name="l00103"></a>00103 {
<a name="l00104"></a>00104   <span class="keyword">struct </span><a class="code" href="structexternal__info.html">external_info</a> *<span class="keyword">new</span>;
<a name="l00105"></a>00105 
<a name="l00106"></a>00106   <span class="keyword">new</span> = (<span class="keyword">struct </span><a class="code" href="structexternal__info.html">external_info</a> *)
<a name="l00107"></a>00107     <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba7c6beef4557d59d431c035b612b64a83">MTYPE_OSPF_EXTERNAL_INFO</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structexternal__info.html">external_info</a>));
<a name="l00108"></a>00108   <span class="keyword">new</span>-&gt;type = <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>;
<a name="l00109"></a>00109 
<a name="l00110"></a>00110   <a class="code" href="ospf__asbr_8c.html#aa4b664d1d2931e548f1e0803d00549ec">ospf_reset_route_map_set_values</a> (&amp;new-&gt;route_map_set);
<a name="l00111"></a>00111   <span class="keywordflow">return</span> <span class="keyword">new</span>;
<a name="l00112"></a>00112 }
<a name="l00113"></a>00113 
<a name="l00114"></a>00114 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00115"></a><a class="code" href="ospf__asbr_8c.html#ab6ab839a4858a202603476c112314886">00115</a> <a class="code" href="ospf__asbr_8c.html#ab6ab839a4858a202603476c112314886">ospf_external_info_free</a> (<span class="keyword">struct</span> <a class="code" href="structexternal__info.html">external_info</a> *ei)
<a name="l00116"></a>00116 {
<a name="l00117"></a>00117   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba7c6beef4557d59d431c035b612b64a83">MTYPE_OSPF_EXTERNAL_INFO</a>, ei);
<a name="l00118"></a>00118 }
<a name="l00119"></a>00119 
<a name="l00120"></a>00120 <span class="keywordtype">void</span>
<a name="l00121"></a><a class="code" href="ospf__asbr_8h.html#a64af5492843cb879c8d0f2b48550136e">00121</a> <a class="code" href="ospf__asbr_8c.html#aa4b664d1d2931e548f1e0803d00549ec">ospf_reset_route_map_set_values</a> (<span class="keyword">struct</span> <a class="code" href="structroute__map__set__values.html">route_map_set_values</a> *values)
<a name="l00122"></a>00122 {
<a name="l00123"></a>00123   values-&gt;<a class="code" href="structroute__map__set__values.html#a45eb1dcae4093af15ea1f3a1eaebe3aa">metric</a> = -1;
<a name="l00124"></a>00124   values-&gt;<a class="code" href="structroute__map__set__values.html#a1b17bb706b9f04c869d68297942af4ed">metric_type</a> = -1;
<a name="l00125"></a>00125 }
<a name="l00126"></a>00126 
<a name="l00127"></a>00127 <span class="keywordtype">int</span>
<a name="l00128"></a><a class="code" href="ospf__asbr_8h.html#a164bf9c0bbf7062378e2f7f9f2e25a90">00128</a> <a class="code" href="ospf__asbr_8c.html#a09c629a907b15a7997bda76039ec73cd">ospf_route_map_set_compare</a> (<span class="keyword">struct</span> <a class="code" href="structroute__map__set__values.html">route_map_set_values</a> *values1,
<a name="l00129"></a>00129                 <span class="keyword">struct</span> <a class="code" href="structroute__map__set__values.html">route_map_set_values</a> *values2)
<a name="l00130"></a>00130 {
<a name="l00131"></a>00131   <span class="keywordflow">return</span> values1-&gt;<a class="code" href="structroute__map__set__values.html#a45eb1dcae4093af15ea1f3a1eaebe3aa">metric</a> == values2-&gt;<a class="code" href="structroute__map__set__values.html#a45eb1dcae4093af15ea1f3a1eaebe3aa">metric</a> &amp;&amp;
<a name="l00132"></a>00132     values1-&gt;<a class="code" href="structroute__map__set__values.html#a1b17bb706b9f04c869d68297942af4ed">metric_type</a> == values2-&gt;<a class="code" href="structroute__map__set__values.html#a1b17bb706b9f04c869d68297942af4ed">metric_type</a>;
<a name="l00133"></a>00133 }
<a name="l00134"></a>00134 
<a name="l00135"></a>00135 <span class="comment">/* Add an External info for AS-external-LSA. */</span>
<a name="l00136"></a>00136 <span class="keyword">struct </span><a class="code" href="structexternal__info.html">external_info</a> *
<a name="l00137"></a><a class="code" href="ospf__asbr_8h.html#ac855f38ff0a7d6a96bc18b5ada229561">00137</a> <a class="code" href="ospf__asbr_8c.html#a6a90eaa85c3352db338f42b615933d9c">ospf_external_info_add</a> (u_char <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>,
<a name="l00138"></a>00138             <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structexternal__info.html#aa44606ec20e4cd877211173bceaac116">ifindex</a>, <span class="keyword">struct</span> in_addr <a class="code" href="structnexthop.html">nexthop</a>)
<a name="l00139"></a>00139 {
<a name="l00140"></a>00140   <span class="keyword">struct </span><a class="code" href="structexternal__info.html">external_info</a> *<span class="keyword">new</span>;
<a name="l00141"></a>00141   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00142"></a>00142 
<a name="l00143"></a>00143   <span class="comment">/* Initialize route table. */</span>
<a name="l00144"></a>00144   <span class="keywordflow">if</span> (<a class="code" href="ospfd_8h.html#a9fa5e60f9244cb3ea41a0a96d3c9b85c">EXTERNAL_INFO</a> (type) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00145"></a>00145     <a class="code" href="ospfd_8h.html#a9fa5e60f9244cb3ea41a0a96d3c9b85c">EXTERNAL_INFO</a> (type) = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();
<a name="l00146"></a>00146 
<a name="l00147"></a>00147   rn = <a class="code" href="table_8c.html#ac91fdff1a0b8dc3d60ebaf152caa0f80">route_node_get</a> (<a class="code" href="ospfd_8h.html#a9fa5e60f9244cb3ea41a0a96d3c9b85c">EXTERNAL_INFO</a> (type), (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;p);
<a name="l00148"></a>00148   <span class="comment">/* If old info exists, -- discard new one or overwrite with new one? */</span>
<a name="l00149"></a>00149   <span class="keywordflow">if</span> (rn)
<a name="l00150"></a>00150     <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
<a name="l00151"></a>00151       {
<a name="l00152"></a>00152     <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00153"></a>00153     <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;Redistribute[%s]: %s/%d already exists, discard.&quot;</span>,
<a name="l00154"></a>00154            <a class="code" href="ospf__dump_8c.html#ac9f0bcaf160e328b6acb2c361dfa5002">ospf_redist_string</a>(type),
<a name="l00155"></a>00155            inet_ntoa (p.<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>), p.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
<a name="l00156"></a>00156     <span class="comment">/* XFREE (MTYPE_OSPF_TMP, rn-&gt;info); */</span>
<a name="l00157"></a>00157     <span class="keywordflow">return</span> rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l00158"></a>00158       }
<a name="l00159"></a>00159 
<a name="l00160"></a>00160   <span class="comment">/* Create new External info instance. */</span>
<a name="l00161"></a>00161   <span class="keyword">new</span> = <a class="code" href="ospf__asbr_8c.html#a24d0665d9eea194e0c0010550477768b">ospf_external_info_new</a> (type);
<a name="l00162"></a>00162   <span class="keyword">new</span>-&gt;p = <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
<a name="l00163"></a>00163   <span class="keyword">new</span>-&gt;ifindex = ifindex;
<a name="l00164"></a>00164   <span class="keyword">new</span>-&gt;nexthop = nexthop;
<a name="l00165"></a>00165   <span class="keyword">new</span>-&gt;tag = 0;
<a name="l00166"></a>00166 
<a name="l00167"></a>00167   rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <span class="keyword">new</span>;
<a name="l00168"></a>00168 
<a name="l00169"></a>00169   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (lsa, LSA_GENERATE))
<a name="l00170"></a>00170     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Redistribute[%s]: %s/%d external info created.&quot;</span>,
<a name="l00171"></a>00171            <a class="code" href="ospf__dump_8c.html#ac9f0bcaf160e328b6acb2c361dfa5002">ospf_redist_string</a>(type),
<a name="l00172"></a>00172            inet_ntoa (p.<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>), p.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
<a name="l00173"></a>00173   <span class="keywordflow">return</span> <span class="keyword">new</span>;
<a name="l00174"></a>00174 }
<a name="l00175"></a>00175 
<a name="l00176"></a>00176 <span class="keywordtype">void</span>
<a name="l00177"></a><a class="code" href="ospf__asbr_8h.html#a4a04c5c42957e70607f4081a389cfd33">00177</a> <a class="code" href="ospf__asbr_8c.html#ae91dd932332bc12e89b6cc7f9358146f">ospf_external_info_delete</a> (u_char <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>)
<a name="l00178"></a>00178 {
<a name="l00179"></a>00179   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00180"></a>00180 
<a name="l00181"></a>00181   rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (<a class="code" href="ospfd_8h.html#a9fa5e60f9244cb3ea41a0a96d3c9b85c">EXTERNAL_INFO</a> (type), (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;p);
<a name="l00182"></a>00182   <span class="keywordflow">if</span> (rn)
<a name="l00183"></a>00183     {
<a name="l00184"></a>00184       <a class="code" href="ospf__asbr_8c.html#ab6ab839a4858a202603476c112314886">ospf_external_info_free</a> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>);
<a name="l00185"></a>00185       rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00186"></a>00186       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00187"></a>00187       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00188"></a>00188     }
<a name="l00189"></a>00189 }
<a name="l00190"></a>00190 
<a name="l00191"></a>00191 <span class="keyword">struct </span><a class="code" href="structexternal__info.html">external_info</a> *
<a name="l00192"></a><a class="code" href="ospf__asbr_8h.html#a5ab0286202cf05fe0009711f3cff8f68">00192</a> <a class="code" href="ospf__asbr_8c.html#a8ea357d9ea42de5dba88f180feeff670">ospf_external_info_lookup</a> (u_char <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>)
<a name="l00193"></a>00193 {
<a name="l00194"></a>00194   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00195"></a>00195   rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (<a class="code" href="ospfd_8h.html#a9fa5e60f9244cb3ea41a0a96d3c9b85c">EXTERNAL_INFO</a> (type), (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) p);
<a name="l00196"></a>00196   <span class="keywordflow">if</span> (rn)
<a name="l00197"></a>00197     {
<a name="l00198"></a>00198       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00199"></a>00199       <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
<a name="l00200"></a>00200     <span class="keywordflow">return</span> rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l00201"></a>00201     }
<a name="l00202"></a>00202 
<a name="l00203"></a>00203   <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00204"></a>00204 }
<a name="l00205"></a>00205 
<a name="l00206"></a>00206 <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *
<a name="l00207"></a><a class="code" href="ospf__asbr_8h.html#a1671c3b3a8747d1c2cbe389f501468f7">00207</a> <a class="code" href="ospf__asbr_8c.html#ad45c036a67747a7f65338b7ec6ff748d">ospf_external_info_find_lsa</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>,
<a name="l00208"></a>00208                  <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>)
<a name="l00209"></a>00209 {
<a name="l00210"></a>00210   <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa;
<a name="l00211"></a>00211   <span class="keyword">struct </span><a class="code" href="structas__external__lsa.html">as_external_lsa</a> *<a class="code" href="spgrid_8c.html#a7c4593313d1839d57c28594a69357bab">al</a>;
<a name="l00212"></a>00212   <span class="keyword">struct </span>in_addr mask, id;
<a name="l00213"></a>00213 
<a name="l00214"></a>00214   lsa = <a class="code" href="ospf__lsdb_8c.html#a272e7b17825b0ec09ece8ffe848d9a9f">ospf_lsdb_lookup_by_id</a> (ospf-&gt;<a class="code" href="structospf.html#a2840075b79d0a04d991596028f6c2660">lsdb</a>, <a class="code" href="ospf__lsa_8h.html#ae1f343a4ebcfe793c20519a447f7b851">OSPF_AS_EXTERNAL_LSA</a>,
<a name="l00215"></a>00215                 p-&gt;prefix, ospf-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>);
<a name="l00216"></a>00216 
<a name="l00217"></a>00217   <span class="keywordflow">if</span> (!lsa)
<a name="l00218"></a>00218     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00219"></a>00219 
<a name="l00220"></a>00220   al = (<span class="keyword">struct </span><a class="code" href="structas__external__lsa.html">as_external_lsa</a> *) lsa-&gt;data;
<a name="l00221"></a>00221 
<a name="l00222"></a>00222   <a class="code" href="prefix_8c.html#ac618f277d6ed0ebc56781ec26e508157">masklen2ip</a> (p-&gt;<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a>, &amp;mask);
<a name="l00223"></a>00223 
<a name="l00224"></a>00224   <span class="keywordflow">if</span> (mask.s_addr != al-&gt;<a class="code" href="structas__external__lsa.html#aa860fac77968c497496d16df6d325651">mask</a>.s_addr)
<a name="l00225"></a>00225     {
<a name="l00226"></a>00226       <span class="keywordtype">id</span>.s_addr = p-&gt;prefix.s_addr | (~mask.s_addr);
<a name="l00227"></a>00227       lsa = <a class="code" href="ospf__lsdb_8c.html#a272e7b17825b0ec09ece8ffe848d9a9f">ospf_lsdb_lookup_by_id</a> (ospf-&gt;<a class="code" href="structospf.html#a2840075b79d0a04d991596028f6c2660">lsdb</a>, <a class="code" href="ospf__lsa_8h.html#ae1f343a4ebcfe793c20519a447f7b851">OSPF_AS_EXTERNAL_LSA</a>,
<a name="l00228"></a>00228                    <span class="keywordtype">id</span>, ospf-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>);
<a name="l00229"></a>00229       <span class="keywordflow">if</span> (!lsa)
<a name="l00230"></a>00230     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00231"></a>00231     }
<a name="l00232"></a>00232 
<a name="l00233"></a>00233   <span class="keywordflow">return</span> lsa;
<a name="l00234"></a>00234 }
<a name="l00235"></a>00235 
<a name="l00236"></a>00236 
<a name="l00237"></a>00237 <span class="comment">/* Update ASBR status. */</span>
<a name="l00238"></a>00238 <span class="keywordtype">void</span>
<a name="l00239"></a><a class="code" href="ospf__asbr_8h.html#a107a75dfb9f59ac05f5066b52387d95a">00239</a> <a class="code" href="ospf__asbr_8c.html#a15ef7b9d7fd4f1120453e770c076160a">ospf_asbr_status_update</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, u_char status)
<a name="l00240"></a>00240 {
<a name="l00241"></a>00241   <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;ASBR[Status:%d]: Update&quot;</span>, status);
<a name="l00242"></a>00242 
<a name="l00243"></a>00243   <span class="comment">/* ASBR on. */</span>
<a name="l00244"></a>00244   <span class="keywordflow">if</span> (status)
<a name="l00245"></a>00245     {
<a name="l00246"></a>00246       <span class="comment">/* Already ASBR. */</span>
<a name="l00247"></a>00247       <span class="keywordflow">if</span> (<a class="code" href="ospfd_8h.html#a98f44a930aaed671a18f2ca6b1435b2f">IS_OSPF_ASBR</a> (ospf))
<a name="l00248"></a>00248     {
<a name="l00249"></a>00249       <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;ASBR[Status:%d]: Already ASBR&quot;</span>, status);
<a name="l00250"></a>00250       <span class="keywordflow">return</span>;
<a name="l00251"></a>00251     }
<a name="l00252"></a>00252       <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (ospf-&gt;<a class="code" href="structospf.html#a435f2a4e7119f86c682366f6319ce64f">flags</a>, <a class="code" href="ospfd_8h.html#a68e0a6006a362d25585faeb2cc7fa48d">OSPF_FLAG_ASBR</a>);
<a name="l00253"></a>00253     }
<a name="l00254"></a>00254   <span class="keywordflow">else</span>
<a name="l00255"></a>00255     {
<a name="l00256"></a>00256       <span class="comment">/* Already non ASBR. */</span>
<a name="l00257"></a>00257       <span class="keywordflow">if</span> (! <a class="code" href="ospfd_8h.html#a98f44a930aaed671a18f2ca6b1435b2f">IS_OSPF_ASBR</a> (ospf))
<a name="l00258"></a>00258     {
<a name="l00259"></a>00259       <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;ASBR[Status:%d]: Already non ASBR&quot;</span>, status);
<a name="l00260"></a>00260       <span class="keywordflow">return</span>;
<a name="l00261"></a>00261     }
<a name="l00262"></a>00262       <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (ospf-&gt;<a class="code" href="structospf.html#a435f2a4e7119f86c682366f6319ce64f">flags</a>, <a class="code" href="ospfd_8h.html#a68e0a6006a362d25585faeb2cc7fa48d">OSPF_FLAG_ASBR</a>);
<a name="l00263"></a>00263     }
<a name="l00264"></a>00264 
<a name="l00265"></a>00265   <span class="comment">/* Transition from/to status ASBR, schedule timer. */</span>
<a name="l00266"></a>00266   <a class="code" href="ospf__spf_8c.html#a3422ebf3062fac786ecdb7b419c22cf1">ospf_spf_calculate_schedule</a> (ospf);
<a name="l00267"></a>00267   <a class="code" href="ospfd_8h.html#af55bc6c498265fffa9294d0f1b952267">OSPF_TIMER_ON</a> (ospf-&gt;<a class="code" href="structospf.html#a94a369b811b335e1d05e1dab77096606">t_router_lsa_update</a>,
<a name="l00268"></a>00268          <a class="code" href="ospf__lsa_8c.html#a4db40452defbd5304d698f8d0cc855d1">ospf_router_lsa_update_timer</a>, <a class="code" href="ospf__lsa_8h.html#a40abe6153ff06321e030f48daccf4966">OSPF_LSA_UPDATE_DELAY</a>);
<a name="l00269"></a>00269 }
<a name="l00270"></a>00270 
<a name="l00271"></a>00271 <span class="keywordtype">void</span>
<a name="l00272"></a><a class="code" href="ospf__asbr_8h.html#a0245af4e26d7f9c15c11171202deec55">00272</a> <a class="code" href="ospf__asbr_8c.html#a2e66aff41931c30bba7072e26e34bf12">ospf_redistribute_withdraw</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, u_char <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>)
<a name="l00273"></a>00273 {
<a name="l00274"></a>00274   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00275"></a>00275   <span class="keyword">struct </span><a class="code" href="structexternal__info.html">external_info</a> *ei;
<a name="l00276"></a>00276 
<a name="l00277"></a>00277   <span class="comment">/* Delete external info for specified type. */</span>
<a name="l00278"></a>00278   <span class="keywordflow">if</span> (<a class="code" href="ospfd_8h.html#a9fa5e60f9244cb3ea41a0a96d3c9b85c">EXTERNAL_INFO</a> (type))
<a name="l00279"></a>00279     <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (<a class="code" href="ospfd_8h.html#a9fa5e60f9244cb3ea41a0a96d3c9b85c">EXTERNAL_INFO</a> (type)); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
<a name="l00280"></a>00280       <span class="keywordflow">if</span> ((ei = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>))
<a name="l00281"></a>00281     <span class="keywordflow">if</span> (<a class="code" href="ospf__asbr_8c.html#ad45c036a67747a7f65338b7ec6ff748d">ospf_external_info_find_lsa</a> (ospf, &amp;ei-&gt;<a class="code" href="structexternal__info.html#a15eb7ea975a1090a107d7d54b798822c">p</a>))
<a name="l00282"></a>00282       {
<a name="l00283"></a>00283         <span class="keywordflow">if</span> (<a class="code" href="ospf__lsa_8c.html#ab361b6fb4bed2a417afb49ae46bae391">is_prefix_default</a> (&amp;ei-&gt;<a class="code" href="structexternal__info.html#a15eb7ea975a1090a107d7d54b798822c">p</a>) &amp;&amp;
<a name="l00284"></a>00284         ospf-&gt;<a class="code" href="structospf.html#a1111f78d01dc9e8d522e639da7a2a36c">default_originate</a> != <a class="code" href="ospfd_8h.html#a2cb5991aff286dfe8d5b67d9730e0c81">DEFAULT_ORIGINATE_NONE</a>)
<a name="l00285"></a>00285           <span class="keywordflow">continue</span>;
<a name="l00286"></a>00286         <a class="code" href="ospf__lsa_8c.html#ae6fd27bc0a44fb71638c23c3ea829905">ospf_external_lsa_flush</a> (ospf, type, &amp;ei-&gt;<a class="code" href="structexternal__info.html#a15eb7ea975a1090a107d7d54b798822c">p</a>,
<a name="l00287"></a>00287                      ei-&gt;<a class="code" href="structexternal__info.html#aa44606ec20e4cd877211173bceaac116">ifindex</a> <span class="comment">/*, ei-&gt;nexthop */</span>);
<a name="l00288"></a>00288         <a class="code" href="ospf__asbr_8c.html#ae91dd932332bc12e89b6cc7f9358146f">ospf_external_info_delete</a> (type, ei-&gt;<a class="code" href="structexternal__info.html#a15eb7ea975a1090a107d7d54b798822c">p</a>);
<a name="l00289"></a>00289       }
<a name="l00290"></a>00290 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="ospf__asbr_8c.html">ospf_asbr.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:07 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
