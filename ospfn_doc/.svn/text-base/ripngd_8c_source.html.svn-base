<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: ripngd/ripngd.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('ripngd_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">ripngd/ripngd.c</div>  </div>
</div>
<div class="contents">
<a href="ripngd_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* RIPng daemon</span>
<a name="l00002"></a>00002 <span class="comment"> * Copyright (C) 1998, 1999 Kunihiro Ishiguro</span>
<a name="l00003"></a>00003 <span class="comment"> *</span>
<a name="l00004"></a>00004 <span class="comment"> * This file is part of GNU Zebra.</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * GNU Zebra is free software; you can redistribute it and/or modify it</span>
<a name="l00007"></a>00007 <span class="comment"> * under the terms of the GNU General Public License as published by the</span>
<a name="l00008"></a>00008 <span class="comment"> * Free Software Foundation; either version 2, or (at your option) any</span>
<a name="l00009"></a>00009 <span class="comment"> * later version.</span>
<a name="l00010"></a>00010 <span class="comment"> *</span>
<a name="l00011"></a>00011 <span class="comment"> * GNU Zebra is distributed in the hope that it will be useful, but</span>
<a name="l00012"></a>00012 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00014"></a>00014 <span class="comment"> * General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment"> * along with GNU Zebra; see the file COPYING.  If not, write to the Free</span>
<a name="l00018"></a>00018 <span class="comment"> * Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA</span>
<a name="l00019"></a>00019 <span class="comment"> * 02111-1307, USA.  </span>
<a name="l00020"></a>00020 <span class="comment"> */</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="preprocessor">#include &lt;<a class="code" href="zebra_8h.html">zebra.h</a>&gt;</span>
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 <span class="preprocessor">#include &quot;<a class="code" href="prefix_8h.html">prefix.h</a>&quot;</span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="filter_8h.html">filter.h</a>&quot;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="log_8h.html">log.h</a>&quot;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="thread_8h.html">thread.h</a>&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="memory_8h.html">memory.h</a>&quot;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="if_8h.html">if.h</a>&quot;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="stream_8h.html">stream.h</a>&quot;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &quot;<a class="code" href="table_8h.html">table.h</a>&quot;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="command_8h.html">command.h</a>&quot;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &quot;<a class="code" href="sockopt_8h.html">sockopt.h</a>&quot;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &quot;<a class="code" href="distribute_8h.html">distribute.h</a>&quot;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &quot;<a class="code" href="plist_8h.html">plist.h</a>&quot;</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include &quot;<a class="code" href="routemap_8h.html">routemap.h</a>&quot;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#include &quot;<a class="code" href="if__rmap_8h.html">if_rmap.h</a>&quot;</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include &quot;<a class="code" href="privs_8h.html">privs.h</a>&quot;</span>
<a name="l00039"></a>00039 
<a name="l00040"></a>00040 <span class="preprocessor">#include &quot;<a class="code" href="ripngd_8h.html">ripngd/ripngd.h</a>&quot;</span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &quot;<a class="code" href="ripng__route_8h.html">ripngd/ripng_route.h</a>&quot;</span>
<a name="l00042"></a>00042 <span class="preprocessor">#include &quot;<a class="code" href="ripng__debug_8h.html">ripngd/ripng_debug.h</a>&quot;</span>
<a name="l00043"></a>00043 <span class="preprocessor">#include &quot;<a class="code" href="ripng__nexthop_8h.html">ripngd/ripng_nexthop.h</a>&quot;</span>
<a name="l00044"></a>00044 
<a name="l00045"></a>00045 <span class="comment">/* RIPng structure which includes many parameters related to RIPng</span>
<a name="l00046"></a>00046 <span class="comment">   protocol. If ripng couldn&#39;t active or ripng doesn&#39;t configured,</span>
<a name="l00047"></a>00047 <span class="comment">   ripng-&gt;fd must be negative value. */</span>
<a name="l00048"></a><a class="code" href="ripngd_8h.html#a191aae347a77a6e39457dc17afc36773">00048</a> <span class="keyword">struct </span><a class="code" href="structripng.html">ripng</a> *<a class="code" href="structripng.html">ripng</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00049"></a>00049 
<a name="l00050"></a>00050 <span class="keyword">enum</span>
<a name="l00051"></a>00051 {
<a name="l00052"></a><a class="code" href="ripngd_8c.html#aa618c4d8c29ef4efe6f10c741fb1f47aa36d98eb8a2b6865a11a6b04b8a464e83">00052</a>   <a class="code" href="ripngd_8c.html#aa618c4d8c29ef4efe6f10c741fb1f47aa36d98eb8a2b6865a11a6b04b8a464e83">ripng_all_route</a>,
<a name="l00053"></a><a class="code" href="ripngd_8c.html#aa618c4d8c29ef4efe6f10c741fb1f47aae4415bb34123e19eee8a373f99cfb8a5">00053</a>   <a class="code" href="ripngd_8c.html#aa618c4d8c29ef4efe6f10c741fb1f47aae4415bb34123e19eee8a373f99cfb8a5">ripng_changed_route</a>,
<a name="l00054"></a>00054 };
<a name="l00055"></a>00055 
<a name="l00056"></a>00056 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structzebra__privs__t.html">zebra_privs_t</a> <a class="code" href="ripng__interface_8c.html#ae075817360c6997bdd963ba531131901">ripngd_privs</a>;
<a name="l00057"></a>00057 
<a name="l00058"></a>00058 <span class="comment">/* Prototypes. */</span>
<a name="l00059"></a>00059 <span class="keywordtype">void</span>
<a name="l00060"></a>00060 <a class="code" href="ripngd_8c.html#a3f72267312fe0a97d08b67ba961d6658">ripng_output_process</a> (<span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *, <span class="keyword">struct</span> sockaddr_in6 *, <span class="keywordtype">int</span>);
<a name="l00061"></a>00061 
<a name="l00062"></a>00062 <span class="keywordtype">int</span>
<a name="l00063"></a>00063 <a class="code" href="ripngd_8c.html#aade04913dcd50154f3a16346c673f01e">ripng_triggered_update</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *);
<a name="l00064"></a>00064 
<a name="l00065"></a>00065 <span class="comment">/* RIPng next hop specification. */</span>
<a name="l00066"></a><a class="code" href="structripng__nexthop.html">00066</a> <span class="keyword">struct </span><a class="code" href="structripng__nexthop.html">ripng_nexthop</a>
<a name="l00067"></a>00067 {
<a name="l00068"></a><a class="code" href="structripng__nexthop.html#a5c5c2bdc97b730a9c7d6aed89c79a83f">00068</a>   <span class="keyword">enum</span> <a class="code" href="structripng__nexthop.html#a5c5c2bdc97b730a9c7d6aed89c79a83f">ripng_nexthop_type</a>
<a name="l00069"></a>00069   {
<a name="l00070"></a><a class="code" href="structripng__nexthop.html#a5c5c2bdc97b730a9c7d6aed89c79a83fa5279c8c5ceceb04173f5d0c55a31b4f4">00070</a>     <a class="code" href="structripng__nexthop.html#a5c5c2bdc97b730a9c7d6aed89c79a83fa5279c8c5ceceb04173f5d0c55a31b4f4">RIPNG_NEXTHOP_UNSPEC</a>,
<a name="l00071"></a><a class="code" href="structripng__nexthop.html#a5c5c2bdc97b730a9c7d6aed89c79a83fa24a3f7d2d5d00c5059b879a4e4cae919">00071</a>     <a class="code" href="structripng__nexthop.html#a5c5c2bdc97b730a9c7d6aed89c79a83fa24a3f7d2d5d00c5059b879a4e4cae919">RIPNG_NEXTHOP_ADDRESS</a>
<a name="l00072"></a>00072   } <a class="code" href="structripng__nexthop.html#a47491d21e1277401bed39f35a79434b2">flag</a>;
<a name="l00073"></a><a class="code" href="structripng__nexthop.html#a2ddcc6f402319ccad8ab97f3d17e62b9">00073</a>   <span class="keyword">struct </span>in6_addr <a class="code" href="structripng__nexthop.html#a2ddcc6f402319ccad8ab97f3d17e62b9">address</a>;
<a name="l00074"></a>00074 };
<a name="l00075"></a>00075 
<a name="l00076"></a>00076 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00077"></a><a class="code" href="ripngd_8c.html#a6b1690fe3bd2672b6812fa0922f848b8">00077</a> <a class="code" href="ripngd_8c.html#a6b1690fe3bd2672b6812fa0922f848b8">ripng_route_rte</a> (<span class="keyword">struct</span> <a class="code" href="structripng__info.html">ripng_info</a> *rinfo)
<a name="l00078"></a>00078 {
<a name="l00079"></a>00079   <span class="keywordflow">return</span> (rinfo-&gt;<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a> == <a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a> &amp;&amp; rinfo-&gt;<a class="code" href="structripng__info.html#a6b1f397b0581369f5141e29dc68d6e85">sub_type</a> == <a class="code" href="ripngd_8h.html#a42f5ddc11e604312912cb85448f451bd">RIPNG_ROUTE_RTE</a>);
<a name="l00080"></a>00080 }
<a name="l00081"></a>00081 
<a name="l00082"></a>00082 <span class="comment">/* Allocate new ripng information. */</span>
<a name="l00083"></a>00083 <span class="keyword">struct </span><a class="code" href="structripng__info.html">ripng_info</a> *
<a name="l00084"></a><a class="code" href="ripngd_8h.html#aa83f3c18de8ead802ed163babac266b1">00084</a> <a class="code" href="ripngd_8c.html#a0b7fb6a0d15b39889e109557bf3d23ea">ripng_info_new</a> ()
<a name="l00085"></a>00085 {
<a name="l00086"></a>00086   <span class="keyword">struct </span><a class="code" href="structripng__info.html">ripng_info</a> *<span class="keyword">new</span>;
<a name="l00087"></a>00087 
<a name="l00088"></a>00088   <span class="keyword">new</span> = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167bab7b02c8a0baefc86992111a888626c9b">MTYPE_RIPNG_ROUTE</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structripng__info.html">ripng_info</a>));
<a name="l00089"></a>00089   <span class="keywordflow">return</span> <span class="keyword">new</span>;
<a name="l00090"></a>00090 }
<a name="l00091"></a>00091 
<a name="l00092"></a>00092 <span class="comment">/* Free ripng information. */</span>
<a name="l00093"></a>00093 <span class="keywordtype">void</span>
<a name="l00094"></a><a class="code" href="ripngd_8h.html#a9dac36daa3fa248437e2cfab0289331c">00094</a> <a class="code" href="ripngd_8c.html#a9dac36daa3fa248437e2cfab0289331c">ripng_info_free</a> (<span class="keyword">struct</span> <a class="code" href="structripng__info.html">ripng_info</a> *rinfo)
<a name="l00095"></a>00095 {
<a name="l00096"></a>00096   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167bab7b02c8a0baefc86992111a888626c9b">MTYPE_RIPNG_ROUTE</a>, rinfo);
<a name="l00097"></a>00097 }
<a name="l00098"></a>00098 
<a name="l00099"></a>00099 <span class="comment">/* Create ripng socket. */</span>
<a name="l00100"></a>00100 <span class="keyword">static</span> <span class="keywordtype">int</span> 
<a name="l00101"></a><a class="code" href="ripngd_8c.html#ab4b62648d39fa134266aa8c8c69a977c">00101</a> <a class="code" href="ripngd_8c.html#ab4b62648d39fa134266aa8c8c69a977c">ripng_make_socket</a> (<span class="keywordtype">void</span>)
<a name="l00102"></a>00102 {
<a name="l00103"></a>00103   <span class="keywordtype">int</span> ret;
<a name="l00104"></a>00104   <span class="keywordtype">int</span> sock;
<a name="l00105"></a>00105   <span class="keyword">struct </span>sockaddr_in6 ripaddr;
<a name="l00106"></a>00106 
<a name="l00107"></a>00107   sock = socket (AF_INET6, SOCK_DGRAM, 0);
<a name="l00108"></a>00108   <span class="keywordflow">if</span> (sock &lt; 0)
<a name="l00109"></a>00109     {
<a name="l00110"></a>00110       <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_ERR, <span class="stringliteral">&quot;Can&#39;t make ripng socket&quot;</span>);
<a name="l00111"></a>00111       <span class="keywordflow">return</span> sock;
<a name="l00112"></a>00112     }
<a name="l00113"></a>00113 
<a name="l00114"></a>00114   ret = <a class="code" href="sockopt_8c.html#abdfd124bd2b3b787be44b3e78e99bc37">setsockopt_so_recvbuf</a> (sock, 8096);
<a name="l00115"></a>00115   <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l00116"></a>00116     <span class="keywordflow">return</span> ret;
<a name="l00117"></a>00117   ret = setsockopt_ipv6_pktinfo (sock, 1);
<a name="l00118"></a>00118   <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l00119"></a>00119     <span class="keywordflow">return</span> ret;
<a name="l00120"></a>00120   ret = setsockopt_ipv6_multicast_hops (sock, 255);
<a name="l00121"></a>00121   <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l00122"></a>00122     <span class="keywordflow">return</span> ret;
<a name="l00123"></a>00123   ret = setsockopt_ipv6_multicast_loop (sock, 0);
<a name="l00124"></a>00124   <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l00125"></a>00125     <span class="keywordflow">return</span> ret;
<a name="l00126"></a>00126   ret = setsockopt_ipv6_hoplimit (sock, 1);
<a name="l00127"></a>00127   <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l00128"></a>00128     <span class="keywordflow">return</span> ret;
<a name="l00129"></a>00129 
<a name="l00130"></a>00130   memset (&amp;ripaddr, 0, <span class="keyword">sizeof</span> (ripaddr));
<a name="l00131"></a>00131   ripaddr.sin6_family = AF_INET6;
<a name="l00132"></a>00132 <span class="preprocessor">#ifdef SIN6_LEN</span>
<a name="l00133"></a>00133 <span class="preprocessor"></span>  ripaddr.sin6_len = <span class="keyword">sizeof</span> (<span class="keyword">struct </span>sockaddr_in6);
<a name="l00134"></a>00134 <span class="preprocessor">#endif </span><span class="comment">/* SIN6_LEN */</span>
<a name="l00135"></a>00135   ripaddr.sin6_port = htons (<a class="code" href="ripngd_8h.html#a8a29218cbba163cd33175e89084ad25c">RIPNG_PORT_DEFAULT</a>);
<a name="l00136"></a>00136 
<a name="l00137"></a>00137   <span class="keywordflow">if</span> (<a class="code" href="ripng__interface_8c.html#ae075817360c6997bdd963ba531131901">ripngd_privs</a>.<a class="code" href="structzebra__privs__t.html#a0c59dbc0ec6187b60a824ec421cc34c1">change</a> (<a class="code" href="privs_8h.html#aae029fe88e2d02bee4d46a2f458bd3e5a5395269196ee9bd07257f8b2b35c25fa">ZPRIVS_RAISE</a>))
<a name="l00138"></a>00138     <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;ripng_make_socket: could not raise privs&quot;</span>);
<a name="l00139"></a>00139   
<a name="l00140"></a>00140   ret = bind (sock, (<span class="keyword">struct</span> sockaddr *) &amp;ripaddr, <span class="keyword">sizeof</span> (ripaddr));
<a name="l00141"></a>00141   <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l00142"></a>00142   {
<a name="l00143"></a>00143     <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_ERR, <span class="stringliteral">&quot;Can&#39;t bind ripng socket: %s.&quot;</span>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
<a name="l00144"></a>00144     <span class="keywordflow">if</span> (<a class="code" href="ripng__interface_8c.html#ae075817360c6997bdd963ba531131901">ripngd_privs</a>.<a class="code" href="structzebra__privs__t.html#a0c59dbc0ec6187b60a824ec421cc34c1">change</a> (<a class="code" href="privs_8h.html#aae029fe88e2d02bee4d46a2f458bd3e5a7da2c6956cf712f8adc04ff2b0f072c5">ZPRIVS_LOWER</a>))
<a name="l00145"></a>00145       <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;ripng_make_socket: could not lower privs&quot;</span>);
<a name="l00146"></a>00146     <span class="keywordflow">return</span> ret;
<a name="l00147"></a>00147   }
<a name="l00148"></a>00148   <span class="keywordflow">if</span> (<a class="code" href="ripng__interface_8c.html#ae075817360c6997bdd963ba531131901">ripngd_privs</a>.<a class="code" href="structzebra__privs__t.html#a0c59dbc0ec6187b60a824ec421cc34c1">change</a> (<a class="code" href="privs_8h.html#aae029fe88e2d02bee4d46a2f458bd3e5a7da2c6956cf712f8adc04ff2b0f072c5">ZPRIVS_LOWER</a>))
<a name="l00149"></a>00149     <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;ripng_make_socket: could not lower privs&quot;</span>);
<a name="l00150"></a>00150   <span class="keywordflow">return</span> sock;
<a name="l00151"></a>00151 }
<a name="l00152"></a>00152 
<a name="l00153"></a>00153 <span class="comment">/* Send RIPng packet. */</span>
<a name="l00154"></a>00154 <span class="keywordtype">int</span>
<a name="l00155"></a><a class="code" href="ripngd_8h.html#a0d2737d5d5dcd2d0fcb60ebd037f0004">00155</a> <a class="code" href="ripngd_8c.html#a0d2737d5d5dcd2d0fcb60ebd037f0004">ripng_send_packet</a> (caddr_t buf, <span class="keywordtype">int</span> bufsize, <span class="keyword">struct</span> sockaddr_in6 *to, 
<a name="l00156"></a>00156            <span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp)
<a name="l00157"></a>00157 {
<a name="l00158"></a>00158   <span class="keywordtype">int</span> ret;
<a name="l00159"></a>00159   <span class="keyword">struct </span>msghdr msg;
<a name="l00160"></a>00160   <span class="keyword">struct </span>iovec iov;
<a name="l00161"></a>00161   <span class="keyword">struct </span>cmsghdr  *cmsgptr;
<a name="l00162"></a>00162   <span class="keywordtype">char</span> adata [256];
<a name="l00163"></a>00163   <span class="keyword">struct </span>in6_pktinfo *pkt;
<a name="l00164"></a>00164   <span class="keyword">struct </span>sockaddr_in6 addr;
<a name="l00165"></a>00165 
<a name="l00166"></a>00166   <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a31e214a9e1772e5c1775f81166f2b322">IS_RIPNG_DEBUG_SEND</a>) {
<a name="l00167"></a>00167     <span class="keywordflow">if</span> (to)
<a name="l00168"></a>00168       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;send to %s&quot;</span>, inet6_ntoa (to-&gt;sin6_addr));
<a name="l00169"></a>00169     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;  send interface %s&quot;</span>, ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
<a name="l00170"></a>00170     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;  send packet size %d&quot;</span>, bufsize);
<a name="l00171"></a>00171   }
<a name="l00172"></a>00172 
<a name="l00173"></a>00173   memset (&amp;addr, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> sockaddr_in6));
<a name="l00174"></a>00174   addr.sin6_family = AF_INET6;
<a name="l00175"></a>00175 <span class="preprocessor">#ifdef SIN6_LEN</span>
<a name="l00176"></a>00176 <span class="preprocessor"></span>  addr.sin6_len = <span class="keyword">sizeof</span> (<span class="keyword">struct </span>sockaddr_in6);
<a name="l00177"></a>00177 <span class="preprocessor">#endif </span><span class="comment">/* SIN6_LEN */</span>
<a name="l00178"></a>00178   addr.sin6_flowinfo = htonl (<a class="code" href="ripngd_8h.html#a211c2f061e54ad9d79f7397d8dc7c30c">RIPNG_PRIORITY_DEFAULT</a>);
<a name="l00179"></a>00179 
<a name="l00180"></a>00180   <span class="comment">/* When destination is specified. */</span>
<a name="l00181"></a>00181   <span class="keywordflow">if</span> (to != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00182"></a>00182     {
<a name="l00183"></a>00183       addr.sin6_addr = to-&gt;sin6_addr;
<a name="l00184"></a>00184       addr.sin6_port = to-&gt;sin6_port;
<a name="l00185"></a>00185     }
<a name="l00186"></a>00186   <span class="keywordflow">else</span>
<a name="l00187"></a>00187     {
<a name="l00188"></a>00188       <a class="code" href="sockunion_8c.html#ac13c2042641ea5031bc7e244e8061b84">inet_pton</a>(AF_INET6, <a class="code" href="ripngd_8h.html#aafe5068060a8c50dff9110df72e91feb">RIPNG_GROUP</a>, &amp;addr.sin6_addr);
<a name="l00189"></a>00189       addr.sin6_port = htons (<a class="code" href="ripngd_8h.html#a8a29218cbba163cd33175e89084ad25c">RIPNG_PORT_DEFAULT</a>);
<a name="l00190"></a>00190     }
<a name="l00191"></a>00191 
<a name="l00192"></a>00192   msg.msg_name = (<span class="keywordtype">void</span> *) &amp;addr;
<a name="l00193"></a>00193   msg.msg_namelen = <span class="keyword">sizeof</span> (<span class="keyword">struct </span>sockaddr_in6);
<a name="l00194"></a>00194   msg.msg_iov = &amp;iov;
<a name="l00195"></a>00195   msg.msg_iovlen = 1;
<a name="l00196"></a>00196   msg.msg_control = (<span class="keywordtype">void</span> *) adata;
<a name="l00197"></a>00197   msg.msg_controllen = <a class="code" href="zebra_8h.html#a0769bfc51cb1ffd3fe7f79fe3bf527f3">CMSG_SPACE</a>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> in6_pktinfo));
<a name="l00198"></a>00198 
<a name="l00199"></a>00199   iov.iov_base = buf;
<a name="l00200"></a>00200   iov.iov_len = bufsize;
<a name="l00201"></a>00201 
<a name="l00202"></a>00202   cmsgptr = (<span class="keyword">struct </span>cmsghdr *)adata;
<a name="l00203"></a>00203   cmsgptr-&gt;cmsg_len = <a class="code" href="zebra_8h.html#a0a270c323a1b54a4bfca7c3485e0b6bf">CMSG_LEN</a>(<span class="keyword">sizeof</span> (<span class="keyword">struct</span> in6_pktinfo));
<a name="l00204"></a>00204   cmsgptr-&gt;cmsg_level = IPPROTO_IPV6;
<a name="l00205"></a>00205   cmsgptr-&gt;cmsg_type = IPV6_PKTINFO;
<a name="l00206"></a>00206 
<a name="l00207"></a>00207   pkt = (<span class="keyword">struct </span>in6_pktinfo *) CMSG_DATA (cmsgptr);
<a name="l00208"></a>00208   memset (&amp;pkt-&gt;ipi6_addr, 0, sizeof (<span class="keyword">struct</span> in6_addr));
<a name="l00209"></a>00209   pkt-&gt;ipi6_ifindex = ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>;
<a name="l00210"></a>00210 
<a name="l00211"></a>00211   ret = sendmsg (ripng-&gt;<a class="code" href="structripng.html#a68ed7b98a04fcdefea29cc865bf12918">sock</a>, &amp;msg, 0);
<a name="l00212"></a>00212 
<a name="l00213"></a>00213   <span class="keywordflow">if</span> (ret &lt; 0) {
<a name="l00214"></a>00214     <span class="keywordflow">if</span> (to)
<a name="l00215"></a>00215       <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;RIPng send fail on %s to %s: %s&quot;</span>, ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, 
<a name="l00216"></a>00216                 inet6_ntoa (to-&gt;sin6_addr), <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
<a name="l00217"></a>00217     <span class="keywordflow">else</span>
<a name="l00218"></a>00218       <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;RIPng send fail on %s: %s&quot;</span>, ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
<a name="l00219"></a>00219   }
<a name="l00220"></a>00220 
<a name="l00221"></a>00221   <span class="keywordflow">return</span> ret;
<a name="l00222"></a>00222 }
<a name="l00223"></a>00223 
<a name="l00224"></a>00224 <span class="comment">/* Receive UDP RIPng packet from socket. */</span>
<a name="l00225"></a>00225 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00226"></a><a class="code" href="ripngd_8c.html#a4c5e47f96c44a80502ce3e206c315829">00226</a> <a class="code" href="ripngd_8c.html#a4c5e47f96c44a80502ce3e206c315829">ripng_recv_packet</a> (<span class="keywordtype">int</span> sock, u_char *buf, <span class="keywordtype">int</span> bufsize,
<a name="l00227"></a>00227            <span class="keyword">struct</span> sockaddr_in6 *from, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> *ifindex, 
<a name="l00228"></a>00228            <span class="keywordtype">int</span> *hoplimit)
<a name="l00229"></a>00229 {
<a name="l00230"></a>00230   <span class="keywordtype">int</span> ret;
<a name="l00231"></a>00231   <span class="keyword">struct </span>msghdr msg;
<a name="l00232"></a>00232   <span class="keyword">struct </span>iovec iov;
<a name="l00233"></a>00233   <span class="keyword">struct </span>cmsghdr  *cmsgptr;
<a name="l00234"></a>00234   <span class="keyword">struct </span>in6_addr dst;
<a name="l00235"></a>00235 
<a name="l00236"></a>00236   <span class="comment">/* Ancillary data.  This store cmsghdr and in6_pktinfo.  But at this</span>
<a name="l00237"></a>00237 <span class="comment">     point I can&#39;t determine size of cmsghdr */</span>
<a name="l00238"></a>00238   <span class="keywordtype">char</span> adata[1024];
<a name="l00239"></a>00239 
<a name="l00240"></a>00240   <span class="comment">/* Fill in message and iovec. */</span>
<a name="l00241"></a>00241   msg.msg_name = (<span class="keywordtype">void</span> *) from;
<a name="l00242"></a>00242   msg.msg_namelen = <span class="keyword">sizeof</span> (<span class="keyword">struct </span>sockaddr_in6);
<a name="l00243"></a>00243   msg.msg_iov = &amp;iov;
<a name="l00244"></a>00244   msg.msg_iovlen = 1;
<a name="l00245"></a>00245   msg.msg_control = (<span class="keywordtype">void</span> *) adata;
<a name="l00246"></a>00246   msg.msg_controllen = <span class="keyword">sizeof</span> adata;
<a name="l00247"></a>00247   iov.iov_base = buf;
<a name="l00248"></a>00248   iov.iov_len = bufsize;
<a name="l00249"></a>00249 
<a name="l00250"></a>00250   <span class="comment">/* If recvmsg fail return minus value. */</span>
<a name="l00251"></a>00251   ret = recvmsg (sock, &amp;msg, 0);
<a name="l00252"></a>00252   <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l00253"></a>00253     <span class="keywordflow">return</span> ret;
<a name="l00254"></a>00254 
<a name="l00255"></a>00255   <span class="keywordflow">for</span> (cmsgptr = <a class="code" href="zebra_8h.html#af3b20d5606eb7dbfc120601cd3a889be">ZCMSG_FIRSTHDR</a>(&amp;msg); cmsgptr != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00256"></a>00256        cmsgptr = CMSG_NXTHDR(&amp;msg, cmsgptr)) 
<a name="l00257"></a>00257     {
<a name="l00258"></a>00258       <span class="comment">/* I want interface index which this packet comes from. */</span>
<a name="l00259"></a>00259       <span class="keywordflow">if</span> (cmsgptr-&gt;cmsg_level == IPPROTO_IPV6 &amp;&amp;
<a name="l00260"></a>00260       cmsgptr-&gt;cmsg_type == IPV6_PKTINFO) 
<a name="l00261"></a>00261     {
<a name="l00262"></a>00262       <span class="keyword">struct </span>in6_pktinfo *ptr;
<a name="l00263"></a>00263       
<a name="l00264"></a>00264       ptr = (<span class="keyword">struct </span>in6_pktinfo *) CMSG_DATA (cmsgptr);
<a name="l00265"></a>00265       *ifindex = ptr-&gt;ipi6_ifindex;
<a name="l00266"></a>00266       dst = ptr-&gt;ipi6_addr;
<a name="l00267"></a>00267 
<a name="l00268"></a>00268       <span class="keywordflow">if</span> (*ifindex == 0)
<a name="l00269"></a>00269         <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;Interface index returned by IPV6_PKTINFO is zero&quot;</span>);
<a name="l00270"></a>00270         }
<a name="l00271"></a>00271 
<a name="l00272"></a>00272       <span class="comment">/* Incoming packet&#39;s multicast hop limit. */</span>
<a name="l00273"></a>00273       <span class="keywordflow">if</span> (cmsgptr-&gt;cmsg_level == IPPROTO_IPV6 &amp;&amp;
<a name="l00274"></a>00274       cmsgptr-&gt;cmsg_type == IPV6_HOPLIMIT)
<a name="l00275"></a>00275     {
<a name="l00276"></a>00276       <span class="keywordtype">int</span> *phoplimit = (<span class="keywordtype">int</span> *) CMSG_DATA (cmsgptr);
<a name="l00277"></a>00277       *hoplimit = *phoplimit;
<a name="l00278"></a>00278     }
<a name="l00279"></a>00279     }
<a name="l00280"></a>00280 
<a name="l00281"></a>00281   <span class="comment">/* Hoplimit check shold be done when destination address is</span>
<a name="l00282"></a>00282 <span class="comment">     multicast address. */</span>
<a name="l00283"></a>00283   <span class="keywordflow">if</span> (! IN6_IS_ADDR_MULTICAST (&amp;dst))
<a name="l00284"></a>00284     *hoplimit = -1;
<a name="l00285"></a>00285 
<a name="l00286"></a>00286   <span class="keywordflow">return</span> ret;
<a name="l00287"></a>00287 }
<a name="l00288"></a>00288 
<a name="l00289"></a>00289 <span class="comment">/* Dump rip packet */</span>
<a name="l00290"></a>00290 <span class="keywordtype">void</span>
<a name="l00291"></a><a class="code" href="ripngd_8h.html#a0d7f74786282b1676f0508b2f0c636c1">00291</a> <a class="code" href="ripngd_8c.html#a0d7f74786282b1676f0508b2f0c636c1">ripng_packet_dump</a> (<span class="keyword">struct</span> <a class="code" href="structripng__packet.html">ripng_packet</a> *packet, <span class="keywordtype">int</span> size, <span class="keyword">const</span> <span class="keywordtype">char</span> *sndrcv)
<a name="l00292"></a>00292 {
<a name="l00293"></a>00293   caddr_t lim;
<a name="l00294"></a>00294   <span class="keyword">struct </span><a class="code" href="structrte.html">rte</a> *<a class="code" href="structrte.html">rte</a>;
<a name="l00295"></a>00295   <span class="keyword">const</span> <span class="keywordtype">char</span> *command_str;
<a name="l00296"></a>00296 
<a name="l00297"></a>00297   <span class="comment">/* Set command string. */</span>
<a name="l00298"></a>00298   <span class="keywordflow">if</span> (packet-&gt;<a class="code" href="structripng__packet.html#ad3eeeb2a9f59c2a969fb40c950b6484b">command</a> == <a class="code" href="ripngd_8h.html#a6b3f586e670da71a3d8fed9c82c03e65">RIPNG_REQUEST</a>)
<a name="l00299"></a>00299     command_str = <span class="stringliteral">&quot;request&quot;</span>;
<a name="l00300"></a>00300   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (packet-&gt;<a class="code" href="structripng__packet.html#ad3eeeb2a9f59c2a969fb40c950b6484b">command</a> == <a class="code" href="ripngd_8h.html#aa5ec5496ce7fc62a57b04272d2ec5756">RIPNG_RESPONSE</a>)
<a name="l00301"></a>00301     command_str = <span class="stringliteral">&quot;response&quot;</span>;
<a name="l00302"></a>00302   <span class="keywordflow">else</span>
<a name="l00303"></a>00303     command_str = <span class="stringliteral">&quot;unknown&quot;</span>;
<a name="l00304"></a>00304 
<a name="l00305"></a>00305   <span class="comment">/* Dump packet header. */</span>
<a name="l00306"></a>00306   <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s %s version %d packet size %d&quot;</span>, 
<a name="l00307"></a>00307          sndrcv, command_str, packet-&gt;<a class="code" href="structripng__packet.html#a60fc773724de8fcfacb73abe560bb41a">version</a>, size);
<a name="l00308"></a>00308 
<a name="l00309"></a>00309   <span class="comment">/* Dump each routing table entry. */</span>
<a name="l00310"></a>00310   rte = packet-&gt;<a class="code" href="structripng__packet.html#a87cc82cb5cfac4a509180fa9efa7b341">rte</a>;
<a name="l00311"></a>00311 
<a name="l00312"></a>00312   <span class="keywordflow">for</span> (lim = (caddr_t) packet + size; (caddr_t) rte &lt; lim; rte++)
<a name="l00313"></a>00313     {
<a name="l00314"></a>00314       <span class="keywordflow">if</span> (rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a> == <a class="code" href="ripngd_8h.html#abf008d76fd54560aa51e1016ceee8c77">RIPNG_METRIC_NEXTHOP</a>)
<a name="l00315"></a>00315     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;  nexthop %s/%d&quot;</span>, inet6_ntoa (rte-&gt;<a class="code" href="structrte.html#a55d2b28f5596f5ddbdde7704e6304019">addr</a>), rte-&gt;<a class="code" href="structrte.html#ab25775a475bb20ff840233cc64f8db79">prefixlen</a>);
<a name="l00316"></a>00316       <span class="keywordflow">else</span>
<a name="l00317"></a>00317     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;  %s/%d metric %d tag %d&quot;</span>, 
<a name="l00318"></a>00318            inet6_ntoa (rte-&gt;<a class="code" href="structrte.html#a55d2b28f5596f5ddbdde7704e6304019">addr</a>), rte-&gt;<a class="code" href="structrte.html#ab25775a475bb20ff840233cc64f8db79">prefixlen</a>, 
<a name="l00319"></a>00319            rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a>, ntohs (rte-&gt;<a class="code" href="structrte.html#a0f0867462e39eed64e518342fbe6abe0">tag</a>));
<a name="l00320"></a>00320     }
<a name="l00321"></a>00321 }
<a name="l00322"></a>00322 
<a name="l00323"></a>00323 <span class="comment">/* RIPng next hop address RTE (Route Table Entry). */</span>
<a name="l00324"></a>00324 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00325"></a><a class="code" href="ripngd_8c.html#adc76996f440d2320cf5fff688543a6a5">00325</a> <a class="code" href="ripngd_8c.html#adc76996f440d2320cf5fff688543a6a5">ripng_nexthop_rte</a> (<span class="keyword">struct</span> <a class="code" href="structrte.html">rte</a> *<a class="code" href="structrte.html">rte</a>,
<a name="l00326"></a>00326            <span class="keyword">struct</span> sockaddr_in6 *from,
<a name="l00327"></a>00327            <span class="keyword">struct</span> <a class="code" href="structripng__nexthop.html">ripng_nexthop</a> *<a class="code" href="structnexthop.html">nexthop</a>)
<a name="l00328"></a>00328 {
<a name="l00329"></a>00329   <span class="keywordtype">char</span> buf[<a class="code" href="prefix_8h.html#aa154275bc7ebcfcb3a335788ad4dfe09">INET6_BUFSIZ</a>];
<a name="l00330"></a>00330 
<a name="l00331"></a>00331   <span class="comment">/* Logging before checking RTE. */</span>
<a name="l00332"></a>00332   <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a9a1da75ed0fbbe22c02f7d726b1f900c">IS_RIPNG_DEBUG_RECV</a>)
<a name="l00333"></a>00333     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;RIPng nexthop RTE address %s tag %d prefixlen %d&quot;</span>,
<a name="l00334"></a>00334            inet6_ntoa (rte-&gt;<a class="code" href="structrte.html#a55d2b28f5596f5ddbdde7704e6304019">addr</a>), ntohs (rte-&gt;<a class="code" href="structrte.html#a0f0867462e39eed64e518342fbe6abe0">tag</a>), rte-&gt;<a class="code" href="structrte.html#ab25775a475bb20ff840233cc64f8db79">prefixlen</a>);
<a name="l00335"></a>00335 
<a name="l00336"></a>00336   <span class="comment">/* RFC2080 2.1.1 Next Hop: </span>
<a name="l00337"></a>00337 <span class="comment">   The route tag and prefix length in the next hop RTE must be</span>
<a name="l00338"></a>00338 <span class="comment">   set to zero on sending and ignored on receiption.  */</span>
<a name="l00339"></a>00339   <span class="keywordflow">if</span> (ntohs (rte-&gt;<a class="code" href="structrte.html#a0f0867462e39eed64e518342fbe6abe0">tag</a>) != 0)
<a name="l00340"></a>00340     <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;RIPng nexthop RTE with non zero tag value %d from %s&quot;</span>,
<a name="l00341"></a>00341            ntohs (rte-&gt;<a class="code" href="structrte.html#a0f0867462e39eed64e518342fbe6abe0">tag</a>), inet6_ntoa (from-&gt;sin6_addr));
<a name="l00342"></a>00342 
<a name="l00343"></a>00343   <span class="keywordflow">if</span> (rte-&gt;<a class="code" href="structrte.html#ab25775a475bb20ff840233cc64f8db79">prefixlen</a> != 0)
<a name="l00344"></a>00344     <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;RIPng nexthop RTE with non zero prefixlen value %d from %s&quot;</span>,
<a name="l00345"></a>00345            rte-&gt;<a class="code" href="structrte.html#ab25775a475bb20ff840233cc64f8db79">prefixlen</a>, inet6_ntoa (from-&gt;sin6_addr));
<a name="l00346"></a>00346 
<a name="l00347"></a>00347   <span class="comment">/* Specifying a value of 0:0:0:0:0:0:0:0 in the prefix field of a</span>
<a name="l00348"></a>00348 <span class="comment">   next hop RTE indicates that the next hop address should be the</span>
<a name="l00349"></a>00349 <span class="comment">   originator of the RIPng advertisement.  An address specified as a</span>
<a name="l00350"></a>00350 <span class="comment">   next hop must be a link-local address.  */</span>
<a name="l00351"></a>00351   <span class="keywordflow">if</span> (IN6_IS_ADDR_UNSPECIFIED (&amp;rte-&gt;<a class="code" href="structrte.html#a55d2b28f5596f5ddbdde7704e6304019">addr</a>))
<a name="l00352"></a>00352     {
<a name="l00353"></a>00353       nexthop-&gt;<a class="code" href="structripng__nexthop.html#a47491d21e1277401bed39f35a79434b2">flag</a> = RIPNG_NEXTHOP_UNSPEC;
<a name="l00354"></a>00354       memset (&amp;nexthop-&gt;<a class="code" href="structripng__nexthop.html#a2ddcc6f402319ccad8ab97f3d17e62b9">address</a>, 0, sizeof (<span class="keyword">struct</span> in6_addr));
<a name="l00355"></a>00355       <span class="keywordflow">return</span>;
<a name="l00356"></a>00356     }
<a name="l00357"></a>00357 
<a name="l00358"></a>00358   <span class="keywordflow">if</span> (IN6_IS_ADDR_LINKLOCAL (&amp;rte-&gt;<a class="code" href="structrte.html#a55d2b28f5596f5ddbdde7704e6304019">addr</a>))
<a name="l00359"></a>00359     {
<a name="l00360"></a>00360       nexthop-&gt;<a class="code" href="structripng__nexthop.html#a47491d21e1277401bed39f35a79434b2">flag</a> = RIPNG_NEXTHOP_ADDRESS;
<a name="l00361"></a>00361       <a class="code" href="prefix_8h.html#aea44c9c04fa7bd58457b572592d391a7">IPV6_ADDR_COPY</a> (&amp;nexthop-&gt;<a class="code" href="structripng__nexthop.html#a2ddcc6f402319ccad8ab97f3d17e62b9">address</a>, &amp;rte-&gt;<a class="code" href="structrte.html#a55d2b28f5596f5ddbdde7704e6304019">addr</a>);
<a name="l00362"></a>00362       <span class="keywordflow">return</span>;
<a name="l00363"></a>00363     }
<a name="l00364"></a>00364 
<a name="l00365"></a>00365   <span class="comment">/* The purpose of the next hop RTE is to eliminate packets being</span>
<a name="l00366"></a>00366 <span class="comment">   routed through extra hops in the system.  It is particularly useful</span>
<a name="l00367"></a>00367 <span class="comment">   when RIPng is not being run on all of the routers on a network.</span>
<a name="l00368"></a>00368 <span class="comment">   Note that next hop RTE is &quot;advisory&quot;.  That is, if the provided</span>
<a name="l00369"></a>00369 <span class="comment">   information is ignored, a possibly sub-optimal, but absolutely</span>
<a name="l00370"></a>00370 <span class="comment">   valid, route may be taken.  If the received next hop address is not</span>
<a name="l00371"></a>00371 <span class="comment">   a link-local address, it should be treated as 0:0:0:0:0:0:0:0.  */</span>
<a name="l00372"></a>00372   <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;RIPng nexthop RTE with non link-local address %s from %s&quot;</span>,
<a name="l00373"></a>00373          inet6_ntoa (rte-&gt;<a class="code" href="structrte.html#a55d2b28f5596f5ddbdde7704e6304019">addr</a>),
<a name="l00374"></a>00374          <a class="code" href="sockunion_8c.html#a5bfb767e8fa3f9ff5d2a1e19d71791f4">inet_ntop</a> (AF_INET6, &amp;from-&gt;sin6_addr, buf, <a class="code" href="prefix_8h.html#aa154275bc7ebcfcb3a335788ad4dfe09">INET6_BUFSIZ</a>));
<a name="l00375"></a>00375 
<a name="l00376"></a>00376   nexthop-&gt;<a class="code" href="structripng__nexthop.html#a47491d21e1277401bed39f35a79434b2">flag</a> = RIPNG_NEXTHOP_UNSPEC;
<a name="l00377"></a>00377   memset (&amp;nexthop-&gt;<a class="code" href="structripng__nexthop.html#a2ddcc6f402319ccad8ab97f3d17e62b9">address</a>, 0, sizeof (<span class="keyword">struct</span> in6_addr));
<a name="l00378"></a>00378 
<a name="l00379"></a>00379   <span class="keywordflow">return</span>;
<a name="l00380"></a>00380 }
<a name="l00381"></a>00381 
<a name="l00382"></a>00382 <span class="comment">/* If ifp has same link-local address then return 1. */</span>
<a name="l00383"></a>00383 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00384"></a><a class="code" href="ripngd_8c.html#ab31cc16d7dd4df1e71bb29c546d88cfb">00384</a> <a class="code" href="ripngd_8c.html#ab31cc16d7dd4df1e71bb29c546d88cfb">ripng_lladdr_check</a> (<span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp, <span class="keyword">struct</span> in6_addr *<a class="code" href="structrte.html#a55d2b28f5596f5ddbdde7704e6304019">addr</a>)
<a name="l00385"></a>00385 {
<a name="l00386"></a>00386   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00387"></a>00387   <span class="keyword">struct </span><a class="code" href="structconnected.html">connected</a> *<a class="code" href="structconnected.html">connected</a>;
<a name="l00388"></a>00388   <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
<a name="l00389"></a>00389 
<a name="l00390"></a>00390   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ifp-&gt;<a class="code" href="structinterface.html#ac7c47b5cc1df81e51bf1ecea97b4d4b3">connected</a>, node, connected))
<a name="l00391"></a>00391     {
<a name="l00392"></a>00392       p = connected-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>;
<a name="l00393"></a>00393 
<a name="l00394"></a>00394       <span class="keywordflow">if</span> (p-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == AF_INET6 &amp;&amp;
<a name="l00395"></a>00395           IN6_IS_ADDR_LINKLOCAL (&amp;p-&gt;u.prefix6) &amp;&amp;
<a name="l00396"></a>00396           <a class="code" href="zebra_8h.html#abb82efab585ad36d8ce0d873bee5941b">IN6_ARE_ADDR_EQUAL</a> (&amp;p-&gt;u.prefix6, addr))
<a name="l00397"></a>00397         <span class="keywordflow">return</span> 1;
<a name="l00398"></a>00398     }
<a name="l00399"></a>00399   <span class="keywordflow">return</span> 0;
<a name="l00400"></a>00400 }
<a name="l00401"></a>00401 
<a name="l00402"></a>00402 <span class="comment">/* RIPng route garbage collect timer. */</span>
<a name="l00403"></a>00403 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00404"></a><a class="code" href="ripngd_8c.html#ad9748647bbab59298c91b150352917a8">00404</a> <a class="code" href="ripngd_8c.html#ad9748647bbab59298c91b150352917a8">ripng_garbage_collect</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>)
<a name="l00405"></a>00405 {
<a name="l00406"></a>00406   <span class="keyword">struct </span><a class="code" href="structripng__info.html">ripng_info</a> *rinfo;
<a name="l00407"></a>00407   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rp;
<a name="l00408"></a>00408 
<a name="l00409"></a>00409   rinfo = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (t);
<a name="l00410"></a>00410   rinfo-&gt;<a class="code" href="structripng__info.html#a26eebec0ab345768bc791435d2a551b9">t_garbage_collect</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00411"></a>00411 
<a name="l00412"></a>00412   <span class="comment">/* Off timeout timer. */</span>
<a name="l00413"></a>00413   <a class="code" href="ripngd_8h.html#ab73283656926a9bd7d6c73343acc4102">RIPNG_TIMER_OFF</a> (rinfo-&gt;<a class="code" href="structripng__info.html#ab3490e49b1b0cacad3b8bb76e20d487f">t_timeout</a>);
<a name="l00414"></a>00414   
<a name="l00415"></a>00415   <span class="comment">/* Get route_node pointer. */</span>
<a name="l00416"></a>00416   rp = rinfo-&gt;<a class="code" href="structripng__info.html#a78207eabf7ccff094710f2f68dd86c08">rp</a>;
<a name="l00417"></a>00417 
<a name="l00418"></a>00418   <span class="comment">/* Unlock route_node. */</span>
<a name="l00419"></a>00419   rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00420"></a>00420   <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rp);
<a name="l00421"></a>00421 
<a name="l00422"></a>00422   <span class="comment">/* Free RIPng routing information. */</span>
<a name="l00423"></a>00423   <a class="code" href="ripngd_8c.html#a9dac36daa3fa248437e2cfab0289331c">ripng_info_free</a> (rinfo);
<a name="l00424"></a>00424 
<a name="l00425"></a>00425   <span class="keywordflow">return</span> 0;
<a name="l00426"></a>00426 }
<a name="l00427"></a>00427 
<a name="l00428"></a>00428 <span class="comment">/* Timeout RIPng routes. */</span>
<a name="l00429"></a>00429 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00430"></a><a class="code" href="ripngd_8c.html#a4f3e9c6e2caf64e72fcd3b109448bf3e">00430</a> <a class="code" href="ripngd_8c.html#a4f3e9c6e2caf64e72fcd3b109448bf3e">ripng_timeout</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>)
<a name="l00431"></a>00431 {
<a name="l00432"></a>00432   <span class="keyword">struct </span><a class="code" href="structripng__info.html">ripng_info</a> *rinfo;
<a name="l00433"></a>00433   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rp;
<a name="l00434"></a>00434 
<a name="l00435"></a>00435   rinfo = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (t);
<a name="l00436"></a>00436   rinfo-&gt;<a class="code" href="structripng__info.html#ab3490e49b1b0cacad3b8bb76e20d487f">t_timeout</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00437"></a>00437 
<a name="l00438"></a>00438   <span class="comment">/* Get route_node pointer. */</span>
<a name="l00439"></a>00439   rp = rinfo-&gt;<a class="code" href="structripng__info.html#a78207eabf7ccff094710f2f68dd86c08">rp</a>;
<a name="l00440"></a>00440 
<a name="l00441"></a>00441   <span class="comment">/* - The garbage-collection timer is set for 120 seconds. */</span>
<a name="l00442"></a>00442   <a class="code" href="ripngd_8h.html#a76723e13884b239d90fedad4a6945d90">RIPNG_TIMER_ON</a> (rinfo-&gt;<a class="code" href="structripng__info.html#a26eebec0ab345768bc791435d2a551b9">t_garbage_collect</a>, <a class="code" href="ripngd_8c.html#ad9748647bbab59298c91b150352917a8">ripng_garbage_collect</a>, 
<a name="l00443"></a>00443           ripng-&gt;<a class="code" href="structripng.html#a79a6db0c820761917a6d5b19c2383dbd">garbage_time</a>);
<a name="l00444"></a>00444 
<a name="l00445"></a>00445   <span class="comment">/* Delete this route from the kernel. */</span>
<a name="l00446"></a>00446   <a class="code" href="ripng__zebra_8c.html#a8c975a52ab3f2a4e4593d75232185382">ripng_zebra_ipv6_delete</a> ((<span class="keyword">struct</span> prefix_ipv6 *)&amp;rp-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>, &amp;rinfo-&gt;<a class="code" href="structripng__info.html#a9e4a05b7f0911b7d3805b1c0fa2c45bf">nexthop</a>,
<a name="l00447"></a>00447                 rinfo-&gt;<a class="code" href="structripng__info.html#a5269ffb6b1daf9eddae7ea92d271d5d6">ifindex</a>);
<a name="l00448"></a>00448   <span class="comment">/* - The metric for the route is set to 16 (infinity).  This causes</span>
<a name="l00449"></a>00449 <span class="comment">     the route to be removed from service. */</span>
<a name="l00450"></a>00450   rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a> = <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>;
<a name="l00451"></a>00451   rinfo-&gt;<a class="code" href="structripng__info.html#adc51f81d4cf365159e1aea265869f095">flags</a> &amp;= ~<a class="code" href="ripngd_8h.html#a6e1843ed62fdcda0c95be01e0386d69c">RIPNG_RTF_FIB</a>;
<a name="l00452"></a>00452 
<a name="l00453"></a>00453   <span class="comment">/* Aggregate count decrement. */</span>
<a name="l00454"></a>00454   <a class="code" href="ripng__route_8c.html#aba0f321f8fbbe5003489ede81c5fa0fd">ripng_aggregate_decrement</a> (rp, rinfo);
<a name="l00455"></a>00455 
<a name="l00456"></a>00456   <span class="comment">/* - The route change flag is to indicate that this entry has been</span>
<a name="l00457"></a>00457 <span class="comment">     changed. */</span>
<a name="l00458"></a>00458   rinfo-&gt;<a class="code" href="structripng__info.html#adc51f81d4cf365159e1aea265869f095">flags</a> |= <a class="code" href="ripngd_8h.html#ae2ac88c46de4d1bc9f2b01e122049b57">RIPNG_RTF_CHANGED</a>;
<a name="l00459"></a>00459 
<a name="l00460"></a>00460   <span class="comment">/* - The output process is signalled to trigger a response. */</span>
<a name="l00461"></a>00461   <a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6">ripng_event</a> (<a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6a2e7d2cd80dd6c338241452b2e2f64cd9">RIPNG_TRIGGERED_UPDATE</a>, 0);
<a name="l00462"></a>00462 
<a name="l00463"></a>00463   <span class="keywordflow">return</span> 0;
<a name="l00464"></a>00464 }
<a name="l00465"></a>00465 
<a name="l00466"></a>00466 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00467"></a><a class="code" href="ripngd_8c.html#a14095cf7dba79691f9bceecc899bf66c">00467</a> <a class="code" href="ripngd_8c.html#a14095cf7dba79691f9bceecc899bf66c">ripng_timeout_update</a> (<span class="keyword">struct</span> <a class="code" href="structripng__info.html">ripng_info</a> *rinfo)
<a name="l00468"></a>00468 {
<a name="l00469"></a>00469   <span class="keywordflow">if</span> (rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a> != <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>)
<a name="l00470"></a>00470     {
<a name="l00471"></a>00471       <a class="code" href="ripngd_8h.html#ab73283656926a9bd7d6c73343acc4102">RIPNG_TIMER_OFF</a> (rinfo-&gt;<a class="code" href="structripng__info.html#ab3490e49b1b0cacad3b8bb76e20d487f">t_timeout</a>);
<a name="l00472"></a>00472       <a class="code" href="ripngd_8h.html#a76723e13884b239d90fedad4a6945d90">RIPNG_TIMER_ON</a> (rinfo-&gt;<a class="code" href="structripng__info.html#ab3490e49b1b0cacad3b8bb76e20d487f">t_timeout</a>, <a class="code" href="ripngd_8c.html#a4f3e9c6e2caf64e72fcd3b109448bf3e">ripng_timeout</a>, ripng-&gt;<a class="code" href="structripng.html#a1e46af0d5dd1bdd43a29901c70772ab5">timeout_time</a>);
<a name="l00473"></a>00473     }
<a name="l00474"></a>00474 }
<a name="l00475"></a>00475 
<a name="l00476"></a>00476 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00477"></a><a class="code" href="ripngd_8c.html#ad73db0842e290ed6f113c6ac70e53ed6">00477</a> <a class="code" href="ripngd_8c.html#ad73db0842e290ed6f113c6ac70e53ed6">ripng_incoming_filter</a> (<span class="keyword">struct</span> prefix_ipv6 *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, <span class="keyword">struct</span> <a class="code" href="structripng__interface.html">ripng_interface</a> *ri)
<a name="l00478"></a>00478 {
<a name="l00479"></a>00479   <span class="keyword">struct </span><a class="code" href="structdistribute.html">distribute</a> *dist;
<a name="l00480"></a>00480   <span class="keyword">struct </span><a class="code" href="structaccess__list.html">access_list</a> *alist;
<a name="l00481"></a>00481   <span class="keyword">struct </span><a class="code" href="structprefix__list.html">prefix_list</a> *plist;
<a name="l00482"></a>00482 
<a name="l00483"></a>00483   <span class="comment">/* Input distribute-list filtering. */</span>
<a name="l00484"></a>00484   <span class="keywordflow">if</span> (ri-&gt;<a class="code" href="structripng__interface.html#aef30bff6aaa0c37223dacfdb50103c8f">list</a>[<a class="code" href="ripngd_8h.html#a7df8c8ba73eff381ea6a5a4160ceb1d6">RIPNG_FILTER_IN</a>])
<a name="l00485"></a>00485     {
<a name="l00486"></a>00486       <span class="keywordflow">if</span> (<a class="code" href="filter_8c.html#a5565f487c65e2bf0308c7fd529f121a0">access_list_apply</a> (ri-&gt;<a class="code" href="structripng__interface.html#aef30bff6aaa0c37223dacfdb50103c8f">list</a>[<a class="code" href="ripngd_8h.html#a7df8c8ba73eff381ea6a5a4160ceb1d6">RIPNG_FILTER_IN</a>], 
<a name="l00487"></a>00487                  (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) p) == <a class="code" href="filter_8h.html#ab3b7281956317556f846daaebf75de72a898abadf6cc2f9d27780782f09d3a3e3">FILTER_DENY</a>)
<a name="l00488"></a>00488     {
<a name="l00489"></a>00489       <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a797e548e17ca4673c39625a1fc8b93ae">IS_RIPNG_DEBUG_PACKET</a>)
<a name="l00490"></a>00490         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s/%d filtered by distribute in&quot;</span>,
<a name="l00491"></a>00491                inet6_ntoa (p-&gt;<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>), p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
<a name="l00492"></a>00492       <span class="keywordflow">return</span> -1;
<a name="l00493"></a>00493     }
<a name="l00494"></a>00494     }
<a name="l00495"></a>00495   <span class="keywordflow">if</span> (ri-&gt;<a class="code" href="structripng__interface.html#a9d8e484158229437cc77cdc890f13284">prefix</a>[<a class="code" href="ripngd_8h.html#a7df8c8ba73eff381ea6a5a4160ceb1d6">RIPNG_FILTER_IN</a>])
<a name="l00496"></a>00496     {
<a name="l00497"></a>00497       <span class="keywordflow">if</span> (<a class="code" href="plist_8c.html#a6fd9bac08d2cb3d2e315d88af146a7f0">prefix_list_apply</a> (ri-&gt;<a class="code" href="structripng__interface.html#a9d8e484158229437cc77cdc890f13284">prefix</a>[<a class="code" href="ripngd_8h.html#a7df8c8ba73eff381ea6a5a4160ceb1d6">RIPNG_FILTER_IN</a>], 
<a name="l00498"></a>00498                  (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) p) == <a class="code" href="plist_8h.html#a3bda5ec3d1202bc8eb472b4d97633cf9a697cf8d0db0ead308a6ef01301f9543c">PREFIX_DENY</a>)
<a name="l00499"></a>00499     {
<a name="l00500"></a>00500       <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a797e548e17ca4673c39625a1fc8b93ae">IS_RIPNG_DEBUG_PACKET</a>)
<a name="l00501"></a>00501         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s/%d filtered by prefix-list in&quot;</span>,
<a name="l00502"></a>00502                inet6_ntoa (p-&gt;<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>), p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
<a name="l00503"></a>00503       <span class="keywordflow">return</span> -1;
<a name="l00504"></a>00504     }
<a name="l00505"></a>00505     }
<a name="l00506"></a>00506 
<a name="l00507"></a>00507   <span class="comment">/* All interface filter check. */</span>
<a name="l00508"></a>00508   dist = <a class="code" href="distribute_8c.html#ad9181c39aaaf02fa3d608dc7b03aecca">distribute_lookup</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l00509"></a>00509   <span class="keywordflow">if</span> (dist)
<a name="l00510"></a>00510     {
<a name="l00511"></a>00511       <span class="keywordflow">if</span> (dist-&gt;<a class="code" href="structdistribute.html#ae700fe421ad0a7ec2a039a7d95b94f88">list</a>[<a class="code" href="distribute_8h.html#a1c0e792c3a3f7fbb843cd4f1a3771b47a68442e4b689f5012c35729e2bc04525a">DISTRIBUTE_IN</a>])
<a name="l00512"></a>00512     {
<a name="l00513"></a>00513       alist = <a class="code" href="filter_8c.html#a8cb65cd01015f6673c632cb5b8714b3e">access_list_lookup</a> (<a class="code" href="zebra_8h.html#ad10f30457e426e1d269466d3b6603c3c">AFI_IP6</a>, dist-&gt;<a class="code" href="structdistribute.html#ae700fe421ad0a7ec2a039a7d95b94f88">list</a>[<a class="code" href="distribute_8h.html#a1c0e792c3a3f7fbb843cd4f1a3771b47a68442e4b689f5012c35729e2bc04525a">DISTRIBUTE_IN</a>]);
<a name="l00514"></a>00514         
<a name="l00515"></a>00515       <span class="keywordflow">if</span> (alist)
<a name="l00516"></a>00516         {
<a name="l00517"></a>00517           <span class="keywordflow">if</span> (<a class="code" href="filter_8c.html#a5565f487c65e2bf0308c7fd529f121a0">access_list_apply</a> (alist,
<a name="l00518"></a>00518                      (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) p) == <a class="code" href="filter_8h.html#ab3b7281956317556f846daaebf75de72a898abadf6cc2f9d27780782f09d3a3e3">FILTER_DENY</a>)
<a name="l00519"></a>00519         {
<a name="l00520"></a>00520           <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a797e548e17ca4673c39625a1fc8b93ae">IS_RIPNG_DEBUG_PACKET</a>)
<a name="l00521"></a>00521             <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s/%d filtered by distribute in&quot;</span>,
<a name="l00522"></a>00522                    inet6_ntoa (p-&gt;<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>), p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
<a name="l00523"></a>00523           <span class="keywordflow">return</span> -1;
<a name="l00524"></a>00524         }
<a name="l00525"></a>00525         }
<a name="l00526"></a>00526     }
<a name="l00527"></a>00527       <span class="keywordflow">if</span> (dist-&gt;<a class="code" href="structdistribute.html#a54a1f165146de6036335780661bcba89">prefix</a>[<a class="code" href="distribute_8h.html#a1c0e792c3a3f7fbb843cd4f1a3771b47a68442e4b689f5012c35729e2bc04525a">DISTRIBUTE_IN</a>])
<a name="l00528"></a>00528     {
<a name="l00529"></a>00529       plist = <a class="code" href="plist_8c.html#adfce5b38dccccdc141ffd3571b73a656">prefix_list_lookup</a> (<a class="code" href="zebra_8h.html#ad10f30457e426e1d269466d3b6603c3c">AFI_IP6</a>, dist-&gt;<a class="code" href="structdistribute.html#a54a1f165146de6036335780661bcba89">prefix</a>[<a class="code" href="distribute_8h.html#a1c0e792c3a3f7fbb843cd4f1a3771b47a68442e4b689f5012c35729e2bc04525a">DISTRIBUTE_IN</a>]);
<a name="l00530"></a>00530       
<a name="l00531"></a>00531       <span class="keywordflow">if</span> (plist)
<a name="l00532"></a>00532         {
<a name="l00533"></a>00533           <span class="keywordflow">if</span> (<a class="code" href="plist_8c.html#a6fd9bac08d2cb3d2e315d88af146a7f0">prefix_list_apply</a> (plist,
<a name="l00534"></a>00534                      (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) p) == <a class="code" href="plist_8h.html#a3bda5ec3d1202bc8eb472b4d97633cf9a697cf8d0db0ead308a6ef01301f9543c">PREFIX_DENY</a>)
<a name="l00535"></a>00535         {
<a name="l00536"></a>00536           <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a797e548e17ca4673c39625a1fc8b93ae">IS_RIPNG_DEBUG_PACKET</a>)
<a name="l00537"></a>00537             <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s/%d filtered by prefix-list in&quot;</span>,
<a name="l00538"></a>00538                    inet6_ntoa (p-&gt;<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>), p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
<a name="l00539"></a>00539           <span class="keywordflow">return</span> -1;
<a name="l00540"></a>00540         }
<a name="l00541"></a>00541         }
<a name="l00542"></a>00542     }
<a name="l00543"></a>00543     }
<a name="l00544"></a>00544   <span class="keywordflow">return</span> 0;
<a name="l00545"></a>00545 }
<a name="l00546"></a>00546 
<a name="l00547"></a>00547 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00548"></a><a class="code" href="ripngd_8c.html#a3c5328e302972ace7df548c57ca8d2a9">00548</a> <a class="code" href="ripngd_8c.html#a3c5328e302972ace7df548c57ca8d2a9">ripng_outgoing_filter</a> (<span class="keyword">struct</span> prefix_ipv6 *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, <span class="keyword">struct</span> <a class="code" href="structripng__interface.html">ripng_interface</a> *ri)
<a name="l00549"></a>00549 {
<a name="l00550"></a>00550   <span class="keyword">struct </span><a class="code" href="structdistribute.html">distribute</a> *dist;
<a name="l00551"></a>00551   <span class="keyword">struct </span><a class="code" href="structaccess__list.html">access_list</a> *alist;
<a name="l00552"></a>00552   <span class="keyword">struct </span><a class="code" href="structprefix__list.html">prefix_list</a> *plist;
<a name="l00553"></a>00553 
<a name="l00554"></a>00554   <span class="keywordflow">if</span> (ri-&gt;<a class="code" href="structripng__interface.html#aef30bff6aaa0c37223dacfdb50103c8f">list</a>[<a class="code" href="ripngd_8h.html#a8de1142dbc70369804d0b971bf2c4543">RIPNG_FILTER_OUT</a>])
<a name="l00555"></a>00555     {
<a name="l00556"></a>00556       <span class="keywordflow">if</span> (<a class="code" href="filter_8c.html#a5565f487c65e2bf0308c7fd529f121a0">access_list_apply</a> (ri-&gt;<a class="code" href="structripng__interface.html#aef30bff6aaa0c37223dacfdb50103c8f">list</a>[<a class="code" href="ripngd_8h.html#a8de1142dbc70369804d0b971bf2c4543">RIPNG_FILTER_OUT</a>],
<a name="l00557"></a>00557                  (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) p) == <a class="code" href="filter_8h.html#ab3b7281956317556f846daaebf75de72a898abadf6cc2f9d27780782f09d3a3e3">FILTER_DENY</a>)
<a name="l00558"></a>00558     {
<a name="l00559"></a>00559       <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a797e548e17ca4673c39625a1fc8b93ae">IS_RIPNG_DEBUG_PACKET</a>)
<a name="l00560"></a>00560         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s/%d is filtered by distribute out&quot;</span>,
<a name="l00561"></a>00561                inet6_ntoa (p-&gt;<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>), p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
<a name="l00562"></a>00562       <span class="keywordflow">return</span> -1;
<a name="l00563"></a>00563     }
<a name="l00564"></a>00564     }
<a name="l00565"></a>00565   <span class="keywordflow">if</span> (ri-&gt;<a class="code" href="structripng__interface.html#a9d8e484158229437cc77cdc890f13284">prefix</a>[<a class="code" href="ripngd_8h.html#a8de1142dbc70369804d0b971bf2c4543">RIPNG_FILTER_OUT</a>])
<a name="l00566"></a>00566     {
<a name="l00567"></a>00567       <span class="keywordflow">if</span> (<a class="code" href="plist_8c.html#a6fd9bac08d2cb3d2e315d88af146a7f0">prefix_list_apply</a> (ri-&gt;<a class="code" href="structripng__interface.html#a9d8e484158229437cc77cdc890f13284">prefix</a>[<a class="code" href="ripngd_8h.html#a8de1142dbc70369804d0b971bf2c4543">RIPNG_FILTER_OUT</a>],
<a name="l00568"></a>00568                  (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) p) == <a class="code" href="plist_8h.html#a3bda5ec3d1202bc8eb472b4d97633cf9a697cf8d0db0ead308a6ef01301f9543c">PREFIX_DENY</a>)
<a name="l00569"></a>00569     {
<a name="l00570"></a>00570       <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a797e548e17ca4673c39625a1fc8b93ae">IS_RIPNG_DEBUG_PACKET</a>)
<a name="l00571"></a>00571         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s/%d is filtered by prefix-list out&quot;</span>,
<a name="l00572"></a>00572                inet6_ntoa (p-&gt;<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>), p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
<a name="l00573"></a>00573       <span class="keywordflow">return</span> -1;
<a name="l00574"></a>00574     }
<a name="l00575"></a>00575     }
<a name="l00576"></a>00576 
<a name="l00577"></a>00577   <span class="comment">/* All interface filter check. */</span>
<a name="l00578"></a>00578   dist = <a class="code" href="distribute_8c.html#ad9181c39aaaf02fa3d608dc7b03aecca">distribute_lookup</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l00579"></a>00579   <span class="keywordflow">if</span> (dist)
<a name="l00580"></a>00580     {
<a name="l00581"></a>00581       <span class="keywordflow">if</span> (dist-&gt;<a class="code" href="structdistribute.html#ae700fe421ad0a7ec2a039a7d95b94f88">list</a>[<a class="code" href="distribute_8h.html#a1c0e792c3a3f7fbb843cd4f1a3771b47aa34d81eff0dbfb4b601611cb69ffd894">DISTRIBUTE_OUT</a>])
<a name="l00582"></a>00582     {
<a name="l00583"></a>00583       alist = <a class="code" href="filter_8c.html#a8cb65cd01015f6673c632cb5b8714b3e">access_list_lookup</a> (<a class="code" href="zebra_8h.html#ad10f30457e426e1d269466d3b6603c3c">AFI_IP6</a>, dist-&gt;<a class="code" href="structdistribute.html#ae700fe421ad0a7ec2a039a7d95b94f88">list</a>[<a class="code" href="distribute_8h.html#a1c0e792c3a3f7fbb843cd4f1a3771b47aa34d81eff0dbfb4b601611cb69ffd894">DISTRIBUTE_OUT</a>]);
<a name="l00584"></a>00584         
<a name="l00585"></a>00585       <span class="keywordflow">if</span> (alist)
<a name="l00586"></a>00586         {
<a name="l00587"></a>00587           <span class="keywordflow">if</span> (<a class="code" href="filter_8c.html#a5565f487c65e2bf0308c7fd529f121a0">access_list_apply</a> (alist,
<a name="l00588"></a>00588                      (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) p) == <a class="code" href="filter_8h.html#ab3b7281956317556f846daaebf75de72a898abadf6cc2f9d27780782f09d3a3e3">FILTER_DENY</a>)
<a name="l00589"></a>00589         {
<a name="l00590"></a>00590           <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a797e548e17ca4673c39625a1fc8b93ae">IS_RIPNG_DEBUG_PACKET</a>)
<a name="l00591"></a>00591             <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s/%d filtered by distribute out&quot;</span>,
<a name="l00592"></a>00592                    inet6_ntoa (p-&gt;<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>), p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
<a name="l00593"></a>00593           <span class="keywordflow">return</span> -1;
<a name="l00594"></a>00594         }
<a name="l00595"></a>00595         }
<a name="l00596"></a>00596     }
<a name="l00597"></a>00597       <span class="keywordflow">if</span> (dist-&gt;<a class="code" href="structdistribute.html#a54a1f165146de6036335780661bcba89">prefix</a>[<a class="code" href="distribute_8h.html#a1c0e792c3a3f7fbb843cd4f1a3771b47aa34d81eff0dbfb4b601611cb69ffd894">DISTRIBUTE_OUT</a>])
<a name="l00598"></a>00598     {
<a name="l00599"></a>00599       plist = <a class="code" href="plist_8c.html#adfce5b38dccccdc141ffd3571b73a656">prefix_list_lookup</a> (<a class="code" href="zebra_8h.html#ad10f30457e426e1d269466d3b6603c3c">AFI_IP6</a>, dist-&gt;<a class="code" href="structdistribute.html#a54a1f165146de6036335780661bcba89">prefix</a>[<a class="code" href="distribute_8h.html#a1c0e792c3a3f7fbb843cd4f1a3771b47aa34d81eff0dbfb4b601611cb69ffd894">DISTRIBUTE_OUT</a>]);
<a name="l00600"></a>00600       
<a name="l00601"></a>00601       <span class="keywordflow">if</span> (plist)
<a name="l00602"></a>00602         {
<a name="l00603"></a>00603           <span class="keywordflow">if</span> (<a class="code" href="plist_8c.html#a6fd9bac08d2cb3d2e315d88af146a7f0">prefix_list_apply</a> (plist,
<a name="l00604"></a>00604                      (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) p) == <a class="code" href="plist_8h.html#a3bda5ec3d1202bc8eb472b4d97633cf9a697cf8d0db0ead308a6ef01301f9543c">PREFIX_DENY</a>)
<a name="l00605"></a>00605         {
<a name="l00606"></a>00606           <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a797e548e17ca4673c39625a1fc8b93ae">IS_RIPNG_DEBUG_PACKET</a>)
<a name="l00607"></a>00607             <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s/%d filtered by prefix-list out&quot;</span>,
<a name="l00608"></a>00608                    inet6_ntoa (p-&gt;<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>), p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
<a name="l00609"></a>00609           <span class="keywordflow">return</span> -1;
<a name="l00610"></a>00610         }
<a name="l00611"></a>00611         }
<a name="l00612"></a>00612     }
<a name="l00613"></a>00613     }
<a name="l00614"></a>00614   <span class="keywordflow">return</span> 0;
<a name="l00615"></a>00615 }
<a name="l00616"></a>00616 
<a name="l00617"></a>00617 <span class="comment">/* Process RIPng route according to RFC2080. */</span>
<a name="l00618"></a>00618 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00619"></a><a class="code" href="ripngd_8c.html#a9a70d765d5d3ff923a01c97ca3ef8903">00619</a> <a class="code" href="ripngd_8c.html#a9a70d765d5d3ff923a01c97ca3ef8903">ripng_route_process</a> (<span class="keyword">struct</span> <a class="code" href="structrte.html">rte</a> *<a class="code" href="structrte.html">rte</a>, <span class="keyword">struct</span> sockaddr_in6 *from,
<a name="l00620"></a>00620              <span class="keyword">struct</span> <a class="code" href="structripng__nexthop.html">ripng_nexthop</a> *<a class="code" href="structripng__nexthop.html">ripng_nexthop</a>,
<a name="l00621"></a>00621              <span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp)
<a name="l00622"></a>00622 {
<a name="l00623"></a>00623   <span class="keywordtype">int</span> ret;
<a name="l00624"></a>00624   <span class="keyword">struct </span>prefix_ipv6 p;
<a name="l00625"></a>00625   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rp;
<a name="l00626"></a>00626   <span class="keyword">struct </span><a class="code" href="structripng__info.html">ripng_info</a> *rinfo;
<a name="l00627"></a>00627   <span class="keyword">struct </span><a class="code" href="structripng__interface.html">ripng_interface</a> *ri;
<a name="l00628"></a>00628   <span class="keyword">struct </span>in6_addr *<a class="code" href="structnexthop.html">nexthop</a>;
<a name="l00629"></a>00629   u_char oldmetric;
<a name="l00630"></a>00630   <span class="keywordtype">int</span> same = 0;
<a name="l00631"></a>00631 
<a name="l00632"></a>00632   <span class="comment">/* Make prefix structure. */</span>
<a name="l00633"></a>00633   memset (&amp;p, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> prefix_ipv6));
<a name="l00634"></a>00634   p.family = AF_INET6;
<a name="l00635"></a>00635   <span class="comment">/* p.prefix = rte-&gt;addr; */</span>
<a name="l00636"></a>00636   <a class="code" href="prefix_8h.html#aea44c9c04fa7bd58457b572592d391a7">IPV6_ADDR_COPY</a> (&amp;p.prefix, &amp;rte-&gt;<a class="code" href="structrte.html#a55d2b28f5596f5ddbdde7704e6304019">addr</a>);
<a name="l00637"></a>00637   p.prefixlen = rte-&gt;<a class="code" href="structrte.html#ab25775a475bb20ff840233cc64f8db79">prefixlen</a>;
<a name="l00638"></a>00638 
<a name="l00639"></a>00639   <span class="comment">/* Make sure mask is applied. */</span>
<a name="l00640"></a>00640   <span class="comment">/* XXX We have to check the prefix is valid or not before call</span>
<a name="l00641"></a>00641 <span class="comment">     apply_mask_ipv6. */</span>
<a name="l00642"></a>00642   apply_mask_ipv6 (&amp;p);
<a name="l00643"></a>00643 
<a name="l00644"></a>00644   <span class="comment">/* Apply input filters. */</span>
<a name="l00645"></a>00645   ri = ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l00646"></a>00646 
<a name="l00647"></a>00647   ret = <a class="code" href="ripngd_8c.html#ad73db0842e290ed6f113c6ac70e53ed6">ripng_incoming_filter</a> (&amp;p, ri);
<a name="l00648"></a>00648   <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l00649"></a>00649     <span class="keywordflow">return</span>;
<a name="l00650"></a>00650 
<a name="l00651"></a>00651   <span class="comment">/* Modify entry. */</span>
<a name="l00652"></a>00652   <span class="keywordflow">if</span> (ri-&gt;<a class="code" href="structripng__interface.html#a5042d9aa0ee3dc57149209d17b33307c">routemap</a>[<a class="code" href="ripngd_8h.html#a7df8c8ba73eff381ea6a5a4160ceb1d6">RIPNG_FILTER_IN</a>])
<a name="l00653"></a>00653     {
<a name="l00654"></a>00654       <span class="keywordtype">int</span> ret;
<a name="l00655"></a>00655       <span class="keyword">struct </span><a class="code" href="structripng__info.html">ripng_info</a> newinfo;
<a name="l00656"></a>00656 
<a name="l00657"></a>00657       memset (&amp;newinfo, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structripng__info.html">ripng_info</a>));
<a name="l00658"></a>00658       newinfo.<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a> = <a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>;
<a name="l00659"></a>00659       newinfo.<a class="code" href="structripng__info.html#a6b1f397b0581369f5141e29dc68d6e85">sub_type</a> = <a class="code" href="ripngd_8h.html#a42f5ddc11e604312912cb85448f451bd">RIPNG_ROUTE_RTE</a>;
<a name="l00660"></a>00660       <span class="keywordflow">if</span> (ripng_nexthop-&gt;<a class="code" href="structripng__nexthop.html#a47491d21e1277401bed39f35a79434b2">flag</a> == RIPNG_NEXTHOP_ADDRESS)
<a name="l00661"></a>00661         newinfo.<a class="code" href="structripng__info.html#a9e4a05b7f0911b7d3805b1c0fa2c45bf">nexthop</a> = ripng_nexthop-&gt;<a class="code" href="structripng__nexthop.html#a2ddcc6f402319ccad8ab97f3d17e62b9">address</a>;
<a name="l00662"></a>00662       <span class="keywordflow">else</span>
<a name="l00663"></a>00663         newinfo.<a class="code" href="structripng__info.html#a9e4a05b7f0911b7d3805b1c0fa2c45bf">nexthop</a> = from-&gt;sin6_addr;
<a name="l00664"></a>00664       newinfo.<a class="code" href="structripng__info.html#adb886d5f89454913a888b62bed94008f">from</a>   = from-&gt;sin6_addr;
<a name="l00665"></a>00665       newinfo.<a class="code" href="structripng__info.html#a5269ffb6b1daf9eddae7ea92d271d5d6">ifindex</a> = ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>;
<a name="l00666"></a>00666       newinfo.<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a> = rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a>;
<a name="l00667"></a>00667       newinfo.<a class="code" href="structripng__info.html#a9b63b1936f6d6d977dae20ca446f6744">metric_out</a> = rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a>; <span class="comment">/* XXX */</span>
<a name="l00668"></a>00668       newinfo.<a class="code" href="structripng__info.html#a782b26176fb3c32210c0745ae2f5fdb8">tag</a>    = ntohs(rte-&gt;<a class="code" href="structrte.html#a0f0867462e39eed64e518342fbe6abe0">tag</a>); <span class="comment">/* XXX */</span>
<a name="l00669"></a>00669 
<a name="l00670"></a>00670       ret = <a class="code" href="routemap_8c.html#a3372553a024332702cfd603e1f4c08d6">route_map_apply</a> (ri-&gt;<a class="code" href="structripng__interface.html#a5042d9aa0ee3dc57149209d17b33307c">routemap</a>[<a class="code" href="ripngd_8h.html#a7df8c8ba73eff381ea6a5a4160ceb1d6">RIPNG_FILTER_IN</a>], 
<a name="l00671"></a>00671                  (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)&amp;p, <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370a3aa81322d89db5d5821c23c0fe7881bd">RMAP_RIPNG</a>, &amp;newinfo);
<a name="l00672"></a>00672 
<a name="l00673"></a>00673       <span class="keywordflow">if</span> (ret == <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516aa0f40f0a91e43bfe7131839fe179ac64">RMAP_DENYMATCH</a>)
<a name="l00674"></a>00674     {
<a name="l00675"></a>00675       <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a797e548e17ca4673c39625a1fc8b93ae">IS_RIPNG_DEBUG_PACKET</a>)
<a name="l00676"></a>00676         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;RIPng %s/%d is filtered by route-map in&quot;</span>,
<a name="l00677"></a>00677                inet6_ntoa (p.<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>), p.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
<a name="l00678"></a>00678       <span class="keywordflow">return</span>;
<a name="l00679"></a>00679     }
<a name="l00680"></a>00680 
<a name="l00681"></a>00681       <span class="comment">/* Get back the object */</span>
<a name="l00682"></a>00682       <span class="keywordflow">if</span> (ripng_nexthop-&gt;<a class="code" href="structripng__nexthop.html#a47491d21e1277401bed39f35a79434b2">flag</a> == RIPNG_NEXTHOP_ADDRESS) {
<a name="l00683"></a>00683     <span class="keywordflow">if</span> (! <a class="code" href="prefix_8h.html#a5f1eaa85b153050a498dacc958ab8283">IPV6_ADDR_SAME</a>(&amp;newinfo.<a class="code" href="structripng__info.html#a9e4a05b7f0911b7d3805b1c0fa2c45bf">nexthop</a>, &amp;ripng_nexthop-&gt;<a class="code" href="structripng__nexthop.html#a2ddcc6f402319ccad8ab97f3d17e62b9">address</a>) ) {
<a name="l00684"></a>00684       <span class="comment">/* the nexthop get changed by the routemap */</span>
<a name="l00685"></a>00685       <span class="keywordflow">if</span> (IN6_IS_ADDR_LINKLOCAL(&amp;newinfo.<a class="code" href="structripng__info.html#a9e4a05b7f0911b7d3805b1c0fa2c45bf">nexthop</a>))
<a name="l00686"></a>00686         ripng_nexthop-&gt;<a class="code" href="structripng__nexthop.html#a2ddcc6f402319ccad8ab97f3d17e62b9">address</a> = newinfo.<a class="code" href="structripng__info.html#a9e4a05b7f0911b7d3805b1c0fa2c45bf">nexthop</a>;
<a name="l00687"></a>00687       <span class="keywordflow">else</span>
<a name="l00688"></a>00688         ripng_nexthop-&gt;<a class="code" href="structripng__nexthop.html#a2ddcc6f402319ccad8ab97f3d17e62b9">address</a> = in6addr_any;
<a name="l00689"></a>00689     }
<a name="l00690"></a>00690       } <span class="keywordflow">else</span> {
<a name="l00691"></a>00691     <span class="keywordflow">if</span> (! <a class="code" href="prefix_8h.html#a5f1eaa85b153050a498dacc958ab8283">IPV6_ADDR_SAME</a>(&amp;newinfo.<a class="code" href="structripng__info.html#a9e4a05b7f0911b7d3805b1c0fa2c45bf">nexthop</a>, &amp;from-&gt;sin6_addr) ) {
<a name="l00692"></a>00692       <span class="comment">/* the nexthop get changed by the routemap */</span>
<a name="l00693"></a>00693       <span class="keywordflow">if</span> (IN6_IS_ADDR_LINKLOCAL(&amp;newinfo.<a class="code" href="structripng__info.html#a9e4a05b7f0911b7d3805b1c0fa2c45bf">nexthop</a>)) {
<a name="l00694"></a>00694         ripng_nexthop-&gt;<a class="code" href="structripng__nexthop.html#a47491d21e1277401bed39f35a79434b2">flag</a> = RIPNG_NEXTHOP_ADDRESS;
<a name="l00695"></a>00695         ripng_nexthop-&gt;<a class="code" href="structripng__nexthop.html#a2ddcc6f402319ccad8ab97f3d17e62b9">address</a> = newinfo.<a class="code" href="structripng__info.html#a9e4a05b7f0911b7d3805b1c0fa2c45bf">nexthop</a>;
<a name="l00696"></a>00696       }
<a name="l00697"></a>00697     }
<a name="l00698"></a>00698       }
<a name="l00699"></a>00699       rte-&gt;<a class="code" href="structrte.html#a0f0867462e39eed64e518342fbe6abe0">tag</a>     = htons(newinfo.<a class="code" href="structripng__info.html#a53b9c80709add8b88d8edc0a67a2129b">tag_out</a>); <span class="comment">/* XXX */</span>
<a name="l00700"></a>00700       rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a>  = newinfo.<a class="code" href="structripng__info.html#a9b63b1936f6d6d977dae20ca446f6744">metric_out</a>; <span class="comment">/* XXX: the routemap uses the metric_out field */</span>
<a name="l00701"></a>00701     }
<a name="l00702"></a>00702 
<a name="l00703"></a>00703   <span class="comment">/* Once the entry has been validated, update the metric by</span>
<a name="l00704"></a>00704 <span class="comment">   * adding the cost of the network on wich the message</span>
<a name="l00705"></a>00705 <span class="comment">   * arrived. If the result is greater than infinity, use infinity</span>
<a name="l00706"></a>00706 <span class="comment">   * (RFC2453 Sec. 3.9.2)</span>
<a name="l00707"></a>00707 <span class="comment">   **/</span>
<a name="l00708"></a>00708  
<a name="l00709"></a>00709   <span class="comment">/* Zebra ripngd can handle offset-list in. */</span>
<a name="l00710"></a>00710   ret = <a class="code" href="ripng__offset_8c.html#a3cb8282ebd45074266356c8b4638c7a2">ripng_offset_list_apply_in</a> (&amp;p, ifp, &amp;rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a>);
<a name="l00711"></a>00711 
<a name="l00712"></a>00712   <span class="comment">/* If offset-list does not modify the metric use interface&#39;s</span>
<a name="l00713"></a>00713 <span class="comment">   * one. */</span>
<a name="l00714"></a>00714   <span class="keywordflow">if</span> (! ret)
<a name="l00715"></a>00715     rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a> += ifp-&gt;<a class="code" href="structinterface.html#adbb7ad89b817a388e9442e85f1e72cc8">metric</a>;
<a name="l00716"></a>00716 
<a name="l00717"></a>00717   <span class="keywordflow">if</span> (rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a> &gt; <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>)
<a name="l00718"></a>00718     rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a> = <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>;
<a name="l00719"></a>00719 
<a name="l00720"></a>00720   <span class="comment">/* Set nexthop pointer. */</span>
<a name="l00721"></a>00721   <span class="keywordflow">if</span> (ripng_nexthop-&gt;<a class="code" href="structripng__nexthop.html#a47491d21e1277401bed39f35a79434b2">flag</a> == RIPNG_NEXTHOP_ADDRESS)
<a name="l00722"></a>00722     nexthop = &amp;ripng_nexthop-&gt;<a class="code" href="structripng__nexthop.html#a2ddcc6f402319ccad8ab97f3d17e62b9">address</a>;
<a name="l00723"></a>00723   <span class="keywordflow">else</span>
<a name="l00724"></a>00724     nexthop = &amp;from-&gt;sin6_addr;
<a name="l00725"></a>00725 
<a name="l00726"></a>00726   <span class="comment">/* Lookup RIPng routing table. */</span>
<a name="l00727"></a>00727   rp = <a class="code" href="table_8c.html#ac91fdff1a0b8dc3d60ebaf152caa0f80">route_node_get</a> (ripng-&gt;<a class="code" href="structripng.html#a1bf596b69c5b442145eb509611ad6dc5">table</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;p);
<a name="l00728"></a>00728 
<a name="l00729"></a>00729   <span class="comment">/* Sanity check */</span>
<a name="l00730"></a>00730   rinfo = rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l00731"></a>00731   <span class="keywordflow">if</span> (rinfo)
<a name="l00732"></a>00732     {
<a name="l00733"></a>00733       <span class="comment">/* Redistributed route check. */</span>
<a name="l00734"></a>00734       <span class="keywordflow">if</span> (rinfo-&gt;<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a> != <a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>
<a name="l00735"></a>00735       &amp;&amp; rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a> != <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>)
<a name="l00736"></a>00736     <span class="keywordflow">return</span>;
<a name="l00737"></a>00737 
<a name="l00738"></a>00738       <span class="comment">/* Local static route. */</span>
<a name="l00739"></a>00739       <span class="keywordflow">if</span> (rinfo-&gt;<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a> == <a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>
<a name="l00740"></a>00740       &amp;&amp; ((rinfo-&gt;<a class="code" href="structripng__info.html#a6b1f397b0581369f5141e29dc68d6e85">sub_type</a> == <a class="code" href="ripngd_8h.html#a326075451cf7aaf58444cd6a5e198dc6">RIPNG_ROUTE_STATIC</a>) ||
<a name="l00741"></a>00741           (rinfo-&gt;<a class="code" href="structripng__info.html#a6b1f397b0581369f5141e29dc68d6e85">sub_type</a> == <a class="code" href="ripngd_8h.html#abea59d5b7e93126bc054927174a952ff">RIPNG_ROUTE_DEFAULT</a>))
<a name="l00742"></a>00742       &amp;&amp; rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a> != <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>)
<a name="l00743"></a>00743     <span class="keywordflow">return</span>;
<a name="l00744"></a>00744     }
<a name="l00745"></a>00745 
<a name="l00746"></a>00746   <span class="keywordflow">if</span> (rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00747"></a>00747     {
<a name="l00748"></a>00748       <span class="comment">/* Now, check to see whether there is already an explicit route</span>
<a name="l00749"></a>00749 <span class="comment">     for the destination prefix.  If there is no such route, add</span>
<a name="l00750"></a>00750 <span class="comment">     this route to the routing table, unless the metric is</span>
<a name="l00751"></a>00751 <span class="comment">     infinity (there is no point in adding a route which</span>
<a name="l00752"></a>00752 <span class="comment">     unusable). */</span>
<a name="l00753"></a>00753       <span class="keywordflow">if</span> (rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a> != <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>)
<a name="l00754"></a>00754     {
<a name="l00755"></a>00755       rinfo = <a class="code" href="ripngd_8c.html#a0b7fb6a0d15b39889e109557bf3d23ea">ripng_info_new</a> ();
<a name="l00756"></a>00756       
<a name="l00757"></a>00757       <span class="comment">/* - Setting the destination prefix and length to those in</span>
<a name="l00758"></a>00758 <span class="comment">         the RTE. */</span>
<a name="l00759"></a>00759       rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = rinfo;
<a name="l00760"></a>00760       rinfo-&gt;<a class="code" href="structripng__info.html#a78207eabf7ccff094710f2f68dd86c08">rp</a> = <a class="code" href="structripng__info.html#a78207eabf7ccff094710f2f68dd86c08">rp</a>;
<a name="l00761"></a>00761 
<a name="l00762"></a>00762       <span class="comment">/* - Setting the metric to the newly calculated metric (as</span>
<a name="l00763"></a>00763 <span class="comment">         described above). */</span>
<a name="l00764"></a>00764       rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a> = rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a>;
<a name="l00765"></a>00765       rinfo-&gt;<a class="code" href="structripng__info.html#a782b26176fb3c32210c0745ae2f5fdb8">tag</a> = ntohs (rte-&gt;<a class="code" href="structrte.html#a0f0867462e39eed64e518342fbe6abe0">tag</a>);
<a name="l00766"></a>00766 
<a name="l00767"></a>00767       <span class="comment">/* - Set the next hop address to be the address of the router</span>
<a name="l00768"></a>00768 <span class="comment">         from which the datagram came or the next hop address</span>
<a name="l00769"></a>00769 <span class="comment">         specified by a next hop RTE. */</span>
<a name="l00770"></a>00770       <a class="code" href="prefix_8h.html#aea44c9c04fa7bd58457b572592d391a7">IPV6_ADDR_COPY</a> (&amp;rinfo-&gt;<a class="code" href="structripng__info.html#a9e4a05b7f0911b7d3805b1c0fa2c45bf">nexthop</a>, nexthop);
<a name="l00771"></a>00771       <a class="code" href="prefix_8h.html#aea44c9c04fa7bd58457b572592d391a7">IPV6_ADDR_COPY</a> (&amp;rinfo-&gt;<a class="code" href="structripng__info.html#adb886d5f89454913a888b62bed94008f">from</a>, &amp;from-&gt;sin6_addr);
<a name="l00772"></a>00772       rinfo-&gt;<a class="code" href="structripng__info.html#a5269ffb6b1daf9eddae7ea92d271d5d6">ifindex</a> = ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>;
<a name="l00773"></a>00773 
<a name="l00774"></a>00774       <span class="comment">/* - Initialize the timeout for the route.  If the</span>
<a name="l00775"></a>00775 <span class="comment">         garbage-collection timer is running for this route, stop it. */</span>
<a name="l00776"></a>00776       <a class="code" href="ripngd_8c.html#a14095cf7dba79691f9bceecc899bf66c">ripng_timeout_update</a> (rinfo);
<a name="l00777"></a>00777 
<a name="l00778"></a>00778       <span class="comment">/* - Set the route change flag. */</span>
<a name="l00779"></a>00779       rinfo-&gt;<a class="code" href="structripng__info.html#adc51f81d4cf365159e1aea265869f095">flags</a> |= <a class="code" href="ripngd_8h.html#ae2ac88c46de4d1bc9f2b01e122049b57">RIPNG_RTF_CHANGED</a>;
<a name="l00780"></a>00780 
<a name="l00781"></a>00781       <span class="comment">/* - Signal the output process to trigger an update (see section</span>
<a name="l00782"></a>00782 <span class="comment">         2.5). */</span>
<a name="l00783"></a>00783       <a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6">ripng_event</a> (<a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6a2e7d2cd80dd6c338241452b2e2f64cd9">RIPNG_TRIGGERED_UPDATE</a>, 0);
<a name="l00784"></a>00784 
<a name="l00785"></a>00785       <span class="comment">/* Finally, route goes into the kernel. */</span>
<a name="l00786"></a>00786       rinfo-&gt;<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a> = <a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>;
<a name="l00787"></a>00787       rinfo-&gt;<a class="code" href="structripng__info.html#a6b1f397b0581369f5141e29dc68d6e85">sub_type</a> = <a class="code" href="ripngd_8h.html#a42f5ddc11e604312912cb85448f451bd">RIPNG_ROUTE_RTE</a>;
<a name="l00788"></a>00788 
<a name="l00789"></a>00789       <a class="code" href="ripng__zebra_8c.html#a4c92f013a554c244708fb25a0e4bd51e">ripng_zebra_ipv6_add</a> (&amp;p, &amp;rinfo-&gt;<a class="code" href="structripng__info.html#a9e4a05b7f0911b7d3805b1c0fa2c45bf">nexthop</a>, rinfo-&gt;<a class="code" href="structripng__info.html#a5269ffb6b1daf9eddae7ea92d271d5d6">ifindex</a>,
<a name="l00790"></a>00790                 rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a>);
<a name="l00791"></a>00791       rinfo-&gt;<a class="code" href="structripng__info.html#adc51f81d4cf365159e1aea265869f095">flags</a> |= <a class="code" href="ripngd_8h.html#a6e1843ed62fdcda0c95be01e0386d69c">RIPNG_RTF_FIB</a>;
<a name="l00792"></a>00792 
<a name="l00793"></a>00793       <span class="comment">/* Aggregate check. */</span>
<a name="l00794"></a>00794       <a class="code" href="ripng__route_8c.html#a690c7b208ebc224d71cd51cef136e157">ripng_aggregate_increment</a> (rp, rinfo);
<a name="l00795"></a>00795     }
<a name="l00796"></a>00796     }
<a name="l00797"></a>00797   <span class="keywordflow">else</span>
<a name="l00798"></a>00798     {
<a name="l00799"></a>00799       rinfo = rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l00800"></a>00800       
<a name="l00801"></a>00801       <span class="comment">/* If there is an existing route, compare the next hop address</span>
<a name="l00802"></a>00802 <span class="comment">     to the address of the router from which the datagram came.</span>
<a name="l00803"></a>00803 <span class="comment">     If this datagram is from the same router as the existing</span>
<a name="l00804"></a>00804 <span class="comment">     route, reinitialize the timeout.  */</span>
<a name="l00805"></a>00805       same = (<a class="code" href="zebra_8h.html#abb82efab585ad36d8ce0d873bee5941b">IN6_ARE_ADDR_EQUAL</a> (&amp;rinfo-&gt;<a class="code" href="structripng__info.html#adb886d5f89454913a888b62bed94008f">from</a>, &amp;from-&gt;sin6_addr) 
<a name="l00806"></a>00806           &amp;&amp; (rinfo-&gt;<a class="code" href="structripng__info.html#a5269ffb6b1daf9eddae7ea92d271d5d6">ifindex</a> == ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>));
<a name="l00807"></a>00807 
<a name="l00808"></a>00808       <span class="keywordflow">if</span> (same)
<a name="l00809"></a>00809     <a class="code" href="ripngd_8c.html#a14095cf7dba79691f9bceecc899bf66c">ripng_timeout_update</a> (rinfo);
<a name="l00810"></a>00810 
<a name="l00811"></a>00811       <span class="comment">/* Next, compare the metrics.  If the datagram is from the same</span>
<a name="l00812"></a>00812 <span class="comment">     router as the existing route, and the new metric is different</span>
<a name="l00813"></a>00813 <span class="comment">     than the old one; or, if the new metric is lower than the old</span>
<a name="l00814"></a>00814 <span class="comment">     one; do the following actions: */</span>
<a name="l00815"></a>00815       <span class="keywordflow">if</span> ((same &amp;&amp; rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a> != rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a>) ||
<a name="l00816"></a>00816       rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a> &lt; rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a>)
<a name="l00817"></a>00817     {
<a name="l00818"></a>00818       <span class="comment">/* - Adopt the route from the datagram.  That is, put the</span>
<a name="l00819"></a>00819 <span class="comment">         new metric in, and adjust the next hop address (if</span>
<a name="l00820"></a>00820 <span class="comment">         necessary). */</span>
<a name="l00821"></a>00821       oldmetric = rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a>;
<a name="l00822"></a>00822       rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a> = rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a>;
<a name="l00823"></a>00823       rinfo-&gt;<a class="code" href="structripng__info.html#a782b26176fb3c32210c0745ae2f5fdb8">tag</a> = ntohs (rte-&gt;<a class="code" href="structrte.html#a0f0867462e39eed64e518342fbe6abe0">tag</a>);
<a name="l00824"></a>00824       <a class="code" href="prefix_8h.html#aea44c9c04fa7bd58457b572592d391a7">IPV6_ADDR_COPY</a> (&amp;rinfo-&gt;<a class="code" href="structripng__info.html#adb886d5f89454913a888b62bed94008f">from</a>, &amp;from-&gt;sin6_addr);
<a name="l00825"></a>00825       rinfo-&gt;<a class="code" href="structripng__info.html#a5269ffb6b1daf9eddae7ea92d271d5d6">ifindex</a> = ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>;
<a name="l00826"></a>00826 
<a name="l00827"></a>00827       <span class="comment">/* Should a new route to this network be established</span>
<a name="l00828"></a>00828 <span class="comment">         while the garbage-collection timer is running, the</span>
<a name="l00829"></a>00829 <span class="comment">         new route will replace the one that is about to be</span>
<a name="l00830"></a>00830 <span class="comment">         deleted.  In this case the garbage-collection timer</span>
<a name="l00831"></a>00831 <span class="comment">         must be cleared. */</span>
<a name="l00832"></a>00832 
<a name="l00833"></a>00833       <span class="keywordflow">if</span> (oldmetric == <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a> &amp;&amp;
<a name="l00834"></a>00834           rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a> &lt; <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>)
<a name="l00835"></a>00835         {
<a name="l00836"></a>00836           rinfo-&gt;<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a> = <a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>;
<a name="l00837"></a>00837           rinfo-&gt;<a class="code" href="structripng__info.html#a6b1f397b0581369f5141e29dc68d6e85">sub_type</a> = <a class="code" href="ripngd_8h.html#a42f5ddc11e604312912cb85448f451bd">RIPNG_ROUTE_RTE</a>;
<a name="l00838"></a>00838 
<a name="l00839"></a>00839           <a class="code" href="ripngd_8h.html#ab73283656926a9bd7d6c73343acc4102">RIPNG_TIMER_OFF</a> (rinfo-&gt;<a class="code" href="structripng__info.html#a26eebec0ab345768bc791435d2a551b9">t_garbage_collect</a>);
<a name="l00840"></a>00840 
<a name="l00841"></a>00841           <span class="keywordflow">if</span> (! <a class="code" href="prefix_8h.html#a5f1eaa85b153050a498dacc958ab8283">IPV6_ADDR_SAME</a> (&amp;rinfo-&gt;<a class="code" href="structripng__info.html#a9e4a05b7f0911b7d3805b1c0fa2c45bf">nexthop</a>, nexthop))
<a name="l00842"></a>00842         <a class="code" href="prefix_8h.html#aea44c9c04fa7bd58457b572592d391a7">IPV6_ADDR_COPY</a> (&amp;rinfo-&gt;<a class="code" href="structripng__info.html#a9e4a05b7f0911b7d3805b1c0fa2c45bf">nexthop</a>, nexthop);
<a name="l00843"></a>00843 
<a name="l00844"></a>00844           <a class="code" href="ripng__zebra_8c.html#a4c92f013a554c244708fb25a0e4bd51e">ripng_zebra_ipv6_add</a> (&amp;p, nexthop, ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>, rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a>);
<a name="l00845"></a>00845           rinfo-&gt;<a class="code" href="structripng__info.html#adc51f81d4cf365159e1aea265869f095">flags</a> |= <a class="code" href="ripngd_8h.html#a6e1843ed62fdcda0c95be01e0386d69c">RIPNG_RTF_FIB</a>;
<a name="l00846"></a>00846 
<a name="l00847"></a>00847           <span class="comment">/* The aggregation counter needs to be updated because</span>
<a name="l00848"></a>00848 <span class="comment">             the prefixes, which are into the gc, have been</span>
<a name="l00849"></a>00849 <span class="comment">             removed from the aggregator (see ripng_timout). */</span>
<a name="l00850"></a>00850           <a class="code" href="ripng__route_8c.html#a690c7b208ebc224d71cd51cef136e157">ripng_aggregate_increment</a> (rp, rinfo);
<a name="l00851"></a>00851         }
<a name="l00852"></a>00852 
<a name="l00853"></a>00853       <span class="comment">/* Update nexthop and/or metric value.  */</span>
<a name="l00854"></a>00854       <span class="keywordflow">if</span> (oldmetric != <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>)
<a name="l00855"></a>00855         {
<a name="l00856"></a>00856           <a class="code" href="ripng__zebra_8c.html#a8c975a52ab3f2a4e4593d75232185382">ripng_zebra_ipv6_delete</a> (&amp;p, &amp;rinfo-&gt;<a class="code" href="structripng__info.html#a9e4a05b7f0911b7d3805b1c0fa2c45bf">nexthop</a>, rinfo-&gt;<a class="code" href="structripng__info.html#a5269ffb6b1daf9eddae7ea92d271d5d6">ifindex</a>);
<a name="l00857"></a>00857           <a class="code" href="ripng__zebra_8c.html#a4c92f013a554c244708fb25a0e4bd51e">ripng_zebra_ipv6_add</a> (&amp;p, nexthop, ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>, rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a>);
<a name="l00858"></a>00858           rinfo-&gt;<a class="code" href="structripng__info.html#adc51f81d4cf365159e1aea265869f095">flags</a> |= <a class="code" href="ripngd_8h.html#a6e1843ed62fdcda0c95be01e0386d69c">RIPNG_RTF_FIB</a>;
<a name="l00859"></a>00859 
<a name="l00860"></a>00860           <span class="keywordflow">if</span> (! <a class="code" href="prefix_8h.html#a5f1eaa85b153050a498dacc958ab8283">IPV6_ADDR_SAME</a> (&amp;rinfo-&gt;<a class="code" href="structripng__info.html#a9e4a05b7f0911b7d3805b1c0fa2c45bf">nexthop</a>, nexthop))
<a name="l00861"></a>00861         <a class="code" href="prefix_8h.html#aea44c9c04fa7bd58457b572592d391a7">IPV6_ADDR_COPY</a> (&amp;rinfo-&gt;<a class="code" href="structripng__info.html#a9e4a05b7f0911b7d3805b1c0fa2c45bf">nexthop</a>, nexthop);
<a name="l00862"></a>00862         }
<a name="l00863"></a>00863 
<a name="l00864"></a>00864       <span class="comment">/* - Set the route change flag and signal the output process</span>
<a name="l00865"></a>00865 <span class="comment">         to trigger an update. */</span>
<a name="l00866"></a>00866       rinfo-&gt;<a class="code" href="structripng__info.html#adc51f81d4cf365159e1aea265869f095">flags</a> |= <a class="code" href="ripngd_8h.html#ae2ac88c46de4d1bc9f2b01e122049b57">RIPNG_RTF_CHANGED</a>;
<a name="l00867"></a>00867       <a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6">ripng_event</a> (<a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6a2e7d2cd80dd6c338241452b2e2f64cd9">RIPNG_TRIGGERED_UPDATE</a>, 0);
<a name="l00868"></a>00868 
<a name="l00869"></a>00869       <span class="comment">/* - If the new metric is infinity, start the deletion</span>
<a name="l00870"></a>00870 <span class="comment">         process (described above); */</span>
<a name="l00871"></a>00871       <span class="keywordflow">if</span> (rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a> == <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>)
<a name="l00872"></a>00872         {
<a name="l00873"></a>00873           <span class="comment">/* If the new metric is infinity, the deletion process</span>
<a name="l00874"></a>00874 <span class="comment">         begins for the route, which is no longer used for</span>
<a name="l00875"></a>00875 <span class="comment">         routing packets.  Note that the deletion process is</span>
<a name="l00876"></a>00876 <span class="comment">         started only when the metric is first set to</span>
<a name="l00877"></a>00877 <span class="comment">         infinity.  If the metric was already infinity, then a</span>
<a name="l00878"></a>00878 <span class="comment">         new deletion process is not started. */</span>
<a name="l00879"></a>00879           <span class="keywordflow">if</span> (oldmetric != <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>)
<a name="l00880"></a>00880         {
<a name="l00881"></a>00881           <span class="comment">/* - The garbage-collection timer is set for 120 seconds. */</span>
<a name="l00882"></a>00882           <a class="code" href="ripngd_8h.html#a76723e13884b239d90fedad4a6945d90">RIPNG_TIMER_ON</a> (rinfo-&gt;<a class="code" href="structripng__info.html#a26eebec0ab345768bc791435d2a551b9">t_garbage_collect</a>, 
<a name="l00883"></a>00883                   <a class="code" href="ripngd_8c.html#ad9748647bbab59298c91b150352917a8">ripng_garbage_collect</a>, ripng-&gt;<a class="code" href="structripng.html#a79a6db0c820761917a6d5b19c2383dbd">garbage_time</a>);
<a name="l00884"></a>00884           <a class="code" href="ripngd_8h.html#ab73283656926a9bd7d6c73343acc4102">RIPNG_TIMER_OFF</a> (rinfo-&gt;<a class="code" href="structripng__info.html#ab3490e49b1b0cacad3b8bb76e20d487f">t_timeout</a>);
<a name="l00885"></a>00885 
<a name="l00886"></a>00886           <span class="comment">/* - The metric for the route is set to 16</span>
<a name="l00887"></a>00887 <span class="comment">             (infinity).  This causes the route to be removed</span>
<a name="l00888"></a>00888 <span class="comment">             from service.*/</span>
<a name="l00889"></a>00889           <a class="code" href="ripng__zebra_8c.html#a8c975a52ab3f2a4e4593d75232185382">ripng_zebra_ipv6_delete</a> (&amp;p, &amp;rinfo-&gt;<a class="code" href="structripng__info.html#a9e4a05b7f0911b7d3805b1c0fa2c45bf">nexthop</a>, rinfo-&gt;<a class="code" href="structripng__info.html#a5269ffb6b1daf9eddae7ea92d271d5d6">ifindex</a>);
<a name="l00890"></a>00890           rinfo-&gt;<a class="code" href="structripng__info.html#adc51f81d4cf365159e1aea265869f095">flags</a> &amp;= ~<a class="code" href="ripngd_8h.html#a6e1843ed62fdcda0c95be01e0386d69c">RIPNG_RTF_FIB</a>;
<a name="l00891"></a>00891 
<a name="l00892"></a>00892           <span class="comment">/* Aggregate count decrement. */</span>
<a name="l00893"></a>00893           <a class="code" href="ripng__route_8c.html#aba0f321f8fbbe5003489ede81c5fa0fd">ripng_aggregate_decrement</a> (rp, rinfo);
<a name="l00894"></a>00894 
<a name="l00895"></a>00895           <span class="comment">/* - The route change flag is to indicate that this</span>
<a name="l00896"></a>00896 <span class="comment">             entry has been changed. */</span>
<a name="l00897"></a>00897           <span class="comment">/* - The output process is signalled to trigger a</span>
<a name="l00898"></a>00898 <span class="comment">                     response. */</span>
<a name="l00899"></a>00899           ;  <span class="comment">/* Above processes are already done previously. */</span>
<a name="l00900"></a>00900         }
<a name="l00901"></a>00901         }
<a name="l00902"></a>00902       <span class="keywordflow">else</span>
<a name="l00903"></a>00903         {
<a name="l00904"></a>00904           <span class="comment">/* otherwise, re-initialize the timeout. */</span>
<a name="l00905"></a>00905           <a class="code" href="ripngd_8c.html#a14095cf7dba79691f9bceecc899bf66c">ripng_timeout_update</a> (rinfo);
<a name="l00906"></a>00906         }
<a name="l00907"></a>00907     }
<a name="l00908"></a>00908       <span class="comment">/* Unlock tempolary lock of the route. */</span>
<a name="l00909"></a>00909       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rp);
<a name="l00910"></a>00910     }
<a name="l00911"></a>00911 }
<a name="l00912"></a>00912 
<a name="l00913"></a>00913 <span class="comment">/* Add redistributed route to RIPng table. */</span>
<a name="l00914"></a>00914 <span class="keywordtype">void</span>
<a name="l00915"></a><a class="code" href="ripngd_8h.html#a2efda5dea473b122420f9fb2d7c95d4c">00915</a> <a class="code" href="ripngd_8c.html#a8c632303768357a09888dd8081c4c15e">ripng_redistribute_add</a> (<span class="keywordtype">int</span> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">int</span> <a class="code" href="structripng__info.html#a6b1f397b0581369f5141e29dc68d6e85">sub_type</a>, <span class="keyword">struct</span> prefix_ipv6 *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, 
<a name="l00916"></a>00916             <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structripng__info.html#a5269ffb6b1daf9eddae7ea92d271d5d6">ifindex</a>, <span class="keyword">struct</span> in6_addr *<a class="code" href="structnexthop.html">nexthop</a>)
<a name="l00917"></a>00917 {
<a name="l00918"></a>00918   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rp;
<a name="l00919"></a>00919   <span class="keyword">struct </span><a class="code" href="structripng__info.html">ripng_info</a> *rinfo;
<a name="l00920"></a>00920 
<a name="l00921"></a>00921   <span class="comment">/* Redistribute route  */</span>
<a name="l00922"></a>00922   <span class="keywordflow">if</span> (IN6_IS_ADDR_LINKLOCAL (&amp;p-&gt;prefix))
<a name="l00923"></a>00923     <span class="keywordflow">return</span>;
<a name="l00924"></a>00924   <span class="keywordflow">if</span> (IN6_IS_ADDR_LOOPBACK (&amp;p-&gt;prefix))
<a name="l00925"></a>00925     <span class="keywordflow">return</span>;
<a name="l00926"></a>00926 <span class="preprocessor">#if defined (MUSICA) || defined (LINUX)</span>
<a name="l00927"></a>00927 <span class="preprocessor"></span>  <span class="comment">/* XXX As long as the RIPng redistribution is applied to all the connected</span>
<a name="l00928"></a>00928 <span class="comment">   *     routes, one needs to filter the ::/96 prefixes.</span>
<a name="l00929"></a>00929 <span class="comment">   *     However it could be a wanted case, it will be removed soon.</span>
<a name="l00930"></a>00930 <span class="comment">   */</span>
<a name="l00931"></a>00931   <span class="keywordflow">if</span> ((IN6_IS_ADDR_V4COMPAT(&amp;p-&gt;prefix)) ||
<a name="l00932"></a>00932       (IN6_IS_ADDR_UNSPECIFIED (&amp;p-&gt;prefix) &amp;&amp; (p-&gt;prefixlen == 96)))
<a name="l00933"></a>00933     <span class="keywordflow">return</span>;
<a name="l00934"></a>00934 <span class="preprocessor">#endif </span><span class="comment">/* MUSICA or LINUX */</span>
<a name="l00935"></a>00935 
<a name="l00936"></a>00936   rp = <a class="code" href="table_8c.html#ac91fdff1a0b8dc3d60ebaf152caa0f80">route_node_get</a> (ripng-&gt;<a class="code" href="structripng.html#a1bf596b69c5b442145eb509611ad6dc5">table</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) p);
<a name="l00937"></a>00937   rinfo = rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l00938"></a>00938 
<a name="l00939"></a>00939   <span class="keywordflow">if</span> (rinfo)
<a name="l00940"></a>00940     {
<a name="l00941"></a>00941       <span class="keywordflow">if</span> (rinfo-&gt;<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a> == <a class="code" href="zebra_8h.html#aee45d53cdac2bd7fe4b2ce021c9d1b30">ZEBRA_ROUTE_CONNECT</a>
<a name="l00942"></a>00942           &amp;&amp; rinfo-&gt;<a class="code" href="structripng__info.html#a6b1f397b0581369f5141e29dc68d6e85">sub_type</a> == <a class="code" href="ripngd_8h.html#a7b8a856e1865628b6e85977878f5b309">RIPNG_ROUTE_INTERFACE</a>
<a name="l00943"></a>00943       &amp;&amp; rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a> != <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>) {
<a name="l00944"></a>00944         <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rp);
<a name="l00945"></a>00945        <span class="keywordflow">return</span>;
<a name="l00946"></a>00946       }
<a name="l00947"></a>00947 
<a name="l00948"></a>00948       <span class="comment">/* Manually configured RIPng route check.</span>
<a name="l00949"></a>00949 <span class="comment">       * They have the precedence on all the other entries.</span>
<a name="l00950"></a>00950 <span class="comment">       **/</span>
<a name="l00951"></a>00951       <span class="keywordflow">if</span> (rinfo-&gt;<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a> == <a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>
<a name="l00952"></a>00952           &amp;&amp; ((rinfo-&gt;<a class="code" href="structripng__info.html#a6b1f397b0581369f5141e29dc68d6e85">sub_type</a> == <a class="code" href="ripngd_8h.html#a326075451cf7aaf58444cd6a5e198dc6">RIPNG_ROUTE_STATIC</a>) ||
<a name="l00953"></a>00953               (rinfo-&gt;<a class="code" href="structripng__info.html#a6b1f397b0581369f5141e29dc68d6e85">sub_type</a> == <a class="code" href="ripngd_8h.html#abea59d5b7e93126bc054927174a952ff">RIPNG_ROUTE_DEFAULT</a>)) ) {
<a name="l00954"></a>00954         <span class="keywordflow">if</span> (type != <a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a> || ((sub_type != <a class="code" href="ripngd_8h.html#a326075451cf7aaf58444cd6a5e198dc6">RIPNG_ROUTE_STATIC</a>) &amp;&amp;
<a name="l00955"></a>00955                                           (sub_type != <a class="code" href="ripngd_8h.html#abea59d5b7e93126bc054927174a952ff">RIPNG_ROUTE_DEFAULT</a>))) {
<a name="l00956"></a>00956       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rp);
<a name="l00957"></a>00957       <span class="keywordflow">return</span>;
<a name="l00958"></a>00958     }
<a name="l00959"></a>00959       }
<a name="l00960"></a>00960       
<a name="l00961"></a>00961       <a class="code" href="ripngd_8h.html#ab73283656926a9bd7d6c73343acc4102">RIPNG_TIMER_OFF</a> (rinfo-&gt;<a class="code" href="structripng__info.html#ab3490e49b1b0cacad3b8bb76e20d487f">t_timeout</a>);
<a name="l00962"></a>00962       <a class="code" href="ripngd_8h.html#ab73283656926a9bd7d6c73343acc4102">RIPNG_TIMER_OFF</a> (rinfo-&gt;<a class="code" href="structripng__info.html#a26eebec0ab345768bc791435d2a551b9">t_garbage_collect</a>);
<a name="l00963"></a>00963 
<a name="l00964"></a>00964       <span class="comment">/* Tells the other daemons about the deletion of</span>
<a name="l00965"></a>00965 <span class="comment">       * this RIPng route</span>
<a name="l00966"></a>00966 <span class="comment">       **/</span>
<a name="l00967"></a>00967       <span class="keywordflow">if</span> (<a class="code" href="ripngd_8c.html#a6b1690fe3bd2672b6812fa0922f848b8">ripng_route_rte</a> (rinfo))
<a name="l00968"></a>00968     <a class="code" href="ripng__zebra_8c.html#a8c975a52ab3f2a4e4593d75232185382">ripng_zebra_ipv6_delete</a> ((<span class="keyword">struct</span> prefix_ipv6 *)&amp;rp-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>, &amp;rinfo-&gt;<a class="code" href="structripng__info.html#a9e4a05b7f0911b7d3805b1c0fa2c45bf">nexthop</a>,
<a name="l00969"></a>00969                    rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a>);
<a name="l00970"></a>00970 
<a name="l00971"></a>00971       rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00972"></a>00972       <a class="code" href="ripngd_8c.html#a9dac36daa3fa248437e2cfab0289331c">ripng_info_free</a> (rinfo);
<a name="l00973"></a>00973 
<a name="l00974"></a>00974       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rp);
<a name="l00975"></a>00975 
<a name="l00976"></a>00976     }
<a name="l00977"></a>00977 
<a name="l00978"></a>00978   rinfo = <a class="code" href="ripngd_8c.html#a0b7fb6a0d15b39889e109557bf3d23ea">ripng_info_new</a> ();
<a name="l00979"></a>00979 
<a name="l00980"></a>00980   rinfo-&gt;<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a> = <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>;
<a name="l00981"></a>00981   rinfo-&gt;<a class="code" href="structripng__info.html#a6b1f397b0581369f5141e29dc68d6e85">sub_type</a> = <a class="code" href="structripng__info.html#a6b1f397b0581369f5141e29dc68d6e85">sub_type</a>;
<a name="l00982"></a>00982   rinfo-&gt;<a class="code" href="structripng__info.html#a5269ffb6b1daf9eddae7ea92d271d5d6">ifindex</a> = <a class="code" href="structripng__info.html#a5269ffb6b1daf9eddae7ea92d271d5d6">ifindex</a>;
<a name="l00983"></a>00983   rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a> = 1;
<a name="l00984"></a>00984   rinfo-&gt;<a class="code" href="structripng__info.html#a78207eabf7ccff094710f2f68dd86c08">rp</a> = <a class="code" href="structripng__info.html#a78207eabf7ccff094710f2f68dd86c08">rp</a>;
<a name="l00985"></a>00985   
<a name="l00986"></a>00986   <span class="keywordflow">if</span> (nexthop &amp;&amp; IN6_IS_ADDR_LINKLOCAL(nexthop))
<a name="l00987"></a>00987     rinfo-&gt;<a class="code" href="structripng__info.html#a9e4a05b7f0911b7d3805b1c0fa2c45bf">nexthop</a> = *<a class="code" href="structripng__info.html#a9e4a05b7f0911b7d3805b1c0fa2c45bf">nexthop</a>;
<a name="l00988"></a>00988   
<a name="l00989"></a>00989   rinfo-&gt;<a class="code" href="structripng__info.html#adc51f81d4cf365159e1aea265869f095">flags</a> |= <a class="code" href="ripngd_8h.html#a6e1843ed62fdcda0c95be01e0386d69c">RIPNG_RTF_FIB</a>;
<a name="l00990"></a>00990   rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = rinfo;
<a name="l00991"></a>00991 
<a name="l00992"></a>00992   <span class="comment">/* Aggregate check. */</span>
<a name="l00993"></a>00993   <a class="code" href="ripng__route_8c.html#a690c7b208ebc224d71cd51cef136e157">ripng_aggregate_increment</a> (rp, rinfo);
<a name="l00994"></a>00994 
<a name="l00995"></a>00995   rinfo-&gt;<a class="code" href="structripng__info.html#adc51f81d4cf365159e1aea265869f095">flags</a> |= <a class="code" href="ripngd_8h.html#ae2ac88c46de4d1bc9f2b01e122049b57">RIPNG_RTF_CHANGED</a>;
<a name="l00996"></a>00996 
<a name="l00997"></a>00997   <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a392e0383d4e00540ae5df2950459a02b">IS_RIPNG_DEBUG_EVENT</a>) {
<a name="l00998"></a>00998     <span class="keywordflow">if</span> (!nexthop)
<a name="l00999"></a>00999       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Redistribute new prefix %s/%d on the interface %s&quot;</span>,
<a name="l01000"></a>01000                  inet6_ntoa(p-&gt;<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>), p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>,
<a name="l01001"></a>01001                  <a class="code" href="if_8c.html#a788f6c1b52cee08e687d34b9f8230960">ifindex2ifname</a>(ifindex));
<a name="l01002"></a>01002     <span class="keywordflow">else</span>
<a name="l01003"></a>01003       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Redistribute new prefix %s/%d with nexthop %s on the interface %s&quot;</span>,
<a name="l01004"></a>01004                  inet6_ntoa(p-&gt;<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>), p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>, inet6_ntoa(*nexthop),
<a name="l01005"></a>01005                  <a class="code" href="if_8c.html#a788f6c1b52cee08e687d34b9f8230960">ifindex2ifname</a>(ifindex));
<a name="l01006"></a>01006   }
<a name="l01007"></a>01007 
<a name="l01008"></a>01008   <a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6">ripng_event</a> (<a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6a2e7d2cd80dd6c338241452b2e2f64cd9">RIPNG_TRIGGERED_UPDATE</a>, 0);
<a name="l01009"></a>01009 }
<a name="l01010"></a>01010 
<a name="l01011"></a>01011 <span class="comment">/* Delete redistributed route to RIPng table. */</span>
<a name="l01012"></a>01012 <span class="keywordtype">void</span>
<a name="l01013"></a><a class="code" href="ripngd_8h.html#abf4e18db6197731a942213e55137a662">01013</a> <a class="code" href="ripngd_8c.html#afb915914d0dc2e8129f63bccd8dd53a3">ripng_redistribute_delete</a> (<span class="keywordtype">int</span> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, <span class="keywordtype">int</span> <a class="code" href="structripng__info.html#a6b1f397b0581369f5141e29dc68d6e85">sub_type</a>, <span class="keyword">struct</span> prefix_ipv6 *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, 
<a name="l01014"></a>01014                <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structripng__info.html#a5269ffb6b1daf9eddae7ea92d271d5d6">ifindex</a>)
<a name="l01015"></a>01015 {
<a name="l01016"></a>01016   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rp;
<a name="l01017"></a>01017   <span class="keyword">struct </span><a class="code" href="structripng__info.html">ripng_info</a> *rinfo;
<a name="l01018"></a>01018 
<a name="l01019"></a>01019   <span class="keywordflow">if</span> (IN6_IS_ADDR_LINKLOCAL (&amp;p-&gt;prefix))
<a name="l01020"></a>01020     <span class="keywordflow">return</span>;
<a name="l01021"></a>01021   <span class="keywordflow">if</span> (IN6_IS_ADDR_LOOPBACK (&amp;p-&gt;prefix))
<a name="l01022"></a>01022     <span class="keywordflow">return</span>;
<a name="l01023"></a>01023 <span class="preprocessor">#if defined (MUSICA) || defined (LINUX)</span>
<a name="l01024"></a>01024 <span class="preprocessor"></span>  <span class="comment">/* XXX As long as the RIPng redistribution is applied to all the connected</span>
<a name="l01025"></a>01025 <span class="comment">   *     routes, one needs to filter the ::/96 prefixes.</span>
<a name="l01026"></a>01026 <span class="comment">   *     However it could be a wanted case, it will be removed soon.</span>
<a name="l01027"></a>01027 <span class="comment">   */</span>
<a name="l01028"></a>01028   <span class="keywordflow">if</span> ((IN6_IS_ADDR_V4COMPAT(&amp;p-&gt;prefix)) ||
<a name="l01029"></a>01029       (IN6_IS_ADDR_UNSPECIFIED (&amp;p-&gt;prefix) &amp;&amp; (p-&gt;prefixlen == 96)))
<a name="l01030"></a>01030     <span class="keywordflow">return</span>;
<a name="l01031"></a>01031 <span class="preprocessor">#endif </span><span class="comment">/* MUSICA or LINUX */</span>
<a name="l01032"></a>01032 
<a name="l01033"></a>01033   rp = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (ripng-&gt;<a class="code" href="structripng.html#a1bf596b69c5b442145eb509611ad6dc5">table</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) p);
<a name="l01034"></a>01034 
<a name="l01035"></a>01035   <span class="keywordflow">if</span> (rp)
<a name="l01036"></a>01036     {
<a name="l01037"></a>01037       rinfo = rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l01038"></a>01038 
<a name="l01039"></a>01039       <span class="keywordflow">if</span> (rinfo != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>
<a name="l01040"></a>01040       &amp;&amp; rinfo-&gt;<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a> == type 
<a name="l01041"></a>01041       &amp;&amp; rinfo-&gt;<a class="code" href="structripng__info.html#a6b1f397b0581369f5141e29dc68d6e85">sub_type</a> == sub_type 
<a name="l01042"></a>01042       &amp;&amp; rinfo-&gt;<a class="code" href="structripng__info.html#a5269ffb6b1daf9eddae7ea92d271d5d6">ifindex</a> == ifindex)
<a name="l01043"></a>01043     {
<a name="l01044"></a>01044       <span class="comment">/* Perform poisoned reverse. */</span>
<a name="l01045"></a>01045       rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a> = <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>;
<a name="l01046"></a>01046       <a class="code" href="ripngd_8h.html#a76723e13884b239d90fedad4a6945d90">RIPNG_TIMER_ON</a> (rinfo-&gt;<a class="code" href="structripng__info.html#a26eebec0ab345768bc791435d2a551b9">t_garbage_collect</a>, 
<a name="l01047"></a>01047             <a class="code" href="ripngd_8c.html#ad9748647bbab59298c91b150352917a8">ripng_garbage_collect</a>, ripng-&gt;<a class="code" href="structripng.html#a79a6db0c820761917a6d5b19c2383dbd">garbage_time</a>);
<a name="l01048"></a>01048       <a class="code" href="ripngd_8h.html#ab73283656926a9bd7d6c73343acc4102">RIPNG_TIMER_OFF</a> (rinfo-&gt;<a class="code" href="structripng__info.html#ab3490e49b1b0cacad3b8bb76e20d487f">t_timeout</a>);
<a name="l01049"></a>01049 
<a name="l01050"></a>01050       <span class="comment">/* Aggregate count decrement. */</span>
<a name="l01051"></a>01051       <a class="code" href="ripng__route_8c.html#aba0f321f8fbbe5003489ede81c5fa0fd">ripng_aggregate_decrement</a> (rp, rinfo);
<a name="l01052"></a>01052 
<a name="l01053"></a>01053       rinfo-&gt;<a class="code" href="structripng__info.html#adc51f81d4cf365159e1aea265869f095">flags</a> |= <a class="code" href="ripngd_8h.html#ae2ac88c46de4d1bc9f2b01e122049b57">RIPNG_RTF_CHANGED</a>;
<a name="l01054"></a>01054       
<a name="l01055"></a>01055           <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a392e0383d4e00540ae5df2950459a02b">IS_RIPNG_DEBUG_EVENT</a>)
<a name="l01056"></a>01056             <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Poisone %s/%d on the interface %s with an infinity metric [delete]&quot;</span>,
<a name="l01057"></a>01057                        inet6_ntoa(p-&gt;<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>), p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>,
<a name="l01058"></a>01058                        <a class="code" href="if_8c.html#a788f6c1b52cee08e687d34b9f8230960">ifindex2ifname</a>(ifindex));
<a name="l01059"></a>01059 
<a name="l01060"></a>01060       <a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6">ripng_event</a> (<a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6a2e7d2cd80dd6c338241452b2e2f64cd9">RIPNG_TRIGGERED_UPDATE</a>, 0);
<a name="l01061"></a>01061     }
<a name="l01062"></a>01062     }
<a name="l01063"></a>01063 }
<a name="l01064"></a>01064 
<a name="l01065"></a>01065 <span class="comment">/* Withdraw redistributed route. */</span>
<a name="l01066"></a>01066 <span class="keywordtype">void</span>
<a name="l01067"></a><a class="code" href="ripngd_8h.html#a7b2f5bb07a049125bd2981a13054cb68">01067</a> <a class="code" href="ripngd_8c.html#a7b2f5bb07a049125bd2981a13054cb68">ripng_redistribute_withdraw</a> (<span class="keywordtype">int</span> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>)
<a name="l01068"></a>01068 {
<a name="l01069"></a>01069   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rp;
<a name="l01070"></a>01070   <span class="keyword">struct </span><a class="code" href="structripng__info.html">ripng_info</a> *rinfo;
<a name="l01071"></a>01071 
<a name="l01072"></a>01072   <span class="keywordflow">if</span> (!ripng)
<a name="l01073"></a>01073     <span class="keywordflow">return</span>;
<a name="l01074"></a>01074   
<a name="l01075"></a>01075   <span class="keywordflow">for</span> (rp = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (ripng-&gt;<a class="code" href="structripng.html#a1bf596b69c5b442145eb509611ad6dc5">table</a>); rp; rp = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rp))
<a name="l01076"></a>01076     <span class="keywordflow">if</span> ((rinfo = rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01077"></a>01077       {
<a name="l01078"></a>01078     <span class="keywordflow">if</span> ((rinfo-&gt;<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a> == type)
<a name="l01079"></a>01079         &amp;&amp; (rinfo-&gt;<a class="code" href="structripng__info.html#a6b1f397b0581369f5141e29dc68d6e85">sub_type</a> != <a class="code" href="ripngd_8h.html#a7b8a856e1865628b6e85977878f5b309">RIPNG_ROUTE_INTERFACE</a>))
<a name="l01080"></a>01080       {
<a name="l01081"></a>01081         <span class="comment">/* Perform poisoned reverse. */</span>
<a name="l01082"></a>01082         rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a> = <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>;
<a name="l01083"></a>01083         <a class="code" href="ripngd_8h.html#a76723e13884b239d90fedad4a6945d90">RIPNG_TIMER_ON</a> (rinfo-&gt;<a class="code" href="structripng__info.html#a26eebec0ab345768bc791435d2a551b9">t_garbage_collect</a>, 
<a name="l01084"></a>01084               <a class="code" href="ripngd_8c.html#ad9748647bbab59298c91b150352917a8">ripng_garbage_collect</a>, ripng-&gt;<a class="code" href="structripng.html#a79a6db0c820761917a6d5b19c2383dbd">garbage_time</a>);
<a name="l01085"></a>01085         <a class="code" href="ripngd_8h.html#ab73283656926a9bd7d6c73343acc4102">RIPNG_TIMER_OFF</a> (rinfo-&gt;<a class="code" href="structripng__info.html#ab3490e49b1b0cacad3b8bb76e20d487f">t_timeout</a>);
<a name="l01086"></a>01086 
<a name="l01087"></a>01087         <span class="comment">/* Aggregate count decrement. */</span>
<a name="l01088"></a>01088         <a class="code" href="ripng__route_8c.html#aba0f321f8fbbe5003489ede81c5fa0fd">ripng_aggregate_decrement</a> (rp, rinfo);
<a name="l01089"></a>01089 
<a name="l01090"></a>01090         rinfo-&gt;<a class="code" href="structripng__info.html#adc51f81d4cf365159e1aea265869f095">flags</a> |= <a class="code" href="ripngd_8h.html#ae2ac88c46de4d1bc9f2b01e122049b57">RIPNG_RTF_CHANGED</a>;
<a name="l01091"></a>01091 
<a name="l01092"></a>01092         <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a392e0383d4e00540ae5df2950459a02b">IS_RIPNG_DEBUG_EVENT</a>) {
<a name="l01093"></a>01093           <span class="keyword">struct </span>prefix_ipv6 *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a> = (<span class="keyword">struct </span>prefix_ipv6 *) &amp;rp-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>;
<a name="l01094"></a>01094 
<a name="l01095"></a>01095           <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Poisone %s/%d on the interface %s [withdraw]&quot;</span>,
<a name="l01096"></a>01096                      inet6_ntoa(p-&gt;prefix), p-&gt;prefixlen,
<a name="l01097"></a>01097                      <a class="code" href="if_8c.html#a788f6c1b52cee08e687d34b9f8230960">ifindex2ifname</a>(rinfo-&gt;<a class="code" href="structripng__info.html#a5269ffb6b1daf9eddae7ea92d271d5d6">ifindex</a>));
<a name="l01098"></a>01098         }
<a name="l01099"></a>01099 
<a name="l01100"></a>01100         <a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6">ripng_event</a> (<a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6a2e7d2cd80dd6c338241452b2e2f64cd9">RIPNG_TRIGGERED_UPDATE</a>, 0);
<a name="l01101"></a>01101       }
<a name="l01102"></a>01102       }
<a name="l01103"></a>01103 }
<a name="l01104"></a>01104 
<a name="l01105"></a>01105 <span class="comment">/* RIP routing information. */</span>
<a name="l01106"></a>01106 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01107"></a><a class="code" href="ripngd_8c.html#aa3d02274a9a27986eb19cf0ff5990fc2">01107</a> <a class="code" href="ripngd_8c.html#aa3d02274a9a27986eb19cf0ff5990fc2">ripng_response_process</a> (<span class="keyword">struct</span> <a class="code" href="structripng__packet.html">ripng_packet</a> *packet, <span class="keywordtype">int</span> size, 
<a name="l01108"></a>01108             <span class="keyword">struct</span> sockaddr_in6 *from, <span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp,
<a name="l01109"></a>01109             <span class="keywordtype">int</span> hoplimit)
<a name="l01110"></a>01110 {
<a name="l01111"></a>01111   caddr_t lim;
<a name="l01112"></a>01112   <span class="keyword">struct </span><a class="code" href="structrte.html">rte</a> *<a class="code" href="structrte.html">rte</a>;
<a name="l01113"></a>01113   <span class="keyword">struct </span><a class="code" href="structripng__nexthop.html">ripng_nexthop</a> nexthop;
<a name="l01114"></a>01114 
<a name="l01115"></a>01115   <span class="comment">/* RFC2080 2.4.2  Response Messages:</span>
<a name="l01116"></a>01116 <span class="comment">   The Response must be ignored if it is not from the RIPng port.  */</span>
<a name="l01117"></a>01117   <span class="keywordflow">if</span> (ntohs (from-&gt;sin6_port) != <a class="code" href="ripngd_8h.html#a8a29218cbba163cd33175e89084ad25c">RIPNG_PORT_DEFAULT</a>)
<a name="l01118"></a>01118     {
<a name="l01119"></a>01119       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;RIPng packet comes from non RIPng port %d from %s&quot;</span>,
<a name="l01120"></a>01120          ntohs (from-&gt;sin6_port), inet6_ntoa (from-&gt;sin6_addr));
<a name="l01121"></a>01121       <a class="code" href="ripng__peer_8c.html#a1f3dba7e137aaa1a9a5c2ba3576df752">ripng_peer_bad_packet</a> (from);
<a name="l01122"></a>01122       <span class="keywordflow">return</span>;
<a name="l01123"></a>01123     }
<a name="l01124"></a>01124 
<a name="l01125"></a>01125   <span class="comment">/* The datagram&#39;s IPv6 source address should be checked to see</span>
<a name="l01126"></a>01126 <span class="comment">   whether the datagram is from a valid neighbor; the source of the</span>
<a name="l01127"></a>01127 <span class="comment">   datagram must be a link-local address.  */</span>
<a name="l01128"></a>01128   <span class="keywordflow">if</span> (! IN6_IS_ADDR_LINKLOCAL(&amp;from-&gt;sin6_addr))
<a name="l01129"></a>01129    {
<a name="l01130"></a>01130       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;RIPng packet comes from non link local address %s&quot;</span>,
<a name="l01131"></a>01131          inet6_ntoa (from-&gt;sin6_addr));
<a name="l01132"></a>01132       <a class="code" href="ripng__peer_8c.html#a1f3dba7e137aaa1a9a5c2ba3576df752">ripng_peer_bad_packet</a> (from);
<a name="l01133"></a>01133       <span class="keywordflow">return</span>;
<a name="l01134"></a>01134     }
<a name="l01135"></a>01135 
<a name="l01136"></a>01136   <span class="comment">/* It is also worth checking to see whether the response is from one</span>
<a name="l01137"></a>01137 <span class="comment">   of the router&#39;s own addresses.  Interfaces on broadcast networks</span>
<a name="l01138"></a>01138 <span class="comment">   may receive copies of their own multicasts immediately.  If a</span>
<a name="l01139"></a>01139 <span class="comment">   router processes its own output as new input, confusion is likely,</span>
<a name="l01140"></a>01140 <span class="comment">   and such datagrams must be ignored. */</span>
<a name="l01141"></a>01141   <span class="keywordflow">if</span> (<a class="code" href="ripngd_8c.html#ab31cc16d7dd4df1e71bb29c546d88cfb">ripng_lladdr_check</a> (ifp, &amp;from-&gt;sin6_addr))
<a name="l01142"></a>01142     {
<a name="l01143"></a>01143       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;RIPng packet comes from my own link local address %s&quot;</span>,
<a name="l01144"></a>01144          inet6_ntoa (from-&gt;sin6_addr));
<a name="l01145"></a>01145       <a class="code" href="ripng__peer_8c.html#a1f3dba7e137aaa1a9a5c2ba3576df752">ripng_peer_bad_packet</a> (from);
<a name="l01146"></a>01146       <span class="keywordflow">return</span>;
<a name="l01147"></a>01147     }
<a name="l01148"></a>01148 
<a name="l01149"></a>01149   <span class="comment">/* As an additional check, periodic advertisements must have their</span>
<a name="l01150"></a>01150 <span class="comment">   hop counts set to 255, and inbound, multicast packets sent from the</span>
<a name="l01151"></a>01151 <span class="comment">   RIPng port (i.e. periodic advertisement or triggered update</span>
<a name="l01152"></a>01152 <span class="comment">   packets) must be examined to ensure that the hop count is 255. */</span>
<a name="l01153"></a>01153   <span class="keywordflow">if</span> (hoplimit &gt;= 0 &amp;&amp; hoplimit != 255)
<a name="l01154"></a>01154     {
<a name="l01155"></a>01155       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;RIPng packet comes with non 255 hop count %d from %s&quot;</span>,
<a name="l01156"></a>01156          hoplimit, inet6_ntoa (from-&gt;sin6_addr));
<a name="l01157"></a>01157       <a class="code" href="ripng__peer_8c.html#a1f3dba7e137aaa1a9a5c2ba3576df752">ripng_peer_bad_packet</a> (from);
<a name="l01158"></a>01158       <span class="keywordflow">return</span>;
<a name="l01159"></a>01159     }
<a name="l01160"></a>01160 
<a name="l01161"></a>01161   <span class="comment">/* Update RIPng peer. */</span>
<a name="l01162"></a>01162   <a class="code" href="ripng__peer_8c.html#a06a24eac18e1422c66467aa3ebaff2ba">ripng_peer_update</a> (from, packet-&gt;<a class="code" href="structripng__packet.html#a60fc773724de8fcfacb73abe560bb41a">version</a>);
<a name="l01163"></a>01163   
<a name="l01164"></a>01164   <span class="comment">/* Reset nexthop. */</span>
<a name="l01165"></a>01165   memset (&amp;nexthop, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structripng__nexthop.html">ripng_nexthop</a>));
<a name="l01166"></a>01166   nexthop.<a class="code" href="structripng__nexthop.html#a47491d21e1277401bed39f35a79434b2">flag</a> = <a class="code" href="structripng__nexthop.html#a5c5c2bdc97b730a9c7d6aed89c79a83fa5279c8c5ceceb04173f5d0c55a31b4f4">RIPNG_NEXTHOP_UNSPEC</a>;
<a name="l01167"></a>01167 
<a name="l01168"></a>01168   <span class="comment">/* Set RTE pointer. */</span>
<a name="l01169"></a>01169   rte = packet-&gt;<a class="code" href="structripng__packet.html#a87cc82cb5cfac4a509180fa9efa7b341">rte</a>;
<a name="l01170"></a>01170 
<a name="l01171"></a>01171   <span class="keywordflow">for</span> (lim = ((caddr_t) packet) + size; (caddr_t) rte &lt; lim; rte++) 
<a name="l01172"></a>01172     {
<a name="l01173"></a>01173       <span class="comment">/* First of all, we have to check this RTE is next hop RTE or</span>
<a name="l01174"></a>01174 <span class="comment">         not.  Next hop RTE is completely different with normal RTE so</span>
<a name="l01175"></a>01175 <span class="comment">         we need special treatment. */</span>
<a name="l01176"></a>01176       <span class="keywordflow">if</span> (rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a> == <a class="code" href="ripngd_8h.html#abf008d76fd54560aa51e1016ceee8c77">RIPNG_METRIC_NEXTHOP</a>)
<a name="l01177"></a>01177     {
<a name="l01178"></a>01178       <a class="code" href="ripngd_8c.html#adc76996f440d2320cf5fff688543a6a5">ripng_nexthop_rte</a> (rte, from, &amp;nexthop);
<a name="l01179"></a>01179       <span class="keywordflow">continue</span>;
<a name="l01180"></a>01180     }
<a name="l01181"></a>01181 
<a name="l01182"></a>01182       <span class="comment">/* RTE information validation. */</span>
<a name="l01183"></a>01183 
<a name="l01184"></a>01184       <span class="comment">/* - is the destination prefix valid (e.g., not a multicast</span>
<a name="l01185"></a>01185 <span class="comment">         prefix and not a link-local address) A link-local address</span>
<a name="l01186"></a>01186 <span class="comment">         should never be present in an RTE. */</span>
<a name="l01187"></a>01187       <span class="keywordflow">if</span> (IN6_IS_ADDR_MULTICAST (&amp;rte-&gt;<a class="code" href="structrte.html#a55d2b28f5596f5ddbdde7704e6304019">addr</a>))
<a name="l01188"></a>01188     {
<a name="l01189"></a>01189       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;Destination prefix is a multicast address %s/%d [%d]&quot;</span>,
<a name="l01190"></a>01190              inet6_ntoa (rte-&gt;<a class="code" href="structrte.html#a55d2b28f5596f5ddbdde7704e6304019">addr</a>), rte-&gt;<a class="code" href="structrte.html#ab25775a475bb20ff840233cc64f8db79">prefixlen</a>, rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a>);
<a name="l01191"></a>01191       <a class="code" href="ripng__peer_8c.html#a768f3f369f242910a1fbdc5ce4a041e6">ripng_peer_bad_route</a> (from);
<a name="l01192"></a>01192       <span class="keywordflow">continue</span>;
<a name="l01193"></a>01193     }
<a name="l01194"></a>01194       <span class="keywordflow">if</span> (IN6_IS_ADDR_LINKLOCAL (&amp;rte-&gt;<a class="code" href="structrte.html#a55d2b28f5596f5ddbdde7704e6304019">addr</a>))
<a name="l01195"></a>01195     {
<a name="l01196"></a>01196       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;Destination prefix is a link-local address %s/%d [%d]&quot;</span>,
<a name="l01197"></a>01197              inet6_ntoa (rte-&gt;<a class="code" href="structrte.html#a55d2b28f5596f5ddbdde7704e6304019">addr</a>), rte-&gt;<a class="code" href="structrte.html#ab25775a475bb20ff840233cc64f8db79">prefixlen</a>, rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a>);
<a name="l01198"></a>01198       <a class="code" href="ripng__peer_8c.html#a768f3f369f242910a1fbdc5ce4a041e6">ripng_peer_bad_route</a> (from);
<a name="l01199"></a>01199       <span class="keywordflow">continue</span>;
<a name="l01200"></a>01200     }
<a name="l01201"></a>01201       <span class="keywordflow">if</span> (IN6_IS_ADDR_LOOPBACK (&amp;rte-&gt;<a class="code" href="structrte.html#a55d2b28f5596f5ddbdde7704e6304019">addr</a>))
<a name="l01202"></a>01202     {
<a name="l01203"></a>01203       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;Destination prefix is a loopback address %s/%d [%d]&quot;</span>,
<a name="l01204"></a>01204              inet6_ntoa (rte-&gt;<a class="code" href="structrte.html#a55d2b28f5596f5ddbdde7704e6304019">addr</a>), rte-&gt;<a class="code" href="structrte.html#ab25775a475bb20ff840233cc64f8db79">prefixlen</a>, rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a>);
<a name="l01205"></a>01205       <a class="code" href="ripng__peer_8c.html#a768f3f369f242910a1fbdc5ce4a041e6">ripng_peer_bad_route</a> (from);
<a name="l01206"></a>01206       <span class="keywordflow">continue</span>;
<a name="l01207"></a>01207     }
<a name="l01208"></a>01208 
<a name="l01209"></a>01209       <span class="comment">/* - is the prefix length valid (i.e., between 0 and 128,</span>
<a name="l01210"></a>01210 <span class="comment">         inclusive) */</span>
<a name="l01211"></a>01211       <span class="keywordflow">if</span> (rte-&gt;<a class="code" href="structrte.html#ab25775a475bb20ff840233cc64f8db79">prefixlen</a> &gt; 128)
<a name="l01212"></a>01212     {
<a name="l01213"></a>01213       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;Invalid prefix length %s/%d from %s%%%s&quot;</span>,
<a name="l01214"></a>01214              inet6_ntoa (rte-&gt;<a class="code" href="structrte.html#a55d2b28f5596f5ddbdde7704e6304019">addr</a>), rte-&gt;<a class="code" href="structrte.html#ab25775a475bb20ff840233cc64f8db79">prefixlen</a>,
<a name="l01215"></a>01215              inet6_ntoa (from-&gt;sin6_addr), ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
<a name="l01216"></a>01216       <a class="code" href="ripng__peer_8c.html#a768f3f369f242910a1fbdc5ce4a041e6">ripng_peer_bad_route</a> (from);
<a name="l01217"></a>01217       <span class="keywordflow">continue</span>;
<a name="l01218"></a>01218     }
<a name="l01219"></a>01219 
<a name="l01220"></a>01220       <span class="comment">/* - is the metric valid (i.e., between 1 and 16, inclusive) */</span>
<a name="l01221"></a>01221       <span class="keywordflow">if</span> (! (rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a> &gt;= 1 &amp;&amp; rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a> &lt;= 16))
<a name="l01222"></a>01222     {
<a name="l01223"></a>01223       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;Invalid metric %d from %s%%%s&quot;</span>, rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a>,
<a name="l01224"></a>01224              inet6_ntoa (from-&gt;sin6_addr), ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
<a name="l01225"></a>01225       <a class="code" href="ripng__peer_8c.html#a768f3f369f242910a1fbdc5ce4a041e6">ripng_peer_bad_route</a> (from);
<a name="l01226"></a>01226       <span class="keywordflow">continue</span>;
<a name="l01227"></a>01227     }
<a name="l01228"></a>01228 
<a name="l01229"></a>01229       <span class="comment">/* Vincent: XXX Should we compute the direclty reachable nexthop</span>
<a name="l01230"></a>01230 <span class="comment">       * for our RIPng network ?</span>
<a name="l01231"></a>01231 <span class="comment">       **/</span>
<a name="l01232"></a>01232 
<a name="l01233"></a>01233       <span class="comment">/* Routing table updates. */</span>
<a name="l01234"></a>01234       <a class="code" href="ripngd_8c.html#a9a70d765d5d3ff923a01c97ca3ef8903">ripng_route_process</a> (rte, from, &amp;nexthop, ifp);
<a name="l01235"></a>01235     }
<a name="l01236"></a>01236 }
<a name="l01237"></a>01237 
<a name="l01238"></a>01238 <span class="comment">/* Response to request message. */</span>
<a name="l01239"></a>01239 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01240"></a><a class="code" href="ripngd_8c.html#aa7f2c5de4fc96fc9d062f99cf6e9edaa">01240</a> <a class="code" href="ripngd_8c.html#aa7f2c5de4fc96fc9d062f99cf6e9edaa">ripng_request_process</a> (<span class="keyword">struct</span> <a class="code" href="structripng__packet.html">ripng_packet</a> *packet,<span class="keywordtype">int</span> size, 
<a name="l01241"></a>01241                <span class="keyword">struct</span> sockaddr_in6 *from, <span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp)
<a name="l01242"></a>01242 {
<a name="l01243"></a>01243   caddr_t lim;
<a name="l01244"></a>01244   <span class="keyword">struct </span><a class="code" href="structrte.html">rte</a> *<a class="code" href="structrte.html">rte</a>;
<a name="l01245"></a>01245   <span class="keyword">struct </span>prefix_ipv6 p;
<a name="l01246"></a>01246   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rp;
<a name="l01247"></a>01247   <span class="keyword">struct </span><a class="code" href="structripng__info.html">ripng_info</a> *rinfo;
<a name="l01248"></a>01248   <span class="keyword">struct </span><a class="code" href="structripng__interface.html">ripng_interface</a> *ri;
<a name="l01249"></a>01249 
<a name="l01250"></a>01250   <span class="comment">/* Does not reponse to the requests on the loopback interfaces */</span>
<a name="l01251"></a>01251   <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a8c30d3c9709c67544befed76b7260267">if_is_loopback</a> (ifp))
<a name="l01252"></a>01252     <span class="keywordflow">return</span>;
<a name="l01253"></a>01253 
<a name="l01254"></a>01254   <span class="comment">/* Check RIPng process is enabled on this interface. */</span>
<a name="l01255"></a>01255   ri = ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l01256"></a>01256   <span class="keywordflow">if</span> (! ri-&gt;<a class="code" href="structripng__interface.html#abd30652e25c22eca7261479d51734961">running</a>)
<a name="l01257"></a>01257     <span class="keywordflow">return</span>;
<a name="l01258"></a>01258 
<a name="l01259"></a>01259   <span class="comment">/* When passive interface is specified, suppress responses */</span>
<a name="l01260"></a>01260   <span class="keywordflow">if</span> (ri-&gt;<a class="code" href="structripng__interface.html#a2f7b4c147da99def4faea5bca0f88c88">passive</a>)
<a name="l01261"></a>01261     <span class="keywordflow">return</span>;
<a name="l01262"></a>01262 
<a name="l01263"></a>01263   <span class="comment">/* RIPng peer update. */</span>
<a name="l01264"></a>01264   <a class="code" href="ripng__peer_8c.html#a06a24eac18e1422c66467aa3ebaff2ba">ripng_peer_update</a> (from, packet-&gt;<a class="code" href="structripng__packet.html#a60fc773724de8fcfacb73abe560bb41a">version</a>);
<a name="l01265"></a>01265 
<a name="l01266"></a>01266   lim = ((caddr_t) packet) + size;
<a name="l01267"></a>01267   rte = packet-&gt;<a class="code" href="structripng__packet.html#a87cc82cb5cfac4a509180fa9efa7b341">rte</a>;
<a name="l01268"></a>01268 
<a name="l01269"></a>01269   <span class="comment">/* The Request is processed entry by entry.  If there are no</span>
<a name="l01270"></a>01270 <span class="comment">     entries, no response is given. */</span>
<a name="l01271"></a>01271   <span class="keywordflow">if</span> (lim == (caddr_t) rte)
<a name="l01272"></a>01272     <span class="keywordflow">return</span>;
<a name="l01273"></a>01273 
<a name="l01274"></a>01274   <span class="comment">/* There is one special case.  If there is exactly one entry in the</span>
<a name="l01275"></a>01275 <span class="comment">     request, and it has a destination prefix of zero, a prefix length</span>
<a name="l01276"></a>01276 <span class="comment">     of zero, and a metric of infinity (i.e., 16), then this is a</span>
<a name="l01277"></a>01277 <span class="comment">     request to send the entire routing table.  In that case, a call</span>
<a name="l01278"></a>01278 <span class="comment">     is made to the output process to send the routing table to the</span>
<a name="l01279"></a>01279 <span class="comment">     requesting address/port. */</span>
<a name="l01280"></a>01280   <span class="keywordflow">if</span> (lim == ((caddr_t) (rte + 1)) &amp;&amp;
<a name="l01281"></a>01281       IN6_IS_ADDR_UNSPECIFIED (&amp;rte-&gt;<a class="code" href="structrte.html#a55d2b28f5596f5ddbdde7704e6304019">addr</a>) &amp;&amp;
<a name="l01282"></a>01282       rte-&gt;<a class="code" href="structrte.html#ab25775a475bb20ff840233cc64f8db79">prefixlen</a> == 0 &amp;&amp;
<a name="l01283"></a>01283       rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a> == <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>)
<a name="l01284"></a>01284     {   
<a name="l01285"></a>01285       <span class="comment">/* All route with split horizon */</span>
<a name="l01286"></a>01286       <a class="code" href="ripngd_8c.html#a3f72267312fe0a97d08b67ba961d6658">ripng_output_process</a> (ifp, from, <a class="code" href="ripngd_8c.html#aa618c4d8c29ef4efe6f10c741fb1f47aa36d98eb8a2b6865a11a6b04b8a464e83">ripng_all_route</a>);
<a name="l01287"></a>01287     }
<a name="l01288"></a>01288   <span class="keywordflow">else</span>
<a name="l01289"></a>01289     {
<a name="l01290"></a>01290       <span class="comment">/* Except for this special case, processing is quite simple.</span>
<a name="l01291"></a>01291 <span class="comment">     Examine the list of RTEs in the Request one by one.  For each</span>
<a name="l01292"></a>01292 <span class="comment">     entry, look up the destination in the router&#39;s routing</span>
<a name="l01293"></a>01293 <span class="comment">     database and, if there is a route, put that route&#39;s metric in</span>
<a name="l01294"></a>01294 <span class="comment">     the metric field of the RTE.  If there is no explicit route</span>
<a name="l01295"></a>01295 <span class="comment">     to the specified destination, put infinity in the metric</span>
<a name="l01296"></a>01296 <span class="comment">     field.  Once all the entries have been filled in, change the</span>
<a name="l01297"></a>01297 <span class="comment">     command from Request to Response and send the datagram back</span>
<a name="l01298"></a>01298 <span class="comment">     to the requestor. */</span>
<a name="l01299"></a>01299       memset (&amp;p, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> prefix_ipv6));
<a name="l01300"></a>01300       p.family = AF_INET6;
<a name="l01301"></a>01301 
<a name="l01302"></a>01302       <span class="keywordflow">for</span> (; ((caddr_t) rte) &lt; lim; rte++)
<a name="l01303"></a>01303     {
<a name="l01304"></a>01304       p.prefix = rte-&gt;<a class="code" href="structrte.html#a55d2b28f5596f5ddbdde7704e6304019">addr</a>;
<a name="l01305"></a>01305       p.prefixlen = rte-&gt;<a class="code" href="structrte.html#ab25775a475bb20ff840233cc64f8db79">prefixlen</a>;
<a name="l01306"></a>01306       apply_mask_ipv6 (&amp;p);
<a name="l01307"></a>01307       
<a name="l01308"></a>01308       rp = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (ripng-&gt;<a class="code" href="structripng.html#a1bf596b69c5b442145eb509611ad6dc5">table</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;p);
<a name="l01309"></a>01309 
<a name="l01310"></a>01310       <span class="keywordflow">if</span> (rp)
<a name="l01311"></a>01311         {
<a name="l01312"></a>01312           rinfo = rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l01313"></a>01313           rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a> = rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a>;
<a name="l01314"></a>01314           <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rp);
<a name="l01315"></a>01315         }
<a name="l01316"></a>01316       <span class="keywordflow">else</span>
<a name="l01317"></a>01317         rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a> = <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>;
<a name="l01318"></a>01318     }
<a name="l01319"></a>01319       packet-&gt;<a class="code" href="structripng__packet.html#ad3eeeb2a9f59c2a969fb40c950b6484b">command</a> = <a class="code" href="ripngd_8h.html#aa5ec5496ce7fc62a57b04272d2ec5756">RIPNG_RESPONSE</a>;
<a name="l01320"></a>01320 
<a name="l01321"></a>01321       <a class="code" href="ripngd_8c.html#a0d2737d5d5dcd2d0fcb60ebd037f0004">ripng_send_packet</a> ((caddr_t) packet, size, from, ifp);
<a name="l01322"></a>01322     }
<a name="l01323"></a>01323 }
<a name="l01324"></a>01324 
<a name="l01325"></a>01325 <span class="comment">/* First entry point of reading RIPng packet. */</span>
<a name="l01326"></a>01326 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l01327"></a><a class="code" href="ripngd_8c.html#a11cd35910bd31d36ebde951870260d20">01327</a> <a class="code" href="ripngd_8c.html#a11cd35910bd31d36ebde951870260d20">ripng_read</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l01328"></a>01328 {
<a name="l01329"></a>01329   <span class="keywordtype">int</span> len;
<a name="l01330"></a>01330   <span class="keywordtype">int</span> sock;
<a name="l01331"></a>01331   <span class="keyword">struct </span>sockaddr_in6 from;
<a name="l01332"></a>01332   <span class="keyword">struct </span><a class="code" href="structripng__packet.html">ripng_packet</a> *packet;
<a name="l01333"></a>01333   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> ifindex;
<a name="l01334"></a>01334   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l01335"></a>01335   <span class="keywordtype">int</span> hoplimit = -1;
<a name="l01336"></a>01336 
<a name="l01337"></a>01337   <span class="comment">/* Check ripng is active and alive. */</span>
<a name="l01338"></a>01338   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (ripng != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l01339"></a>01339   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (ripng-&gt;<a class="code" href="structripng.html#a68ed7b98a04fcdefea29cc865bf12918">sock</a> &gt;= 0);
<a name="l01340"></a>01340 
<a name="l01341"></a>01341   <span class="comment">/* Fetch thread data and set read pointer to empty for event</span>
<a name="l01342"></a>01342 <span class="comment">     managing.  `sock&#39; sould be same as ripng-&gt;sock. */</span>
<a name="l01343"></a>01343   sock = <a class="code" href="thread_8h.html#a89bd56f991717646441f9dffc010d4f5">THREAD_FD</a> (thread);
<a name="l01344"></a>01344   ripng-&gt;<a class="code" href="structripng.html#a29b362daa2745d646257cfe029a114e9">t_read</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01345"></a>01345 
<a name="l01346"></a>01346   <span class="comment">/* Add myself to the next event. */</span>
<a name="l01347"></a>01347   <a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6">ripng_event</a> (<a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6a4aa69fc6b41b9cb0152442359f136f60">RIPNG_READ</a>, sock);
<a name="l01348"></a>01348 
<a name="l01349"></a>01349   <span class="comment">/* Read RIPng packet. */</span>
<a name="l01350"></a>01350   len = <a class="code" href="ripngd_8c.html#a4c5e47f96c44a80502ce3e206c315829">ripng_recv_packet</a> (sock, <a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (ripng-&gt;<a class="code" href="structripng.html#a2d6cadaef274f6f247afbf55d67cf684">ibuf</a>), 
<a name="l01351"></a>01351                <a class="code" href="stream_8h.html#a6e3b6e25ed5cfa2faea8485414a0c1a4">STREAM_SIZE</a> (ripng-&gt;<a class="code" href="structripng.html#a2d6cadaef274f6f247afbf55d67cf684">ibuf</a>), &amp;from, &amp;ifindex,
<a name="l01352"></a>01352                &amp;hoplimit);
<a name="l01353"></a>01353   <span class="keywordflow">if</span> (len &lt; 0) 
<a name="l01354"></a>01354     {
<a name="l01355"></a>01355       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;RIPng recvfrom failed: %s.&quot;</span>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
<a name="l01356"></a>01356       <span class="keywordflow">return</span> len;
<a name="l01357"></a>01357     }
<a name="l01358"></a>01358 
<a name="l01359"></a>01359   <span class="comment">/* Check RTE boundary.  RTE size (Packet length - RIPng header size</span>
<a name="l01360"></a>01360 <span class="comment">     (4)) must be multiple size of one RTE size (20). */</span>
<a name="l01361"></a>01361   <span class="keywordflow">if</span> (((len - 4) % 20) != 0)
<a name="l01362"></a>01362     {
<a name="l01363"></a>01363       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;RIPng invalid packet size %d from %s&quot;</span>, len,
<a name="l01364"></a>01364          inet6_ntoa (from.sin6_addr));
<a name="l01365"></a>01365       <a class="code" href="ripng__peer_8c.html#a1f3dba7e137aaa1a9a5c2ba3576df752">ripng_peer_bad_packet</a> (&amp;from);
<a name="l01366"></a>01366       <span class="keywordflow">return</span> 0;
<a name="l01367"></a>01367     }
<a name="l01368"></a>01368 
<a name="l01369"></a>01369   packet = (<span class="keyword">struct </span><a class="code" href="structripng__packet.html">ripng_packet</a> *) <a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (ripng-&gt;<a class="code" href="structripng.html#a2d6cadaef274f6f247afbf55d67cf684">ibuf</a>);
<a name="l01370"></a>01370   ifp = <a class="code" href="if_8c.html#a424dd1e971aee548383cca2b770e2859">if_lookup_by_index</a> (ifindex);
<a name="l01371"></a>01371 
<a name="l01372"></a>01372   <span class="comment">/* RIPng packet received. */</span>
<a name="l01373"></a>01373   <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a392e0383d4e00540ae5df2950459a02b">IS_RIPNG_DEBUG_EVENT</a>)
<a name="l01374"></a>01374     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;RIPng packet received from %s port %d on %s&quot;</span>,
<a name="l01375"></a>01375            inet6_ntoa (from.sin6_addr), ntohs (from.sin6_port), 
<a name="l01376"></a>01376            ifp ? ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a> : <span class="stringliteral">&quot;unknown&quot;</span>);
<a name="l01377"></a>01377 
<a name="l01378"></a>01378   <span class="comment">/* Logging before packet checking. */</span>
<a name="l01379"></a>01379   <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a9a1da75ed0fbbe22c02f7d726b1f900c">IS_RIPNG_DEBUG_RECV</a>)
<a name="l01380"></a>01380     <a class="code" href="ripngd_8c.html#a0d7f74786282b1676f0508b2f0c636c1">ripng_packet_dump</a> (packet, len, <span class="stringliteral">&quot;RECV&quot;</span>);
<a name="l01381"></a>01381 
<a name="l01382"></a>01382   <span class="comment">/* Packet comes from unknown interface. */</span>
<a name="l01383"></a>01383   <span class="keywordflow">if</span> (ifp == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01384"></a>01384     {
<a name="l01385"></a>01385       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;RIPng packet comes from unknown interface %d&quot;</span>, ifindex);
<a name="l01386"></a>01386       <span class="keywordflow">return</span> 0;
<a name="l01387"></a>01387     }
<a name="l01388"></a>01388 
<a name="l01389"></a>01389   <span class="comment">/* Packet version mismatch checking. */</span>
<a name="l01390"></a>01390   <span class="keywordflow">if</span> (packet-&gt;<a class="code" href="structripng__packet.html#a60fc773724de8fcfacb73abe560bb41a">version</a> != ripng-&gt;<a class="code" href="structripng.html#a5876107e16a08687d8d9428a128c657b">version</a>) 
<a name="l01391"></a>01391     {
<a name="l01392"></a>01392       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;RIPng packet version %d doesn&#39;t fit to my version %d&quot;</span>, 
<a name="l01393"></a>01393          packet-&gt;<a class="code" href="structripng__packet.html#a60fc773724de8fcfacb73abe560bb41a">version</a>, ripng-&gt;<a class="code" href="structripng.html#a5876107e16a08687d8d9428a128c657b">version</a>);
<a name="l01394"></a>01394       <a class="code" href="ripng__peer_8c.html#a1f3dba7e137aaa1a9a5c2ba3576df752">ripng_peer_bad_packet</a> (&amp;from);
<a name="l01395"></a>01395       <span class="keywordflow">return</span> 0;
<a name="l01396"></a>01396     }
<a name="l01397"></a>01397 
<a name="l01398"></a>01398   <span class="comment">/* Process RIPng packet. */</span>
<a name="l01399"></a>01399   <span class="keywordflow">switch</span> (packet-&gt;<a class="code" href="structripng__packet.html#ad3eeeb2a9f59c2a969fb40c950b6484b">command</a>)
<a name="l01400"></a>01400     {
<a name="l01401"></a>01401     <span class="keywordflow">case</span> <a class="code" href="ripngd_8h.html#a6b3f586e670da71a3d8fed9c82c03e65">RIPNG_REQUEST</a>:
<a name="l01402"></a>01402       <a class="code" href="ripngd_8c.html#aa7f2c5de4fc96fc9d062f99cf6e9edaa">ripng_request_process</a> (packet, len, &amp;from, ifp);
<a name="l01403"></a>01403       <span class="keywordflow">break</span>;
<a name="l01404"></a>01404     <span class="keywordflow">case</span> <a class="code" href="ripngd_8h.html#aa5ec5496ce7fc62a57b04272d2ec5756">RIPNG_RESPONSE</a>:
<a name="l01405"></a>01405       <a class="code" href="ripngd_8c.html#aa3d02274a9a27986eb19cf0ff5990fc2">ripng_response_process</a> (packet, len, &amp;from, ifp, hoplimit);
<a name="l01406"></a>01406       <span class="keywordflow">break</span>;
<a name="l01407"></a>01407     <span class="keywordflow">default</span>:
<a name="l01408"></a>01408       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;Invalid RIPng command %d&quot;</span>, packet-&gt;<a class="code" href="structripng__packet.html#ad3eeeb2a9f59c2a969fb40c950b6484b">command</a>);
<a name="l01409"></a>01409       <a class="code" href="ripng__peer_8c.html#a1f3dba7e137aaa1a9a5c2ba3576df752">ripng_peer_bad_packet</a> (&amp;from);
<a name="l01410"></a>01410       <span class="keywordflow">break</span>;
<a name="l01411"></a>01411     }
<a name="l01412"></a>01412   <span class="keywordflow">return</span> 0;
<a name="l01413"></a>01413 }
<a name="l01414"></a>01414 
<a name="l01415"></a>01415 <span class="comment">/* Walk down the RIPng routing table then clear changed flag. */</span>
<a name="l01416"></a>01416 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01417"></a><a class="code" href="ripngd_8c.html#a42c420e9fcc21cfbcc496b1ba2a97d0d">01417</a> <a class="code" href="ripngd_8c.html#a42c420e9fcc21cfbcc496b1ba2a97d0d">ripng_clear_changed_flag</a> (<span class="keywordtype">void</span>)
<a name="l01418"></a>01418 {
<a name="l01419"></a>01419   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rp;
<a name="l01420"></a>01420   <span class="keyword">struct </span><a class="code" href="structripng__info.html">ripng_info</a> *rinfo;
<a name="l01421"></a>01421 
<a name="l01422"></a>01422   <span class="keywordflow">for</span> (rp = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (ripng-&gt;<a class="code" href="structripng.html#a1bf596b69c5b442145eb509611ad6dc5">table</a>); rp; rp = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rp))
<a name="l01423"></a>01423     <span class="keywordflow">if</span> ((rinfo = rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01424"></a>01424       <span class="keywordflow">if</span> (rinfo-&gt;<a class="code" href="structripng__info.html#adc51f81d4cf365159e1aea265869f095">flags</a> &amp; <a class="code" href="ripngd_8h.html#ae2ac88c46de4d1bc9f2b01e122049b57">RIPNG_RTF_CHANGED</a>)
<a name="l01425"></a>01425     rinfo-&gt;<a class="code" href="structripng__info.html#adc51f81d4cf365159e1aea265869f095">flags</a> &amp;= ~<a class="code" href="ripngd_8h.html#ae2ac88c46de4d1bc9f2b01e122049b57">RIPNG_RTF_CHANGED</a>;
<a name="l01426"></a>01426 }
<a name="l01427"></a>01427 
<a name="l01428"></a>01428 <span class="comment">/* Regular update of RIPng route.  Send all routing formation to RIPng</span>
<a name="l01429"></a>01429 <span class="comment">   enabled interface. */</span>
<a name="l01430"></a>01430 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l01431"></a><a class="code" href="ripngd_8c.html#a26eee9390f4183a3f264a9942d447fdd">01431</a> <a class="code" href="ripngd_8c.html#a26eee9390f4183a3f264a9942d447fdd">ripng_update</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>)
<a name="l01432"></a>01432 {
<a name="l01433"></a>01433   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l01434"></a>01434   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l01435"></a>01435   <span class="keyword">struct </span><a class="code" href="structripng__interface.html">ripng_interface</a> *ri;
<a name="l01436"></a>01436 
<a name="l01437"></a>01437   <span class="comment">/* Clear update timer thread. */</span>
<a name="l01438"></a>01438   ripng-&gt;<a class="code" href="structripng.html#aff88d98568318561b02dbee48d24acc1">t_update</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01439"></a>01439 
<a name="l01440"></a>01440   <span class="comment">/* Logging update event. */</span>
<a name="l01441"></a>01441   <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a392e0383d4e00540ae5df2950459a02b">IS_RIPNG_DEBUG_EVENT</a>)
<a name="l01442"></a>01442     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;RIPng update timer expired!&quot;</span>);
<a name="l01443"></a>01443 
<a name="l01444"></a>01444   <span class="comment">/* Supply routes to each interface. */</span>
<a name="l01445"></a>01445   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="if_8c.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a>, node, ifp))
<a name="l01446"></a>01446     {
<a name="l01447"></a>01447       ri = ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l01448"></a>01448 
<a name="l01449"></a>01449       <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a8c30d3c9709c67544befed76b7260267">if_is_loopback</a> (ifp) || ! <a class="code" href="if_8c.html#ade77fc67f30030f539906dad43c239ab">if_is_up</a> (ifp))
<a name="l01450"></a>01450     <span class="keywordflow">continue</span>;
<a name="l01451"></a>01451 
<a name="l01452"></a>01452       <span class="keywordflow">if</span> (! ri-&gt;<a class="code" href="structripng__interface.html#abd30652e25c22eca7261479d51734961">running</a>)
<a name="l01453"></a>01453     <span class="keywordflow">continue</span>;
<a name="l01454"></a>01454 
<a name="l01455"></a>01455       <span class="comment">/* When passive interface is specified, suppress announce to the</span>
<a name="l01456"></a>01456 <span class="comment">         interface. */</span>
<a name="l01457"></a>01457       <span class="keywordflow">if</span> (ri-&gt;<a class="code" href="structripng__interface.html#a2f7b4c147da99def4faea5bca0f88c88">passive</a>)
<a name="l01458"></a>01458     <span class="keywordflow">continue</span>;
<a name="l01459"></a>01459 
<a name="l01460"></a>01460 <span class="preprocessor">#if RIPNG_ADVANCED</span>
<a name="l01461"></a>01461 <span class="preprocessor"></span>      <span class="keywordflow">if</span> (ri-&gt;ri_send == <a class="code" href="ripngd_8h.html#a8c33a56173258e15b6657f509b18f46c">RIPNG_SEND_OFF</a>)
<a name="l01462"></a>01462     {
<a name="l01463"></a>01463       <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a392e0383d4e00540ae5df2950459a02b">IS_RIPNG_DEBUG_EVENT</a>)
<a name="l01464"></a>01464         <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_DEBUG, 
<a name="l01465"></a>01465           <span class="stringliteral">&quot;[Event] RIPng send to if %d is suppressed by config&quot;</span>,
<a name="l01466"></a>01466          ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>);
<a name="l01467"></a>01467       <span class="keywordflow">continue</span>;
<a name="l01468"></a>01468     }
<a name="l01469"></a>01469 <span class="preprocessor">#endif </span><span class="comment">/* RIPNG_ADVANCED */</span>
<a name="l01470"></a>01470 
<a name="l01471"></a>01471       <a class="code" href="ripngd_8c.html#a3f72267312fe0a97d08b67ba961d6658">ripng_output_process</a> (ifp, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <a class="code" href="ripngd_8c.html#aa618c4d8c29ef4efe6f10c741fb1f47aa36d98eb8a2b6865a11a6b04b8a464e83">ripng_all_route</a>);
<a name="l01472"></a>01472     }
<a name="l01473"></a>01473 
<a name="l01474"></a>01474   <span class="comment">/* Triggered updates may be suppressed if a regular update is due by</span>
<a name="l01475"></a>01475 <span class="comment">     the time the triggered update would be sent. */</span>
<a name="l01476"></a>01476   <span class="keywordflow">if</span> (ripng-&gt;<a class="code" href="structripng.html#a97619acc0996741fbad22b0ac1684cc5">t_triggered_interval</a>)
<a name="l01477"></a>01477     {
<a name="l01478"></a>01478       <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (ripng-&gt;<a class="code" href="structripng.html#a97619acc0996741fbad22b0ac1684cc5">t_triggered_interval</a>);
<a name="l01479"></a>01479       ripng-&gt;<a class="code" href="structripng.html#a97619acc0996741fbad22b0ac1684cc5">t_triggered_interval</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01480"></a>01480     }
<a name="l01481"></a>01481   ripng-&gt;<a class="code" href="structripng.html#a442a4c7c0bfa3a1d781e3f8d227b78c7">trigger</a> = 0;
<a name="l01482"></a>01482 
<a name="l01483"></a>01483   <span class="comment">/* Reset flush event. */</span>
<a name="l01484"></a>01484   <a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6">ripng_event</a> (<a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6a7cde26b6d5ea395a7352e85b4c58f026">RIPNG_UPDATE_EVENT</a>, 0);
<a name="l01485"></a>01485 
<a name="l01486"></a>01486   <span class="keywordflow">return</span> 0;
<a name="l01487"></a>01487 }
<a name="l01488"></a>01488 
<a name="l01489"></a>01489 <span class="comment">/* Triggered update interval timer. */</span>
<a name="l01490"></a>01490 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l01491"></a><a class="code" href="ripngd_8c.html#ad767831f2f0da4f9ec266ce3f74ff0d1">01491</a> <a class="code" href="ripngd_8c.html#ad767831f2f0da4f9ec266ce3f74ff0d1">ripng_triggered_interval</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>)
<a name="l01492"></a>01492 {
<a name="l01493"></a>01493   ripng-&gt;<a class="code" href="structripng.html#a97619acc0996741fbad22b0ac1684cc5">t_triggered_interval</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01494"></a>01494 
<a name="l01495"></a>01495   <span class="keywordflow">if</span> (ripng-&gt;<a class="code" href="structripng.html#a442a4c7c0bfa3a1d781e3f8d227b78c7">trigger</a>)
<a name="l01496"></a>01496     {
<a name="l01497"></a>01497       ripng-&gt;<a class="code" href="structripng.html#a442a4c7c0bfa3a1d781e3f8d227b78c7">trigger</a> = 0;
<a name="l01498"></a>01498       <a class="code" href="ripngd_8c.html#aade04913dcd50154f3a16346c673f01e">ripng_triggered_update</a> (t);
<a name="l01499"></a>01499     }
<a name="l01500"></a>01500   <span class="keywordflow">return</span> 0;
<a name="l01501"></a>01501 }     
<a name="l01502"></a>01502 
<a name="l01503"></a>01503 <span class="comment">/* Execute triggered update. */</span>
<a name="l01504"></a>01504 <span class="keywordtype">int</span>
<a name="l01505"></a><a class="code" href="ripngd_8c.html#aade04913dcd50154f3a16346c673f01e">01505</a> <a class="code" href="ripngd_8c.html#aade04913dcd50154f3a16346c673f01e">ripng_triggered_update</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>)
<a name="l01506"></a>01506 {
<a name="l01507"></a>01507   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l01508"></a>01508   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l01509"></a>01509   <span class="keyword">struct </span><a class="code" href="structripng__interface.html">ripng_interface</a> *ri;
<a name="l01510"></a>01510   <span class="keywordtype">int</span> <a class="code" href="isis__circuit_8c.html#a900b5f9651c07bafd5d81cc876b93885">interval</a>;
<a name="l01511"></a>01511 
<a name="l01512"></a>01512   ripng-&gt;<a class="code" href="structripng.html#a68b42a2e038716d0c3d226aa04fc056d">t_triggered_update</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01513"></a>01513 
<a name="l01514"></a>01514   <span class="comment">/* Cancel interval timer. */</span>
<a name="l01515"></a>01515   <span class="keywordflow">if</span> (ripng-&gt;<a class="code" href="structripng.html#a97619acc0996741fbad22b0ac1684cc5">t_triggered_interval</a>)
<a name="l01516"></a>01516     {
<a name="l01517"></a>01517       <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (ripng-&gt;<a class="code" href="structripng.html#a97619acc0996741fbad22b0ac1684cc5">t_triggered_interval</a>);
<a name="l01518"></a>01518       ripng-&gt;<a class="code" href="structripng.html#a97619acc0996741fbad22b0ac1684cc5">t_triggered_interval</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01519"></a>01519     }
<a name="l01520"></a>01520   ripng-&gt;<a class="code" href="structripng.html#a442a4c7c0bfa3a1d781e3f8d227b78c7">trigger</a> = 0;
<a name="l01521"></a>01521 
<a name="l01522"></a>01522   <span class="comment">/* Logging triggered update. */</span>
<a name="l01523"></a>01523   <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a392e0383d4e00540ae5df2950459a02b">IS_RIPNG_DEBUG_EVENT</a>)
<a name="l01524"></a>01524     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;RIPng triggered update!&quot;</span>);
<a name="l01525"></a>01525 
<a name="l01526"></a>01526   <span class="comment">/* Split Horizon processing is done when generating triggered</span>
<a name="l01527"></a>01527 <span class="comment">     updates as well as normal updates (see section 2.6). */</span>
<a name="l01528"></a>01528   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="if_8c.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a>, node, ifp))
<a name="l01529"></a>01529     {
<a name="l01530"></a>01530       ri = ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l01531"></a>01531 
<a name="l01532"></a>01532       <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a8c30d3c9709c67544befed76b7260267">if_is_loopback</a> (ifp) || ! <a class="code" href="if_8c.html#ade77fc67f30030f539906dad43c239ab">if_is_up</a> (ifp))
<a name="l01533"></a>01533     <span class="keywordflow">continue</span>;
<a name="l01534"></a>01534 
<a name="l01535"></a>01535       <span class="keywordflow">if</span> (! ri-&gt;<a class="code" href="structripng__interface.html#abd30652e25c22eca7261479d51734961">running</a>)
<a name="l01536"></a>01536     <span class="keywordflow">continue</span>;
<a name="l01537"></a>01537 
<a name="l01538"></a>01538       <span class="comment">/* When passive interface is specified, suppress announce to the</span>
<a name="l01539"></a>01539 <span class="comment">         interface. */</span>
<a name="l01540"></a>01540       <span class="keywordflow">if</span> (ri-&gt;<a class="code" href="structripng__interface.html#a2f7b4c147da99def4faea5bca0f88c88">passive</a>)
<a name="l01541"></a>01541     <span class="keywordflow">continue</span>;
<a name="l01542"></a>01542 
<a name="l01543"></a>01543       <a class="code" href="ripngd_8c.html#a3f72267312fe0a97d08b67ba961d6658">ripng_output_process</a> (ifp, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <a class="code" href="ripngd_8c.html#aa618c4d8c29ef4efe6f10c741fb1f47aae4415bb34123e19eee8a373f99cfb8a5">ripng_changed_route</a>);
<a name="l01544"></a>01544     }
<a name="l01545"></a>01545 
<a name="l01546"></a>01546   <span class="comment">/* Once all of the triggered updates have been generated, the route</span>
<a name="l01547"></a>01547 <span class="comment">     change flags should be cleared. */</span>
<a name="l01548"></a>01548   <a class="code" href="ripngd_8c.html#a42c420e9fcc21cfbcc496b1ba2a97d0d">ripng_clear_changed_flag</a> ();
<a name="l01549"></a>01549 
<a name="l01550"></a>01550   <span class="comment">/* After a triggered update is sent, a timer should be set for a</span>
<a name="l01551"></a>01551 <span class="comment">     random interval between 1 and 5 seconds.  If other changes that</span>
<a name="l01552"></a>01552 <span class="comment">     would trigger updates occur before the timer expires, a single</span>
<a name="l01553"></a>01553 <span class="comment">     update is triggered when the timer expires. */</span>
<a name="l01554"></a>01554   interval = (random () % 5) + 1;
<a name="l01555"></a>01555 
<a name="l01556"></a>01556   ripng-&gt;<a class="code" href="structripng.html#a97619acc0996741fbad22b0ac1684cc5">t_triggered_interval</a> = 
<a name="l01557"></a>01557     <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ripngd_8c.html#ad767831f2f0da4f9ec266ce3f74ff0d1">ripng_triggered_interval</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, interval);
<a name="l01558"></a>01558 
<a name="l01559"></a>01559   <span class="keywordflow">return</span> 0;
<a name="l01560"></a>01560 }
<a name="l01561"></a>01561 
<a name="l01562"></a>01562 <span class="comment">/* Write routing table entry to the stream and return next index of</span>
<a name="l01563"></a>01563 <span class="comment">   the routing table entry in the stream. */</span>
<a name="l01564"></a>01564 <span class="keywordtype">int</span>
<a name="l01565"></a><a class="code" href="ripngd_8h.html#a2df121efc44d079712a814a74e304fb9">01565</a> <a class="code" href="ripngd_8c.html#a2df121efc44d079712a814a74e304fb9">ripng_write_rte</a> (<span class="keywordtype">int</span> <a class="code" href="bgp__open_8h.html#ab4570498c4316aa5f7b4852c778b3320">num</a>, <span class="keyword">struct</span> <a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>, <span class="keyword">struct</span> prefix_ipv6 *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>,
<a name="l01566"></a>01566          <span class="keyword">struct</span> in6_addr *<a class="code" href="structnexthop.html">nexthop</a>, u_int16_t tag, u_char <a class="code" href="structmetric.html">metric</a>)
<a name="l01567"></a>01567 {
<a name="l01568"></a>01568   <span class="comment">/* RIPng packet header. */</span>
<a name="l01569"></a>01569   <span class="keywordflow">if</span> (num == 0)
<a name="l01570"></a>01570     {
<a name="l01571"></a>01571       <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, <a class="code" href="ripngd_8h.html#aa5ec5496ce7fc62a57b04272d2ec5756">RIPNG_RESPONSE</a>);
<a name="l01572"></a>01572       <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, <a class="code" href="ripngd_8h.html#a281d5633e29e16b00b52e0391ae6cd6c">RIPNG_V1</a>);
<a name="l01573"></a>01573       <a class="code" href="stream_8c.html#a03459a9331e0333d2b396636eca3c2e4">stream_putw</a> (s, 0);
<a name="l01574"></a>01574     }
<a name="l01575"></a>01575 
<a name="l01576"></a>01576   <span class="comment">/* Write routing table entry. */</span>
<a name="l01577"></a>01577   <span class="keywordflow">if</span> (!nexthop)
<a name="l01578"></a>01578     <a class="code" href="stream_8c.html#a39121b19ef0be09e9a5598a1ea1371c0">stream_write</a> (s, (u_char *) &amp;p-&gt;prefix, sizeof (<span class="keyword">struct</span> in6_addr));
<a name="l01579"></a>01579   <span class="keywordflow">else</span>
<a name="l01580"></a>01580     <a class="code" href="stream_8c.html#a39121b19ef0be09e9a5598a1ea1371c0">stream_write</a> (s, (u_char *) nexthop, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> in6_addr));
<a name="l01581"></a>01581   <a class="code" href="stream_8c.html#a03459a9331e0333d2b396636eca3c2e4">stream_putw</a> (s, tag);
<a name="l01582"></a>01582   <span class="keywordflow">if</span> (p)
<a name="l01583"></a>01583     <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, p-&gt;prefixlen);
<a name="l01584"></a>01584   <span class="keywordflow">else</span>
<a name="l01585"></a>01585     <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, 0);
<a name="l01586"></a>01586   <a class="code" href="stream_8c.html#a8a00e56e71aed4753ee4a21f8dd2aa65">stream_putc</a> (s, metric);
<a name="l01587"></a>01587 
<a name="l01588"></a>01588   <span class="keywordflow">return</span> ++<a class="code" href="bgp__open_8h.html#ab4570498c4316aa5f7b4852c778b3320">num</a>;
<a name="l01589"></a>01589 }
<a name="l01590"></a>01590 
<a name="l01591"></a>01591 <span class="comment">/* Send RESPONSE message to specified destination. */</span>
<a name="l01592"></a>01592 <span class="keywordtype">void</span>
<a name="l01593"></a><a class="code" href="ripngd_8c.html#a3f72267312fe0a97d08b67ba961d6658">01593</a> <a class="code" href="ripngd_8c.html#a3f72267312fe0a97d08b67ba961d6658">ripng_output_process</a> (<span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp, <span class="keyword">struct</span> sockaddr_in6 *to,
<a name="l01594"></a>01594               <span class="keywordtype">int</span> route_type)
<a name="l01595"></a>01595 {
<a name="l01596"></a>01596   <span class="keywordtype">int</span> ret;
<a name="l01597"></a>01597   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rp;
<a name="l01598"></a>01598   <span class="keyword">struct </span><a class="code" href="structripng__info.html">ripng_info</a> *rinfo;
<a name="l01599"></a>01599   <span class="keyword">struct </span><a class="code" href="structripng__interface.html">ripng_interface</a> *ri;
<a name="l01600"></a>01600   <span class="keyword">struct </span><a class="code" href="structripng__aggregate.html">ripng_aggregate</a> *aggregate;
<a name="l01601"></a>01601   <span class="keyword">struct </span>prefix_ipv6 *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
<a name="l01602"></a>01602   <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> * ripng_rte_list;
<a name="l01603"></a>01603 
<a name="l01604"></a>01604   <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a392e0383d4e00540ae5df2950459a02b">IS_RIPNG_DEBUG_EVENT</a>) {
<a name="l01605"></a>01605     <span class="keywordflow">if</span> (to)
<a name="l01606"></a>01606       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;RIPng update routes to neighbor %s&quot;</span>,
<a name="l01607"></a>01607                  inet6_ntoa(to-&gt;sin6_addr));
<a name="l01608"></a>01608     <span class="keywordflow">else</span>
<a name="l01609"></a>01609       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;RIPng update routes on interface %s&quot;</span>, ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
<a name="l01610"></a>01610   }
<a name="l01611"></a>01611 
<a name="l01612"></a>01612   <span class="comment">/* Get RIPng interface. */</span>
<a name="l01613"></a>01613   ri = ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l01614"></a>01614  
<a name="l01615"></a>01615   ripng_rte_list = <a class="code" href="ripng__nexthop_8c.html#a2bbaf1fdfe59c0ed137ef6c1a1f54ea4">ripng_rte_new</a>();
<a name="l01616"></a>01616  
<a name="l01617"></a>01617   <span class="keywordflow">for</span> (rp = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (ripng-&gt;<a class="code" href="structripng.html#a1bf596b69c5b442145eb509611ad6dc5">table</a>); rp; rp = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rp))
<a name="l01618"></a>01618     {
<a name="l01619"></a>01619       <span class="keywordflow">if</span> ((rinfo = rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; rinfo-&gt;<a class="code" href="structripng__info.html#ab96be2bd11a5979b955ec035db0a8ba5">suppress</a> == 0)
<a name="l01620"></a>01620     {
<a name="l01621"></a>01621       <span class="comment">/* If no route-map are applied, the RTE will be these following</span>
<a name="l01622"></a>01622 <span class="comment">       * informations.</span>
<a name="l01623"></a>01623 <span class="comment">       */</span>
<a name="l01624"></a>01624       p = (<span class="keyword">struct </span>prefix_ipv6 *) &amp;rp-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>;
<a name="l01625"></a>01625       rinfo-&gt;<a class="code" href="structripng__info.html#a9b63b1936f6d6d977dae20ca446f6744">metric_out</a> = rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a>;
<a name="l01626"></a>01626       rinfo-&gt;<a class="code" href="structripng__info.html#a53b9c80709add8b88d8edc0a67a2129b">tag_out</a>    = rinfo-&gt;<a class="code" href="structripng__info.html#a782b26176fb3c32210c0745ae2f5fdb8">tag</a>;
<a name="l01627"></a>01627       memset(&amp;rinfo-&gt;<a class="code" href="structripng__info.html#ab972f1dace5311aecfba2f2a8b6f82d9">nexthop_out</a>, 0, <span class="keyword">sizeof</span>(rinfo-&gt;<a class="code" href="structripng__info.html#ab972f1dace5311aecfba2f2a8b6f82d9">nexthop_out</a>));
<a name="l01628"></a>01628       <span class="comment">/* In order to avoid some local loops,</span>
<a name="l01629"></a>01629 <span class="comment">       * if the RIPng route has a nexthop via this interface, keep the nexthop,</span>
<a name="l01630"></a>01630 <span class="comment">       * otherwise set it to 0. The nexthop should not be propagated</span>
<a name="l01631"></a>01631 <span class="comment">       * beyond the local broadcast/multicast area in order</span>
<a name="l01632"></a>01632 <span class="comment">       * to avoid an IGP multi-level recursive look-up.</span>
<a name="l01633"></a>01633 <span class="comment">       */</span>
<a name="l01634"></a>01634       <span class="keywordflow">if</span> (rinfo-&gt;<a class="code" href="structripng__info.html#a5269ffb6b1daf9eddae7ea92d271d5d6">ifindex</a> == ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>)
<a name="l01635"></a>01635         rinfo-&gt;<a class="code" href="structripng__info.html#ab972f1dace5311aecfba2f2a8b6f82d9">nexthop_out</a> = rinfo-&gt;<a class="code" href="structripng__info.html#a9e4a05b7f0911b7d3805b1c0fa2c45bf">nexthop</a>;
<a name="l01636"></a>01636 
<a name="l01637"></a>01637       <span class="comment">/* Apply output filters. */</span>
<a name="l01638"></a>01638       ret = <a class="code" href="ripngd_8c.html#a3c5328e302972ace7df548c57ca8d2a9">ripng_outgoing_filter</a> (p, ri);
<a name="l01639"></a>01639       <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l01640"></a>01640         <span class="keywordflow">continue</span>;
<a name="l01641"></a>01641 
<a name="l01642"></a>01642       <span class="comment">/* Changed route only output. */</span>
<a name="l01643"></a>01643       <span class="keywordflow">if</span> (route_type == <a class="code" href="ripngd_8c.html#aa618c4d8c29ef4efe6f10c741fb1f47aae4415bb34123e19eee8a373f99cfb8a5">ripng_changed_route</a> &amp;&amp;
<a name="l01644"></a>01644           (! (rinfo-&gt;<a class="code" href="structripng__info.html#adc51f81d4cf365159e1aea265869f095">flags</a> &amp; <a class="code" href="ripngd_8h.html#ae2ac88c46de4d1bc9f2b01e122049b57">RIPNG_RTF_CHANGED</a>)))
<a name="l01645"></a>01645         <span class="keywordflow">continue</span>;
<a name="l01646"></a>01646 
<a name="l01647"></a>01647       <span class="comment">/* Split horizon. */</span>
<a name="l01648"></a>01648       <span class="keywordflow">if</span> (ri-&gt;<a class="code" href="structripng__interface.html#a498ba3bde959c9c42dfcdff82d2de819">split_horizon</a> == <a class="code" href="ripngd_8h.html#afbda8c496aa1c117b3d787e59a537311a355c2e8568692c3915e3cb95c45b4cfd">RIPNG_SPLIT_HORIZON</a>)
<a name="l01649"></a>01649       {
<a name="l01650"></a>01650         <span class="comment">/* We perform split horizon for RIPng routes. */</span>
<a name="l01651"></a>01651         <span class="keywordflow">if</span> ((rinfo-&gt;<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a> == <a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>) &amp;&amp;
<a name="l01652"></a>01652         rinfo-&gt;<a class="code" href="structripng__info.html#a5269ffb6b1daf9eddae7ea92d271d5d6">ifindex</a> == ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>)
<a name="l01653"></a>01653           <span class="keywordflow">continue</span>;
<a name="l01654"></a>01654       }
<a name="l01655"></a>01655 
<a name="l01656"></a>01656       <span class="comment">/* Preparation for route-map. */</span>
<a name="l01657"></a>01657       rinfo-&gt;<a class="code" href="structripng__info.html#a95c18301e852be3021d63d9f91750763">metric_set</a> = 0;
<a name="l01658"></a>01658       <span class="comment">/* nexthop_out,</span>
<a name="l01659"></a>01659 <span class="comment">       * metric_out</span>
<a name="l01660"></a>01660 <span class="comment">       * and tag_out are already initialized.</span>
<a name="l01661"></a>01661 <span class="comment">       */</span>
<a name="l01662"></a>01662 
<a name="l01663"></a>01663       <span class="comment">/* Interface route-map */</span>
<a name="l01664"></a>01664       <span class="keywordflow">if</span> (ri-&gt;<a class="code" href="structripng__interface.html#a5042d9aa0ee3dc57149209d17b33307c">routemap</a>[<a class="code" href="ripngd_8h.html#a8de1142dbc70369804d0b971bf2c4543">RIPNG_FILTER_OUT</a>])
<a name="l01665"></a>01665         {
<a name="l01666"></a>01666           <span class="keywordtype">int</span> ret;
<a name="l01667"></a>01667 
<a name="l01668"></a>01668           ret = <a class="code" href="routemap_8c.html#a3372553a024332702cfd603e1f4c08d6">route_map_apply</a> (ri-&gt;<a class="code" href="structripng__interface.html#a5042d9aa0ee3dc57149209d17b33307c">routemap</a>[<a class="code" href="ripngd_8h.html#a8de1142dbc70369804d0b971bf2c4543">RIPNG_FILTER_OUT</a>], 
<a name="l01669"></a>01669                      (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) p, <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370a3aa81322d89db5d5821c23c0fe7881bd">RMAP_RIPNG</a>, 
<a name="l01670"></a>01670                      rinfo);
<a name="l01671"></a>01671 
<a name="l01672"></a>01672           <span class="keywordflow">if</span> (ret == <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516aa0f40f0a91e43bfe7131839fe179ac64">RMAP_DENYMATCH</a>)
<a name="l01673"></a>01673         {
<a name="l01674"></a>01674           <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a797e548e17ca4673c39625a1fc8b93ae">IS_RIPNG_DEBUG_PACKET</a>)
<a name="l01675"></a>01675             <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;RIPng %s/%d is filtered by route-map out&quot;</span>,
<a name="l01676"></a>01676                    inet6_ntoa (p-&gt;<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>), p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
<a name="l01677"></a>01677           <span class="keywordflow">continue</span>;
<a name="l01678"></a>01678         }
<a name="l01679"></a>01679 
<a name="l01680"></a>01680         }
<a name="l01681"></a>01681 
<a name="l01682"></a>01682       <span class="comment">/* Redistribute route-map. */</span>
<a name="l01683"></a>01683       <span class="keywordflow">if</span> (ripng-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[rinfo-&gt;<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a>].<a class="code" href="structripng.html#ac5d479513619aac458e3ae04c0814632">name</a>)
<a name="l01684"></a>01684         {
<a name="l01685"></a>01685           <span class="keywordtype">int</span> ret;
<a name="l01686"></a>01686 
<a name="l01687"></a>01687           ret = <a class="code" href="routemap_8c.html#a3372553a024332702cfd603e1f4c08d6">route_map_apply</a> (ripng-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[rinfo-&gt;<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a>].<a class="code" href="structripng.html#a98512a1190c2b92964d03d0ef0935766">map</a>,
<a name="l01688"></a>01688                      (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) p, <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370a3aa81322d89db5d5821c23c0fe7881bd">RMAP_RIPNG</a>,
<a name="l01689"></a>01689                      rinfo);
<a name="l01690"></a>01690 
<a name="l01691"></a>01691           <span class="keywordflow">if</span> (ret == <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516aa0f40f0a91e43bfe7131839fe179ac64">RMAP_DENYMATCH</a>)
<a name="l01692"></a>01692         {
<a name="l01693"></a>01693           <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a797e548e17ca4673c39625a1fc8b93ae">IS_RIPNG_DEBUG_PACKET</a>)
<a name="l01694"></a>01694             <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;RIPng %s/%d is filtered by route-map&quot;</span>,
<a name="l01695"></a>01695                    inet6_ntoa (p-&gt;<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>), p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
<a name="l01696"></a>01696           <span class="keywordflow">continue</span>;
<a name="l01697"></a>01697         }
<a name="l01698"></a>01698         }
<a name="l01699"></a>01699 
<a name="l01700"></a>01700       <span class="comment">/* When the route-map does not set metric. */</span>
<a name="l01701"></a>01701       <span class="keywordflow">if</span> (! rinfo-&gt;<a class="code" href="structripng__info.html#a95c18301e852be3021d63d9f91750763">metric_set</a>)
<a name="l01702"></a>01702         {
<a name="l01703"></a>01703           <span class="comment">/* If the redistribute metric is set. */</span>
<a name="l01704"></a>01704           <span class="keywordflow">if</span> (ripng-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[rinfo-&gt;<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a>].<a class="code" href="structripng.html#afe23934beb3ecee523a32f3aa13ec45a">metric_config</a>
<a name="l01705"></a>01705           &amp;&amp; rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a> != <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>)
<a name="l01706"></a>01706         {
<a name="l01707"></a>01707           rinfo-&gt;<a class="code" href="structripng__info.html#a9b63b1936f6d6d977dae20ca446f6744">metric_out</a> = ripng-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[rinfo-&gt;<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a>].<a class="code" href="structripng.html#a88741fa8a6afd1aef3936449d7e4709f">metric</a>;
<a name="l01708"></a>01708         }
<a name="l01709"></a>01709           <span class="keywordflow">else</span>
<a name="l01710"></a>01710         {
<a name="l01711"></a>01711           <span class="comment">/* If the route is not connected or localy generated</span>
<a name="l01712"></a>01712 <span class="comment">             one, use default-metric value */</span>
<a name="l01713"></a>01713           <span class="keywordflow">if</span> (rinfo-&gt;<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a> != <a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>
<a name="l01714"></a>01714               &amp;&amp; rinfo-&gt;<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a> != <a class="code" href="zebra_8h.html#aee45d53cdac2bd7fe4b2ce021c9d1b30">ZEBRA_ROUTE_CONNECT</a>
<a name="l01715"></a>01715               &amp;&amp; rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a> != <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>)
<a name="l01716"></a>01716             rinfo-&gt;<a class="code" href="structripng__info.html#a9b63b1936f6d6d977dae20ca446f6744">metric_out</a> = ripng-&gt;<a class="code" href="structripng.html#ae47d271724aadc1dfde66e4c06829748">default_metric</a>;
<a name="l01717"></a>01717         }
<a name="l01718"></a>01718         }
<a name="l01719"></a>01719 
<a name="l01720"></a>01720           <span class="comment">/* Apply offset-list */</span>
<a name="l01721"></a>01721       <span class="keywordflow">if</span> (rinfo-&gt;<a class="code" href="structripng__info.html#a9b63b1936f6d6d977dae20ca446f6744">metric_out</a> != <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>)
<a name="l01722"></a>01722             <a class="code" href="ripng__offset_8c.html#a3b23f4092924e98e89d9398c5467b779">ripng_offset_list_apply_out</a> (p, ifp, &amp;rinfo-&gt;<a class="code" href="structripng__info.html#a9b63b1936f6d6d977dae20ca446f6744">metric_out</a>);
<a name="l01723"></a>01723 
<a name="l01724"></a>01724           <span class="keywordflow">if</span> (rinfo-&gt;<a class="code" href="structripng__info.html#a9b63b1936f6d6d977dae20ca446f6744">metric_out</a> &gt; <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>)
<a name="l01725"></a>01725             rinfo-&gt;<a class="code" href="structripng__info.html#a9b63b1936f6d6d977dae20ca446f6744">metric_out</a> = <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>;
<a name="l01726"></a>01726 
<a name="l01727"></a>01727       <span class="comment">/* Perform split-horizon with poisoned reverse </span>
<a name="l01728"></a>01728 <span class="comment">       * for RIPng routes.</span>
<a name="l01729"></a>01729 <span class="comment">       **/</span>
<a name="l01730"></a>01730       <span class="keywordflow">if</span> (ri-&gt;<a class="code" href="structripng__interface.html#a498ba3bde959c9c42dfcdff82d2de819">split_horizon</a> == <a class="code" href="ripngd_8h.html#afbda8c496aa1c117b3d787e59a537311abdfff72e7fe4fc8df6847986bc773486">RIPNG_SPLIT_HORIZON_POISONED_REVERSE</a>) {
<a name="l01731"></a>01731         <span class="keywordflow">if</span> ((rinfo-&gt;<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a> == <a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>) &amp;&amp;
<a name="l01732"></a>01732              rinfo-&gt;<a class="code" href="structripng__info.html#a5269ffb6b1daf9eddae7ea92d271d5d6">ifindex</a> == ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>)
<a name="l01733"></a>01733              rinfo-&gt;<a class="code" href="structripng__info.html#a9b63b1936f6d6d977dae20ca446f6744">metric_out</a> = <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>;
<a name="l01734"></a>01734       }
<a name="l01735"></a>01735 
<a name="l01736"></a>01736       <span class="comment">/* Add RTE to the list */</span>
<a name="l01737"></a>01737       <a class="code" href="ripng__nexthop_8c.html#a95e799318ab5a7a4ee80a44e1ab32276">ripng_rte_add</a>(ripng_rte_list, p, rinfo, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l01738"></a>01738     }
<a name="l01739"></a>01739 
<a name="l01740"></a>01740       <span class="comment">/* Process the aggregated RTE entry */</span>
<a name="l01741"></a>01741       <span class="keywordflow">if</span> ((aggregate = rp-&gt;<a class="code" href="structroute__node.html#ae9cc08e4c96aa25870fc6e23708228c3">aggregate</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; 
<a name="l01742"></a>01742       aggregate-&gt;<a class="code" href="structripng__aggregate.html#a29ebb0e110a9d3d79ba4ffd5014ed945">count</a> &gt; 0 &amp;&amp; 
<a name="l01743"></a>01743       aggregate-&gt;<a class="code" href="structripng__aggregate.html#abd263ff776074a69e08893c9721ab27d">suppress</a> == 0)
<a name="l01744"></a>01744     {
<a name="l01745"></a>01745       <span class="comment">/* If no route-map are applied, the RTE will be these following</span>
<a name="l01746"></a>01746 <span class="comment">       * informations.</span>
<a name="l01747"></a>01747 <span class="comment">       */</span>
<a name="l01748"></a>01748       p = (<span class="keyword">struct </span>prefix_ipv6 *) &amp;rp-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>;
<a name="l01749"></a>01749       aggregate-&gt;<a class="code" href="structripng__aggregate.html#a24e17b1dd1693dbe981e5a6c63a5145e">metric_set</a> = 0;
<a name="l01750"></a>01750       aggregate-&gt;<a class="code" href="structripng__aggregate.html#a414dce6b6361399c8e2088b086ec59dc">metric_out</a> = aggregate-&gt;<a class="code" href="structripng__aggregate.html#a5f665fbc1f62ce317ebbe87a15f1f78a">metric</a>;
<a name="l01751"></a>01751       aggregate-&gt;<a class="code" href="structripng__aggregate.html#a8e1b46892c6bad6c46b719b9bf0dad9f">tag_out</a>    = aggregate-&gt;<a class="code" href="structripng__aggregate.html#a7564ac741b9ec32a68a21b63b6142c92">tag</a>;
<a name="l01752"></a>01752       memset(&amp;aggregate-&gt;<a class="code" href="structripng__aggregate.html#a7d57cc6adb8f10499f38dee067aec928">nexthop_out</a>, 0, <span class="keyword">sizeof</span>(aggregate-&gt;<a class="code" href="structripng__aggregate.html#a7d57cc6adb8f10499f38dee067aec928">nexthop_out</a>));
<a name="l01753"></a>01753 
<a name="l01754"></a>01754       <span class="comment">/* Apply output filters.*/</span>
<a name="l01755"></a>01755       ret = <a class="code" href="ripngd_8c.html#a3c5328e302972ace7df548c57ca8d2a9">ripng_outgoing_filter</a> (p, ri);
<a name="l01756"></a>01756       <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l01757"></a>01757         <span class="keywordflow">continue</span>;
<a name="l01758"></a>01758 
<a name="l01759"></a>01759       <span class="comment">/* Interface route-map */</span>
<a name="l01760"></a>01760       <span class="keywordflow">if</span> (ri-&gt;<a class="code" href="structripng__interface.html#a5042d9aa0ee3dc57149209d17b33307c">routemap</a>[<a class="code" href="ripngd_8h.html#a8de1142dbc70369804d0b971bf2c4543">RIPNG_FILTER_OUT</a>])
<a name="l01761"></a>01761         {
<a name="l01762"></a>01762           <span class="keywordtype">int</span> ret;
<a name="l01763"></a>01763           <span class="keyword">struct </span><a class="code" href="structripng__info.html">ripng_info</a> newinfo;
<a name="l01764"></a>01764 
<a name="l01765"></a>01765           <span class="comment">/* let&#39;s cast the aggregate structure to ripng_info */</span>
<a name="l01766"></a>01766           memset (&amp;newinfo, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structripng__info.html">ripng_info</a>));
<a name="l01767"></a>01767           <span class="comment">/* the nexthop is :: */</span>
<a name="l01768"></a>01768           newinfo.<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a> = aggregate-&gt;<a class="code" href="structripng__aggregate.html#a5f665fbc1f62ce317ebbe87a15f1f78a">metric</a>;
<a name="l01769"></a>01769           newinfo.<a class="code" href="structripng__info.html#a9b63b1936f6d6d977dae20ca446f6744">metric_out</a> = aggregate-&gt;<a class="code" href="structripng__aggregate.html#a414dce6b6361399c8e2088b086ec59dc">metric_out</a>;
<a name="l01770"></a>01770           newinfo.<a class="code" href="structripng__info.html#a782b26176fb3c32210c0745ae2f5fdb8">tag</a> = aggregate-&gt;<a class="code" href="structripng__aggregate.html#a7564ac741b9ec32a68a21b63b6142c92">tag</a>;
<a name="l01771"></a>01771           newinfo.<a class="code" href="structripng__info.html#a53b9c80709add8b88d8edc0a67a2129b">tag_out</a> = aggregate-&gt;<a class="code" href="structripng__aggregate.html#a8e1b46892c6bad6c46b719b9bf0dad9f">tag_out</a>;
<a name="l01772"></a>01772 
<a name="l01773"></a>01773           ret = <a class="code" href="routemap_8c.html#a3372553a024332702cfd603e1f4c08d6">route_map_apply</a> (ri-&gt;<a class="code" href="structripng__interface.html#a5042d9aa0ee3dc57149209d17b33307c">routemap</a>[<a class="code" href="ripngd_8h.html#a8de1142dbc70369804d0b971bf2c4543">RIPNG_FILTER_OUT</a>], 
<a name="l01774"></a>01774                      (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) p, <a class="code" href="routemap_8h.html#ae21439463f873ce0ce1556c9d6fa7370a3aa81322d89db5d5821c23c0fe7881bd">RMAP_RIPNG</a>, 
<a name="l01775"></a>01775                      &amp;newinfo);
<a name="l01776"></a>01776 
<a name="l01777"></a>01777           <span class="keywordflow">if</span> (ret == <a class="code" href="routemap_8h.html#afd7345bfd662f1e7c77f0be351cd1516aa0f40f0a91e43bfe7131839fe179ac64">RMAP_DENYMATCH</a>)
<a name="l01778"></a>01778         {
<a name="l01779"></a>01779           <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a797e548e17ca4673c39625a1fc8b93ae">IS_RIPNG_DEBUG_PACKET</a>)
<a name="l01780"></a>01780             <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;RIPng %s/%d is filtered by route-map out&quot;</span>,
<a name="l01781"></a>01781                    inet6_ntoa (p-&gt;<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>), p-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>);
<a name="l01782"></a>01782           <span class="keywordflow">continue</span>;
<a name="l01783"></a>01783         }
<a name="l01784"></a>01784 
<a name="l01785"></a>01785           aggregate-&gt;<a class="code" href="structripng__aggregate.html#a414dce6b6361399c8e2088b086ec59dc">metric_out</a> = newinfo.<a class="code" href="structripng__info.html#a9b63b1936f6d6d977dae20ca446f6744">metric_out</a>;
<a name="l01786"></a>01786           aggregate-&gt;<a class="code" href="structripng__aggregate.html#a8e1b46892c6bad6c46b719b9bf0dad9f">tag_out</a> = newinfo.<a class="code" href="structripng__info.html#a53b9c80709add8b88d8edc0a67a2129b">tag_out</a>;
<a name="l01787"></a>01787           <span class="keywordflow">if</span> (IN6_IS_ADDR_LINKLOCAL(&amp;newinfo.<a class="code" href="structripng__info.html#ab972f1dace5311aecfba2f2a8b6f82d9">nexthop_out</a>))
<a name="l01788"></a>01788         aggregate-&gt;<a class="code" href="structripng__aggregate.html#a7d57cc6adb8f10499f38dee067aec928">nexthop_out</a> = newinfo.<a class="code" href="structripng__info.html#ab972f1dace5311aecfba2f2a8b6f82d9">nexthop_out</a>;
<a name="l01789"></a>01789         }
<a name="l01790"></a>01790 
<a name="l01791"></a>01791       <span class="comment">/* There is no redistribute routemap for the aggregated RTE */</span>
<a name="l01792"></a>01792 
<a name="l01793"></a>01793       <span class="comment">/* Changed route only output. */</span>
<a name="l01794"></a>01794       <span class="comment">/* XXX, vincent, in order to increase time convergence,</span>
<a name="l01795"></a>01795 <span class="comment">       * it should be announced if a child has changed.</span>
<a name="l01796"></a>01796 <span class="comment">       */</span>
<a name="l01797"></a>01797       <span class="keywordflow">if</span> (route_type == <a class="code" href="ripngd_8c.html#aa618c4d8c29ef4efe6f10c741fb1f47aae4415bb34123e19eee8a373f99cfb8a5">ripng_changed_route</a>)
<a name="l01798"></a>01798         <span class="keywordflow">continue</span>;
<a name="l01799"></a>01799 
<a name="l01800"></a>01800       <span class="comment">/* Apply offset-list */</span>
<a name="l01801"></a>01801       <span class="keywordflow">if</span> (aggregate-&gt;<a class="code" href="structripng__aggregate.html#a414dce6b6361399c8e2088b086ec59dc">metric_out</a> != <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>)
<a name="l01802"></a>01802         <a class="code" href="ripng__offset_8c.html#a3b23f4092924e98e89d9398c5467b779">ripng_offset_list_apply_out</a> (p, ifp, &amp;aggregate-&gt;<a class="code" href="structripng__aggregate.html#a414dce6b6361399c8e2088b086ec59dc">metric_out</a>);
<a name="l01803"></a>01803 
<a name="l01804"></a>01804       <span class="keywordflow">if</span> (aggregate-&gt;<a class="code" href="structripng__aggregate.html#a414dce6b6361399c8e2088b086ec59dc">metric_out</a> &gt; <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>)
<a name="l01805"></a>01805         aggregate-&gt;<a class="code" href="structripng__aggregate.html#a414dce6b6361399c8e2088b086ec59dc">metric_out</a> = <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>;
<a name="l01806"></a>01806 
<a name="l01807"></a>01807       <span class="comment">/* Add RTE to the list */</span>
<a name="l01808"></a>01808       <a class="code" href="ripng__nexthop_8c.html#a95e799318ab5a7a4ee80a44e1ab32276">ripng_rte_add</a>(ripng_rte_list, p, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, aggregate);
<a name="l01809"></a>01809     }
<a name="l01810"></a>01810 
<a name="l01811"></a>01811     }
<a name="l01812"></a>01812 
<a name="l01813"></a>01813   <span class="comment">/* Flush the list */</span>
<a name="l01814"></a>01814   <a class="code" href="ripng__nexthop_8c.html#ae916e82287005ce5a64bc1ebf39fa810">ripng_rte_send</a>(ripng_rte_list, ifp, to);
<a name="l01815"></a>01815   <a class="code" href="ripng__nexthop_8c.html#a4cb0a5161e0b2e9295556de274d609c9">ripng_rte_free</a>(ripng_rte_list);
<a name="l01816"></a>01816 }
<a name="l01817"></a>01817 
<a name="l01818"></a>01818 <span class="comment">/* Create new RIPng instance and set it to global variable. */</span>
<a name="l01819"></a>01819 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l01820"></a><a class="code" href="ripngd_8c.html#aca2c469cbf2a47693f9c22d6728cfb09">01820</a> <a class="code" href="ripngd_8c.html#aca2c469cbf2a47693f9c22d6728cfb09">ripng_create</a> (<span class="keywordtype">void</span>)
<a name="l01821"></a>01821 {
<a name="l01822"></a>01822   <span class="comment">/* ripng should be NULL. */</span>
<a name="l01823"></a>01823   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (ripng == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l01824"></a>01824 
<a name="l01825"></a>01825   <span class="comment">/* Allocaste RIPng instance. */</span>
<a name="l01826"></a>01826   ripng = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167bad97034187d4ff905469ad8d671c1b8e2">MTYPE_RIPNG</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> ripng));
<a name="l01827"></a>01827 
<a name="l01828"></a>01828   <span class="comment">/* Default version and timer values. */</span>
<a name="l01829"></a>01829   ripng-&gt;<a class="code" href="structripng.html#a5876107e16a08687d8d9428a128c657b">version</a> = <a class="code" href="ripngd_8h.html#a281d5633e29e16b00b52e0391ae6cd6c">RIPNG_V1</a>;
<a name="l01830"></a>01830   ripng-&gt;<a class="code" href="structripng.html#a3bf29c57452baca3c5f5fd1d259c6cd2">update_time</a> = <a class="code" href="ripngd_8h.html#ae1b0d25ee668ca5dfc1f897688d376cb">RIPNG_UPDATE_TIMER_DEFAULT</a>;
<a name="l01831"></a>01831   ripng-&gt;<a class="code" href="structripng.html#a1e46af0d5dd1bdd43a29901c70772ab5">timeout_time</a> = <a class="code" href="ripngd_8h.html#aba6555dd87cff9ea814be873c14ce972">RIPNG_TIMEOUT_TIMER_DEFAULT</a>;
<a name="l01832"></a>01832   ripng-&gt;<a class="code" href="structripng.html#a79a6db0c820761917a6d5b19c2383dbd">garbage_time</a> = <a class="code" href="ripngd_8h.html#af5189b18679728b2ffec9a1714950bdf">RIPNG_GARBAGE_TIMER_DEFAULT</a>;
<a name="l01833"></a>01833   ripng-&gt;<a class="code" href="structripng.html#ae47d271724aadc1dfde66e4c06829748">default_metric</a> = <a class="code" href="ripngd_8h.html#a6b9a756a2011a2b42c7ce6203b84ced2">RIPNG_DEFAULT_METRIC_DEFAULT</a>;
<a name="l01834"></a>01834   
<a name="l01835"></a>01835   <span class="comment">/* Make buffer.  */</span>
<a name="l01836"></a>01836   ripng-&gt;<a class="code" href="structripng.html#a2d6cadaef274f6f247afbf55d67cf684">ibuf</a> = <a class="code" href="stream_8c.html#a7117cdad9fa5e5ae633e0cf08d047459">stream_new</a> (<a class="code" href="ripngd_8h.html#ab899e2e565c4cfce969f490a569488d9">RIPNG_MAX_PACKET_SIZE</a> * 5);
<a name="l01837"></a>01837   ripng-&gt;<a class="code" href="structripng.html#a7a37c00ce5964003f19897768bcd61df">obuf</a> = <a class="code" href="stream_8c.html#a7117cdad9fa5e5ae633e0cf08d047459">stream_new</a> (<a class="code" href="ripngd_8h.html#ab899e2e565c4cfce969f490a569488d9">RIPNG_MAX_PACKET_SIZE</a>);
<a name="l01838"></a>01838 
<a name="l01839"></a>01839   <span class="comment">/* Initialize RIPng routig table. */</span>
<a name="l01840"></a>01840   ripng-&gt;<a class="code" href="structripng.html#a1bf596b69c5b442145eb509611ad6dc5">table</a> = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();
<a name="l01841"></a>01841   ripng-&gt;<a class="code" href="structripng.html#ad5d9e06ed4b673e3788475b0fe26483d">route</a> = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();
<a name="l01842"></a>01842   ripng-&gt;<a class="code" href="structripng.html#af4311264fe0c5e48b65a37c4ddd4b1f0">aggregate</a> = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();
<a name="l01843"></a>01843  
<a name="l01844"></a>01844   <span class="comment">/* Make socket. */</span>
<a name="l01845"></a>01845   ripng-&gt;<a class="code" href="structripng.html#a68ed7b98a04fcdefea29cc865bf12918">sock</a> = <a class="code" href="ripngd_8c.html#ab4b62648d39fa134266aa8c8c69a977c">ripng_make_socket</a> ();
<a name="l01846"></a>01846   <span class="keywordflow">if</span> (ripng-&gt;<a class="code" href="structripng.html#a68ed7b98a04fcdefea29cc865bf12918">sock</a> &lt; 0)
<a name="l01847"></a>01847     <span class="keywordflow">return</span> ripng-&gt;<a class="code" href="structripng.html#a68ed7b98a04fcdefea29cc865bf12918">sock</a>;
<a name="l01848"></a>01848 
<a name="l01849"></a>01849   <span class="comment">/* Threads. */</span>
<a name="l01850"></a>01850   <a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6">ripng_event</a> (<a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6a4aa69fc6b41b9cb0152442359f136f60">RIPNG_READ</a>, ripng-&gt;<a class="code" href="structripng.html#a68ed7b98a04fcdefea29cc865bf12918">sock</a>);
<a name="l01851"></a>01851   <a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6">ripng_event</a> (<a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6a7cde26b6d5ea395a7352e85b4c58f026">RIPNG_UPDATE_EVENT</a>, 1);
<a name="l01852"></a>01852 
<a name="l01853"></a>01853   <span class="keywordflow">return</span> 0;
<a name="l01854"></a>01854 }
<a name="l01855"></a>01855 
<a name="l01856"></a>01856 <span class="comment">/* Send RIPng request to the interface. */</span>
<a name="l01857"></a>01857 <span class="keywordtype">int</span>
<a name="l01858"></a><a class="code" href="ripngd_8h.html#a6dd58fbf570502d00ac2d39563e87147">01858</a> <a class="code" href="ripngd_8c.html#a6dd58fbf570502d00ac2d39563e87147">ripng_request</a> (<span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp)
<a name="l01859"></a>01859 {
<a name="l01860"></a>01860   <span class="keyword">struct </span><a class="code" href="structrte.html">rte</a> *<a class="code" href="structrte.html">rte</a>;
<a name="l01861"></a>01861   <span class="keyword">struct </span><a class="code" href="structripng__packet.html">ripng_packet</a> ripng_packet;
<a name="l01862"></a>01862 
<a name="l01863"></a>01863   <span class="comment">/* In default ripd doesn&#39;t send RIP_REQUEST to the loopback interface. */</span>
<a name="l01864"></a>01864   <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a8c30d3c9709c67544befed76b7260267">if_is_loopback</a>(ifp))
<a name="l01865"></a>01865     <span class="keywordflow">return</span> 0;
<a name="l01866"></a>01866 
<a name="l01867"></a>01867   <span class="comment">/* If interface is down, don&#39;t send RIP packet. */</span>
<a name="l01868"></a>01868   <span class="keywordflow">if</span> (! <a class="code" href="if_8c.html#ade77fc67f30030f539906dad43c239ab">if_is_up</a> (ifp))
<a name="l01869"></a>01869     <span class="keywordflow">return</span> 0;
<a name="l01870"></a>01870 
<a name="l01871"></a>01871   <span class="keywordflow">if</span> (<a class="code" href="ripng__debug_8h.html#a392e0383d4e00540ae5df2950459a02b">IS_RIPNG_DEBUG_EVENT</a>)
<a name="l01872"></a>01872     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;RIPng send request to %s&quot;</span>, ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
<a name="l01873"></a>01873 
<a name="l01874"></a>01874   memset (&amp;ripng_packet, 0, <span class="keyword">sizeof</span> (ripng_packet));
<a name="l01875"></a>01875   ripng_packet.<a class="code" href="structripng__packet.html#ad3eeeb2a9f59c2a969fb40c950b6484b">command</a> = <a class="code" href="ripngd_8h.html#a6b3f586e670da71a3d8fed9c82c03e65">RIPNG_REQUEST</a>;
<a name="l01876"></a>01876   ripng_packet.<a class="code" href="structripng__packet.html#a60fc773724de8fcfacb73abe560bb41a">version</a> = <a class="code" href="ripngd_8h.html#a281d5633e29e16b00b52e0391ae6cd6c">RIPNG_V1</a>;
<a name="l01877"></a>01877   rte = ripng_packet.<a class="code" href="structripng__packet.html#a87cc82cb5cfac4a509180fa9efa7b341">rte</a>;
<a name="l01878"></a>01878   rte-&gt;<a class="code" href="structrte.html#a264e64ce9125408ab73a12963da0d5fa">metric</a> = <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>;
<a name="l01879"></a>01879 
<a name="l01880"></a>01880   <span class="keywordflow">return</span> <a class="code" href="ripngd_8c.html#a0d2737d5d5dcd2d0fcb60ebd037f0004">ripng_send_packet</a> ((caddr_t) &amp;ripng_packet, <span class="keyword">sizeof</span> (ripng_packet), 
<a name="l01881"></a>01881                 <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, ifp);
<a name="l01882"></a>01882 }
<a name="l01883"></a>01883 
<a name="l01884"></a>01884 
<a name="l01885"></a>01885 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l01886"></a><a class="code" href="ripngd_8c.html#a83c25665bd55b0f2bf07371f94615db4">01886</a> <a class="code" href="ripngd_8c.html#a83c25665bd55b0f2bf07371f94615db4">ripng_update_jitter</a> (<span class="keywordtype">int</span> time)
<a name="l01887"></a>01887 {
<a name="l01888"></a>01888   <span class="keywordflow">return</span> ((rand () % (time + 1)) - (time / 2));
<a name="l01889"></a>01889 }
<a name="l01890"></a>01890 
<a name="l01891"></a>01891 <span class="keywordtype">void</span>
<a name="l01892"></a><a class="code" href="ripngd_8h.html#a9c5a9c85967654d938ff294d770ad8b2">01892</a> <a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6">ripng_event</a> (<span class="keyword">enum</span> <a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6">ripng_event</a> <a class="code" href="vty_8c.html#a3b65133bb9997cd1ccf311af0927fc9e">event</a>, <span class="keywordtype">int</span> sock)
<a name="l01893"></a>01893 {
<a name="l01894"></a>01894   <span class="keywordtype">int</span> jitter = 0;
<a name="l01895"></a>01895 
<a name="l01896"></a>01896   <span class="keywordflow">switch</span> (event)
<a name="l01897"></a>01897     {
<a name="l01898"></a>01898     <span class="keywordflow">case</span> <a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6a4aa69fc6b41b9cb0152442359f136f60">RIPNG_READ</a>:
<a name="l01899"></a>01899       <span class="keywordflow">if</span> (!ripng-&gt;<a class="code" href="structripng.html#a29b362daa2745d646257cfe029a114e9">t_read</a>)
<a name="l01900"></a>01900     ripng-&gt;<a class="code" href="structripng.html#a29b362daa2745d646257cfe029a114e9">t_read</a> = <a class="code" href="thread_8h.html#abd1714f11834a150c84b040c0c69b620">thread_add_read</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ripngd_8c.html#a11cd35910bd31d36ebde951870260d20">ripng_read</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, sock);
<a name="l01901"></a>01901       <span class="keywordflow">break</span>;
<a name="l01902"></a>01902     <span class="keywordflow">case</span> <a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6a7cde26b6d5ea395a7352e85b4c58f026">RIPNG_UPDATE_EVENT</a>:
<a name="l01903"></a>01903       <span class="keywordflow">if</span> (ripng-&gt;<a class="code" href="structripng.html#aff88d98568318561b02dbee48d24acc1">t_update</a>)
<a name="l01904"></a>01904     {
<a name="l01905"></a>01905       <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (ripng-&gt;<a class="code" href="structripng.html#aff88d98568318561b02dbee48d24acc1">t_update</a>);
<a name="l01906"></a>01906       ripng-&gt;<a class="code" href="structripng.html#aff88d98568318561b02dbee48d24acc1">t_update</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01907"></a>01907     }
<a name="l01908"></a>01908       <span class="comment">/* Update timer jitter. */</span>
<a name="l01909"></a>01909       jitter = <a class="code" href="ripngd_8c.html#a83c25665bd55b0f2bf07371f94615db4">ripng_update_jitter</a> (ripng-&gt;<a class="code" href="structripng.html#a3bf29c57452baca3c5f5fd1d259c6cd2">update_time</a>);
<a name="l01910"></a>01910 
<a name="l01911"></a>01911       ripng-&gt;<a class="code" href="structripng.html#aff88d98568318561b02dbee48d24acc1">t_update</a> = 
<a name="l01912"></a>01912     <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ripngd_8c.html#a26eee9390f4183a3f264a9942d447fdd">ripng_update</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 
<a name="l01913"></a>01913               sock ? 2 : ripng-&gt;<a class="code" href="structripng.html#a3bf29c57452baca3c5f5fd1d259c6cd2">update_time</a> + jitter);
<a name="l01914"></a>01914       <span class="keywordflow">break</span>;
<a name="l01915"></a>01915     <span class="keywordflow">case</span> <a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6a2e7d2cd80dd6c338241452b2e2f64cd9">RIPNG_TRIGGERED_UPDATE</a>:
<a name="l01916"></a>01916       <span class="keywordflow">if</span> (ripng-&gt;<a class="code" href="structripng.html#a97619acc0996741fbad22b0ac1684cc5">t_triggered_interval</a>)
<a name="l01917"></a>01917     ripng-&gt;<a class="code" href="structripng.html#a442a4c7c0bfa3a1d781e3f8d227b78c7">trigger</a> = 1;
<a name="l01918"></a>01918       <span class="keywordflow">else</span> <span class="keywordflow">if</span> (! ripng-&gt;<a class="code" href="structripng.html#a68b42a2e038716d0c3d226aa04fc056d">t_triggered_update</a>)
<a name="l01919"></a>01919     ripng-&gt;<a class="code" href="structripng.html#a68b42a2e038716d0c3d226aa04fc056d">t_triggered_update</a> = 
<a name="l01920"></a>01920       <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ripngd_8c.html#aade04913dcd50154f3a16346c673f01e">ripng_triggered_update</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0);
<a name="l01921"></a>01921       <span class="keywordflow">break</span>;
<a name="l01922"></a>01922     <span class="keywordflow">default</span>:
<a name="l01923"></a>01923       <span class="keywordflow">break</span>;
<a name="l01924"></a>01924     }
<a name="l01925"></a>01925 }
<a name="l01926"></a>01926 
<a name="l01927"></a>01927 
<a name="l01928"></a>01928 <span class="comment">/* Print out routes update time. */</span>
<a name="l01929"></a>01929 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01930"></a><a class="code" href="ripngd_8c.html#abcd8fab79718aa8ff43a65cc2d149c4a">01930</a> <a class="code" href="ripngd_8c.html#abcd8fab79718aa8ff43a65cc2d149c4a">ripng_vty_out_uptime</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>, <span class="keyword">struct</span> <a class="code" href="structripng__info.html">ripng_info</a> *rinfo)
<a name="l01931"></a>01931 {
<a name="l01932"></a>01932   time_t clock;
<a name="l01933"></a>01933   <span class="keyword">struct </span>tm *tm;
<a name="l01934"></a>01934 <span class="preprocessor">#define TIME_BUF 25</span>
<a name="l01935"></a>01935 <span class="preprocessor"></span>  <span class="keywordtype">char</span> timebuf [<a class="code" href="ripd_8c.html#a4a41ebcbcfbdc4cf71ac89967ae81aa8">TIME_BUF</a>];
<a name="l01936"></a>01936   <span class="keyword">struct </span><a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>;
<a name="l01937"></a>01937   
<a name="l01938"></a>01938   <span class="keywordflow">if</span> ((thread = rinfo-&gt;<a class="code" href="structripng__info.html#ab3490e49b1b0cacad3b8bb76e20d487f">t_timeout</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01939"></a>01939     {
<a name="l01940"></a>01940       clock = <a class="code" href="thread_8c.html#a945cdaf798bf660e0aebacfabfb27d16">thread_timer_remain_second</a> (thread);
<a name="l01941"></a>01941       tm = gmtime (&amp;clock);
<a name="l01942"></a>01942       strftime (timebuf, <a class="code" href="ripd_8c.html#a4a41ebcbcfbdc4cf71ac89967ae81aa8">TIME_BUF</a>, <span class="stringliteral">&quot;%M:%S&quot;</span>, tm);
<a name="l01943"></a>01943       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%5s&quot;</span>, timebuf);
<a name="l01944"></a>01944     }
<a name="l01945"></a>01945   <span class="keywordflow">else</span> <span class="keywordflow">if</span> ((thread = rinfo-&gt;<a class="code" href="structripng__info.html#a26eebec0ab345768bc791435d2a551b9">t_garbage_collect</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01946"></a>01946     {
<a name="l01947"></a>01947       clock = <a class="code" href="thread_8c.html#a945cdaf798bf660e0aebacfabfb27d16">thread_timer_remain_second</a> (thread);
<a name="l01948"></a>01948       tm = gmtime (&amp;clock);
<a name="l01949"></a>01949       strftime (timebuf, <a class="code" href="ripd_8c.html#a4a41ebcbcfbdc4cf71ac89967ae81aa8">TIME_BUF</a>, <span class="stringliteral">&quot;%M:%S&quot;</span>, tm);
<a name="l01950"></a>01950       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%5s&quot;</span>, timebuf);
<a name="l01951"></a>01951     }
<a name="l01952"></a>01952 }
<a name="l01953"></a>01953 
<a name="l01954"></a>01954 <span class="keyword">static</span> <span class="keywordtype">char</span> *
<a name="l01955"></a><a class="code" href="ripngd_8c.html#a9c60bfdfb0b4f786ba4cd26136f66a46">01955</a> <a class="code" href="ripngd_8c.html#a9c60bfdfb0b4f786ba4cd26136f66a46">ripng_route_subtype_print</a> (<span class="keyword">struct</span> <a class="code" href="structripng__info.html">ripng_info</a> *rinfo)
<a name="l01956"></a>01956 {
<a name="l01957"></a>01957   <span class="keyword">static</span> <span class="keywordtype">char</span> <a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>[3];
<a name="l01958"></a>01958   memset(str, 0, 3);
<a name="l01959"></a>01959 
<a name="l01960"></a>01960   <span class="keywordflow">if</span> (rinfo-&gt;<a class="code" href="structripng__info.html#ab96be2bd11a5979b955ec035db0a8ba5">suppress</a>)
<a name="l01961"></a>01961     strcat(str, <span class="stringliteral">&quot;S&quot;</span>);
<a name="l01962"></a>01962 
<a name="l01963"></a>01963   <span class="keywordflow">switch</span> (rinfo-&gt;<a class="code" href="structripng__info.html#a6b1f397b0581369f5141e29dc68d6e85">sub_type</a>)
<a name="l01964"></a>01964     {
<a name="l01965"></a>01965        <span class="keywordflow">case</span> <a class="code" href="ripngd_8h.html#a42f5ddc11e604312912cb85448f451bd">RIPNG_ROUTE_RTE</a>:
<a name="l01966"></a>01966          strcat(str, <span class="stringliteral">&quot;n&quot;</span>);
<a name="l01967"></a>01967          <span class="keywordflow">break</span>;
<a name="l01968"></a>01968        <span class="keywordflow">case</span> <a class="code" href="ripngd_8h.html#a326075451cf7aaf58444cd6a5e198dc6">RIPNG_ROUTE_STATIC</a>:
<a name="l01969"></a>01969          strcat(str, <span class="stringliteral">&quot;s&quot;</span>);
<a name="l01970"></a>01970          <span class="keywordflow">break</span>;
<a name="l01971"></a>01971        <span class="keywordflow">case</span> <a class="code" href="ripngd_8h.html#abea59d5b7e93126bc054927174a952ff">RIPNG_ROUTE_DEFAULT</a>:
<a name="l01972"></a>01972          strcat(str, <span class="stringliteral">&quot;d&quot;</span>);
<a name="l01973"></a>01973          <span class="keywordflow">break</span>;
<a name="l01974"></a>01974        <span class="keywordflow">case</span> <a class="code" href="ripngd_8h.html#ac5127dcb031038eab87f42097d5b72e4">RIPNG_ROUTE_REDISTRIBUTE</a>:
<a name="l01975"></a>01975          strcat(str, <span class="stringliteral">&quot;r&quot;</span>);
<a name="l01976"></a>01976          <span class="keywordflow">break</span>;
<a name="l01977"></a>01977        <span class="keywordflow">case</span> <a class="code" href="ripngd_8h.html#a7b8a856e1865628b6e85977878f5b309">RIPNG_ROUTE_INTERFACE</a>:
<a name="l01978"></a>01978          strcat(str, <span class="stringliteral">&quot;i&quot;</span>);
<a name="l01979"></a>01979          <span class="keywordflow">break</span>;
<a name="l01980"></a>01980        <span class="keywordflow">default</span>:
<a name="l01981"></a>01981          strcat(str, <span class="stringliteral">&quot;?&quot;</span>);
<a name="l01982"></a>01982          <span class="keywordflow">break</span>;
<a name="l01983"></a>01983     }
<a name="l01984"></a>01984  
<a name="l01985"></a>01985   <span class="keywordflow">return</span> <a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>;
<a name="l01986"></a>01986 }
<a name="l01987"></a>01987 
<a name="l01988"></a><a class="code" href="ripngd_8c.html#aee752ad1db359ea3bf9abcf0dbbb4262">01988</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (show_ipv6_ripng,
<a name="l01989"></a>01989        show_ipv6_ripng_cmd,
<a name="l01990"></a>01990        <span class="stringliteral">&quot;show ipv6 ripng&quot;</span>,
<a name="l01991"></a>01991        <a class="code" href="command_8h.html#aa19b6d5257cb6f7622eb6b3da8966b32">SHOW_STR</a>
<a name="l01992"></a>01992        <a class="code" href="command_8h.html#a97fa3de206286c30e3efe26747c25352">IPV6_STR</a>
<a name="l01993"></a>01993        <span class="stringliteral">&quot;Show RIPng routes\n&quot;</span>)
<a name="l01994"></a>01994 {
<a name="l01995"></a>01995   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rp;
<a name="l01996"></a>01996   <span class="keyword">struct </span><a class="code" href="structripng__info.html">ripng_info</a> *rinfo;
<a name="l01997"></a>01997   <span class="keyword">struct </span><a class="code" href="structripng__aggregate.html">ripng_aggregate</a> *aggregate;
<a name="l01998"></a>01998   <span class="keyword">struct </span>prefix_ipv6 *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
<a name="l01999"></a>01999   <span class="keywordtype">int</span> len;
<a name="l02000"></a>02000 
<a name="l02001"></a>02001   <span class="keywordflow">if</span> (! ripng)
<a name="l02002"></a>02002     <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02003"></a>02003 
<a name="l02004"></a>02004   <span class="comment">/* Header of display. */</span> 
<a name="l02005"></a>02005   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Codes: R - RIPng, C - connected, S - Static, O - OSPF, B - BGP%s&quot;</span>
<a name="l02006"></a>02006        <span class="stringliteral">&quot;Sub-codes:%s&quot;</span>
<a name="l02007"></a>02007        <span class="stringliteral">&quot;      (n) - normal, (s) - static, (d) - default, (r) - redistribute,%s&quot;</span>
<a name="l02008"></a>02008        <span class="stringliteral">&quot;      (i) - interface, (a/S) - aggregated/Suppressed%s%s&quot;</span>
<a name="l02009"></a>02009        <span class="stringliteral">&quot;   Network      Next Hop                      Via     Metric Tag Time%s&quot;</span>,
<a name="l02010"></a>02010        <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>,
<a name="l02011"></a>02011        <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02012"></a>02012   
<a name="l02013"></a>02013   <span class="keywordflow">for</span> (rp = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (ripng-&gt;<a class="code" href="structripng.html#a1bf596b69c5b442145eb509611ad6dc5">table</a>); rp; rp = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rp))
<a name="l02014"></a>02014     {
<a name="l02015"></a>02015       <span class="keywordflow">if</span> ((aggregate = rp-&gt;<a class="code" href="structroute__node.html#ae9cc08e4c96aa25870fc6e23708228c3">aggregate</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02016"></a>02016     {
<a name="l02017"></a>02017       p = (<span class="keyword">struct </span>prefix_ipv6 *) &amp;rp-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>;
<a name="l02018"></a>02018 
<a name="l02019"></a>02019 #ifdef <a class="code" href="ripng__nexthop_8c.html#ad72dbcf6d0153db1b8d8a58001feed83">DEBUG</a>
<a name="l02020"></a>02020       len = <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;R(a) %d/%d %s/%d &quot;</span>,
<a name="l02021"></a>02021              aggregate-&gt;<a class="code" href="structripng__aggregate.html#a29ebb0e110a9d3d79ba4ffd5014ed945">count</a>, aggregate-&gt;<a class="code" href="structripng__aggregate.html#abd263ff776074a69e08893c9721ab27d">suppress</a>,
<a name="l02022"></a>02022              inet6_ntoa (p-&gt;prefix), p-&gt;prefixlen);
<a name="l02023"></a>02023 <span class="preprocessor">#else</span>
<a name="l02024"></a>02024 <span class="preprocessor"></span>      len = <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;R(a) %s/%d &quot;</span>, 
<a name="l02025"></a>02025              inet6_ntoa (p-&gt;prefix), p-&gt;prefixlen);
<a name="l02026"></a>02026 <span class="preprocessor">#endif </span><span class="comment">/* DEBUG */</span>
<a name="l02027"></a>02027       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02028"></a>02028       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;%*s&quot;</span>, 18, <span class="stringliteral">&quot; &quot;</span>);
<a name="l02029"></a>02029 
<a name="l02030"></a>02030       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;%*s&quot;</span>, 28, <span class="stringliteral">&quot; &quot;</span>);
<a name="l02031"></a>02031       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;self      %2d  %3d%s&quot;</span>, aggregate-&gt;<a class="code" href="structripng__aggregate.html#a5f665fbc1f62ce317ebbe87a15f1f78a">metric</a>,
<a name="l02032"></a>02032            aggregate-&gt;<a class="code" href="structripng__aggregate.html#a7564ac741b9ec32a68a21b63b6142c92">tag</a>,
<a name="l02033"></a>02033            <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02034"></a>02034     }
<a name="l02035"></a>02035 
<a name="l02036"></a>02036       <span class="keywordflow">if</span> ((rinfo = rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02037"></a>02037     {
<a name="l02038"></a>02038       p = (<span class="keyword">struct </span>prefix_ipv6 *) &amp;rp-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>;
<a name="l02039"></a>02039 
<a name="l02040"></a>02040 #ifdef <a class="code" href="ripng__nexthop_8c.html#ad72dbcf6d0153db1b8d8a58001feed83">DEBUG</a>
<a name="l02041"></a>02041       len = <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;%c(%s) 0/%d %s/%d &quot;</span>,
<a name="l02042"></a>02042              <a class="code" href="log_8c.html#a615f2a96489398a58c693eb46d3aa184">zebra_route_char</a>(rinfo-&gt;<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a>),
<a name="l02043"></a>02043              <a class="code" href="ripngd_8c.html#a9c60bfdfb0b4f786ba4cd26136f66a46">ripng_route_subtype_print</a>(rinfo),
<a name="l02044"></a>02044              rinfo-&gt;<a class="code" href="structripng__info.html#ab96be2bd11a5979b955ec035db0a8ba5">suppress</a>,
<a name="l02045"></a>02045              inet6_ntoa (p-&gt;prefix), p-&gt;prefixlen);
<a name="l02046"></a>02046 <span class="preprocessor">#else</span>
<a name="l02047"></a>02047 <span class="preprocessor"></span>      len = <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;%c(%s) %s/%d &quot;</span>,
<a name="l02048"></a>02048              <a class="code" href="log_8c.html#a615f2a96489398a58c693eb46d3aa184">zebra_route_char</a>(rinfo-&gt;<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a>),
<a name="l02049"></a>02049              <a class="code" href="ripngd_8c.html#a9c60bfdfb0b4f786ba4cd26136f66a46">ripng_route_subtype_print</a>(rinfo),
<a name="l02050"></a>02050              inet6_ntoa (p-&gt;prefix), p-&gt;prefixlen);
<a name="l02051"></a>02051 <span class="preprocessor">#endif </span><span class="comment">/* DEBUG */</span>
<a name="l02052"></a>02052       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02053"></a>02053       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;%*s&quot;</span>, 18, <span class="stringliteral">&quot; &quot;</span>);
<a name="l02054"></a>02054       len = <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;%s&quot;</span>, inet6_ntoa (rinfo-&gt;<a class="code" href="structripng__info.html#a9e4a05b7f0911b7d3805b1c0fa2c45bf">nexthop</a>));
<a name="l02055"></a>02055 
<a name="l02056"></a>02056       len = 28 - len;
<a name="l02057"></a>02057       <span class="keywordflow">if</span> (len &gt; 0)
<a name="l02058"></a>02058         len = <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;%*s&quot;</span>, len, <span class="stringliteral">&quot; &quot;</span>);
<a name="l02059"></a>02059 
<a name="l02060"></a>02060       <span class="comment">/* from */</span>
<a name="l02061"></a>02061       <span class="keywordflow">if</span> ((rinfo-&gt;<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a> == <a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>) &amp;&amp; 
<a name="l02062"></a>02062         (rinfo-&gt;<a class="code" href="structripng__info.html#a6b1f397b0581369f5141e29dc68d6e85">sub_type</a> == <a class="code" href="ripngd_8h.html#a42f5ddc11e604312912cb85448f451bd">RIPNG_ROUTE_RTE</a>))
<a name="l02063"></a>02063       {
<a name="l02064"></a>02064         len = <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="if_8c.html#a788f6c1b52cee08e687d34b9f8230960">ifindex2ifname</a>(rinfo-&gt;<a class="code" href="structripng__info.html#a5269ffb6b1daf9eddae7ea92d271d5d6">ifindex</a>));
<a name="l02065"></a>02065       } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a> == <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>)
<a name="l02066"></a>02066       {
<a name="l02067"></a>02067         len = <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;kill&quot;</span>);
<a name="l02068"></a>02068       } <span class="keywordflow">else</span>
<a name="l02069"></a>02069         len = <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;self&quot;</span>);
<a name="l02070"></a>02070 
<a name="l02071"></a>02071       len = 9 - len;
<a name="l02072"></a>02072       <span class="keywordflow">if</span> (len &gt; 0)
<a name="l02073"></a>02073         <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;%*s&quot;</span>, len, <span class="stringliteral">&quot; &quot;</span>);
<a name="l02074"></a>02074 
<a name="l02075"></a>02075       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot; %2d  %3d  &quot;</span>,
<a name="l02076"></a>02076            rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a>, rinfo-&gt;<a class="code" href="structripng__info.html#a782b26176fb3c32210c0745ae2f5fdb8">tag</a>);
<a name="l02077"></a>02077 
<a name="l02078"></a>02078       <span class="comment">/* time */</span>
<a name="l02079"></a>02079       <span class="keywordflow">if</span> ((rinfo-&gt;<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a> == <a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>) &amp;&amp; 
<a name="l02080"></a>02080         (rinfo-&gt;<a class="code" href="structripng__info.html#a6b1f397b0581369f5141e29dc68d6e85">sub_type</a> == <a class="code" href="ripngd_8h.html#a42f5ddc11e604312912cb85448f451bd">RIPNG_ROUTE_RTE</a>))
<a name="l02081"></a>02081       {
<a name="l02082"></a>02082         <span class="comment">/* RTE from remote RIP routers */</span>
<a name="l02083"></a>02083         <a class="code" href="ripngd_8c.html#abcd8fab79718aa8ff43a65cc2d149c4a">ripng_vty_out_uptime</a> (<a class="code" href="structvty.html">vty</a>, rinfo);
<a name="l02084"></a>02084       } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a> == <a class="code" href="ripngd_8h.html#a6b3b5f1dc5c1220629f61ea751f6a2e5">RIPNG_METRIC_INFINITY</a>)
<a name="l02085"></a>02085       {
<a name="l02086"></a>02086         <span class="comment">/* poisonous reversed routes (gc) */</span>
<a name="l02087"></a>02087         <a class="code" href="ripngd_8c.html#abcd8fab79718aa8ff43a65cc2d149c4a">ripng_vty_out_uptime</a> (<a class="code" href="structvty.html">vty</a>, rinfo);
<a name="l02088"></a>02088       }
<a name="l02089"></a>02089 
<a name="l02090"></a>02090       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02091"></a>02091     }
<a name="l02092"></a>02092     }
<a name="l02093"></a>02093 
<a name="l02094"></a>02094   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02095"></a>02095 }
<a name="l02096"></a>02096 
<a name="l02097"></a><a class="code" href="ripngd_8c.html#a58d7be40ace0dc8f4001f8ebcc55b254">02097</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (show_ipv6_ripng_status,
<a name="l02098"></a>02098        show_ipv6_ripng_status_cmd,
<a name="l02099"></a>02099        <span class="stringliteral">&quot;show ipv6 ripng status&quot;</span>,
<a name="l02100"></a>02100        <a class="code" href="command_8h.html#aa19b6d5257cb6f7622eb6b3da8966b32">SHOW_STR</a>
<a name="l02101"></a>02101        <a class="code" href="command_8h.html#a97fa3de206286c30e3efe26747c25352">IPV6_STR</a>
<a name="l02102"></a>02102        <span class="stringliteral">&quot;Show RIPng routes\n&quot;</span>
<a name="l02103"></a>02103        <span class="stringliteral">&quot;IPv6 routing protocol process parameters and statistics\n&quot;</span>)
<a name="l02104"></a>02104 {
<a name="l02105"></a>02105   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l02106"></a>02106   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l02107"></a>02107 
<a name="l02108"></a>02108   <span class="keywordflow">if</span> (! ripng)
<a name="l02109"></a>02109     <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02110"></a>02110 
<a name="l02111"></a>02111   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Routing Protocol is \&quot;RIPng\&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02112"></a>02112   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;  Sending updates every %ld seconds with +/-50%%,&quot;</span>,
<a name="l02113"></a>02113            ripng-&gt;<a class="code" href="structripng.html#a3bf29c57452baca3c5f5fd1d259c6cd2">update_time</a>);
<a name="l02114"></a>02114   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot; next due in %lu seconds%s&quot;</span>,
<a name="l02115"></a>02115            <a class="code" href="thread_8c.html#a945cdaf798bf660e0aebacfabfb27d16">thread_timer_remain_second</a> (ripng-&gt;<a class="code" href="structripng.html#aff88d98568318561b02dbee48d24acc1">t_update</a>),
<a name="l02116"></a>02116            <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02117"></a>02117   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;  Timeout after %ld seconds,&quot;</span>, ripng-&gt;<a class="code" href="structripng.html#a1e46af0d5dd1bdd43a29901c70772ab5">timeout_time</a>);
<a name="l02118"></a>02118   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot; garbage collect after %ld seconds%s&quot;</span>, ripng-&gt;<a class="code" href="structripng.html#a79a6db0c820761917a6d5b19c2383dbd">garbage_time</a>,
<a name="l02119"></a>02119            <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02120"></a>02120 
<a name="l02121"></a>02121   <span class="comment">/* Filtering status show. */</span>
<a name="l02122"></a>02122   <a class="code" href="distribute_8h.html#a42498c1a381dd986ae3cc5bb7a6a03f0">config_show_distribute</a> (<a class="code" href="structvty.html">vty</a>);
<a name="l02123"></a>02123 
<a name="l02124"></a>02124   <span class="comment">/* Default metric information. */</span>
<a name="l02125"></a>02125   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;  Default redistribution metric is %d%s&quot;</span>,
<a name="l02126"></a>02126            ripng-&gt;<a class="code" href="structripng.html#ae47d271724aadc1dfde66e4c06829748">default_metric</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02127"></a>02127 
<a name="l02128"></a>02128   <span class="comment">/* Redistribute information. */</span>
<a name="l02129"></a>02129   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;  Redistributing:&quot;</span>);
<a name="l02130"></a>02130   <a class="code" href="ripngd_8h.html#a827869c433933423095ebfb21087c786">ripng_redistribute_write</a> (<a class="code" href="structvty.html">vty</a>, 0);
<a name="l02131"></a>02131   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02132"></a>02132 
<a name="l02133"></a>02133   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;  Default version control: send version %d,&quot;</span>, ripng-&gt;<a class="code" href="structripng.html#a5876107e16a08687d8d9428a128c657b">version</a>);
<a name="l02134"></a>02134   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot; receive version %d %s&quot;</span>, ripng-&gt;<a class="code" href="structripng.html#a5876107e16a08687d8d9428a128c657b">version</a>,
<a name="l02135"></a>02135            <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02136"></a>02136 
<a name="l02137"></a>02137   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;    Interface        Send  Recv%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02138"></a>02138 
<a name="l02139"></a>02139   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="if_8c.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a>, node, ifp))
<a name="l02140"></a>02140     {
<a name="l02141"></a>02141       <span class="keyword">struct </span><a class="code" href="structripng__interface.html">ripng_interface</a> *ri;
<a name="l02142"></a>02142       
<a name="l02143"></a>02143       ri = ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l02144"></a>02144 
<a name="l02145"></a>02145       <span class="keywordflow">if</span> (ri-&gt;<a class="code" href="structripng__interface.html#abc79a24929887116c556ad36abfe55a9">enable_network</a> || ri-&gt;<a class="code" href="structripng__interface.html#a0fb1c458677496744feb110449852d0f">enable_interface</a>)
<a name="l02146"></a>02146     {
<a name="l02147"></a>02147 
<a name="l02148"></a>02148       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;    %-17s%-3d   %-3d%s&quot;</span>, ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>,
<a name="l02149"></a>02149            ripng-&gt;<a class="code" href="structripng.html#a5876107e16a08687d8d9428a128c657b">version</a>,
<a name="l02150"></a>02150            ripng-&gt;<a class="code" href="structripng.html#a5876107e16a08687d8d9428a128c657b">version</a>,
<a name="l02151"></a>02151            <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02152"></a>02152     }
<a name="l02153"></a>02153     }
<a name="l02154"></a>02154 
<a name="l02155"></a>02155   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;  Routing for Networks:%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02156"></a>02156   <a class="code" href="ripng__interface_8c.html#aa5b564f815e55f51fbd19624d4d11747">ripng_network_write</a> (<a class="code" href="structvty.html">vty</a>, 0);
<a name="l02157"></a>02157 
<a name="l02158"></a>02158   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;  Routing Information Sources:%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02159"></a>02159   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;    Gateway          BadPackets BadRoutes  Distance Last Update%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02160"></a>02160   <a class="code" href="ripng__peer_8c.html#a9e69b216cd232654b9a39b7fd28ee392">ripng_peer_display</a> (<a class="code" href="structvty.html">vty</a>);
<a name="l02161"></a>02161 
<a name="l02162"></a>02162   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;  
<a name="l02163"></a>02163 }
<a name="l02164"></a>02164 
<a name="l02165"></a><a class="code" href="ripngd_8c.html#aaa4a904f74861c953b485a6f22f9a591">02165</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (router_ripng,
<a name="l02166"></a>02166        router_ripng_cmd,
<a name="l02167"></a>02167        <span class="stringliteral">&quot;router ripng&quot;</span>,
<a name="l02168"></a>02168        <span class="stringliteral">&quot;Enable a routing process\n&quot;</span>
<a name="l02169"></a>02169        <span class="stringliteral">&quot;Make RIPng instance command\n&quot;</span>)
<a name="l02170"></a>02170 {
<a name="l02171"></a>02171   <span class="keywordtype">int</span> ret;
<a name="l02172"></a>02172 
<a name="l02173"></a>02173   <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>;
<a name="l02174"></a>02174 
<a name="l02175"></a>02175   <span class="keywordflow">if</span> (!ripng)
<a name="l02176"></a>02176     {
<a name="l02177"></a>02177       ret = <a class="code" href="ripngd_8c.html#aca2c469cbf2a47693f9c22d6728cfb09">ripng_create</a> ();
<a name="l02178"></a>02178 
<a name="l02179"></a>02179       <span class="comment">/* Notice to user we couldn&#39;t create RIPng. */</span>
<a name="l02180"></a>02180       <span class="keywordflow">if</span> (ret &lt; 0)
<a name="l02181"></a>02181     {
<a name="l02182"></a>02182       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;can&#39;t create RIPng&quot;</span>);
<a name="l02183"></a>02183       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02184"></a>02184     }
<a name="l02185"></a>02185     }
<a name="l02186"></a>02186 
<a name="l02187"></a>02187   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02188"></a>02188 }
<a name="l02189"></a>02189 
<a name="l02190"></a><a class="code" href="ripngd_8c.html#acc76c96c471d9d518f860fd29788a6e0">02190</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_router_ripng,
<a name="l02191"></a>02191        no_router_ripng_cmd,
<a name="l02192"></a>02192        <span class="stringliteral">&quot;no router ripng&quot;</span>,
<a name="l02193"></a>02193        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02194"></a>02194        <span class="stringliteral">&quot;Enable a routing process\n&quot;</span>
<a name="l02195"></a>02195        <span class="stringliteral">&quot;Make RIPng instance command\n&quot;</span>)
<a name="l02196"></a>02196 {
<a name="l02197"></a>02197   <span class="keywordflow">if</span>(ripng)
<a name="l02198"></a>02198     <a class="code" href="ripngd_8c.html#a3177bfec34722a80cd9594ceafafcd4f">ripng_clean</a>();
<a name="l02199"></a>02199   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02200"></a>02200 }
<a name="l02201"></a>02201 
<a name="l02202"></a><a class="code" href="ripngd_8c.html#a8a55c478288002cf37ddf7af8fb4582b">02202</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (ripng_route,
<a name="l02203"></a>02203        ripng_route_cmd,
<a name="l02204"></a>02204        <span class="stringliteral">&quot;route IPV6ADDR&quot;</span>,
<a name="l02205"></a>02205        <span class="stringliteral">&quot;Static route setup\n&quot;</span>
<a name="l02206"></a>02206        <span class="stringliteral">&quot;Set static RIPng route announcement\n&quot;</span>)
<a name="l02207"></a>02207 {
<a name="l02208"></a>02208   <span class="keywordtype">int</span> ret;
<a name="l02209"></a>02209   <span class="keyword">struct </span>prefix_ipv6 p;
<a name="l02210"></a>02210   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rp;
<a name="l02211"></a>02211 
<a name="l02212"></a>02212   ret = str2prefix_ipv6 (argv[0], (<span class="keyword">struct</span> prefix_ipv6 *)&amp;p);
<a name="l02213"></a>02213   <span class="keywordflow">if</span> (ret &lt;= 0)
<a name="l02214"></a>02214     {
<a name="l02215"></a>02215       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Malformed address%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02216"></a>02216       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02217"></a>02217     }
<a name="l02218"></a>02218   apply_mask_ipv6 (&amp;p);
<a name="l02219"></a>02219 
<a name="l02220"></a>02220   rp = <a class="code" href="table_8c.html#ac91fdff1a0b8dc3d60ebaf152caa0f80">route_node_get</a> (ripng-&gt;<a class="code" href="structripng.html#ad5d9e06ed4b673e3788475b0fe26483d">route</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;p);
<a name="l02221"></a>02221   <span class="keywordflow">if</span> (rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
<a name="l02222"></a>02222     {
<a name="l02223"></a>02223       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;There is already same static route.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02224"></a>02224       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rp);
<a name="l02225"></a>02225       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02226"></a>02226     }
<a name="l02227"></a>02227   rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = (<span class="keywordtype">void</span> *)1;
<a name="l02228"></a>02228 
<a name="l02229"></a>02229   <a class="code" href="ripngd_8c.html#a8c632303768357a09888dd8081c4c15e">ripng_redistribute_add</a> (<a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>, <a class="code" href="ripngd_8h.html#a326075451cf7aaf58444cd6a5e198dc6">RIPNG_ROUTE_STATIC</a>, &amp;p, 0, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l02230"></a>02230 
<a name="l02231"></a>02231   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02232"></a>02232 }
<a name="l02233"></a>02233 
<a name="l02234"></a><a class="code" href="ripngd_8c.html#ac5c7d340d9abaf8723361242a8e6fc27">02234</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_ripng_route,
<a name="l02235"></a>02235        no_ripng_route_cmd,
<a name="l02236"></a>02236        <span class="stringliteral">&quot;no route IPV6ADDR&quot;</span>,
<a name="l02237"></a>02237        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02238"></a>02238        <span class="stringliteral">&quot;Static route setup\n&quot;</span>
<a name="l02239"></a>02239        <span class="stringliteral">&quot;Delete static RIPng route announcement\n&quot;</span>)
<a name="l02240"></a>02240 {
<a name="l02241"></a>02241   <span class="keywordtype">int</span> ret;
<a name="l02242"></a>02242   <span class="keyword">struct </span>prefix_ipv6 p;
<a name="l02243"></a>02243   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rp;
<a name="l02244"></a>02244 
<a name="l02245"></a>02245   ret = str2prefix_ipv6 (argv[0], (<span class="keyword">struct</span> prefix_ipv6 *)&amp;p);
<a name="l02246"></a>02246   <span class="keywordflow">if</span> (ret &lt;= 0)
<a name="l02247"></a>02247     {
<a name="l02248"></a>02248       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Malformed address%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02249"></a>02249       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02250"></a>02250     }
<a name="l02251"></a>02251   apply_mask_ipv6 (&amp;p);
<a name="l02252"></a>02252 
<a name="l02253"></a>02253   rp = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (ripng-&gt;<a class="code" href="structripng.html#ad5d9e06ed4b673e3788475b0fe26483d">route</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;p);
<a name="l02254"></a>02254   <span class="keywordflow">if</span> (! rp)
<a name="l02255"></a>02255     {
<a name="l02256"></a>02256       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Can&#39;t find static route.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02257"></a>02257       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02258"></a>02258     }
<a name="l02259"></a>02259 
<a name="l02260"></a>02260   <a class="code" href="ripngd_8c.html#afb915914d0dc2e8129f63bccd8dd53a3">ripng_redistribute_delete</a> (<a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>, <a class="code" href="ripngd_8h.html#a326075451cf7aaf58444cd6a5e198dc6">RIPNG_ROUTE_STATIC</a>, &amp;p, 0);
<a name="l02261"></a>02261   <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rp);
<a name="l02262"></a>02262 
<a name="l02263"></a>02263   rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02264"></a>02264   <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rp);
<a name="l02265"></a>02265 
<a name="l02266"></a>02266   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02267"></a>02267 }
<a name="l02268"></a>02268 
<a name="l02269"></a><a class="code" href="ripngd_8c.html#a3081e951ece6cf6b374bffdf8fc8cca8">02269</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (ripng_aggregate_address,
<a name="l02270"></a>02270        ripng_aggregate_address_cmd,
<a name="l02271"></a>02271        <span class="stringliteral">&quot;aggregate-address X:X::X:X/M&quot;</span>,
<a name="l02272"></a>02272        <span class="stringliteral">&quot;Set aggregate RIPng route announcement\n&quot;</span>
<a name="l02273"></a>02273        <span class="stringliteral">&quot;Aggregate network\n&quot;</span>)
<a name="l02274"></a>02274 {
<a name="l02275"></a>02275   <span class="keywordtype">int</span> ret;
<a name="l02276"></a>02276   <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> p;
<a name="l02277"></a>02277   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *node;
<a name="l02278"></a>02278 
<a name="l02279"></a>02279   ret = str2prefix_ipv6 (argv[0], (<span class="keyword">struct</span> prefix_ipv6 *)&amp;p);
<a name="l02280"></a>02280   <span class="keywordflow">if</span> (ret &lt;= 0)
<a name="l02281"></a>02281     {
<a name="l02282"></a>02282       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Malformed address%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02283"></a>02283       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02284"></a>02284     }
<a name="l02285"></a>02285 
<a name="l02286"></a>02286   <span class="comment">/* Check aggregate alredy exist or not. */</span>
<a name="l02287"></a>02287   node = <a class="code" href="table_8c.html#ac91fdff1a0b8dc3d60ebaf152caa0f80">route_node_get</a> (ripng-&gt;<a class="code" href="structripng.html#af4311264fe0c5e48b65a37c4ddd4b1f0">aggregate</a>, &amp;p);
<a name="l02288"></a>02288   <span class="keywordflow">if</span> (node-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
<a name="l02289"></a>02289     {
<a name="l02290"></a>02290       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;There is already same aggregate route.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02291"></a>02291       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (node);
<a name="l02292"></a>02292       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02293"></a>02293     }
<a name="l02294"></a>02294   node-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = (<span class="keywordtype">void</span> *)1;
<a name="l02295"></a>02295 
<a name="l02296"></a>02296   <a class="code" href="ripng__route_8c.html#a8082865706dbe64c2c43df63baaddd49">ripng_aggregate_add</a> (&amp;p);
<a name="l02297"></a>02297 
<a name="l02298"></a>02298   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02299"></a>02299 }
<a name="l02300"></a>02300 
<a name="l02301"></a><a class="code" href="ripngd_8c.html#a12e9e591b8d7873277b33d39dee51da9">02301</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_ripng_aggregate_address,
<a name="l02302"></a>02302        no_ripng_aggregate_address_cmd,
<a name="l02303"></a>02303        <span class="stringliteral">&quot;no aggregate-address X:X::X:X/M&quot;</span>,
<a name="l02304"></a>02304        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02305"></a>02305        <span class="stringliteral">&quot;Delete aggregate RIPng route announcement\n&quot;</span>
<a name="l02306"></a>02306        <span class="stringliteral">&quot;Aggregate network&quot;</span>)
<a name="l02307"></a>02307 {
<a name="l02308"></a>02308   <span class="keywordtype">int</span> ret;
<a name="l02309"></a>02309   <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> p;
<a name="l02310"></a>02310   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l02311"></a>02311 
<a name="l02312"></a>02312   ret = str2prefix_ipv6 (argv[0], (<span class="keyword">struct</span> prefix_ipv6 *) &amp;p);
<a name="l02313"></a>02313   <span class="keywordflow">if</span> (ret &lt;= 0)
<a name="l02314"></a>02314     {
<a name="l02315"></a>02315       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Malformed address%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02316"></a>02316       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02317"></a>02317     }
<a name="l02318"></a>02318 
<a name="l02319"></a>02319   rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (ripng-&gt;<a class="code" href="structripng.html#af4311264fe0c5e48b65a37c4ddd4b1f0">aggregate</a>, &amp;p);
<a name="l02320"></a>02320   <span class="keywordflow">if</span> (! rn)
<a name="l02321"></a>02321     {
<a name="l02322"></a>02322       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Can&#39;t find aggregate route.%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02323"></a>02323       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02324"></a>02324     }
<a name="l02325"></a>02325   <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l02326"></a>02326   rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02327"></a>02327   <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l02328"></a>02328 
<a name="l02329"></a>02329   <a class="code" href="ripng__route_8c.html#ae561adf43f63cdbfcba1074cbe6f17db">ripng_aggregate_delete</a> (&amp;p);
<a name="l02330"></a>02330 
<a name="l02331"></a>02331   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02332"></a>02332 }
<a name="l02333"></a>02333 
<a name="l02334"></a><a class="code" href="ripngd_8c.html#a8da408e3876a176866592bbb89d36db5">02334</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (ripng_default_metric,
<a name="l02335"></a>02335        ripng_default_metric_cmd,
<a name="l02336"></a>02336        <span class="stringliteral">&quot;default-metric &lt;1-16&gt;&quot;</span>,
<a name="l02337"></a>02337        <span class="stringliteral">&quot;Set a metric of redistribute routes\n&quot;</span>
<a name="l02338"></a>02338        <span class="stringliteral">&quot;Default metric\n&quot;</span>)
<a name="l02339"></a>02339 {
<a name="l02340"></a>02340   <span class="keywordflow">if</span> (ripng)
<a name="l02341"></a>02341     {
<a name="l02342"></a>02342       ripng-&gt;<a class="code" href="structripng.html#ae47d271724aadc1dfde66e4c06829748">default_metric</a> = atoi (argv[0]);
<a name="l02343"></a>02343     }
<a name="l02344"></a>02344   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02345"></a>02345 }
<a name="l02346"></a>02346 
<a name="l02347"></a><a class="code" href="ripngd_8c.html#a9a0816d6f71f242bd672aece3c4b1c82">02347</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_ripng_default_metric,
<a name="l02348"></a>02348        no_ripng_default_metric_cmd,
<a name="l02349"></a>02349        <span class="stringliteral">&quot;no default-metric&quot;</span>,
<a name="l02350"></a>02350        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02351"></a>02351        <span class="stringliteral">&quot;Set a metric of redistribute routes\n&quot;</span>
<a name="l02352"></a>02352        <span class="stringliteral">&quot;Default metric\n&quot;</span>)
<a name="l02353"></a>02353 {
<a name="l02354"></a>02354   <span class="keywordflow">if</span> (ripng)
<a name="l02355"></a>02355     {
<a name="l02356"></a>02356       ripng-&gt;<a class="code" href="structripng.html#ae47d271724aadc1dfde66e4c06829748">default_metric</a> = <a class="code" href="ripngd_8h.html#a6b9a756a2011a2b42c7ce6203b84ced2">RIPNG_DEFAULT_METRIC_DEFAULT</a>;
<a name="l02357"></a>02357     }
<a name="l02358"></a>02358   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02359"></a>02359 }
<a name="l02360"></a>02360 
<a name="l02361"></a><a class="code" href="ripngd_8c.html#a04b1845b6cb2473ad2613f36eb38649e">02361</a> <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_ripng_default_metric,
<a name="l02362"></a>02362        no_ripng_default_metric_val_cmd,
<a name="l02363"></a>02363        <span class="stringliteral">&quot;no default-metric &lt;1-16&gt;&quot;</span>,
<a name="l02364"></a>02364        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02365"></a>02365        <span class="stringliteral">&quot;Set a metric of redistribute routes\n&quot;</span>
<a name="l02366"></a>02366        <span class="stringliteral">&quot;Default metric\n&quot;</span>)
<a name="l02367"></a>02367 
<a name="l02368"></a>02368 <span class="preprocessor">#if 0</span>
<a name="l02369"></a>02369 <span class="preprocessor"></span><span class="comment">/* RIPng update timer setup. */</span>
<a name="l02370"></a>02370 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (ripng_update_timer,
<a name="l02371"></a>02371        ripng_update_timer_cmd,
<a name="l02372"></a>02372        <span class="stringliteral">&quot;update-timer SECOND&quot;</span>,
<a name="l02373"></a>02373        <span class="stringliteral">&quot;Set RIPng update timer in seconds\n&quot;</span>
<a name="l02374"></a>02374        <span class="stringliteral">&quot;Seconds\n&quot;</span>)
<a name="l02375"></a>02375 {
<a name="l02376"></a>02376   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> update;
<a name="l02377"></a>02377   <span class="keywordtype">char</span> *endptr = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02378"></a>02378 
<a name="l02379"></a>02379   update = strtoul (argv[0], &amp;endptr, 10);
<a name="l02380"></a>02380   <span class="keywordflow">if</span> (update == ULONG_MAX || *endptr != <span class="charliteral">&#39;\0&#39;</span>)
<a name="l02381"></a>02381     {
<a name="l02382"></a>02382       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;update timer value error%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02383"></a>02383       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02384"></a>02384     }
<a name="l02385"></a>02385 
<a name="l02386"></a>02386   ripng-&gt;<a class="code" href="structripng.html#a3bf29c57452baca3c5f5fd1d259c6cd2">update_time</a> = update;
<a name="l02387"></a>02387 
<a name="l02388"></a>02388   <a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6">ripng_event</a> (<a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6a7cde26b6d5ea395a7352e85b4c58f026">RIPNG_UPDATE_EVENT</a>, 0);
<a name="l02389"></a>02389   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02390"></a>02390 }
<a name="l02391"></a>02391 
<a name="l02392"></a>02392 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_ripng_update_timer,
<a name="l02393"></a>02393        no_ripng_update_timer_cmd,
<a name="l02394"></a>02394        <span class="stringliteral">&quot;no update-timer SECOND&quot;</span>,
<a name="l02395"></a>02395        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02396"></a>02396        <span class="stringliteral">&quot;Unset RIPng update timer in seconds\n&quot;</span>
<a name="l02397"></a>02397        <span class="stringliteral">&quot;Seconds\n&quot;</span>)
<a name="l02398"></a>02398 {
<a name="l02399"></a>02399   ripng-&gt;<a class="code" href="structripng.html#a3bf29c57452baca3c5f5fd1d259c6cd2">update_time</a> = <a class="code" href="ripngd_8h.html#ae1b0d25ee668ca5dfc1f897688d376cb">RIPNG_UPDATE_TIMER_DEFAULT</a>;
<a name="l02400"></a>02400   <a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6">ripng_event</a> (<a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6a7cde26b6d5ea395a7352e85b4c58f026">RIPNG_UPDATE_EVENT</a>, 0);
<a name="l02401"></a>02401   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02402"></a>02402 }
<a name="l02403"></a>02403 
<a name="l02404"></a>02404 <span class="comment">/* RIPng timeout timer setup. */</span>
<a name="l02405"></a>02405 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (ripng_timeout_timer,
<a name="l02406"></a>02406        ripng_timeout_timer_cmd,
<a name="l02407"></a>02407        <span class="stringliteral">&quot;timeout-timer SECOND&quot;</span>,
<a name="l02408"></a>02408        <span class="stringliteral">&quot;Set RIPng timeout timer in seconds\n&quot;</span>
<a name="l02409"></a>02409        <span class="stringliteral">&quot;Seconds\n&quot;</span>)
<a name="l02410"></a>02410 {
<a name="l02411"></a>02411   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> timeout;
<a name="l02412"></a>02412   <span class="keywordtype">char</span> *endptr = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02413"></a>02413 
<a name="l02414"></a>02414   timeout = strtoul (argv[0], &amp;endptr, 10);
<a name="l02415"></a>02415   <span class="keywordflow">if</span> (timeout == ULONG_MAX || *endptr != <span class="charliteral">&#39;\0&#39;</span>)
<a name="l02416"></a>02416     {
<a name="l02417"></a>02417       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;timeout timer value error%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02418"></a>02418       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02419"></a>02419     }
<a name="l02420"></a>02420 
<a name="l02421"></a>02421   ripng-&gt;<a class="code" href="structripng.html#a1e46af0d5dd1bdd43a29901c70772ab5">timeout_time</a> = timeout;
<a name="l02422"></a>02422 
<a name="l02423"></a>02423   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02424"></a>02424 }
<a name="l02425"></a>02425 
<a name="l02426"></a>02426 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_ripng_timeout_timer,
<a name="l02427"></a>02427        no_ripng_timeout_timer_cmd,
<a name="l02428"></a>02428        <span class="stringliteral">&quot;no timeout-timer SECOND&quot;</span>,
<a name="l02429"></a>02429        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02430"></a>02430        <span class="stringliteral">&quot;Unset RIPng timeout timer in seconds\n&quot;</span>
<a name="l02431"></a>02431        <span class="stringliteral">&quot;Seconds\n&quot;</span>)
<a name="l02432"></a>02432 {
<a name="l02433"></a>02433   ripng-&gt;<a class="code" href="structripng.html#a1e46af0d5dd1bdd43a29901c70772ab5">timeout_time</a> = <a class="code" href="ripngd_8h.html#aba6555dd87cff9ea814be873c14ce972">RIPNG_TIMEOUT_TIMER_DEFAULT</a>;
<a name="l02434"></a>02434   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02435"></a>02435 }
<a name="l02436"></a>02436 
<a name="l02437"></a>02437 <span class="comment">/* RIPng garbage timer setup. */</span>
<a name="l02438"></a>02438 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (ripng_garbage_timer,
<a name="l02439"></a>02439        ripng_garbage_timer_cmd,
<a name="l02440"></a>02440        <span class="stringliteral">&quot;garbage-timer SECOND&quot;</span>,
<a name="l02441"></a>02441        <span class="stringliteral">&quot;Set RIPng garbage timer in seconds\n&quot;</span>
<a name="l02442"></a>02442        <span class="stringliteral">&quot;Seconds\n&quot;</span>)
<a name="l02443"></a>02443 {
<a name="l02444"></a>02444   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> garbage;
<a name="l02445"></a>02445   <span class="keywordtype">char</span> *endptr = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02446"></a>02446 
<a name="l02447"></a>02447   garbage = strtoul (argv[0], &amp;endptr, 10);
<a name="l02448"></a>02448   <span class="keywordflow">if</span> (garbage == ULONG_MAX || *endptr != <span class="charliteral">&#39;\0&#39;</span>)
<a name="l02449"></a>02449     {
<a name="l02450"></a>02450       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;garbage timer value error%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02451"></a>02451       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02452"></a>02452     }
<a name="l02453"></a>02453 
<a name="l02454"></a>02454   ripng-&gt;<a class="code" href="structripng.html#a79a6db0c820761917a6d5b19c2383dbd">garbage_time</a> = garbage;
<a name="l02455"></a>02455 
<a name="l02456"></a>02456   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02457"></a>02457 }
<a name="l02458"></a>02458 
<a name="l02459"></a>02459 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_ripng_garbage_timer,
<a name="l02460"></a>02460        no_ripng_garbage_timer_cmd,
<a name="l02461"></a>02461        <span class="stringliteral">&quot;no garbage-timer SECOND&quot;</span>,
<a name="l02462"></a>02462        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02463"></a>02463        <span class="stringliteral">&quot;Unset RIPng garbage timer in seconds\n&quot;</span>
<a name="l02464"></a>02464        <span class="stringliteral">&quot;Seconds\n&quot;</span>)
<a name="l02465"></a>02465 {
<a name="l02466"></a>02466   ripng-&gt;<a class="code" href="structripng.html#a79a6db0c820761917a6d5b19c2383dbd">garbage_time</a> = <a class="code" href="ripngd_8h.html#af5189b18679728b2ffec9a1714950bdf">RIPNG_GARBAGE_TIMER_DEFAULT</a>;
<a name="l02467"></a>02467   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02468"></a>02468 }
<a name="l02469"></a>02469 <span class="preprocessor">#endif </span><span class="comment">/* 0 */</span>
<a name="l02470"></a>02470 
<a name="l02471"></a>02471 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (ripng_timers,
<a name="l02472"></a>02472        ripng_timers_cmd,
<a name="l02473"></a>02473        <span class="stringliteral">&quot;timers basic &lt;0-65535&gt; &lt;0-65535&gt; &lt;0-65535&gt;&quot;</span>,
<a name="l02474"></a>02474        <span class="stringliteral">&quot;RIPng timers setup\n&quot;</span>
<a name="l02475"></a>02475        <span class="stringliteral">&quot;Basic timer\n&quot;</span>
<a name="l02476"></a>02476        <span class="stringliteral">&quot;Routing table update timer value in second. Default is 30.\n&quot;</span>
<a name="l02477"></a>02477        <span class="stringliteral">&quot;Routing information timeout timer. Default is 180.\n&quot;</span>
<a name="l02478"></a>02478        <span class="stringliteral">&quot;Garbage collection timer. Default is 120.\n&quot;</span>)
<a name="l02479"></a>02479 {
<a name="l02480"></a>02480   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> update;
<a name="l02481"></a>02481   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> timeout;
<a name="l02482"></a>02482   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> garbage;
<a name="l02483"></a>02483   <span class="keywordtype">char</span> *endptr = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02484"></a>02484 
<a name="l02485"></a>02485   update = strtoul (argv[0], &amp;endptr, 10);
<a name="l02486"></a>02486   <span class="keywordflow">if</span> (update == ULONG_MAX || *endptr != <span class="charliteral">&#39;\0&#39;</span>)
<a name="l02487"></a>02487     {
<a name="l02488"></a>02488       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;update timer value error%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02489"></a>02489       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02490"></a>02490     }
<a name="l02491"></a>02491   
<a name="l02492"></a>02492   timeout = strtoul (argv[1], &amp;endptr, 10);
<a name="l02493"></a>02493   <span class="keywordflow">if</span> (timeout == ULONG_MAX || *endptr != <span class="charliteral">&#39;\0&#39;</span>)
<a name="l02494"></a>02494     {
<a name="l02495"></a>02495       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;timeout timer value error%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02496"></a>02496       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02497"></a>02497     }
<a name="l02498"></a>02498   
<a name="l02499"></a>02499   garbage = strtoul (argv[2], &amp;endptr, 10);
<a name="l02500"></a>02500   <span class="keywordflow">if</span> (garbage == ULONG_MAX || *endptr != <span class="charliteral">&#39;\0&#39;</span>)
<a name="l02501"></a>02501     {
<a name="l02502"></a>02502       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;garbage timer value error%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02503"></a>02503       <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<a name="l02504"></a>02504     }
<a name="l02505"></a>02505 
<a name="l02506"></a>02506   <span class="comment">/* Set each timer value. */</span>
<a name="l02507"></a>02507   ripng-&gt;<a class="code" href="structripng.html#a3bf29c57452baca3c5f5fd1d259c6cd2">update_time</a> = update;
<a name="l02508"></a>02508   ripng-&gt;<a class="code" href="structripng.html#a1e46af0d5dd1bdd43a29901c70772ab5">timeout_time</a> = timeout;
<a name="l02509"></a>02509   ripng-&gt;<a class="code" href="structripng.html#a79a6db0c820761917a6d5b19c2383dbd">garbage_time</a> = garbage;
<a name="l02510"></a>02510 
<a name="l02511"></a>02511   <span class="comment">/* Reset update timer thread. */</span>
<a name="l02512"></a>02512   <a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6">ripng_event</a> (<a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6a7cde26b6d5ea395a7352e85b4c58f026">RIPNG_UPDATE_EVENT</a>, 0);
<a name="l02513"></a>02513 
<a name="l02514"></a>02514   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02515"></a>02515 }
<a name="l02516"></a>02516 
<a name="l02517"></a><a class="code" href="ripngd_8c.html#ae81d796bf672e5725e683140c2d9f5a4">02517</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_ripng_timers,
<a name="l02518"></a>02518        no_ripng_timers_cmd,
<a name="l02519"></a>02519        <span class="stringliteral">&quot;no timers basic&quot;</span>,
<a name="l02520"></a>02520        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02521"></a>02521        <span class="stringliteral">&quot;RIPng timers setup\n&quot;</span>
<a name="l02522"></a>02522        <span class="stringliteral">&quot;Basic timer\n&quot;</span>)
<a name="l02523"></a>02523 {
<a name="l02524"></a>02524   <span class="comment">/* Set each timer value to the default. */</span>
<a name="l02525"></a>02525   ripng-&gt;<a class="code" href="structripng.html#a3bf29c57452baca3c5f5fd1d259c6cd2">update_time</a> = <a class="code" href="ripngd_8h.html#ae1b0d25ee668ca5dfc1f897688d376cb">RIPNG_UPDATE_TIMER_DEFAULT</a>;
<a name="l02526"></a>02526   ripng-&gt;<a class="code" href="structripng.html#a1e46af0d5dd1bdd43a29901c70772ab5">timeout_time</a> = <a class="code" href="ripngd_8h.html#aba6555dd87cff9ea814be873c14ce972">RIPNG_TIMEOUT_TIMER_DEFAULT</a>;
<a name="l02527"></a>02527   ripng-&gt;<a class="code" href="structripng.html#a79a6db0c820761917a6d5b19c2383dbd">garbage_time</a> = <a class="code" href="ripngd_8h.html#af5189b18679728b2ffec9a1714950bdf">RIPNG_GARBAGE_TIMER_DEFAULT</a>;
<a name="l02528"></a>02528 
<a name="l02529"></a>02529   <span class="comment">/* Reset update timer thread. */</span>
<a name="l02530"></a>02530   <a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6">ripng_event</a> (<a class="code" href="ripngd_8h.html#a3e4112ec6022215d721bc3e5aefcb5b6a7cde26b6d5ea395a7352e85b4c58f026">RIPNG_UPDATE_EVENT</a>, 0);
<a name="l02531"></a>02531 
<a name="l02532"></a>02532   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02533"></a>02533 }
<a name="l02534"></a>02534 
<a name="l02535"></a><a class="code" href="ripngd_8c.html#ae7c11fcdc56604d2feb67d1e227a0c9e">02535</a> <a class="code" href="command_8h.html#a7a8f1df2b731617ea7ada9ba5cbdb704">ALIAS</a> (no_ripng_timers,
<a name="l02536"></a>02536        no_ripng_timers_val_cmd,
<a name="l02537"></a>02537        <span class="stringliteral">&quot;no timers basic &lt;0-65535&gt; &lt;0-65535&gt; &lt;0-65535&gt;&quot;</span>,
<a name="l02538"></a>02538        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02539"></a>02539        <span class="stringliteral">&quot;RIPng timers setup\n&quot;</span>
<a name="l02540"></a>02540        <span class="stringliteral">&quot;Basic timer\n&quot;</span>
<a name="l02541"></a>02541        <span class="stringliteral">&quot;Routing table update timer value in second. Default is 30.\n&quot;</span>
<a name="l02542"></a>02542        <span class="stringliteral">&quot;Routing information timeout timer. Default is 180.\n&quot;</span>
<a name="l02543"></a>02543        <span class="stringliteral">&quot;Garbage collection timer. Default is 120.\n&quot;</span>)
<a name="l02544"></a>02544 
<a name="l02545"></a>02545 <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (show_ipv6_protocols, show_ipv6_protocols_cmd,
<a name="l02546"></a>02546        &quot;show ipv6 protocols&quot;,
<a name="l02547"></a>02547        <a class="code" href="command_8h.html#aa19b6d5257cb6f7622eb6b3da8966b32">SHOW_STR</a>
<a name="l02548"></a>02548        <a class="code" href="command_8h.html#a97fa3de206286c30e3efe26747c25352">IPV6_STR</a>
<a name="l02549"></a>02549        &quot;Routing protocol information&quot;)
<a name="l02550"></a>02550 {
<a name="l02551"></a>02551   <span class="keywordflow">if</span> (! ripng)
<a name="l02552"></a>02552     <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02553"></a>02553 
<a name="l02554"></a>02554   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Routing Protocol is \&quot;ripng\&quot;%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02555"></a>02555   
<a name="l02556"></a>02556   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Sending updates every %ld seconds, next due in %d seconds%s&quot;</span>,
<a name="l02557"></a>02557        ripng-&gt;<a class="code" href="structripng.html#a3bf29c57452baca3c5f5fd1d259c6cd2">update_time</a>, 0,
<a name="l02558"></a>02558        <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02559"></a>02559 
<a name="l02560"></a>02560   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Timerout after %ld seconds, garbage correct %ld%s&quot;</span>,
<a name="l02561"></a>02561        ripng-&gt;<a class="code" href="structripng.html#a1e46af0d5dd1bdd43a29901c70772ab5">timeout_time</a>,
<a name="l02562"></a>02562        ripng-&gt;<a class="code" href="structripng.html#a79a6db0c820761917a6d5b19c2383dbd">garbage_time</a>,
<a name="l02563"></a>02563        <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02564"></a>02564 
<a name="l02565"></a>02565   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Outgoing update filter list for all interfaces is not set&quot;</span>);
<a name="l02566"></a>02566   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Incoming update filter list for all interfaces is not set&quot;</span>);
<a name="l02567"></a>02567 
<a name="l02568"></a>02568   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02569"></a>02569 }
<a name="l02570"></a>02570 
<a name="l02571"></a>02571 <span class="comment">/* Please be carefull to use this command. */</span>
<a name="l02572"></a><a class="code" href="ripngd_8c.html#a6eb4d3ff777cc990397334592ce74274">02572</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (ripng_default_information_originate,
<a name="l02573"></a>02573        ripng_default_information_originate_cmd,
<a name="l02574"></a>02574        <span class="stringliteral">&quot;default-information originate&quot;</span>,
<a name="l02575"></a>02575        <span class="stringliteral">&quot;Default route information\n&quot;</span>
<a name="l02576"></a>02576        <span class="stringliteral">&quot;Distribute default route\n&quot;</span>)
<a name="l02577"></a>02577 {
<a name="l02578"></a>02578   <span class="keyword">struct </span>prefix_ipv6 p;
<a name="l02579"></a>02579 
<a name="l02580"></a>02580   <span class="keywordflow">if</span> (! ripng -&gt;default_information) {
<a name="l02581"></a>02581     ripng-&gt;<a class="code" href="structripng.html#a7cb751921b0b074beb3ba0e668cfebd7">default_information</a> = 1;
<a name="l02582"></a>02582 
<a name="l02583"></a>02583     str2prefix_ipv6 (<span class="stringliteral">&quot;::/0&quot;</span>, &amp;p);
<a name="l02584"></a>02584     <a class="code" href="ripngd_8c.html#a8c632303768357a09888dd8081c4c15e">ripng_redistribute_add</a> (<a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>, <a class="code" href="ripngd_8h.html#abea59d5b7e93126bc054927174a952ff">RIPNG_ROUTE_DEFAULT</a>, &amp;p, 0, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l02585"></a>02585   }
<a name="l02586"></a>02586 
<a name="l02587"></a>02587   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02588"></a>02588 }
<a name="l02589"></a>02589 
<a name="l02590"></a><a class="code" href="ripngd_8c.html#ae05b3b82303fb8c695809231318d336b">02590</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (no_ripng_default_information_originate,
<a name="l02591"></a>02591        no_ripng_default_information_originate_cmd,
<a name="l02592"></a>02592        <span class="stringliteral">&quot;no default-information originate&quot;</span>,
<a name="l02593"></a>02593        <a class="code" href="command_8h.html#a5b14384572729c1d1b3755d1bea1f17d">NO_STR</a>
<a name="l02594"></a>02594        <span class="stringliteral">&quot;Default route information\n&quot;</span>
<a name="l02595"></a>02595        <span class="stringliteral">&quot;Distribute default route\n&quot;</span>)
<a name="l02596"></a>02596 {
<a name="l02597"></a>02597   <span class="keyword">struct </span>prefix_ipv6 p;
<a name="l02598"></a>02598 
<a name="l02599"></a>02599   <span class="keywordflow">if</span> (ripng-&gt;<a class="code" href="structripng.html#a7cb751921b0b074beb3ba0e668cfebd7">default_information</a>) {
<a name="l02600"></a>02600     ripng-&gt;<a class="code" href="structripng.html#a7cb751921b0b074beb3ba0e668cfebd7">default_information</a> = 0;
<a name="l02601"></a>02601 
<a name="l02602"></a>02602     str2prefix_ipv6 (<span class="stringliteral">&quot;::/0&quot;</span>, &amp;p);
<a name="l02603"></a>02603     <a class="code" href="ripngd_8c.html#afb915914d0dc2e8129f63bccd8dd53a3">ripng_redistribute_delete</a> (<a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>, <a class="code" href="ripngd_8h.html#abea59d5b7e93126bc054927174a952ff">RIPNG_ROUTE_DEFAULT</a>, &amp;p, 0);
<a name="l02604"></a>02604   }
<a name="l02605"></a>02605 
<a name="l02606"></a>02606   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l02607"></a>02607 }
<a name="l02608"></a>02608 
<a name="l02609"></a>02609 <span class="comment">/* RIPng configuration write function. */</span>
<a name="l02610"></a>02610 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l02611"></a><a class="code" href="ripngd_8c.html#ada0e15a9a33c649f573ffe15da0de924">02611</a> <a class="code" href="ripngd_8c.html#ada0e15a9a33c649f573ffe15da0de924">ripng_config_write</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>)
<a name="l02612"></a>02612 {
<a name="l02613"></a>02613   <span class="keywordtype">int</span> <a class="code" href="ripng__interface_8c.html#aa5b564f815e55f51fbd19624d4d11747">ripng_network_write</a> (<span class="keyword">struct</span> vty *, <span class="keywordtype">int</span>);
<a name="l02614"></a>02614   <span class="keywordtype">void</span> <a class="code" href="ripngd_8h.html#a827869c433933423095ebfb21087c786">ripng_redistribute_write</a> (<span class="keyword">struct</span> vty *, <span class="keywordtype">int</span>);
<a name="l02615"></a>02615   <span class="keywordtype">int</span> write = 0;
<a name="l02616"></a>02616   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rp;
<a name="l02617"></a>02617 
<a name="l02618"></a>02618   <span class="keywordflow">if</span> (ripng)
<a name="l02619"></a>02619     {
<a name="l02620"></a>02620 
<a name="l02621"></a>02621       <span class="comment">/* RIPng router. */</span>
<a name="l02622"></a>02622       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;router ripng%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02623"></a>02623 
<a name="l02624"></a>02624       <span class="keywordflow">if</span> (ripng-&gt;<a class="code" href="structripng.html#a7cb751921b0b074beb3ba0e668cfebd7">default_information</a>)
<a name="l02625"></a>02625     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; default-information originate%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02626"></a>02626 
<a name="l02627"></a>02627       <a class="code" href="ripng__interface_8c.html#aa5b564f815e55f51fbd19624d4d11747">ripng_network_write</a> (vty, 1);
<a name="l02628"></a>02628 
<a name="l02629"></a>02629       <span class="comment">/* RIPng default metric configuration */</span>
<a name="l02630"></a>02630       <span class="keywordflow">if</span> (ripng-&gt;<a class="code" href="structripng.html#ae47d271724aadc1dfde66e4c06829748">default_metric</a> != <a class="code" href="ripngd_8h.html#a6b9a756a2011a2b42c7ce6203b84ced2">RIPNG_DEFAULT_METRIC_DEFAULT</a>)
<a name="l02631"></a>02631         <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; default-metric %d%s&quot;</span>,
<a name="l02632"></a>02632          ripng-&gt;<a class="code" href="structripng.html#ae47d271724aadc1dfde66e4c06829748">default_metric</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02633"></a>02633 
<a name="l02634"></a>02634       <a class="code" href="ripngd_8h.html#a827869c433933423095ebfb21087c786">ripng_redistribute_write</a> (vty, 1);
<a name="l02635"></a>02635 
<a name="l02636"></a>02636       <span class="comment">/* RIP offset-list configuration. */</span>
<a name="l02637"></a>02637       <a class="code" href="ripng__offset_8c.html#afb46ca7695f8af9804eed24f0187c12d">config_write_ripng_offset_list</a> (vty);
<a name="l02638"></a>02638       
<a name="l02639"></a>02639       <span class="comment">/* RIPng aggregate routes. */</span>
<a name="l02640"></a>02640       <span class="keywordflow">for</span> (rp = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (ripng-&gt;<a class="code" href="structripng.html#af4311264fe0c5e48b65a37c4ddd4b1f0">aggregate</a>); rp; rp = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rp))
<a name="l02641"></a>02641     <span class="keywordflow">if</span> (rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02642"></a>02642       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; aggregate-address %s/%d%s&quot;</span>, 
<a name="l02643"></a>02643            inet6_ntoa (rp-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>.u.prefix6),
<a name="l02644"></a>02644            rp-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>, 
<a name="l02645"></a>02645 
<a name="l02646"></a>02646            <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02647"></a>02647 
<a name="l02648"></a>02648       <span class="comment">/* RIPng static routes. */</span>
<a name="l02649"></a>02649       <span class="keywordflow">for</span> (rp = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (ripng-&gt;<a class="code" href="structripng.html#ad5d9e06ed4b673e3788475b0fe26483d">route</a>); rp; rp = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rp))
<a name="l02650"></a>02650     <span class="keywordflow">if</span> (rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02651"></a>02651       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; route %s/%d%s&quot;</span>, inet6_ntoa (rp-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>.u.prefix6),
<a name="l02652"></a>02652            rp-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>,
<a name="l02653"></a>02653            <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02654"></a>02654 
<a name="l02655"></a>02655       <span class="comment">/* RIPng timers configuration. */</span>
<a name="l02656"></a>02656       <span class="keywordflow">if</span> (ripng-&gt;<a class="code" href="structripng.html#a3bf29c57452baca3c5f5fd1d259c6cd2">update_time</a> != <a class="code" href="ripngd_8h.html#ae1b0d25ee668ca5dfc1f897688d376cb">RIPNG_UPDATE_TIMER_DEFAULT</a> ||
<a name="l02657"></a>02657       ripng-&gt;<a class="code" href="structripng.html#a1e46af0d5dd1bdd43a29901c70772ab5">timeout_time</a> != <a class="code" href="ripngd_8h.html#aba6555dd87cff9ea814be873c14ce972">RIPNG_TIMEOUT_TIMER_DEFAULT</a> ||
<a name="l02658"></a>02658       ripng-&gt;<a class="code" href="structripng.html#a79a6db0c820761917a6d5b19c2383dbd">garbage_time</a> != <a class="code" href="ripngd_8h.html#af5189b18679728b2ffec9a1714950bdf">RIPNG_GARBAGE_TIMER_DEFAULT</a>)
<a name="l02659"></a>02659     {
<a name="l02660"></a>02660       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; timers basic %ld %ld %ld%s&quot;</span>,
<a name="l02661"></a>02661            ripng-&gt;<a class="code" href="structripng.html#a3bf29c57452baca3c5f5fd1d259c6cd2">update_time</a>,
<a name="l02662"></a>02662            ripng-&gt;<a class="code" href="structripng.html#a1e46af0d5dd1bdd43a29901c70772ab5">timeout_time</a>,
<a name="l02663"></a>02663            ripng-&gt;<a class="code" href="structripng.html#a79a6db0c820761917a6d5b19c2383dbd">garbage_time</a>,
<a name="l02664"></a>02664            <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02665"></a>02665     }
<a name="l02666"></a>02666 <span class="preprocessor">#if 0</span>
<a name="l02667"></a>02667 <span class="preprocessor"></span>      <span class="keywordflow">if</span> (ripng-&gt;<a class="code" href="structripng.html#a3bf29c57452baca3c5f5fd1d259c6cd2">update_time</a> != <a class="code" href="ripngd_8h.html#ae1b0d25ee668ca5dfc1f897688d376cb">RIPNG_UPDATE_TIMER_DEFAULT</a>)
<a name="l02668"></a>02668     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; update-timer %d%s&quot;</span>, ripng-&gt;<a class="code" href="structripng.html#a3bf29c57452baca3c5f5fd1d259c6cd2">update_time</a>,
<a name="l02669"></a>02669          <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02670"></a>02670       <span class="keywordflow">if</span> (ripng-&gt;<a class="code" href="structripng.html#a1e46af0d5dd1bdd43a29901c70772ab5">timeout_time</a> != <a class="code" href="ripngd_8h.html#aba6555dd87cff9ea814be873c14ce972">RIPNG_TIMEOUT_TIMER_DEFAULT</a>)
<a name="l02671"></a>02671     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; timeout-timer %d%s&quot;</span>, ripng-&gt;<a class="code" href="structripng.html#a1e46af0d5dd1bdd43a29901c70772ab5">timeout_time</a>,
<a name="l02672"></a>02672          <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02673"></a>02673       <span class="keywordflow">if</span> (ripng-&gt;<a class="code" href="structripng.html#a79a6db0c820761917a6d5b19c2383dbd">garbage_time</a> != <a class="code" href="ripngd_8h.html#af5189b18679728b2ffec9a1714950bdf">RIPNG_GARBAGE_TIMER_DEFAULT</a>)
<a name="l02674"></a>02674     <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; garbage-timer %d%s&quot;</span>, ripng-&gt;<a class="code" href="structripng.html#a79a6db0c820761917a6d5b19c2383dbd">garbage_time</a>,
<a name="l02675"></a>02675          <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l02676"></a>02676 <span class="preprocessor">#endif </span><span class="comment">/* 0 */</span>
<a name="l02677"></a>02677 
<a name="l02678"></a>02678       write += <a class="code" href="distribute_8c.html#ae7ad634081da77c96e38824bff4a566a">config_write_distribute</a> (vty);
<a name="l02679"></a>02679 
<a name="l02680"></a>02680       write += <a class="code" href="if__rmap_8h.html#a3499179f8d183d49527984f876e8b6fc">config_write_if_rmap</a> (vty);
<a name="l02681"></a>02681 
<a name="l02682"></a>02682       write++;
<a name="l02683"></a>02683     }
<a name="l02684"></a>02684   <span class="keywordflow">return</span> write;
<a name="l02685"></a>02685 }
<a name="l02686"></a>02686 
<a name="l02687"></a>02687 <span class="comment">/* RIPng node structure. */</span>
<a name="l02688"></a><a class="code" href="ripngd_8c.html#af581db0cb86743df9f243e66eafe45fa">02688</a> <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structcmd__node.html">cmd_node</a> <a class="code" href="ripngd_8c.html#af581db0cb86743df9f243e66eafe45fa">cmd_ripng_node</a> =
<a name="l02689"></a>02689 {
<a name="l02690"></a>02690   <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>,
<a name="l02691"></a>02691   <span class="stringliteral">&quot;%s(config-router)# &quot;</span>,
<a name="l02692"></a>02692   1,
<a name="l02693"></a>02693 };
<a name="l02694"></a>02694 
<a name="l02695"></a>02695 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l02696"></a><a class="code" href="ripngd_8c.html#a81fd48bf8b0fdf28545b040d40eadac9">02696</a> <a class="code" href="ripngd_8c.html#a81fd48bf8b0fdf28545b040d40eadac9">ripng_distribute_update</a> (<span class="keyword">struct</span> <a class="code" href="structdistribute.html">distribute</a> *dist)
<a name="l02697"></a>02697 {
<a name="l02698"></a>02698   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l02699"></a>02699   <span class="keyword">struct </span><a class="code" href="structripng__interface.html">ripng_interface</a> *ri;
<a name="l02700"></a>02700   <span class="keyword">struct </span><a class="code" href="structaccess__list.html">access_list</a> *alist;
<a name="l02701"></a>02701   <span class="keyword">struct </span><a class="code" href="structprefix__list.html">prefix_list</a> *plist;
<a name="l02702"></a>02702 
<a name="l02703"></a>02703   <span class="keywordflow">if</span> (! dist-&gt;<a class="code" href="structdistribute.html#a1b3c9fd2ba22e347deab90590b76f06d">ifname</a>)
<a name="l02704"></a>02704     <span class="keywordflow">return</span>;
<a name="l02705"></a>02705 
<a name="l02706"></a>02706   ifp = <a class="code" href="if_8c.html#ac124a74c213f25a0417e3a8d338606f4">if_lookup_by_name</a> (dist-&gt;<a class="code" href="structdistribute.html#a1b3c9fd2ba22e347deab90590b76f06d">ifname</a>);
<a name="l02707"></a>02707   <span class="keywordflow">if</span> (ifp == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02708"></a>02708     <span class="keywordflow">return</span>;
<a name="l02709"></a>02709 
<a name="l02710"></a>02710   ri = ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l02711"></a>02711 
<a name="l02712"></a>02712   <span class="keywordflow">if</span> (dist-&gt;<a class="code" href="structdistribute.html#ae700fe421ad0a7ec2a039a7d95b94f88">list</a>[<a class="code" href="distribute_8h.html#a1c0e792c3a3f7fbb843cd4f1a3771b47a68442e4b689f5012c35729e2bc04525a">DISTRIBUTE_IN</a>])
<a name="l02713"></a>02713     {
<a name="l02714"></a>02714       alist = <a class="code" href="filter_8c.html#a8cb65cd01015f6673c632cb5b8714b3e">access_list_lookup</a> (<a class="code" href="zebra_8h.html#ad10f30457e426e1d269466d3b6603c3c">AFI_IP6</a>, dist-&gt;<a class="code" href="structdistribute.html#ae700fe421ad0a7ec2a039a7d95b94f88">list</a>[<a class="code" href="distribute_8h.html#a1c0e792c3a3f7fbb843cd4f1a3771b47a68442e4b689f5012c35729e2bc04525a">DISTRIBUTE_IN</a>]);
<a name="l02715"></a>02715       <span class="keywordflow">if</span> (alist)
<a name="l02716"></a>02716     ri-&gt;<a class="code" href="structripng__interface.html#aef30bff6aaa0c37223dacfdb50103c8f">list</a>[<a class="code" href="ripngd_8h.html#a7df8c8ba73eff381ea6a5a4160ceb1d6">RIPNG_FILTER_IN</a>] = alist;
<a name="l02717"></a>02717       <span class="keywordflow">else</span>
<a name="l02718"></a>02718     ri-&gt;<a class="code" href="structripng__interface.html#aef30bff6aaa0c37223dacfdb50103c8f">list</a>[<a class="code" href="ripngd_8h.html#a7df8c8ba73eff381ea6a5a4160ceb1d6">RIPNG_FILTER_IN</a>] = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02719"></a>02719     }
<a name="l02720"></a>02720   <span class="keywordflow">else</span>
<a name="l02721"></a>02721     ri-&gt;<a class="code" href="structripng__interface.html#aef30bff6aaa0c37223dacfdb50103c8f">list</a>[<a class="code" href="ripngd_8h.html#a7df8c8ba73eff381ea6a5a4160ceb1d6">RIPNG_FILTER_IN</a>] = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02722"></a>02722 
<a name="l02723"></a>02723   <span class="keywordflow">if</span> (dist-&gt;<a class="code" href="structdistribute.html#ae700fe421ad0a7ec2a039a7d95b94f88">list</a>[<a class="code" href="distribute_8h.html#a1c0e792c3a3f7fbb843cd4f1a3771b47aa34d81eff0dbfb4b601611cb69ffd894">DISTRIBUTE_OUT</a>])
<a name="l02724"></a>02724     {
<a name="l02725"></a>02725       alist = <a class="code" href="filter_8c.html#a8cb65cd01015f6673c632cb5b8714b3e">access_list_lookup</a> (<a class="code" href="zebra_8h.html#ad10f30457e426e1d269466d3b6603c3c">AFI_IP6</a>, dist-&gt;<a class="code" href="structdistribute.html#ae700fe421ad0a7ec2a039a7d95b94f88">list</a>[<a class="code" href="distribute_8h.html#a1c0e792c3a3f7fbb843cd4f1a3771b47aa34d81eff0dbfb4b601611cb69ffd894">DISTRIBUTE_OUT</a>]);
<a name="l02726"></a>02726       <span class="keywordflow">if</span> (alist)
<a name="l02727"></a>02727     ri-&gt;<a class="code" href="structripng__interface.html#aef30bff6aaa0c37223dacfdb50103c8f">list</a>[<a class="code" href="ripngd_8h.html#a8de1142dbc70369804d0b971bf2c4543">RIPNG_FILTER_OUT</a>] = alist;
<a name="l02728"></a>02728       <span class="keywordflow">else</span>
<a name="l02729"></a>02729     ri-&gt;<a class="code" href="structripng__interface.html#aef30bff6aaa0c37223dacfdb50103c8f">list</a>[<a class="code" href="ripngd_8h.html#a8de1142dbc70369804d0b971bf2c4543">RIPNG_FILTER_OUT</a>] = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02730"></a>02730     }
<a name="l02731"></a>02731   <span class="keywordflow">else</span>
<a name="l02732"></a>02732     ri-&gt;<a class="code" href="structripng__interface.html#aef30bff6aaa0c37223dacfdb50103c8f">list</a>[<a class="code" href="ripngd_8h.html#a8de1142dbc70369804d0b971bf2c4543">RIPNG_FILTER_OUT</a>] = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02733"></a>02733 
<a name="l02734"></a>02734   <span class="keywordflow">if</span> (dist-&gt;<a class="code" href="structdistribute.html#a54a1f165146de6036335780661bcba89">prefix</a>[<a class="code" href="distribute_8h.html#a1c0e792c3a3f7fbb843cd4f1a3771b47a68442e4b689f5012c35729e2bc04525a">DISTRIBUTE_IN</a>])
<a name="l02735"></a>02735     {
<a name="l02736"></a>02736       plist = <a class="code" href="plist_8c.html#adfce5b38dccccdc141ffd3571b73a656">prefix_list_lookup</a> (<a class="code" href="zebra_8h.html#ad10f30457e426e1d269466d3b6603c3c">AFI_IP6</a>, dist-&gt;<a class="code" href="structdistribute.html#a54a1f165146de6036335780661bcba89">prefix</a>[<a class="code" href="distribute_8h.html#a1c0e792c3a3f7fbb843cd4f1a3771b47a68442e4b689f5012c35729e2bc04525a">DISTRIBUTE_IN</a>]);
<a name="l02737"></a>02737       <span class="keywordflow">if</span> (plist)
<a name="l02738"></a>02738     ri-&gt;<a class="code" href="structripng__interface.html#a9d8e484158229437cc77cdc890f13284">prefix</a>[<a class="code" href="ripngd_8h.html#a7df8c8ba73eff381ea6a5a4160ceb1d6">RIPNG_FILTER_IN</a>] = plist;
<a name="l02739"></a>02739       <span class="keywordflow">else</span>
<a name="l02740"></a>02740     ri-&gt;<a class="code" href="structripng__interface.html#a9d8e484158229437cc77cdc890f13284">prefix</a>[<a class="code" href="ripngd_8h.html#a7df8c8ba73eff381ea6a5a4160ceb1d6">RIPNG_FILTER_IN</a>] = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02741"></a>02741     }
<a name="l02742"></a>02742   <span class="keywordflow">else</span>
<a name="l02743"></a>02743     ri-&gt;<a class="code" href="structripng__interface.html#a9d8e484158229437cc77cdc890f13284">prefix</a>[<a class="code" href="ripngd_8h.html#a7df8c8ba73eff381ea6a5a4160ceb1d6">RIPNG_FILTER_IN</a>] = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02744"></a>02744 
<a name="l02745"></a>02745   <span class="keywordflow">if</span> (dist-&gt;<a class="code" href="structdistribute.html#a54a1f165146de6036335780661bcba89">prefix</a>[<a class="code" href="distribute_8h.html#a1c0e792c3a3f7fbb843cd4f1a3771b47aa34d81eff0dbfb4b601611cb69ffd894">DISTRIBUTE_OUT</a>])
<a name="l02746"></a>02746     {
<a name="l02747"></a>02747       plist = <a class="code" href="plist_8c.html#adfce5b38dccccdc141ffd3571b73a656">prefix_list_lookup</a> (<a class="code" href="zebra_8h.html#ad10f30457e426e1d269466d3b6603c3c">AFI_IP6</a>, dist-&gt;<a class="code" href="structdistribute.html#a54a1f165146de6036335780661bcba89">prefix</a>[<a class="code" href="distribute_8h.html#a1c0e792c3a3f7fbb843cd4f1a3771b47aa34d81eff0dbfb4b601611cb69ffd894">DISTRIBUTE_OUT</a>]);
<a name="l02748"></a>02748       <span class="keywordflow">if</span> (plist)
<a name="l02749"></a>02749     ri-&gt;<a class="code" href="structripng__interface.html#a9d8e484158229437cc77cdc890f13284">prefix</a>[<a class="code" href="ripngd_8h.html#a8de1142dbc70369804d0b971bf2c4543">RIPNG_FILTER_OUT</a>] = plist;
<a name="l02750"></a>02750       <span class="keywordflow">else</span>
<a name="l02751"></a>02751     ri-&gt;<a class="code" href="structripng__interface.html#a9d8e484158229437cc77cdc890f13284">prefix</a>[<a class="code" href="ripngd_8h.html#a8de1142dbc70369804d0b971bf2c4543">RIPNG_FILTER_OUT</a>] = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02752"></a>02752     }
<a name="l02753"></a>02753   <span class="keywordflow">else</span>
<a name="l02754"></a>02754     ri-&gt;<a class="code" href="structripng__interface.html#a9d8e484158229437cc77cdc890f13284">prefix</a>[<a class="code" href="ripngd_8h.html#a8de1142dbc70369804d0b971bf2c4543">RIPNG_FILTER_OUT</a>] = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02755"></a>02755 }
<a name="l02756"></a>02756 
<a name="l02757"></a>02757 <span class="keywordtype">void</span>
<a name="l02758"></a><a class="code" href="ripngd_8h.html#a01546a730dee98fc3d3b160a9f69c62d">02758</a> <a class="code" href="ripngd_8c.html#a732ca94fe365ac13ca404cb061e3e6dd">ripng_distribute_update_interface</a> (<span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp)
<a name="l02759"></a>02759 {
<a name="l02760"></a>02760   <span class="keyword">struct </span><a class="code" href="structdistribute.html">distribute</a> *dist;
<a name="l02761"></a>02761 
<a name="l02762"></a>02762   dist = <a class="code" href="distribute_8c.html#ad9181c39aaaf02fa3d608dc7b03aecca">distribute_lookup</a> (ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
<a name="l02763"></a>02763   <span class="keywordflow">if</span> (dist)
<a name="l02764"></a>02764     <a class="code" href="ripngd_8c.html#a81fd48bf8b0fdf28545b040d40eadac9">ripng_distribute_update</a> (dist);
<a name="l02765"></a>02765 }
<a name="l02766"></a>02766 
<a name="l02767"></a>02767 <span class="comment">/* Update all interface&#39;s distribute list. */</span>
<a name="l02768"></a>02768 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l02769"></a><a class="code" href="ripngd_8c.html#a78766f2ff1be0452d6f00745a54fe487">02769</a> <a class="code" href="ripngd_8c.html#a78766f2ff1be0452d6f00745a54fe487">ripng_distribute_update_all</a> (<span class="keyword">struct</span> <a class="code" href="structprefix__list.html">prefix_list</a> *notused)
<a name="l02770"></a>02770 {
<a name="l02771"></a>02771   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l02772"></a>02772   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l02773"></a>02773 
<a name="l02774"></a>02774   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="if_8c.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a>, node, ifp))
<a name="l02775"></a>02775     <a class="code" href="ripngd_8c.html#a732ca94fe365ac13ca404cb061e3e6dd">ripng_distribute_update_interface</a> (ifp);
<a name="l02776"></a>02776 }
<a name="l02777"></a>02777 
<a name="l02778"></a>02778 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l02779"></a><a class="code" href="ripngd_8c.html#ab8941e3347ee2219a8d8abb3aa5516ad">02779</a> <a class="code" href="ripngd_8c.html#ab8941e3347ee2219a8d8abb3aa5516ad">ripng_distribute_update_all_wrapper</a> (<span class="keyword">struct</span> <a class="code" href="structaccess__list.html">access_list</a> *notused)
<a name="l02780"></a>02780 {
<a name="l02781"></a>02781   <a class="code" href="ripngd_8c.html#a78766f2ff1be0452d6f00745a54fe487">ripng_distribute_update_all</a>(<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l02782"></a>02782 }
<a name="l02783"></a>02783 
<a name="l02784"></a>02784 <span class="comment">/* delete all the added ripng routes. */</span>
<a name="l02785"></a>02785 <span class="keywordtype">void</span>
<a name="l02786"></a><a class="code" href="ripngd_8h.html#a56e166c001e37e7ba82af29b44bc9eea">02786</a> <a class="code" href="ripngd_8c.html#a3177bfec34722a80cd9594ceafafcd4f">ripng_clean</a>()
<a name="l02787"></a>02787 {
<a name="l02788"></a>02788   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l02789"></a>02789   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rp;
<a name="l02790"></a>02790   <span class="keyword">struct </span><a class="code" href="structripng__info.html">ripng_info</a> *rinfo;
<a name="l02791"></a>02791 
<a name="l02792"></a>02792   <span class="keywordflow">if</span> (ripng) {
<a name="l02793"></a>02793     <span class="comment">/* Clear RIPng routes */</span>
<a name="l02794"></a>02794     <span class="keywordflow">for</span> (rp = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (ripng-&gt;<a class="code" href="structripng.html#a1bf596b69c5b442145eb509611ad6dc5">table</a>); rp; rp = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rp)) {
<a name="l02795"></a>02795       <span class="keywordflow">if</span> ((rinfo = rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) {
<a name="l02796"></a>02796         <span class="keywordflow">if</span> ((rinfo-&gt;<a class="code" href="structripng__info.html#a5e0f5b836550e9cfcfa36ce1bfb0c046">type</a> == <a class="code" href="zebra_8h.html#af2bdc951784ebaac4f1cec75e7b6313b">ZEBRA_ROUTE_RIPNG</a>) &amp;&amp;
<a name="l02797"></a>02797             (rinfo-&gt;<a class="code" href="structripng__info.html#a6b1f397b0581369f5141e29dc68d6e85">sub_type</a> == <a class="code" href="ripngd_8h.html#a42f5ddc11e604312912cb85448f451bd">RIPNG_ROUTE_RTE</a>))
<a name="l02798"></a>02798           <a class="code" href="ripng__zebra_8c.html#a8c975a52ab3f2a4e4593d75232185382">ripng_zebra_ipv6_delete</a> ((<span class="keyword">struct</span> prefix_ipv6 *)&amp;rp-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>,
<a name="l02799"></a>02799                                    &amp;rinfo-&gt;<a class="code" href="structripng__info.html#a9e4a05b7f0911b7d3805b1c0fa2c45bf">nexthop</a>, rinfo-&gt;<a class="code" href="structripng__info.html#a1ada5456f3b019995ea6f7843aabadf2">metric</a>);
<a name="l02800"></a>02800 
<a name="l02801"></a>02801         <a class="code" href="ripngd_8h.html#ab73283656926a9bd7d6c73343acc4102">RIPNG_TIMER_OFF</a> (rinfo-&gt;<a class="code" href="structripng__info.html#ab3490e49b1b0cacad3b8bb76e20d487f">t_timeout</a>);
<a name="l02802"></a>02802         <a class="code" href="ripngd_8h.html#ab73283656926a9bd7d6c73343acc4102">RIPNG_TIMER_OFF</a> (rinfo-&gt;<a class="code" href="structripng__info.html#a26eebec0ab345768bc791435d2a551b9">t_garbage_collect</a>);
<a name="l02803"></a>02803 
<a name="l02804"></a>02804         rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02805"></a>02805         <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rp);
<a name="l02806"></a>02806 
<a name="l02807"></a>02807         <a class="code" href="ripngd_8c.html#a9dac36daa3fa248437e2cfab0289331c">ripng_info_free</a>(rinfo);
<a name="l02808"></a>02808       }
<a name="l02809"></a>02809     }
<a name="l02810"></a>02810 
<a name="l02811"></a>02811     <span class="comment">/* Cancel the RIPng timers */</span>
<a name="l02812"></a>02812     <a class="code" href="ripngd_8h.html#ab73283656926a9bd7d6c73343acc4102">RIPNG_TIMER_OFF</a> (ripng-&gt;<a class="code" href="structripng.html#aff88d98568318561b02dbee48d24acc1">t_update</a>);
<a name="l02813"></a>02813     <a class="code" href="ripngd_8h.html#ab73283656926a9bd7d6c73343acc4102">RIPNG_TIMER_OFF</a> (ripng-&gt;<a class="code" href="structripng.html#a68b42a2e038716d0c3d226aa04fc056d">t_triggered_update</a>);
<a name="l02814"></a>02814     <a class="code" href="ripngd_8h.html#ab73283656926a9bd7d6c73343acc4102">RIPNG_TIMER_OFF</a> (ripng-&gt;<a class="code" href="structripng.html#a97619acc0996741fbad22b0ac1684cc5">t_triggered_interval</a>);
<a name="l02815"></a>02815 
<a name="l02816"></a>02816     <span class="comment">/* Cancel the read thread */</span>
<a name="l02817"></a>02817     <span class="keywordflow">if</span> (ripng-&gt;<a class="code" href="structripng.html#a29b362daa2745d646257cfe029a114e9">t_read</a>) {
<a name="l02818"></a>02818       <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (ripng-&gt;<a class="code" href="structripng.html#a29b362daa2745d646257cfe029a114e9">t_read</a>);
<a name="l02819"></a>02819       ripng-&gt;<a class="code" href="structripng.html#a29b362daa2745d646257cfe029a114e9">t_read</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02820"></a>02820     }
<a name="l02821"></a>02821 
<a name="l02822"></a>02822     <span class="comment">/* Close the RIPng socket */</span>
<a name="l02823"></a>02823     <span class="keywordflow">if</span> (ripng-&gt;<a class="code" href="structripng.html#a68ed7b98a04fcdefea29cc865bf12918">sock</a> &gt;= 0) {
<a name="l02824"></a>02824       close(ripng-&gt;<a class="code" href="structripng.html#a68ed7b98a04fcdefea29cc865bf12918">sock</a>);
<a name="l02825"></a>02825       ripng-&gt;<a class="code" href="structripng.html#a68ed7b98a04fcdefea29cc865bf12918">sock</a> = -1;
<a name="l02826"></a>02826     }
<a name="l02827"></a>02827 
<a name="l02828"></a>02828     <span class="comment">/* Static RIPng route configuration. */</span>
<a name="l02829"></a>02829     <span class="keywordflow">for</span> (rp = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (ripng-&gt;<a class="code" href="structripng.html#ad5d9e06ed4b673e3788475b0fe26483d">route</a>); rp; rp = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rp))
<a name="l02830"></a>02830       <span class="keywordflow">if</span> (rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) {
<a name="l02831"></a>02831         rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02832"></a>02832         <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rp);
<a name="l02833"></a>02833     }
<a name="l02834"></a>02834 
<a name="l02835"></a>02835     <span class="comment">/* RIPng aggregated prefixes */</span>
<a name="l02836"></a>02836     <span class="keywordflow">for</span> (rp = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (ripng-&gt;<a class="code" href="structripng.html#af4311264fe0c5e48b65a37c4ddd4b1f0">aggregate</a>); rp; rp = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rp))
<a name="l02837"></a>02837       <span class="keywordflow">if</span> (rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) {
<a name="l02838"></a>02838           rp-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02839"></a>02839           <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rp);
<a name="l02840"></a>02840     }
<a name="l02841"></a>02841 
<a name="l02842"></a>02842     <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="zebra_8h.html#aec97442680d773fd62f9af5c9426b842">ZEBRA_ROUTE_MAX</a>; i++)
<a name="l02843"></a>02843       <span class="keywordflow">if</span> (ripng-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[i].<a class="code" href="structripng.html#ac5d479513619aac458e3ae04c0814632">name</a>)
<a name="l02844"></a>02844         free (ripng-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[i].<a class="code" href="structripng.html#ac5d479513619aac458e3ae04c0814632">name</a>);
<a name="l02845"></a>02845 
<a name="l02846"></a>02846     <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba27328f215d57f8800a0ec495235b1c01">MTYPE_ROUTE_TABLE</a>, ripng-&gt;<a class="code" href="structripng.html#a1bf596b69c5b442145eb509611ad6dc5">table</a>);
<a name="l02847"></a>02847     <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba27328f215d57f8800a0ec495235b1c01">MTYPE_ROUTE_TABLE</a>, ripng-&gt;<a class="code" href="structripng.html#ad5d9e06ed4b673e3788475b0fe26483d">route</a>);
<a name="l02848"></a>02848     <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba27328f215d57f8800a0ec495235b1c01">MTYPE_ROUTE_TABLE</a>, ripng-&gt;<a class="code" href="structripng.html#af4311264fe0c5e48b65a37c4ddd4b1f0">aggregate</a>);
<a name="l02849"></a>02849 
<a name="l02850"></a>02850     <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167bad97034187d4ff905469ad8d671c1b8e2">MTYPE_RIPNG</a>, ripng);
<a name="l02851"></a>02851     ripng = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02852"></a>02852   } <span class="comment">/* if (ripng) */</span>
<a name="l02853"></a>02853 
<a name="l02854"></a>02854   <a class="code" href="ripng__interface_8c.html#a27e40a30e5cf221a7726e9af62076e78">ripng_clean_network</a>();
<a name="l02855"></a>02855   <a class="code" href="ripng__interface_8c.html#a124b437dd727fda6114ddf95455dd37a">ripng_passive_interface_clean</a> ();
<a name="l02856"></a>02856   <a class="code" href="ripng__offset_8c.html#af4e400ed21dfc4914247e768206236a1">ripng_offset_clean</a> ();
<a name="l02857"></a>02857   <a class="code" href="ripng__interface_8c.html#a475ddfe9ad26ca0bc8df827237675495">ripng_interface_clean</a> ();
<a name="l02858"></a>02858   <a class="code" href="ripng__zebra_8c.html#ad6b24bf9a6c9e7aab0645f0c122c76cb">ripng_redistribute_clean</a> ();
<a name="l02859"></a>02859 }
<a name="l02860"></a>02860 
<a name="l02861"></a>02861 <span class="comment">/* Reset all values to the default settings. */</span>
<a name="l02862"></a>02862 <span class="keywordtype">void</span>
<a name="l02863"></a><a class="code" href="ripngd_8h.html#a19d980b9eba1117f5b6f484032bcba96">02863</a> <a class="code" href="ripngd_8c.html#a187ba42fd37feda221675baecc2fe06a">ripng_reset</a> ()
<a name="l02864"></a>02864 {
<a name="l02865"></a>02865   <span class="comment">/* Call ripd related reset functions. */</span>
<a name="l02866"></a>02866   <a class="code" href="ripng__debug_8c.html#a308554f9aa9505e2fc0fd7a9053dfb72">ripng_debug_reset</a> ();
<a name="l02867"></a>02867   <a class="code" href="ripngd_8h.html#a1ef554b2365f59c62ad99ef58cf167f3">ripng_route_map_reset</a> ();
<a name="l02868"></a>02868 
<a name="l02869"></a>02869   <span class="comment">/* Call library reset functions. */</span>
<a name="l02870"></a>02870   <a class="code" href="vty_8c.html#a637ad9b0152e5e5559bc0c05db07318e">vty_reset</a> ();
<a name="l02871"></a>02871   <a class="code" href="filter_8c.html#a6d46b3b0526d8e0e8dbed60d7f6a695d">access_list_reset</a> ();
<a name="l02872"></a>02872   <a class="code" href="plist_8c.html#a6d3ae1194d033d0d7cf9c3b54a7542ac">prefix_list_reset</a> ();
<a name="l02873"></a>02873 
<a name="l02874"></a>02874   <a class="code" href="distribute_8c.html#a58b49387fef55775ead5abc2e2c8d22a">distribute_list_reset</a> ();
<a name="l02875"></a>02875 
<a name="l02876"></a>02876   <a class="code" href="ripng__interface_8c.html#a6b3c3918c93d58707c68e515572510e4">ripng_interface_reset</a> ();
<a name="l02877"></a>02877 
<a name="l02878"></a>02878   <a class="code" href="ripng__zebra_8c.html#a6dadcd39849b0d7cf80c18c5dfe121bf">ripng_zclient_reset</a> ();
<a name="l02879"></a>02879 }
<a name="l02880"></a>02880 
<a name="l02881"></a>02881 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l02882"></a><a class="code" href="ripngd_8c.html#a1e87027590353c0d6ead4758d875cb19">02882</a> <a class="code" href="ripngd_8c.html#a1e87027590353c0d6ead4758d875cb19">ripng_if_rmap_update</a> (<span class="keyword">struct</span> <a class="code" href="structif__rmap.html">if_rmap</a> *<a class="code" href="structif__rmap.html">if_rmap</a>)
<a name="l02883"></a>02883 {
<a name="l02884"></a>02884   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l02885"></a>02885   <span class="keyword">struct </span><a class="code" href="structripng__interface.html">ripng_interface</a> *ri;
<a name="l02886"></a>02886   <span class="keyword">struct </span><a class="code" href="structroute__map.html">route_map</a> *<a class="code" href="structrmap.html">rmap</a>;
<a name="l02887"></a>02887 
<a name="l02888"></a>02888   ifp = <a class="code" href="if_8c.html#ac124a74c213f25a0417e3a8d338606f4">if_lookup_by_name</a> (if_rmap-&gt;<a class="code" href="structif__rmap.html#a50262f0070b0fdf5635807d44d74d888">ifname</a>);
<a name="l02889"></a>02889   <span class="keywordflow">if</span> (ifp == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l02890"></a>02890     <span class="keywordflow">return</span>;
<a name="l02891"></a>02891 
<a name="l02892"></a>02892   ri = ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
<a name="l02893"></a>02893 
<a name="l02894"></a>02894   <span class="keywordflow">if</span> (if_rmap-&gt;<a class="code" href="structif__rmap.html#a819d05cdf97dee8b73c52fa3f50337dd">routemap</a>[<a class="code" href="if__rmap_8h.html#a0c6e4fc98612f8d9030b7e4d4f04e9dda3ff0fd7e5f7b91e24ea8c0582fdb1a1e">IF_RMAP_IN</a>])
<a name="l02895"></a>02895     {
<a name="l02896"></a>02896       rmap = <a class="code" href="routemap_8c.html#a52006340e589dda4244d35cafc9f6f10">route_map_lookup_by_name</a> (if_rmap-&gt;<a class="code" href="structif__rmap.html#a819d05cdf97dee8b73c52fa3f50337dd">routemap</a>[<a class="code" href="if__rmap_8h.html#a0c6e4fc98612f8d9030b7e4d4f04e9dda3ff0fd7e5f7b91e24ea8c0582fdb1a1e">IF_RMAP_IN</a>]);
<a name="l02897"></a>02897       <span class="keywordflow">if</span> (rmap)
<a name="l02898"></a>02898     ri-&gt;<a class="code" href="structripng__interface.html#a5042d9aa0ee3dc57149209d17b33307c">routemap</a>[<a class="code" href="if__rmap_8h.html#a0c6e4fc98612f8d9030b7e4d4f04e9dda3ff0fd7e5f7b91e24ea8c0582fdb1a1e">IF_RMAP_IN</a>] = rmap;
<a name="l02899"></a>02899       <span class="keywordflow">else</span>
<a name="l02900"></a>02900     ri-&gt;<a class="code" href="structripng__interface.html#a5042d9aa0ee3dc57149209d17b33307c">routemap</a>[<a class="code" href="if__rmap_8h.html#a0c6e4fc98612f8d9030b7e4d4f04e9dda3ff0fd7e5f7b91e24ea8c0582fdb1a1e">IF_RMAP_IN</a>] = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02901"></a>02901     }
<a name="l02902"></a>02902   <span class="keywordflow">else</span>
<a name="l02903"></a>02903     ri-&gt;<a class="code" href="structripng__interface.html#a5042d9aa0ee3dc57149209d17b33307c">routemap</a>[<a class="code" href="ripngd_8h.html#a7df8c8ba73eff381ea6a5a4160ceb1d6">RIPNG_FILTER_IN</a>] = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02904"></a>02904 
<a name="l02905"></a>02905   <span class="keywordflow">if</span> (if_rmap-&gt;<a class="code" href="structif__rmap.html#a819d05cdf97dee8b73c52fa3f50337dd">routemap</a>[<a class="code" href="if__rmap_8h.html#a0c6e4fc98612f8d9030b7e4d4f04e9dda4db65e82ab9d617ec4b4ebe16038947e">IF_RMAP_OUT</a>])
<a name="l02906"></a>02906     {
<a name="l02907"></a>02907       rmap = <a class="code" href="routemap_8c.html#a52006340e589dda4244d35cafc9f6f10">route_map_lookup_by_name</a> (if_rmap-&gt;<a class="code" href="structif__rmap.html#a819d05cdf97dee8b73c52fa3f50337dd">routemap</a>[<a class="code" href="if__rmap_8h.html#a0c6e4fc98612f8d9030b7e4d4f04e9dda4db65e82ab9d617ec4b4ebe16038947e">IF_RMAP_OUT</a>]);
<a name="l02908"></a>02908       <span class="keywordflow">if</span> (rmap)
<a name="l02909"></a>02909     ri-&gt;<a class="code" href="structripng__interface.html#a5042d9aa0ee3dc57149209d17b33307c">routemap</a>[<a class="code" href="if__rmap_8h.html#a0c6e4fc98612f8d9030b7e4d4f04e9dda4db65e82ab9d617ec4b4ebe16038947e">IF_RMAP_OUT</a>] = rmap;
<a name="l02910"></a>02910       <span class="keywordflow">else</span>
<a name="l02911"></a>02911     ri-&gt;<a class="code" href="structripng__interface.html#a5042d9aa0ee3dc57149209d17b33307c">routemap</a>[<a class="code" href="if__rmap_8h.html#a0c6e4fc98612f8d9030b7e4d4f04e9dda4db65e82ab9d617ec4b4ebe16038947e">IF_RMAP_OUT</a>] = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02912"></a>02912     }
<a name="l02913"></a>02913   <span class="keywordflow">else</span>
<a name="l02914"></a>02914     ri-&gt;<a class="code" href="structripng__interface.html#a5042d9aa0ee3dc57149209d17b33307c">routemap</a>[<a class="code" href="ripngd_8h.html#a8de1142dbc70369804d0b971bf2c4543">RIPNG_FILTER_OUT</a>] = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l02915"></a>02915 }
<a name="l02916"></a>02916 
<a name="l02917"></a>02917 <span class="keywordtype">void</span>
<a name="l02918"></a><a class="code" href="ripngd_8h.html#a718f180323c46ea3242478720db4602f">02918</a> <a class="code" href="ripngd_8c.html#a7809da60dce4d4755e2a2a8faecd26da">ripng_if_rmap_update_interface</a> (<span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp)
<a name="l02919"></a>02919 {
<a name="l02920"></a>02920   <span class="keyword">struct </span><a class="code" href="structif__rmap.html">if_rmap</a> *<a class="code" href="structif__rmap.html">if_rmap</a>;
<a name="l02921"></a>02921 
<a name="l02922"></a>02922   if_rmap = <a class="code" href="if__rmap_8c.html#ac6203bfe7b017bdcf8c4cb23c9eb7e6d">if_rmap_lookup</a> (ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
<a name="l02923"></a>02923   <span class="keywordflow">if</span> (if_rmap)
<a name="l02924"></a>02924     <a class="code" href="ripngd_8c.html#a1e87027590353c0d6ead4758d875cb19">ripng_if_rmap_update</a> (if_rmap);
<a name="l02925"></a>02925 }
<a name="l02926"></a>02926 
<a name="l02927"></a>02927 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l02928"></a><a class="code" href="ripngd_8c.html#af8b4a863eeb63eba7ccd54bfb73f8073">02928</a> <a class="code" href="ripngd_8c.html#af8b4a863eeb63eba7ccd54bfb73f8073">ripng_routemap_update_redistribute</a> (<span class="keywordtype">void</span>)
<a name="l02929"></a>02929 {
<a name="l02930"></a>02930   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l02931"></a>02931 
<a name="l02932"></a>02932   <span class="keywordflow">if</span> (ripng)
<a name="l02933"></a>02933     {
<a name="l02934"></a>02934       <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="zebra_8h.html#aec97442680d773fd62f9af5c9426b842">ZEBRA_ROUTE_MAX</a>; i++) 
<a name="l02935"></a>02935     {
<a name="l02936"></a>02936       <span class="keywordflow">if</span> (ripng-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[i].<a class="code" href="structripng.html#ac5d479513619aac458e3ae04c0814632">name</a>)
<a name="l02937"></a>02937         ripng-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].<a class="code" href="structripng.html#a98512a1190c2b92964d03d0ef0935766">map</a> = 
<a name="l02938"></a>02938           <a class="code" href="routemap_8c.html#a52006340e589dda4244d35cafc9f6f10">route_map_lookup_by_name</a> (ripng-&gt;<a class="code" href="structripng.html#ad3374ac5094640665f0e16defd276054">route_map</a>[i].<a class="code" href="structripng.html#ac5d479513619aac458e3ae04c0814632">name</a>);
<a name="l02939"></a>02939     }
<a name="l02940"></a>02940     }
<a name="l02941"></a>02941 }
<a name="l02942"></a>02942 
<a name="l02943"></a>02943 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l02944"></a><a class="code" href="ripngd_8c.html#a88d10316a3003a27cc0146a4dc983ee3">02944</a> <a class="code" href="ripngd_8c.html#a88d10316a3003a27cc0146a4dc983ee3">ripng_routemap_update</a> (<span class="keyword">const</span> <span class="keywordtype">char</span> *unused)
<a name="l02945"></a>02945 {
<a name="l02946"></a>02946   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l02947"></a>02947   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l02948"></a>02948 
<a name="l02949"></a>02949   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="if_8c.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a>, node, ifp))
<a name="l02950"></a>02950     <a class="code" href="ripngd_8c.html#a7809da60dce4d4755e2a2a8faecd26da">ripng_if_rmap_update_interface</a> (ifp);
<a name="l02951"></a>02951 
<a name="l02952"></a>02952   <a class="code" href="ripngd_8c.html#af8b4a863eeb63eba7ccd54bfb73f8073">ripng_routemap_update_redistribute</a> ();
<a name="l02953"></a>02953 }
<a name="l02954"></a>02954 
<a name="l02955"></a>02955 <span class="comment">/* Initialize ripng structure and set commands. */</span>
<a name="l02956"></a>02956 <span class="keywordtype">void</span>
<a name="l02957"></a><a class="code" href="ripngd_8h.html#ade1749e94f55914da74cc457df31e5a9">02957</a> <a class="code" href="ripngd_8c.html#a38787ccbf589b95fd566053c97c7ca7a">ripng_init</a> ()
<a name="l02958"></a>02958 {
<a name="l02959"></a>02959   <span class="comment">/* Randomize. */</span>
<a name="l02960"></a>02960   srand (time (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>));
<a name="l02961"></a>02961 
<a name="l02962"></a>02962   <span class="comment">/* Install RIPNG_NODE. */</span>
<a name="l02963"></a>02963   <a class="code" href="command_8c.html#a7ee8a7c258e1e5a6e3ff6173dd1658e3">install_node</a> (&amp;cmd_ripng_node, <a class="code" href="ripngd_8c.html#ada0e15a9a33c649f573ffe15da0de924">ripng_config_write</a>);
<a name="l02964"></a>02964 
<a name="l02965"></a>02965   <span class="comment">/* Install ripng commands. */</span>
<a name="l02966"></a>02966   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;show_ipv6_ripng_cmd);
<a name="l02967"></a>02967   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;show_ipv6_ripng_status_cmd);
<a name="l02968"></a>02968 
<a name="l02969"></a>02969   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;show_ipv6_ripng_cmd);
<a name="l02970"></a>02970   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;show_ipv6_ripng_status_cmd);
<a name="l02971"></a>02971 
<a name="l02972"></a>02972   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;router_ripng_cmd);
<a name="l02973"></a>02973   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;no_router_ripng_cmd);
<a name="l02974"></a>02974 
<a name="l02975"></a>02975   <a class="code" href="command_8h.html#affb2f399c88b8a225b2719bbe928e4de">install_default</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>);
<a name="l02976"></a>02976   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;ripng_route_cmd);
<a name="l02977"></a>02977   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;no_ripng_route_cmd);
<a name="l02978"></a>02978   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;ripng_aggregate_address_cmd);
<a name="l02979"></a>02979   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;no_ripng_aggregate_address_cmd);
<a name="l02980"></a>02980 
<a name="l02981"></a>02981   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;ripng_default_metric_cmd);
<a name="l02982"></a>02982   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;no_ripng_default_metric_cmd);
<a name="l02983"></a>02983   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;no_ripng_default_metric_val_cmd);
<a name="l02984"></a>02984 
<a name="l02985"></a>02985   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;ripng_timers_cmd);
<a name="l02986"></a>02986   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;no_ripng_timers_cmd);
<a name="l02987"></a>02987   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;no_ripng_timers_val_cmd);
<a name="l02988"></a>02988 <span class="preprocessor">#if 0</span>
<a name="l02989"></a>02989 <span class="preprocessor"></span>  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;ripng_update_timer_cmd);
<a name="l02990"></a>02990   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;no_ripng_update_timer_cmd);
<a name="l02991"></a>02991   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;ripng_timeout_timer_cmd);
<a name="l02992"></a>02992   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;no_ripng_timeout_timer_cmd);
<a name="l02993"></a>02993   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;ripng_garbage_timer_cmd);
<a name="l02994"></a>02994   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;no_ripng_garbage_timer_cmd);
<a name="l02995"></a>02995 <span class="preprocessor">#endif </span><span class="comment">/* 0 */</span>
<a name="l02996"></a>02996 
<a name="l02997"></a>02997   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;ripng_default_information_originate_cmd);
<a name="l02998"></a>02998   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>, &amp;no_ripng_default_information_originate_cmd);
<a name="l02999"></a>02999 
<a name="l03000"></a>03000   <a class="code" href="ripng__interface_8c.html#ab3b2b8d88f463ea65c8708b8524d0ca3">ripng_if_init</a> ();
<a name="l03001"></a>03001   <a class="code" href="ripng__debug_8c.html#aab324f9542057b297b016c02fa251eb4">ripng_debug_init</a> ();
<a name="l03002"></a>03002 
<a name="l03003"></a>03003   <span class="comment">/* Access list install. */</span>
<a name="l03004"></a>03004   <a class="code" href="filter_8c.html#a7794dbb70ed7bbd7a248853d572fa38c">access_list_init</a> ();
<a name="l03005"></a>03005   <a class="code" href="filter_8c.html#afc932e79e55881b9a1c1e700ec1e0cb4">access_list_add_hook</a> (<a class="code" href="ripngd_8c.html#ab8941e3347ee2219a8d8abb3aa5516ad">ripng_distribute_update_all_wrapper</a>);
<a name="l03006"></a>03006   <a class="code" href="filter_8c.html#a7696ba96f8b2cf3a96dbfb2e161d6752">access_list_delete_hook</a> (<a class="code" href="ripngd_8c.html#ab8941e3347ee2219a8d8abb3aa5516ad">ripng_distribute_update_all_wrapper</a>);
<a name="l03007"></a>03007 
<a name="l03008"></a>03008   <span class="comment">/* Prefix list initialize.*/</span>
<a name="l03009"></a>03009   <a class="code" href="plist_8c.html#a198373358b94c257a9a0cb6d02cf8eac">prefix_list_init</a> ();
<a name="l03010"></a>03010   <a class="code" href="plist_8c.html#add7d0c6cd7985233eb409608b9bf248b">prefix_list_add_hook</a> (<a class="code" href="ripngd_8c.html#a78766f2ff1be0452d6f00745a54fe487">ripng_distribute_update_all</a>);
<a name="l03011"></a>03011   <a class="code" href="plist_8c.html#a28384c5c606bb185263f9d8f7ad4fa98">prefix_list_delete_hook</a> (<a class="code" href="ripngd_8c.html#a78766f2ff1be0452d6f00745a54fe487">ripng_distribute_update_all</a>);
<a name="l03012"></a>03012 
<a name="l03013"></a>03013   <span class="comment">/* Distribute list install. */</span>
<a name="l03014"></a>03014   <a class="code" href="distribute_8c.html#a6abacd35439f8cdfeec69c5da166d95c">distribute_list_init</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>);
<a name="l03015"></a>03015   <a class="code" href="distribute_8c.html#a22701b77da78b46771dc146fca555dae">distribute_list_add_hook</a> (<a class="code" href="ripngd_8c.html#a81fd48bf8b0fdf28545b040d40eadac9">ripng_distribute_update</a>);
<a name="l03016"></a>03016   <a class="code" href="distribute_8c.html#a392e0d894cc65ce8667b8133ced5a0bb">distribute_list_delete_hook</a> (<a class="code" href="ripngd_8c.html#a81fd48bf8b0fdf28545b040d40eadac9">ripng_distribute_update</a>);
<a name="l03017"></a>03017 
<a name="l03018"></a>03018   <span class="comment">/* Route-map for interface. */</span>
<a name="l03019"></a>03019   <a class="code" href="ripng__routemap_8c.html#a23c33335770d5d0caf738d3cd983add1">ripng_route_map_init</a> ();
<a name="l03020"></a>03020   <a class="code" href="ripng__offset_8c.html#ac7f3eb556962aad48afb732d1031c258">ripng_offset_init</a> ();
<a name="l03021"></a>03021 
<a name="l03022"></a>03022   <a class="code" href="routemap_8c.html#afd64a010c9f8f9cf35788b065f540eea">route_map_add_hook</a> (<a class="code" href="ripngd_8c.html#a88d10316a3003a27cc0146a4dc983ee3">ripng_routemap_update</a>);
<a name="l03023"></a>03023   <a class="code" href="routemap_8c.html#a60b69b789fa511ded8504c5b20fb63d4">route_map_delete_hook</a> (<a class="code" href="ripngd_8c.html#a88d10316a3003a27cc0146a4dc983ee3">ripng_routemap_update</a>);
<a name="l03024"></a>03024 
<a name="l03025"></a>03025   <a class="code" href="if__rmap_8c.html#acb2b07615aac7f6416f0fa6f4717a4ec">if_rmap_init</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a54754d9b49687991ae5cf0ba4d32dab2">RIPNG_NODE</a>);
<a name="l03026"></a>03026   <a class="code" href="if__rmap_8c.html#a58763bcdfc9073a6e505c1597acc5304">if_rmap_hook_add</a> (<a class="code" href="ripngd_8c.html#a1e87027590353c0d6ead4758d875cb19">ripng_if_rmap_update</a>);
<a name="l03027"></a>03027   <a class="code" href="if__rmap_8c.html#acc9bf1191edf4196d213b658034938e6">if_rmap_hook_delete</a> (<a class="code" href="ripngd_8c.html#a1e87027590353c0d6ead4758d875cb19">ripng_if_rmap_update</a>);
<a name="l03028"></a>03028 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="ripngd_8c.html">ripngd.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:08 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
