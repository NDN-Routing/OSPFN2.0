<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: bgpd/bgp_ecommunity.h File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('bgp__ecommunity_8h.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Defines</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">bgpd/bgp_ecommunity.h File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><img src="bgp__ecommunity_8h__dep__incl.png" border="0" usemap="#bgpd_2bgp__ecommunity_8hdep" alt=""/></div>
<map name="bgpd_2bgp__ecommunity_8hdep" id="bgpd_2bgp__ecommunity_8hdep">
<area shape="rect" id="node3" href="bgp__attr_8c.html" title="bgpd/bgp_attr.c" alt="" coords="5,80,125,107"/><area shape="rect" id="node5" href="bgp__clist_8c.html" title="bgpd/bgp_clist.c" alt="" coords="150,80,273,107"/><area shape="rect" id="node7" href="bgp__ecommunity_8c.html" title="bgpd/bgp_ecommunity.c" alt="" coords="299,80,472,107"/><area shape="rect" id="node9" href="bgp__packet_8c.html" title="bgpd/bgp_packet.c" alt="" coords="497,80,636,107"/><area shape="rect" id="node11" href="bgp__route_8c.html" title="bgpd/bgp_route.c" alt="" coords="661,80,792,107"/><area shape="rect" id="node13" href="bgp__routemap_8c.html" title="bgpd/bgp_routemap.c" alt="" coords="816,80,973,107"/><area shape="rect" id="node15" href="bgp__vty_8c.html" title="bgpd/bgp_vty.c" alt="" coords="998,80,1116,107"/><area shape="rect" id="node17" href="ecommunity__test_8c.html" title="tests/ecommunity_test.c" alt="" coords="1141,80,1315,107"/></map>
</div>
</div>
<p><a href="bgp__ecommunity_8h_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structecommunity.html">ecommunity</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structecommunity__val.html">ecommunity_val</a></td></tr>
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#a2a7257f261521fc390fe77823e002f8e">ECOMMUNITY_ENCODE_AS</a>&#160;&#160;&#160;0x00</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#add3332bd43b2bf6671248d62d7a35d76">ECOMMUNITY_ENCODE_IP</a>&#160;&#160;&#160;0x01</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#a3dcbf837dbbf16fd378107e0eca189c1">ECOMMUNITY_ENCODE_AS4</a>&#160;&#160;&#160;0x02</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#aec21b73c39c6171daf21da2bc83d8b80">ECOMMUNITY_ROUTE_TARGET</a>&#160;&#160;&#160;0x02</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#afc5aa27c7ca7236b4ff369bf01828f73">ECOMMUNITY_SITE_ORIGIN</a>&#160;&#160;&#160;0x03</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#ae48e2763a7862e95cd480e85c0295bd9">ECOMMUNITY_FORMAT_ROUTE_MAP</a>&#160;&#160;&#160;0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#acfff5b888f4007173f66dc1f83ad4e94">ECOMMUNITY_FORMAT_COMMUNITY_LIST</a>&#160;&#160;&#160;1</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#ae776d41484b625ccb00ad109d4965451">ECOMMUNITY_FORMAT_DISPLAY</a>&#160;&#160;&#160;2</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#a54885db56ce5049e450fc8ea15bfbed8">ECOMMUNITY_SIZE</a>&#160;&#160;&#160;8</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#a7268ba06edb4fd02a8c2ba4b9a5d5519">ECOMMUNITY_FLAG_NON_TRANSITIVE</a>&#160;&#160;&#160;0x40</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#a7b8f2920f9a3bd6da9b025c300743e97">ecom_length</a>(<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)&#160;&#160;&#160;((<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)-&gt;size * ECOMMUNITY_SIZE)</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#a51951f652cd586d53176801edb217319">ecommunity_init</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#a3909ede3d29a88faad854a2833ec9322">ecommunity_finish</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#a681f44cef491568dfc1d0328ef19d500">ecommunity_free</a> (struct <a class="el" href="structecommunity.html">ecommunity</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structecommunity.html">ecommunity</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#a41a92d80d132ec088bbfd1072944c385">ecommunity_parse</a> (u_int8_t *, u_short)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structecommunity.html">ecommunity</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#a6e9fc4f01f922751c7f410edf7a93cad">ecommunity_dup</a> (struct <a class="el" href="structecommunity.html">ecommunity</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structecommunity.html">ecommunity</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#a3c55a503f9803a70f2b8392a900d7d96">ecommunity_merge</a> (struct <a class="el" href="structecommunity.html">ecommunity</a> *, struct <a class="el" href="structecommunity.html">ecommunity</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structecommunity.html">ecommunity</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#aa6b2b50991689bc8b36b3d71900705e8">ecommunity_intern</a> (struct <a class="el" href="structecommunity.html">ecommunity</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#afcfe4a392cf5997e08e3e798d74df6ef">ecommunity_cmp</a> (const void *, const void *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#af356e82da85fe44e2a8ebcf88b3b1c15">ecommunity_unintern</a> (struct <a class="el" href="structecommunity.html">ecommunity</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#a1893a1f68e0ed988ca076a37e16f0f5b">ecommunity_hash_make</a> (void *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structecommunity.html">ecommunity</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#aa75e237fe48f20efd1bdbf21e4ad9a2c">ecommunity_str2com</a> (const char *, int, int)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#a1bb2cca537fdd20657d7d6e42c479b3d">ecommunity_ecom2str</a> (struct <a class="el" href="structecommunity.html">ecommunity</a> *, int)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#afee1bdfd1ae2759ddcecc45ece967cdb">ecommunity_match</a> (const struct <a class="el" href="structecommunity.html">ecommunity</a> *, const struct <a class="el" href="structecommunity.html">ecommunity</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__ecommunity_8h.html#aaa4f85c53eaf505aab0798a3323cf252">ecommunity_str</a> (struct <a class="el" href="structecommunity.html">ecommunity</a> *)</td></tr>
</table>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="a7b8f2920f9a3bd6da9b025c300743e97"></a><!-- doxytag: member="bgp_ecommunity.h::ecom_length" ref="a7b8f2920f9a3bd6da9b025c300743e97" args="(X)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ecom_length</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a></td><td>)</td>
          <td>&#160;&#160;&#160;((<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)-&gt;size * ECOMMUNITY_SIZE)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8h_source.html#l00066">66</a> of file <a class="el" href="bgp__ecommunity_8h_source.html">bgp_ecommunity.h</a>.</p>

</div>
</div>
<a class="anchor" id="a2a7257f261521fc390fe77823e002f8e"></a><!-- doxytag: member="bgp_ecommunity.h::ECOMMUNITY_ENCODE_AS" ref="a2a7257f261521fc390fe77823e002f8e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ECOMMUNITY_ENCODE_AS&#160;&#160;&#160;0x00</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8h_source.html#l00025">25</a> of file <a class="el" href="bgp__ecommunity_8h_source.html">bgp_ecommunity.h</a>.</p>

</div>
</div>
<a class="anchor" id="a3dcbf837dbbf16fd378107e0eca189c1"></a><!-- doxytag: member="bgp_ecommunity.h::ECOMMUNITY_ENCODE_AS4" ref="a3dcbf837dbbf16fd378107e0eca189c1" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ECOMMUNITY_ENCODE_AS4&#160;&#160;&#160;0x02</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8h_source.html#l00027">27</a> of file <a class="el" href="bgp__ecommunity_8h_source.html">bgp_ecommunity.h</a>.</p>

</div>
</div>
<a class="anchor" id="add3332bd43b2bf6671248d62d7a35d76"></a><!-- doxytag: member="bgp_ecommunity.h::ECOMMUNITY_ENCODE_IP" ref="add3332bd43b2bf6671248d62d7a35d76" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ECOMMUNITY_ENCODE_IP&#160;&#160;&#160;0x01</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8h_source.html#l00026">26</a> of file <a class="el" href="bgp__ecommunity_8h_source.html">bgp_ecommunity.h</a>.</p>

</div>
</div>
<a class="anchor" id="a7268ba06edb4fd02a8c2ba4b9a5d5519"></a><!-- doxytag: member="bgp_ecommunity.h::ECOMMUNITY_FLAG_NON_TRANSITIVE" ref="a7268ba06edb4fd02a8c2ba4b9a5d5519" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ECOMMUNITY_FLAG_NON_TRANSITIVE&#160;&#160;&#160;0x40</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8h_source.html#l00042">42</a> of file <a class="el" href="bgp__ecommunity_8h_source.html">bgp_ecommunity.h</a>.</p>

</div>
</div>
<a class="anchor" id="acfff5b888f4007173f66dc1f83ad4e94"></a><!-- doxytag: member="bgp_ecommunity.h::ECOMMUNITY_FORMAT_COMMUNITY_LIST" ref="acfff5b888f4007173f66dc1f83ad4e94" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ECOMMUNITY_FORMAT_COMMUNITY_LIST&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8h_source.html#l00035">35</a> of file <a class="el" href="bgp__ecommunity_8h_source.html">bgp_ecommunity.h</a>.</p>

</div>
</div>
<a class="anchor" id="ae776d41484b625ccb00ad109d4965451"></a><!-- doxytag: member="bgp_ecommunity.h::ECOMMUNITY_FORMAT_DISPLAY" ref="ae776d41484b625ccb00ad109d4965451" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ECOMMUNITY_FORMAT_DISPLAY&#160;&#160;&#160;2</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8h_source.html#l00036">36</a> of file <a class="el" href="bgp__ecommunity_8h_source.html">bgp_ecommunity.h</a>.</p>

</div>
</div>
<a class="anchor" id="ae48e2763a7862e95cd480e85c0295bd9"></a><!-- doxytag: member="bgp_ecommunity.h::ECOMMUNITY_FORMAT_ROUTE_MAP" ref="ae48e2763a7862e95cd480e85c0295bd9" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ECOMMUNITY_FORMAT_ROUTE_MAP&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8h_source.html#l00034">34</a> of file <a class="el" href="bgp__ecommunity_8h_source.html">bgp_ecommunity.h</a>.</p>

</div>
</div>
<a class="anchor" id="aec21b73c39c6171daf21da2bc83d8b80"></a><!-- doxytag: member="bgp_ecommunity.h::ECOMMUNITY_ROUTE_TARGET" ref="aec21b73c39c6171daf21da2bc83d8b80" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ECOMMUNITY_ROUTE_TARGET&#160;&#160;&#160;0x02</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8h_source.html#l00030">30</a> of file <a class="el" href="bgp__ecommunity_8h_source.html">bgp_ecommunity.h</a>.</p>

</div>
</div>
<a class="anchor" id="afc5aa27c7ca7236b4ff369bf01828f73"></a><!-- doxytag: member="bgp_ecommunity.h::ECOMMUNITY_SITE_ORIGIN" ref="afc5aa27c7ca7236b4ff369bf01828f73" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ECOMMUNITY_SITE_ORIGIN&#160;&#160;&#160;0x03</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8h_source.html#l00031">31</a> of file <a class="el" href="bgp__ecommunity_8h_source.html">bgp_ecommunity.h</a>.</p>

</div>
</div>
<a class="anchor" id="a54885db56ce5049e450fc8ea15bfbed8"></a><!-- doxytag: member="bgp_ecommunity.h::ECOMMUNITY_SIZE" ref="a54885db56ce5049e450fc8ea15bfbed8" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ECOMMUNITY_SIZE&#160;&#160;&#160;8</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8h_source.html#l00039">39</a> of file <a class="el" href="bgp__ecommunity_8h_source.html">bgp_ecommunity.h</a>.</p>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="afcfe4a392cf5997e08e3e798d74df6ef"></a><!-- doxytag: member="bgp_ecommunity.h::ecommunity_cmp" ref="afcfe4a392cf5997e08e3e798d74df6ef" args="(const void *, const void *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ecommunity_cmp </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8c_source.html#l00250">250</a> of file <a class="el" href="bgp__ecommunity_8c_source.html">bgp_ecommunity.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">const</span> <span class="keyword">struct </span><a class="code" href="structecommunity.html">ecommunity</a> *ecom1 = arg1;
  <span class="keyword">const</span> <span class="keyword">struct </span><a class="code" href="structecommunity.html">ecommunity</a> *ecom2 = arg2;
  
  <span class="keywordflow">return</span> (ecom1-&gt;<a class="code" href="structecommunity.html#a4477c6c01052cb83ed9b4682302ebf5f">size</a> == ecom2-&gt;<a class="code" href="structecommunity.html#a4477c6c01052cb83ed9b4682302ebf5f">size</a>
      &amp;&amp; <a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (ecom1-&gt;<a class="code" href="structecommunity.html#a91b08f858e9b2cff0270393307a03a54">val</a>, ecom2-&gt;<a class="code" href="structecommunity.html#a91b08f858e9b2cff0270393307a03a54">val</a>, ecom1-&gt;<a class="code" href="structecommunity.html#a4477c6c01052cb83ed9b4682302ebf5f">size</a> * <a class="code" href="bgp__ecommunity_8h.html#a54885db56ce5049e450fc8ea15bfbed8">ECOMMUNITY_SIZE</a>) == 0);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6e9fc4f01f922751c7f410edf7a93cad"></a><!-- doxytag: member="bgp_ecommunity.h::ecommunity_dup" ref="a6e9fc4f01f922751c7f410edf7a93cad" args="(struct ecommunity *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structecommunity.html">ecommunity</a>* ecommunity_dup </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structecommunity.html">ecommunity</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8c_source.html#l00146">146</a> of file <a class="el" href="bgp__ecommunity_8c_source.html">bgp_ecommunity.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structecommunity.html">ecommunity</a> *<span class="keyword">new</span>;

  <span class="keyword">new</span> = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba7503e1ea86f33fa9d23b0aeaea03e836">MTYPE_ECOMMUNITY</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structecommunity.html">ecommunity</a>));
  <span class="keyword">new</span>-&gt;size = ecom-&gt;size;
  <span class="keywordflow">if</span> (new-&gt;size)
    {
      <span class="keyword">new</span>-&gt;val = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba7e96150c726ab7623a792baa503a6a24">MTYPE_ECOMMUNITY_VAL</a>, ecom-&gt;size * <a class="code" href="bgp__ecommunity_8h.html#a54885db56ce5049e450fc8ea15bfbed8">ECOMMUNITY_SIZE</a>);
      <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (new-&gt;val, ecom-&gt;val, ecom-&gt;size * <a class="code" href="bgp__ecommunity_8h.html#a54885db56ce5049e450fc8ea15bfbed8">ECOMMUNITY_SIZE</a>);
    }
  <span class="keywordflow">else</span>
    <span class="keyword">new</span>-&gt;val = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keywordflow">return</span> <span class="keyword">new</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a1bb2cca537fdd20657d7d6e42c479b3d"></a><!-- doxytag: member="bgp_ecommunity.h::ecommunity_ecom2str" ref="a1bb2cca537fdd20657d7d6e42c479b3d" args="(struct ecommunity *, int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* ecommunity_ecom2str </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structecommunity.html">ecommunity</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8c_source.html#l00581">581</a> of file <a class="el" href="bgp__ecommunity_8c_source.html">bgp_ecommunity.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
  u_int8_t *pnt;
  <span class="keywordtype">int</span> encode = 0;
  <span class="keywordtype">int</span> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a> = 0;
<span class="preprocessor">#define ECOMMUNITY_STR_DEFAULT_LEN  27</span>
<span class="preprocessor"></span>  <span class="keywordtype">int</span> str_size;
  <span class="keywordtype">int</span> str_pnt;
  <span class="keywordtype">char</span> *str_buf;
  <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="prefix_8h.html#a6b458105367a186babd858fd008a66be">prefix</a>;
  <span class="keywordtype">int</span> len = 0;
  <span class="keywordtype">int</span> first = 1;

  <span class="comment">/* For parse Extended Community attribute tupple. */</span>
  <span class="keyword">struct </span>ecommunity_as
  {
    <a class="code" href="bgpd_8h.html#ae54756b75cc699532543e4e2214c1c57">as_t</a> as;
    u_int32_t <a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>;
  } eas;

  <span class="keyword">struct </span>ecommunity_ip
  {
    <span class="keyword">struct </span>in_addr <a class="code" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a>;
    u_int16_t <a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>;
  } eip;

  <span class="keywordflow">if</span> (ecom-&gt;size == 0)
    {
      str_buf = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba88ab42bbd8fb0ec06228f8baf67a3bd6">MTYPE_ECOMMUNITY_STR</a>, 1);
      str_buf[0] = <span class="charliteral">&#39;\0&#39;</span>;
      <span class="keywordflow">return</span> str_buf;
    }

  <span class="comment">/* Prepare buffer.  */</span>
  str_buf = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba88ab42bbd8fb0ec06228f8baf67a3bd6">MTYPE_ECOMMUNITY_STR</a>, ECOMMUNITY_STR_DEFAULT_LEN + 1);
  str_size = <a class="code" href="bgp__ecommunity_8c.html#a4738cdf6044ba342d530a1d7de371046">ECOMMUNITY_STR_DEFAULT_LEN</a> + 1;
  str_pnt = 0;

  <span class="keywordflow">for</span> (i = 0; i &lt; ecom-&gt;size; i++)
    {
      <span class="comment">/* Space between each value.  */</span>
      <span class="keywordflow">if</span> (! first)
    str_buf[str_pnt++] = <span class="charliteral">&#39; &#39;</span>;

      pnt = ecom-&gt;val + (i * 8);

      <span class="comment">/* High-order octet of type. */</span>
      encode = *pnt++;
      <span class="keywordflow">if</span> (encode != <a class="code" href="bgp__ecommunity_8h.html#a2a7257f261521fc390fe77823e002f8e">ECOMMUNITY_ENCODE_AS</a> &amp;&amp; encode != <a class="code" href="bgp__ecommunity_8h.html#add3332bd43b2bf6671248d62d7a35d76">ECOMMUNITY_ENCODE_IP</a>
              &amp;&amp; encode != <a class="code" href="bgp__ecommunity_8h.html#a3dcbf837dbbf16fd378107e0eca189c1">ECOMMUNITY_ENCODE_AS4</a>)
    {
      len = sprintf (str_buf + str_pnt, <span class="stringliteral">&quot;?&quot;</span>);
      str_pnt += len;
      first = 0;
      <span class="keywordflow">continue</span>;
    }
      
      <span class="comment">/* Low-order octet of type. */</span>
      type = *pnt++;
      <span class="keywordflow">if</span> (type !=  <a class="code" href="bgp__ecommunity_8h.html#aec21b73c39c6171daf21da2bc83d8b80">ECOMMUNITY_ROUTE_TARGET</a> &amp;&amp; type != <a class="code" href="bgp__ecommunity_8h.html#afc5aa27c7ca7236b4ff369bf01828f73">ECOMMUNITY_SITE_ORIGIN</a>)
    {
      len = sprintf (str_buf + str_pnt, <span class="stringliteral">&quot;?&quot;</span>);
      str_pnt += len;
      first = 0;
      <span class="keywordflow">continue</span>;
    }

      <span class="keywordflow">switch</span> (format)
    {
    <span class="keywordflow">case</span> <a class="code" href="bgp__ecommunity_8h.html#acfff5b888f4007173f66dc1f83ad4e94">ECOMMUNITY_FORMAT_COMMUNITY_LIST</a>:
      prefix = (type == <a class="code" href="bgp__ecommunity_8h.html#aec21b73c39c6171daf21da2bc83d8b80">ECOMMUNITY_ROUTE_TARGET</a> ? <span class="stringliteral">&quot;rt &quot;</span> : <span class="stringliteral">&quot;soo &quot;</span>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="bgp__ecommunity_8h.html#ae776d41484b625ccb00ad109d4965451">ECOMMUNITY_FORMAT_DISPLAY</a>:
      prefix = (type == <a class="code" href="bgp__ecommunity_8h.html#aec21b73c39c6171daf21da2bc83d8b80">ECOMMUNITY_ROUTE_TARGET</a> ? <span class="stringliteral">&quot;RT:&quot;</span> : <span class="stringliteral">&quot;SoO:&quot;</span>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="bgp__ecommunity_8h.html#ae48e2763a7862e95cd480e85c0295bd9">ECOMMUNITY_FORMAT_ROUTE_MAP</a>:
      prefix = <span class="stringliteral">&quot;&quot;</span>;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">default</span>:
      prefix = <span class="stringliteral">&quot;&quot;</span>;
      <span class="keywordflow">break</span>;
    }

      <span class="comment">/* Make it sure size is enough.  */</span>
      <span class="keywordflow">while</span> (str_pnt + ECOMMUNITY_STR_DEFAULT_LEN &gt;= str_size)
    {
      str_size *= 2;
      str_buf = <a class="code" href="memory_8h.html#ad9ab7c99da79ca966328c35e9185cc57">XREALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba88ab42bbd8fb0ec06228f8baf67a3bd6">MTYPE_ECOMMUNITY_STR</a>, str_buf, str_size);
    }

      <span class="comment">/* Put string into buffer.  */</span>
      <span class="keywordflow">if</span> (encode == <a class="code" href="bgp__ecommunity_8h.html#a3dcbf837dbbf16fd378107e0eca189c1">ECOMMUNITY_ENCODE_AS4</a>)
    {
      eas.as = (*pnt++ &lt;&lt; 24);
      eas.as |= (*pnt++ &lt;&lt; 16);
      eas.as |= (*pnt++ &lt;&lt; 8);
      eas.as |= (*pnt++);

      eas.val = (*pnt++ &lt;&lt; 8);
      eas.val |= (*pnt++);

      len = sprintf( str_buf + str_pnt, <span class="stringliteral">&quot;%s%u:%d&quot;</span>, prefix,
                        eas.as, eas.val );
      str_pnt += len;
      first = 0;
    }
      <span class="keywordflow">if</span> (encode == <a class="code" href="bgp__ecommunity_8h.html#a2a7257f261521fc390fe77823e002f8e">ECOMMUNITY_ENCODE_AS</a>)
    {
      eas.as = (*pnt++ &lt;&lt; 8);
      eas.as |= (*pnt++);

      eas.val = (*pnt++ &lt;&lt; 24);
      eas.val |= (*pnt++ &lt;&lt; 16);
      eas.val |= (*pnt++ &lt;&lt; 8);
      eas.val |= (*pnt++);

      len = sprintf (str_buf + str_pnt, <span class="stringliteral">&quot;%s%u:%d&quot;</span>, prefix,
             eas.as, eas.val);
      str_pnt += len;
      first = 0;
    }
      <span class="keywordflow">else</span> <span class="keywordflow">if</span> (encode == <a class="code" href="bgp__ecommunity_8h.html#add3332bd43b2bf6671248d62d7a35d76">ECOMMUNITY_ENCODE_IP</a>)
    {
      <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;eip.ip, pnt, 4);
      pnt += 4;
      eip.val = (*pnt++ &lt;&lt; 8);
      eip.val |= (*pnt++);

      len = sprintf (str_buf + str_pnt, <span class="stringliteral">&quot;%s%s:%d&quot;</span>, prefix,
             inet_ntoa (eip.ip), eip.val);
      str_pnt += len;
      first = 0;
    }
    }
  <span class="keywordflow">return</span> str_buf;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3909ede3d29a88faad854a2833ec9322"></a><!-- doxytag: member="bgp_ecommunity.h::ecommunity_finish" ref="a3909ede3d29a88faad854a2833ec9322" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ecommunity_finish </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8c_source.html#l00267">267</a> of file <a class="el" href="bgp__ecommunity_8c_source.html">bgp_ecommunity.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="hash_8c.html#ad0d6074e4b7475f7c249212bb8e67de5">hash_free</a> (<a class="code" href="bgp__ecommunity_8c.html#a1e5651d8256a8964ef2447cec37cf2bf">ecomhash</a>);
  <a class="code" href="bgp__ecommunity_8c.html#a1e5651d8256a8964ef2447cec37cf2bf">ecomhash</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a681f44cef491568dfc1d0328ef19d500"></a><!-- doxytag: member="bgp_ecommunity.h::ecommunity_free" ref="a681f44cef491568dfc1d0328ef19d500" args="(struct ecommunity *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ecommunity_free </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structecommunity.html">ecommunity</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8c_source.html#l00045">45</a> of file <a class="el" href="bgp__ecommunity_8c_source.html">bgp_ecommunity.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (ecom-&gt;val)
    <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba7e96150c726ab7623a792baa503a6a24">MTYPE_ECOMMUNITY_VAL</a>, ecom-&gt;val);
  <span class="keywordflow">if</span> (ecom-&gt;str)
    <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba88ab42bbd8fb0ec06228f8baf67a3bd6">MTYPE_ECOMMUNITY_STR</a>, ecom-&gt;str);
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba7503e1ea86f33fa9d23b0aeaea03e836">MTYPE_ECOMMUNITY</a>, ecom);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a1893a1f68e0ed988ca076a37e16f0f5b"></a><!-- doxytag: member="bgp_ecommunity.h::ecommunity_hash_make" ref="a1893a1f68e0ed988ca076a37e16f0f5b" args="(void *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int ecommunity_hash_make </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8c_source.html#l00232">232</a> of file <a class="el" href="bgp__ecommunity_8c_source.html">bgp_ecommunity.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">const</span> <span class="keyword">struct </span><a class="code" href="structecommunity.html">ecommunity</a> *ecom = arg;
  <span class="keywordtype">int</span> c;
  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="zebra__rib_8c.html#a35af0be900467fedbb610bd6ea65ed78">key</a>;
  u_int8_t *pnt;

  key = 0;
  pnt = ecom-&gt;<a class="code" href="structecommunity.html#a91b08f858e9b2cff0270393307a03a54">val</a>;
  
  <span class="keywordflow">for</span> (c = 0; c &lt; ecom-&gt;<a class="code" href="structecommunity.html#a4477c6c01052cb83ed9b4682302ebf5f">size</a> * <a class="code" href="bgp__ecommunity_8h.html#a54885db56ce5049e450fc8ea15bfbed8">ECOMMUNITY_SIZE</a>; c++)
    key += pnt[c];

  <span class="keywordflow">return</span> <a class="code" href="zebra__rib_8c.html#a35af0be900467fedbb610bd6ea65ed78">key</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a51951f652cd586d53176801edb217319"></a><!-- doxytag: member="bgp_ecommunity.h::ecommunity_init" ref="a51951f652cd586d53176801edb217319" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ecommunity_init </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8c_source.html#l00261">261</a> of file <a class="el" href="bgp__ecommunity_8c_source.html">bgp_ecommunity.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="bgp__ecommunity_8c.html#a1e5651d8256a8964ef2447cec37cf2bf">ecomhash</a> = <a class="code" href="hash_8c.html#af8af448ae70e3d3b1fe45295b5e8fb78">hash_create</a> (<a class="code" href="bgp__ecommunity_8c.html#adb13cb51e62ac1f0e4a3cf6137748409">ecommunity_hash_make</a>, <a class="code" href="bgp__ecommunity_8c.html#aedf7f522590389592309042fdbae6fef">ecommunity_cmp</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa6b2b50991689bc8b36b3d71900705e8"></a><!-- doxytag: member="bgp_ecommunity.h::ecommunity_intern" ref="aa6b2b50991689bc8b36b3d71900705e8" args="(struct ecommunity *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structecommunity.html">ecommunity</a>* ecommunity_intern </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structecommunity.html">ecommunity</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8c_source.html#l00191">191</a> of file <a class="el" href="bgp__ecommunity_8c_source.html">bgp_ecommunity.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structecommunity.html">ecommunity</a> *find;

  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (ecom-&gt;refcnt == 0);

  find = (<span class="keyword">struct </span><a class="code" href="structecommunity.html">ecommunity</a> *) <a class="code" href="hash_8c.html#ab0bb31bd6c883d6563930341dccedd22">hash_get</a> (<a class="code" href="bgp__ecommunity_8c.html#a1e5651d8256a8964ef2447cec37cf2bf">ecomhash</a>, ecom, <a class="code" href="hash_8c.html#ac2705f6d220cf4d8049201e369ff6d62">hash_alloc_intern</a>);

  <span class="keywordflow">if</span> (find != ecom)
    <a class="code" href="bgp__ecommunity_8c.html#a56f7dda58051cbec7fd56238196dcfc2">ecommunity_free</a> (ecom);

  find-&gt;<a class="code" href="structecommunity.html#a839024928ebd51dabf70c2ea80874aec">refcnt</a>++;

  <span class="keywordflow">if</span> (! find-&gt;<a class="code" href="structecommunity.html#ac84ecde7f5b18c5c070ba22400fb0cb6">str</a>)
    find-&gt;<a class="code" href="structecommunity.html#ac84ecde7f5b18c5c070ba22400fb0cb6">str</a> = <a class="code" href="bgp__ecommunity_8c.html#a8ffcee89340db2108bd11edf28852b11">ecommunity_ecom2str</a> (find, <a class="code" href="bgp__ecommunity_8h.html#ae776d41484b625ccb00ad109d4965451">ECOMMUNITY_FORMAT_DISPLAY</a>);

  <span class="keywordflow">return</span> find;
}
</pre></div>
</div>
</div>
<a class="anchor" id="afee1bdfd1ae2759ddcecc45ece967cdb"></a><!-- doxytag: member="bgp_ecommunity.h::ecommunity_match" ref="afee1bdfd1ae2759ddcecc45ece967cdb" args="(const struct ecommunity *, const struct ecommunity *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ecommunity_match </td>
          <td>(</td>
          <td class="paramtype">const struct <a class="el" href="structecommunity.html">ecommunity</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const struct <a class="el" href="structecommunity.html">ecommunity</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8c_source.html#l00720">720</a> of file <a class="el" href="bgp__ecommunity_8c_source.html">bgp_ecommunity.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a> = 0;
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a7113d77fc628f14d4e7d1262969c613e">j</a> = 0;

  <span class="keywordflow">if</span> (ecom1 == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; ecom2 == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> 1;

  <span class="keywordflow">if</span> (ecom1 == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> || ecom2 == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> 0;

  <span class="keywordflow">if</span> (ecom1-&gt;size &lt; ecom2-&gt;size)
    <span class="keywordflow">return</span> 0;

  <span class="comment">/* Every community on com2 needs to be on com1 for this to match */</span>
  <span class="keywordflow">while</span> (i &lt; ecom1-&gt;<a class="code" href="structecommunity.html#a4477c6c01052cb83ed9b4682302ebf5f">size</a> &amp;&amp; j &lt; ecom2-&gt;<a class="code" href="structecommunity.html#a4477c6c01052cb83ed9b4682302ebf5f">size</a>)
    {
      <span class="keywordflow">if</span> (<a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (ecom1-&gt;val + i, ecom2-&gt;val + j, <a class="code" href="bgp__ecommunity_8h.html#a54885db56ce5049e450fc8ea15bfbed8">ECOMMUNITY_SIZE</a>) == 0)
        j++;
      i++;
    }

  <span class="keywordflow">if</span> (j == ecom2-&gt;size)
    <span class="keywordflow">return</span> 1;
  <span class="keywordflow">else</span>
    <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3c55a503f9803a70f2b8392a900d7d96"></a><!-- doxytag: member="bgp_ecommunity.h::ecommunity_merge" ref="a3c55a503f9803a70f2b8392a900d7d96" args="(struct ecommunity *, struct ecommunity *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structecommunity.html">ecommunity</a>* ecommunity_merge </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structecommunity.html">ecommunity</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structecommunity.html">ecommunity</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8c_source.html#l00173">173</a> of file <a class="el" href="bgp__ecommunity_8c_source.html">bgp_ecommunity.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (ecom1-&gt;val)
    ecom1-&gt;val = <a class="code" href="memory_8h.html#ad9ab7c99da79ca966328c35e9185cc57">XREALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba7e96150c726ab7623a792baa503a6a24">MTYPE_ECOMMUNITY_VAL</a>, ecom1-&gt;val, 
               (ecom1-&gt;size + ecom2-&gt;size) * <a class="code" href="bgp__ecommunity_8h.html#a54885db56ce5049e450fc8ea15bfbed8">ECOMMUNITY_SIZE</a>);
  <span class="keywordflow">else</span>
    ecom1-&gt;val = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba7e96150c726ab7623a792baa503a6a24">MTYPE_ECOMMUNITY_VAL</a>,
              (ecom1-&gt;size + ecom2-&gt;size) * <a class="code" href="bgp__ecommunity_8h.html#a54885db56ce5049e450fc8ea15bfbed8">ECOMMUNITY_SIZE</a>);

  <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (ecom1-&gt;val + (ecom1-&gt;size * <a class="code" href="bgp__ecommunity_8h.html#a54885db56ce5049e450fc8ea15bfbed8">ECOMMUNITY_SIZE</a>),
      ecom2-&gt;val, ecom2-&gt;size * <a class="code" href="bgp__ecommunity_8h.html#a54885db56ce5049e450fc8ea15bfbed8">ECOMMUNITY_SIZE</a>);
  ecom1-&gt;size += ecom2-&gt;size;

  <span class="keywordflow">return</span> ecom1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a41a92d80d132ec088bbfd1072944c385"></a><!-- doxytag: member="bgp_ecommunity.h::ecommunity_parse" ref="a41a92d80d132ec088bbfd1072944c385" args="(u_int8_t *, u_short)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structecommunity.html">ecommunity</a>* ecommunity_parse </td>
          <td>(</td>
          <td class="paramtype">u_int8_t *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_short&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8c_source.html#l00123">123</a> of file <a class="el" href="bgp__ecommunity_8c_source.html">bgp_ecommunity.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structecommunity.html">ecommunity</a> tmp;
  <span class="keyword">struct </span><a class="code" href="structecommunity.html">ecommunity</a> *<span class="keyword">new</span>;

  <span class="comment">/* Length check.  */</span>
  <span class="keywordflow">if</span> (<a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a> % <a class="code" href="bgp__ecommunity_8h.html#a54885db56ce5049e450fc8ea15bfbed8">ECOMMUNITY_SIZE</a>)
    <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="comment">/* Prepare tmporary structure for making a new Extended Communities</span>
<span class="comment">     Attribute.  */</span>
  tmp.size = <a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a> / <a class="code" href="bgp__ecommunity_8h.html#a54885db56ce5049e450fc8ea15bfbed8">ECOMMUNITY_SIZE</a>;
  tmp.val = pnt;

  <span class="comment">/* Create a new Extended Communities Attribute by uniq and sort each</span>
<span class="comment">     Extended Communities value  */</span>
  <span class="keyword">new</span> = <a class="code" href="bgp__ecommunity_8c.html#ae2517bca0f0c191496e72124f55e0513">ecommunity_uniq_sort</a> (&amp;tmp);

  <span class="keywordflow">return</span> <a class="code" href="bgp__ecommunity_8c.html#aef15f1927a9085dd8f1df7fa612794db">ecommunity_intern</a> (<span class="keyword">new</span>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="aaa4f85c53eaf505aab0798a3323cf252"></a><!-- doxytag: member="bgp_ecommunity.h::ecommunity_str" ref="aaa4f85c53eaf505aab0798a3323cf252" args="(struct ecommunity *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* ecommunity_str </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structecommunity.html">ecommunity</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8c_source.html#l00164">164</a> of file <a class="el" href="bgp__ecommunity_8c_source.html">bgp_ecommunity.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (! ecom-&gt;str)
    ecom-&gt;str = <a class="code" href="bgp__ecommunity_8c.html#a8ffcee89340db2108bd11edf28852b11">ecommunity_ecom2str</a> (ecom, <a class="code" href="bgp__ecommunity_8h.html#ae776d41484b625ccb00ad109d4965451">ECOMMUNITY_FORMAT_DISPLAY</a>);
  <span class="keywordflow">return</span> ecom-&gt;str;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa75e237fe48f20efd1bdbf21e4ad9a2c"></a><!-- doxytag: member="bgp_ecommunity.h::ecommunity_str2com" ref="aa75e237fe48f20efd1bdbf21e4ad9a2c" args="(const char *, int, int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structecommunity.html">ecommunity</a>* ecommunity_str2com </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8c_source.html#l00503">503</a> of file <a class="el" href="bgp__ecommunity_8c_source.html">bgp_ecommunity.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structecommunity.html">ecommunity</a> *ecom = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keyword">enum</span> <a class="code" href="bgp__ecommunity_8c.html#a1fe7ebd31a0667bb11e4e2fc062d86b8">ecommunity_token</a> token;
  <span class="keyword">struct </span><a class="code" href="structecommunity__val.html">ecommunity_val</a> eval;
  <span class="keywordtype">int</span> keyword = 0;

  <span class="keywordflow">while</span> ((<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a> = <a class="code" href="bgp__ecommunity_8c.html#a7fa09e5778b96bf677f66c355d5dcad1">ecommunity_gettoken</a> (<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, &amp;eval, &amp;token)))
    {
      <span class="keywordflow">switch</span> (token)
    {
    <span class="keywordflow">case</span> <a class="code" href="bgp__ecommunity_8c.html#a1fe7ebd31a0667bb11e4e2fc062d86b8a336bf0600251466caa11483ce5f367f2">ecommunity_token_rt</a>:
    <span class="keywordflow">case</span> <a class="code" href="bgp__ecommunity_8c.html#a1fe7ebd31a0667bb11e4e2fc062d86b8ae32d3f9dd7115e536c11bd5bf20f1062">ecommunity_token_soo</a>:
      <span class="keywordflow">if</span> (! keyword_included || keyword)
        {
          <span class="keywordflow">if</span> (ecom)
        <a class="code" href="bgp__ecommunity_8c.html#a56f7dda58051cbec7fd56238196dcfc2">ecommunity_free</a> (ecom);
          <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
        }
      keyword = 1;

      <span class="keywordflow">if</span> (token == <a class="code" href="bgp__ecommunity_8c.html#a1fe7ebd31a0667bb11e4e2fc062d86b8a336bf0600251466caa11483ce5f367f2">ecommunity_token_rt</a>)
        {
          <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a> = <a class="code" href="bgp__ecommunity_8h.html#aec21b73c39c6171daf21da2bc83d8b80">ECOMMUNITY_ROUTE_TARGET</a>;
        }
      <span class="keywordflow">if</span> (token == <a class="code" href="bgp__ecommunity_8c.html#a1fe7ebd31a0667bb11e4e2fc062d86b8ae32d3f9dd7115e536c11bd5bf20f1062">ecommunity_token_soo</a>)
        {
          <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a> = <a class="code" href="bgp__ecommunity_8h.html#afc5aa27c7ca7236b4ff369bf01828f73">ECOMMUNITY_SITE_ORIGIN</a>;
        }
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="bgp__ecommunity_8c.html#a1fe7ebd31a0667bb11e4e2fc062d86b8af8b32df295bef7efe65453a7f19fc34b">ecommunity_token_val</a>:
      <span class="keywordflow">if</span> (keyword_included)
        {
          <span class="keywordflow">if</span> (! keyword)
        {
          <span class="keywordflow">if</span> (ecom)
            <a class="code" href="bgp__ecommunity_8c.html#a56f7dda58051cbec7fd56238196dcfc2">ecommunity_free</a> (ecom);
          <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
        }
          keyword = 0;
        }
      <span class="keywordflow">if</span> (ecom == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
        ecom = <a class="code" href="bgp__ecommunity_8c.html#a5c8680e239492bb28a06e48c2bf932da">ecommunity_new</a> ();
      eval.val[1] = <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>;
      <a class="code" href="bgp__ecommunity_8c.html#a8c077f7bd7bcddb7d1418f3c8a2d9565">ecommunity_add_val</a> (ecom, &amp;eval);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="bgp__ecommunity_8c.html#a1fe7ebd31a0667bb11e4e2fc062d86b8aac56d87b21b76002951708922564e867">ecommunity_token_unknown</a>:
    <span class="keywordflow">default</span>:
      <span class="keywordflow">if</span> (ecom)
        <a class="code" href="bgp__ecommunity_8c.html#a56f7dda58051cbec7fd56238196dcfc2">ecommunity_free</a> (ecom);
      <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }
    }
  <span class="keywordflow">return</span> ecom;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af356e82da85fe44e2a8ebcf88b3b1c15"></a><!-- doxytag: member="bgp_ecommunity.h::ecommunity_unintern" ref="af356e82da85fe44e2a8ebcf88b3b1c15" args="(struct ecommunity *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ecommunity_unintern </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structecommunity.html">ecommunity</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__ecommunity_8c_source.html#l00212">212</a> of file <a class="el" href="bgp__ecommunity_8c_source.html">bgp_ecommunity.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structecommunity.html">ecommunity</a> *ret;

  <span class="keywordflow">if</span> (ecom-&gt;refcnt)
    ecom-&gt;<a class="code" href="structecommunity.html#a839024928ebd51dabf70c2ea80874aec">refcnt</a>--;

  <span class="comment">/* Pull off from hash.  */</span>
  <span class="keywordflow">if</span> (ecom-&gt;refcnt == 0)
    {
      <span class="comment">/* Extended community must be in the hash.  */</span>
      ret = (<span class="keyword">struct </span><a class="code" href="structecommunity.html">ecommunity</a> *) <a class="code" href="hash_8c.html#a67f4f46ccd66f0b0c2a047eeb130c19e">hash_release</a> (<a class="code" href="bgp__ecommunity_8c.html#a1e5651d8256a8964ef2447cec37cf2bf">ecomhash</a>, ecom);
      <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (ret != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);

      <a class="code" href="bgp__ecommunity_8c.html#a56f7dda58051cbec7fd56238196dcfc2">ecommunity_free</a> (ecom);
    }
}
</pre></div>
</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="bgp__ecommunity_8h.html">bgp_ecommunity.h</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:11 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
