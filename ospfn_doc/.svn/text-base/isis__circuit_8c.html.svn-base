<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: isisd/isis_circuit.c File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('isis__circuit_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#define-members">Defines</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">isisd/isis_circuit.c File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="zebra_8h_source.html">zebra.h</a>&gt;</code><br/>
<code>#include &lt;netinet/if_ether.h&gt;</code><br/>
<code>#include &quot;<a class="el" href="log_8h_source.html">log.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="memory_8h_source.html">memory.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="if_8h_source.html">if.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="linklist_8h_source.html">linklist.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="command_8h_source.html">command.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="thread_8h_source.html">thread.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="hash_8h_source.html">hash.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="prefix_8h_source.html">prefix.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="stream_8h_source.html">stream.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="dict_8h_source.html">isisd/dict.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="iso_8h_source.html">isisd/include-netbsd/iso.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__constants_8h_source.html">isisd/isis_constants.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__common_8h_source.html">isisd/isis_common.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__circuit_8h_source.html">isisd/isis_circuit.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__tlv_8h_source.html">isisd/isis_tlv.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__lsp_8h_source.html">isisd/isis_lsp.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__pdu_8h_source.html">isisd/isis_pdu.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__network_8h_source.html">isisd/isis_network.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__misc_8h_source.html">isisd/isis_misc.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__adjacency_8h_source.html">isisd/isis_adjacency.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__dr_8h_source.html">isisd/isis_dr.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__flags_8h_source.html">isisd/isis_flags.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isisd_8h_source.html">isisd/isisd.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__csm_8h_source.html">isisd/isis_csm.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__events_8h_source.html">isisd/isis_events.h</a>&quot;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for isis_circuit.c:</div>
<div class="dyncontent">
<div class="center"><img src="isis__circuit_8c__incl.png" border="0" usemap="#isisd_2isis__circuit_8c" alt=""/></div>
<map name="isisd_2isis__circuit_8c" id="isisd_2isis__circuit_8c">
<area shape="rect" id="node3" href="zebra_8h.html" title="zebra.h" alt="" coords="1004,80,1071,107"/><area shape="rect" id="node51" href="log_8h.html" title="log.h" alt="" coords="2107,80,2159,107"/><area shape="rect" id="node54" href="memory_8h.html" title="memory.h" alt="" coords="2184,80,2267,107"/><area shape="rect" id="node56" href="if_8h.html" title="if.h" alt="" coords="2291,80,2331,107"/><area shape="rect" id="node58" href="linklist_8h.html" title="linklist.h" alt="" coords="2305,155,2375,181"/><area shape="rect" id="node61" href="command_8h.html" title="command.h" alt="" coords="2406,80,2497,107"/><area shape="rect" id="node63" href="thread_8h.html" title="thread.h" alt="" coords="2523,80,2595,107"/><area shape="rect" id="node65" href="hash_8h.html" title="hash.h" alt="" coords="2619,80,2680,107"/><area shape="rect" id="node67" href="prefix_8h.html" title="prefix.h" alt="" coords="2721,155,2788,181"/><area shape="rect" id="node69" href="stream_8h.html" title="stream.h" alt="" coords="2755,80,2829,107"/><area shape="rect" id="node72" href="dict_8h.html" title="isisd/dict.h" alt="" coords="2854,80,2940,107"/><area shape="rect" id="node74" href="iso_8h.html" title="isisd/include&#45;netbsd/iso.h" alt="" coords="2965,80,3141,107"/><area shape="rect" id="node76" href="isis__constants_8h.html" title="isisd/isis_constants.h" alt="" coords="3166,80,3316,107"/><area shape="rect" id="node78" href="isis__common_8h.html" title="isisd/isis_common.h" alt="" coords="3341,80,3483,107"/><area shape="rect" id="node80" href="isis__circuit_8h.html" title="isisd/isis_circuit.h" alt="" coords="3507,80,3633,107"/><area shape="rect" id="node82" href="isis__tlv_8h.html" title="isisd/isis_tlv.h" alt="" coords="3659,80,3765,107"/><area shape="rect" id="node84" href="isis__lsp_8h.html" title="isisd/isis_lsp.h" alt="" coords="3789,80,3899,107"/><area shape="rect" id="node86" href="isis__pdu_8h.html" title="isisd/isis_pdu.h" alt="" coords="3923,80,4037,107"/><area shape="rect" id="node88" href="isis__network_8h.html" title="isisd/isis_network.h" alt="" coords="4062,80,4201,107"/><area shape="rect" id="node90" href="isis__misc_8h.html" title="isisd/isis_misc.h" alt="" coords="4226,80,4344,107"/><area shape="rect" id="node92" href="isis__adjacency_8h.html" title="isisd/isis_adjacency.h" alt="" coords="4369,80,4521,107"/><area shape="rect" id="node94" href="isis__dr_8h.html" title="isisd/isis_dr.h" alt="" coords="4546,80,4648,107"/><area shape="rect" id="node96" href="isis__flags_8h.html" title="isisd/isis_flags.h" alt="" coords="4673,80,4793,107"/><area shape="rect" id="node98" href="isisd_8h.html" title="isisd/isisd.h" alt="" coords="4818,80,4909,107"/><area shape="rect" id="node100" href="isis__csm_8h.html" title="isisd/isis_csm.h" alt="" coords="4934,80,5049,107"/><area shape="rect" id="node102" href="isis__events_8h.html" title="isisd/isis_events.h" alt="" coords="5075,80,5208,107"/></map>
</div>
</div>
<p><a href="isis__circuit_8c_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#abf4fcaacb1ad2010711b7c880ec2ed20">ETHER_ADDR_LEN</a>&#160;&#160;&#160;ETHERADDRL</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a45bfcf431df2ee8c5d4bbf23b5d3104e">isis_circuit_down</a> (struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a30f2f4ba1a5ce5e5d838e38e5bb5a32e">isis_interface_config_write</a> (struct <a class="el" href="structvty.html">vty</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a8105376f97b6cc730ec0daeeff8d21a3">isis_if_new_hook</a> (struct <a class="el" href="structinterface.html">interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#ae0cff0254c709b737c11ad3827e2deee">isis_if_delete_hook</a> (struct <a class="el" href="structinterface.html">interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a9ceb5807f17c758f59952a6861ab2d3a">isis_circuit_new</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a93edd9bcc18156fda5f2a2e261e422f8">isis_circuit_configure</a> (struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *circuit, struct <a class="el" href="structisis__area.html">isis_area</a> *area)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#ae430309397e7149d83c28730eb4a9c0b">isis_circuit_deconfigure</a> (struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *circuit, struct <a class="el" href="structisis__area.html">isis_area</a> *area)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#af5503c527a2e390b90d9fb6fca3639d0">circuit_lookup_by_ifp</a> (struct <a class="el" href="structinterface.html">interface</a> *ifp, struct <a class="el" href="structlist.html">list</a> *<a class="el" href="structlist.html">list</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#ac745f22b7616f69709cf336bfe91c9cc">circuit_scan_by_ifp</a> (struct <a class="el" href="structinterface.html">interface</a> *ifp)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a790e44fd592225c189c35ef503f4f117">isis_circuit_del</a> (struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *circuit)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a52dfd04507c31c59f97c524f4b042483">isis_circuit_add_addr</a> (struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *circuit, struct <a class="el" href="structconnected.html">connected</a> *<a class="el" href="structconnected.html">connected</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a40467f80d25a3d5fc46184634d38a163">isis_circuit_del_addr</a> (struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *circuit, struct <a class="el" href="structconnected.html">connected</a> *<a class="el" href="structconnected.html">connected</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#ae400c0f8f0ed2502bdb49875a3b972f1">isis_circuit_if_add</a> (struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *circuit, struct <a class="el" href="structinterface.html">interface</a> *ifp)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#aec239848920be5d6c27e0468ee98f723">isis_circuit_update_params</a> (struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *circuit, struct <a class="el" href="structinterface.html">interface</a> *ifp)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#af329d161db12da43e1361ac390ac0ec5">isis_circuit_if_del</a> (struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *circuit)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a48da6c4124ce91ea2a2be712ab7c37b9">isis_circuit_up</a> (struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *circuit)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a0e981ef34777d26b91cbee95612ba505">circuit_update_nlpids</a> (struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *circuit)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a2f7e0f03eabf63ba1805b678b1f559ad">DEFUN</a> (ip_router_isis, ip_router_isis_cmd,&quot;ip router <a class="el" href="structisis.html">isis</a> <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;,&quot;Interface Internet Protocol <a class="el" href="structconfig.html">config</a> commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP router <a class="el" href="structinterface.html">interface</a> commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IS-IS Routing for IP\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Routing process tag\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a72e3e0e8b41634bb08466c0bf641c69b">DEFUN</a> (no_ip_router_isis, no_ip_router_isis_cmd,&quot;no <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> router <a class="el" href="structisis.html">isis</a> <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;, NO_STR&quot;Interface Internet Protocol <a class="el" href="structconfig.html">config</a> commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP router <a class="el" href="structinterface.html">interface</a> commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IS-IS Routing for IP\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Routing process tag\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a882e500e6a1bea888707043948c56cd3">DEFUN</a> (isis_circuit_type, isis_circuit_type_cmd,&quot;isis circuit-<a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a> (level-1|level-1-2|level-2-only)&quot;,&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Configure circuit <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a> for <a class="el" href="structinterface.html">interface</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Level-1 only adjacencies are formed\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Level-1-2 adjacencies are formed\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Level-2 only adjacencies are formed\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a5059cf2189650e55c9dfb0d706d19b2e">DEFUN</a> (no_isis_circuit_type, no_isis_circuit_type_cmd,&quot;no <a class="el" href="structisis.html">isis</a> circuit-<a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a> (level-1|level-1-2|level-2-only)&quot;, NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Configure circuit <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a> for <a class="el" href="structinterface.html">interface</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Level-1 only adjacencies are formed\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Level-1-2 adjacencies are formed\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Level-2 only adjacencies are formed\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#ae19643ced3250c0c13f9069768ba9dfd">DEFUN</a> (<a class="el" href="structisis__passwd.html">isis_passwd</a>, isis_passwd_cmd,&quot;isis <a class="el" href="structpassword.html">password</a> <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;,&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Configure the authentication <a class="el" href="structpassword.html">password</a> for <a class="el" href="structinterface.html">interface</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Password\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#abd034a7d0dddb7ac3f4dd9c07b746dca">DEFUN</a> (no_isis_passwd, no_isis_passwd_cmd,&quot;no <a class="el" href="structisis.html">isis</a> <a class="el" href="structpassword.html">password</a>&quot;, NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Configure the authentication <a class="el" href="structpassword.html">password</a> for <a class="el" href="structinterface.html">interface</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a8cd79a6f4021320ed391dd680155acc3">DEFUN</a> (isis_priority, isis_priority_cmd,&quot;isis priority &lt;0-127&gt;&quot;,&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Set priority for Designated Router election\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Priority value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a3ce2f91a07aa04c3263efdedc1dc56e0">DEFUN</a> (no_isis_priority, no_isis_priority_cmd,&quot;no <a class="el" href="structisis.html">isis</a> priority&quot;, NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Set priority for Designated Router election\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a48d33461bfc97a96306ed3101349e18c">ALIAS</a> (no_isis_priority, no_isis_priority_arg_cmd,&quot;no <a class="el" href="structisis.html">isis</a> priority &lt;0-127&gt;&quot;, NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Set priority for Designated Router election\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Priority value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a1fa339fb7de3bef35c0300ecc939788a">DEFUN</a> (no_isis_priority_l1, no_isis_priority_l1_cmd,&quot;no <a class="el" href="structisis.html">isis</a> priority level-1&quot;, NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Set priority for Designated Router election\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Specify priority for level-1 routing\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a2eb36dce6fa40876b1a5dd55e25a3b0a">ALIAS</a> (no_isis_priority_l1, no_isis_priority_l1_arg_cmd,&quot;no <a class="el" href="structisis.html">isis</a> priority &lt;0-127&gt; level-1&quot;, NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Set priority for Designated Router election\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Priority value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Specify priority for level-1 routing\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#ae4203f23e501a5f67205ecd885e6b5b6">DEFUN</a> (no_isis_priority_l2, no_isis_priority_l2_cmd,&quot;no <a class="el" href="structisis.html">isis</a> priority level-2&quot;, NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Set priority for Designated Router election\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Specify priority for level-2 routing\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#af5574dda855316908cef69164834665e">ALIAS</a> (no_isis_priority_l2, no_isis_priority_l2_arg_cmd,&quot;no <a class="el" href="structisis.html">isis</a> priority &lt;0-127&gt; level-2&quot;, NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Set priority for Designated Router election\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Priority value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Specify priority for level-2 routing\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a1189f123f15b23c62310cf35f0bf7fa9">DEFUN</a> (no_isis_metric, no_isis_metric_cmd,&quot;no <a class="el" href="structisis.html">isis</a> <a class="el" href="structmetric.html">metric</a>&quot;, NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Set default <a class="el" href="structmetric.html">metric</a> for circuit\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a64662ed69c17c656e7af5653e05bcdbe">ALIAS</a> (no_isis_metric, no_isis_metric_arg_cmd,&quot;no <a class="el" href="structisis.html">isis</a> <a class="el" href="structmetric.html">metric</a> &lt;0-16777215&gt;&quot;, NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Set default <a class="el" href="structmetric.html">metric</a> for circuit\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Default <a class="el" href="structmetric.html">metric</a> value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a9fa39e937c52235551eecdee2bacb3a9">DEFUN</a> (no_isis_hello_interval, no_isis_hello_interval_cmd,&quot;no <a class="el" href="structisis.html">isis</a> hello-interval&quot;, NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Set Hello interval\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a8a2218076f40eaa897d3ea38a7b73e85">ALIAS</a> (no_isis_hello_interval, no_isis_hello_interval_arg_cmd,&quot;no <a class="el" href="structisis.html">isis</a> hello-interval (&lt;1-65535&gt;|minimal)&quot;, NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Set Hello interval\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Hello interval value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Holdtime 1 <a class="el" href="isis__circuit_8c.html#a9330cf63cb76c1de52610f3a5eab39b5">second</a>, interval depends on multiplier\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;) DEFUN(isis_hello_interval_l1</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structisis.html">isis</a> hello&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a900b5f9651c07bafd5d81cc876b93885">interval</a> (&lt; 1-65535 &gt;|minimal) level-1&quot;</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a2f6bceb3c6efaf164afd01a4b872320f">isis_circuit_init</a> ()</td></tr>
<tr><td colspan="2"><h2><a name="var-members"></a>
Variables</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structthread__master.html">thread_master</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structisis.html">isis</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#aa8cfdc8f7777fd242bd2c45f3a48b950">isis</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#acdc3e3e190f3d90d9ee7c51a4aaf7c7c">isis_hello_interval_l1_cmd</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structisis.html">isis</a> hello IS IS commands <a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a> <br class="typebreak"/>
Set Hello interval <a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a> Hello <br class="typebreak"/>
interval value <a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a> Holdtime&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__circuit_8c.html#a9330cf63cb76c1de52610f3a5eab39b5">second</a></td></tr>
</table>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="abf4fcaacb1ad2010711b7c880ec2ed20"></a><!-- doxytag: member="isis_circuit.c::ETHER_ADDR_LEN" ref="abf4fcaacb1ad2010711b7c880ec2ed20" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ETHER_ADDR_LEN&#160;&#160;&#160;ETHERADDRL</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l00030">30</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a48d33461bfc97a96306ed3101349e18c"></a><!-- doxytag: member="isis_circuit.c::ALIAS" ref="a48d33461bfc97a96306ed3101349e18c" args="(no_isis_priority, no_isis_priority_arg_cmd,&quot;no isis priority &lt;0&#45;127&gt;&quot;, NO_STR&quot;IS&#45;IS commands\n&quot;&quot;Set priority for Designated Router election\n&quot;&quot;Priority value\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ALIAS </td>
          <td>(</td>
          <td class="paramtype">no_isis_priority&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_isis_priority_arg_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no <a class="el" href="structisis.html">isis</a> priority &lt;0-127&gt;&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Set priority for Designated Router election\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Priority value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l01118">1118</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
  <span class="keywordtype">int</span> <a class="code" href="isis__pdu_8h.html#a455591b58ffb2f0744e071145c7e7207">prio</a>;

  ifp = <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
  circuit = ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
  <span class="keywordflow">if</span> (circuit == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (circuit);

  prio = atoi (argv[0]);

  circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a9087f16298d7bbf26ac8b480c932ab8d">priority</a>[0] = <a class="code" href="isis__pdu_8h.html#a455591b58ffb2f0744e071145c7e7207">prio</a>;

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a2eb36dce6fa40876b1a5dd55e25a3b0a"></a><!-- doxytag: member="isis_circuit.c::ALIAS" ref="a2eb36dce6fa40876b1a5dd55e25a3b0a" args="(no_isis_priority_l1, no_isis_priority_l1_arg_cmd,&quot;no isis priority &lt;0&#45;127&gt; level&#45;1&quot;, NO_STR&quot;IS&#45;IS commands\n&quot;&quot;Set priority for Designated Router election\n&quot;&quot;Priority value\n&quot;&quot;Specify priority for level&#45;1 routing\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ALIAS </td>
          <td>(</td>
          <td class="paramtype">no_isis_priority_l1&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_isis_priority_l1_arg_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no <a class="el" href="structisis.html">isis</a> priority &lt;0-127&gt; level-1&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Set priority for Designated Router election\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Priority value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Specify priority for level-1 routing\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l01177">1177</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
  <span class="keywordtype">int</span> <a class="code" href="isis__pdu_8h.html#a455591b58ffb2f0744e071145c7e7207">prio</a>;

  ifp = <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
  circuit = ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
  <span class="keywordflow">if</span> (circuit == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (circuit);

  prio = atoi (argv[0]);

  circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a9087f16298d7bbf26ac8b480c932ab8d">priority</a>[1] = <a class="code" href="isis__pdu_8h.html#a455591b58ffb2f0744e071145c7e7207">prio</a>;

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af5574dda855316908cef69164834665e"></a><!-- doxytag: member="isis_circuit.c::ALIAS" ref="af5574dda855316908cef69164834665e" args="(no_isis_priority_l2, no_isis_priority_l2_arg_cmd,&quot;no isis priority &lt;0&#45;127&gt; level&#45;2&quot;, NO_STR&quot;IS&#45;IS commands\n&quot;&quot;Set priority for Designated Router election\n&quot;&quot;Priority value\n&quot;&quot;Specify priority for level&#45;2 routing\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ALIAS </td>
          <td>(</td>
          <td class="paramtype">no_isis_priority_l2&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_isis_priority_l2_arg_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no <a class="el" href="structisis.html">isis</a> priority &lt;0-127&gt; level-2&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Set priority for Designated Router election\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Priority value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Specify priority for level-2 routing\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l01237">1237</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
  <span class="keywordtype">int</span> met;

  ifp = <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
  circuit = ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
  <span class="keywordflow">if</span> (circuit == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (circuit);

  met = atoi (argv[0]);

  circuit-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>[0] = met;
  circuit-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>[1] = met;

  <span class="keywordflow">if</span> (met &gt; 63)
    met = 63;

  circuit-&gt;<a class="code" href="structisis__circuit.html#a33545b43653e59a814cbd283c3f8c056">metrics</a>[0].<a class="code" href="structmetric.html#ae927ddb546511096f632820b678d73bf">metric_default</a> = met;
  circuit-&gt;<a class="code" href="structisis__circuit.html#a33545b43653e59a814cbd283c3f8c056">metrics</a>[1].<a class="code" href="structmetric.html#ae927ddb546511096f632820b678d73bf">metric_default</a> = met;

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a64662ed69c17c656e7af5653e05bcdbe"></a><!-- doxytag: member="isis_circuit.c::ALIAS" ref="a64662ed69c17c656e7af5653e05bcdbe" args="(no_isis_metric, no_isis_metric_arg_cmd,&quot;no isis metric &lt;0&#45;16777215&gt;&quot;, NO_STR&quot;IS&#45;IS commands\n&quot;&quot;Set default metric for circuit\n&quot;&quot;Default metric value\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ALIAS </td>
          <td>(</td>
          <td class="paramtype">no_isis_metric&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_isis_metric_arg_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no <a class="el" href="structisis.html">isis</a> <a class="el" href="structmetric.html">metric</a> &lt;0-16777215&gt;&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Set default <a class="el" href="structmetric.html">metric</a> for circuit\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Default <a class="el" href="structmetric.html">metric</a> value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l01306">1306</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
  <span class="keywordtype">int</span> <a class="code" href="isis__circuit_8c.html#a900b5f9651c07bafd5d81cc876b93885">interval</a>;
  <span class="keywordtype">char</span> c;

  ifp = <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
  circuit = ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
  <span class="keywordflow">if</span> (circuit == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (circuit);
  c = *argv[0];
  <span class="keywordflow">if</span> (isdigit ((<span class="keywordtype">int</span>) c))
    {
      interval = atoi (argv[0]);
    }
  <span class="keywordflow">else</span>
    interval = <a class="code" href="isis__constants_8h.html#a6e83fd249aefcc54af420f8456239ac5">HELLO_MINIMAL</a>;   <span class="comment">/* FIXME: should be calculated */</span>

  circuit-&gt;<a class="code" href="structisis__circuit.html#a7edd39f2abe11ecbbd758dc1a0d3f8c0">hello_interval</a>[0] = (u_int16_t) interval;
  circuit-&gt;<a class="code" href="structisis__circuit.html#a7edd39f2abe11ecbbd758dc1a0d3f8c0">hello_interval</a>[1] = (u_int16_t) interval;

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a8a2218076f40eaa897d3ea38a7b73e85"></a><!-- doxytag: member="isis_circuit.c::ALIAS" ref="a8a2218076f40eaa897d3ea38a7b73e85" args="(no_isis_hello_interval, no_isis_hello_interval_arg_cmd,&quot;no isis hello&#45;interval (&lt;1&#45;65535&gt;|minimal)&quot;, NO_STR&quot;IS&#45;IS commands\n&quot;&quot;Set Hello interval\n&quot;&quot;Hello interval value\n&quot;&quot;Holdtime 1 second, interval depends on multiplier\n&quot;) DEFUN(isis_hello_interval_l1" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ALIAS </td>
          <td>(</td>
          <td class="paramtype">no_isis_hello_interval&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_isis_hello_interval_arg_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no <a class="el" href="structisis.html">isis</a> hello-interval (&lt;1-65535&gt;|minimal)&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Set Hello interval\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Hello interval value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Holdtime 1&#160;</td>
          <td class="paramname"><em>second</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">interval depends on multiplier\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="af5503c527a2e390b90d9fb6fca3639d0"></a><!-- doxytag: member="isis_circuit.c::circuit_lookup_by_ifp" ref="af5503c527a2e390b90d9fb6fca3639d0" args="(struct interface *ifp, struct list *list)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structisis__circuit.html">isis_circuit</a>* circuit_lookup_by_ifp </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"><em>ifp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname"><em>list</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l00154">154</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;

  <span class="keywordflow">if</span> (!list)
    <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (list, node, circuit))
    <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a> == ifp)
      <span class="keywordflow">return</span> circuit;
  
  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac745f22b7616f69709cf336bfe91c9cc"></a><!-- doxytag: member="isis_circuit.c::circuit_scan_by_ifp" ref="ac745f22b7616f69709cf336bfe91c9cc" args="(struct interface *ifp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structisis__circuit.html">isis_circuit</a>* circuit_scan_by_ifp </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"><em>ifp</em></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l00170">170</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;

  <span class="keywordflow">if</span> (!<a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a0898d0cb839d3d63fc69f5a4cd02e512">area_list</a>)
    <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a0898d0cb839d3d63fc69f5a4cd02e512">area_list</a>, node, area))
    {
      circuit = <a class="code" href="isis__circuit_8c.html#af5503c527a2e390b90d9fb6fca3639d0">circuit_lookup_by_ifp</a> (ifp, area-&gt;<a class="code" href="structisis__area.html#a1ef8753b22245b7d8fff0331deef3b21">circuit_list</a>);
      <span class="keywordflow">if</span> (circuit)
    <span class="keywordflow">return</span> circuit;
    }

  <span class="keywordflow">return</span> <a class="code" href="isis__circuit_8c.html#af5503c527a2e390b90d9fb6fca3639d0">circuit_lookup_by_ifp</a> (ifp, <a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a464d8575b5b93d8eb6d869144b4a3220">init_circ_list</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a0e981ef34777d26b91cbee95612ba505"></a><!-- doxytag: member="isis_circuit.c::circuit_update_nlpids" ref="a0e981ef34777d26b91cbee95612ba505" args="(struct isis_circuit *circuit)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void circuit_update_nlpids </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *&#160;</td>
          <td class="paramname"><em>circuit</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l00612">612</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  circuit-&gt;<a class="code" href="structisis__circuit.html#aa9672d51825e67d22c772575a9d8624a">nlpids</a>.<a class="code" href="structnlpids.html#a73f0f5f1e7aa64694d5802b91af6533b">count</a> = 0;

  <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a9dbb2266ee5b76604a27fd0855e910f5">ip_router</a>)
    {
      circuit-&gt;<a class="code" href="structisis__circuit.html#aa9672d51825e67d22c772575a9d8624a">nlpids</a>.<a class="code" href="structnlpids.html#a6dbd263750da21187880986a50fd5857">nlpids</a>[0] = <a class="code" href="isis__constants_8h.html#a9c1ffc4a81108d901cd8914d20cd4caf">NLPID_IP</a>;
      circuit-&gt;<a class="code" href="structisis__circuit.html#aa9672d51825e67d22c772575a9d8624a">nlpids</a>.<a class="code" href="structnlpids.html#a73f0f5f1e7aa64694d5802b91af6533b">count</a>++;
    }
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <span class="keywordflow">if</span> (circuit-&gt;ipv6_router)
    {
      circuit-&gt;<a class="code" href="structisis__circuit.html#aa9672d51825e67d22c772575a9d8624a">nlpids</a>.<a class="code" href="structnlpids.html#a6dbd263750da21187880986a50fd5857">nlpids</a>[circuit-&gt;<a class="code" href="structisis__circuit.html#aa9672d51825e67d22c772575a9d8624a">nlpids</a>.<a class="code" href="structnlpids.html#a73f0f5f1e7aa64694d5802b91af6533b">count</a>] = <a class="code" href="isis__constants_8h.html#af33b1ac580353b4a2ec3b766d5f90464">NLPID_IPV6</a>;
      circuit-&gt;<a class="code" href="structisis__circuit.html#aa9672d51825e67d22c772575a9d8624a">nlpids</a>.<a class="code" href="structnlpids.html#a73f0f5f1e7aa64694d5802b91af6533b">count</a>++;
    }
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a2f7e0f03eabf63ba1805b678b1f559ad"></a><!-- doxytag: member="isis_circuit.c::DEFUN" ref="a2f7e0f03eabf63ba1805b678b1f559ad" args="(ip_router_isis, ip_router_isis_cmd,&quot;ip router isis WORD&quot;,&quot;Interface Internet Protocol config commands\n&quot;&quot;IP router interface commands\n&quot;&quot;IS&#45;IS Routing for IP\n&quot;&quot;Routing process tag\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">ip_router_isis&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ip_router_isis_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;ip router <a class="el" href="structisis.html">isis</a> <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;Interface Internet Protocol <a class="el" href="structconfig.html">config</a> commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP router <a class="el" href="structinterface.html">interface</a> commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IS-IS Routing for IP\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Routing process tag\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l00830">830</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *c;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
  <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;

  ifp = (<span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *) <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (ifp);

  area = <a class="code" href="isisd_8c.html#ae30541232d52f533602c5475e8c7a123">isis_area_lookup</a> (argv[0]);

  <span class="comment">/* Prevent more than one circuit per interface */</span>
  <span class="keywordflow">if</span> (area)
    c = <a class="code" href="isis__circuit_8c.html#af5503c527a2e390b90d9fb6fca3639d0">circuit_lookup_by_ifp</a> (ifp, area-&gt;<a class="code" href="structisis__area.html#a1ef8753b22245b7d8fff0331deef3b21">circuit_list</a>);
  <span class="keywordflow">else</span>
    c = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keywordflow">if</span> (c &amp;&amp; (ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>))
    {
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>      <span class="keywordflow">if</span> (c-&gt;ipv6_router == 0)
    {
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
      <span class="comment">/* FIXME: Find the way to warn only vty users. */</span>
      <span class="comment">/* vty_out (vty, &quot;ISIS circuit is already defined%s&quot;, VTY_NEWLINE); */</span>
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>    }
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
    }

  <span class="comment">/* this is here for ciscopability */</span>
  <span class="keywordflow">if</span> (!area)
    {
      <span class="comment">/* FIXME: Find the way to warn only vty users. */</span>
      <span class="comment">/* vty_out (vty, &quot;Can&#39;t find ISIS instance %s&quot;, VTY_NEWLINE); */</span>
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }

  <span class="keywordflow">if</span> (!c)
    {
      c = <a class="code" href="isis__circuit_8c.html#af5503c527a2e390b90d9fb6fca3639d0">circuit_lookup_by_ifp</a> (ifp, <a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a464d8575b5b93d8eb6d869144b4a3220">init_circ_list</a>);
      c = <a class="code" href="isis__csm_8c.html#a96513c42708761fe8f65230cc2cfbb46">isis_csm_state_change</a> (<a class="code" href="isis__csm_8h.html#aa4e8fb3f5707745d784424f543218162">ISIS_ENABLE</a>, c, area);
      c-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a> = ifp;   <span class="comment">/* this is automatic */</span>
      ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a> = c;        <span class="comment">/* hardly related to the FSM */</span>
    }

  <span class="keywordflow">if</span> (!c)
    <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;

  c-&gt;<a class="code" href="structisis__circuit.html#a9dbb2266ee5b76604a27fd0855e910f5">ip_router</a> = 1;
  area-&gt;<a class="code" href="structisis__area.html#a0b7b9b7b8a3eb903a0deb5c20791d761">ip_circuits</a>++;
  <a class="code" href="isis__circuit_8c.html#a0e981ef34777d26b91cbee95612ba505">circuit_update_nlpids</a> (c);

  <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>;

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a72e3e0e8b41634bb08466c0bf641c69b"></a><!-- doxytag: member="isis_circuit.c::DEFUN" ref="a72e3e0e8b41634bb08466c0bf641c69b" args="(no_ip_router_isis, no_ip_router_isis_cmd,&quot;no ip router isis WORD&quot;, NO_STR&quot;Interface Internet Protocol config commands\n&quot;&quot;IP router interface commands\n&quot;&quot;IS&#45;IS Routing for IP\n&quot;&quot;Routing process tag\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_ip_router_isis&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_ip_router_isis_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> router <a class="el" href="structisis.html">isis</a> <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;Interface Internet Protocol <a class="el" href="structconfig.html">config</a> commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IP router <a class="el" href="structinterface.html">interface</a> commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;IS-IS Routing for IP\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Routing process tag\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l00894">894</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
  <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;

  ifp = (<span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *) <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (ifp);

  area = <a class="code" href="isisd_8c.html#ae30541232d52f533602c5475e8c7a123">isis_area_lookup</a> (argv[0]);
  <span class="keywordflow">if</span> (!area)
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Can&#39;t find ISIS instance %s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }
  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (area-&gt;<a class="code" href="structisis__area.html#a1ef8753b22245b7d8fff0331deef3b21">circuit_list</a>, node, circuit))
    <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a> == ifp)
      <span class="keywordflow">break</span>;
  <span class="keywordflow">if</span> (!circuit)
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Can&#39;t find ISIS interface %s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }
  circuit-&gt;<a class="code" href="structisis__circuit.html#a9dbb2266ee5b76604a27fd0855e910f5">ip_router</a> = 0;
  area-&gt;<a class="code" href="structisis__area.html#a0b7b9b7b8a3eb903a0deb5c20791d761">ip_circuits</a>--;
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <span class="keywordflow">if</span> (circuit-&gt;ipv6_router == 0)
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>    <a class="code" href="isis__csm_8c.html#a96513c42708761fe8f65230cc2cfbb46">isis_csm_state_change</a> (<a class="code" href="isis__csm_8h.html#afbc76a923b68b468bd45c60b3ff39c0e">ISIS_DISABLE</a>, circuit, area);

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a882e500e6a1bea888707043948c56cd3"></a><!-- doxytag: member="isis_circuit.c::DEFUN" ref="a882e500e6a1bea888707043948c56cd3" args="(isis_circuit_type, isis_circuit_type_cmd,&quot;isis circuit&#45;type (level&#45;1|level&#45;1&#45;2|level&#45;2&#45;only)&quot;,&quot;IS&#45;IS commands\n&quot;&quot;Configure circuit type for interface\n&quot;&quot;Level&#45;1 only adjacencies are formed\n&quot;&quot;Level&#45;1&#45;2 adjacencies are formed\n&quot;&quot;Level&#45;2 only adjacencies are formed\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">isis_circuit_type&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">isis_circuit_type_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;isis circuit-<a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a> (level-1|level-1-2|level-2-only)&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Configure circuit <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a> for <a class="el" href="structinterface.html">interface</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Level-1 only adjacencies are formed\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Level-1-2 adjacencies are formed\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Level-2 only adjacencies are formed\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l00935">935</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
  <span class="keywordtype">int</span> <a class="code" href="isis__pdu_8h.html#a4237fb9b680bb5a92208b7e02eccb6a1">circuit_t</a>;
  <span class="keywordtype">int</span> is_type;

  ifp = <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
  circuit = ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
  <span class="comment">/* UGLY - will remove l8r */</span>
  <span class="keywordflow">if</span> (circuit == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }

  <span class="comment">/* XXX what to do when ip_router_isis is not executed */</span>
  <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;

  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (circuit);

  circuit_t = <a class="code" href="isis__misc_8c.html#a97e42328beb4a58038f0c2cbd0c4c238">string2circuit_t</a> (argv[0]);

  <span class="keywordflow">if</span> (!circuit_t)
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Unknown circuit-type %s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
    }

  is_type = circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a>;
  <span class="keywordflow">if</span> (is_type == <a class="code" href="isis__constants_8h.html#a9906fe43cc332e34827b3c233d509da6">IS_LEVEL_1_AND_2</a> || is_type == circuit_t)
    <a class="code" href="isis__events_8c.html#a82a475c364fbb826267b9fd4c0ec34a0">isis_event_circuit_type_change</a> (circuit, circuit_t);
  <span class="keywordflow">else</span>
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;invalid circuit level for area %s.%s&quot;</span>,
           circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    }

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5059cf2189650e55c9dfb0d706d19b2e"></a><!-- doxytag: member="isis_circuit.c::DEFUN" ref="a5059cf2189650e55c9dfb0d706d19b2e" args="(no_isis_circuit_type, no_isis_circuit_type_cmd,&quot;no isis circuit&#45;type (level&#45;1|level&#45;1&#45;2|level&#45;2&#45;only)&quot;, NO_STR&quot;IS&#45;IS commands\n&quot;&quot;Configure circuit type for interface\n&quot;&quot;Level&#45;1 only adjacencies are formed\n&quot;&quot;Level&#45;1&#45;2 adjacencies are formed\n&quot;&quot;Level&#45;2 only adjacencies are formed\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_isis_circuit_type&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_isis_circuit_type_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no <a class="el" href="structisis.html">isis</a> circuit-<a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a> (level-1|level-1-2|level-2-only)&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Configure circuit <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a> for <a class="el" href="structinterface.html">interface</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Level-1 only adjacencies are formed\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Level-1-2 adjacencies are formed\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Level-2 only adjacencies are formed\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l00983">983</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;

  ifp = <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
  circuit = ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
  <span class="keywordflow">if</span> (circuit == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }

  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (circuit);

  <span class="comment">/*</span>
<span class="comment">   * Set the circuits level to its default value which is that of the area</span>
<span class="comment">   */</span>
  <a class="code" href="isis__events_8c.html#a82a475c364fbb826267b9fd4c0ec34a0">isis_event_circuit_type_change</a> (circuit, circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a>);

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae19643ced3250c0c13f9069768ba9dfd"></a><!-- doxytag: member="isis_circuit.c::DEFUN" ref="ae19643ced3250c0c13f9069768ba9dfd" args="(isis_passwd, isis_passwd_cmd,&quot;isis password WORD&quot;,&quot;IS&#45;IS commands\n&quot;&quot;Configure the authentication password for interface\n&quot;&quot;Password\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structisis__passwd.html">isis_passwd</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">isis_passwd_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;isis <a class="el" href="structpassword.html">password</a> <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Configure the authentication <a class="el" href="structpassword.html">password</a> for <a class="el" href="structinterface.html">interface</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Password\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l01013">1013</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
  <span class="keywordtype">int</span> len;

  ifp = <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
  circuit = ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
  <span class="keywordflow">if</span> (circuit == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }

  len = strlen (argv[0]);
  <span class="keywordflow">if</span> (len &gt; 254)
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Too long circuit password (&gt;254)%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }
  circuit-&gt;<a class="code" href="structisis__circuit.html#a601d2b4b3220757f8f7212f2a1628ab2">passwd</a>.<a class="code" href="structisis__passwd.html#a3981443a6501783995b003ab8fd82f48">len</a> = len;
  circuit-&gt;<a class="code" href="structisis__circuit.html#a601d2b4b3220757f8f7212f2a1628ab2">passwd</a>.<a class="code" href="structisis__passwd.html#a874984e0745fbcb41df9f463d831be67">type</a> = <a class="code" href="isis__common_8h.html#a1883f8c30a26198657877c3860ae1160">ISIS_PASSWD_TYPE_CLEARTXT</a>;
  strncpy ((<span class="keywordtype">char</span> *)circuit-&gt;<a class="code" href="structisis__circuit.html#a601d2b4b3220757f8f7212f2a1628ab2">passwd</a>.<a class="code" href="structisis__passwd.html#a4af92e1126df2d7d2abeef451c082567">passwd</a>, argv[0], 255);

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="abd034a7d0dddb7ac3f4dd9c07b746dca"></a><!-- doxytag: member="isis_circuit.c::DEFUN" ref="abd034a7d0dddb7ac3f4dd9c07b746dca" args="(no_isis_passwd, no_isis_passwd_cmd,&quot;no isis password&quot;, NO_STR&quot;IS&#45;IS commands\n&quot;&quot;Configure the authentication password for interface\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_isis_passwd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_isis_passwd_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no <a class="el" href="structisis.html">isis</a> <a class="el" href="structpassword.html">password</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Configure the authentication <a class="el" href="structpassword.html">password</a> for <a class="el" href="structinterface.html">interface</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l01044">1044</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;

  ifp = <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
  circuit = ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
  <span class="keywordflow">if</span> (circuit == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }

  memset (&amp;circuit-&gt;<a class="code" href="structisis__circuit.html#a601d2b4b3220757f8f7212f2a1628ab2">passwd</a>, 0, sizeof (<span class="keyword">struct</span> <a class="code" href="structisis__passwd.html">isis_passwd</a>));

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a8cd79a6f4021320ed391dd680155acc3"></a><!-- doxytag: member="isis_circuit.c::DEFUN" ref="a8cd79a6f4021320ed391dd680155acc3" args="(isis_priority, isis_priority_cmd,&quot;isis priority &lt;0&#45;127&gt;&quot;,&quot;IS&#45;IS commands\n&quot;&quot;Set priority for Designated Router election\n&quot;&quot;Priority value\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">isis_priority&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">isis_priority_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;isis priority &lt;0-127&gt;&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Set priority for Designated Router election\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Priority value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l01067">1067</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
  <span class="keywordtype">int</span> <a class="code" href="isis__pdu_8h.html#a455591b58ffb2f0744e071145c7e7207">prio</a>;

  ifp = <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
  circuit = ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
  <span class="keywordflow">if</span> (circuit == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (circuit);

  prio = atoi (argv[0]);

  circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a9087f16298d7bbf26ac8b480c932ab8d">priority</a>[0] = <a class="code" href="isis__pdu_8h.html#a455591b58ffb2f0744e071145c7e7207">prio</a>;
  circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a9087f16298d7bbf26ac8b480c932ab8d">priority</a>[1] = <a class="code" href="isis__pdu_8h.html#a455591b58ffb2f0744e071145c7e7207">prio</a>;

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3ce2f91a07aa04c3263efdedc1dc56e0"></a><!-- doxytag: member="isis_circuit.c::DEFUN" ref="a3ce2f91a07aa04c3263efdedc1dc56e0" args="(no_isis_priority, no_isis_priority_cmd,&quot;no isis priority&quot;, NO_STR&quot;IS&#45;IS commands\n&quot;&quot;Set priority for Designated Router election\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_isis_priority&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_isis_priority_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no <a class="el" href="structisis.html">isis</a> priority&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Set priority for Designated Router election\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l01094">1094</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;

  ifp = <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
  circuit = ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
  <span class="keywordflow">if</span> (circuit == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (circuit);

  circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a9087f16298d7bbf26ac8b480c932ab8d">priority</a>[0] = <a class="code" href="isis__constants_8h.html#a0756f011ef667460d583017366823244">DEFAULT_PRIORITY</a>;
  circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a9087f16298d7bbf26ac8b480c932ab8d">priority</a>[1] = <a class="code" href="isis__constants_8h.html#a0756f011ef667460d583017366823244">DEFAULT_PRIORITY</a>;

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a1fa339fb7de3bef35c0300ecc939788a"></a><!-- doxytag: member="isis_circuit.c::DEFUN" ref="a1fa339fb7de3bef35c0300ecc939788a" args="(no_isis_priority_l1, no_isis_priority_l1_cmd,&quot;no isis priority level&#45;1&quot;, NO_STR&quot;IS&#45;IS commands\n&quot;&quot;Set priority for Designated Router election\n&quot;&quot;Specify priority for level&#45;1 routing\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_isis_priority_l1&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_isis_priority_l1_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no <a class="el" href="structisis.html">isis</a> priority level-1&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Set priority for Designated Router election\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Specify priority for level-1 routing\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l01153">1153</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;

  ifp = <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
  circuit = ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
  <span class="keywordflow">if</span> (circuit == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (circuit);

  circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a9087f16298d7bbf26ac8b480c932ab8d">priority</a>[0] = <a class="code" href="isis__constants_8h.html#a0756f011ef667460d583017366823244">DEFAULT_PRIORITY</a>;

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae4203f23e501a5f67205ecd885e6b5b6"></a><!-- doxytag: member="isis_circuit.c::DEFUN" ref="ae4203f23e501a5f67205ecd885e6b5b6" args="(no_isis_priority_l2, no_isis_priority_l2_cmd,&quot;no isis priority level&#45;2&quot;, NO_STR&quot;IS&#45;IS commands\n&quot;&quot;Set priority for Designated Router election\n&quot;&quot;Specify priority for level&#45;2 routing\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_isis_priority_l2&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_isis_priority_l2_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no <a class="el" href="structisis.html">isis</a> priority level-2&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Set priority for Designated Router election\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Specify priority for level-2 routing\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l01213">1213</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;

  ifp = <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
  circuit = ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
  <span class="keywordflow">if</span> (circuit == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (circuit);

  circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a9087f16298d7bbf26ac8b480c932ab8d">priority</a>[1] = <a class="code" href="isis__constants_8h.html#a0756f011ef667460d583017366823244">DEFAULT_PRIORITY</a>;

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a1189f123f15b23c62310cf35f0bf7fa9"></a><!-- doxytag: member="isis_circuit.c::DEFUN" ref="a1189f123f15b23c62310cf35f0bf7fa9" args="(no_isis_metric, no_isis_metric_cmd,&quot;no isis metric&quot;, NO_STR&quot;IS&#45;IS commands\n&quot;&quot;Set default metric for circuit\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_isis_metric&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_isis_metric_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no <a class="el" href="structisis.html">isis</a> <a class="el" href="structmetric.html">metric</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Set default <a class="el" href="structmetric.html">metric</a> for circuit\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l01280">1280</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;

  ifp = <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
  circuit = ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
  <span class="keywordflow">if</span> (circuit == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (circuit);

  circuit-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>[0] = <a class="code" href="isis__constants_8h.html#ae0395bf404df3647661120cefe80c298">DEFAULT_CIRCUIT_METRICS</a>;
  circuit-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>[1] = <a class="code" href="isis__constants_8h.html#ae0395bf404df3647661120cefe80c298">DEFAULT_CIRCUIT_METRICS</a>;
  circuit-&gt;<a class="code" href="structisis__circuit.html#a33545b43653e59a814cbd283c3f8c056">metrics</a>[0].<a class="code" href="structmetric.html#ae927ddb546511096f632820b678d73bf">metric_default</a> = <a class="code" href="isis__constants_8h.html#ae0395bf404df3647661120cefe80c298">DEFAULT_CIRCUIT_METRICS</a>;
  circuit-&gt;<a class="code" href="structisis__circuit.html#a33545b43653e59a814cbd283c3f8c056">metrics</a>[1].<a class="code" href="structmetric.html#ae927ddb546511096f632820b678d73bf">metric_default</a> = <a class="code" href="isis__constants_8h.html#ae0395bf404df3647661120cefe80c298">DEFAULT_CIRCUIT_METRICS</a>;

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9fa39e937c52235551eecdee2bacb3a9"></a><!-- doxytag: member="isis_circuit.c::DEFUN" ref="a9fa39e937c52235551eecdee2bacb3a9" args="(no_isis_hello_interval, no_isis_hello_interval_cmd,&quot;no isis hello&#45;interval&quot;, NO_STR&quot;IS&#45;IS commands\n&quot;&quot;Set Hello interval\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_isis_hello_interval&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_isis_hello_interval_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no <a class="el" href="structisis.html">isis</a> hello-interval&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;IS-IS commands\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Set Hello interval\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l01349">1349</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;

  ifp = <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9179508dca757a3b7c345c86769b5b9a">index</a>;
  circuit = ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a>;
  <span class="keywordflow">if</span> (circuit == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
    }
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (circuit);


  circuit-&gt;<a class="code" href="structisis__circuit.html#a7edd39f2abe11ecbbd758dc1a0d3f8c0">hello_interval</a>[0] = <a class="code" href="isis__constants_8h.html#ad91e2777a540273c5c76b631c2cafe06">HELLO_INTERVAL</a>;  <span class="comment">/* Default is 1 sec. */</span>
  circuit-&gt;<a class="code" href="structisis__circuit.html#a7edd39f2abe11ecbbd758dc1a0d3f8c0">hello_interval</a>[1] = <a class="code" href="isis__constants_8h.html#ad91e2777a540273c5c76b631c2cafe06">HELLO_INTERVAL</a>;

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a900b5f9651c07bafd5d81cc876b93885"></a><!-- doxytag: member="isis_circuit.c::interval" ref="a900b5f9651c07bafd5d81cc876b93885" args="(&lt; 1&#45;65535 &gt;|minimal) level&#45;1&quot;" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structisis.html">isis</a> hello interval </td>
          <td>(</td>
          <td class="paramtype">&lt; 1-65535 &gt;|&#160;</td>
          <td class="paramname"><em>minimal</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a52dfd04507c31c59f97c524f4b042483"></a><!-- doxytag: member="isis_circuit.c::isis_circuit_add_addr" ref="a52dfd04507c31c59f97c524f4b042483" args="(struct isis_circuit *circuit, struct connected *connected)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void isis_circuit_add_addr </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *&#160;</td>
          <td class="paramname"><em>circuit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structconnected.html">connected</a> *&#160;</td>
          <td class="paramname"><em>connected</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l00226">226</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *ipv4;
  u_char buf[BUFSIZ];
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <span class="keyword">struct </span>prefix_ipv6 *ipv6;
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>

  <span class="keywordflow">if</span> (!circuit-&gt;<a class="code" href="structisis__circuit.html#adcde796f44a1e725abe092f95a6cb075">ip_addrs</a>)
    circuit-&gt;<a class="code" href="structisis__circuit.html#adcde796f44a1e725abe092f95a6cb075">ip_addrs</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <span class="keywordflow">if</span> (!circuit-&gt;ipv6_link)
    circuit-&gt;ipv6_link = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
  <span class="keywordflow">if</span> (!circuit-&gt;ipv6_non_link)
    circuit-&gt;ipv6_non_link = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>

  memset (&amp;buf, 0, BUFSIZ);
  <span class="keywordflow">if</span> (connected-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == AF_INET)
    {
      ipv4 = <a class="code" href="prefix_8c.html#af674876d8d874e88225f559322d797ac">prefix_ipv4_new</a> ();
      ipv4-&gt;<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = connected-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>;
      ipv4-&gt;prefix = connected-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>;
      <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#adcde796f44a1e725abe092f95a6cb075">ip_addrs</a>, ipv4);
      <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>)
    <a class="code" href="isis__lsp_8c.html#a31456cf3ff9953708c1d0328a99bfacc">lsp_regenerate_schedule</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>);

<span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<span class="preprocessor"></span>      <a class="code" href="prefix_8c.html#a8b848557695ae5694bd2282eba23e367">prefix2str</a> (connected-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>, buf, BUFSIZ);
      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Added IP address %s to circuit %d&quot;</span>, buf,
         circuit-&gt;<a class="code" href="structisis__circuit.html#a10453f6bcc1e8f1cb466240a81836ba9">circuit_id</a>);
<span class="preprocessor">#endif </span><span class="comment">/* EXTREME_DEBUG */</span>
    }
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <span class="keywordflow">if</span> (connected-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == AF_INET6)
    {
      ipv6 = prefix_ipv6_new ();
      ipv6-&gt;prefixlen = connected-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>;
      ipv6-&gt;prefix = connected-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;u.prefix6;

      <span class="keywordflow">if</span> (IN6_IS_ADDR_LINKLOCAL (&amp;ipv6-&gt;prefix))
    <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (circuit-&gt;ipv6_link, ipv6);
      <span class="keywordflow">else</span>
    <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (circuit-&gt;ipv6_non_link, ipv6);
      <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>)
    <a class="code" href="isis__lsp_8c.html#a31456cf3ff9953708c1d0328a99bfacc">lsp_regenerate_schedule</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>);

<span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<span class="preprocessor"></span>      <a class="code" href="prefix_8c.html#a8b848557695ae5694bd2282eba23e367">prefix2str</a> (connected-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>, buf, BUFSIZ);
      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Added IPv6 address %s to circuit %d&quot;</span>, buf,
         circuit-&gt;<a class="code" href="structisis__circuit.html#a10453f6bcc1e8f1cb466240a81836ba9">circuit_id</a>);
<span class="preprocessor">#endif </span><span class="comment">/* EXTREME_DEBUG */</span>
    }
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a93edd9bcc18156fda5f2a2e261e422f8"></a><!-- doxytag: member="isis_circuit.c::isis_circuit_configure" ref="a93edd9bcc18156fda5f2a2e261e422f8" args="(struct isis_circuit *circuit, struct isis_area *area)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void isis_circuit_configure </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *&#160;</td>
          <td class="paramname"><em>circuit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structisis__area.html">isis_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l00101">101</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
  circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a> = <a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
  <span class="comment">/*</span>
<span class="comment">   * The level for the circuit is same as for the area, unless configured</span>
<span class="comment">   * otherwise.</span>
<span class="comment">   */</span>
  circuit-&gt;<a class="code" href="structisis__circuit.html#ab222d6d0b054faa159d72bcb9768b3fb">circuit_is_type</a> = area-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a>;
  <span class="comment">/*</span>
<span class="comment">   * Default values</span>
<span class="comment">   */</span>
  <span class="keywordflow">for</span> (i = 0; i &lt; 2; i++)
    {
      circuit-&gt;<a class="code" href="structisis__circuit.html#a7edd39f2abe11ecbbd758dc1a0d3f8c0">hello_interval</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] = <a class="code" href="isis__constants_8h.html#ad91e2777a540273c5c76b631c2cafe06">HELLO_INTERVAL</a>;
      circuit-&gt;<a class="code" href="structisis__circuit.html#a9af263fd35717a7f759e4a0cf2fd1a2b">hello_multiplier</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] = <a class="code" href="isis__constants_8h.html#a78063dfa967b692d4129669779c4b5d9">HELLO_MULTIPLIER</a>;
      circuit-&gt;<a class="code" href="structisis__circuit.html#a1b3a587132c475f3b90b5f8b03ec182d">csnp_interval</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] = <a class="code" href="isis__constants_8h.html#ade8e15a2ed12580594384b1d7efff5b8">CSNP_INTERVAL</a>;
      circuit-&gt;<a class="code" href="structisis__circuit.html#ab73d895f1c1588eb68e5b467f7f1b479">psnp_interval</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] = <a class="code" href="isis__constants_8h.html#a906a329e6db489e444fe165ee84f4a12">PSNP_INTERVAL</a>;
      circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a9087f16298d7bbf26ac8b480c932ab8d">priority</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] = <a class="code" href="isis__constants_8h.html#a0756f011ef667460d583017366823244">DEFAULT_PRIORITY</a>;
    }
  <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a569e39bbf7fafd533eae2eeafa671b8c">circ_type</a> == <a class="code" href="isis__circuit_8h.html#a01a94c5f24c88efb64f791a749ae8f95">CIRCUIT_T_BROADCAST</a>)
    {
      circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#ada9bf2584373a37aed06b2e4c9e796f9">adjdb</a>[0] = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
      circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#ada9bf2584373a37aed06b2e4c9e796f9">adjdb</a>[1] = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
      circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a83676730231d3a5aad5d5914957a2b68">pad_hellos</a> = 1;
    }
  circuit-&gt;<a class="code" href="structisis__circuit.html#af1aaab2f0fb562b9c38d9b67828fa8f1">lsp_interval</a> = <a class="code" href="isis__constants_8h.html#a1c070fe4231b3f93ea76aeba0e75e7ca">LSP_INTERVAL</a>;

  <span class="comment">/*</span>
<span class="comment">   * Add the circuit into area</span>
<span class="comment">   */</span>
  <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (area-&gt;<a class="code" href="structisis__area.html#a1ef8753b22245b7d8fff0331deef3b21">circuit_list</a>, circuit);

  circuit-&gt;<a class="code" href="structisis__circuit.html#abac1ddd5e6459cc84fe32064f6643471">idx</a> = <a class="code" href="isis__flags_8c.html#a38e4b3f065493a2d165f28cc76402624">flags_get_index</a> (&amp;area-&gt;<a class="code" href="structisis__area.html#ac786b50a7d59469f38a0a74310a7bfa4">flags</a>);
  circuit-&gt;<a class="code" href="structisis__circuit.html#a3540c30e2a6967daf9f9e1b76b00e2be">lsp_queue</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae430309397e7149d83c28730eb4a9c0b"></a><!-- doxytag: member="isis_circuit.c::isis_circuit_deconfigure" ref="ae430309397e7149d83c28730eb4a9c0b" args="(struct isis_circuit *circuit, struct isis_area *area)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void isis_circuit_deconfigure </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *&#160;</td>
          <td class="paramname"><em>circuit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structisis__area.html">isis_area</a> *&#160;</td>
          <td class="paramname"><em>area</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l00141">141</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{

  <span class="comment">/* Remove circuit from area */</span>
  <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (area-&gt;<a class="code" href="structisis__area.html#a1ef8753b22245b7d8fff0331deef3b21">circuit_list</a>, circuit);
  <span class="comment">/* Free the index of SRM and SSN flags */</span>
  <a class="code" href="isis__flags_8c.html#a76d181d8ee84e85cc39e217788ef16c5">flags_free_index</a> (&amp;area-&gt;<a class="code" href="structisis__area.html#ac786b50a7d59469f38a0a74310a7bfa4">flags</a>, circuit-&gt;<a class="code" href="structisis__circuit.html#abac1ddd5e6459cc84fe32064f6643471">idx</a>);

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a790e44fd592225c189c35ef503f4f117"></a><!-- doxytag: member="isis_circuit.c::isis_circuit_del" ref="a790e44fd592225c189c35ef503f4f117" args="(struct isis_circuit *circuit)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void isis_circuit_del </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *&#160;</td>
          <td class="paramname"><em>circuit</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l00190">190</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{

  <span class="keywordflow">if</span> (!circuit)
    <span class="keywordflow">return</span>;

  <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a569e39bbf7fafd533eae2eeafa671b8c">circ_type</a> == <a class="code" href="isis__circuit_8h.html#a01a94c5f24c88efb64f791a749ae8f95">CIRCUIT_T_BROADCAST</a>)
    {
      <span class="comment">/* destroy adjacency databases */</span>
      <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#ada9bf2584373a37aed06b2e4c9e796f9">adjdb</a>[0])
    <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#ada9bf2584373a37aed06b2e4c9e796f9">adjdb</a>[0]);
      <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#ada9bf2584373a37aed06b2e4c9e796f9">adjdb</a>[1])
    <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#ada9bf2584373a37aed06b2e4c9e796f9">adjdb</a>[1]);
      <span class="comment">/* destroy neighbour lists */</span>
      <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a1a8b5b8fcf6defb0b21b509d99953742">lan_neighs</a>[0])
    <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a1a8b5b8fcf6defb0b21b509d99953742">lan_neighs</a>[0]);
      <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a1a8b5b8fcf6defb0b21b509d99953742">lan_neighs</a>[1])
    <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a1a8b5b8fcf6defb0b21b509d99953742">lan_neighs</a>[1]);
      <span class="comment">/* destroy addresses */</span>
    }
  <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#adcde796f44a1e725abe092f95a6cb075">ip_addrs</a>)
    <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#adcde796f44a1e725abe092f95a6cb075">ip_addrs</a>);
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <span class="keywordflow">if</span> (circuit-&gt;ipv6_link)
    <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (circuit-&gt;ipv6_link);
  <span class="keywordflow">if</span> (circuit-&gt;ipv6_non_link)
    <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (circuit-&gt;ipv6_non_link);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>

  <span class="comment">/* and lastly the circuit itself */</span>
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba21e19415e532cc6bcf00314650a5a8f4">MTYPE_ISIS_CIRCUIT</a>, circuit);

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a40467f80d25a3d5fc46184634d38a163"></a><!-- doxytag: member="isis_circuit.c::isis_circuit_del_addr" ref="a40467f80d25a3d5fc46184634d38a163" args="(struct isis_circuit *circuit, struct connected *connected)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void isis_circuit_del_addr </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *&#160;</td>
          <td class="paramname"><em>circuit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structconnected.html">connected</a> *&#160;</td>
          <td class="paramname"><em>connected</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l00285">285</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *ipv4, *<a class="code" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  u_char buf[BUFSIZ];
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <span class="keyword">struct </span>prefix_ipv6 *ipv6, *ip6 = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keywordtype">int</span> found = 0;
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>

  memset (&amp;buf, 0, BUFSIZ);
  <span class="keywordflow">if</span> (connected-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == AF_INET)
    {
      ipv4 = <a class="code" href="prefix_8c.html#af674876d8d874e88225f559322d797ac">prefix_ipv4_new</a> ();
      ipv4-&gt;<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = connected-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>;
      ipv4-&gt;prefix = connected-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>;

      <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#adcde796f44a1e725abe092f95a6cb075">ip_addrs</a>, node, ip))
        <span class="keywordflow">if</span> (<a class="code" href="prefix_8c.html#ac3645297b5669182b5052aa7689712af">prefix_same</a> ((<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) ip, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;ipv4))
          <span class="keywordflow">break</span>;

      <span class="keywordflow">if</span> (ip)
    {
      <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#adcde796f44a1e725abe092f95a6cb075">ip_addrs</a>, ip);
      <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>)
        <a class="code" href="isis__lsp_8c.html#a31456cf3ff9953708c1d0328a99bfacc">lsp_regenerate_schedule</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>);
    }
      <span class="keywordflow">else</span>
    {
      <a class="code" href="prefix_8c.html#a8b848557695ae5694bd2282eba23e367">prefix2str</a> (connected-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>, (<span class="keywordtype">char</span> *)buf, BUFSIZ);
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;Nonexitant ip address %s removal attempt from circuit \</span>
<span class="stringliteral">             %d&quot;</span>, buf, circuit-&gt;<a class="code" href="structisis__circuit.html#a10453f6bcc1e8f1cb466240a81836ba9">circuit_id</a>);
    }
    }
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <span class="keywordflow">if</span> (connected-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == AF_INET6)
    {
      ipv6 = prefix_ipv6_new ();
      ipv6-&gt;prefixlen = connected-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>;
      ipv6-&gt;prefix = connected-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;u.prefix6;

      <span class="keywordflow">if</span> (IN6_IS_ADDR_LINKLOCAL (&amp;ipv6-&gt;prefix))
    {
      <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (circuit-&gt;ipv6_link, node, ip6))
        {
          <span class="keywordflow">if</span> (<a class="code" href="prefix_8c.html#ac3645297b5669182b5052aa7689712af">prefix_same</a> ((<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) ip6, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) ipv6))
        <span class="keywordflow">break</span>;
        }
      <span class="keywordflow">if</span> (ip6)
        {
          <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (circuit-&gt;ipv6_link, ip6);
          found = 1;
        }
    }
      <span class="keywordflow">else</span>
    {
      <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (circuit-&gt;ipv6_non_link, node, ip6))
        {
          <span class="keywordflow">if</span> (<a class="code" href="prefix_8c.html#ac3645297b5669182b5052aa7689712af">prefix_same</a> ((<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) ip6, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) ipv6))
        <span class="keywordflow">break</span>;
        }
      <span class="keywordflow">if</span> (ip6)
        {
          <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (circuit-&gt;ipv6_non_link, ip6);
          found = 1;
        }
    }

      <span class="keywordflow">if</span> (!found)
    {
      <a class="code" href="prefix_8c.html#a8b848557695ae5694bd2282eba23e367">prefix2str</a> (connected-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>, (<span class="keywordtype">char</span> *)buf, BUFSIZ);
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;Nonexitant ip address %s removal attempt from \</span>
<span class="stringliteral">             circuit %d&quot;</span>, buf, circuit-&gt;<a class="code" href="structisis__circuit.html#a10453f6bcc1e8f1cb466240a81836ba9">circuit_id</a>);
    }
      <span class="keywordflow">else</span>
    <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>)
      <a class="code" href="isis__lsp_8c.html#a31456cf3ff9953708c1d0328a99bfacc">lsp_regenerate_schedule</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>);
    }
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a45bfcf431df2ee8c5d4bbf23b5d3104e"></a><!-- doxytag: member="isis_circuit.c::isis_circuit_down" ref="a45bfcf431df2ee8c5d4bbf23b5d3104e" args="(struct isis_circuit *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void isis_circuit_down </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *&#160;</td>
          <td class="paramname"><em>circuit</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l00589">589</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="comment">/* Cancel all active threads -- FIXME: wrong place */</span>
  <span class="comment">/* HT: Read thread if GNU_LINUX, TIMER thread otherwise. */</span>
  <a class="code" href="thread_8h.html#a7e1de4fc338e4feae498978461742dbb">THREAD_OFF</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#afa7165030b312ae2ce406ec15a4624df">t_read</a>);
  <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a569e39bbf7fafd533eae2eeafa671b8c">circ_type</a> == <a class="code" href="isis__circuit_8h.html#a01a94c5f24c88efb64f791a749ae8f95">CIRCUIT_T_BROADCAST</a>)
    {
      <a class="code" href="thread_8h.html#ae1dfd3f5f643212148d60a41d9f2192a">THREAD_TIMER_OFF</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#ae47a7d7fa924f3848bff4793fc250826">t_send_lan_hello</a>[0]);
      <a class="code" href="thread_8h.html#ae1dfd3f5f643212148d60a41d9f2192a">THREAD_TIMER_OFF</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#ae47a7d7fa924f3848bff4793fc250826">t_send_lan_hello</a>[1]);
      <a class="code" href="thread_8h.html#ae1dfd3f5f643212148d60a41d9f2192a">THREAD_TIMER_OFF</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a0eff61cf3ddb83196c960a96ce7f8242">t_run_dr</a>[0]);
      <a class="code" href="thread_8h.html#ae1dfd3f5f643212148d60a41d9f2192a">THREAD_TIMER_OFF</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a0eff61cf3ddb83196c960a96ce7f8242">t_run_dr</a>[1]);
    }
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a569e39bbf7fafd533eae2eeafa671b8c">circ_type</a> == <a class="code" href="isis__circuit_8h.html#aa2113a49e7c75a5d4997d59df0530726">CIRCUIT_T_P2P</a>)
    {
      <a class="code" href="thread_8h.html#ae1dfd3f5f643212148d60a41d9f2192a">THREAD_TIMER_OFF</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a15852a59ea8be80680abac2070659440">p2p</a>.<a class="code" href="structisis__p2p__info.html#adaa34f30db7fc536f5aec39d08fcbf64">t_send_p2p_hello</a>);
    }
  <span class="comment">/* close the socket */</span>
  close (circuit-&gt;<a class="code" href="structisis__circuit.html#a2fa1849a71a356f206776c2329f27dbc">fd</a>);

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae400c0f8f0ed2502bdb49875a3b972f1"></a><!-- doxytag: member="isis_circuit.c::isis_circuit_if_add" ref="ae400c0f8f0ed2502bdb49875a3b972f1" args="(struct isis_circuit *circuit, struct interface *ifp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void isis_circuit_if_add </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *&#160;</td>
          <td class="paramname"><em>circuit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"><em>ifp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l00369">369</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
  <span class="keyword">struct </span><a class="code" href="structconnected.html">connected</a> *conn;

  circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a> = <a class="code" href="structconnected.html#a93c575385a71507f8c29ec26344d09d3">ifp</a>;
  ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a> = circuit;

  circuit-&gt;<a class="code" href="structisis__circuit.html#a10453f6bcc1e8f1cb466240a81836ba9">circuit_id</a> = ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a> % 255; <span class="comment">/* FIXME: Why not ? */</span>

  <span class="comment">/*  isis_circuit_update_addrs (circuit, ifp); */</span>

  <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a88f3bd141d217db7e4118a78b1db1b60">if_is_broadcast</a> (ifp))
    {
      circuit-&gt;<a class="code" href="structisis__circuit.html#a569e39bbf7fafd533eae2eeafa671b8c">circ_type</a> = <a class="code" href="isis__circuit_8h.html#a01a94c5f24c88efb64f791a749ae8f95">CIRCUIT_T_BROADCAST</a>;
      <span class="comment">/*</span>
<span class="comment">       * Get the Hardware Address</span>
<span class="comment">       */</span>
<span class="preprocessor">#ifdef HAVE_STRUCT_SOCKADDR_DL</span>
<span class="preprocessor"></span><span class="preprocessor">#ifndef SUNOS_5</span>
<span class="preprocessor"></span>      <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;sdl.sdl_alen != <a class="code" href="isis__circuit_8c.html#abf4fcaacb1ad2010711b7c880ec2ed20">ETHER_ADDR_LEN</a>)
    <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;unsupported link layer&quot;</span>);
      <span class="keywordflow">else</span>
    <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#ac7adabf9b24b03c93e73bb9b03c2192b">snpa</a>, LLADDR (&amp;circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;sdl),
        <a class="code" href="isis__constants_8h.html#a9822d89774e0d6ddaa06503950130423">ETH_ALEN</a>);
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span><span class="preprocessor">#else</span>
<span class="preprocessor"></span>      <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;<a class="code" href="structinterface.html#a6521c9be15367445abca01bbba9c2cb4">hw_addr_len</a> != <a class="code" href="isis__constants_8h.html#a9822d89774e0d6ddaa06503950130423">ETH_ALEN</a>)
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;unsupported link layer&quot;</span>);
    }
      <span class="keywordflow">else</span>
    {
      <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#ac7adabf9b24b03c93e73bb9b03c2192b">snpa</a>, circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;<a class="code" href="structinterface.html#a6fe2f3c7e5be26c4e376b514d86f5c22">hw_addr</a>, <a class="code" href="isis__constants_8h.html#a9822d89774e0d6ddaa06503950130423">ETH_ALEN</a>);
    }
<span class="preprocessor">#ifdef EXTREME_DEGUG</span>
<span class="preprocessor"></span>      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;isis_circuit_if_add: if_id %d, isomtu %d snpa %s&quot;</span>,
         circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>, <a class="code" href="isis__constants_8h.html#aa507eb18af6ca6d6db6e3db750ab0737">ISO_MTU</a> (circuit),
         <a class="code" href="isis__misc_8c.html#a9ff6d4a3900eef27814548c4c5357090">snpa_print</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#ac7adabf9b24b03c93e73bb9b03c2192b">snpa</a>));

<span class="preprocessor">#endif </span><span class="comment">/* EXTREME_DEBUG */</span>
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_STRUCT_SOCKADDR_DL */</span>
    }
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a61aed2ccc7ec47d6822546664ea77f0c">if_is_pointopoint</a> (ifp))
    {
      circuit-&gt;<a class="code" href="structisis__circuit.html#a569e39bbf7fafd533eae2eeafa671b8c">circ_type</a> = <a class="code" href="isis__circuit_8h.html#aa2113a49e7c75a5d4997d59df0530726">CIRCUIT_T_P2P</a>;
    }
  <span class="keywordflow">else</span>
    {
      <span class="comment">/* It&#39;s normal in case of loopback etc. */</span>
      <span class="keywordflow">if</span> (<a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#a133d8993848d3fa2c41270511f133eb7">DEBUG_EVENTS</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;isis_circuit_if_add: unsupported media&quot;</span>);
    }

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (ifp-&gt;<a class="code" href="structinterface.html#ac7c47b5cc1df81e51bf1ecea97b4d4b3">connected</a>, node, nnode, conn))
    <a class="code" href="isis__circuit_8c.html#a52dfd04507c31c59f97c524f4b042483">isis_circuit_add_addr</a> (circuit, conn);

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af329d161db12da43e1361ac390ac0ec5"></a><!-- doxytag: member="isis_circuit.c::isis_circuit_if_del" ref="af329d161db12da43e1361ac390ac0ec5" args="(struct isis_circuit *circuit)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void isis_circuit_if_del </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *&#160;</td>
          <td class="paramname"><em>circuit</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l00495">495</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a2f6bceb3c6efaf164afd01a4b872320f"></a><!-- doxytag: member="isis_circuit.c::isis_circuit_init" ref="a2f6bceb3c6efaf164afd01a4b872320f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void isis_circuit_init </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l02056">2056</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="comment">/* Initialize Zebra interface data structure */</span>
  <a class="code" href="if_8c.html#ac78cad8082fa880e50b2c945f8a3c33d">if_init</a> ();
  <a class="code" href="if_8c.html#af0a4090e849fe0dff798e976d8fa2482">if_add_hook</a> (<a class="code" href="if_8h.html#a4185c142d0c9619a6cab25061dfd50f3">IF_NEW_HOOK</a>, <a class="code" href="isis__circuit_8c.html#a8105376f97b6cc730ec0daeeff8d21a3">isis_if_new_hook</a>);
  <a class="code" href="if_8c.html#af0a4090e849fe0dff798e976d8fa2482">if_add_hook</a> (<a class="code" href="if_8h.html#afa0a12fa62fd3fd8b5fb9a1b917f3afa">IF_DELETE_HOOK</a>, <a class="code" href="isis__circuit_8c.html#ae0cff0254c709b737c11ad3827e2deee">isis_if_delete_hook</a>);

  <span class="comment">/* Install interface node */</span>
  <a class="code" href="command_8c.html#a7ee8a7c258e1e5a6e3ff6173dd1658e3">install_node</a> (&amp;<a class="code" href="interface_8c.html#a16f01e8f31d361deea8af5ea55c2d2ec">interface_node</a>, <a class="code" href="isis__circuit_8c.html#a30f2f4ba1a5ce5e5d838e38e5bb5a32e">isis_interface_config_write</a>);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;interface_cmd);

  <a class="code" href="command_8h.html#affb2f399c88b8a225b2719bbe928e4de">install_default</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;<a class="code" href="if_8h.html#a51777a76e1c996fcf81ab577db829158">interface_desc_cmd</a>);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_interface_desc_cmd);

  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;ip_router_isis_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_ip_router_isis_cmd);

  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;isis_circuit_type_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_isis_circuit_type_cmd);

  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;isis_passwd_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_isis_passwd_cmd);

  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;isis_priority_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_isis_priority_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_isis_priority_arg_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;isis_priority_l1_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_isis_priority_l1_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_isis_priority_l1_arg_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;isis_priority_l2_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_isis_priority_l2_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_isis_priority_l2_arg_cmd);

  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;isis_metric_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_isis_metric_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_isis_metric_arg_cmd);

  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;isis_hello_interval_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_isis_hello_interval_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_isis_hello_interval_arg_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;<a class="code" href="isis__circuit_8c.html#acdc3e3e190f3d90d9ee7c51a4aaf7c7c">isis_hello_interval_l1_cmd</a>);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_isis_hello_interval_l1_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_isis_hello_interval_l1_arg_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;isis_hello_interval_l2_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_isis_hello_interval_l2_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_isis_hello_interval_l2_arg_cmd);

  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;isis_hello_multiplier_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_isis_hello_multiplier_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_isis_hello_multiplier_arg_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;isis_hello_multiplier_l1_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_isis_hello_multiplier_l1_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_isis_hello_multiplier_l1_arg_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;isis_hello_multiplier_l2_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_isis_hello_multiplier_l2_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_isis_hello_multiplier_l2_arg_cmd);

  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;isis_hello_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_isis_hello_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;csnp_interval_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_csnp_interval_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_csnp_interval_arg_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;csnp_interval_l1_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_csnp_interval_l1_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_csnp_interval_l1_arg_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;csnp_interval_l2_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_csnp_interval_l2_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_csnp_interval_l2_arg_cmd);

<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;ipv6_router_isis_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682ab6c1e2776b59860b606da9864e608e39">INTERFACE_NODE</a>, &amp;no_ipv6_router_isis_cmd);
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>}
</pre></div>
</div>
</div>
<a class="anchor" id="a9ceb5807f17c758f59952a6861ab2d3a"></a><!-- doxytag: member="isis_circuit.c::isis_circuit_new" ref="a9ceb5807f17c758f59952a6861ab2d3a" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structisis__circuit.html">isis_circuit</a>* isis_circuit_new </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l00073">73</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

  circuit = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba21e19415e532cc6bcf00314650a5a8f4">MTYPE_ISIS_CIRCUIT</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structisis__circuit.html">isis_circuit</a>));
  <span class="keywordflow">if</span> (circuit)
    {
      <span class="comment">/* set default metrics for circuit */</span>
      <span class="keywordflow">for</span> (i = 0; i &lt; 2; i++)
    {
      circuit-&gt;<a class="code" href="structisis__circuit.html#a33545b43653e59a814cbd283c3f8c056">metrics</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].<a class="code" href="structmetric.html#ae927ddb546511096f632820b678d73bf">metric_default</a> = <a class="code" href="isis__constants_8h.html#ae0395bf404df3647661120cefe80c298">DEFAULT_CIRCUIT_METRICS</a>;
      circuit-&gt;<a class="code" href="structisis__circuit.html#a33545b43653e59a814cbd283c3f8c056">metrics</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].<a class="code" href="structmetric.html#ad32785c7cdf67ab7a3f5c5da004a7e9c">metric_expense</a> = <a class="code" href="isis__constants_8h.html#a8e4a0ce9ffbaa12adf610ab7d67653c5">METRICS_UNSUPPORTED</a>;
      circuit-&gt;<a class="code" href="structisis__circuit.html#a33545b43653e59a814cbd283c3f8c056">metrics</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].<a class="code" href="structmetric.html#a315704ab59d2e6c334f2e2b6b4901e18">metric_error</a> = <a class="code" href="isis__constants_8h.html#a8e4a0ce9ffbaa12adf610ab7d67653c5">METRICS_UNSUPPORTED</a>;
      circuit-&gt;<a class="code" href="structisis__circuit.html#a33545b43653e59a814cbd283c3f8c056">metrics</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].<a class="code" href="structmetric.html#aa373451a3966142956168440f174d1c5">metric_delay</a> = <a class="code" href="isis__constants_8h.html#a8e4a0ce9ffbaa12adf610ab7d67653c5">METRICS_UNSUPPORTED</a>;
      circuit-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>] = <a class="code" href="isis__constants_8h.html#ae0395bf404df3647661120cefe80c298">DEFAULT_CIRCUIT_METRICS</a>;
    }
    }
  <span class="keywordflow">else</span>
    {
      <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;Can&#39;t malloc isis circuit&quot;</span>);
      <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }

  <span class="keywordflow">return</span> circuit;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a48da6c4124ce91ea2a2be712ab7c37b9"></a><!-- doxytag: member="isis_circuit.c::isis_circuit_up" ref="a48da6c4124ce91ea2a2be712ab7c37b9" args="(struct isis_circuit *circuit)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void isis_circuit_up </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *&#160;</td>
          <td class="paramname"><em>circuit</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l00504">504</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{

  <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a569e39bbf7fafd533eae2eeafa671b8c">circ_type</a> == <a class="code" href="isis__circuit_8h.html#a01a94c5f24c88efb64f791a749ae8f95">CIRCUIT_T_BROADCAST</a>)
    {
      <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a0005638db8e0ad98679efbe89ab2ef14">min_bcast_mtu</a> == 0 ||
      <a class="code" href="isis__constants_8h.html#aa507eb18af6ca6d6db6e3db750ab0737">ISO_MTU</a> (circuit) &lt; circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a0005638db8e0ad98679efbe89ab2ef14">min_bcast_mtu</a>)
    circuit-&gt;<a class="code" href="structisis__circuit.html#a4284617c89806a77b3c2314e15ac508b">area</a>-&gt;<a class="code" href="structisis__area.html#a0005638db8e0ad98679efbe89ab2ef14">min_bcast_mtu</a> = <a class="code" href="isis__constants_8h.html#aa507eb18af6ca6d6db6e3db750ab0737">ISO_MTU</a> (circuit);
      <span class="comment">/*</span>
<span class="comment">       * ISO 10589 - 8.4.1 Enabling of broadcast circuits</span>
<span class="comment">       */</span>

      <span class="comment">/* initilizing the hello sending threads</span>
<span class="comment">       * for a broadcast IF</span>
<span class="comment">       */</span>

      <span class="comment">/* 8.4.1 a) commence sending of IIH PDUs */</span>

      <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#ab222d6d0b054faa159d72bcb9768b3fb">circuit_is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>)
    {
      <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="isis__pdu_8c.html#ac3719e0f27b001ab4b863944a14d2727">send_lan_l1_hello</a>, circuit, 0);
      circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a1a8b5b8fcf6defb0b21b509d99953742">lan_neighs</a>[0] = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
    }

      <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#ab222d6d0b054faa159d72bcb9768b3fb">circuit_is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a9daa7fbf09b604c718f3bbe189aedd1a">IS_LEVEL_2</a>)
    {
      <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="isis__pdu_8c.html#a395c19db187c485c02eb41b63fc024ac">send_lan_l2_hello</a>, circuit, 0);
      circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a1a8b5b8fcf6defb0b21b509d99953742">lan_neighs</a>[1] = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
    }

      <span class="comment">/* 8.4.1 b) FIXME: solicit ES - 8.4.6 */</span>
      <span class="comment">/* 8.4.1 c) FIXME: listen for ESH PDUs */</span>

      <span class="comment">/* 8.4.1 d) */</span>
      <span class="comment">/* dr election will commence in... */</span>
      <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#ab222d6d0b054faa159d72bcb9768b3fb">circuit_is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>)
    <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a0eff61cf3ddb83196c960a96ce7f8242">t_run_dr</a>[0], <a class="code" href="isis__dr_8c.html#ae35c5d9be60cd5f01bcbe0bb6e79654e">isis_run_dr_l1</a>,
             circuit, 2 * circuit-&gt;<a class="code" href="structisis__circuit.html#a7edd39f2abe11ecbbd758dc1a0d3f8c0">hello_interval</a>[0]);
      <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#ab222d6d0b054faa159d72bcb9768b3fb">circuit_is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a9daa7fbf09b604c718f3bbe189aedd1a">IS_LEVEL_2</a>)
    <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a0eff61cf3ddb83196c960a96ce7f8242">t_run_dr</a>[1], <a class="code" href="isis__dr_8c.html#a858591bc68bc249bd3a775e8f9ca2694">isis_run_dr_l2</a>,
             circuit, 2 * circuit-&gt;<a class="code" href="structisis__circuit.html#a7edd39f2abe11ecbbd758dc1a0d3f8c0">hello_interval</a>[1]);
    }
  <span class="keywordflow">else</span>
    {
      <span class="comment">/* initializing the hello send threads</span>
<span class="comment">       * for a ptp IF</span>
<span class="comment">       */</span>
      <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="isis__pdu_8c.html#add55c6255271cf958880489585619db9">send_p2p_hello</a>, circuit, 0);

    }

  <span class="comment">/* initializing PSNP timers */</span>
  <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#ab222d6d0b054faa159d72bcb9768b3fb">circuit_is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>)
    {
      <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, circuit-&gt;<a class="code" href="structisis__circuit.html#a3ad206840c48b3ff93d5160f5a402e2e">t_send_psnp</a>[0], <a class="code" href="isis__pdu_8c.html#a001cd2fbdf45b46870187e20b3cc7efc">send_l1_psnp</a>, circuit,
               <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#ab73d895f1c1588eb68e5b467f7f1b479">psnp_interval</a>[0], <a class="code" href="isis__constants_8h.html#a8ebe0205326ccb2592f752237c21729b">PSNP_JITTER</a>));
    }

  <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#ab222d6d0b054faa159d72bcb9768b3fb">circuit_is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a9daa7fbf09b604c718f3bbe189aedd1a">IS_LEVEL_2</a>)
    {
      <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, circuit-&gt;<a class="code" href="structisis__circuit.html#a3ad206840c48b3ff93d5160f5a402e2e">t_send_psnp</a>[1], <a class="code" href="isis__pdu_8c.html#ada5c84113d20d6c83fce25bfea104e93">send_l2_psnp</a>, circuit,
               <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#ab73d895f1c1588eb68e5b467f7f1b479">psnp_interval</a>[1], <a class="code" href="isis__constants_8h.html#a8ebe0205326ccb2592f752237c21729b">PSNP_JITTER</a>));
    }

  <span class="comment">/* initialize the circuit streams */</span>
  <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#abc0c4c6484b34715228b6811f442f9aa">rcv_stream</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    circuit-&gt;<a class="code" href="structisis__circuit.html#abc0c4c6484b34715228b6811f442f9aa">rcv_stream</a> = <a class="code" href="stream_8c.html#a7117cdad9fa5e5ae633e0cf08d047459">stream_new</a> (<a class="code" href="isis__constants_8h.html#aa507eb18af6ca6d6db6e3db750ab0737">ISO_MTU</a> (circuit));

  <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a282678da28cc5e426019913c913ea490">snd_stream</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    circuit-&gt;<a class="code" href="structisis__circuit.html#a282678da28cc5e426019913c913ea490">snd_stream</a> = <a class="code" href="stream_8c.html#a7117cdad9fa5e5ae633e0cf08d047459">stream_new</a> (<a class="code" href="isis__constants_8h.html#aa507eb18af6ca6d6db6e3db750ab0737">ISO_MTU</a> (circuit));

  <span class="comment">/* unified init for circuits */</span>
  <a class="code" href="isis__bpf_8c.html#a4fb54543ed3a433aa2b883518d7be81f">isis_sock_init</a> (circuit);

<span class="preprocessor">#ifdef GNU_LINUX</span>
<span class="preprocessor"></span>  <a class="code" href="thread_8h.html#aa1c80a0def008e6c3439baa8b49a1dab">THREAD_READ_ON</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, circuit-&gt;<a class="code" href="structisis__circuit.html#afa7165030b312ae2ce406ec15a4624df">t_read</a>, <a class="code" href="isis__pdu_8c.html#a75016a6ce480bc69cba2753bce7c52e1">isis_receive</a>, circuit,
          circuit-&gt;<a class="code" href="structisis__circuit.html#a2fa1849a71a356f206776c2329f27dbc">fd</a>);
<span class="preprocessor">#else</span>
<span class="preprocessor"></span>  <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, circuit-&gt;<a class="code" href="structisis__circuit.html#afa7165030b312ae2ce406ec15a4624df">t_read</a>, <a class="code" href="isis__pdu_8c.html#a75016a6ce480bc69cba2753bce7c52e1">isis_receive</a>, circuit,
           circuit-&gt;<a class="code" href="structisis__circuit.html#a2fa1849a71a356f206776c2329f27dbc">fd</a>);
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aec239848920be5d6c27e0468ee98f723"></a><!-- doxytag: member="isis_circuit.c::isis_circuit_update_params" ref="aec239848920be5d6c27e0468ee98f723" args="(struct isis_circuit *circuit, struct interface *ifp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void isis_circuit_update_params </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *&#160;</td>
          <td class="paramname"><em>circuit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"><em>ifp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l00430">430</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (circuit);

  <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a10453f6bcc1e8f1cb466240a81836ba9">circuit_id</a> != ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>)
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;changing circuit_id %d-&gt;%d&quot;</span>, circuit-&gt;<a class="code" href="structisis__circuit.html#a10453f6bcc1e8f1cb466240a81836ba9">circuit_id</a>,
         ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a>);
      circuit-&gt;<a class="code" href="structisis__circuit.html#a10453f6bcc1e8f1cb466240a81836ba9">circuit_id</a> = ifp-&gt;<a class="code" href="structinterface.html#ae4c4a0eca6642e37e29e1177a39872ea">ifindex</a> % 255;
    }

  <span class="comment">/* FIXME: Why is this needed? shouldn&#39;t we compare to the area&#39;s mtu */</span>
  <span class="comment">/* Ofer, this was here in case someone changes the mtu (e.g. with ifconfig) </span>
<span class="comment">     The areas MTU is the minimum of mtu&#39;s of circuits in the area</span>
<span class="comment">     now we can&#39;t catch the change</span>
<span class="comment">     if (circuit-&gt;mtu != ifp-&gt;mtu) {</span>
<span class="comment">     zlog_warn (&quot;changing circuit mtu %d-&gt;%d&quot;, circuit-&gt;mtu, </span>
<span class="comment">     ifp-&gt;mtu);    </span>
<span class="comment">     circuit-&gt;mtu = ifp-&gt;mtu;</span>
<span class="comment">     }</span>
<span class="comment">   */</span>
  <span class="comment">/*</span>
<span class="comment">   * Get the Hardware Address</span>
<span class="comment">   */</span>
<span class="preprocessor">#ifdef HAVE_STRUCT_SOCKADDR_DL</span>
<span class="preprocessor"></span><span class="preprocessor">#ifndef SUNOS_5</span>
<span class="preprocessor"></span>  <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;sdl.sdl_alen != <a class="code" href="isis__circuit_8c.html#abf4fcaacb1ad2010711b7c880ec2ed20">ETHER_ADDR_LEN</a>)
    <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;unsupported link layer&quot;</span>);
  <span class="keywordflow">else</span>
    <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#ac7adabf9b24b03c93e73bb9b03c2192b">snpa</a>, LLADDR (&amp;circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;sdl), <a class="code" href="isis__constants_8h.html#a9822d89774e0d6ddaa06503950130423">ETH_ALEN</a>);
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span><span class="preprocessor">#else</span>
<span class="preprocessor"></span>  <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;<a class="code" href="structinterface.html#a6521c9be15367445abca01bbba9c2cb4">hw_addr_len</a> != <a class="code" href="isis__constants_8h.html#a9822d89774e0d6ddaa06503950130423">ETH_ALEN</a>)
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;unsupported link layer&quot;</span>);
    }
  <span class="keywordflow">else</span>
    {
      <span class="keywordflow">if</span> (<a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#ac7adabf9b24b03c93e73bb9b03c2192b">snpa</a>, circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;<a class="code" href="structinterface.html#a6fe2f3c7e5be26c4e376b514d86f5c22">hw_addr</a>, <a class="code" href="isis__constants_8h.html#a9822d89774e0d6ddaa06503950130423">ETH_ALEN</a>))
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;changing circuit snpa %s-&gt;%s&quot;</span>,
             <a class="code" href="isis__misc_8c.html#a9ff6d4a3900eef27814548c4c5357090">snpa_print</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#ac7adabf9b24b03c93e73bb9b03c2192b">snpa</a>),
             <a class="code" href="isis__misc_8c.html#a9ff6d4a3900eef27814548c4c5357090">snpa_print</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;<a class="code" href="structinterface.html#a6fe2f3c7e5be26c4e376b514d86f5c22">hw_addr</a>));
    }
    }
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>
  <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a88f3bd141d217db7e4118a78b1db1b60">if_is_broadcast</a> (ifp))
    {
      circuit-&gt;<a class="code" href="structisis__circuit.html#a569e39bbf7fafd533eae2eeafa671b8c">circ_type</a> = <a class="code" href="isis__circuit_8h.html#a01a94c5f24c88efb64f791a749ae8f95">CIRCUIT_T_BROADCAST</a>;
    }
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a61aed2ccc7ec47d6822546664ea77f0c">if_is_pointopoint</a> (ifp))
    {
      circuit-&gt;<a class="code" href="structisis__circuit.html#a569e39bbf7fafd533eae2eeafa671b8c">circ_type</a> = <a class="code" href="isis__circuit_8h.html#aa2113a49e7c75a5d4997d59df0530726">CIRCUIT_T_P2P</a>;
    }
  <span class="keywordflow">else</span>
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;isis_circuit_update_params: unsupported media&quot;</span>);
    }

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae0cff0254c709b737c11ad3827e2deee"></a><!-- doxytag: member="isis_circuit.c::isis_if_delete_hook" ref="ae0cff0254c709b737c11ad3827e2deee" args="(struct interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int isis_if_delete_hook </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"><em>ifp</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l02047">2047</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
<span class="comment">/* FIXME: Discuss if the circuit should be created here</span>
<span class="comment">  XFREE (MTYPE_ISIS_IF_INFO, ifp-&gt;info);*/</span>
  ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a8105376f97b6cc730ec0daeeff8d21a3"></a><!-- doxytag: member="isis_circuit.c::isis_if_new_hook" ref="a8105376f97b6cc730ec0daeeff8d21a3" args="(struct interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int isis_if_new_hook </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"><em>ifp</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l02038">2038</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{
<span class="comment">/* FIXME: Discuss if the circuit should be created here</span>
<span class="comment">  ifp-&gt;info = XMALLOC (MTYPE_ISIS_IF_INFO, sizeof (struct isis_if_info)); */</span>
  ifp-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a30f2f4ba1a5ce5e5d838e38e5bb5a32e"></a><!-- doxytag: member="isis_circuit.c::isis_interface_config_write" ref="a30f2f4ba1a5ce5e5d838e38e5bb5a32e" args="(struct vty *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int isis_interface_config_write </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l00632">632</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>
<div class="fragment"><pre class="fragment">{

  <span class="keywordtype">int</span> write = 0;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *node2;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
  <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
  <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *c;
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="if_8c.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a>, node, ifp))
  {
    <span class="comment">/* IF name */</span>
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;interface %s%s&quot;</span>, ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    write++;
    <span class="comment">/* IF desc */</span>
    <span class="keywordflow">if</span> (ifp-&gt;<a class="code" href="structinterface.html#a273b8698448bacdf46b32b3665e7b8d2">desc</a>)
      {
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; description %s%s&quot;</span>, ifp-&gt;<a class="code" href="structinterface.html#a273b8698448bacdf46b32b3665e7b8d2">desc</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    write++;
      }
    <span class="comment">/* ISIS Circuit */</span>
    <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="structisis.html">isis</a>-&gt;<a class="code" href="structisis.html#a0898d0cb839d3d63fc69f5a4cd02e512">area_list</a>, node2, area))
    {
      c = <a class="code" href="isis__circuit_8c.html#af5503c527a2e390b90d9fb6fca3639d0">circuit_lookup_by_ifp</a> (ifp, area-&gt;<a class="code" href="structisis__area.html#a1ef8753b22245b7d8fff0331deef3b21">circuit_list</a>);
      <span class="keywordflow">if</span> (c)
    {
      <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structisis__circuit.html#a9dbb2266ee5b76604a27fd0855e910f5">ip_router</a>)
        {
          <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; ip router isis %s%s&quot;</span>, area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>,
               <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
          write++;
        }
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>      <span class="keywordflow">if</span> (c-&gt;ipv6_router)
        {
          <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; ipv6 router isis %s%s&quot;</span>, area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>,
               <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
          write++;
        }
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>

      <span class="comment">/* ISIS - circuit type */</span>
      <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structisis__circuit.html#ab222d6d0b054faa159d72bcb9768b3fb">circuit_is_type</a> == <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>)
        {
          <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; isis circuit-type level-1%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
          write++;
        }
      <span class="keywordflow">else</span>
        {
          <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structisis__circuit.html#ab222d6d0b054faa159d72bcb9768b3fb">circuit_is_type</a> == <a class="code" href="isis__constants_8h.html#a9daa7fbf09b604c718f3bbe189aedd1a">IS_LEVEL_2</a>)
        {
          <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; isis circuit-type level-2-only%s&quot;</span>,
               <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
          write++;
        }
        }

      <span class="comment">/* ISIS - CSNP interval - FIXME: compare to cisco */</span>
      <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structisis__circuit.html#a1b3a587132c475f3b90b5f8b03ec182d">csnp_interval</a>[0] == c-&gt;<a class="code" href="structisis__circuit.html#a1b3a587132c475f3b90b5f8b03ec182d">csnp_interval</a>[1])
        {
          <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structisis__circuit.html#a1b3a587132c475f3b90b5f8b03ec182d">csnp_interval</a>[0] != <a class="code" href="isis__constants_8h.html#ade8e15a2ed12580594384b1d7efff5b8">CSNP_INTERVAL</a>)
        {
          <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; isis csnp-interval %d%s&quot;</span>,
               c-&gt;<a class="code" href="structisis__circuit.html#a1b3a587132c475f3b90b5f8b03ec182d">csnp_interval</a>[0], <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
          write++;
        }
        }
      <span class="keywordflow">else</span>
        {
          <span class="keywordflow">for</span> (i = 0; i &lt; 2; i++)
        {
          <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structisis__circuit.html#a1b3a587132c475f3b90b5f8b03ec182d">csnp_interval</a>[1] != <a class="code" href="isis__constants_8h.html#ade8e15a2ed12580594384b1d7efff5b8">CSNP_INTERVAL</a>)
            {
              <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; isis csnp-interval %d level-%d%s&quot;</span>,
                   c-&gt;<a class="code" href="structisis__circuit.html#a1b3a587132c475f3b90b5f8b03ec182d">csnp_interval</a>[1], i + 1, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
              write++;
            }
        }
        }

      <span class="comment">/* ISIS - Hello padding - Defaults to true so only display if false */</span>
      <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structisis__circuit.html#a569e39bbf7fafd533eae2eeafa671b8c">circ_type</a> == <a class="code" href="isis__circuit_8h.html#a01a94c5f24c88efb64f791a749ae8f95">CIRCUIT_T_BROADCAST</a> &amp;&amp; !c-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a83676730231d3a5aad5d5914957a2b68">pad_hellos</a>)
        {
          <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; no isis hello padding%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
          write++;
        }

      <span class="comment">/* ISIS - Hello interval - FIXME: compare to cisco */</span>
      <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structisis__circuit.html#a7edd39f2abe11ecbbd758dc1a0d3f8c0">hello_interval</a>[0] == c-&gt;<a class="code" href="structisis__circuit.html#a7edd39f2abe11ecbbd758dc1a0d3f8c0">hello_interval</a>[1])
        {
          <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structisis__circuit.html#a7edd39f2abe11ecbbd758dc1a0d3f8c0">hello_interval</a>[0] != <a class="code" href="isis__constants_8h.html#ad91e2777a540273c5c76b631c2cafe06">HELLO_INTERVAL</a>)
        {
          <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; isis hello-interval %d%s&quot;</span>,
               c-&gt;<a class="code" href="structisis__circuit.html#a7edd39f2abe11ecbbd758dc1a0d3f8c0">hello_interval</a>[0], <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
          write++;
        }
        }
      <span class="keywordflow">else</span>
        {
          <span class="keywordflow">for</span> (i = 0; i &lt; 2; i++)
        {
          <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structisis__circuit.html#a7edd39f2abe11ecbbd758dc1a0d3f8c0">hello_interval</a>[i] != <a class="code" href="isis__constants_8h.html#ad91e2777a540273c5c76b631c2cafe06">HELLO_INTERVAL</a>)
            {
              <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structisis__circuit.html#a7edd39f2abe11ecbbd758dc1a0d3f8c0">hello_interval</a>[i] == <a class="code" href="isis__constants_8h.html#a6e83fd249aefcc54af420f8456239ac5">HELLO_MINIMAL</a>)
            {
              <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty,
                   <span class="stringliteral">&quot; isis hello-interval minimal level-%d%s&quot;</span>,
                   i + 1, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
            }
              <span class="keywordflow">else</span>
            {
              <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; isis hello-interval %d level-%d%s&quot;</span>,
                   c-&gt;<a class="code" href="structisis__circuit.html#a7edd39f2abe11ecbbd758dc1a0d3f8c0">hello_interval</a>[i], i + 1, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
            }
              write++;
            }
        }
        }

      <span class="comment">/* ISIS - Hello Multiplier */</span>
      <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structisis__circuit.html#a9af263fd35717a7f759e4a0cf2fd1a2b">hello_multiplier</a>[0] == c-&gt;<a class="code" href="structisis__circuit.html#a9af263fd35717a7f759e4a0cf2fd1a2b">hello_multiplier</a>[1])
        {
          <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structisis__circuit.html#a9af263fd35717a7f759e4a0cf2fd1a2b">hello_multiplier</a>[0] != <a class="code" href="isis__constants_8h.html#a78063dfa967b692d4129669779c4b5d9">HELLO_MULTIPLIER</a>)
        {
          <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; isis hello-multiplier %d%s&quot;</span>,
               c-&gt;<a class="code" href="structisis__circuit.html#a9af263fd35717a7f759e4a0cf2fd1a2b">hello_multiplier</a>[0], <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
          write++;
        }
        }
      <span class="keywordflow">else</span>
        {
          <span class="keywordflow">for</span> (i = 0; i &lt; 2; i++)
        {
          <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structisis__circuit.html#a9af263fd35717a7f759e4a0cf2fd1a2b">hello_multiplier</a>[i] != <a class="code" href="isis__constants_8h.html#a78063dfa967b692d4129669779c4b5d9">HELLO_MULTIPLIER</a>)
            {
              <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; isis hello-multiplier %d level-%d%s&quot;</span>,
                   c-&gt;<a class="code" href="structisis__circuit.html#a9af263fd35717a7f759e4a0cf2fd1a2b">hello_multiplier</a>[i], i + 1, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
              write++;
            }
        }
        }
      <span class="comment">/* ISIS - Priority */</span>
      <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structisis__circuit.html#a569e39bbf7fafd533eae2eeafa671b8c">circ_type</a> == <a class="code" href="isis__circuit_8h.html#a01a94c5f24c88efb64f791a749ae8f95">CIRCUIT_T_BROADCAST</a>)
        {
          <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a9087f16298d7bbf26ac8b480c932ab8d">priority</a>[0] == c-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a9087f16298d7bbf26ac8b480c932ab8d">priority</a>[1])
        {
          <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a9087f16298d7bbf26ac8b480c932ab8d">priority</a>[0] != <a class="code" href="isis__constants_8h.html#a0756f011ef667460d583017366823244">DEFAULT_PRIORITY</a>)
            {
              <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; isis priority %d%s&quot;</span>,
                   c-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a9087f16298d7bbf26ac8b480c932ab8d">priority</a>[0], <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
              write++;
            }
        }
          <span class="keywordflow">else</span>
        {
          <span class="keywordflow">for</span> (i = 0; i &lt; 2; i++)
            {
              <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a9087f16298d7bbf26ac8b480c932ab8d">priority</a>[i] != <a class="code" href="isis__constants_8h.html#a0756f011ef667460d583017366823244">DEFAULT_PRIORITY</a>)
            {
              <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; isis priority %d level-%d%s&quot;</span>,
                   c-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a9087f16298d7bbf26ac8b480c932ab8d">priority</a>[i], i + 1, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
              write++;
            }
            }
        }
        }
      <span class="comment">/* ISIS - Metric */</span>
      <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>[0] == c-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>[1])
        {
          <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>[0] != <a class="code" href="isis__constants_8h.html#ae0395bf404df3647661120cefe80c298">DEFAULT_CIRCUIT_METRICS</a>)
        {
          <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; isis metric %d%s&quot;</span>, c-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>[0],
               <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
          write++;
        }
        }
      <span class="keywordflow">else</span>
        {
          <span class="keywordflow">for</span> (i = 0; i &lt; 2; i++)
        {
          <span class="keywordflow">if</span> (c-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>[i] != <a class="code" href="isis__constants_8h.html#ae0395bf404df3647661120cefe80c298">DEFAULT_CIRCUIT_METRICS</a>)
            {
              <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; isis metric %d level-%d%s&quot;</span>,
                   c-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>[i], i + 1, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
              write++;
            }
        }
        }

    }
    }
    <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;!%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
  }

  <span class="keywordflow">return</span> write;
}
</pre></div>
</div>
</div>
<hr/><h2>Variable Documentation</h2>
<a class="anchor" id="aa8cfdc8f7777fd242bd2c45f3a48b950"></a><!-- doxytag: member="isis_circuit.c::isis" ref="aa8cfdc8f7777fd242bd2c45f3a48b950" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structisis.html">isis</a>* <a class="el" href="structisis.html">isis</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isisd_8c_source.html#l00061">61</a> of file <a class="el" href="isisd_8c_source.html">isisd.c</a>.</p>

</div>
</div>
<a class="anchor" id="acdc3e3e190f3d90d9ee7c51a4aaf7c7c"></a><!-- doxytag: member="isis_circuit.c::isis_hello_interval_l1_cmd" ref="acdc3e3e190f3d90d9ee7c51a4aaf7c7c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="isis__circuit_8c.html#acdc3e3e190f3d90d9ee7c51a4aaf7c7c">isis_hello_interval_l1_cmd</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l01384">1384</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>

</div>
</div>
<a class="anchor" id="af7f9077bc08df049beb65a1c09cde5fa"></a><!-- doxytag: member="isis_circuit.c::master" ref="af7f9077bc08df049beb65a1c09cde5fa" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structthread__master.html">thread_master</a>* <a class="el" href="test__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__main_8c_source.html#l00105">105</a> of file <a class="el" href="bgp__main_8c_source.html">bgp_main.c</a>.</p>

</div>
</div>
<a class="anchor" id="a9330cf63cb76c1de52610f3a5eab39b5"></a><!-- doxytag: member="isis_circuit.c::second" ref="a9330cf63cb76c1de52610f3a5eab39b5" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structisis.html">isis</a> hello IS IS commands <a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a> Set Hello interval <a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a> Hello interval value <a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a> Holdtime <a class="el" href="isis__circuit_8c.html#a9330cf63cb76c1de52610f3a5eab39b5">second</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__circuit_8c_source.html#l01389">1389</a> of file <a class="el" href="isis__circuit_8c_source.html">isis_circuit.c</a>.</p>

</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="isis__circuit_8c.html">isis_circuit.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:20 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
