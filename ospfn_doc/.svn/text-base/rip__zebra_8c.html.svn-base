<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: ripd/rip_zebra.c File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('rip__zebra_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#define-members">Defines</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">ripd/rip_zebra.c File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="zebra_8h_source.html">zebra.h</a>&gt;</code><br/>
<code>#include &quot;<a class="el" href="command_8h_source.html">command.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="prefix_8h_source.html">prefix.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="stream_8h_source.html">stream.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="routemap_8h_source.html">routemap.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="zclient_8h_source.html">zclient.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="log_8h_source.html">log.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ripd_8h_source.html">ripd/ripd.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="rip__debug_8h_source.html">ripd/rip_debug.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="rip__interface_8h_source.html">ripd/rip_interface.h</a>&quot;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for rip_zebra.c:</div>
<div class="dyncontent">
<div class="center"><img src="rip__zebra_8c__incl.png" border="0" usemap="#ripd_2rip__zebra_8c" alt=""/></div>
<map name="ripd_2rip__zebra_8c" id="ripd_2rip__zebra_8c">
<area shape="rect" id="node3" href="zebra_8h.html" title="zebra.h" alt="" coords="1345,80,1412,107"/><area shape="rect" id="node61" href="command_8h.html" title="command.h" alt="" coords="2931,80,3023,107"/><area shape="rect" id="node69" href="log_8h.html" title="log.h" alt="" coords="2938,229,2989,256"/><area shape="rect" id="node74" href="prefix_8h.html" title="prefix.h" alt="" coords="3198,155,3265,181"/><area shape="rect" id="node78" href="stream_8h.html" title="stream.h" alt="" coords="3221,80,3296,107"/><area shape="rect" id="node81" href="routemap_8h.html" title="routemap.h" alt="" coords="3320,80,3411,107"/><area shape="rect" id="node83" href="zclient_8h.html" title="zclient.h" alt="" coords="3435,80,3507,107"/><area shape="rect" id="node90" href="ripd_8h.html" title="ripd/ripd.h" alt="" coords="3531,80,3613,107"/><area shape="rect" id="node92" href="rip__debug_8h.html" title="ripd/rip_debug.h" alt="" coords="3637,80,3757,107"/><area shape="rect" id="node94" href="rip__interface_8h.html" title="ripd/rip_interface.h" alt="" coords="3782,80,3916,107"/><area shape="rect" id="node57" href="zassert_8h.html" title="zassert.h" alt="" coords="2623,155,2700,181"/><area shape="rect" id="node59" href="str_8h.html" title="str.h" alt="" coords="2725,155,2773,181"/><area shape="rect" id="node63" href="vector_8h.html" title="vector.h" alt="" coords="2799,155,2871,181"/><area shape="rect" id="node65" href="vty_8h.html" title="vty.h" alt="" coords="2895,155,2947,181"/><area shape="rect" id="node72" href="route__types_8h.html" title="lib/route_types.h" alt="" coords="2971,155,3095,181"/><area shape="rect" id="node67" href="thread_8h.html" title="thread.h" alt="" coords="2841,229,2913,256"/><area shape="rect" id="node76" href="sockunion_8h.html" title="sockunion.h" alt="" coords="3185,229,3279,256"/><area shape="rect" id="node85" href="if_8h.html" title="if.h" alt="" coords="3451,155,3491,181"/><area shape="rect" id="node87" href="linklist_8h.html" title="linklist.h" alt="" coords="3435,229,3505,256"/></map>
</div>
</div>
<p><a href="rip__zebra_8c_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#acb821b1d04e638fbaec10016df675ab0">DONT_CARE_METRIC_RIP</a>&#160;&#160;&#160;17</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a460a3829f5b473e965b8534e7576ba58">rip_zebra_ipv4_add</a> (struct <a class="el" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="el" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, struct in_addr *<a class="el" href="structnexthop.html">nexthop</a>, u_int32_t <a class="el" href="structmetric.html">metric</a>, u_char <a class="el" href="zebra__rib_8c.html#afb9412686cd344ad61757c1c19ba8a87">distance</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#af7f46189661f875392807d263c8a12e1">rip_zebra_ipv4_delete</a> (struct <a class="el" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="el" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, struct in_addr *<a class="el" href="structnexthop.html">nexthop</a>, u_int32_t <a class="el" href="structmetric.html">metric</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#afa5015d7ccafa1ca98c90f512c8884cb">rip_zebra_read_ipv4</a> (int command, struct <a class="el" href="structzclient.html">zclient</a> *<a class="el" href="structzclient.html">zclient</a>, <a class="el" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a> <a class="el" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a5791dae6dd88616ca369075b1154481b">rip_zclient_reset</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a420c2a6f60ab252ee0385c2c1c5c869b">rip_routemap_set</a> (int <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a>, const char *<a class="el" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a001f4b8b14e46c069af3c09afb3f105f">rip_redistribute_metric_set</a> (int <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a>, unsigned int <a class="el" href="structmetric.html">metric</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a528d1922b9e9e6dd9d1f0de49868f499">rip_metric_unset</a> (int <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a>, unsigned int <a class="el" href="structmetric.html">metric</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a098de2f19440924dea30bd44f88f552a">rip_routemap_unset</a> (int <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a>, const char *<a class="el" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a7416b744aaac2eb65e774170baa811ea">DEFUN</a> (router_zebra, router_zebra_cmd,&quot;router <a class="el" href="bgp__debug_8c.html#aacd09dfe4b60fac4ec1c5e2895066f07">zebra</a>&quot;,&quot;Enable a routing process\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Make connection to <a class="el" href="bgp__debug_8c.html#aacd09dfe4b60fac4ec1c5e2895066f07">zebra</a> <a class="el" href="structdaemon.html">daemon</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a61fecdb2665690a25949d1d8180f6b7e">DEFUN</a> (no_router_zebra, no_router_zebra_cmd,&quot;no router <a class="el" href="bgp__debug_8c.html#aacd09dfe4b60fac4ec1c5e2895066f07">zebra</a>&quot;, NO_STR&quot;Enable a routing process\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Make connection to <a class="el" href="bgp__debug_8c.html#aacd09dfe4b60fac4ec1c5e2895066f07">zebra</a> <a class="el" href="structdaemon.html">daemon</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#acfcec722ceaccc00622f409a57c4a7a6">rip_redistribute_unset</a> (int <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a0fa20d285acbf66a75b8cb17d0655220">rip_redistribute_check</a> (int <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a1a65323d964e8319e2547170a478eb40">rip_redistribute_clean</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a4a6cf21ec6d48c40ac4d27d7a3e1fe44">DEFUN</a> (rip_redistribute_rip, rip_redistribute_rip_cmd,&quot;redistribute <a class="el" href="structrip.html">rip</a>&quot;,&quot;Redistribute information from another routing protocol\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Routing Information Protocol (RIP)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a4d390eccccce1a3dde8c37921d48e3f7">DEFUN</a> (no_rip_redistribute_rip, no_rip_redistribute_rip_cmd,&quot;no redistribute <a class="el" href="structrip.html">rip</a>&quot;, NO_STR&quot;Redistribute information from another routing protocol\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Routing Information Protocol (RIP)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a42657b053b5d3f869cbd86324172d1cd">DEFUN</a> (rip_redistribute_type, rip_redistribute_type_cmd,&quot;redistribute &quot;QUAGGA_REDIST_STR_RIPD, REDIST_STR QUAGGA_REDIST_HELP_STR_RIPD)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a60c70701a66e67a7a7d2c483e443df70">DEFUN</a> (no_rip_redistribute_type, no_rip_redistribute_type_cmd,&quot;no redistribute &quot;QUAGGA_REDIST_STR_RIPD, NO_STR REDIST_STR QUAGGA_REDIST_HELP_STR_RIPD)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a978e370b68aa25bfb7816f00eac81582">DEFUN</a> (rip_redistribute_type_routemap, rip_redistribute_type_routemap_cmd,&quot;redistribute &quot;QUAGGA_REDIST_STR_RIPD&quot; route-map <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;, REDIST_STR QUAGGA_REDIST_HELP_STR_RIPD&quot;Route map reference\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Pointer to route-map entries\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a71a5135d04766c15cd6551a96e8f0a15">DEFUN</a> (no_rip_redistribute_type_routemap, no_rip_redistribute_type_routemap_cmd,&quot;no redistribute &quot;QUAGGA_REDIST_STR_RIPD&quot; route-map <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;, NO_STR REDIST_STR QUAGGA_REDIST_HELP_STR_RIPD&quot;Route map reference\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Pointer to route-map entries\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a35c5d411e6e4931cec34a38f8abfa35a">DEFUN</a> (rip_redistribute_type_metric, rip_redistribute_type_metric_cmd,&quot;redistribute &quot;QUAGGA_REDIST_STR_RIPD&quot; metric &lt;0-16&gt;&quot;, REDIST_STR QUAGGA_REDIST_HELP_STR_RIPD&quot;Metric\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Metric value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a3be58595e041a2e0e383b9a84e9fc64c">DEFUN</a> (no_rip_redistribute_type_metric, no_rip_redistribute_type_metric_cmd,&quot;no redistribute &quot;QUAGGA_REDIST_STR_RIPD&quot; metric &lt;0-16&gt;&quot;, NO_STR REDIST_STR QUAGGA_REDIST_HELP_STR_RIPD&quot;Metric\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Metric value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#ad37506a764c478f08cc8119822f9fae8">DEFUN</a> (rip_redistribute_type_metric_routemap, rip_redistribute_type_metric_routemap_cmd,&quot;redistribute &quot;QUAGGA_REDIST_STR_RIPD&quot; metric &lt;0-16&gt; route-map <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;, REDIST_STR QUAGGA_REDIST_HELP_STR_RIPD&quot;Metric\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Metric value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Route map reference\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Pointer to route-map entries\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a5e2c6d8ab39b33a912fc863fe9e36310">DEFUN</a> (no_rip_redistribute_type_metric_routemap, no_rip_redistribute_type_metric_routemap_cmd,&quot;no redistribute &quot;QUAGGA_REDIST_STR_RIPD&quot; metric &lt;0-16&gt; route-map <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;, NO_STR REDIST_STR QUAGGA_REDIST_HELP_STR_RIPD&quot;Metric\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Metric value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Route map reference\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Pointer to route-map entries\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#af351939760245a39419a07aa854082c0">DEFUN</a> (rip_default_information_originate, rip_default_information_originate_cmd,&quot;default-information originate&quot;,&quot;Control distribution of default route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Distribute a default route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a062afde9052eaa8b7ea957d24ccd201f">DEFUN</a> (no_rip_default_information_originate, no_rip_default_information_originate_cmd,&quot;no default-information originate&quot;, NO_STR&quot;Control distribution of default route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Distribute a default route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#aa86166351b4229f3fd5e0f53516dbb4c">config_write_zebra</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a070e5ae1fa0ffe98107bc343cc34479b">config_write_rip_redistribute</a> (struct <a class="el" href="structvty.html">vty</a> *<a class="el" href="structvty.html">vty</a>, int config_mode)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a185f88b3299e29c074f6bd0050868274">rip_zclient_init</a> ()</td></tr>
<tr><td colspan="2"><h2><a name="var-members"></a>
Variables</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structzclient.html">zclient</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#abe1502972ba9aa40adc080e419c496bf">zclient</a> = NULL</td></tr>
<tr><td class="memItemLeft" >struct {</td></tr>
<tr><td class="memItemLeft" >&#160;&#160;&#160;int&#160;&#160;&#160;<a class="el" href="rip__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a></td></tr>
<tr><td class="memItemLeft" >&#160;&#160;&#160;int&#160;&#160;&#160;<a class="el" href="rip__zebra_8c.html#ab9048f4db5a930cf7650cfe16e1f7c4d">str_min_len</a></td></tr>
<tr><td class="memItemLeft" >&#160;&#160;&#160;const char *&#160;&#160;&#160;<a class="el" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a></td></tr>
<tr><td class="memItemLeft" valign="top">}&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a> []</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structcmd__node.html">cmd_node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="rip__zebra_8c.html#a6683c482f9e771c44b2279e90606739e">zebra_node</a></td></tr>
</table>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="acb821b1d04e638fbaec10016df675ab0"></a><!-- doxytag: member="rip_zebra.c::DONT_CARE_METRIC_RIP" ref="acb821b1d04e638fbaec10016df675ab0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DONT_CARE_METRIC_RIP&#160;&#160;&#160;17</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a070e5ae1fa0ffe98107bc343cc34479b"></a><!-- doxytag: member="rip_zebra.c::config_write_rip_redistribute" ref="a070e5ae1fa0ffe98107bc343cc34479b" args="(struct vty *vty, int config_mode)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int config_write_rip_redistribute </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>config_mode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00617">617</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

  <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="zebra_8h.html#aec97442680d773fd62f9af5c9426b842">ZEBRA_ROUTE_MAX</a>; i++)
    <span class="keywordflow">if</span> (i != <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c2ac97dd71c8f3a0db036c6c0216208">redist_default</a> &amp;&amp; <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[i])
      {
    <span class="keywordflow">if</span> (config_mode)
      {
        <span class="keywordflow">if</span> (<a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a8596ef85639ad4db7e9b3da5f2a42714">route_map</a>[i].<a class="code" href="structrip.html#a8ef10c6659dafa9d8912fb31e3c32f12">metric_config</a>)
          {
        <span class="keywordflow">if</span> (<a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a8596ef85639ad4db7e9b3da5f2a42714">route_map</a>[i].<a class="code" href="structrip.html#a77a65f4af78afdc1861f3f59ce91fb66">name</a>)
          <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; redistribute %s metric %d route-map %s%s&quot;</span>,
               <a class="code" href="log_8c.html#ae87aa85b5b05b120d376956ce5d13444">zebra_route_string</a>(i), <a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a8596ef85639ad4db7e9b3da5f2a42714">route_map</a>[i].<a class="code" href="structrip.html#ac0b1115c5dc500cd379f80f17df49f09">metric</a>,
               <a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a8596ef85639ad4db7e9b3da5f2a42714">route_map</a>[i].<a class="code" href="structrip.html#a77a65f4af78afdc1861f3f59ce91fb66">name</a>,
               <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
        <span class="keywordflow">else</span>
          <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; redistribute %s metric %d%s&quot;</span>,
               <a class="code" href="log_8c.html#ae87aa85b5b05b120d376956ce5d13444">zebra_route_string</a>(i), <a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a8596ef85639ad4db7e9b3da5f2a42714">route_map</a>[i].<a class="code" href="structrip.html#ac0b1115c5dc500cd379f80f17df49f09">metric</a>,
               <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
          }
        <span class="keywordflow">else</span>
          {
        <span class="keywordflow">if</span> (<a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a8596ef85639ad4db7e9b3da5f2a42714">route_map</a>[i].<a class="code" href="structrip.html#a77a65f4af78afdc1861f3f59ce91fb66">name</a>)
          <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; redistribute %s route-map %s%s&quot;</span>,
               <a class="code" href="log_8c.html#ae87aa85b5b05b120d376956ce5d13444">zebra_route_string</a>(i), <a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a8596ef85639ad4db7e9b3da5f2a42714">route_map</a>[i].<a class="code" href="structrip.html#a77a65f4af78afdc1861f3f59ce91fb66">name</a>,
               <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
        <span class="keywordflow">else</span>
          <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; redistribute %s%s&quot;</span>, <a class="code" href="log_8c.html#ae87aa85b5b05b120d376956ce5d13444">zebra_route_string</a>(i),
               <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
          }
      }
    <span class="keywordflow">else</span>
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; %s&quot;</span>, <a class="code" href="log_8c.html#ae87aa85b5b05b120d376956ce5d13444">zebra_route_string</a>(i));
      }
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa86166351b4229f3fd5e0f53516dbb4c"></a><!-- doxytag: member="rip_zebra.c::config_write_zebra" ref="aa86166351b4229f3fd5e0f53516dbb4c" args="(struct vty *vty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int config_write_zebra </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structvty.html">vty</a> *&#160;</td>
          <td class="paramname"><em>vty</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00600">600</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (! <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7867dfbcd3b504d2edd22f70ef4277b6">enable</a>)
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;no router zebra%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">return</span> 1;
    }
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (! <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="zebra_8h.html#a2bbecb9ceffe9e03927c535f41ba56fb">ZEBRA_ROUTE_RIP</a>])
    {
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;router zebra%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot; no redistribute rip%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
      <span class="keywordflow">return</span> 1;
    }
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a7416b744aaac2eb65e774170baa811ea"></a><!-- doxytag: member="rip_zebra.c::DEFUN" ref="a7416b744aaac2eb65e774170baa811ea" args="(router_zebra, router_zebra_cmd,&quot;router zebra&quot;,&quot;Enable a routing process\n&quot;&quot;Make connection to zebra daemon\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">router_zebra&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">router_zebra_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;router <a class="el" href="bgp__debug_8c.html#aacd09dfe4b60fac4ec1c5e2895066f07">zebra</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;Enable a routing process\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Make connection to <a class="el" href="bgp__debug_8c.html#aacd09dfe4b60fac4ec1c5e2895066f07">zebra</a> <a class="el" href="structdaemon.html">daemon</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00212">212</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> = <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682af7fc20f627618eee254477289b890df3">ZEBRA_NODE</a>;
  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7867dfbcd3b504d2edd22f70ef4277b6">enable</a> = 1;
  <a class="code" href="zclient_8c.html#a9c8f7389bb01919b00e7f95403a3c112">zclient_start</a> (<a class="code" href="structzclient.html">zclient</a>);
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a61fecdb2665690a25949d1d8180f6b7e"></a><!-- doxytag: member="rip_zebra.c::DEFUN" ref="a61fecdb2665690a25949d1d8180f6b7e" args="(no_router_zebra, no_router_zebra_cmd,&quot;no router zebra&quot;, NO_STR&quot;Enable a routing process\n&quot;&quot;Make connection to zebra daemon\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_router_zebra&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_router_zebra_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no router <a class="el" href="bgp__debug_8c.html#aacd09dfe4b60fac4ec1c5e2895066f07">zebra</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;Enable a routing process\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Make connection to <a class="el" href="bgp__debug_8c.html#aacd09dfe4b60fac4ec1c5e2895066f07">zebra</a> <a class="el" href="structdaemon.html">daemon</a>\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00224">224</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7867dfbcd3b504d2edd22f70ef4277b6">enable</a> = 0;
  <a class="code" href="zclient_8c.html#a380163204583292d5924050e26a8989d">zclient_stop</a> (<a class="code" href="structzclient.html">zclient</a>);
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4a6cf21ec6d48c40ac4d27d7a3e1fe44"></a><!-- doxytag: member="rip_zebra.c::DEFUN" ref="a4a6cf21ec6d48c40ac4d27d7a3e1fe44" args="(rip_redistribute_rip, rip_redistribute_rip_cmd,&quot;redistribute rip&quot;,&quot;Redistribute information from another routing protocol\n&quot;&quot;Routing Information Protocol (RIP)\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">rip_redistribute_rip&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rip_redistribute_rip_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;redistribute <a class="el" href="structrip.html">rip</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;Redistribute information from another routing protocol\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Routing Information Protocol (RIP)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00296">296</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="zebra_8h.html#a2bbecb9ceffe9e03927c535f41ba56fb">ZEBRA_ROUTE_RIP</a>] = 1;
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4d390eccccce1a3dde8c37921d48e3f7"></a><!-- doxytag: member="rip_zebra.c::DEFUN" ref="a4d390eccccce1a3dde8c37921d48e3f7" args="(no_rip_redistribute_rip, no_rip_redistribute_rip_cmd,&quot;no redistribute rip&quot;, NO_STR&quot;Redistribute information from another routing protocol\n&quot;&quot;Routing Information Protocol (RIP)\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_rip_redistribute_rip&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_rip_redistribute_rip_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no redistribute <a class="el" href="structrip.html">rip</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;Redistribute information from another routing protocol\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Routing Information Protocol (RIP)\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00306">306</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="zebra_8h.html#a2bbecb9ceffe9e03927c535f41ba56fb">ZEBRA_ROUTE_RIP</a>] = 0;
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a42657b053b5d3f869cbd86324172d1cd"></a><!-- doxytag: member="rip_zebra.c::DEFUN" ref="a42657b053b5d3f869cbd86324172d1cd" args="(rip_redistribute_type, rip_redistribute_type_cmd,&quot;redistribute &quot;QUAGGA_REDIST_STR_RIPD, REDIST_STR QUAGGA_REDIST_HELP_STR_RIPD)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">rip_redistribute_type&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rip_redistribute_type_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;redistribute &quot;&#160;</td>
          <td class="paramname"><em>QUAGGA_REDIST_STR_RIPD</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REDIST_STR&#160;</td>
          <td class="paramname"><em>QUAGGA_REDIST_HELP_STR_RIPD</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00317">317</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

  <span class="keywordflow">for</span>(i = 0; <a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].str; i++) 
    {
      <span class="keywordflow">if</span> (strncmp (<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, argv[0], 
           <a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#ab9048f4db5a930cf7650cfe16e1f7c4d">str_min_len</a>) == 0) 
    {
      <a class="code" href="zclient_8c.html#a4381afa78256a1211fe7881394d7e666">zclient_redistribute</a> (<a class="code" href="zebra_8h.html#aaf00306d6060095dd258463ee7cb0cc1">ZEBRA_REDISTRIBUTE_ADD</a>, <a class="code" href="structzclient.html">zclient</a>, 
                            <a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>);
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
    }
    }

  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a>(<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Invalid type %s%s&quot;</span>, argv[0],
      <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a60c70701a66e67a7a7d2c483e443df70"></a><!-- doxytag: member="rip_zebra.c::DEFUN" ref="a60c70701a66e67a7a7d2c483e443df70" args="(no_rip_redistribute_type, no_rip_redistribute_type_cmd,&quot;no redistribute &quot;QUAGGA_REDIST_STR_RIPD, NO_STR REDIST_STR QUAGGA_REDIST_HELP_STR_RIPD)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_rip_redistribute_type&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_rip_redistribute_type_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no redistribute &quot;&#160;</td>
          <td class="paramname"><em>QUAGGA_REDIST_STR_RIPD</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR REDIST_STR&#160;</td>
          <td class="paramname"><em>QUAGGA_REDIST_HELP_STR_RIPD</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00342">342</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

  <span class="keywordflow">for</span> (i = 0; <a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].str; i++) 
    {
      <span class="keywordflow">if</span> (strncmp(<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, argv[0], 
          <a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#ab9048f4db5a930cf7650cfe16e1f7c4d">str_min_len</a>) == 0) 
    {
      <a class="code" href="rip__zebra_8c.html#a528d1922b9e9e6dd9d1f0de49868f499">rip_metric_unset</a> (<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, DONT_CARE_METRIC_RIP);
      <a class="code" href="rip__zebra_8c.html#a098de2f19440924dea30bd44f88f552a">rip_routemap_unset</a> (<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>,<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
      <a class="code" href="rip__zebra_8c.html#acfcec722ceaccc00622f409a57c4a7a6">rip_redistribute_unset</a> (<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>);
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
        }
    }

  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a>(<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Invalid type %s%s&quot;</span>, argv[0],
      <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a978e370b68aa25bfb7816f00eac81582"></a><!-- doxytag: member="rip_zebra.c::DEFUN" ref="a978e370b68aa25bfb7816f00eac81582" args="(rip_redistribute_type_routemap, rip_redistribute_type_routemap_cmd,&quot;redistribute &quot;QUAGGA_REDIST_STR_RIPD&quot; route&#45;map WORD&quot;, REDIST_STR QUAGGA_REDIST_HELP_STR_RIPD&quot;Route map reference\n&quot;&quot;Pointer to route&#45;map entries\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">rip_redistribute_type_routemap&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rip_redistribute_type_routemap_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;redistribute &quot;QUAGGA_REDIST_STR_RIPD&quot; route-map <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REDIST_STR QUAGGA_REDIST_HELP_STR_RIPD&quot;Route map reference\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Pointer to route-map entries\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00369">369</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

  <span class="keywordflow">for</span> (i = 0; <a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].str; i++) {
    <span class="keywordflow">if</span> (strncmp(<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, argv[0],
        <a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#ab9048f4db5a930cf7650cfe16e1f7c4d">str_min_len</a>) == 0) 
      {
    <a class="code" href="rip__zebra_8c.html#a420c2a6f60ab252ee0385c2c1c5c869b">rip_routemap_set</a> (<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, argv[1]);
    <a class="code" href="zclient_8c.html#a4381afa78256a1211fe7881394d7e666">zclient_redistribute</a> (<a class="code" href="zebra_8h.html#aaf00306d6060095dd258463ee7cb0cc1">ZEBRA_REDISTRIBUTE_ADD</a>, <a class="code" href="structzclient.html">zclient</a>, <a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>);
    <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
      }
  }

  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a>(<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Invalid type %s%s&quot;</span>, argv[0],
      <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a71a5135d04766c15cd6551a96e8f0a15"></a><!-- doxytag: member="rip_zebra.c::DEFUN" ref="a71a5135d04766c15cd6551a96e8f0a15" args="(no_rip_redistribute_type_routemap, no_rip_redistribute_type_routemap_cmd,&quot;no redistribute &quot;QUAGGA_REDIST_STR_RIPD&quot; route&#45;map WORD&quot;, NO_STR REDIST_STR QUAGGA_REDIST_HELP_STR_RIPD&quot;Route map reference\n&quot;&quot;Pointer to route&#45;map entries\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_rip_redistribute_type_routemap&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_rip_redistribute_type_routemap_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no redistribute &quot;QUAGGA_REDIST_STR_RIPD&quot; route-map <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR REDIST_STR QUAGGA_REDIST_HELP_STR_RIPD&quot;Route map reference\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Pointer to route-map entries\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00395">395</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

  <span class="keywordflow">for</span> (i = 0; <a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].str; i++) 
    {
      <span class="keywordflow">if</span> (strncmp(<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, argv[0], 
          <a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#ab9048f4db5a930cf7650cfe16e1f7c4d">str_min_len</a>) == 0) 
    {
      <span class="keywordflow">if</span> (<a class="code" href="rip__zebra_8c.html#a098de2f19440924dea30bd44f88f552a">rip_routemap_unset</a> (<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>,argv[1]))
        <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
      <a class="code" href="rip__zebra_8c.html#acfcec722ceaccc00622f409a57c4a7a6">rip_redistribute_unset</a> (<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].type);
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
        }
    }

  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a>(<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Invalid type %s%s&quot;</span>, argv[0],
      <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a35c5d411e6e4931cec34a38f8abfa35a"></a><!-- doxytag: member="rip_zebra.c::DEFUN" ref="a35c5d411e6e4931cec34a38f8abfa35a" args="(rip_redistribute_type_metric, rip_redistribute_type_metric_cmd,&quot;redistribute &quot;QUAGGA_REDIST_STR_RIPD&quot; metric &lt;0&#45;16&gt;&quot;, REDIST_STR QUAGGA_REDIST_HELP_STR_RIPD&quot;Metric\n&quot;&quot;Metric value\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">rip_redistribute_type_metric&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rip_redistribute_type_metric_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;redistribute &quot;QUAGGA_REDIST_STR_RIPD&quot; metric &lt;0-16&gt;&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REDIST_STR QUAGGA_REDIST_HELP_STR_RIPD&quot;Metric\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Metric value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00424">424</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
  <span class="keywordtype">int</span> <a class="code" href="structrip__info.html#abba1d9e9e42d61055816c997e9074af8">metric</a>;

  metric = atoi (argv[1]);

  <span class="keywordflow">for</span> (i = 0; <a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].str; i++) {
    <span class="keywordflow">if</span> (strncmp(<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, argv[0],
        <a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#ab9048f4db5a930cf7650cfe16e1f7c4d">str_min_len</a>) == 0) 
      {
    <a class="code" href="rip__zebra_8c.html#a001f4b8b14e46c069af3c09afb3f105f">rip_redistribute_metric_set</a> (<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, metric);
    <a class="code" href="zclient_8c.html#a4381afa78256a1211fe7881394d7e666">zclient_redistribute</a> (<a class="code" href="zebra_8h.html#aaf00306d6060095dd258463ee7cb0cc1">ZEBRA_REDISTRIBUTE_ADD</a>, <a class="code" href="structzclient.html">zclient</a>, <a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>);
    <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
      }
  }

  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a>(<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Invalid type %s%s&quot;</span>, argv[0],
      <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3be58595e041a2e0e383b9a84e9fc64c"></a><!-- doxytag: member="rip_zebra.c::DEFUN" ref="a3be58595e041a2e0e383b9a84e9fc64c" args="(no_rip_redistribute_type_metric, no_rip_redistribute_type_metric_cmd,&quot;no redistribute &quot;QUAGGA_REDIST_STR_RIPD&quot; metric &lt;0&#45;16&gt;&quot;, NO_STR REDIST_STR QUAGGA_REDIST_HELP_STR_RIPD&quot;Metric\n&quot;&quot;Metric value\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_rip_redistribute_type_metric&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_rip_redistribute_type_metric_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no redistribute &quot;QUAGGA_REDIST_STR_RIPD&quot; metric &lt;0-16&gt;&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR REDIST_STR QUAGGA_REDIST_HELP_STR_RIPD&quot;Metric\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Metric value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00453">453</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

  <span class="keywordflow">for</span> (i = 0; <a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].str; i++) 
    {
      <span class="keywordflow">if</span> (strncmp(<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, argv[0], 
          <a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#ab9048f4db5a930cf7650cfe16e1f7c4d">str_min_len</a>) == 0) 
    {
      <span class="keywordflow">if</span> (<a class="code" href="rip__zebra_8c.html#a528d1922b9e9e6dd9d1f0de49868f499">rip_metric_unset</a> (<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, atoi(argv[1])))
        <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
      <a class="code" href="rip__zebra_8c.html#acfcec722ceaccc00622f409a57c4a7a6">rip_redistribute_unset</a> (<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].type);
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
        }
    }

  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a>(<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Invalid type %s%s&quot;</span>, argv[0],
      <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad37506a764c478f08cc8119822f9fae8"></a><!-- doxytag: member="rip_zebra.c::DEFUN" ref="ad37506a764c478f08cc8119822f9fae8" args="(rip_redistribute_type_metric_routemap, rip_redistribute_type_metric_routemap_cmd,&quot;redistribute &quot;QUAGGA_REDIST_STR_RIPD&quot; metric &lt;0&#45;16&gt; route&#45;map WORD&quot;, REDIST_STR QUAGGA_REDIST_HELP_STR_RIPD&quot;Metric\n&quot;&quot;Metric value\n&quot;&quot;Route map reference\n&quot;&quot;Pointer to route&#45;map entries\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">rip_redistribute_type_metric_routemap&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rip_redistribute_type_metric_routemap_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;redistribute &quot;QUAGGA_REDIST_STR_RIPD&quot; metric &lt;0-16&gt; route-map <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">REDIST_STR QUAGGA_REDIST_HELP_STR_RIPD&quot;Metric\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Metric value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Route map reference\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Pointer to route-map entries\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00482">482</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
  <span class="keywordtype">int</span> <a class="code" href="structrip__info.html#abba1d9e9e42d61055816c997e9074af8">metric</a>;

  metric = atoi (argv[1]);

  <span class="keywordflow">for</span> (i = 0; <a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].str; i++) {
    <span class="keywordflow">if</span> (strncmp(<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, argv[0],
        <a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#ab9048f4db5a930cf7650cfe16e1f7c4d">str_min_len</a>) == 0) 
      {
    <a class="code" href="rip__zebra_8c.html#a001f4b8b14e46c069af3c09afb3f105f">rip_redistribute_metric_set</a> (<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, metric);
    <a class="code" href="rip__zebra_8c.html#a420c2a6f60ab252ee0385c2c1c5c869b">rip_routemap_set</a> (<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, argv[2]);
    <a class="code" href="zclient_8c.html#a4381afa78256a1211fe7881394d7e666">zclient_redistribute</a> (<a class="code" href="zebra_8h.html#aaf00306d6060095dd258463ee7cb0cc1">ZEBRA_REDISTRIBUTE_ADD</a>, <a class="code" href="structzclient.html">zclient</a>, <a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>);
    <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
      }
  }

  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a>(<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Invalid type %s%s&quot;</span>, argv[0],
      <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5e2c6d8ab39b33a912fc863fe9e36310"></a><!-- doxytag: member="rip_zebra.c::DEFUN" ref="a5e2c6d8ab39b33a912fc863fe9e36310" args="(no_rip_redistribute_type_metric_routemap, no_rip_redistribute_type_metric_routemap_cmd,&quot;no redistribute &quot;QUAGGA_REDIST_STR_RIPD&quot; metric &lt;0&#45;16&gt; route&#45;map WORD&quot;, NO_STR REDIST_STR QUAGGA_REDIST_HELP_STR_RIPD&quot;Metric\n&quot;&quot;Metric value\n&quot;&quot;Route map reference\n&quot;&quot;Pointer to route&#45;map entries\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_rip_redistribute_type_metric_routemap&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_rip_redistribute_type_metric_routemap_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no redistribute &quot;QUAGGA_REDIST_STR_RIPD&quot; metric &lt;0-16&gt; route-map <a class="el" href="bgp__route_8c.html#a1b8d8f33ec8896a62ab53afa7351c08b">WORD</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR REDIST_STR QUAGGA_REDIST_HELP_STR_RIPD&quot;Metric\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Metric value\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Route map reference\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Pointer to route-map entries\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00515">515</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

  <span class="keywordflow">for</span> (i = 0; <a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].str; i++) 
    {
      <span class="keywordflow">if</span> (strncmp(<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, argv[0], 
          <a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="rip__zebra_8c.html#ab9048f4db5a930cf7650cfe16e1f7c4d">str_min_len</a>) == 0) 
    {
      <span class="keywordflow">if</span> (<a class="code" href="rip__zebra_8c.html#a528d1922b9e9e6dd9d1f0de49868f499">rip_metric_unset</a> (<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>, atoi(argv[1])))
        <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
      <span class="keywordflow">if</span> (<a class="code" href="rip__zebra_8c.html#a098de2f19440924dea30bd44f88f552a">rip_routemap_unset</a> (<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].type, argv[2]))
        {
          <a class="code" href="rip__zebra_8c.html#a001f4b8b14e46c069af3c09afb3f105f">rip_redistribute_metric_set</a>(<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].type, atoi(argv[1]));   
          <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
        }
      <a class="code" href="rip__zebra_8c.html#acfcec722ceaccc00622f409a57c4a7a6">rip_redistribute_unset</a> (<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].type);
      <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
        }
    }

  <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a>(<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Invalid type %s%s&quot;</span>, argv[0],
      <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#a92dc6dc30d8ef3651eb9d47a6083b025">CMD_WARNING</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af351939760245a39419a07aa854082c0"></a><!-- doxytag: member="rip_zebra.c::DEFUN" ref="af351939760245a39419a07aa854082c0" args="(rip_default_information_originate, rip_default_information_originate_cmd,&quot;default&#45;information originate&quot;,&quot;Control distribution of default route\n&quot;&quot;Distribute a default route\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">rip_default_information_originate&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rip_default_information_originate_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;default-information originate&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;Control distribution of default route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Distribute a default route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00554">554</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;

  <span class="keywordflow">if</span> (! <a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a487c10d0c3da11f8881dc3002817f3c6">default_information</a>)
    {
      memset (&amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a>));
      <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.family = AF_INET;

      <a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a487c10d0c3da11f8881dc3002817f3c6">default_information</a> = 1;
  
      <a class="code" href="ripd_8c.html#ae2c5c932284eca5a2ee4ca2dfdf248ac">rip_redistribute_add</a> (<a class="code" href="zebra_8h.html#a2bbecb9ceffe9e03927c535f41ba56fb">ZEBRA_ROUTE_RIP</a>, <a class="code" href="ripd_8h.html#aebaf1d3e550cd8b70cf9ed9f435e72af">RIP_ROUTE_DEFAULT</a>, &amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, 0, 
                            <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0, 0);
    }

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a062afde9052eaa8b7ea957d24ccd201f"></a><!-- doxytag: member="rip_zebra.c::DEFUN" ref="a062afde9052eaa8b7ea957d24ccd201f" args="(no_rip_default_information_originate, no_rip_default_information_originate_cmd,&quot;no default&#45;information originate&quot;, NO_STR&quot;Control distribution of default route\n&quot;&quot;Distribute a default route\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_rip_default_information_originate&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_rip_default_information_originate_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no default-information originate&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR&quot;Control distribution of default route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Distribute a default route\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00576">576</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;

  <span class="keywordflow">if</span> (<a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a487c10d0c3da11f8881dc3002817f3c6">default_information</a>)
    {
      memset (&amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a>));
      <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.family = AF_INET;

      <a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a487c10d0c3da11f8881dc3002817f3c6">default_information</a> = 0;
  
      <a class="code" href="ripd_8c.html#a33825a788df0587a784f9eb7d1d667d7">rip_redistribute_delete</a> (<a class="code" href="zebra_8h.html#a2bbecb9ceffe9e03927c535f41ba56fb">ZEBRA_ROUTE_RIP</a>, <a class="code" href="ripd_8h.html#aebaf1d3e550cd8b70cf9ed9f435e72af">RIP_ROUTE_DEFAULT</a>, &amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, 0);
    }

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a528d1922b9e9e6dd9d1f0de49868f499"></a><!-- doxytag: member="rip_zebra.c::rip_metric_unset" ref="a528d1922b9e9e6dd9d1f0de49868f499" args="(int type, unsigned int metric)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int rip_metric_unset </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>metric</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00172">172</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
<span class="preprocessor">#define DONT_CARE_METRIC_RIP 17  </span>
<span class="preprocessor"></span>  <span class="keywordflow">if</span> (<a class="code" href="structmetric.html">metric</a> != DONT_CARE_METRIC_RIP &amp;&amp;
      <a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a8596ef85639ad4db7e9b3da5f2a42714">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structrip.html#ac0b1115c5dc500cd379f80f17df49f09">metric</a> != <a class="code" href="structmetric.html">metric</a>)
    <span class="keywordflow">return</span> 1;
  <a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a8596ef85639ad4db7e9b3da5f2a42714">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structrip.html#a8ef10c6659dafa9d8912fb31e3c32f12">metric_config</a> = 0;
  <a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a8596ef85639ad4db7e9b3da5f2a42714">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structrip.html#ac0b1115c5dc500cd379f80f17df49f09">metric</a> = 0;
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a0fa20d285acbf66a75b8cb17d0655220"></a><!-- doxytag: member="rip_zebra.c::rip_redistribute_check" ref="a0fa20d285acbf66a75b8cb17d0655220" args="(int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int rip_redistribute_check </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00270">270</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> (<a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>]);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a1a65323d964e8319e2547170a478eb40"></a><!-- doxytag: member="rip_zebra.c::rip_redistribute_clean" ref="a1a65323d964e8319e2547170a478eb40" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void rip_redistribute_clean </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00276">276</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

  <span class="keywordflow">for</span> (i = 0; <a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].str; i++)
    {
      <span class="keywordflow">if</span> (<a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].type])
    {
      <span class="keywordflow">if</span> (<a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a53dfb4d4cfc1331edf8a62d04d99f08f">sock</a> &gt; 0)
        <a class="code" href="zclient_8c.html#a0ed1704cde688d0575a1394a34f6fc82">zebra_redistribute_send</a> (<a class="code" href="zebra_8h.html#a1dce1941aae01a8a16dace7591398a0d">ZEBRA_REDISTRIBUTE_DELETE</a>,
                     <a class="code" href="structzclient.html">zclient</a>, <a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>);

      <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].type] = 0;

      <span class="comment">/* Remove the routes from RIP table. */</span>
      <a class="code" href="ripd_8c.html#a31999532d8eff8b34771b8c0d40379f1">rip_redistribute_withdraw</a> (<a class="code" href="rip__zebra_8c.html#a6de0063d659a004efdd2c263e76b7721">redist_type</a>[i].<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>);
    }
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a001f4b8b14e46c069af3c09afb3f105f"></a><!-- doxytag: member="rip_zebra.c::rip_redistribute_metric_set" ref="a001f4b8b14e46c069af3c09afb3f105f" args="(int type, unsigned int metric)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void rip_redistribute_metric_set </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>metric</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00165">165</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a8596ef85639ad4db7e9b3da5f2a42714">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structrip.html#a8ef10c6659dafa9d8912fb31e3c32f12">metric_config</a> = 1;
  <a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a8596ef85639ad4db7e9b3da5f2a42714">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structrip.html#ac0b1115c5dc500cd379f80f17df49f09">metric</a> = <a class="code" href="structmetric.html">metric</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="acfcec722ceaccc00622f409a57c4a7a6"></a><!-- doxytag: member="rip_zebra.c::rip_redistribute_unset" ref="acfcec722ceaccc00622f409a57c4a7a6" args="(int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int rip_redistribute_unset </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00253">253</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (! <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>])
    <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;

  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>] = 0;

  <span class="keywordflow">if</span> (<a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a53dfb4d4cfc1331edf8a62d04d99f08f">sock</a> &gt; 0)
    <a class="code" href="zclient_8c.html#a0ed1704cde688d0575a1394a34f6fc82">zebra_redistribute_send</a> (<a class="code" href="zebra_8h.html#a1dce1941aae01a8a16dace7591398a0d">ZEBRA_REDISTRIBUTE_DELETE</a>, <a class="code" href="structzclient.html">zclient</a>, <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>);

  <span class="comment">/* Remove the routes from RIP table. */</span>
  <a class="code" href="ripd_8c.html#a31999532d8eff8b34771b8c0d40379f1">rip_redistribute_withdraw</a> (<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>);

  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a420c2a6f60ab252ee0385c2c1c5c869b"></a><!-- doxytag: member="rip_zebra.c::rip_routemap_set" ref="a420c2a6f60ab252ee0385c2c1c5c869b" args="(int type, const char *name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void rip_routemap_set </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00155">155</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a8596ef85639ad4db7e9b3da5f2a42714">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structrip.html#a77a65f4af78afdc1861f3f59ce91fb66">name</a>)
    free(<a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a8596ef85639ad4db7e9b3da5f2a42714">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structrip.html#a77a65f4af78afdc1861f3f59ce91fb66">name</a>);

  <a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a8596ef85639ad4db7e9b3da5f2a42714">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structrip.html#a77a65f4af78afdc1861f3f59ce91fb66">name</a> = strdup (<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>);
  <a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a8596ef85639ad4db7e9b3da5f2a42714">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structrip.html#af7561ddaf524e0a589d1d67322736460">map</a> = <a class="code" href="routemap_8c.html#a52006340e589dda4244d35cafc9f6f10">route_map_lookup_by_name</a> (<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a098de2f19440924dea30bd44f88f552a"></a><!-- doxytag: member="rip_zebra.c::rip_routemap_unset" ref="a098de2f19440924dea30bd44f88f552a" args="(int type, const char *name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int rip_routemap_unset </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00185">185</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (! <a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a8596ef85639ad4db7e9b3da5f2a42714">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structrip.html#a77a65f4af78afdc1861f3f59ce91fb66">name</a> ||
      (<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; strcmp(<a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a8596ef85639ad4db7e9b3da5f2a42714">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structrip.html#a77a65f4af78afdc1861f3f59ce91fb66">name</a>,<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>)))
    <span class="keywordflow">return</span> 1;

  free (<a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a8596ef85639ad4db7e9b3da5f2a42714">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structrip.html#a77a65f4af78afdc1861f3f59ce91fb66">name</a>);
  <a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a8596ef85639ad4db7e9b3da5f2a42714">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structrip.html#a77a65f4af78afdc1861f3f59ce91fb66">name</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <a class="code" href="structrip.html">rip</a>-&gt;<a class="code" href="structrip.html#a8596ef85639ad4db7e9b3da5f2a42714">route_map</a>[<a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>].<a class="code" href="structrip.html#af7561ddaf524e0a589d1d67322736460">map</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a185f88b3299e29c074f6bd0050868274"></a><!-- doxytag: member="rip_zebra.c::rip_zclient_init" ref="a185f88b3299e29c074f6bd0050868274" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void rip_zclient_init </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00663">663</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="comment">/* Set default value to the zebra client structure. */</span>
  <a class="code" href="structzclient.html">zclient</a> = <a class="code" href="zclient_8c.html#aa521f2a71596b1dc50f76fcb57dff30b">zclient_new</a> ();
  <a class="code" href="zclient_8c.html#ac649a246f405850a3ade72de002745e3">zclient_init</a> (<a class="code" href="structzclient.html">zclient</a>, <a class="code" href="zebra_8h.html#a2bbecb9ceffe9e03927c535f41ba56fb">ZEBRA_ROUTE_RIP</a>);
  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a42e63c358fc87552ca16a1eea8b69c4f">interface_add</a> = <a class="code" href="rip__interface_8c.html#a0e1c683a6d2f75467abb3263fbeae860">rip_interface_add</a>;
  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a59d608db28363c236285c6323d5697ab">interface_delete</a> = <a class="code" href="rip__interface_8c.html#a544a6b3de726118e11d16dbe747b1107">rip_interface_delete</a>;
  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a75ee908bb229653f271356b982fa76e7">interface_address_add</a> = <a class="code" href="rip__interface_8c.html#ae3fe2db25ded6649bbb9db32c76488a8">rip_interface_address_add</a>;
  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a3494b722f85fe14ff8c99ddae54bad94">interface_address_delete</a> = <a class="code" href="rip__interface_8c.html#af9455ce0b8e83af699349499804c1b29">rip_interface_address_delete</a>;
  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#ac2fe2ea5a7f820e1ac572f7629be997f">ipv4_route_add</a> = <a class="code" href="rip__zebra_8c.html#afa5015d7ccafa1ca98c90f512c8884cb">rip_zebra_read_ipv4</a>;
  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a2fa1fdde8885665490f46edc8c102d4a">ipv4_route_delete</a> = <a class="code" href="rip__zebra_8c.html#afa5015d7ccafa1ca98c90f512c8884cb">rip_zebra_read_ipv4</a>;
  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a45465702e655472187e9efc3c1734daa">interface_up</a> = <a class="code" href="rip__interface_8c.html#a8c44813a033c722ac91b5a333b73332f">rip_interface_up</a>;
  <a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a426b5e0ec3b5ad8843eb42deaa4fe335">interface_down</a> = <a class="code" href="rip__interface_8c.html#aa2531e123b35ffec6c8f054c1542f66e">rip_interface_down</a>;
  
  <span class="comment">/* Install zebra node. */</span>
  <a class="code" href="command_8c.html#a7ee8a7c258e1e5a6e3ff6173dd1658e3">install_node</a> (&amp;<a class="code" href="rip__zebra_8c.html#a6683c482f9e771c44b2279e90606739e">zebra_node</a>, <a class="code" href="rip__zebra_8c.html#aa86166351b4229f3fd5e0f53516dbb4c">config_write_zebra</a>);

  <span class="comment">/* Install command elements to zebra node. */</span> 
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;router_zebra_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;no_router_zebra_cmd);
  <a class="code" href="command_8h.html#affb2f399c88b8a225b2719bbe928e4de">install_default</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682af7fc20f627618eee254477289b890df3">ZEBRA_NODE</a>);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682af7fc20f627618eee254477289b890df3">ZEBRA_NODE</a>, &amp;rip_redistribute_rip_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682af7fc20f627618eee254477289b890df3">ZEBRA_NODE</a>, &amp;no_rip_redistribute_rip_cmd);

  <span class="comment">/* Install command elements to rip node. */</span>
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682aba91035637d2e661aaea111ea200751a">RIP_NODE</a>, &amp;rip_redistribute_type_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682aba91035637d2e661aaea111ea200751a">RIP_NODE</a>, &amp;rip_redistribute_type_routemap_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682aba91035637d2e661aaea111ea200751a">RIP_NODE</a>, &amp;rip_redistribute_type_metric_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682aba91035637d2e661aaea111ea200751a">RIP_NODE</a>, &amp;rip_redistribute_type_metric_routemap_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682aba91035637d2e661aaea111ea200751a">RIP_NODE</a>, &amp;no_rip_redistribute_type_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682aba91035637d2e661aaea111ea200751a">RIP_NODE</a>, &amp;no_rip_redistribute_type_routemap_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682aba91035637d2e661aaea111ea200751a">RIP_NODE</a>, &amp;no_rip_redistribute_type_metric_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682aba91035637d2e661aaea111ea200751a">RIP_NODE</a>, &amp;no_rip_redistribute_type_metric_routemap_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682aba91035637d2e661aaea111ea200751a">RIP_NODE</a>, &amp;rip_default_information_originate_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682aba91035637d2e661aaea111ea200751a">RIP_NODE</a>, &amp;no_rip_default_information_originate_cmd);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5791dae6dd88616ca369075b1154481b"></a><!-- doxytag: member="rip_zebra.c::rip_zclient_reset" ref="a5791dae6dd88616ca369075b1154481b" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void rip_zclient_reset </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00148">148</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="zclient_8c.html#ad002f3a9a797ab41ed60505ed5007ae7">zclient_reset</a> (<a class="code" href="structzclient.html">zclient</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a460a3829f5b473e965b8534e7576ba58"></a><!-- doxytag: member="rip_zebra.c::rip_zebra_ipv4_add" ref="a460a3829f5b473e965b8534e7576ba58" args="(struct prefix_ipv4 *p, struct in_addr *nexthop, u_int32_t metric, u_char distance)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void rip_zebra_ipv4_add </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structprefix__ipv4.html">prefix_ipv4</a> *&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr *&#160;</td>
          <td class="paramname"><em>nexthop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_int32_t&#160;</td>
          <td class="paramname"><em>metric</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_char&#160;</td>
          <td class="paramname"><em>distance</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00039">39</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structzapi__ipv4.html">zapi_ipv4</a> api;

  <span class="keywordflow">if</span> (<a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="zebra_8h.html#a2bbecb9ceffe9e03927c535f41ba56fb">ZEBRA_ROUTE_RIP</a>])
    {
      api.<a class="code" href="structzapi__ipv4.html#ae4c29fc6652367a6546104010802ac2f">type</a> = <a class="code" href="zebra_8h.html#a2bbecb9ceffe9e03927c535f41ba56fb">ZEBRA_ROUTE_RIP</a>;
      api.flags = 0;
      api.message = 0;
      <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#a321bbeaddad8bc9bffaf57f7ac6cf8fd">ZAPI_MESSAGE_NEXTHOP</a>);
      api.nexthop_num = 1;
      api.nexthop = &amp;<a class="code" href="structzapi__ipv4.html#a3864c7fed7dfc94e19405d9d0fef2f9c">nexthop</a>;
      api.ifindex_num = 0;
      <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#a4a5d60df1ef02f794476ea1daa6ba024">ZAPI_MESSAGE_METRIC</a>);
      api.metric = <a class="code" href="structzapi__ipv4.html#a4894d78fb0f8be44470318b265e5a487">metric</a>;

      <span class="keywordflow">if</span> (<a class="code" href="zebra__rib_8c.html#afb9412686cd344ad61757c1c19ba8a87">distance</a> &amp;&amp; <a class="code" href="zebra__rib_8c.html#afb9412686cd344ad61757c1c19ba8a87">distance</a> != <a class="code" href="zebra_8h.html#a59b508b9cafa2524d610279687c68ed3">ZEBRA_RIP_DISTANCE_DEFAULT</a>)
    {
      <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#abe498bb81bfbda17757173ef23e25179">ZAPI_MESSAGE_DISTANCE</a>);
      api.distance = <a class="code" href="zebra__rib_8c.html#afb9412686cd344ad61757c1c19ba8a87">distance</a>;
    }

      <a class="code" href="zclient_8c.html#ad9a398f43faa79a0bab620c985fb476a">zapi_ipv4_route</a> (<a class="code" href="zebra_8h.html#aa2913a6b1e5fbc598479aa282343a5e1">ZEBRA_IPV4_ROUTE_ADD</a>, <a class="code" href="structzclient.html">zclient</a>, p, &amp;api);

      <a class="code" href="ripd_8c.html#aee2f7ac8649bf74e5d65e6bb98e495cc">rip_global_route_changes</a>++;
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="af7f46189661f875392807d263c8a12e1"></a><!-- doxytag: member="rip_zebra.c::rip_zebra_ipv4_delete" ref="af7f46189661f875392807d263c8a12e1" args="(struct prefix_ipv4 *p, struct in_addr *nexthop, u_int32_t metric)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void rip_zebra_ipv4_delete </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structprefix__ipv4.html">prefix_ipv4</a> *&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr *&#160;</td>
          <td class="paramname"><em>nexthop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_int32_t&#160;</td>
          <td class="paramname"><em>metric</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00069">69</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structzapi__ipv4.html">zapi_ipv4</a> api;

  <span class="keywordflow">if</span> (<a class="code" href="structzclient.html">zclient</a>-&gt;<a class="code" href="structzclient.html#a7c76c66fcb4fee1303f834ea9fea0fc5">redist</a>[<a class="code" href="zebra_8h.html#a2bbecb9ceffe9e03927c535f41ba56fb">ZEBRA_ROUTE_RIP</a>])
    {
      api.<a class="code" href="structzapi__ipv4.html#ae4c29fc6652367a6546104010802ac2f">type</a> = <a class="code" href="zebra_8h.html#a2bbecb9ceffe9e03927c535f41ba56fb">ZEBRA_ROUTE_RIP</a>;
      api.flags = 0;
      api.message = 0;
      <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#a321bbeaddad8bc9bffaf57f7ac6cf8fd">ZAPI_MESSAGE_NEXTHOP</a>);
      api.nexthop_num = 1;
      api.nexthop = &amp;<a class="code" href="structzapi__ipv4.html#a3864c7fed7dfc94e19405d9d0fef2f9c">nexthop</a>;
      api.ifindex_num = 0;
      <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#a4a5d60df1ef02f794476ea1daa6ba024">ZAPI_MESSAGE_METRIC</a>);
      api.metric = <a class="code" href="structzapi__ipv4.html#a4894d78fb0f8be44470318b265e5a487">metric</a>;

      <a class="code" href="zclient_8c.html#ad9a398f43faa79a0bab620c985fb476a">zapi_ipv4_route</a> (<a class="code" href="zebra_8h.html#a0c9efcc3f61219a6697f5da18d8de992">ZEBRA_IPV4_ROUTE_DELETE</a>, <a class="code" href="structzclient.html">zclient</a>, p, &amp;api);

      <a class="code" href="ripd_8c.html#aee2f7ac8649bf74e5d65e6bb98e495cc">rip_global_route_changes</a>++;
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="afa5015d7ccafa1ca98c90f512c8884cb"></a><!-- doxytag: member="rip_zebra.c::rip_zebra_read_ipv4" ref="afa5015d7ccafa1ca98c90f512c8884cb" args="(int command, struct zclient *zclient, zebra_size_t length)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int rip_zebra_read_ipv4 </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>command</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structzclient.html">zclient</a> *&#160;</td>
          <td class="paramname"><em>zclient</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="zebra_8h.html#a6cbec281d30ae59db10d5b28b5d1cc03">zebra_size_t</a>&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00094">94</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>;
  <span class="keyword">struct </span><a class="code" href="structzapi__ipv4.html">zapi_ipv4</a> api;
  <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="structzapi__ipv4.html#a7043b2c08d10a58daa5e6e7800ff8a29">ifindex</a>;
  <span class="keyword">struct </span>in_addr <a class="code" href="structnexthop.html">nexthop</a>;
  <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
  
  s = zclient-&gt;<a class="code" href="structzclient.html#a1b9d2a1e869c1008c2bc70d14ce2bf49">ibuf</a>;
  ifindex = 0;
  <a class="code" href="structnexthop.html">nexthop</a>.s_addr = 0;

  <span class="comment">/* Type, flags, message. */</span>
  api.<a class="code" href="structnexthop.html#a2945ec57f56526f142592f4f578b4522">type</a> = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);
  api.flags = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);
  api.message = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);

  <span class="comment">/* IPv4 prefix. */</span>
  memset (&amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a>));
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.family = AF_INET;
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);
  <a class="code" href="stream_8c.html#ab7101e57ef0d9dc1a33e7f7e30c91b9a">stream_get</a> (&amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix, s, <a class="code" href="bgpd_8h.html#a472145011d944606a257487e80cc3ace">PSIZE</a> (<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen));

  <span class="comment">/* Nexthop, ifindex, distance, metric. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#a321bbeaddad8bc9bffaf57f7ac6cf8fd">ZAPI_MESSAGE_NEXTHOP</a>))
    {
      api.nexthop_num = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);
      <a class="code" href="structnexthop.html">nexthop</a>.s_addr = <a class="code" href="stream_8c.html#a0d93aa3e961894e5215d343625488576">stream_get_ipv4</a> (s);
    }
  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#ae8d1e48f6c2858ecda1c3aee4219a0e6">ZAPI_MESSAGE_IFINDEX</a>))
    {
      api.ifindex_num = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);
      ifindex = <a class="code" href="stream_8c.html#af857bfab0cbe7d5681e9108b58f939f2">stream_getl</a> (s);
    }
  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#abe498bb81bfbda17757173ef23e25179">ZAPI_MESSAGE_DISTANCE</a>))
    api.distance = <a class="code" href="stream_8c.html#a7902a86d9a749707c535840654ded3f6">stream_getc</a> (s);
  <span class="keywordflow">else</span>
    api.distance = 255;
  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (api.message, <a class="code" href="zclient_8h.html#a4a5d60df1ef02f794476ea1daa6ba024">ZAPI_MESSAGE_METRIC</a>))
    api.metric = <a class="code" href="stream_8c.html#af857bfab0cbe7d5681e9108b58f939f2">stream_getl</a> (s);
  <span class="keywordflow">else</span>
    api.metric = 0;

  <span class="comment">/* Then fetch IPv4 prefixes. */</span>
  <span class="keywordflow">if</span> (command == <a class="code" href="zebra_8h.html#aa2913a6b1e5fbc598479aa282343a5e1">ZEBRA_IPV4_ROUTE_ADD</a>)
    <a class="code" href="ripd_8c.html#ae2c5c932284eca5a2ee4ca2dfdf248ac">rip_redistribute_add</a> (api.type, <a class="code" href="ripd_8h.html#a43118d7389e3d91f271c7390469f1d91">RIP_ROUTE_REDISTRIBUTE</a>, &amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, ifindex, 
                          &amp;<a class="code" href="structnexthop.html">nexthop</a>, api.metric, api.distance);
  <span class="keywordflow">else</span> 
    <a class="code" href="ripd_8c.html#a33825a788df0587a784f9eb7d1d667d7">rip_redistribute_delete</a> (api.type, <a class="code" href="ripd_8h.html#a43118d7389e3d91f271c7390469f1d91">RIP_ROUTE_REDISTRIBUTE</a>, &amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, ifindex);

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<hr/><h2>Variable Documentation</h2>
<a class="anchor" id="a6de0063d659a004efdd2c263e76b7721"></a><!-- doxytag: member="rip_zebra.c::redist_type" ref="a6de0063d659a004efdd2c263e76b7721" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct { ... }   <a class="el" href="ripng__zebra_8c.html#ae816b22ec090ba15c2688646b7bf6335">redist_type</a>[]<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="af25d6dc49269fa2003ac7c7fa6f13915"></a><!-- doxytag: member="rip_zebra.c::str" ref="af25d6dc49269fa2003ac7c7fa6f13915" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* <a class="el" href="ripng__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00202">202</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>

</div>
</div>
<a class="anchor" id="ab9048f4db5a930cf7650cfe16e1f7c4d"></a><!-- doxytag: member="rip_zebra.c::str_min_len" ref="ab9048f4db5a930cf7650cfe16e1f7c4d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="ripng__zebra_8c.html#ab9048f4db5a930cf7650cfe16e1f7c4d">str_min_len</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00201">201</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>

</div>
</div>
<a class="anchor" id="ac765329451135abec74c45e1897abf26"></a><!-- doxytag: member="rip_zebra.c::type" ref="ac765329451135abec74c45e1897abf26" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="ripng__zebra_8c.html#ac765329451135abec74c45e1897abf26">type</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00200">200</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>

</div>
</div>
<a class="anchor" id="abe1502972ba9aa40adc080e419c496bf"></a><!-- doxytag: member="rip_zebra.c::zclient" ref="abe1502972ba9aa40adc080e419c496bf" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structzclient.html">zclient</a>* <a class="el" href="structzclient.html">zclient</a> = NULL</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00035">35</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>

</div>
</div>
<a class="anchor" id="a6683c482f9e771c44b2279e90606739e"></a><!-- doxytag: member="rip_zebra.c::zebra_node" ref="a6683c482f9e771c44b2279e90606739e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structcmd__node.html">cmd_node</a> <a class="el" href="vtysh_8c.html#a6683c482f9e771c44b2279e90606739e">zebra_node</a><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment">
{
  <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682af7fc20f627618eee254477289b890df3">ZEBRA_NODE</a>,
  <span class="stringliteral">&quot;%s(config-router)# &quot;</span>,
}
</pre></div>
<p>Definition at line <a class="el" href="rip__zebra_8c_source.html#l00656">656</a> of file <a class="el" href="rip__zebra_8c_source.html">rip_zebra.c</a>.</p>

</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="rip__zebra_8c.html">rip_zebra.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:35 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
