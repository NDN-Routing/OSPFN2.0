<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: ospfd/ospf_interface.h File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('ospf__interface_8h.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Defines</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">ospfd/ospf_interface.h File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="ospf__packet_8h_source.html">ospfd/ospf_packet.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__spf_8h_source.html">ospfd/ospf_spf.h</a>&quot;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for ospf_interface.h:</div>
<div class="dyncontent">
<div class="center"><img src="ospf__interface_8h__incl.png" border="0" usemap="#ospfd_2ospf__interface_8h" alt=""/></div>
<map name="ospfd_2ospf__interface_8h" id="ospfd_2ospf__interface_8h">
<area shape="rect" id="node3" href="ospf__packet_8h.html" title="ospfd/ospf_packet.h" alt="" coords="5,80,152,107"/><area shape="rect" id="node5" href="ospf__spf_8h.html" title="ospfd/ospf_spf.h" alt="" coords="177,80,300,107"/></map>
</div>
</div><div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><img src="ospf__interface_8h__dep__incl.png" border="0" usemap="#ospfd_2ospf__interface_8hdep" alt=""/></div>
<map name="ospfd_2ospf__interface_8hdep" id="ospfd_2ospf__interface_8hdep">
<area shape="rect" id="node3" href="ospf__apiclient_8c.html" title="ospfclient/ospf_apiclient.c" alt="" coords="5,80,187,107"/><area shape="rect" id="node5" href="ospf__abr_8c.html" title="ospfd/ospf_abr.c" alt="" coords="211,80,335,107"/><area shape="rect" id="node7" href="ospf__asbr_8c.html" title="ospfd/ospf_asbr.c" alt="" coords="360,80,491,107"/><area shape="rect" id="node9" href="ospf__ase_8c.html" title="ospfd/ospf_ase.c" alt="" coords="515,80,641,107"/><area shape="rect" id="node11" href="ospf__dump_8c.html" title="ospfd/ospf_dump.c" alt="" coords="667,80,805,107"/><area shape="rect" id="node13" href="ospf__flood_8c.html" title="ospfd/ospf_flood.c" alt="" coords="829,80,965,107"/><area shape="rect" id="node15" href="ospf__ia_8c.html" title="ospfd/ospf_ia.c" alt="" coords="989,80,1104,107"/><area shape="rect" id="node17" href="ospf__interface_8c.html" title="ospfd/ospf_interface.c" alt="" coords="1129,80,1287,107"/><area shape="rect" id="node19" href="ospf__ism_8c.html" title="ospfd/ospf_ism.c" alt="" coords="1311,80,1437,107"/><area shape="rect" id="node21" href="ospf__lsa_8c.html" title="ospfd/ospf_lsa.c" alt="" coords="1463,80,1585,107"/><area shape="rect" id="node23" href="ospf__main_8c.html" title="ospfd/ospf_main.c" alt="" coords="1609,80,1743,107"/><area shape="rect" id="node25" href="ospf__neighbor_8c.html" title="ospfd/ospf_neighbor.c" alt="" coords="1767,80,1925,107"/><area shape="rect" id="node27" href="ospf__network_8c.html" title="ospfd/ospf_network.c" alt="" coords="1951,80,2105,107"/><area shape="rect" id="node29" href="ospf__nsm_8c.html" title="ospfd/ospf_nsm.c" alt="" coords="2129,80,2260,107"/><area shape="rect" id="node31" href="ospf__packet_8c.html" title="ospfd/ospf_packet.c" alt="" coords="2284,80,2431,107"/><area shape="rect" id="node33" href="ospf__route_8c.html" title="ospfd/ospf_route.c" alt="" coords="2455,80,2592,107"/><area shape="rect" id="node35" href="ospf__routemap_8c.html" title="ospfd/ospf_routemap.c" alt="" coords="2617,80,2780,107"/><area shape="rect" id="node37" href="ospf__spf_8c.html" title="ospfd/ospf_spf.c" alt="" coords="2805,80,2928,107"/><area shape="rect" id="node39" href="ospf__vty_8c.html" title="ospfd/ospf_vty.c" alt="" coords="2953,80,3076,107"/><area shape="rect" id="node41" href="ospf__zebra_8c.html" title="ospfd/ospf_zebra.c" alt="" coords="3101,80,3240,107"/><area shape="rect" id="node43" href="ospfd_8c.html" title="ospfd/ospfd.c" alt="" coords="3264,80,3371,107"/></map>
</div>
</div>
<p><a href="ospf__interface_8h_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structospf__if__params.html">ospf_if_params</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structospf__if__info.html">ospf_if_info</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structospf__vl__data.html">ospf_vl_data</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structcrypt__key.html">crypt_key</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structospf__interface.html">ospf_interface</a></td></tr>
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a3e5c72325689a32aeff509c2d1eea075">IF_OSPF_IF_INFO</a>(I)&#160;&#160;&#160;((struct <a class="el" href="structospf__if__info.html">ospf_if_info</a> *)((I)-&gt;info))</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a>(I)&#160;&#160;&#160;(IF_OSPF_IF_INFO (I)-&gt;def_params)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#ad330e5d357fd1cb85883ed422291a332">IF_OIFS</a>(I)&#160;&#160;&#160;(IF_OSPF_IF_INFO (I)-&gt;oifs)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#ae535b760ee0160d3d681c5ab23457815">IF_OIFS_PARAMS</a>(I)&#160;&#160;&#160;(IF_OSPF_IF_INFO (I)-&gt;params)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#afe6a1e2fe03d1bd93a1deab41d6eb8e1">OSPF_IF_PARAM_CONFIGURED</a>(S, P)&#160;&#160;&#160;((S) &amp;&amp; (S)-&gt;P##__config)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a3082a40385804021e56001ea2bc5bdb1">OSPF_IF_PARAM</a>(O, P)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#af3b2e061517cc4144a17deb63c6bff70">DECLARE_IF_PARAM</a>(<a class="el" href="md5_8c.html#a7e83ec4daea14d9c3040af4e0ac30792">T</a>, P)&#160;&#160;&#160;<a class="el" href="md5_8c.html#a7e83ec4daea14d9c3040af4e0ac30792">T</a> P; u_char P##__config:1</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a88a040c444b86d201dc0c151152c328b">UNSET_IF_PARAM</a>(S, P)&#160;&#160;&#160;((S)-&gt;P##__config) = 0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#abf54ad522ce6b3724bd2c7959e0a6d6a">SET_IF_PARAM</a>(S, P)&#160;&#160;&#160;((S)-&gt;P##__config) = 1</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#aa8ac4964fabc3508563c253b72158fad">OSPF_IF_ACTIVE</a>&#160;&#160;&#160;0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a68e4f61453d94a303183c773f0d02a27">OSPF_IF_PASSIVE</a>&#160;&#160;&#160;1</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#abe2e84be7bf9a73954a72fa5fbb728db">OSPF_IF_PASSIVE_STATUS</a>(O)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a6163032f8217dd26f96e3619907c36a0">OSPF_VL_MAX_COUNT</a>&#160;&#160;&#160;256</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#adaa609854f279874b7bfaa53ed6a1a1c">OSPF_VL_MTU</a>&#160;&#160;&#160;1500</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#aa89efc5812cb48020241fb638d90bc48">OSPF_VL_FLAG_APPROVED</a>&#160;&#160;&#160;0x01</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#ab10d3ae5fc5c9d2d5dab1f9022d84800">OSPF_IFTYPE_NONE</a>&#160;&#160;&#160;0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a7722c258e67d21a5c6f367811664cccb">OSPF_IFTYPE_POINTOPOINT</a>&#160;&#160;&#160;1</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a6c044d3118d79d243c1547176a4c5281">OSPF_IFTYPE_BROADCAST</a>&#160;&#160;&#160;2</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#abf2c650e64355936c071432d92dd5ecb">OSPF_IFTYPE_NBMA</a>&#160;&#160;&#160;3</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#aa65cd67781b9573131ead326b8976194">OSPF_IFTYPE_POINTOMULTIPOINT</a>&#160;&#160;&#160;4</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a45798a2a8b566abd1907f7ae8bc0a2be">OSPF_IFTYPE_VIRTUALLINK</a>&#160;&#160;&#160;5</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#ad1bc5e92d8d0f8c50fc99ec0ae3f1772">OSPF_IFTYPE_LOOPBACK</a>&#160;&#160;&#160;6</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a0bfbc9405034c24496e213f83f74c99d">OSPF_IFTYPE_MAX</a>&#160;&#160;&#160;7</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#aff4ad9c0b3678ecacd541b6b0c3fe9f1">OI_MEMBER_FLAG</a>(M)&#160;&#160;&#160;(1 &lt;&lt; (M))</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a036d7ff75d00837601d3092b6eeb58ea">OI_MEMBER_COUNT</a>(O, M)&#160;&#160;&#160;(IF_OSPF_IF_INFO(oi-&gt;ifp)-&gt;membership_counts[(M)])</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a3ae9d6ac68815c909cb5bd4f61498072">OI_MEMBER_CHECK</a>(O, M)&#160;&#160;&#160;(CHECK_FLAG((O)-&gt;multicast_memberships, OI_MEMBER_FLAG(M)))</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a1ca2c1bc3588bb126c3856c2b70b86bb">OI_MEMBER_JOINED</a>(O, M)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#adfe6ede0f8fd3d4a4e42e4b8b4c4a582">OI_MEMBER_LEFT</a>(O, M)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#aa84a7dde76ac0a31898992d050858ec5">DR</a>(I)&#160;&#160;&#160;((I)-&gt;nbr_self-&gt;d_router)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#ab9a182dc79cc0d10a77a27c60f2351cd">BDR</a>(I)&#160;&#160;&#160;((I)-&gt;nbr_self-&gt;bd_router)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#af4be2fbb5f97ac9946d943e9e4f4dec8">OPTIONS</a>(I)&#160;&#160;&#160;((I)-&gt;nbr_self-&gt;options)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#accb5457e43688e067b0b9844b08ae520">PRIORITY</a>(I)&#160;&#160;&#160;((I)-&gt;nbr_self-&gt;priority)</td></tr>
<tr><td colspan="2"><h2><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom">{ <a class="el" href="ospf__interface_8h.html#a157d5577a5b2f5986037d0d09c7dc77da1a4c3684ddae56a371d771435185fbc9">MEMBER_ALLROUTERS</a> =  0, 
<a class="el" href="ospf__interface_8h.html#a157d5577a5b2f5986037d0d09c7dc77da9147ef980218375b970ea2ffe3ca013b">MEMBER_DROUTERS</a>, 
<a class="el" href="ospf__interface_8h.html#a157d5577a5b2f5986037d0d09c7dc77dad66c4ddd103186e693aa911385c508f6">MEMBER_MAX</a>
 }</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#aedc8d6d5ab92e7b20d2105b1475d6dfb">ospf_if_name</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a9e69619161066c87716addfb368a0a02">ospf_if_new</a> (struct <a class="el" href="structospf.html">ospf</a> *, struct <a class="el" href="structinterface.html">interface</a> *, struct <a class="el" href="structprefix.html">prefix</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a2f3017a7dff9126573df94ba12fc1bb5">ospf_if_cleanup</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a5ee0ba7d67dcf44e58490cfb54774072">ospf_if_free</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a5877d19945034e35e52ef208e7fb5196">ospf_if_up</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a8c2b6ac010817517e078740e68faa5f5">ospf_if_down</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a985a4e0e98ae14e35ca05aa2ed75b619">ospf_if_is_up</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a08113e8427e0450d20452442c98d21d8">ospf_if_exists</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a6003adc9a1a2e32903d32d08f22e81bf">ospf_if_lookup_by_local_addr</a> (struct <a class="el" href="structospf.html">ospf</a> *, struct <a class="el" href="structinterface.html">interface</a> *, struct in_addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#aba3a6ca5e1fd29fad1fa0ebee1937513">ospf_if_lookup_by_prefix</a> (struct <a class="el" href="structospf.html">ospf</a> *, struct <a class="el" href="structprefix__ipv4.html">prefix_ipv4</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a70eea25e7c91f954c384563e97c1be00">ospf_if_table_lookup</a> (struct <a class="el" href="structinterface.html">interface</a> *, struct <a class="el" href="structprefix.html">prefix</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#ae8a93af733313910119e34567b167f62">ospf_if_addr_local</a> (struct in_addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a76b936d68b52c50c3bc293b312049b74">ospf_if_lookup_recv_if</a> (struct <a class="el" href="structospf.html">ospf</a> *, struct in_addr, struct <a class="el" href="structinterface.html">interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#ab9b4ccb999cb7dce09d5c7e3b0af877c">ospf_if_is_configured</a> (struct <a class="el" href="structospf.html">ospf</a> *, struct in_addr *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__if__params.html">ospf_if_params</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a652c73bd6ca95dea880e2270318f1635">ospf_lookup_if_params</a> (struct <a class="el" href="structinterface.html">interface</a> *, struct in_addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__if__params.html">ospf_if_params</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a371ce23c7417db311ea9074ee36f2de7">ospf_get_if_params</a> (struct <a class="el" href="structinterface.html">interface</a> *, struct in_addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a6f9b42afb49e1c199598d3ff847e5a78">ospf_del_if_params</a> (struct <a class="el" href="structospf__if__params.html">ospf_if_params</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a45a2d1fff01f367d3bfdffe55b3e800b">ospf_free_if_params</a> (struct <a class="el" href="structinterface.html">interface</a> *, struct in_addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a76ccfb778fc6544fa880e99078dc2308">ospf_if_update_params</a> (struct <a class="el" href="structinterface.html">interface</a> *, struct in_addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#aa15a786a2f75fa3e48d56d03e0dfcd1a">ospf_if_new_hook</a> (struct <a class="el" href="structinterface.html">interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a42c528838efca4371251ba87bec8ef66">ospf_if_init</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a1f02b0aabef03159360022464beff696">ospf_if_stream_set</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a6af760835230e02c6ebdf2ceb155f664">ospf_if_stream_unset</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a24d22295eb5fff9b5423b848f10c7af6">ospf_if_reset_variables</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a3f76a9d9d7192a6236dad7975b478c52">ospf_if_is_enable</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a9cd50320072d19997fba6493fc90e3ca">ospf_if_get_output_cost</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a5bc57e01012f36d01973bd8e95482f07">ospf_if_recalculate_output_cost</a> (struct <a class="el" href="structinterface.html">interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a6be5642b2dca915859aaeccc741ba790">ospf_if_reset</a> (struct <a class="el" href="structinterface.html">interface</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a1f44bf4b5bf1fde1805c0a89eb96954c">ospf_vl_new</a> (struct <a class="el" href="structospf.html">ospf</a> *, struct <a class="el" href="structospf__vl__data.html">ospf_vl_data</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__vl__data.html">ospf_vl_data</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#ab6849b32e8c56b34e713259bb8c51f14">ospf_vl_data_new</a> (struct <a class="el" href="structospf__area.html">ospf_area</a> *, struct in_addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__vl__data.html">ospf_vl_data</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a525a41296ae08a4003ac839dec516875">ospf_vl_lookup</a> (struct <a class="el" href="structospf.html">ospf</a> *, struct <a class="el" href="structospf__area.html">ospf_area</a> *, struct in_addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a13023c2eb3405638c378f8a6747aa077">ospf_vl_data_free</a> (struct <a class="el" href="structospf__vl__data.html">ospf_vl_data</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#ac418ccc162771fa2339f027ff2086b71">ospf_vl_add</a> (struct <a class="el" href="structospf.html">ospf</a> *, struct <a class="el" href="structospf__vl__data.html">ospf_vl_data</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a0b97c900d06d684da965b3320b078619">ospf_vl_delete</a> (struct <a class="el" href="structospf.html">ospf</a> *, struct <a class="el" href="structospf__vl__data.html">ospf_vl_data</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#aedae860c8d89434636286de17bcfb387">ospf_vl_up_check</a> (struct <a class="el" href="structospf__area.html">ospf_area</a> *, struct in_addr, struct <a class="el" href="structvertex.html">vertex</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#abdb8e7e0e60c5b737a5fbe55a7a063d1">ospf_vl_unapprove</a> (struct <a class="el" href="structospf.html">ospf</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#ac91ba56900382bf7a65b3db570b6cca4">ospf_vl_shut_unapproved</a> (struct <a class="el" href="structospf.html">ospf</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a7a2a72fb51539f6d1d7d9391cef1086b">ospf_full_virtual_nbrs</a> (struct <a class="el" href="structospf__area.html">ospf_area</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a19760bf749d66692c61a10356398ca90">ospf_vls_in_area</a> (struct <a class="el" href="structospf__area.html">ospf_area</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structcrypt__key.html">crypt_key</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#aabea14b42350a1a9f7f84f9cc3524b3e">ospf_crypt_key_lookup</a> (struct <a class="el" href="structlist.html">list</a> *, u_char)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structcrypt__key.html">crypt_key</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#af1baae1459c4e0e11d08c674f7b07fb3">ospf_crypt_key_new</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#ad187f28dda36b6d47b83c8bee03901a0">ospf_crypt_key_add</a> (struct <a class="el" href="structlist.html">list</a> *, struct <a class="el" href="structcrypt__key.html">crypt_key</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#ad0bc72f1d0e06ea35f43600e9050e743">ospf_crypt_key_delete</a> (struct <a class="el" href="structlist.html">list</a> *, u_char)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">u_char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#a492149baf1a156aaeb909b62384fc7ef">ospf_default_iftype</a> (struct <a class="el" href="structinterface.html">interface</a> *ifp)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__interface_8h.html#af1ec82b8d21a8a9ac241fe6ff5e7e234">ospf_if_set_multicast</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *)</td></tr>
</table>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="ab9a182dc79cc0d10a77a27c60f2351cd"></a><!-- doxytag: member="ospf_interface.h::BDR" ref="ab9a182dc79cc0d10a77a27c60f2351cd" args="(I)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BDR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">I</td><td>)</td>
          <td>&#160;&#160;&#160;((I)-&gt;nbr_self-&gt;bd_router)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00177">177</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="af3b2e061517cc4144a17deb63c6bff70"></a><!-- doxytag: member="ospf_interface.h::DECLARE_IF_PARAM" ref="af3b2e061517cc4144a17deb63c6bff70" args="(T, P)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DECLARE_IF_PARAM</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="md5_8c.html#a7e83ec4daea14d9c3040af4e0ac30792">T</a>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">P&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="md5_8c.html#a7e83ec4daea14d9c3040af4e0ac30792">T</a> P; u_char P##__config:1</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00039">39</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa84a7dde76ac0a31898992d050858ec5"></a><!-- doxytag: member="ospf_interface.h::DR" ref="aa84a7dde76ac0a31898992d050858ec5" args="(I)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">I</td><td>)</td>
          <td>&#160;&#160;&#160;((I)-&gt;nbr_self-&gt;d_router)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00176">176</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa0b2fa68b7fc94f71356893c7e03770a"></a><!-- doxytag: member="ospf_interface.h::IF_DEF_PARAMS" ref="aa0b2fa68b7fc94f71356893c7e03770a" args="(I)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IF_DEF_PARAMS</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">I</td><td>)</td>
          <td>&#160;&#160;&#160;(IF_OSPF_IF_INFO (I)-&gt;def_params)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00030">30</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="ad330e5d357fd1cb85883ed422291a332"></a><!-- doxytag: member="ospf_interface.h::IF_OIFS" ref="ad330e5d357fd1cb85883ed422291a332" args="(I)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IF_OIFS</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">I</td><td>)</td>
          <td>&#160;&#160;&#160;(IF_OSPF_IF_INFO (I)-&gt;oifs)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00031">31</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="ae535b760ee0160d3d681c5ab23457815"></a><!-- doxytag: member="ospf_interface.h::IF_OIFS_PARAMS" ref="ae535b760ee0160d3d681c5ab23457815" args="(I)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IF_OIFS_PARAMS</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">I</td><td>)</td>
          <td>&#160;&#160;&#160;(IF_OSPF_IF_INFO (I)-&gt;params)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00032">32</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a3e5c72325689a32aeff509c2d1eea075"></a><!-- doxytag: member="ospf_interface.h::IF_OSPF_IF_INFO" ref="a3e5c72325689a32aeff509c2d1eea075" args="(I)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IF_OSPF_IF_INFO</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">I</td><td>)</td>
          <td>&#160;&#160;&#160;((struct <a class="el" href="structospf__if__info.html">ospf_if_info</a> *)((I)-&gt;info))</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00029">29</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a3ae9d6ac68815c909cb5bd4f61498072"></a><!-- doxytag: member="ospf_interface.h::OI_MEMBER_CHECK" ref="a3ae9d6ac68815c909cb5bd4f61498072" args="(O, M)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OI_MEMBER_CHECK</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">O, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">M&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;(CHECK_FLAG((O)-&gt;multicast_memberships, OI_MEMBER_FLAG(M)))</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00152">152</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a036d7ff75d00837601d3092b6eeb58ea"></a><!-- doxytag: member="ospf_interface.h::OI_MEMBER_COUNT" ref="a036d7ff75d00837601d3092b6eeb58ea" args="(O, M)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OI_MEMBER_COUNT</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">O, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">M&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;(IF_OSPF_IF_INFO(oi-&gt;ifp)-&gt;membership_counts[(M)])</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00151">151</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="aff4ad9c0b3678ecacd541b6b0c3fe9f1"></a><!-- doxytag: member="ospf_interface.h::OI_MEMBER_FLAG" ref="aff4ad9c0b3678ecacd541b6b0c3fe9f1" args="(M)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OI_MEMBER_FLAG</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">M</td><td>)</td>
          <td>&#160;&#160;&#160;(1 &lt;&lt; (M))</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00150">150</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a1ca2c1bc3588bb126c3856c2b70b86bb"></a><!-- doxytag: member="ospf_interface.h::OI_MEMBER_JOINED" ref="a1ca2c1bc3588bb126c3856c2b70b86bb" args="(O, M)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OI_MEMBER_JOINED</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">O, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">M&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keywordflow">do</span> { \
    SET_FLAG ((O)-&gt;multicast_memberships, <a class="code" href="ospf__interface_8h.html#aff4ad9c0b3678ecacd541b6b0c3fe9f1">OI_MEMBER_FLAG</a>(M)); \
    IF_OSPF_IF_INFO((O)-&gt;ifp)-&gt;membership_counts[(M)]++; \
  } <span class="keywordflow">while</span> (0)
</pre></div>
<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00154">154</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="adfe6ede0f8fd3d4a4e42e4b8b4c4a582"></a><!-- doxytag: member="ospf_interface.h::OI_MEMBER_LEFT" ref="adfe6ede0f8fd3d4a4e42e4b8b4c4a582" args="(O, M)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OI_MEMBER_LEFT</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">O, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">M&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keywordflow">do</span> { \
    UNSET_FLAG ((O)-&gt;multicast_memberships, <a class="code" href="ospf__interface_8h.html#aff4ad9c0b3678ecacd541b6b0c3fe9f1">OI_MEMBER_FLAG</a>(M)); \
    IF_OSPF_IF_INFO((O)-&gt;ifp)-&gt;membership_counts[(M)]--; \
  } <span class="keywordflow">while</span> (0)
</pre></div>
<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00159">159</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="af4be2fbb5f97ac9946d943e9e4f4dec8"></a><!-- doxytag: member="ospf_interface.h::OPTIONS" ref="af4be2fbb5f97ac9946d943e9e4f4dec8" args="(I)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OPTIONS</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">I</td><td>)</td>
          <td>&#160;&#160;&#160;((I)-&gt;nbr_self-&gt;options)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00178">178</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa8ac4964fabc3508563c253b72158fad"></a><!-- doxytag: member="ospf_interface.h::OSPF_IF_ACTIVE" ref="aa8ac4964fabc3508563c253b72158fad" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_IF_ACTIVE&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00051">51</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a3082a40385804021e56001ea2bc5bdb1"></a><!-- doxytag: member="ospf_interface.h::OSPF_IF_PARAM" ref="a3082a40385804021e56001ea2bc5bdb1" args="(O, P)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_IF_PARAM</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">O, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">P&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment">(<a class="code" href="ospf__interface_8h.html#afe6a1e2fe03d1bd93a1deab41d6eb8e1">OSPF_IF_PARAM_CONFIGURED</a> ((O)-&gt;params, P)?\
                        (O)-&gt;params-&gt;P:<a class="code" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a>((O)-&gt;ifp)-&gt;P)
</pre></div>
<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00035">35</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="afe6a1e2fe03d1bd93a1deab41d6eb8e1"></a><!-- doxytag: member="ospf_interface.h::OSPF_IF_PARAM_CONFIGURED" ref="afe6a1e2fe03d1bd93a1deab41d6eb8e1" args="(S, P)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_IF_PARAM_CONFIGURED</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">S, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">P&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;((S) &amp;&amp; (S)-&gt;P##__config)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00034">34</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a68e4f61453d94a303183c773f0d02a27"></a><!-- doxytag: member="ospf_interface.h::OSPF_IF_PASSIVE" ref="a68e4f61453d94a303183c773f0d02a27" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_IF_PASSIVE&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00052">52</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="abe2e84be7bf9a73954a72fa5fbb728db"></a><!-- doxytag: member="ospf_interface.h::OSPF_IF_PASSIVE_STATUS" ref="abe2e84be7bf9a73954a72fa5fbb728db" args="(O)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_IF_PASSIVE_STATUS</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">O</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Value:</b><div class="fragment"><pre class="fragment">(<a class="code" href="ospf__interface_8h.html#afe6a1e2fe03d1bd93a1deab41d6eb8e1">OSPF_IF_PARAM_CONFIGURED</a>((O)-&gt;params, passive_interface) ? \
         (O)-&gt;params-&gt;passive_interface : \
         (<a class="code" href="ospf__interface_8h.html#afe6a1e2fe03d1bd93a1deab41d6eb8e1">OSPF_IF_PARAM_CONFIGURED</a>(<a class="code" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a>((O)-&gt;ifp), passive_interface) ? \
           IF_DEF_PARAMS((O)-&gt;ifp)-&gt;passive_interface : \
           (O)-&gt;<a class="code" href="structospf.html">ospf</a>-&gt;<a class="code" href="structospf.html#a1820b5fda87497463488395dded8ad8d">passive_interface_default</a>))
</pre></div>
<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00054">54</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a6c044d3118d79d243c1547176a4c5281"></a><!-- doxytag: member="ospf_interface.h::OSPF_IFTYPE_BROADCAST" ref="a6c044d3118d79d243c1547176a4c5281" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_IFTYPE_BROADCAST&#160;&#160;&#160;2</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00138">138</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="ad1bc5e92d8d0f8c50fc99ec0ae3f1772"></a><!-- doxytag: member="ospf_interface.h::OSPF_IFTYPE_LOOPBACK" ref="ad1bc5e92d8d0f8c50fc99ec0ae3f1772" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_IFTYPE_LOOPBACK&#160;&#160;&#160;6</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00142">142</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a0bfbc9405034c24496e213f83f74c99d"></a><!-- doxytag: member="ospf_interface.h::OSPF_IFTYPE_MAX" ref="a0bfbc9405034c24496e213f83f74c99d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_IFTYPE_MAX&#160;&#160;&#160;7</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00143">143</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="abf2c650e64355936c071432d92dd5ecb"></a><!-- doxytag: member="ospf_interface.h::OSPF_IFTYPE_NBMA" ref="abf2c650e64355936c071432d92dd5ecb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_IFTYPE_NBMA&#160;&#160;&#160;3</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00139">139</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab10d3ae5fc5c9d2d5dab1f9022d84800"></a><!-- doxytag: member="ospf_interface.h::OSPF_IFTYPE_NONE" ref="ab10d3ae5fc5c9d2d5dab1f9022d84800" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_IFTYPE_NONE&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00136">136</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa65cd67781b9573131ead326b8976194"></a><!-- doxytag: member="ospf_interface.h::OSPF_IFTYPE_POINTOMULTIPOINT" ref="aa65cd67781b9573131ead326b8976194" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_IFTYPE_POINTOMULTIPOINT&#160;&#160;&#160;4</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00140">140</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a7722c258e67d21a5c6f367811664cccb"></a><!-- doxytag: member="ospf_interface.h::OSPF_IFTYPE_POINTOPOINT" ref="a7722c258e67d21a5c6f367811664cccb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_IFTYPE_POINTOPOINT&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00137">137</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a45798a2a8b566abd1907f7ae8bc0a2be"></a><!-- doxytag: member="ospf_interface.h::OSPF_IFTYPE_VIRTUALLINK" ref="a45798a2a8b566abd1907f7ae8bc0a2be" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_IFTYPE_VIRTUALLINK&#160;&#160;&#160;5</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00141">141</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa89efc5812cb48020241fb638d90bc48"></a><!-- doxytag: member="ospf_interface.h::OSPF_VL_FLAG_APPROVED" ref="aa89efc5812cb48020241fb638d90bc48" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_VL_FLAG_APPROVED&#160;&#160;&#160;0x01</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00110">110</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a6163032f8217dd26f96e3619907c36a0"></a><!-- doxytag: member="ospf_interface.h::OSPF_VL_MAX_COUNT" ref="a6163032f8217dd26f96e3619907c36a0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_VL_MAX_COUNT&#160;&#160;&#160;256</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00107">107</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="adaa609854f279874b7bfaa53ed6a1a1c"></a><!-- doxytag: member="ospf_interface.h::OSPF_VL_MTU" ref="adaa609854f279874b7bfaa53ed6a1a1c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define OSPF_VL_MTU&#160;&#160;&#160;1500</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00108">108</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="accb5457e43688e067b0b9844b08ae520"></a><!-- doxytag: member="ospf_interface.h::PRIORITY" ref="accb5457e43688e067b0b9844b08ae520" args="(I)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PRIORITY</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">I</td><td>)</td>
          <td>&#160;&#160;&#160;((I)-&gt;nbr_self-&gt;priority)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00179">179</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="abf54ad522ce6b3724bd2c7959e0a6d6a"></a><!-- doxytag: member="ospf_interface.h::SET_IF_PARAM" ref="abf54ad522ce6b3724bd2c7959e0a6d6a" args="(S, P)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SET_IF_PARAM</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">S, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">P&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;((S)-&gt;P##__config) = 1</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00041">41</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<a class="anchor" id="a88a040c444b86d201dc0c151152c328b"></a><!-- doxytag: member="ospf_interface.h::UNSET_IF_PARAM" ref="a88a040c444b86d201dc0c151152c328b" args="(S, P)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define UNSET_IF_PARAM</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">S, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">P&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;((S)-&gt;P##__config) = 0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00040">40</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>

</div>
</div>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="a157d5577a5b2f5986037d0d09c7dc77d"></a><!-- doxytag: member="ospf_interface.h::@44" ref="a157d5577a5b2f5986037d0d09c7dc77d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">anonymous enum</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="a157d5577a5b2f5986037d0d09c7dc77da1a4c3684ddae56a371d771435185fbc9"></a><!-- doxytag: member="MEMBER_ALLROUTERS" ref="a157d5577a5b2f5986037d0d09c7dc77da1a4c3684ddae56a371d771435185fbc9" args="" -->MEMBER_ALLROUTERS</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a157d5577a5b2f5986037d0d09c7dc77da9147ef980218375b970ea2ffe3ca013b"></a><!-- doxytag: member="MEMBER_DROUTERS" ref="a157d5577a5b2f5986037d0d09c7dc77da9147ef980218375b970ea2ffe3ca013b" args="" -->MEMBER_DROUTERS</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a157d5577a5b2f5986037d0d09c7dc77dad66c4ddd103186e693aa911385c508f6"></a><!-- doxytag: member="MEMBER_MAX" ref="a157d5577a5b2f5986037d0d09c7dc77dad66c4ddd103186e693aa911385c508f6" args="" -->MEMBER_MAX</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="ospf__interface_8h_source.html#l00078">78</a> of file <a class="el" href="ospf__interface_8h_source.html">ospf_interface.h</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="ospf__interface_8h.html#a157d5577a5b2f5986037d0d09c7dc77da1a4c3684ddae56a371d771435185fbc9">MEMBER_ALLROUTERS</a> = 0,
  <a class="code" href="ospf__interface_8h.html#a157d5577a5b2f5986037d0d09c7dc77da9147ef980218375b970ea2ffe3ca013b">MEMBER_DROUTERS</a>,
  <a class="code" href="ospf__interface_8h.html#a157d5577a5b2f5986037d0d09c7dc77dad66c4ddd103186e693aa911385c508f6">MEMBER_MAX</a>,
};
</pre></div>
</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ad187f28dda36b6d47b83c8bee03901a0"></a><!-- doxytag: member="ospf_interface.h::ospf_crypt_key_add" ref="ad187f28dda36b6d47b83c8bee03901a0" args="(struct list *, struct crypt_key *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_crypt_key_add </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structcrypt__key.html">crypt_key</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l01189">1189</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (crypt, ck);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad0bc72f1d0e06ea35f43600e9050e743"></a><!-- doxytag: member="ospf_interface.h::ospf_crypt_key_delete" ref="ad0bc72f1d0e06ea35f43600e9050e743" args="(struct list *, u_char)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_crypt_key_delete </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_char&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l01208">1208</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
  <span class="keyword">struct </span><a class="code" href="structcrypt__key.html">crypt_key</a> *ck;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (auth_crypt, node, nnode, ck))
    {
      <span class="keywordflow">if</span> (ck-&gt;<a class="code" href="structcrypt__key.html#a4be3a06d74571b9522997b138b135af2">key_id</a> == <a class="code" href="structcrypt__key.html#a4be3a06d74571b9522997b138b135af2">key_id</a>)
        {
          <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (auth_crypt, ck);
          <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba918b6239f3955fd79b57d779548e321f">MTYPE_OSPF_CRYPT_KEY</a>, ck);
          <span class="keywordflow">return</span> 1;
        }
    }

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aabea14b42350a1a9f7f84f9cc3524b3e"></a><!-- doxytag: member="ospf_interface.h::ospf_crypt_key_lookup" ref="aabea14b42350a1a9f7f84f9cc3524b3e" args="(struct list *, u_char)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structcrypt__key.html">crypt_key</a>* ospf_crypt_key_lookup </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structlist.html">list</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_char&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l01195">1195</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structcrypt__key.html">crypt_key</a> *ck;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (auth_crypt, node, ck))
    <span class="keywordflow">if</span> (ck-&gt;<a class="code" href="structcrypt__key.html#a4be3a06d74571b9522997b138b135af2">key_id</a> == <a class="code" href="structcrypt__key.html#a4be3a06d74571b9522997b138b135af2">key_id</a>)
      <span class="keywordflow">return</span> ck;

  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af1baae1459c4e0e11d08c674f7b07fb3"></a><!-- doxytag: member="ospf_interface.h::ospf_crypt_key_new" ref="af1baae1459c4e0e11d08c674f7b07fb3" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structcrypt__key.html">crypt_key</a>* ospf_crypt_key_new </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l01183">1183</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba918b6239f3955fd79b57d779548e321f">MTYPE_OSPF_CRYPT_KEY</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structcrypt__key.html">crypt_key</a>));
}
</pre></div>
</div>
</div>
<a class="anchor" id="a492149baf1a156aaeb909b62384fc7ef"></a><!-- doxytag: member="ospf_interface.h::ospf_default_iftype" ref="a492149baf1a156aaeb909b62384fc7ef" args="(struct interface *ifp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">u_char ospf_default_iftype </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"><em>ifp</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l01227">1227</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a61aed2ccc7ec47d6822546664ea77f0c">if_is_pointopoint</a> (ifp))
    <span class="keywordflow">return</span> <a class="code" href="ospf__interface_8h.html#a7722c258e67d21a5c6f367811664cccb">OSPF_IFTYPE_POINTOPOINT</a>;
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a8c30d3c9709c67544befed76b7260267">if_is_loopback</a> (ifp))
    <span class="keywordflow">return</span> <a class="code" href="ospf__interface_8h.html#ad1bc5e92d8d0f8c50fc99ec0ae3f1772">OSPF_IFTYPE_LOOPBACK</a>;
  <span class="keywordflow">else</span>
    <span class="keywordflow">return</span> <a class="code" href="ospf__interface_8h.html#a6c044d3118d79d243c1547176a4c5281">OSPF_IFTYPE_BROADCAST</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6f9b42afb49e1c199598d3ff847e5a78"></a><!-- doxytag: member="ospf_interface.h::ospf_del_if_params" ref="a6f9b42afb49e1c199598d3ff847e5a78" args="(struct ospf_if_params *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_del_if_params </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__if__params.html">ospf_if_params</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00541">541</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (oip-&gt;auth_crypt);
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba1b7d5f092604ac746f743bcd405d0f09">MTYPE_OSPF_IF_PARAMS</a>, oip);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a45a2d1fff01f367d3bfdffe55b3e800b"></a><!-- doxytag: member="ospf_interface.h::ospf_free_if_params" ref="a45a2d1fff01f367d3bfdffe55b3e800b" args="(struct interface *, struct in_addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_free_if_params </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00548">548</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__if__params.html">ospf_if_params</a> *oip;
  <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;

  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.family = AF_INET;
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen = <a class="code" href="prefix_8h.html#ab98d836bf20a06de7a7358ab17832002">IPV4_MAX_PREFIXLEN</a>;
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix = addr;
  rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (<a class="code" href="ospf__interface_8h.html#ae535b760ee0160d3d681c5ab23457815">IF_OIFS_PARAMS</a> (ifp), (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a>*)&amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>);
  <span class="keywordflow">if</span> (!rn || !rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
    <span class="keywordflow">return</span>;

  oip = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
  <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
  
  <span class="keywordflow">if</span> (!<a class="code" href="ospf__interface_8h.html#afe6a1e2fe03d1bd93a1deab41d6eb8e1">OSPF_IF_PARAM_CONFIGURED</a> (oip, output_cost_cmd) &amp;&amp;
      !<a class="code" href="ospf__interface_8h.html#afe6a1e2fe03d1bd93a1deab41d6eb8e1">OSPF_IF_PARAM_CONFIGURED</a> (oip, transmit_delay) &amp;&amp;
      !<a class="code" href="ospf__interface_8h.html#afe6a1e2fe03d1bd93a1deab41d6eb8e1">OSPF_IF_PARAM_CONFIGURED</a> (oip, retransmit_interval) &amp;&amp;
      !<a class="code" href="ospf__interface_8h.html#afe6a1e2fe03d1bd93a1deab41d6eb8e1">OSPF_IF_PARAM_CONFIGURED</a> (oip, passive_interface) &amp;&amp;
      !<a class="code" href="ospf__interface_8h.html#afe6a1e2fe03d1bd93a1deab41d6eb8e1">OSPF_IF_PARAM_CONFIGURED</a> (oip, v_hello) &amp;&amp;
      !<a class="code" href="ospf__interface_8h.html#afe6a1e2fe03d1bd93a1deab41d6eb8e1">OSPF_IF_PARAM_CONFIGURED</a> (oip, fast_hello) &amp;&amp;
      !<a class="code" href="ospf__interface_8h.html#afe6a1e2fe03d1bd93a1deab41d6eb8e1">OSPF_IF_PARAM_CONFIGURED</a> (oip, v_wait) &amp;&amp;
      !<a class="code" href="ospf__interface_8h.html#afe6a1e2fe03d1bd93a1deab41d6eb8e1">OSPF_IF_PARAM_CONFIGURED</a> (oip, priority) &amp;&amp;
      !<a class="code" href="ospf__interface_8h.html#afe6a1e2fe03d1bd93a1deab41d6eb8e1">OSPF_IF_PARAM_CONFIGURED</a> (oip, <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>) &amp;&amp;
      !<a class="code" href="ospf__interface_8h.html#afe6a1e2fe03d1bd93a1deab41d6eb8e1">OSPF_IF_PARAM_CONFIGURED</a> (oip, auth_simple) &amp;&amp;
      !<a class="code" href="ospf__interface_8h.html#afe6a1e2fe03d1bd93a1deab41d6eb8e1">OSPF_IF_PARAM_CONFIGURED</a> (oip, auth_type) &amp;&amp;
      <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (oip-&gt;auth_crypt) == 0)
    {
      <a class="code" href="ospf__interface_8c.html#a80ac3b85c25c26fda311449418aa30a5">ospf_del_if_params</a> (oip);
      rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
      <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a7a2a72fb51539f6d1d7d9391cef1086b"></a><!-- doxytag: member="ospf_interface.h::ospf_full_virtual_nbrs" ref="a7a2a72fb51539f6d1d7d9391cef1086b" args="(struct ospf_area *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_full_virtual_nbrs </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l01155">1155</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
    {
      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;counting fully adjacent virtual neighbors in area %s&quot;</span>,
         inet_ntoa (<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>-&gt;area_id));
      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;there are %d of them&quot;</span>, <a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>-&gt;full_vls);
    }

  <span class="keywordflow">return</span> <a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>-&gt;full_vls;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a371ce23c7417db311ea9074ee36f2de7"></a><!-- doxytag: member="ospf_interface.h::ospf_get_if_params" ref="a371ce23c7417db311ea9074ee36f2de7" args="(struct interface *, struct in_addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__if__params.html">ospf_if_params</a>* ospf_get_if_params </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00605">605</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;

  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.family = AF_INET;
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen = <a class="code" href="prefix_8h.html#ab98d836bf20a06de7a7358ab17832002">IPV4_MAX_PREFIXLEN</a>;
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix = addr;

  rn = <a class="code" href="table_8c.html#ac91fdff1a0b8dc3d60ebaf152caa0f80">route_node_get</a> (<a class="code" href="ospf__interface_8h.html#ae535b760ee0160d3d681c5ab23457815">IF_OIFS_PARAMS</a> (ifp), (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a>*)&amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>);
  
  <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="ospf__interface_8c.html#a93dcbc1b1c40f1eb9fda0a5e48e16e4a">ospf_new_if_params</a> ();
  <span class="keywordflow">else</span>
    <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
  
  <span class="keywordflow">return</span> rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ae8a93af733313910119e34567b167f62"></a><!-- doxytag: member="ospf_interface.h::ospf_if_addr_local" ref="ae8a93af733313910119e34567b167f62" args="(struct in_addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__interface.html">ospf_interface</a>* ospf_if_addr_local </td>
          <td>(</td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a2f3017a7dff9126573df94ba12fc1bb5"></a><!-- doxytag: member="ospf_interface.h::ospf_if_cleanup" ref="a2f3017a7dff9126573df94ba12fc1bb5" args="(struct ospf_interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_if_cleanup </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00259">259</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
  <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr;
  <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma;
  <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa;

  <span class="comment">/* oi-&gt;nbrs and oi-&gt;nbr_nbma should be deleted on InterfaceDown event */</span>
  <span class="comment">/* delete all static neighbors attached to this interface */</span>
  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (oi-&gt;nbr_nbma, node, nnode, nbr_nbma))
    {
      <a class="code" href="ospfd_8h.html#a00739e4ae75021e7e134dc6b292a9f2b">OSPF_POLL_TIMER_OFF</a> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a9aa6dd806f5903f6a4ded3ee4ca26e29">t_poll</a>);

      <span class="keywordflow">if</span> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a>)
    {
      nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a>-&gt;<a class="code" href="structospf__neighbor.html#a68b82493dd68fd0a271db2e168c36617">nbr_nbma</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
      nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }

      nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a501752990df8f83d0efae32fbb9dead9">oi</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
      
      <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (oi-&gt;nbr_nbma, nbr_nbma);
    }

  <span class="comment">/* send Neighbor event KillNbr to all associated neighbors. */</span>
  <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (oi-&gt;nbrs); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
    <span class="keywordflow">if</span> ((nbr = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
      <span class="keywordflow">if</span> (nbr != oi-&gt;nbr_self)
    <a class="code" href="ospf__nsm_8h.html#a9f4ca1bd42134b3f3c90fc8b7b4327b5">OSPF_NSM_EVENT_EXECUTE</a> (nbr, <a class="code" href="ospf__nsm_8h.html#a4b7fc48119800998da7fa068062edb40">NSM_KillNbr</a>);

  <span class="comment">/* Cleanup Link State Acknowlegdment list. */</span>
  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (oi-&gt;ls_ack, node, nnode, lsa))
    <a class="code" href="ospf__lsa_8c.html#a268fc5c6673caf7ee94c0eaaa88455b8">ospf_lsa_unlock</a> (&amp;lsa); <span class="comment">/* oi-&gt;ls_ack */</span>
  <a class="code" href="linklist_8c.html#acd6daa4be8ab3f175376e63c9d9c9500">list_delete_all_node</a> (oi-&gt;ls_ack);

  oi-&gt;crypt_seqnum = 0;
  
  <span class="comment">/* Empty link state update queue */</span>
  <a class="code" href="ospfd_8c.html#a057b2c243b1406f27f8de8ddc5a48ade">ospf_ls_upd_queue_empty</a> (oi);
  
  <span class="comment">/* Reset pseudo neighbor. */</span>
  <a class="code" href="ospf__neighbor_8c.html#ace111af37bf8e7a8c058a55866b4cc08">ospf_nbr_delete</a> (oi-&gt;nbr_self);
  oi-&gt;nbr_self = <a class="code" href="ospf__neighbor_8c.html#a77d8efb26eb88abdd8a3c0de59b1d12a">ospf_nbr_new</a> (oi);
  <a class="code" href="ospf__neighbor_8c.html#a4260a90c3eb41e2af0d60b4d2ecb3d85">ospf_nbr_add_self</a> (oi);
  
  <a class="code" href="ospf__lsa_8c.html#a268fc5c6673caf7ee94c0eaaa88455b8">ospf_lsa_unlock</a> (&amp;oi-&gt;network_lsa_self);
  oi-&gt;network_lsa_self = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (oi-&gt;t_network_lsa_self);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a8c2b6ac010817517e078740e68faa5f5"></a><!-- doxytag: member="ospf_interface.h::ospf_if_down" ref="a8c2b6ac010817517e078740e68faa5f5" args="(struct ospf_interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_if_down </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00800">800</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (oi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> 0;

  <a class="code" href="ospf__ism_8h.html#a49b78d0f7b9cbc604466a345265bd846">OSPF_ISM_EVENT_EXECUTE</a> (oi, <a class="code" href="ospf__ism_8h.html#a97b345bfc32a7b6ad1fd6ff1257a7b90">ISM_InterfaceDown</a>);
  <span class="comment">/* Shutdown packet reception and sending */</span>
  <a class="code" href="ospf__interface_8c.html#aa284a85ae987e8d59126a36ed88a9839">ospf_if_stream_unset</a> (oi);

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a08113e8427e0450d20452442c98d21d8"></a><!-- doxytag: member="ospf_interface.h::ospf_if_exists" ref="a08113e8427e0450d20452442c98d21d8" args="(struct ospf_interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__interface.html">ospf_interface</a>* ospf_if_exists </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00384">384</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{ 
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>;
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;

  <span class="keywordflow">if</span> ((ospf = <a class="code" href="ospfd_8c.html#a8ea0c935a4862c1469bc962e93fee74b">ospf_lookup</a> ()) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a977d3608343fe5db7900ec646880cb6a">oiflist</a>, node, oi))
    <span class="keywordflow">if</span> (oi == oic)
      <span class="keywordflow">return</span> oi;

  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5ee0ba7d67dcf44e58490cfb54774072"></a><!-- doxytag: member="ospf_interface.h::ospf_if_free" ref="a5ee0ba7d67dcf44e58490cfb54774072" args="(struct ospf_interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_if_free </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00311">311</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="ospf__interface_8c.html#ac40adc9d92baa831a8ea1cde67defbb2">ospf_if_down</a> (oi);

  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (oi-&gt;state == <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a>);

<span class="preprocessor">#ifdef HAVE_OPAQUE_LSA</span>
<span class="preprocessor"></span>  <a class="code" href="ospf__opaque_8h.html#a5ea00e524339f12f53f7427f3608c4a6">ospf_opaque_type9_lsa_term</a> (oi);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_OPAQUE_LSA */</span>

  <span class="comment">/* Free Pseudo Neighbour */</span>
  <a class="code" href="ospf__neighbor_8c.html#ace111af37bf8e7a8c058a55866b4cc08">ospf_nbr_delete</a> (oi-&gt;nbr_self);
  
  <a class="code" href="table_8c.html#adc5ff276f1698f5bef7bb74289e3b26e">route_table_finish</a> (oi-&gt;nbrs);
  <a class="code" href="table_8c.html#adc5ff276f1698f5bef7bb74289e3b26e">route_table_finish</a> (oi-&gt;ls_upd_queue);
  
  <span class="comment">/* Free any lists that should be freed */</span>
  <a class="code" href="linklist_8c.html#a15aa9f8cf8424489adf1efd4d075aac6">list_free</a> (oi-&gt;nbr_nbma);
  
  <a class="code" href="linklist_8c.html#a15aa9f8cf8424489adf1efd4d075aac6">list_free</a> (oi-&gt;ls_ack);
  <a class="code" href="linklist_8c.html#a15aa9f8cf8424489adf1efd4d075aac6">list_free</a> (oi-&gt;ls_ack_direct.ls_ack);
  
  <a class="code" href="ospf__interface_8c.html#af97d48615a56dcc2c801d1af73c70987">ospf_delete_from_if</a> (oi-&gt;ifp, oi);

  <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (oi-&gt;ospf-&gt;oiflist, oi);
  <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (oi-&gt;area-&gt;oiflist, oi);

  memset (oi, 0, <span class="keyword">sizeof</span> (*oi));
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba8d516e6360bb388d51329c3ef2759141">MTYPE_OSPF_IF</a>, oi);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9cd50320072d19997fba6493fc90e3ca"></a><!-- doxytag: member="ospf_interface.h::ospf_if_get_output_cost" ref="a9cd50320072d19997fba6493fc90e3ca" args="(struct ospf_interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_if_get_output_cost </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00054">54</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="comment">/* If all else fails, use default OSPF cost */</span>
  u_int32_t cost;
  u_int32_t bw, refbw;

  bw = oi-&gt;ifp-&gt;bandwidth ? oi-&gt;ifp-&gt;bandwidth : <a class="code" href="ospfd_8h.html#a5e84e655faf82da7a2acd6d67c7cecb4">OSPF_DEFAULT_BANDWIDTH</a>;
  refbw = oi-&gt;ospf-&gt;ref_bandwidth;

  <span class="comment">/* A specifed ip ospf cost overrides a calculated one. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="ospf__interface_8h.html#afe6a1e2fe03d1bd93a1deab41d6eb8e1">OSPF_IF_PARAM_CONFIGURED</a> (<a class="code" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a> (oi-&gt;ifp), output_cost_cmd) ||
      <a class="code" href="ospf__interface_8h.html#afe6a1e2fe03d1bd93a1deab41d6eb8e1">OSPF_IF_PARAM_CONFIGURED</a> (oi-&gt;params, output_cost_cmd))
    cost = <a class="code" href="ospf__interface_8h.html#a3082a40385804021e56001ea2bc5bdb1">OSPF_IF_PARAM</a> (oi, output_cost_cmd);
  <span class="comment">/* See if a cost can be calculated from the zebra processes</span>
<span class="comment">     interface bandwidth field. */</span>
  <span class="keywordflow">else</span>
    {
      cost = (u_int32_t) ((<span class="keywordtype">double</span>)refbw / (double)bw + (<span class="keywordtype">double</span>)0.5);
      <span class="keywordflow">if</span> (cost &lt; 1)
    cost = 1;
      <span class="keywordflow">else</span> <span class="keywordflow">if</span> (cost &gt; 65535)
    cost = 65535;
    }

  <span class="keywordflow">return</span> cost;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a42c528838efca4371251ba87bec8ef66"></a><!-- doxytag: member="ospf_interface.h::ospf_if_init" ref="a42c528838efca4371251ba87bec8ef66" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_if_init </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l01238">1238</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="comment">/* Initialize Zebra interface data structure. */</span>
  <a class="code" href="if_8c.html#ac78cad8082fa880e50b2c945f8a3c33d">if_init</a> ();
  <a class="code" href="ospfd_8c.html#a00fd6054739908ab616f0bacdc6d0f64">om</a>-&gt;<a class="code" href="structospf__master.html#a03ff051ede9d089f9ca6cfc6262a5634">iflist</a> = <a class="code" href="if_8c.html#a45ef98e2f5776142773b95ec60bc294f">iflist</a>;
  <a class="code" href="if_8c.html#af0a4090e849fe0dff798e976d8fa2482">if_add_hook</a> (<a class="code" href="if_8h.html#a4185c142d0c9619a6cab25061dfd50f3">IF_NEW_HOOK</a>, <a class="code" href="ospf__interface_8c.html#ad9d89626b50dcfa18d1e920ccdf8b9d7">ospf_if_new_hook</a>);
  <a class="code" href="if_8c.html#af0a4090e849fe0dff798e976d8fa2482">if_add_hook</a> (<a class="code" href="if_8h.html#afa0a12fa62fd3fd8b5fb9a1b917f3afa">IF_DELETE_HOOK</a>, <a class="code" href="ospf__interface_8c.html#aad0efbd0f519ad2fb403b065fe29ae4b">ospf_if_delete_hook</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab9b4ccb999cb7dce09d5c7e3b0af877c"></a><!-- doxytag: member="ospf_interface.h::ospf_if_is_configured" ref="ab9b4ccb999cb7dce09d5c7e3b0af877c" args="(struct ospf *, struct in_addr *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__interface.html">ospf_interface</a>* ospf_if_is_configured </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00348">348</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
  <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> addr;

  addr.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
  addr.prefix = *address;
  addr.prefixlen = <a class="code" href="prefix_8h.html#ab98d836bf20a06de7a7358ab17832002">IPV4_MAX_PREFIXLEN</a>;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (<a class="code" href="structospf.html">ospf</a>-&gt;<a class="code" href="structospf.html#a977d3608343fe5db7900ec646880cb6a">oiflist</a>, node, nnode, oi))
    <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> != <a class="code" href="ospf__interface_8h.html#a45798a2a8b566abd1907f7ae8bc0a2be">OSPF_IFTYPE_VIRTUALLINK</a>)
      {
        <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#a7722c258e67d21a5c6f367811664cccb">OSPF_IFTYPE_POINTOPOINT</a>)
      {
        <span class="comment">/* special leniency: match if addr is anywhere on peer subnet */</span>
        <span class="keywordflow">if</span> (<a class="code" href="prefix_8c.html#a8c5d68665a4b036a361330bee254318e">prefix_match</a>(<a class="code" href="if_8h.html#aab0146ae87d1ab7ec3235003ad8ae4ff">CONNECTED_PREFIX</a>(oi-&gt;<a class="code" href="structospf__interface.html#a3032c9001447ca661e19323b6c59aca6">connected</a>),
                 (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)&amp;addr))
          <span class="keywordflow">return</span> oi;
      }
        <span class="keywordflow">else</span>
      {
        <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (address, &amp;oi-&gt;<a class="code" href="structospf__interface.html#a43493bc2b5d951e3e38ace850332eca1">address</a>-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>))
          <span class="keywordflow">return</span> oi;
      }
      }
  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3f76a9d9d7192a6236dad7975b478c52"></a><!-- doxytag: member="ospf_interface.h::ospf_if_is_enable" ref="a3f76a9d9d7192a6236dad7975b478c52" args="(struct ospf_interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_if_is_enable </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00708">708</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (!<a class="code" href="if_8c.html#a8c30d3c9709c67544befed76b7260267">if_is_loopback</a> (oi-&gt;ifp))
    <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#ade77fc67f30030f539906dad43c239ab">if_is_up</a> (oi-&gt;ifp))
    <span class="keywordflow">return</span> 1;

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a985a4e0e98ae14e35ca05aa2ed75b619"></a><!-- doxytag: member="ospf_interface.h::ospf_if_is_up" ref="a985a4e0e98ae14e35ca05aa2ed75b619" args="(struct ospf_interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_if_is_up </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00378">378</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="if_8c.html#ade77fc67f30030f539906dad43c239ab">if_is_up</a> (oi-&gt;ifp);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6003adc9a1a2e32903d32d08f22e81bf"></a><!-- doxytag: member="ospf_interface.h::ospf_if_lookup_by_local_addr" ref="a6003adc9a1a2e32903d32d08f22e81bf" args="(struct ospf *, struct interface *, struct in_addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__interface.html">ospf_interface</a>* ospf_if_lookup_by_local_addr </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00401">401</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
  
  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="structospf.html">ospf</a>-&gt;<a class="code" href="structospf.html#a977d3608343fe5db7900ec646880cb6a">oiflist</a>, node, oi))
    <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> != <a class="code" href="ospf__interface_8h.html#a45798a2a8b566abd1907f7ae8bc0a2be">OSPF_IFTYPE_VIRTUALLINK</a>)
      {
    <span class="keywordflow">if</span> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a> &amp;&amp; oi-&gt;<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a> != <a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>)
      <span class="keywordflow">continue</span>;
    
    <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;<a class="code" href="structospf__interface.html#a43493bc2b5d951e3e38ace850332eca1">address</a>, &amp;oi-&gt;<a class="code" href="structospf__interface.html#a43493bc2b5d951e3e38ace850332eca1">address</a>-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>))
      <span class="keywordflow">return</span> oi;
      }

  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aba3a6ca5e1fd29fad1fa0ebee1937513"></a><!-- doxytag: member="ospf_interface.h::ospf_if_lookup_by_prefix" ref="aba3a6ca5e1fd29fad1fa0ebee1937513" args="(struct ospf *, struct prefix_ipv4 *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__interface.html">ospf_interface</a>* ospf_if_lookup_by_prefix </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structprefix__ipv4.html">prefix_ipv4</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00421">421</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
  
  <span class="comment">/* Check each Interface. */</span>
  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="structospf.html">ospf</a>-&gt;<a class="code" href="structospf.html#a977d3608343fe5db7900ec646880cb6a">oiflist</a>, node, oi))
    {
      <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> != <a class="code" href="ospf__interface_8h.html#a45798a2a8b566abd1907f7ae8bc0a2be">OSPF_IFTYPE_VIRTUALLINK</a>)
    {
      <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> ptmp;

      <a class="code" href="prefix_8c.html#abaad44d47b408d45484fdd729ab501b2">prefix_copy</a> (&amp;ptmp, <a class="code" href="if_8h.html#aab0146ae87d1ab7ec3235003ad8ae4ff">CONNECTED_PREFIX</a>(oi-&gt;<a class="code" href="structospf__interface.html#a3032c9001447ca661e19323b6c59aca6">connected</a>));
      <a class="code" href="prefix_8c.html#a99265c5e11b1867552cf784a4cac8252">apply_mask</a> (&amp;ptmp);
      <span class="keywordflow">if</span> (<a class="code" href="prefix_8c.html#ac3645297b5669182b5052aa7689712af">prefix_same</a> (&amp;ptmp, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>))
        <span class="keywordflow">return</span> oi;
    }
    }
  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a76b936d68b52c50c3bc293b312049b74"></a><!-- doxytag: member="ospf_interface.h::ospf_if_lookup_recv_if" ref="a76b936d68b52c50c3bc293b312049b74" args="(struct ospf *, struct in_addr, struct interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__interface.html">ospf_interface</a>* ospf_if_lookup_recv_if </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00444">444</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> addr;
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi, *match;

  addr.family = AF_INET;
  addr.prefix = src;
  addr.prefixlen = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;

  match = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (<a class="code" href="ospf__interface_8h.html#ad330e5d357fd1cb85883ed422291a332">IF_OIFS</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>)); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
    {
      oi = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;

      <span class="keywordflow">if</span> (!oi) <span class="comment">/* oi can be NULL for PtP aliases */</span>
    <span class="keywordflow">continue</span>;

      <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#a45798a2a8b566abd1907f7ae8bc0a2be">OSPF_IFTYPE_VIRTUALLINK</a>)
    <span class="keywordflow">continue</span>;

      <span class="keywordflow">if</span> (<a class="code" href="if_8c.html#a8c30d3c9709c67544befed76b7260267">if_is_loopback</a> (oi-&gt;<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>))
        <span class="keywordflow">continue</span>;

      <span class="keywordflow">if</span> (<a class="code" href="prefix_8c.html#a8c5d68665a4b036a361330bee254318e">prefix_match</a> (<a class="code" href="if_8h.html#aab0146ae87d1ab7ec3235003ad8ae4ff">CONNECTED_PREFIX</a>(oi-&gt;<a class="code" href="structospf__interface.html#a3032c9001447ca661e19323b6c59aca6">connected</a>),
                (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;addr))
    {
      <span class="keywordflow">if</span> ( (match == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) || 
           (match-&gt;<a class="code" href="structospf__interface.html#a43493bc2b5d951e3e38ace850332eca1">address</a>-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> &lt; oi-&gt;<a class="code" href="structospf__interface.html#a43493bc2b5d951e3e38ace850332eca1">address</a>-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>)
         )
        match = oi;
    }
    }

  <span class="keywordflow">return</span> match;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aedc8d6d5ab92e7b20d2105b1475d6dfb"></a><!-- doxytag: member="ospf_interface.h::ospf_if_name" ref="aedc8d6d5ab92e7b20d2105b1475d6dfb" args="(struct ospf_interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* ospf_if_name </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a9e69619161066c87716addfb368a0a02"></a><!-- doxytag: member="ospf_interface.h::ospf_if_new" ref="a9e69619161066c87716addfb368a0a02" args="(struct ospf *, struct interface *, struct prefix *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__interface.html">ospf_interface</a>* ospf_if_new </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structprefix.html">prefix</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00203">203</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;

  <span class="keywordflow">if</span> ((oi = <a class="code" href="ospf__interface_8c.html#ae53618182688ad96bfa2fa6813617d57">ospf_if_table_lookup</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>, <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>)) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      oi = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba8d516e6360bb388d51329c3ef2759141">MTYPE_OSPF_IF</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a>));
      memset (oi, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a>));
    }
  <span class="keywordflow">else</span>
    <span class="keywordflow">return</span> oi;
    
  <span class="comment">/* Set zebra interface pointer. */</span>
  oi-&gt;<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a> = <a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>;
  oi-&gt;<a class="code" href="structospf__interface.html#a43493bc2b5d951e3e38ace850332eca1">address</a> = <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
  
  <a class="code" href="ospf__interface_8c.html#ae9af41b7a30c1ae8dc3493dd4e79f115">ospf_add_to_if</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>, oi);
  <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (<a class="code" href="structospf.html">ospf</a>-&gt;<a class="code" href="structospf.html#a977d3608343fe5db7900ec646880cb6a">oiflist</a>, oi);
  
  <span class="comment">/* Clear self-originated network-LSA. */</span>
  oi-&gt;<a class="code" href="structospf__interface.html#a175c090a388cfc7d255012d0d569df6d">network_lsa_self</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <span class="comment">/* Initialize neighbor list. */</span>
  oi-&gt;<a class="code" href="structospf__interface.html#aeb2e2f33698c499957bb55bfc80835d9">nbrs</a> = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();

  <span class="comment">/* Initialize static neighbor list. */</span>
  oi-&gt;<a class="code" href="structospf__interface.html#a5711c57336783fe2d490c7760a4a18ed">nbr_nbma</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();

  <span class="comment">/* Initialize Link State Acknowledgment list. */</span>
  oi-&gt;<a class="code" href="structospf__interface.html#acbc88d1aa86ff7a082fe2c77ae984d1f">ls_ack</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
  oi-&gt;<a class="code" href="structospf__interface.html#ad6998c388e24ac857e8059786f9d79e7">ls_ack_direct</a>.<a class="code" href="structospf__interface.html#acbc88d1aa86ff7a082fe2c77ae984d1f">ls_ack</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();

  <span class="comment">/* Set default values. */</span>
  <a class="code" href="ospf__interface_8c.html#a3636bdf093aec32997e31cab06a9f08b">ospf_if_reset_variables</a> (oi);

  <span class="comment">/* Add pseudo neighbor. */</span>
  oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a> = <a class="code" href="ospf__neighbor_8c.html#a77d8efb26eb88abdd8a3c0de59b1d12a">ospf_nbr_new</a> (oi);

  oi-&gt;<a class="code" href="structospf__interface.html#a7f9d43bd1c8bf02254ac9b17be826615">ls_upd_queue</a> = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();
  oi-&gt;<a class="code" href="structospf__interface.html#a29691bed1e0be212206bff3f4d0fc8dd">t_ls_upd_event</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  oi-&gt;<a class="code" href="structospf__interface.html#a1fef0480466c761ca2921c55748b9d53">t_ls_ack_direct</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  oi-&gt;<a class="code" href="structospf__interface.html#ab9e20f6c614ae47d978eab508967e0fd">crypt_seqnum</a> = time (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);

<span class="preprocessor">#ifdef HAVE_OPAQUE_LSA</span>
<span class="preprocessor"></span>  <a class="code" href="ospf__opaque_8h.html#ac17f05a1ebf3fccea3febad454f66a13">ospf_opaque_type9_lsa_init</a> (oi);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_OPAQUE_LSA */</span>

  oi-&gt;<a class="code" href="structospf__interface.html#a159ae1c542016fc78f68c3e39a1b132e">ospf</a> = <a class="code" href="structospf__interface.html#a159ae1c542016fc78f68c3e39a1b132e">ospf</a>;
  
  <span class="keywordflow">return</span> oi;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa15a786a2f75fa3e48d56d03e0dfcd1a"></a><!-- doxytag: member="ospf_interface.h::ospf_if_new_hook" ref="aa15a786a2f75fa3e48d56d03e0dfcd1a" args="(struct interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_if_new_hook </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00641">641</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> rc = 0;

  <a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>-&gt;<a class="code" href="structinterface.html#a580b288c96c34d57028bfecee2b912c8">info</a> = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba4737fd8a64667c56cf4033b1d60579c6">MTYPE_OSPF_IF_INFO</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structospf__if__info.html">ospf_if_info</a>));
  
  <a class="code" href="ospf__interface_8h.html#ad330e5d357fd1cb85883ed422291a332">IF_OIFS</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>) = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();
  <a class="code" href="ospf__interface_8h.html#ae535b760ee0160d3d681c5ab23457815">IF_OIFS_PARAMS</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>) = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();
  
  <a class="code" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>) = <a class="code" href="ospf__interface_8c.html#a93dcbc1b1c40f1eb9fda0a5e48e16e4a">ospf_new_if_params</a> ();
  
  <a class="code" href="ospf__interface_8h.html#abf54ad522ce6b3724bd2c7959e0a6d6a">SET_IF_PARAM</a> (<a class="code" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>), transmit_delay);
  <a class="code" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>)-&gt;transmit_delay = <a class="code" href="ospfd_8h.html#a001a3e3ba627504b9ea467e28e128c98">OSPF_TRANSMIT_DELAY_DEFAULT</a>;
  
  <a class="code" href="ospf__interface_8h.html#abf54ad522ce6b3724bd2c7959e0a6d6a">SET_IF_PARAM</a> (<a class="code" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>), retransmit_interval);
  <a class="code" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>)-&gt;retransmit_interval = <a class="code" href="ospfd_8h.html#a4f4163a470d237f35753299adc418ba9">OSPF_RETRANSMIT_INTERVAL_DEFAULT</a>;

  <a class="code" href="ospf__interface_8h.html#abf54ad522ce6b3724bd2c7959e0a6d6a">SET_IF_PARAM</a> (<a class="code" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>), priority);
  <a class="code" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>)-&gt;priority = <a class="code" href="ospfd_8h.html#a8357052c03fdd0b83bc58a5ab3dc567a">OSPF_ROUTER_PRIORITY_DEFAULT</a>;

  <a class="code" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>)-&gt;mtu_ignore = <a class="code" href="ospfd_8h.html#a5a487fab47cc5cf1abb55d3c6aa1be3a">OSPF_MTU_IGNORE_DEFAULT</a>;

  <a class="code" href="ospf__interface_8h.html#abf54ad522ce6b3724bd2c7959e0a6d6a">SET_IF_PARAM</a> (<a class="code" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>), v_hello);
  <a class="code" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>)-&gt;v_hello = <a class="code" href="ospfd_8h.html#a5837d8ac5cfe0c0e32c2f8687f1ba294">OSPF_HELLO_INTERVAL_DEFAULT</a>;

  <a class="code" href="ospf__interface_8h.html#abf54ad522ce6b3724bd2c7959e0a6d6a">SET_IF_PARAM</a> (<a class="code" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>), fast_hello);
  <a class="code" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>)-&gt;fast_hello = <a class="code" href="ospfd_8h.html#abfbe9c7bb57a203ed24130216fe5e5a5">OSPF_FAST_HELLO_DEFAULT</a>;

  <a class="code" href="ospf__interface_8h.html#abf54ad522ce6b3724bd2c7959e0a6d6a">SET_IF_PARAM</a> (<a class="code" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>), v_wait);
  <a class="code" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>)-&gt;v_wait = <a class="code" href="ospfd_8h.html#af631a311bfefa954c886f7fa3e82dda0">OSPF_ROUTER_DEAD_INTERVAL_DEFAULT</a>;

  <a class="code" href="ospf__interface_8h.html#abf54ad522ce6b3724bd2c7959e0a6d6a">SET_IF_PARAM</a> (<a class="code" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>), auth_simple);
  memset (<a class="code" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>)-&gt;auth_simple, 0, <a class="code" href="ospf__packet_8h.html#aa86d20cb35e939c8f584f31b0907531a">OSPF_AUTH_SIMPLE_SIZE</a>);
  
  <a class="code" href="ospf__interface_8h.html#abf54ad522ce6b3724bd2c7959e0a6d6a">SET_IF_PARAM</a> (<a class="code" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>), auth_type);
  <a class="code" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>)-&gt;auth_type = <a class="code" href="ospfd_8h.html#a24fc895f9bfaee75505b77666b656931">OSPF_AUTH_NOTSET</a>;
  
<span class="preprocessor">#ifdef HAVE_OPAQUE_LSA</span>
<span class="preprocessor"></span>  rc = <a class="code" href="ospf__opaque_8h.html#a815a52d8eba68484eac70aa5c63e41fa">ospf_opaque_new_if</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_OPAQUE_LSA */</span>
  <span class="keywordflow">return</span> rc;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5bc57e01012f36d01973bd8e95482f07"></a><!-- doxytag: member="ospf_interface.h::ospf_if_recalculate_output_cost" ref="a5bc57e01012f36d01973bd8e95482f07" args="(struct interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_if_recalculate_output_cost </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00082">82</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  u_int32_t newcost;
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  
  <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (<a class="code" href="ospf__interface_8h.html#ad330e5d357fd1cb85883ed422291a332">IF_OIFS</a> (ifp)); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
    {
      <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
      
      <span class="keywordflow">if</span> ( (oi = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">continue</span>;

      newcost = <a class="code" href="ospf__interface_8c.html#a0f57568dea03dc11f50fdb7bc9bf02f4">ospf_if_get_output_cost</a> (oi);

      <span class="comment">/* Is actual output cost changed? */</span>
      <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#a9e3d295cb23b60bbcda26b11553a2d03">output_cost</a> != newcost)
    {
      oi-&gt;<a class="code" href="structospf__interface.html#a9e3d295cb23b60bbcda26b11553a2d03">output_cost</a> = newcost;
      <a class="code" href="ospf__lsa_8c.html#a66ad8a1fd151b43b11d7ec9650a644bf">ospf_router_lsa_timer_add</a> (oi-&gt;<a class="code" href="structospf__interface.html#a7a0df59739f1ffa31ab75ff4b9bbcd95">area</a>);
    }
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6be5642b2dca915859aaeccc741ba790"></a><!-- doxytag: member="ospf_interface.h::ospf_if_reset" ref="a6be5642b2dca915859aaeccc741ba790" args="(struct interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_if_reset </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00108">108</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  
  <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (<a class="code" href="ospf__interface_8h.html#ad330e5d357fd1cb85883ed422291a332">IF_OIFS</a> (ifp)); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
    {
      <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
      
      <span class="keywordflow">if</span> ( (oi = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">continue</span>;

      <a class="code" href="ospf__interface_8c.html#ac40adc9d92baa831a8ea1cde67defbb2">ospf_if_down</a>(oi);
      <a class="code" href="ospf__interface_8c.html#a5a63d5d3af1629d69c380eb09f3e8b7b">ospf_if_up</a>(oi);
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a24d22295eb5fff9b5423b848f10c7af6"></a><!-- doxytag: member="ospf_interface.h::ospf_if_reset_variables" ref="a24d22295eb5fff9b5423b848f10c7af6" args="(struct ospf_interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_if_reset_variables </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00125">125</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="comment">/* Set default values. */</span>
  <span class="comment">/* don&#39;t clear this flag.  oi-&gt;flag = OSPF_IF_DISABLE; */</span>

  <span class="keywordflow">if</span> (oi-&gt;vl_data)
    oi-&gt;type = <a class="code" href="ospf__interface_8h.html#a45798a2a8b566abd1907f7ae8bc0a2be">OSPF_IFTYPE_VIRTUALLINK</a>;
  <span class="keywordflow">else</span> 
  <span class="comment">/* preserve network-type */</span>
  <span class="keywordflow">if</span> (oi-&gt;type != <a class="code" href="ospf__interface_8h.html#abf2c650e64355936c071432d92dd5ecb">OSPF_IFTYPE_NBMA</a>)
    oi-&gt;type = <a class="code" href="ospf__interface_8h.html#a6c044d3118d79d243c1547176a4c5281">OSPF_IFTYPE_BROADCAST</a>;

  oi-&gt;state = <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a>;

  oi-&gt;crypt_seqnum = 0;

  <span class="comment">/* This must be short, (less than RxmtInterval) </span>
<span class="comment">     - RFC 2328 Section 13.5 para 3.  Set to 1 second to avoid Acks being</span>
<span class="comment">       held back for too long - MAG */</span>
  oi-&gt;v_ls_ack = 1;  
}
</pre></div>
</div>
</div>
<a class="anchor" id="af1ec82b8d21a8a9ac241fe6ff5e7e234"></a><!-- doxytag: member="ospf_interface.h::ospf_if_set_multicast" ref="af1ec82b8d21a8a9ac241fe6ff5e7e234" args="(struct ospf_interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_if_set_multicast </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00718">718</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> ((oi-&gt;state &gt; <a class="code" href="ospf__ism_8h.html#ad5bbcdc6e422bf33064865a4aac0a172">ISM_Loopback</a>) &amp;&amp;
      (oi-&gt;type != <a class="code" href="ospf__interface_8h.html#ad1bc5e92d8d0f8c50fc99ec0ae3f1772">OSPF_IFTYPE_LOOPBACK</a>) &amp;&amp;
      (oi-&gt;type != <a class="code" href="ospf__interface_8h.html#a45798a2a8b566abd1907f7ae8bc0a2be">OSPF_IFTYPE_VIRTUALLINK</a>) &amp;&amp;
      (<a class="code" href="ospf__interface_8h.html#abe2e84be7bf9a73954a72fa5fbb728db">OSPF_IF_PASSIVE_STATUS</a>(oi) == <a class="code" href="ospf__interface_8h.html#aa8ac4964fabc3508563c253b72158fad">OSPF_IF_ACTIVE</a>))
    {
      <span class="comment">/* The interface should belong to the OSPF-all-routers group. */</span>
      <span class="keywordflow">if</span> (!<a class="code" href="ospf__interface_8h.html#a3ae9d6ac68815c909cb5bd4f61498072">OI_MEMBER_CHECK</a>(oi, <a class="code" href="ospf__interface_8h.html#a157d5577a5b2f5986037d0d09c7dc77da1a4c3684ddae56a371d771435185fbc9">MEMBER_ALLROUTERS</a>) &amp;&amp;
      (<a class="code" href="ospf__network_8c.html#a474df6c741c2635fd9a6acd599516475">ospf_if_add_allspfrouters</a>(oi-&gt;ospf, oi-&gt;address,
                     oi-&gt;ifp-&gt;ifindex) &gt;= 0))
      <span class="comment">/* Set the flag only if the system call to join succeeded. */</span>
      <a class="code" href="ospf__interface_8h.html#a1ca2c1bc3588bb126c3856c2b70b86bb">OI_MEMBER_JOINED</a>(oi, <a class="code" href="ospf__interface_8h.html#a157d5577a5b2f5986037d0d09c7dc77da1a4c3684ddae56a371d771435185fbc9">MEMBER_ALLROUTERS</a>);
    }
  <span class="keywordflow">else</span>
    {
      <span class="comment">/* The interface should NOT belong to the OSPF-all-routers group. */</span>
      <span class="keywordflow">if</span> (<a class="code" href="ospf__interface_8h.html#a3ae9d6ac68815c909cb5bd4f61498072">OI_MEMBER_CHECK</a>(oi, <a class="code" href="ospf__interface_8h.html#a157d5577a5b2f5986037d0d09c7dc77da1a4c3684ddae56a371d771435185fbc9">MEMBER_ALLROUTERS</a>))
        {
          <span class="comment">/* Only actually drop if this is the last reference */</span>
          <span class="keywordflow">if</span> (<a class="code" href="ospf__interface_8h.html#a036d7ff75d00837601d3092b6eeb58ea">OI_MEMBER_COUNT</a>(oi, <a class="code" href="ospf__interface_8h.html#a157d5577a5b2f5986037d0d09c7dc77da1a4c3684ddae56a371d771435185fbc9">MEMBER_ALLROUTERS</a>) == 1)
        <a class="code" href="ospf__network_8c.html#a621131b5917c5e3de50cd232c1da04ee">ospf_if_drop_allspfrouters</a> (oi-&gt;ospf, oi-&gt;address,
                                    oi-&gt;ifp-&gt;ifindex);
      <span class="comment">/* Unset the flag regardless of whether the system call to leave</span>
<span class="comment">         the group succeeded, since it&#39;s much safer to assume that</span>
<span class="comment">         we are not a member. */</span>
          <a class="code" href="ospf__interface_8h.html#adfe6ede0f8fd3d4a4e42e4b8b4c4a582">OI_MEMBER_LEFT</a>(oi,<a class="code" href="ospf__interface_8h.html#a157d5577a5b2f5986037d0d09c7dc77da1a4c3684ddae56a371d771435185fbc9">MEMBER_ALLROUTERS</a>);
        }
    }

  <span class="keywordflow">if</span> (((oi-&gt;type == <a class="code" href="ospf__interface_8h.html#a6c044d3118d79d243c1547176a4c5281">OSPF_IFTYPE_BROADCAST</a>) ||
       (oi-&gt;type == <a class="code" href="ospf__interface_8h.html#a7722c258e67d21a5c6f367811664cccb">OSPF_IFTYPE_POINTOPOINT</a>)) &amp;&amp;
      ((oi-&gt;state == <a class="code" href="ospf__ism_8h.html#a7f179a571f4f8e112c0b887f39c87f23">ISM_DR</a>) || (oi-&gt;state == <a class="code" href="ospf__ism_8h.html#a3676782add5a8ecdb86981965ef9f37e">ISM_Backup</a>)) &amp;&amp;
      (<a class="code" href="ospf__interface_8h.html#abe2e84be7bf9a73954a72fa5fbb728db">OSPF_IF_PASSIVE_STATUS</a>(oi) == <a class="code" href="ospf__interface_8h.html#aa8ac4964fabc3508563c253b72158fad">OSPF_IF_ACTIVE</a>))
    {
      <span class="comment">/* The interface should belong to the OSPF-designated-routers group. */</span>
      <span class="keywordflow">if</span> (!<a class="code" href="ospf__interface_8h.html#a3ae9d6ac68815c909cb5bd4f61498072">OI_MEMBER_CHECK</a>(oi, <a class="code" href="ospf__interface_8h.html#a157d5577a5b2f5986037d0d09c7dc77da9147ef980218375b970ea2ffe3ca013b">MEMBER_DROUTERS</a>) &amp;&amp;
      (<a class="code" href="ospf__network_8c.html#aaa4e4123232fc0eefbd6a8425697048a">ospf_if_add_alldrouters</a>(oi-&gt;ospf, oi-&gt;address,
                   oi-&gt;ifp-&gt;ifindex) &gt;= 0))
    <span class="comment">/* Set the flag only if the system call to join succeeded. */</span>
    <a class="code" href="ospf__interface_8h.html#a1ca2c1bc3588bb126c3856c2b70b86bb">OI_MEMBER_JOINED</a>(oi, <a class="code" href="ospf__interface_8h.html#a157d5577a5b2f5986037d0d09c7dc77da9147ef980218375b970ea2ffe3ca013b">MEMBER_DROUTERS</a>);
    }
  <span class="keywordflow">else</span>
    {
      <span class="comment">/* The interface should NOT belong to the OSPF-designated-routers group */</span>
      <span class="keywordflow">if</span> (<a class="code" href="ospf__interface_8h.html#a3ae9d6ac68815c909cb5bd4f61498072">OI_MEMBER_CHECK</a>(oi, <a class="code" href="ospf__interface_8h.html#a157d5577a5b2f5986037d0d09c7dc77da9147ef980218375b970ea2ffe3ca013b">MEMBER_DROUTERS</a>))
        {
          <span class="comment">/* drop only if last reference */</span>
          <span class="keywordflow">if</span> (<a class="code" href="ospf__interface_8h.html#a036d7ff75d00837601d3092b6eeb58ea">OI_MEMBER_COUNT</a>(oi, <a class="code" href="ospf__interface_8h.html#a157d5577a5b2f5986037d0d09c7dc77da9147ef980218375b970ea2ffe3ca013b">MEMBER_DROUTERS</a>) == 1)
        <a class="code" href="ospf__network_8c.html#ab2ab03d8d8550be5794b6cd5d98703af">ospf_if_drop_alldrouters</a>(oi-&gt;ospf, oi-&gt;address, oi-&gt;ifp-&gt;ifindex);
          
      <span class="comment">/* Unset the flag regardless of whether the system call to leave</span>
<span class="comment">         the group succeeded, since it&#39;s much safer to assume that</span>
<span class="comment">         we are not a member. */</span>
          <a class="code" href="ospf__interface_8h.html#adfe6ede0f8fd3d4a4e42e4b8b4c4a582">OI_MEMBER_LEFT</a>(oi, <a class="code" href="ospf__interface_8h.html#a157d5577a5b2f5986037d0d09c7dc77da9147ef980218375b970ea2ffe3ca013b">MEMBER_DROUTERS</a>);
        }
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a1f02b0aabef03159360022464beff696"></a><!-- doxytag: member="ospf_interface.h::ospf_if_stream_set" ref="a1f02b0aabef03159360022464beff696" args="(struct ospf_interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_if_stream_set </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00484">484</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="comment">/* set output fifo queue. */</span>
  <span class="keywordflow">if</span> (oi-&gt;obuf == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) 
    oi-&gt;obuf = <a class="code" href="ospf__packet_8c.html#aa36c04f312ec3caaafd634a17bec0d27">ospf_fifo_new</a> ();
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6af760835230e02c6ebdf2ceb155f664"></a><!-- doxytag: member="ospf_interface.h::ospf_if_stream_unset" ref="a6af760835230e02c6ebdf2ceb155f664" args="(struct ospf_interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_if_stream_unset </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00492">492</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a> = oi-&gt;ospf;

  <span class="keywordflow">if</span> (oi-&gt;obuf)
    {
     <a class="code" href="ospf__packet_8c.html#aa6e5e26fc14155201203e96b8303de75">ospf_fifo_free</a> (oi-&gt;obuf);
     oi-&gt;obuf = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

     <span class="keywordflow">if</span> (oi-&gt;on_write_q)
       {
     <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (ospf-&gt;<a class="code" href="structospf.html#ad6a8e34c2e46020e580f22ca21af789b">oi_write_q</a>, oi);
         <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a6076d643ed23a6095c7821ddf52d3f47">list_isempty</a>(ospf-&gt;<a class="code" href="structospf.html#ad6a8e34c2e46020e580f22ca21af789b">oi_write_q</a>))
           <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#a58c6957a24a39205e5a9f7aeab10e42b">t_write</a>);
     oi-&gt;on_write_q = 0;
       }
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a70eea25e7c91f954c384563e97c1be00"></a><!-- doxytag: member="ospf_interface.h::ospf_if_table_lookup" ref="a70eea25e7c91f954c384563e97c1be00" args="(struct interface *, struct prefix *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__interface.html">ospf_interface</a>* ospf_if_table_lookup </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structprefix.html">prefix</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00149">149</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *rninfo = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a> = *<a class="code" href="prefix_8h.html#a6b458105367a186babd858fd008a66be">prefix</a>;
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen = <a class="code" href="prefix_8h.html#ab98d836bf20a06de7a7358ab17832002">IPV4_MAX_PREFIXLEN</a>;
  
  <span class="comment">/* route_node_get implicitely locks */</span>
  <span class="keywordflow">if</span> ((rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (<a class="code" href="ospf__interface_8h.html#ad330e5d357fd1cb85883ed422291a332">IF_OIFS</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>), &amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>)))
    {
      rninfo = (<span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *) rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
      <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
    }
  
  <span class="keywordflow">return</span> rninfo;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5877d19945034e35e52ef208e7fb5196"></a><!-- doxytag: member="ospf_interface.h::ospf_if_up" ref="a5877d19945034e35e52ef208e7fb5196" args="(struct ospf_interface *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_if_up </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00778">778</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (oi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">return</span> 0;

  <span class="keywordflow">if</span> (oi-&gt;type == <a class="code" href="ospf__interface_8h.html#ad1bc5e92d8d0f8c50fc99ec0ae3f1772">OSPF_IFTYPE_LOOPBACK</a>)
    <a class="code" href="ospf__ism_8h.html#a92d8b8f5e3c324698ef17d8ab3ee9781">OSPF_ISM_EVENT_SCHEDULE</a> (oi, <a class="code" href="ospf__ism_8h.html#acf10d53400c12658dc3b67f301724881">ISM_LoopInd</a>);
  <span class="keywordflow">else</span>
    {
      <span class="keyword">struct </span><a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a> = <a class="code" href="ospfd_8c.html#a8ea0c935a4862c1469bc962e93fee74b">ospf_lookup</a> ();
      <span class="keywordflow">if</span> (ospf != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
        <a class="code" href="ospf__network_8c.html#a646b5cb4e4e7e52753082f4fd6ccf553">ospf_adjust_sndbuflen</a> (ospf, oi-&gt;ifp-&gt;mtu);
      <span class="keywordflow">else</span>
        <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;%s: ospf_lookup() returned NULL&quot;</span>, __func__);
      <a class="code" href="ospf__interface_8c.html#af7c3f5f89521d13aa8df5bbd19f708dc">ospf_if_stream_set</a> (oi);
      <a class="code" href="ospf__ism_8h.html#a92d8b8f5e3c324698ef17d8ab3ee9781">OSPF_ISM_EVENT_SCHEDULE</a> (oi, <a class="code" href="ospf__ism_8h.html#a62e1abe21aa53de288bc8b8566c481df">ISM_InterfaceUp</a>);
    }

  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a76ccfb778fc6544fa880e99078dc2308"></a><!-- doxytag: member="ospf_interface.h::ospf_if_update_params" ref="a76ccfb778fc6544fa880e99078dc2308" args="(struct interface *, struct in_addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_if_update_params </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00625">625</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
  
  <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (<a class="code" href="ospf__interface_8h.html#ad330e5d357fd1cb85883ed422291a332">IF_OIFS</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>)); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
    {
      <span class="keywordflow">if</span> ((oi = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    <span class="keywordflow">continue</span>;

      <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;oi-&gt;<a class="code" href="structospf__interface.html#a43493bc2b5d951e3e38ace850332eca1">address</a>-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>, &amp;addr))
    oi-&gt;<a class="code" href="structospf__interface.html#abe19d62cc037130ba97d644980a90e58">params</a> = <a class="code" href="ospf__interface_8c.html#aa68e0e7a3491e05febe18ed5a1e3d8c6">ospf_lookup_if_params</a> (<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>, oi-&gt;<a class="code" href="structospf__interface.html#a43493bc2b5d951e3e38ace850332eca1">address</a>-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>);
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a652c73bd6ca95dea880e2270318f1635"></a><!-- doxytag: member="ospf_interface.h::ospf_lookup_if_params" ref="a652c73bd6ca95dea880e2270318f1635" args="(struct interface *, struct in_addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__if__params.html">ospf_if_params</a>* ospf_lookup_if_params </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structinterface.html">interface</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00584">584</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;

  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.family = AF_INET;
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen = <a class="code" href="prefix_8h.html#ab98d836bf20a06de7a7358ab17832002">IPV4_MAX_PREFIXLEN</a>;
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefix = addr;

  rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (<a class="code" href="ospf__interface_8h.html#ae535b760ee0160d3d681c5ab23457815">IF_OIFS_PARAMS</a> (ifp), (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a>*)&amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>);
  
  <span class="keywordflow">if</span> (rn)
    {
      <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
      <span class="keywordflow">return</span> rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
    }

  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac418ccc162771fa2339f027ff2086b71"></a><!-- doxytag: member="ospf_interface.h::ospf_vl_add" ref="ac418ccc162771fa2339f027ff2086b71" args="(struct ospf *, struct ospf_vl_data *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_vl_add </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__vl__data.html">ospf_vl_data</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00971">971</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (<a class="code" href="structospf.html">ospf</a>-&gt;<a class="code" href="structospf.html#acdf23576e62fa9370cc57b2384acf143">vlinks</a>, vl_data);
<span class="preprocessor">#ifdef HAVE_SNMP</span>
<span class="preprocessor"></span>  <a class="code" href="ospf__snmp_8h.html#aa8d32930417e294b53dccf3fa7fbfaa8">ospf_snmp_vl_add</a> (vl_data);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_SNMP */</span>
}
</pre></div>
</div>
</div>
<a class="anchor" id="a13023c2eb3405638c378f8a6747aa077"></a><!-- doxytag: member="ospf_interface.h::ospf_vl_data_free" ref="a13023c2eb3405638c378f8a6747aa077" args="(struct ospf_vl_data *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_vl_data_free </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__vl__data.html">ospf_vl_data</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00830">830</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba9dbfb66bd07b3619ef05e424e040aa98">MTYPE_OSPF_VL_DATA</a>, vl_data);
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab6849b32e8c56b34e713259bb8c51f14"></a><!-- doxytag: member="ospf_interface.h::ospf_vl_data_new" ref="ab6849b32e8c56b34e713259bb8c51f14" args="(struct ospf_area *, struct in_addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__vl__data.html">ospf_vl_data</a>* ospf_vl_data_new </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00816">816</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__vl__data.html">ospf_vl_data</a> *vl_data;

  vl_data = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba9dbfb66bd07b3619ef05e424e040aa98">MTYPE_OSPF_VL_DATA</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structospf__vl__data.html">ospf_vl_data</a>));

  vl_data-&gt;<a class="code" href="structospf__vl__data.html#a43a75c2c446640e2b6b127c6aa390f75">vl_peer</a>.s_addr = <a class="code" href="structospf__vl__data.html#a43a75c2c446640e2b6b127c6aa390f75">vl_peer</a>.s_addr;
  vl_data-&gt;<a class="code" href="structospf__vl__data.html#a7d89fa86fa918d94b7b4474f93569cd9">vl_area_id</a> = <a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>-&gt;area_id;
  vl_data-&gt;<a class="code" href="structospf__vl__data.html#a19311dc3fcc14ddc73298a44b16f23da">format</a> = <a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>-&gt;format;

  <span class="keywordflow">return</span> vl_data;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a0b97c900d06d684da965b3320b078619"></a><!-- doxytag: member="ospf_interface.h::ospf_vl_delete" ref="a0b97c900d06d684da965b3320b078619" args="(struct ospf *, struct ospf_vl_data *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_vl_delete </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__vl__data.html">ospf_vl_data</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00980">980</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="ospf__interface_8c.html#a0b591bec8466506aecc3089b36f9744c">ospf_vl_shutdown</a> (vl_data);
  <a class="code" href="ospf__interface_8c.html#a55878ad33471c4c2965cc97cd313c988">ospf_vl_if_delete</a> (vl_data);

<span class="preprocessor">#ifdef HAVE_SNMP</span>
<span class="preprocessor"></span>  <a class="code" href="ospf__snmp_8h.html#ab3ed2f8865147118d24a3b4596121a10">ospf_snmp_vl_delete</a> (vl_data);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_SNMP */</span>
  <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (<a class="code" href="structospf.html">ospf</a>-&gt;<a class="code" href="structospf.html#acdf23576e62fa9370cc57b2384acf143">vlinks</a>, vl_data);

  <a class="code" href="ospf__interface_8c.html#aaf492b692845df0821f43b0ea0c1508f">ospf_vl_data_free</a> (vl_data);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a525a41296ae08a4003ac839dec516875"></a><!-- doxytag: member="ospf_interface.h::ospf_vl_lookup" ref="a525a41296ae08a4003ac839dec516875" args="(struct ospf *, struct ospf_area *, struct in_addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__vl__data.html">ospf_vl_data</a>* ospf_vl_lookup </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00924">924</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__vl__data.html">ospf_vl_data</a> *vl_data;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  
  <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
    {
      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s: Looking for %s&quot;</span>, __func__, inet_ntoa (vl_peer));
      <span class="keywordflow">if</span> (<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
        <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s: in area %s&quot;</span>, __func__, inet_ntoa (<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>-&gt;area_id));
    }
  
  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="structospf.html">ospf</a>-&gt;<a class="code" href="structospf.html#acdf23576e62fa9370cc57b2384acf143">vlinks</a>, node, vl_data))
    {
      <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
        <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s: VL %s, peer %s&quot;</span>, __func__,
                    vl_data-&gt;<a class="code" href="structospf__vl__data.html#ab24915d7431d8322eaf5e8ed420d9b20">vl_oi</a>-&gt;<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>,
                    inet_ntoa (vl_data-&gt;<a class="code" href="structospf__vl__data.html#a43a75c2c446640e2b6b127c6aa390f75">vl_peer</a>));
      
      <span class="keywordflow">if</span> (<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a> &amp;&amp; !<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;vl_data-&gt;<a class="code" href="structospf__vl__data.html#a7d89fa86fa918d94b7b4474f93569cd9">vl_area_id</a>, &amp;<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>-&gt;area_id))
        <span class="keywordflow">continue</span>;
      
      <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;vl_data-&gt;<a class="code" href="structospf__vl__data.html#a43a75c2c446640e2b6b127c6aa390f75">vl_peer</a>, &amp;vl_peer))
        <span class="keywordflow">return</span> vl_data;
    }

  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a1f44bf4b5bf1fde1805c0a89eb96954c"></a><!-- doxytag: member="ospf_interface.h::ospf_vl_new" ref="a1f44bf4b5bf1fde1805c0a89eb96954c" args="(struct ospf *, struct ospf_vl_data *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__interface.html">ospf_interface</a>* ospf_vl_new </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__vl__data.html">ospf_vl_data</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l00838">838</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> * voi;
  <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> * vi;
  <span class="keywordtype">char</span>   ifname[<a class="code" href="if_8h.html#ab819b6f1f4d393be3e866af97297b9cb">INTERFACE_NAMSIZ</a> + 1];
  <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
  <span class="keyword">struct </span>in_addr area_id;
  <span class="keyword">struct </span><a class="code" href="structconnected.html">connected</a> *co;
  <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
  
  <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_vl_new(): Start&quot;</span>);
  <span class="keywordflow">if</span> (<a class="code" href="ospf__interface_8c.html#af047c884d1feaae67a6f3a701a42d512">vlink_count</a> == <a class="code" href="ospf__interface_8h.html#a6163032f8217dd26f96e3619907c36a0">OSPF_VL_MAX_COUNT</a>)
    {
      <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_vl_new(): Alarm: &quot;</span>
           <span class="stringliteral">&quot;cannot create more than OSPF_MAX_VL_COUNT virtual links&quot;</span>);
      <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }

  <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_vl_new(): creating pseudo zebra interface&quot;</span>);

  <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a> (ifname, <span class="keyword">sizeof</span>(ifname), <span class="stringliteral">&quot;VLINK%d&quot;</span>, <a class="code" href="ospf__interface_8c.html#af047c884d1feaae67a6f3a701a42d512">vlink_count</a>);
  vi = <a class="code" href="if_8c.html#a5a7398837ed51febeaea57200f118fd5">if_create</a> (ifname, <a class="code" href="str_8c.html#afc92d2231e45d19988c7894aa2a07f0c">strnlen</a>(ifname, <span class="keyword">sizeof</span>(ifname)));
  co = <a class="code" href="if_8c.html#a3f0f3d92c824863a40af915d7f540cc5">connected_new</a> ();
  co-&gt;<a class="code" href="structconnected.html#a93c575385a71507f8c29ec26344d09d3">ifp</a> = vi;
  <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (vi-&gt;<a class="code" href="structinterface.html#ac7c47b5cc1df81e51bf1ecea97b4d4b3">connected</a>, co);

  p = <a class="code" href="prefix_8c.html#af674876d8d874e88225f559322d797ac">prefix_ipv4_new</a> ();
  p-&gt;<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
  p-&gt;prefix.s_addr = 0;
  p-&gt;<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = 0;
 
  co-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a> = (<span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> *)p;
  
  voi = <a class="code" href="ospf__interface_8c.html#af4a1a23e75bb79a0feaa1c26b0b989e5">ospf_if_new</a> (<a class="code" href="structospf.html">ospf</a>, vi, co-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>);
  <span class="keywordflow">if</span> (voi == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_vl_new(): Alarm: OSPF int structure is not created&quot;</span>);
      <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }
  voi-&gt;<a class="code" href="structospf__interface.html#a3032c9001447ca661e19323b6c59aca6">connected</a> = co;
  voi-&gt;<a class="code" href="structospf__interface.html#a78d2dfea28a4b72d89b194cf6a94cae1">vl_data</a> = vl_data;
  voi-&gt;<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>-&gt;<a class="code" href="structinterface.html#aadd24df2d261a3bfcbdfe4797e639afb">mtu</a> = <a class="code" href="ospf__interface_8h.html#adaa609854f279874b7bfaa53ed6a1a1c">OSPF_VL_MTU</a>;
  voi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> = <a class="code" href="ospf__interface_8h.html#a45798a2a8b566abd1907f7ae8bc0a2be">OSPF_IFTYPE_VIRTUALLINK</a>;

  <a class="code" href="ospf__interface_8c.html#af047c884d1feaae67a6f3a701a42d512">vlink_count</a>++;
  <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_vl_new(): Created name: %s&quot;</span>, ifname);
  <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_vl_new(): set if-&gt;name to %s&quot;</span>, vi-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);

  area_id.s_addr = 0;
  area = <a class="code" href="ospfd_8c.html#aa215da7694f647944fed0fad86df18c8">ospf_area_get</a> (<a class="code" href="structospf.html">ospf</a>, area_id, <a class="code" href="ospfd_8h.html#a4693ac54d402184ececda946d167d1ef">OSPF_AREA_ID_FORMAT_ADDRESS</a>);
  voi-&gt;<a class="code" href="structospf__interface.html#a7a0df59739f1ffa31ab75ff4b9bbcd95">area</a> = <a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;

  <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_vl_new(): set associated area to the backbone&quot;</span>);

  <a class="code" href="ospf__neighbor_8c.html#a4260a90c3eb41e2af0d60b4d2ecb3d85">ospf_nbr_add_self</a> (voi);
  <a class="code" href="ospfd_8c.html#ab5f82e15e585aa9de10f7f426e445872">ospf_area_add_if</a> (voi-&gt;<a class="code" href="structospf__interface.html#a7a0df59739f1ffa31ab75ff4b9bbcd95">area</a>, voi);

  <a class="code" href="ospf__interface_8c.html#af7c3f5f89521d13aa8df5bbd19f708dc">ospf_if_stream_set</a> (voi);

  <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_vl_new(): Stop&quot;</span>);
  <span class="keywordflow">return</span> voi;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac91ba56900382bf7a65b3db570b6cca4"></a><!-- doxytag: member="ospf_interface.h::ospf_vl_shut_unapproved" ref="ac91ba56900382bf7a65b3db570b6cca4" args="(struct ospf *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_vl_shut_unapproved </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l01144">1144</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
  <span class="keyword">struct </span><a class="code" href="structospf__vl__data.html">ospf_vl_data</a> *vl_data;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (<a class="code" href="structospf.html">ospf</a>-&gt;<a class="code" href="structospf.html#acdf23576e62fa9370cc57b2384acf143">vlinks</a>, node, nnode, vl_data))
    <span class="keywordflow">if</span> (!<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (vl_data-&gt;<a class="code" href="structospf__vl__data.html#ade67771cc67731675f2859e449ffaf12">flags</a>, <a class="code" href="ospf__interface_8h.html#aa89efc5812cb48020241fb638d90bc48">OSPF_VL_FLAG_APPROVED</a>))
      <a class="code" href="ospf__interface_8c.html#a0b591bec8466506aecc3089b36f9744c">ospf_vl_shutdown</a> (vl_data);
}
</pre></div>
</div>
</div>
<a class="anchor" id="abdb8e7e0e60c5b737a5fbe55a7a063d1"></a><!-- doxytag: member="ospf_interface.h::ospf_vl_unapprove" ref="abdb8e7e0e60c5b737a5fbe55a7a063d1" args="(struct ospf *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_vl_unapprove </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l01134">1134</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structospf__vl__data.html">ospf_vl_data</a> *vl_data;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="structospf.html">ospf</a>-&gt;<a class="code" href="structospf.html#acdf23576e62fa9370cc57b2384acf143">vlinks</a>, node, vl_data))
    <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (vl_data-&gt;<a class="code" href="structospf__vl__data.html#ade67771cc67731675f2859e449ffaf12">flags</a>, <a class="code" href="ospf__interface_8h.html#aa89efc5812cb48020241fb638d90bc48">OSPF_VL_FLAG_APPROVED</a>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="aedae860c8d89434636286de17bcfb387"></a><!-- doxytag: member="ospf_interface.h::ospf_vl_up_check" ref="aedae860c8d89434636286de17bcfb387" args="(struct ospf_area *, struct in_addr, struct vertex *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_vl_up_check </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structvertex.html">vertex</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l01076">1076</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a> = <a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>-&gt;ospf;
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structospf__vl__data.html">ospf_vl_data</a> *vl_data;
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;

  <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
    {
      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_vl_up_check(): Start&quot;</span>);
      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_vl_up_check(): Router ID is %s&quot;</span>, inet_ntoa (rid));
      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_vl_up_check(): Area is %s&quot;</span>, inet_ntoa (<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>-&gt;area_id));
    }

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#acdf23576e62fa9370cc57b2384acf143">vlinks</a>, node, vl_data))
    {
      <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
    {
      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s: considering VL, %s in area %s&quot;</span>, __func__,
             vl_data-&gt;<a class="code" href="structospf__vl__data.html#ab24915d7431d8322eaf5e8ed420d9b20">vl_oi</a>-&gt;<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>,
             inet_ntoa (vl_data-&gt;<a class="code" href="structospf__vl__data.html#a7d89fa86fa918d94b7b4474f93569cd9">vl_area_id</a>));
      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s: peer ID: %s&quot;</span>, __func__,
             inet_ntoa (vl_data-&gt;<a class="code" href="structospf__vl__data.html#a43a75c2c446640e2b6b127c6aa390f75">vl_peer</a>));
    }

      <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;vl_data-&gt;<a class="code" href="structospf__vl__data.html#a43a75c2c446640e2b6b127c6aa390f75">vl_peer</a>, &amp;rid) &amp;&amp;
          <a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;vl_data-&gt;<a class="code" href="structospf__vl__data.html#a7d89fa86fa918d94b7b4474f93569cd9">vl_area_id</a>, &amp;<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>-&gt;area_id))
        {
          oi = vl_data-&gt;<a class="code" href="structospf__vl__data.html#ab24915d7431d8322eaf5e8ed420d9b20">vl_oi</a>;
          <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (vl_data-&gt;<a class="code" href="structospf__vl__data.html#ade67771cc67731675f2859e449ffaf12">flags</a>, <a class="code" href="ospf__interface_8h.html#aa89efc5812cb48020241fb638d90bc48">OSPF_VL_FLAG_APPROVED</a>);

      <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
        <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_vl_up_check(): this VL matched&quot;</span>);

          <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#a26605b9cc792cdd3e26c0481d24f0f63">state</a> == <a class="code" href="ospf__ism_8h.html#ad66e19ab772d9038c5f31fad74cfa113">ISM_Down</a>)
            {
          <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
        <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_vl_up_check(): VL is down, waking it up&quot;</span>);
              <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (oi-&gt;<a class="code" href="structospf__interface.html#a42f951186ccd68e63207f943cb894228">ifp</a>-&gt;<a class="code" href="structinterface.html#a09ed96b900f31d769a76a32b67217c8f">flags</a>, IFF_UP);
              <a class="code" href="ospf__ism_8h.html#a49b78d0f7b9cbc604466a345265bd846">OSPF_ISM_EVENT_EXECUTE</a>(oi,<a class="code" href="ospf__ism_8h.html#a62e1abe21aa53de288bc8b8566c481df">ISM_InterfaceUp</a>);
            }

         <span class="keywordflow">if</span> (<a class="code" href="ospf__interface_8c.html#a995bc245cdccadc6a217fb7d3dafef6f">ospf_vl_set_params</a> (vl_data, v))
           {
             <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (ism, ISM_EVENTS))
               <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_vl_up_check: VL cost change,&quot;</span>
                          <span class="stringliteral">&quot; scheduling router lsa refresh&quot;</span>);
             <span class="keywordflow">if</span>(ospf-&gt;<a class="code" href="structospf.html#af16c64964298aad9859d5b04503228bd">backbone</a>)
               <a class="code" href="ospf__lsa_8c.html#a66ad8a1fd151b43b11d7ec9650a644bf">ospf_router_lsa_timer_add</a> (ospf-&gt;<a class="code" href="structospf.html#af16c64964298aad9859d5b04503228bd">backbone</a>);
             <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (ism, ISM_EVENTS))
               <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ospf_vl_up_check: VL cost change, no backbone!&quot;</span>);
           }
        }
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a19760bf749d66692c61a10356398ca90"></a><!-- doxytag: member="ospf_interface.h::ospf_vls_in_area" ref="a19760bf749d66692c61a10356398ca90" args="(struct ospf_area *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_vls_in_area </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__area.html">ospf_area</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__interface_8c_source.html#l01168">1168</a> of file <a class="el" href="ospf__interface_8c_source.html">ospf_interface.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structospf__vl__data.html">ospf_vl_data</a> *vl_data;
  <span class="keywordtype">int</span> c = 0;

  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>-&gt;ospf-&gt;vlinks, node, vl_data))
    <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;vl_data-&gt;<a class="code" href="structospf__vl__data.html#a7d89fa86fa918d94b7b4474f93569cd9">vl_area_id</a>, &amp;<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>-&gt;area_id))
      c++;

  <span class="keywordflow">return</span> c;
}
</pre></div>
</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="ospf__interface_8h.html">ospf_interface.h</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:28 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
