<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: ospfd/ospf_neighbor.c File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('ospf__neighbor_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">ospfd/ospf_neighbor.c File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="zebra_8h_source.html">zebra.h</a>&gt;</code><br/>
<code>#include &quot;<a class="el" href="linklist_8h_source.html">linklist.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="prefix_8h_source.html">prefix.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="memory_8h_source.html">memory.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="command_8h_source.html">command.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="thread_8h_source.html">thread.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="stream_8h_source.html">stream.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="table_8h_source.html">table.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="log_8h_source.html">log.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospfd_8h_source.html">ospfd/ospfd.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__interface_8h_source.html">ospfd/ospf_interface.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__asbr_8h_source.html">ospfd/ospf_asbr.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__lsa_8h_source.html">ospfd/ospf_lsa.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__lsdb_8h_source.html">ospfd/ospf_lsdb.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__neighbor_8h_source.html">ospfd/ospf_neighbor.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__nsm_8h_source.html">ospfd/ospf_nsm.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__packet_8h_source.html">ospfd/ospf_packet.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__network_8h_source.html">ospfd/ospf_network.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__flood_8h_source.html">ospfd/ospf_flood.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ospf__dump_8h_source.html">ospfd/ospf_dump.h</a>&quot;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for ospf_neighbor.c:</div>
<div class="dyncontent">
<div class="center"><img src="ospf__neighbor_8c__incl.png" border="0" usemap="#ospfd_2ospf__neighbor_8c" alt=""/></div>
<map name="ospfd_2ospf__neighbor_8c" id="ospfd_2ospf__neighbor_8c">
<area shape="rect" id="node3" href="zebra_8h.html" title="zebra.h" alt="" coords="1408,155,1475,181"/><area shape="rect" id="node61" href="linklist_8h.html" title="linklist.h" alt="" coords="1985,80,2055,107"/><area shape="rect" id="node63" href="prefix_8h.html" title="prefix.h" alt="" coords="2846,229,2913,256"/><area shape="rect" id="node67" href="memory_8h.html" title="memory.h" alt="" coords="2211,80,2293,107"/><area shape="rect" id="node69" href="command_8h.html" title="command.h" alt="" coords="2318,80,2409,107"/><area shape="rect" id="node71" href="thread_8h.html" title="thread.h" alt="" coords="2435,80,2507,107"/><area shape="rect" id="node73" href="stream_8h.html" title="stream.h" alt="" coords="2768,155,2843,181"/><area shape="rect" id="node76" href="table_8h.html" title="table.h" alt="" coords="2581,80,2645,107"/><area shape="rect" id="node78" href="log_8h.html" title="log.h" alt="" coords="2518,155,2569,181"/><area shape="rect" id="node81" href="ospfd_8h.html" title="ospfd/ospfd.h" alt="" coords="2080,80,2187,107"/><area shape="rect" id="node85" href="ospf__interface_8h.html" title="ospfd/ospf_interface.h" alt="" coords="3257,80,3415,107"/><area shape="rect" id="node87" href="ospf__packet_8h.html" title="ospfd/ospf_packet.h" alt="" coords="3263,155,3409,181"/><area shape="rect" id="node89" href="ospf__asbr_8h.html" title="ospfd/ospf_asbr.h" alt="" coords="3101,80,3232,107"/><area shape="rect" id="node91" href="ospf__lsa_8h.html" title="ospfd/ospf_lsa.h" alt="" coords="2669,80,2792,107"/><area shape="rect" id="node94" href="ospf__lsdb_8h.html" title="ospfd/ospf_lsdb.h" alt="" coords="3440,80,3571,107"/><area shape="rect" id="node96" href="ospf__neighbor_8h.html" title="ospfd/ospf_neighbor.h" alt="" coords="2918,80,3076,107"/><area shape="rect" id="node99" href="ospf__nsm_8h.html" title="ospfd/ospf_nsm.h" alt="" coords="3645,80,3776,107"/><area shape="rect" id="node102" href="ospf__network_8h.html" title="ospfd/ospf_network.h" alt="" coords="3800,80,3955,107"/><area shape="rect" id="node104" href="ospf__flood_8h.html" title="ospfd/ospf_flood.h" alt="" coords="3979,80,4115,107"/><area shape="rect" id="node106" href="ospf__dump_8h.html" title="ospfd/ospf_dump.h" alt="" coords="4139,80,4277,107"/><area shape="rect" id="node57" href="zassert_8h.html" title="zassert.h" alt="" coords="2389,229,2467,256"/><area shape="rect" id="node59" href="str_8h.html" title="str.h" alt="" coords="2491,229,2540,256"/><area shape="rect" id="node65" href="sockunion_8h.html" title="sockunion.h" alt="" coords="2833,304,2927,331"/></map>
</div>
</div>
<p><a href="ospf__neighbor_8c_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__neighbor_8c.html#af8485e20652f26e18ccb9725cc90f587">ospf_nbr_key</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi, struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *nbr, struct <a class="el" href="structprefix.html">prefix</a> *<a class="el" href="structkey.html">key</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__neighbor_8c.html#a77d8efb26eb88abdd8a3c0de59b1d12a">ospf_nbr_new</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__neighbor_8c.html#a6cacaea2728fb6f64caff42aa4d27df7">ospf_nbr_free</a> (struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *nbr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__neighbor_8c.html#ace111af37bf8e7a8c058a55866b4cc08">ospf_nbr_delete</a> (struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *nbr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__neighbor_8c.html#a50d3aa49922b856d63a19ff7b860d024">ospf_nbr_bidirectional</a> (struct in_addr *router_id, struct in_addr *neighbors, int size)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__neighbor_8c.html#a4260a90c3eb41e2af0d60b4d2ecb3d85">ospf_nbr_add_self</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__neighbor_8c.html#a0988186d79c97a6ef8211bdf208e0113">ospf_nbr_count</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi, int state)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__neighbor_8c.html#a9530eac0c0816f41b9c9306a90db3b98">ospf_nbr_lookup_by_addr</a> (struct <a class="el" href="structroute__table.html">route_table</a> *nbrs, struct in_addr *addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__neighbor_8c.html#a69530f1315a5a3c0c58662ef6ad4efa9">ospf_nbr_lookup_by_routerid</a> (struct <a class="el" href="structroute__table.html">route_table</a> *nbrs, struct in_addr *<a class="el" href="prefix_8h.html#a68c0ada54c6414ef00bca919465286ac">id</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__neighbor_8c.html#ad8a06eee7456a7316b7814eb0ef6f1c1">ospf_renegotiate_optional_capabilities</a> (struct <a class="el" href="structospf.html">ospf</a> *top)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__neighbor_8c.html#aaae24ad2ba48314e7007f27c61ef98e0">ospf_nbr_lookup</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi, struct <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> *iph, struct <a class="el" href="structospf__header.html">ospf_header</a> *ospfh)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__neighbor_8c.html#a5433e7b2194afa0cff866e8e0a46583a">ospf_nbr_add</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi, struct <a class="el" href="structospf__header.html">ospf_header</a> *ospfh, struct <a class="el" href="structprefix.html">prefix</a> *<a class="el" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ospf__neighbor_8c.html#aec99b1ea173b506a3ef64c78e6dfcec8">ospf_nbr_get</a> (struct <a class="el" href="structospf__interface.html">ospf_interface</a> *oi, struct <a class="el" href="structospf__header.html">ospf_header</a> *ospfh, struct <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> *iph, struct <a class="el" href="structprefix.html">prefix</a> *<a class="el" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>)</td></tr>
</table>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a5433e7b2194afa0cff866e8e0a46583a"></a><!-- doxytag: member="ospf_neighbor.c::ospf_nbr_add" ref="a5433e7b2194afa0cff866e8e0a46583a" args="(struct ospf_interface *oi, struct ospf_header *ospfh, struct prefix *p)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a>* ospf_nbr_add </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__header.html">ospf_header</a> *&#160;</td>
          <td class="paramname"><em>ospfh</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structprefix.html">prefix</a> *&#160;</td>
          <td class="paramname"><em>p</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static, read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__neighbor_8c_source.html#l00385">385</a> of file <a class="el" href="ospf__neighbor_8c_source.html">ospf_neighbor.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr;
  
  nbr = <a class="code" href="ospf__neighbor_8c.html#a77d8efb26eb88abdd8a3c0de59b1d12a">ospf_nbr_new</a> (oi);
  nbr-&gt;<a class="code" href="structospf__neighbor.html#a07061a68f4e15effd12479e1047120c7">state</a> = <a class="code" href="ospf__nsm_8h.html#a4bdf4e7631050dcf28cbe7959f0675ce">NSM_Down</a>;
  nbr-&gt;<a class="code" href="structospf__neighbor.html#a959c002cab5b6328120fcac7ba25fbee">src</a> = p-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>;
  <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;nbr-&gt;<a class="code" href="structospf__neighbor.html#a4be3cd4b416bc267a4e3b35b9e2b1102">address</a>, p, sizeof (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a>));

  nbr-&gt;<a class="code" href="structospf__neighbor.html#a68b82493dd68fd0a271db2e168c36617">nbr_nbma</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#abf2c650e64355936c071432d92dd5ecb">OSPF_IFTYPE_NBMA</a>)
    {
      <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma;
      <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;

      <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (oi-&gt;<a class="code" href="structospf__interface.html#a5711c57336783fe2d490c7760a4a18ed">nbr_nbma</a>, node, nbr_nbma))
        {
          <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a>(&amp;nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a5fc2a7f849288ef91acc9c055a934fe8">addr</a>, &amp;nbr-&gt;<a class="code" href="structospf__neighbor.html#a959c002cab5b6328120fcac7ba25fbee">src</a>))
            {
              nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a> = nbr;
              nbr-&gt;<a class="code" href="structospf__neighbor.html#a68b82493dd68fd0a271db2e168c36617">nbr_nbma</a> = nbr_nbma;

              <span class="keywordflow">if</span> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a9aa6dd806f5903f6a4ded3ee4ca26e29">t_poll</a>)
                <a class="code" href="ospfd_8h.html#a00739e4ae75021e7e134dc6b292a9f2b">OSPF_POLL_TIMER_OFF</a> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a9aa6dd806f5903f6a4ded3ee4ca26e29">t_poll</a>);

              nbr-&gt;<a class="code" href="structospf__neighbor.html#a177ea967e71e4f14cc26a019e06ea533">state_change</a> = nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a4edd94869d8b614378f091617fdd40ad">state_change</a> + 1;
            }
        }
    }
      
  <span class="comment">/* New nbr, save the crypto sequence number if necessary */</span>
  <span class="keywordflow">if</span> (ntohs (ospfh-&gt;<a class="code" href="structospf__header.html#afcb4ec794bf78236eff9f33cbbfba8b0">auth_type</a>) == <a class="code" href="ospfd_8h.html#ae45bd56b3cc9f0635ed7fa758d4ea38b">OSPF_AUTH_CRYPTOGRAPHIC</a>)
    nbr-&gt;<a class="code" href="structospf__neighbor.html#a20275ce82383ee306fddb23a4d6684ab">crypt_seqnum</a> = ospfh-&gt;<a class="code" href="structospf__header.html#aeee7498b27f3289d550db591580dbc27">u</a>.<a class="code" href="structospf__header.html#a2b08c4847d7be3cf4bd8ea0a02e1163a">crypt</a>.crypt_seqnum;
  
  <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;NSM[%s:%s]: start&quot;</span>, <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (nbr-&gt;<a class="code" href="structospf__neighbor.html#a24eabbd825aa53aba5343ae2d5ea7233">oi</a>),
               inet_ntoa (nbr-&gt;<a class="code" href="structospf__neighbor.html#a2257238c9040a76e9de9a78cf95bae0d">router_id</a>));
  
  <span class="keywordflow">return</span> nbr;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4260a90c3eb41e2af0d60b4d2ecb3d85"></a><!-- doxytag: member="ospf_neighbor.c::ospf_nbr_add_self" ref="a4260a90c3eb41e2af0d60b4d2ecb3d85" args="(struct ospf_interface *oi)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_nbr_add_self </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__neighbor_8c_source.html#l00207">207</a> of file <a class="el" href="ospf__neighbor_8c_source.html">ospf_neighbor.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;

  <span class="comment">/* Initial state */</span>
  oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#a4be3cd4b416bc267a4e3b35b9e2b1102">address</a> = *oi-&gt;<a class="code" href="structospf__interface.html#a43493bc2b5d951e3e38ace850332eca1">address</a>;
  oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#ade51baa719592185df1db62d13e9cf63">priority</a> = <a class="code" href="ospf__interface_8h.html#a3082a40385804021e56001ea2bc5bdb1">OSPF_IF_PARAM</a> (oi, priority);
  oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#a2257238c9040a76e9de9a78cf95bae0d">router_id</a> = oi-&gt;<a class="code" href="structospf__interface.html#a159ae1c542016fc78f68c3e39a1b132e">ospf</a>-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>;
  oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#a959c002cab5b6328120fcac7ba25fbee">src</a> = oi-&gt;<a class="code" href="structospf__interface.html#a43493bc2b5d951e3e38ace850332eca1">address</a>-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>;
  oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#a07061a68f4e15effd12479e1047120c7">state</a> = <a class="code" href="ospf__nsm_8h.html#a8a9d14bfc7d840e04eff13df3337fa24">NSM_TwoWay</a>;
  
  <span class="keywordflow">switch</span> (oi-&gt;<a class="code" href="structospf__interface.html#a7a0df59739f1ffa31ab75ff4b9bbcd95">area</a>-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a>)
    {
      <span class="keywordflow">case</span> <a class="code" href="ospfd_8h.html#a43f84c8e8584ccc8b82990d251abec4d">OSPF_AREA_DEFAULT</a>:
        <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#aefbbf7455ee0d73ae283d9ab8edab4f6">options</a>, <a class="code" href="ospfd_8h.html#a0cb690faccaae5c2692a2f2c1b273720">OSPF_OPTION_E</a>);
        <span class="keywordflow">break</span>;
      <span class="keywordflow">case</span> <a class="code" href="ospfd_8h.html#a34e738eee2ef9dfcea3d7f31d36de08c">OSPF_AREA_STUB</a>:
        <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#aefbbf7455ee0d73ae283d9ab8edab4f6">options</a>, <a class="code" href="ospfd_8h.html#a0cb690faccaae5c2692a2f2c1b273720">OSPF_OPTION_E</a>);
        <span class="keywordflow">break</span>;
      <span class="keywordflow">case</span> <a class="code" href="ospfd_8h.html#a871478d6ecced0907ee1f67c5dbacf99">OSPF_AREA_NSSA</a>:
        <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#aefbbf7455ee0d73ae283d9ab8edab4f6">options</a>, <a class="code" href="ospfd_8h.html#a0cb690faccaae5c2692a2f2c1b273720">OSPF_OPTION_E</a>);
        <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#aefbbf7455ee0d73ae283d9ab8edab4f6">options</a>, <a class="code" href="ospfd_8h.html#af9739335948debe99dd1e5e62d87c00c">OSPF_OPTION_NP</a>);
        <span class="keywordflow">break</span>;
    }
  
  <span class="comment">/* Add nbr_self to nbrs table */</span>
  <a class="code" href="ospf__neighbor_8c.html#af8485e20652f26e18ccb9725cc90f587">ospf_nbr_key</a> (oi, oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>, &amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>);
  
  rn = <a class="code" href="table_8c.html#ac91fdff1a0b8dc3d60ebaf152caa0f80">route_node_get</a> (oi-&gt;<a class="code" href="structospf__interface.html#aeb2e2f33698c499957bb55bfc80835d9">nbrs</a>, &amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>);
  <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
    {
      <span class="comment">/* There is already pseudo neighbor. */</span>
      <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a> == rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>);
      <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
    }
  <span class="keywordflow">else</span>
    rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a50d3aa49922b856d63a19ff7b860d024"></a><!-- doxytag: member="ospf_neighbor.c::ospf_nbr_bidirectional" ref="a50d3aa49922b856d63a19ff7b860d024" args="(struct in_addr *router_id, struct in_addr *neighbors, int size)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_nbr_bidirectional </td>
          <td>(</td>
          <td class="paramtype">struct in_addr *&#160;</td>
          <td class="paramname"><em>router_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr *&#160;</td>
          <td class="paramname"><em>neighbors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__neighbor_8c_source.html#l00190">190</a> of file <a class="el" href="ospf__neighbor_8c_source.html">ospf_neighbor.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
  <span class="keywordtype">int</span> max;

  max = size / <span class="keyword">sizeof</span> (<span class="keyword">struct </span>in_addr);

  <span class="keywordflow">for</span> (i = 0; i &lt; max; i ++)
    <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (router_id, &amp;neighbors[i]))
      <span class="keywordflow">return</span> 1;

  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a0988186d79c97a6ef8211bdf208e0113"></a><!-- doxytag: member="ospf_neighbor.c::ospf_nbr_count" ref="a0988186d79c97a6ef8211bdf208e0113" args="(struct ospf_interface *oi, int state)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ospf_nbr_count </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>state</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__neighbor_8c_source.html#l00250">250</a> of file <a class="el" href="ospf__neighbor_8c_source.html">ospf_neighbor.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr;
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a66e3fedede6aa372e5196e55e5e8d5c1">count</a> = 0;

  <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (oi-&gt;<a class="code" href="structospf__interface.html#aeb2e2f33698c499957bb55bfc80835d9">nbrs</a>); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
    <span class="keywordflow">if</span> ((nbr = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>))
      <span class="keywordflow">if</span> (!<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;nbr-&gt;<a class="code" href="structospf__neighbor.html#a2257238c9040a76e9de9a78cf95bae0d">router_id</a>, &amp;oi-&gt;<a class="code" href="structospf__interface.html#a159ae1c542016fc78f68c3e39a1b132e">ospf</a>-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>))
    <span class="keywordflow">if</span> (state == 0 || nbr-&gt;<a class="code" href="structospf__neighbor.html#a07061a68f4e15effd12479e1047120c7">state</a> == state)
      count++;

  <span class="keywordflow">return</span> <a class="code" href="spgrid_8c.html#a66e3fedede6aa372e5196e55e5e8d5c1">count</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ace111af37bf8e7a8c058a55866b4cc08"></a><!-- doxytag: member="ospf_neighbor.c::ospf_nbr_delete" ref="ace111af37bf8e7a8c058a55866b4cc08" args="(struct ospf_neighbor *nbr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_nbr_delete </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *&#160;</td>
          <td class="paramname"><em>nbr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__neighbor_8c_source.html#l00149">149</a> of file <a class="el" href="ospf__neighbor_8c_source.html">ospf_neighbor.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;

  oi = nbr-&gt;<a class="code" href="structospf__neighbor.html#a24eabbd825aa53aba5343ae2d5ea7233">oi</a>;
  
  <span class="comment">/* get appropriate prefix &#39;key&#39; */</span>
  <a class="code" href="ospf__neighbor_8c.html#af8485e20652f26e18ccb9725cc90f587">ospf_nbr_key</a> (oi, nbr, &amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>);

  rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (oi-&gt;nbrs, &amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>);
  <span class="keywordflow">if</span> (rn)
    {
      <span class="comment">/* If lookup for a NBR succeeds, the leaf route_node could</span>
<span class="comment">       * only exist because there is (or was) a nbr there.</span>
<span class="comment">       * If the nbr was deleted, the leaf route_node should have</span>
<span class="comment">       * lost its last refcount too, and be deleted.</span>
<span class="comment">       * Therefore a looked-up leaf route_node in nbrs table</span>
<span class="comment">       * should never have NULL info.</span>
<span class="comment">       */</span>
      <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>);
      
      <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
    {
      rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
      <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
    }
      <span class="keywordflow">else</span>
    <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;Can&#39;t find neighbor %s in the interface %s&quot;</span>,
           inet_ntoa (nbr-&gt;<a class="code" href="structospf__neighbor.html#a959c002cab5b6328120fcac7ba25fbee">src</a>), <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (oi));

      <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
    }

  <span class="comment">/* Free ospf_neighbor structure. */</span>
  <a class="code" href="ospf__neighbor_8c.html#a6cacaea2728fb6f64caff42aa4d27df7">ospf_nbr_free</a> (nbr);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6cacaea2728fb6f64caff42aa4d27df7"></a><!-- doxytag: member="ospf_neighbor.c::ospf_nbr_free" ref="a6cacaea2728fb6f64caff42aa4d27df7" args="(struct ospf_neighbor *nbr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_nbr_free </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *&#160;</td>
          <td class="paramname"><em>nbr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__neighbor_8c_source.html#l00105">105</a> of file <a class="el" href="ospf__neighbor_8c_source.html">ospf_neighbor.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="comment">/* Free DB summary list. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="ospf__nsm_8c.html#aa880af5829d8741b9012bf64e3c7a0c9">ospf_db_summary_count</a> (nbr))
    <a class="code" href="ospf__nsm_8c.html#a3f2d40c890bf5146459e631083a4677b">ospf_db_summary_clear</a> (nbr);
    <span class="comment">/* ospf_db_summary_delete_all (nbr); */</span>

  <span class="comment">/* Free ls request list. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="ospf__flood_8c.html#a9544780854006403934ea809e4e99caa">ospf_ls_request_count</a> (nbr))
    <a class="code" href="ospf__flood_8c.html#a90c072738e661b151c8fd6b180cb7fcd">ospf_ls_request_delete_all</a> (nbr);

  <span class="comment">/* Free retransmit list. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="ospf__flood_8c.html#a9fc5f626cdb9afa119113fb7a8b9daf2">ospf_ls_retransmit_count</a> (nbr))
    <a class="code" href="ospf__flood_8c.html#afa1fd3e1ddaf46a4674019b35f527667">ospf_ls_retransmit_clear</a> (nbr);

  <span class="comment">/* Cleanup LSDBs. */</span>
  <a class="code" href="ospf__lsdb_8c.html#a98d8e88a12546d5ad907691a3c8dd8d2">ospf_lsdb_cleanup</a> (&amp;nbr-&gt;<a class="code" href="structospf__neighbor.html#aa9dff1f5ba19ec799c3dc9254b849049">db_sum</a>);
  <a class="code" href="ospf__lsdb_8c.html#a98d8e88a12546d5ad907691a3c8dd8d2">ospf_lsdb_cleanup</a> (&amp;nbr-&gt;<a class="code" href="structospf__neighbor.html#ac1ff0219316301982d09b282b86dc16d">ls_req</a>);
  <a class="code" href="ospf__lsdb_8c.html#a98d8e88a12546d5ad907691a3c8dd8d2">ospf_lsdb_cleanup</a> (&amp;nbr-&gt;<a class="code" href="structospf__neighbor.html#aaab4ea26de244d322ac4c82abb4defab">ls_rxmt</a>);
  
  <span class="comment">/* Clear last send packet. */</span>
  <span class="keywordflow">if</span> (nbr-&gt;<a class="code" href="structospf__neighbor.html#ae5321e0cc874246d0002917b591ee3d0">last_send</a>)
    <a class="code" href="ospf__packet_8c.html#a809c1e09677b5aaee9ed0c336a04a4c6">ospf_packet_free</a> (nbr-&gt;<a class="code" href="structospf__neighbor.html#ae5321e0cc874246d0002917b591ee3d0">last_send</a>);

  <span class="keywordflow">if</span> (nbr-&gt;<a class="code" href="structospf__neighbor.html#a68b82493dd68fd0a271db2e168c36617">nbr_nbma</a>)
    {
      nbr-&gt;<a class="code" href="structospf__neighbor.html#a68b82493dd68fd0a271db2e168c36617">nbr_nbma</a>-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
      nbr-&gt;<a class="code" href="structospf__neighbor.html#a68b82493dd68fd0a271db2e168c36617">nbr_nbma</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }

  <span class="comment">/* Cancel all timers. */</span>
  <a class="code" href="ospf__nsm_8h.html#a35ccddb2f6b01d639e00422254ae78a8">OSPF_NSM_TIMER_OFF</a> (nbr-&gt;<a class="code" href="structospf__neighbor.html#a45b4258ca43f3e01958adfe4c7b8bd0b">t_inactivity</a>);
  <a class="code" href="ospf__nsm_8h.html#a35ccddb2f6b01d639e00422254ae78a8">OSPF_NSM_TIMER_OFF</a> (nbr-&gt;<a class="code" href="structospf__neighbor.html#a2b33ba18191ce9a9346bbaae651fdaac">t_db_desc</a>);
  <a class="code" href="ospf__nsm_8h.html#a35ccddb2f6b01d639e00422254ae78a8">OSPF_NSM_TIMER_OFF</a> (nbr-&gt;<a class="code" href="structospf__neighbor.html#ae92276b22586f96e9022efd0a447793b">t_ls_req</a>);
  <a class="code" href="ospf__nsm_8h.html#a35ccddb2f6b01d639e00422254ae78a8">OSPF_NSM_TIMER_OFF</a> (nbr-&gt;<a class="code" href="structospf__neighbor.html#a4529c944b245441aa81008b12d5331d1">t_ls_upd</a>);

  <span class="comment">/* Cancel all events. */</span><span class="comment">/* Thread lookup cost would be negligible. */</span>
  <a class="code" href="thread_8c.html#a97786b4a047014e5b642219f1013e066">thread_cancel_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, nbr);

  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167bab58490337f5bf8a11d9b6ced5016d192">MTYPE_OSPF_NEIGHBOR</a>, nbr);
}
</pre></div>
</div>
</div>
<a class="anchor" id="aec99b1ea173b506a3ef64c78e6dfcec8"></a><!-- doxytag: member="ospf_neighbor.c::ospf_nbr_get" ref="aec99b1ea173b506a3ef64c78e6dfcec8" args="(struct ospf_interface *oi, struct ospf_header *ospfh, struct ip *iph, struct prefix *p)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a>* ospf_nbr_get </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__header.html">ospf_header</a> *&#160;</td>
          <td class="paramname"><em>ospfh</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> *&#160;</td>
          <td class="paramname"><em>iph</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structprefix.html">prefix</a> *&#160;</td>
          <td class="paramname"><em>p</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__neighbor_8c_source.html#l00428">428</a> of file <a class="el" href="ospf__neighbor_8c_source.html">ospf_neighbor.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> <a class="code" href="structkey.html">key</a>;
  <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr;
  
  <a class="code" href="structkey.html">key</a>.family = AF_INET;
  <a class="code" href="structkey.html">key</a>.prefixlen = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;

  <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#a45798a2a8b566abd1907f7ae8bc0a2be">OSPF_IFTYPE_VIRTUALLINK</a>)
    <a class="code" href="structkey.html">key</a>.u.prefix4 = ospfh-&gt;<a class="code" href="structospf__header.html#a412ee04aed6f3918a5a7351d3d23f4a0">router_id</a>;   <span class="comment">/* index vlink nbrs by router-id */</span>
  <span class="keywordflow">else</span>
    <a class="code" href="structkey.html">key</a>.u.prefix4 = iph-&gt;ip_src;

  rn = <a class="code" href="table_8c.html#ac91fdff1a0b8dc3d60ebaf152caa0f80">route_node_get</a> (oi-&gt;<a class="code" href="structospf__interface.html#aeb2e2f33698c499957bb55bfc80835d9">nbrs</a>, &amp;<a class="code" href="structkey.html">key</a>);
  <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
    {
      <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
      nbr = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
      
      <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#abf2c650e64355936c071432d92dd5ecb">OSPF_IFTYPE_NBMA</a> &amp;&amp; nbr-&gt;<a class="code" href="structospf__neighbor.html#a07061a68f4e15effd12479e1047120c7">state</a> == <a class="code" href="ospf__nsm_8h.html#a8151a9925f00bd1d3b3362a7557bab67">NSM_Attempt</a>)
        {
          nbr-&gt;<a class="code" href="structospf__neighbor.html#a959c002cab5b6328120fcac7ba25fbee">src</a> = iph-&gt;ip_src;
          <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;nbr-&gt;<a class="code" href="structospf__neighbor.html#a4be3cd4b416bc267a4e3b35b9e2b1102">address</a>, p, sizeof (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a>));
        }
    }
  <span class="keywordflow">else</span>
    {
      rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = nbr = <a class="code" href="ospf__neighbor_8c.html#a5433e7b2194afa0cff866e8e0a46583a">ospf_nbr_add</a> (oi, ospfh, p);
    }
  
  nbr-&gt;<a class="code" href="structospf__neighbor.html#a2257238c9040a76e9de9a78cf95bae0d">router_id</a> = ospfh-&gt;<a class="code" href="structospf__header.html#a412ee04aed6f3918a5a7351d3d23f4a0">router_id</a>;

  <span class="keywordflow">return</span> nbr;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af8485e20652f26e18ccb9725cc90f587"></a><!-- doxytag: member="ospf_neighbor.c::ospf_nbr_key" ref="af8485e20652f26e18ccb9725cc90f587" args="(struct ospf_interface *oi, struct ospf_neighbor *nbr, struct prefix *key)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void ospf_nbr_key </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a> *&#160;</td>
          <td class="paramname"><em>nbr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structprefix.html">prefix</a> *&#160;</td>
          <td class="paramname"><em>key</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__neighbor_8c_source.html#l00052">52</a> of file <a class="el" href="ospf__neighbor_8c_source.html">ospf_neighbor.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  key-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> = AF_INET;
  key-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;

  <span class="comment">/* vlinks are indexed by router-id */</span>
  <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#a45798a2a8b566abd1907f7ae8bc0a2be">OSPF_IFTYPE_VIRTUALLINK</a>)
    key-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a> = nbr-&gt;<a class="code" href="structospf__neighbor.html#a2257238c9040a76e9de9a78cf95bae0d">router_id</a>;
  <span class="keywordflow">else</span>
    key-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a> = nbr-&gt;<a class="code" href="structospf__neighbor.html#a959c002cab5b6328120fcac7ba25fbee">src</a>;
  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aaae24ad2ba48314e7007f27c61ef98e0"></a><!-- doxytag: member="ospf_neighbor.c::ospf_nbr_lookup" ref="aaae24ad2ba48314e7007f27c61ef98e0" args="(struct ospf_interface *oi, struct ip *iph, struct ospf_header *ospfh)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a>* ospf_nbr_lookup </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="spgrid_8c.html#addd335afdb9230f431842ebb6cbbce62">ip</a> *&#160;</td>
          <td class="paramname"><em>iph</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structospf__header.html">ospf_header</a> *&#160;</td>
          <td class="paramname"><em>ospfh</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__neighbor_8c_source.html#l00375">375</a> of file <a class="el" href="ospf__neighbor_8c_source.html">ospf_neighbor.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#a45798a2a8b566abd1907f7ae8bc0a2be">OSPF_IFTYPE_VIRTUALLINK</a>)
    <span class="keywordflow">return</span> (<a class="code" href="ospf__neighbor_8c.html#a69530f1315a5a3c0c58662ef6ad4efa9">ospf_nbr_lookup_by_routerid</a> (oi-&gt;<a class="code" href="structospf__interface.html#aeb2e2f33698c499957bb55bfc80835d9">nbrs</a>, &amp;ospfh-&gt;<a class="code" href="structospf__header.html#a412ee04aed6f3918a5a7351d3d23f4a0">router_id</a>));
  <span class="keywordflow">else</span>
    <span class="keywordflow">return</span> (<a class="code" href="ospf__neighbor_8c.html#a9530eac0c0816f41b9c9306a90db3b98">ospf_nbr_lookup_by_addr</a> (oi-&gt;<a class="code" href="structospf__interface.html#aeb2e2f33698c499957bb55bfc80835d9">nbrs</a>, &amp;iph-&gt;ip_src));
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9530eac0c0816f41b9c9306a90db3b98"></a><!-- doxytag: member="ospf_neighbor.c::ospf_nbr_lookup_by_addr" ref="a9530eac0c0816f41b9c9306a90db3b98" args="(struct route_table *nbrs, struct in_addr *addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a>* ospf_nbr_lookup_by_addr </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structroute__table.html">route_table</a> *&#160;</td>
          <td class="paramname"><em>nbrs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr *&#160;</td>
          <td class="paramname"><em>addr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__neighbor_8c_source.html#l00289">289</a> of file <a class="el" href="ospf__neighbor_8c_source.html">ospf_neighbor.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr;

  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.family = AF_INET;
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.prefixlen = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;
  <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>.u.prefix4 = *addr;

  rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (nbrs, &amp;<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>);
  <span class="keywordflow">if</span> (! rn)
    <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  
  <span class="comment">/* See comment in ospf_nbr_delete */</span>
  <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>);

  <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
      <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }

  nbr = (<span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *) rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
  <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);

  <span class="keywordflow">return</span> nbr;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a69530f1315a5a3c0c58662ef6ad4efa9"></a><!-- doxytag: member="ospf_neighbor.c::ospf_nbr_lookup_by_routerid" ref="a69530f1315a5a3c0c58662ef6ad4efa9" args="(struct route_table *nbrs, struct in_addr *id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a>* ospf_nbr_lookup_by_routerid </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structroute__table.html">route_table</a> *&#160;</td>
          <td class="paramname"><em>nbrs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr *&#160;</td>
          <td class="paramname"><em>id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__neighbor_8c_source.html#l00320">320</a> of file <a class="el" href="ospf__neighbor_8c_source.html">ospf_neighbor.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr;

  <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (nbrs); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
    <span class="keywordflow">if</span> ((nbr = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
      <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;nbr-&gt;<a class="code" href="structospf__neighbor.html#a2257238c9040a76e9de9a78cf95bae0d">router_id</a>, <span class="keywordtype">id</span>))
    {
      <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a>(rn);
      <span class="keywordflow">return</span> nbr;
    }

  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a77d8efb26eb88abdd8a3c0de59b1d12a"></a><!-- doxytag: member="ospf_neighbor.c::ospf_nbr_new" ref="a77d8efb26eb88abdd8a3c0de59b1d12a" args="(struct ospf_interface *oi)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structospf__neighbor.html">ospf_neighbor</a>* ospf_nbr_new </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf__interface.html">ospf_interface</a> *&#160;</td>
          <td class="paramname"><em>oi</em></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__neighbor_8c_source.html#l00067">67</a> of file <a class="el" href="ospf__neighbor_8c_source.html">ospf_neighbor.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr;

  <span class="comment">/* Allcate new neighbor. */</span>
  nbr = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167bab58490337f5bf8a11d9b6ced5016d192">MTYPE_OSPF_NEIGHBOR</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structospf__neighbor.html">ospf_neighbor</a>));

  <span class="comment">/* Relate neighbor to the interface. */</span>
  nbr-&gt;<a class="code" href="structospf__neighbor.html#a24eabbd825aa53aba5343ae2d5ea7233">oi</a> = <a class="code" href="structospf__neighbor.html#a24eabbd825aa53aba5343ae2d5ea7233">oi</a>;

  <span class="comment">/* Set default values. */</span>
  nbr-&gt;<a class="code" href="structospf__neighbor.html#a07061a68f4e15effd12479e1047120c7">state</a> = <a class="code" href="ospf__nsm_8h.html#a4bdf4e7631050dcf28cbe7959f0675ce">NSM_Down</a>;

  <span class="comment">/* Set inheritance values. */</span>
  nbr-&gt;<a class="code" href="structospf__neighbor.html#a4e51d35a798becc9ffa76cda3462caaf">v_inactivity</a> = <a class="code" href="ospf__interface_8h.html#a3082a40385804021e56001ea2bc5bdb1">OSPF_IF_PARAM</a> (oi, v_wait);
  nbr-&gt;<a class="code" href="structospf__neighbor.html#a9ba43b317ff6786a5885cc96e7e98a28">v_db_desc</a> = <a class="code" href="ospf__interface_8h.html#a3082a40385804021e56001ea2bc5bdb1">OSPF_IF_PARAM</a> (oi, retransmit_interval);
  nbr-&gt;<a class="code" href="structospf__neighbor.html#a7f247fc2d724d69acef918ad766be6f6">v_ls_req</a> = <a class="code" href="ospf__interface_8h.html#a3082a40385804021e56001ea2bc5bdb1">OSPF_IF_PARAM</a> (oi, retransmit_interval);
  nbr-&gt;<a class="code" href="structospf__neighbor.html#aae25ef8d8903b3aecf90a95b4c5c7bc3">v_ls_upd</a> = <a class="code" href="ospf__interface_8h.html#a3082a40385804021e56001ea2bc5bdb1">OSPF_IF_PARAM</a> (oi, retransmit_interval);
  nbr-&gt;<a class="code" href="structospf__neighbor.html#ade51baa719592185df1db62d13e9cf63">priority</a> = -1;

  <span class="comment">/* DD flags. */</span>
  nbr-&gt;<a class="code" href="structospf__neighbor.html#afd7a64a3a213196cc5dd3c4c5b2e2a5b">dd_flags</a> = <a class="code" href="ospfd_8h.html#ab3fc3af333a4f7ffe2a5d89dd794c124">OSPF_DD_FLAG_MS</a>|<a class="code" href="ospfd_8h.html#a6b39a0f2e2f0415a60230aa869cabb48">OSPF_DD_FLAG_M</a>|<a class="code" href="ospfd_8h.html#afbd1b8930e1f40abaeaf47d3d978d21d">OSPF_DD_FLAG_I</a>;

  <span class="comment">/* Last received and sent DD. */</span>
  nbr-&gt;<a class="code" href="structospf__neighbor.html#ae5321e0cc874246d0002917b591ee3d0">last_send</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  nbr-&gt;<a class="code" href="structospf__neighbor.html#a68b82493dd68fd0a271db2e168c36617">nbr_nbma</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;

  <a class="code" href="ospf__flood_8h.html#afcbf84e6f5791298594bbd311a3079d0">ospf_lsdb_init</a> (&amp;nbr-&gt;<a class="code" href="structospf__neighbor.html#aa9dff1f5ba19ec799c3dc9254b849049">db_sum</a>);
  <a class="code" href="ospf__flood_8h.html#afcbf84e6f5791298594bbd311a3079d0">ospf_lsdb_init</a> (&amp;nbr-&gt;<a class="code" href="structospf__neighbor.html#aaab4ea26de244d322ac4c82abb4defab">ls_rxmt</a>);
  <a class="code" href="ospf__flood_8h.html#afcbf84e6f5791298594bbd311a3079d0">ospf_lsdb_init</a> (&amp;nbr-&gt;<a class="code" href="structospf__neighbor.html#ac1ff0219316301982d09b282b86dc16d">ls_req</a>);

  nbr-&gt;<a class="code" href="structospf__neighbor.html#a20275ce82383ee306fddb23a4d6684ab">crypt_seqnum</a> = 0;

  <span class="keywordflow">return</span> nbr;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad8a06eee7456a7316b7814eb0ef6f1c1"></a><!-- doxytag: member="ospf_neighbor.c::ospf_renegotiate_optional_capabilities" ref="ad8a06eee7456a7316b7814eb0ef6f1c1" args="(struct ospf *top)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ospf_renegotiate_optional_capabilities </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structospf.html">ospf</a> *&#160;</td>
          <td class="paramname"><em>top</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ospf__neighbor_8c_source.html#l00338">338</a> of file <a class="el" href="ospf__neighbor_8c_source.html">ospf_neighbor.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
  <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
  <span class="keyword">struct </span><a class="code" href="structroute__table.html">route_table</a> *nbrs;
  <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
  <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr;

  <span class="comment">/* At first, flush self-originated LSAs from routing domain. */</span>
  <a class="code" href="ospf__lsa_8c.html#a286fff473dd64a6db6e15d1a04f4b5b2">ospf_flush_self_originated_lsas_now</a> (top);

  <span class="comment">/* Revert all neighbor status to ExStart. */</span>
  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (top-&gt;<a class="code" href="structospf.html#a977d3608343fe5db7900ec646880cb6a">oiflist</a>, node, oi))
    {
      <span class="keywordflow">if</span> ((nbrs = oi-&gt;<a class="code" href="structospf__interface.html#aeb2e2f33698c499957bb55bfc80835d9">nbrs</a>) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
        <span class="keywordflow">continue</span>;

      <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (nbrs); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
        {
          <span class="keywordflow">if</span> ((nbr = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> || nbr == oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>)
            <span class="keywordflow">continue</span>;

          <span class="keywordflow">if</span> (nbr-&gt;<a class="code" href="structospf__neighbor.html#a07061a68f4e15effd12479e1047120c7">state</a> &lt; <a class="code" href="ospf__nsm_8h.html#aa02b0a534709b4557e46db7b31bbedd7">NSM_ExStart</a>)
            <span class="keywordflow">continue</span>;

          <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
            <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Renegotiate optional capabilities with neighbor(%s)&quot;</span>, inet_ntoa (nbr-&gt;<a class="code" href="structospf__neighbor.html#a2257238c9040a76e9de9a78cf95bae0d">router_id</a>));

          <a class="code" href="ospf__nsm_8h.html#a1cb080254e9d0314d6ef4bc2c05e36b4">OSPF_NSM_EVENT_SCHEDULE</a> (nbr, <a class="code" href="ospf__nsm_8h.html#aab00c9e1d8f7f1c47e4e2d857a4753e3">NSM_SeqNumberMismatch</a>);
        }
    }

  <span class="keywordflow">return</span>;
}
</pre></div>
</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="ospf__neighbor_8c.html">ospf_neighbor.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:29 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
