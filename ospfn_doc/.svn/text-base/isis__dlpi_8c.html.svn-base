<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: isisd/isis_dlpi.c File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('isis__dlpi_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">isisd/isis_dlpi.c File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="zebra_8h_source.html">zebra.h</a>&gt;</code><br/>
<code>#include &lt;net/if.h&gt;</code><br/>
<code>#include &lt;netinet/if_ether.h&gt;</code><br/>
<code>#include &lt;sys/types.h&gt;</code><br/>
<code>#include &lt;unistd.h&gt;</code><br/>
<code>#include &lt;fcntl.h&gt;</code><br/>
<code>#include &lt;stropts.h&gt;</code><br/>
<code>#include &lt;poll.h&gt;</code><br/>
<code>#include &lt;sys/dlpi.h&gt;</code><br/>
<code>#include &lt;sys/pfmod.h&gt;</code><br/>
<code>#include &quot;<a class="el" href="log_8h_source.html">log.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="stream_8h_source.html">stream.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="if_8h_source.html">if.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="dict_8h_source.html">isisd/dict.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="iso_8h_source.html">isisd/include-netbsd/iso.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__constants_8h_source.html">isisd/isis_constants.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__common_8h_source.html">isisd/isis_common.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__circuit_8h_source.html">isisd/isis_circuit.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__flags_8h_source.html">isisd/isis_flags.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isisd_8h_source.html">isisd/isisd.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="isis__network_8h_source.html">isisd/isis_network.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="privs_8h_source.html">privs.h</a>&quot;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for isis_dlpi.c:</div>
<div class="dyncontent">
<div class="center"><img src="isis__dlpi_8c__incl.png" border="0" usemap="#isisd_2isis__dlpi_8c" alt=""/></div>
<map name="isisd_2isis__dlpi_8c" id="isisd_2isis__dlpi_8c">
<area shape="rect" id="node3" href="zebra_8h.html" title="zebra.h" alt="" coords="1355,80,1421,107"/><area shape="rect" id="node75" href="log_8h.html" title="log.h" alt="" coords="2162,80,2213,107"/><area shape="rect" id="node78" href="stream_8h.html" title="stream.h" alt="" coords="2843,80,2917,107"/><area shape="rect" id="node82" href="if_8h.html" title="if.h" alt="" coords="2941,80,2981,107"/><area shape="rect" id="node86" href="dict_8h.html" title="isisd/dict.h" alt="" coords="3006,80,3092,107"/><area shape="rect" id="node90" href="iso_8h.html" title="isisd/include&#45;netbsd/iso.h" alt="" coords="3117,80,3293,107"/><area shape="rect" id="node92" href="isis__constants_8h.html" title="isisd/isis_constants.h" alt="" coords="3318,80,3468,107"/><area shape="rect" id="node94" href="isis__common_8h.html" title="isisd/isis_common.h" alt="" coords="3493,80,3635,107"/><area shape="rect" id="node96" href="isis__circuit_8h.html" title="isisd/isis_circuit.h" alt="" coords="3659,80,3785,107"/><area shape="rect" id="node98" href="isis__flags_8h.html" title="isisd/isis_flags.h" alt="" coords="3811,80,3931,107"/><area shape="rect" id="node100" href="isisd_8h.html" title="isisd/isisd.h" alt="" coords="3955,80,4047,107"/><area shape="rect" id="node102" href="isis__network_8h.html" title="isisd/isis_network.h" alt="" coords="4071,80,4211,107"/><area shape="rect" id="node104" href="privs_8h.html" title="privs.h" alt="" coords="4235,80,4297,107"/><area shape="rect" id="node57" href="zassert_8h.html" title="zassert.h" alt="" coords="2397,155,2475,181"/><area shape="rect" id="node59" href="str_8h.html" title="str.h" alt="" coords="2499,155,2548,181"/><area shape="rect" id="node80" href="prefix_8h.html" title="prefix.h" alt="" coords="2846,155,2913,181"/><area shape="rect" id="node84" href="linklist_8h.html" title="linklist.h" alt="" coords="2938,155,3008,181"/></map>
</div>
</div>
<p><a href="isis__dlpi_8c_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__dlpi_8c.html#a728fa09913ed5257d97cd062fd3d3cfa">dlpisend</a> (int fd, const void *cbuf, size_t cbuflen, const void *dbuf, size_t dbuflen, int <a class="el" href="structflags.html">flags</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static ssize_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__dlpi_8c.html#adbe26bb4173e18a53be9c23f2e0c7eac">dlpirctl</a> (int fd)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__dlpi_8c.html#a273f39d13c2e6f9b656eed0a6dfba65e">dlpiok</a> (int fd, t_uscalar_t oprim)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__dlpi_8c.html#a41ce606f13167bcb5e76124b70f6f7fc">dlpiinfo</a> (int fd)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__dlpi_8c.html#a270ce846ed003f419a712643f200ff0a">dlpiopen</a> (const char *devpath, ssize_t *acklen)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__dlpi_8c.html#a3de314a03340559f710d2a07b14e9c11">dlpiattach</a> (int fd, int unit)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__dlpi_8c.html#acb6ea6addb4a634c7bcc4c8fa8a7a7c2">dlpibind</a> (int fd)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__dlpi_8c.html#a6a8a477b6d7f04d954bfc5c8e0a80715">dlpimcast</a> (int fd, const u_char *mcaddr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__dlpi_8c.html#afd8267e7cc94901c5f0a8eda64df79dc">dlpiaddr</a> (int fd, u_char *addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__dlpi_8c.html#a44a3208cfbc4e64e694fe5c6b4dd66d0">open_dlpi_dev</a> (struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *circuit)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__dlpi_8c.html#a4fb54543ed3a433aa2b883518d7be81f">isis_sock_init</a> (struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *circuit)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__dlpi_8c.html#a5f85f514b1239ab33e4fdeed003de800">isis_recv_pdu_bcast</a> (struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *circuit, u_char *ssnpa)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__dlpi_8c.html#aa14af084fa2a0eecae13e4ec0f2ccb37">isis_send_pdu_bcast</a> (struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *circuit, int level)</td></tr>
<tr><td colspan="2"><h2><a name="var-members"></a>
Variables</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structzebra__privs__t.html">zebra_privs_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__dlpi_8c.html#a4af776b1b8693eb5cb5d20b25abb4680">isisd_privs</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static t_uscalar_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__dlpi_8c.html#a1aeff07baec4559bb626ac35baed866e">dlpi_ctl</a> [1024]</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">u_char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__dlpi_8c.html#a564f249d5a142831ee4e6f6cd2ecc396">ALL_L1_ISS</a> [6] = { 0x01, 0x80, 0xC2, 0x00, 0x00, 0x14 }</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">u_char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__dlpi_8c.html#a7b5f2cee21b83e1734bd7203f23262aa">ALL_L2_ISS</a> [6] = { 0x01, 0x80, 0xC2, 0x00, 0x00, 0x15 }</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">u_char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__dlpi_8c.html#a0a18f0f862f0a8eed7bf2b6e59483166">ALL_ISS</a> [6] = { 0x09, 0x00, 0x2B, 0x00, 0x00, 0x05 }</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">u_char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__dlpi_8c.html#a5e7d2a4d58b2c7dfb7242f15ca442246">ALL_ESS</a> [6] = { 0x09, 0x00, 0x2B, 0x00, 0x00, 0x04 }</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static u_char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__dlpi_8c.html#a94d3ca3033149dd40c1a9b1eeedf79c7">sock_buff</a> [8192]</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static u_short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isis__dlpi_8c.html#aa0aac14020dff7c0c13453d62b55d6b4">pf_filter</a> []</td></tr>
</table>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="afd8267e7cc94901c5f0a8eda64df79dc"></a><!-- doxytag: member="isis_dlpi.c::dlpiaddr" ref="afd8267e7cc94901c5f0a8eda64df79dc" args="(int fd, u_char *addr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int dlpiaddr </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>fd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_char *&#160;</td>
          <td class="paramname"><em>addr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__dlpi_8c_source.html#l00278">278</a> of file <a class="el" href="isis__dlpi_8c_source.html">isis_dlpi.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  dl_phys_addr_req_t dpar;
  dl_phys_addr_ack_t *dpaa = (dl_phys_addr_ack_t *)<a class="code" href="isis__dlpi_8c.html#a1aeff07baec4559bb626ac35baed866e">dlpi_ctl</a>;
  <span class="keywordtype">int</span> retv;

  memset (&amp;dpar, 0, <span class="keyword">sizeof</span> (dpar));
  dpar.dl_primitive = DL_PHYS_ADDR_REQ;
  dpar.dl_addr_type = DL_CURR_PHYS_ADDR;
  <a class="code" href="isis__dlpi_8c.html#a728fa09913ed5257d97cd062fd3d3cfa">dlpisend</a> (<a class="code" href="structisis__circuit.html#a2fa1849a71a356f206776c2329f27dbc">fd</a>, &amp;dpar, <span class="keyword">sizeof</span> (dpar), <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0, 0);

  retv = <a class="code" href="isis__dlpi_8c.html#adbe26bb4173e18a53be9c23f2e0c7eac">dlpirctl</a> (<a class="code" href="structisis__circuit.html#a2fa1849a71a356f206776c2329f27dbc">fd</a>);
  <span class="keywordflow">if</span> (retv &lt; DL_PHYS_ADDR_ACK_SIZE || dpaa-&gt;dl_primitive != DL_PHYS_ADDR_ACK)
    <span class="keywordflow">return</span> -1;

  <span class="keywordflow">if</span> (dpaa-&gt;dl_addr_offset &lt; DL_PHYS_ADDR_ACK_SIZE ||
    dpaa-&gt;dl_addr_length != ETHERADDRL ||
    dpaa-&gt;dl_addr_offset + dpaa-&gt;dl_addr_length &gt; retv)
    <span class="keywordflow">return</span> -1;

  bcopy((<span class="keywordtype">char</span> *)dpaa + dpaa-&gt;dl_addr_offset, addr, ETHERADDRL);
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3de314a03340559f710d2a07b14e9c11"></a><!-- doxytag: member="isis_dlpi.c::dlpiattach" ref="a3de314a03340559f710d2a07b14e9c11" args="(int fd, int unit)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int dlpiattach </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>fd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>unit</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__dlpi_8c_source.html#l00230">230</a> of file <a class="el" href="isis__dlpi_8c_source.html">isis_dlpi.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  dl_attach_req_t dar;

  memset (&amp;dar, 0, <span class="keyword">sizeof</span> (dar));
  dar.dl_primitive = DL_ATTACH_REQ;
  dar.dl_ppa = unit;
  <a class="code" href="isis__dlpi_8c.html#a728fa09913ed5257d97cd062fd3d3cfa">dlpisend</a> (<a class="code" href="structisis__circuit.html#a2fa1849a71a356f206776c2329f27dbc">fd</a>, &amp;dar, <span class="keyword">sizeof</span> (dar), <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0, 0);
  <span class="keywordflow">return</span> <a class="code" href="isis__dlpi_8c.html#a273f39d13c2e6f9b656eed0a6dfba65e">dlpiok</a> (<a class="code" href="structisis__circuit.html#a2fa1849a71a356f206776c2329f27dbc">fd</a>, dar.dl_primitive);
}
</pre></div>
</div>
</div>
<a class="anchor" id="acb6ea6addb4a634c7bcc4c8fa8a7a7c2"></a><!-- doxytag: member="isis_dlpi.c::dlpibind" ref="acb6ea6addb4a634c7bcc4c8fa8a7a7c2" args="(int fd)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int dlpibind </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>fd</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__dlpi_8c_source.html#l00242">242</a> of file <a class="el" href="isis__dlpi_8c_source.html">isis_dlpi.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  dl_bind_req_t dbr;
  <span class="keywordtype">int</span> retv;
  dl_bind_ack_t *dba = (dl_bind_ack_t *)<a class="code" href="isis__dlpi_8c.html#a1aeff07baec4559bb626ac35baed866e">dlpi_ctl</a>;

  memset (&amp;dbr, 0, <span class="keyword">sizeof</span> (dbr));
  dbr.dl_primitive = DL_BIND_REQ;
  dbr.dl_service_mode = DL_CLDLS;
  <a class="code" href="isis__dlpi_8c.html#a728fa09913ed5257d97cd062fd3d3cfa">dlpisend</a> (<a class="code" href="structisis__circuit.html#a2fa1849a71a356f206776c2329f27dbc">fd</a>, &amp;dbr, <span class="keyword">sizeof</span> (dbr), <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0, 0);

  retv = <a class="code" href="isis__dlpi_8c.html#adbe26bb4173e18a53be9c23f2e0c7eac">dlpirctl</a> (<a class="code" href="structisis__circuit.html#a2fa1849a71a356f206776c2329f27dbc">fd</a>);
  <span class="keywordflow">if</span> (retv &lt; DL_BIND_ACK_SIZE || dba-&gt;dl_primitive != DL_BIND_ACK)
    <span class="keywordflow">return</span> -1;
  <span class="keywordflow">else</span>
    <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a41ce606f13167bcb5e76124b70f6f7fc"></a><!-- doxytag: member="isis_dlpi.c::dlpiinfo" ref="a41ce606f13167bcb5e76124b70f6f7fc" args="(int fd)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int dlpiinfo </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>fd</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__dlpi_8c_source.html#l00189">189</a> of file <a class="el" href="isis__dlpi_8c_source.html">isis_dlpi.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  dl_info_req_t dir;
  ssize_t retv;

  memset (&amp;dir, 0, <span class="keyword">sizeof</span> (dir));
  dir.dl_primitive = DL_INFO_REQ;
  <span class="comment">/* Info_req uses M_PCPROTO. */</span>
  <a class="code" href="isis__dlpi_8c.html#a728fa09913ed5257d97cd062fd3d3cfa">dlpisend</a> (<a class="code" href="structisis__circuit.html#a2fa1849a71a356f206776c2329f27dbc">fd</a>, &amp;dir, <span class="keyword">sizeof</span> (dir), <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0, RS_HIPRI);
  retv = <a class="code" href="isis__dlpi_8c.html#adbe26bb4173e18a53be9c23f2e0c7eac">dlpirctl</a> (<a class="code" href="structisis__circuit.html#a2fa1849a71a356f206776c2329f27dbc">fd</a>);
  <span class="keywordflow">if</span> (retv &lt; DL_INFO_ACK_SIZE || <a class="code" href="isis__dlpi_8c.html#a1aeff07baec4559bb626ac35baed866e">dlpi_ctl</a>[0] != DL_INFO_ACK)
    <span class="keywordflow">return</span> -1;
  <span class="keywordflow">else</span>
    <span class="keywordflow">return</span> retv;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6a8a477b6d7f04d954bfc5c8e0a80715"></a><!-- doxytag: member="isis_dlpi.c::dlpimcast" ref="a6a8a477b6d7f04d954bfc5c8e0a80715" args="(int fd, const u_char *mcaddr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int dlpimcast </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>fd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const u_char *&#160;</td>
          <td class="paramname"><em>mcaddr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__dlpi_8c_source.html#l00261">261</a> of file <a class="el" href="isis__dlpi_8c_source.html">isis_dlpi.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span>{
    dl_enabmulti_req_t der;
    u_char addr[ETHERADDRL];
  } dler;

  memset (&amp;dler, 0, <span class="keyword">sizeof</span> (dler));
  dler.der.dl_primitive = DL_ENABMULTI_REQ;
  dler.der.dl_addr_length = <span class="keyword">sizeof</span> (dler.addr);
  dler.der.dl_addr_offset = dler.addr - (u_char *)&amp;dler;
  <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (dler.addr, mcaddr, sizeof (dler.addr));
  <a class="code" href="isis__dlpi_8c.html#a728fa09913ed5257d97cd062fd3d3cfa">dlpisend</a> (fd, &amp;dler, <span class="keyword">sizeof</span> (dler), <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0, 0);
  <span class="keywordflow">return</span> <a class="code" href="isis__dlpi_8c.html#a273f39d13c2e6f9b656eed0a6dfba65e">dlpiok</a> (fd, dler.der.dl_primitive);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a273f39d13c2e6f9b656eed0a6dfba65e"></a><!-- doxytag: member="isis_dlpi.c::dlpiok" ref="a273f39d13c2e6f9b656eed0a6dfba65e" args="(int fd, t_uscalar_t oprim)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int dlpiok </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>fd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">t_uscalar_t&#160;</td>
          <td class="paramname"><em>oprim</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__dlpi_8c_source.html#l00171">171</a> of file <a class="el" href="isis__dlpi_8c_source.html">isis_dlpi.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> retv;
  dl_ok_ack_t *doa = (dl_ok_ack_t *)<a class="code" href="isis__dlpi_8c.html#a1aeff07baec4559bb626ac35baed866e">dlpi_ctl</a>;

  retv = <a class="code" href="isis__dlpi_8c.html#adbe26bb4173e18a53be9c23f2e0c7eac">dlpirctl</a> (fd);
  <span class="keywordflow">if</span> (retv &lt; DL_OK_ACK_SIZE || doa-&gt;dl_primitive != DL_OK_ACK ||
    doa-&gt;dl_correct_primitive != oprim)
    {
      <span class="keywordflow">return</span> -1;
    }
  <span class="keywordflow">else</span>
    {
      <span class="keywordflow">return</span> 0;
    }
}
</pre></div>
</div>
</div>
<a class="anchor" id="a270ce846ed003f419a712643f200ff0a"></a><!-- doxytag: member="isis_dlpi.c::dlpiopen" ref="a270ce846ed003f419a712643f200ff0a" args="(const char *devpath, ssize_t *acklen)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int dlpiopen </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>devpath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ssize_t *&#160;</td>
          <td class="paramname"><em>acklen</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__dlpi_8c_source.html#l00206">206</a> of file <a class="el" href="isis__dlpi_8c_source.html">isis_dlpi.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> fd, <a class="code" href="structflags.html">flags</a>;

  fd = open (devpath, O_RDWR | O_NONBLOCK | O_NOCTTY);
  <span class="keywordflow">if</span> (fd == -1)
    <span class="keywordflow">return</span> -1;

  <span class="comment">/* All that we want is for the open itself to be non-blocking, not I/O. */</span>
  flags = fcntl (fd, F_GETFL, 0);
  <span class="keywordflow">if</span> (flags != -1)
    fcntl (fd, F_SETFL, flags &amp; ~O_NONBLOCK);

  <span class="comment">/* After opening, ask for information */</span>
  <span class="keywordflow">if</span> ((*acklen = <a class="code" href="isis__dlpi_8c.html#a41ce606f13167bcb5e76124b70f6f7fc">dlpiinfo</a> (fd)) == -1)
    {
      close (fd);
      <span class="keywordflow">return</span> -1;
    }

  <span class="keywordflow">return</span> fd;
}
</pre></div>
</div>
</div>
<a class="anchor" id="adbe26bb4173e18a53be9c23f2e0c7eac"></a><!-- doxytag: member="isis_dlpi.c::dlpirctl" ref="adbe26bb4173e18a53be9c23f2e0c7eac" args="(int fd)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static ssize_t dlpirctl </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>fd</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__dlpi_8c_source.html#l00123">123</a> of file <a class="el" href="isis__dlpi_8c_source.html">isis_dlpi.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span>pollfd fds[1];
  <span class="keyword">struct </span>strbuf ctlbuf, databuf;
  <span class="keywordtype">int</span> <a class="code" href="structflags.html">flags</a>, retv;

  <span class="keywordflow">do</span>
    {
      <span class="comment">/* Poll is used here in case the device doesn&#39;t speak DLPI correctly */</span>
      memset (fds, 0, <span class="keyword">sizeof</span> (fds));
      fds[0].fd = fd;
      fds[0].events = POLLIN | POLLPRI;
      <span class="keywordflow">if</span> (poll (fds, 1, 1000) &lt;= 0)
    <span class="keywordflow">return</span> -1;

      memset (&amp;ctlbuf, 0, <span class="keyword">sizeof</span> (ctlbuf));
      memset (&amp;databuf, 0, <span class="keyword">sizeof</span> (databuf));
      ctlbuf.maxlen = <span class="keyword">sizeof</span> (<a class="code" href="isis__dlpi_8c.html#a1aeff07baec4559bb626ac35baed866e">dlpi_ctl</a>);
      ctlbuf.buf = (<span class="keywordtype">void</span> *)<a class="code" href="isis__dlpi_8c.html#a1aeff07baec4559bb626ac35baed866e">dlpi_ctl</a>;
      databuf.maxlen = <span class="keyword">sizeof</span> (<a class="code" href="isis__dlpi_8c.html#a94d3ca3033149dd40c1a9b1eeedf79c7">sock_buff</a>);
      databuf.buf = (<span class="keywordtype">void</span> *)<a class="code" href="isis__dlpi_8c.html#a94d3ca3033149dd40c1a9b1eeedf79c7">sock_buff</a>;
      flags = 0;
      retv = getmsg (fd, &amp;ctlbuf, &amp;databuf, &amp;flags);

      <span class="keywordflow">if</span> (retv &lt; 0)
    <span class="keywordflow">return</span> -1;
    }
  <span class="keywordflow">while</span> (ctlbuf.len == 0);

  <span class="keywordflow">if</span> (!(retv &amp; MORECTL))
    {
      <span class="keywordflow">while</span> (retv &amp; MOREDATA)
    {
      flags = 0;
      retv = getmsg (fd, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, &amp;databuf, &amp;flags);
    }
      <span class="keywordflow">return</span> ctlbuf.len;
    }

  <span class="keywordflow">while</span> (retv &amp; MORECTL)
    {
      flags = 0;
      retv = getmsg (fd, &amp;ctlbuf, &amp;databuf, &amp;flags);
    }
  <span class="keywordflow">return</span> -1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a728fa09913ed5257d97cd062fd3d3cfa"></a><!-- doxytag: member="isis_dlpi.c::dlpisend" ref="a728fa09913ed5257d97cd062fd3d3cfa" args="(int fd, const void *cbuf, size_t cbuflen, const void *dbuf, size_t dbuflen, int flags)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void dlpisend </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>fd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>cbuf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>cbuflen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>dbuf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>dbuflen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>flags</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__dlpi_8c_source.html#l00094">94</a> of file <a class="el" href="isis__dlpi_8c_source.html">isis_dlpi.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">const</span> <span class="keyword">struct </span>strbuf *ctlptr = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keyword">const</span> <span class="keyword">struct </span>strbuf *dataptr = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
  <span class="keyword">struct </span>strbuf ctlbuf, databuf;

  <span class="keywordflow">if</span> (cbuf != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      memset (&amp;ctlbuf, 0, <span class="keyword">sizeof</span> (ctlbuf));
      ctlbuf.len = cbuflen;
      ctlbuf.buf = (<span class="keywordtype">void</span> *)cbuf;
      ctlptr = &amp;ctlbuf;
    }

  <span class="keywordflow">if</span> (dbuf != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      memset (&amp;databuf, 0, <span class="keyword">sizeof</span> (databuf));
      databuf.len = dbuflen;
      databuf.buf = (<span class="keywordtype">void</span> *)dbuf;
      dataptr = &amp;databuf;
    }

  <span class="comment">/* We assume this doesn&#39;t happen often and isn&#39;t operationally significant */</span>
  <span class="keywordflow">if</span> (putmsg (fd, ctlptr, dataptr, <a class="code" href="structflags.html">flags</a>) == -1)
    <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s: putmsg: %s&quot;</span>, __func__, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5f85f514b1239ab33e4fdeed003de800"></a><!-- doxytag: member="isis_dlpi.c::isis_recv_pdu_bcast" ref="a5f85f514b1239ab33e4fdeed003de800" args="(struct isis_circuit *circuit, u_char *ssnpa)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int isis_recv_pdu_bcast </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *&#160;</td>
          <td class="paramname"><em>circuit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">u_char *&#160;</td>
          <td class="paramname"><em>ssnpa</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__dlpi_8c_source.html#l00524">524</a> of file <a class="el" href="isis__dlpi_8c_source.html">isis_dlpi.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">struct </span>pollfd fds[1];
  <span class="keyword">struct </span>strbuf ctlbuf, databuf;
  <span class="keywordtype">int</span> <a class="code" href="structflags.html">flags</a>, retv;
  dl_unitdata_ind_t *dui = (dl_unitdata_ind_t *)<a class="code" href="isis__dlpi_8c.html#a1aeff07baec4559bb626ac35baed866e">dlpi_ctl</a>;

  memset (fds, 0, <span class="keyword">sizeof</span> (fds));
  fds[0].fd = circuit-&gt;<a class="code" href="structisis__circuit.html#a2fa1849a71a356f206776c2329f27dbc">fd</a>;
  fds[0].events = POLLIN | POLLPRI;
  <span class="keywordflow">if</span> (poll (fds, 1, 0) &lt;= 0)
    <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;

  memset (&amp;ctlbuf, 0, <span class="keyword">sizeof</span> (ctlbuf));
  memset (&amp;databuf, 0, <span class="keyword">sizeof</span> (databuf));
  ctlbuf.maxlen = <span class="keyword">sizeof</span> (<a class="code" href="isis__dlpi_8c.html#a1aeff07baec4559bb626ac35baed866e">dlpi_ctl</a>);
  ctlbuf.buf = (<span class="keywordtype">void</span> *)<a class="code" href="isis__dlpi_8c.html#a1aeff07baec4559bb626ac35baed866e">dlpi_ctl</a>;
  databuf.maxlen = <span class="keyword">sizeof</span> (<a class="code" href="isis__dlpi_8c.html#a94d3ca3033149dd40c1a9b1eeedf79c7">sock_buff</a>);
  databuf.buf = (<span class="keywordtype">void</span> *)<a class="code" href="isis__dlpi_8c.html#a94d3ca3033149dd40c1a9b1eeedf79c7">sock_buff</a>;
  flags = 0;
  retv = getmsg (circuit-&gt;<a class="code" href="structisis__circuit.html#a2fa1849a71a356f206776c2329f27dbc">fd</a>, &amp;ctlbuf, &amp;databuf, &amp;flags);

  <span class="keywordflow">if</span> (retv &lt; 0)
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;isis_recv_pdu_bcast: getmsg failed: %s&quot;</span>,
         <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
      <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
    }

  <span class="keywordflow">if</span> (retv &amp; (MORECTL | MOREDATA))
    {
      <span class="keywordflow">while</span> (retv &amp; (MORECTL | MOREDATA))
    {
      flags = 0;
      retv = getmsg (circuit-&gt;<a class="code" href="structisis__circuit.html#a2fa1849a71a356f206776c2329f27dbc">fd</a>, &amp;ctlbuf, &amp;databuf, &amp;flags);
    }
      <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
    }

  <span class="keywordflow">if</span> (ctlbuf.len &lt; DL_UNITDATA_IND_SIZE ||
    dui-&gt;dl_primitive != DL_UNITDATA_IND)
    <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;

  <span class="keywordflow">if</span> (dui-&gt;dl_src_addr_length != ETHERADDRL + 2 ||
    dui-&gt;dl_src_addr_offset &lt; DL_UNITDATA_IND_SIZE ||
    dui-&gt;dl_src_addr_offset + dui-&gt;dl_src_addr_length &gt; ctlbuf.len)
    <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;

  <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (ssnpa, (<span class="keywordtype">char</span> *)dui + dui-&gt;dl_src_addr_offset +
    (circuit-&gt;<a class="code" href="structisis__circuit.html#a19e0eff1c7b91727cd7bf76f204425c4">sap_length</a> &gt; 0 ? circuit-&gt;<a class="code" href="structisis__circuit.html#a19e0eff1c7b91727cd7bf76f204425c4">sap_length</a> : 0), ETHERADDRL);

  <span class="keywordflow">if</span> (databuf.len &lt; <a class="code" href="isis__constants_8h.html#a048b572b44339fe08c86740ba28c603e">LLC_LEN</a> || <a class="code" href="isis__dlpi_8c.html#a94d3ca3033149dd40c1a9b1eeedf79c7">sock_buff</a>[0] != <a class="code" href="isis__constants_8h.html#a7dc7c0809fa809eb5774a4356c1368db">ISO_SAP</a> ||
    <a class="code" href="isis__dlpi_8c.html#a94d3ca3033149dd40c1a9b1eeedf79c7">sock_buff</a>[1] != <a class="code" href="isis__constants_8h.html#a7dc7c0809fa809eb5774a4356c1368db">ISO_SAP</a> || <a class="code" href="isis__dlpi_8c.html#a94d3ca3033149dd40c1a9b1eeedf79c7">sock_buff</a>[2] != 3)
    <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;

  <a class="code" href="stream_8c.html#a39121b19ef0be09e9a5598a1ea1371c0">stream_write</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#abc0c4c6484b34715228b6811f442f9aa">rcv_stream</a>, <a class="code" href="isis__dlpi_8c.html#a94d3ca3033149dd40c1a9b1eeedf79c7">sock_buff</a> + <a class="code" href="isis__constants_8h.html#a048b572b44339fe08c86740ba28c603e">LLC_LEN</a>,
                databuf.len - <a class="code" href="isis__constants_8h.html#a048b572b44339fe08c86740ba28c603e">LLC_LEN</a>);
  <a class="code" href="stream_8c.html#a5506a87bd79df66accb6ad8fbbd5857c">stream_set_getp</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#abc0c4c6484b34715228b6811f442f9aa">rcv_stream</a>, 0);

  <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa14af084fa2a0eecae13e4ec0f2ccb37"></a><!-- doxytag: member="isis_dlpi.c::isis_send_pdu_bcast" ref="aa14af084fa2a0eecae13e4ec0f2ccb37" args="(struct isis_circuit *circuit, int level)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int isis_send_pdu_bcast </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *&#160;</td>
          <td class="paramname"><em>circuit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__dlpi_8c_source.html#l00587">587</a> of file <a class="el" href="isis__dlpi_8c_source.html">isis_dlpi.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  dl_unitdata_req_t *dur = (dl_unitdata_req_t *)<a class="code" href="isis__dlpi_8c.html#a1aeff07baec4559bb626ac35baed866e">dlpi_ctl</a>;
  <span class="keywordtype">char</span> *dstaddr;
  u_short *dstsap;

  <a class="code" href="stream_8c.html#a5506a87bd79df66accb6ad8fbbd5857c">stream_set_getp</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a282678da28cc5e426019913c913ea490">snd_stream</a>, 0);

  memset (dur, 0, <span class="keyword">sizeof</span> (*dur));
  dur-&gt;dl_primitive = DL_UNITDATA_REQ;
  dur-&gt;dl_dest_addr_length = ETHERADDRL + 2;
  dur-&gt;dl_dest_addr_offset = <span class="keyword">sizeof</span> (*dur);

  dstaddr = (<span class="keywordtype">char</span> *)(dur + 1);
  <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a19e0eff1c7b91727cd7bf76f204425c4">sap_length</a> &lt; 0)
    {
      dstsap = (u_short *)(dstaddr + ETHERADDRL);
    }
  <span class="keywordflow">else</span>
    {
      dstsap = (u_short *)dstaddr;
      dstaddr += circuit-&gt;<a class="code" href="structisis__circuit.html#a19e0eff1c7b91727cd7bf76f204425c4">sap_length</a>;
    }
  <span class="keywordflow">if</span> (level == 1)
    <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (dstaddr, <a class="code" href="isis__bpf_8c.html#a564f249d5a142831ee4e6f6cd2ecc396">ALL_L1_ISS</a>, ETHERADDRL);
  <span class="keywordflow">else</span>
    <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (dstaddr, <a class="code" href="isis__bpf_8c.html#a7b5f2cee21b83e1734bd7203f23262aa">ALL_L2_ISS</a>, ETHERADDRL);
  <span class="comment">/* Note: DLPI SAP values are in host byte order */</span>
  *dstsap = <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a282678da28cc5e426019913c913ea490">snd_stream</a>) + <a class="code" href="isis__constants_8h.html#a048b572b44339fe08c86740ba28c603e">LLC_LEN</a>;

  <a class="code" href="isis__dlpi_8c.html#a94d3ca3033149dd40c1a9b1eeedf79c7">sock_buff</a>[0] = <a class="code" href="isis__constants_8h.html#a7dc7c0809fa809eb5774a4356c1368db">ISO_SAP</a>;
  <a class="code" href="isis__dlpi_8c.html#a94d3ca3033149dd40c1a9b1eeedf79c7">sock_buff</a>[1] = <a class="code" href="isis__constants_8h.html#a7dc7c0809fa809eb5774a4356c1368db">ISO_SAP</a>;
  <a class="code" href="isis__dlpi_8c.html#a94d3ca3033149dd40c1a9b1eeedf79c7">sock_buff</a>[2] = 0x03;
  <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (<a class="code" href="isis__dlpi_8c.html#a94d3ca3033149dd40c1a9b1eeedf79c7">sock_buff</a> + <a class="code" href="isis__constants_8h.html#a048b572b44339fe08c86740ba28c603e">LLC_LEN</a>, circuit-&gt;<a class="code" href="structisis__circuit.html#a282678da28cc5e426019913c913ea490">snd_stream</a>-&gt;<a class="code" href="structstream.html#aa204feef08c4dcb72bf774680da7a864">data</a>,
      <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a282678da28cc5e426019913c913ea490">snd_stream</a>));
  <a class="code" href="isis__dlpi_8c.html#a728fa09913ed5257d97cd062fd3d3cfa">dlpisend</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a2fa1849a71a356f206776c2329f27dbc">fd</a>, dur, sizeof (*dur) + dur-&gt;dl_dest_addr_length,
    <a class="code" href="isis__dlpi_8c.html#a94d3ca3033149dd40c1a9b1eeedf79c7">sock_buff</a>, <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#a282678da28cc5e426019913c913ea490">snd_stream</a>) + <a class="code" href="isis__constants_8h.html#a048b572b44339fe08c86740ba28c603e">LLC_LEN</a>, 0);
  <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4fb54543ed3a433aa2b883518d7be81f"></a><!-- doxytag: member="isis_dlpi.c::isis_sock_init" ref="a4fb54543ed3a433aa2b883518d7be81f" args="(struct isis_circuit *circuit)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int isis_sock_init </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *&#160;</td>
          <td class="paramname"><em>circuit</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__dlpi_8c_source.html#l00489">489</a> of file <a class="el" href="isis__dlpi_8c_source.html">isis_dlpi.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> retval = <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;

  <span class="keywordflow">if</span> (<a class="code" href="isis__bpf_8c.html#a4af776b1b8693eb5cb5d20b25abb4680">isisd_privs</a>.<a class="code" href="structzebra__privs__t.html#a0c59dbc0ec6187b60a824ec421cc34c1">change</a> (<a class="code" href="privs_8h.html#aae029fe88e2d02bee4d46a2f458bd3e5a5395269196ee9bd07257f8b2b35c25fa">ZPRIVS_RAISE</a>))
    <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;%s: could not raise privs, %s&quot;</span>, __func__, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));

  retval = <a class="code" href="isis__dlpi_8c.html#a44a3208cfbc4e64e694fe5c6b4dd66d0">open_dlpi_dev</a> (circuit);

  <span class="keywordflow">if</span> (retval != <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>)
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;%s: could not initialize the socket&quot;</span>, __func__);
      <span class="keywordflow">goto</span> end;
    }

  <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a569e39bbf7fafd533eae2eeafa671b8c">circ_type</a> == <a class="code" href="isis__circuit_8h.html#a01a94c5f24c88efb64f791a749ae8f95">CIRCUIT_T_BROADCAST</a>)
    {
      circuit-&gt;<a class="code" href="structisis__circuit.html#af17faf994f21d75da89129ed100cb71d">tx</a> = <a class="code" href="isis__bpf_8c.html#aa14af084fa2a0eecae13e4ec0f2ccb37">isis_send_pdu_bcast</a>;
      circuit-&gt;<a class="code" href="structisis__circuit.html#ae53bfd73cd6f9a69f392c645c4ccce7c">rx</a> = <a class="code" href="isis__bpf_8c.html#a5f85f514b1239ab33e4fdeed003de800">isis_recv_pdu_bcast</a>;
    }
  <span class="keywordflow">else</span>
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;isis_sock_init(): unknown circuit type&quot;</span>);
      retval = <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
      <span class="keywordflow">goto</span> end;
    }

end:
  <span class="keywordflow">if</span> (<a class="code" href="isis__bpf_8c.html#a4af776b1b8693eb5cb5d20b25abb4680">isisd_privs</a>.<a class="code" href="structzebra__privs__t.html#a0c59dbc0ec6187b60a824ec421cc34c1">change</a> (<a class="code" href="privs_8h.html#aae029fe88e2d02bee4d46a2f458bd3e5a7da2c6956cf712f8adc04ff2b0f072c5">ZPRIVS_LOWER</a>))
    <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;%s: could not lower privs, %s&quot;</span>, __func__, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));

  <span class="keywordflow">return</span> retval;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a44a3208cfbc4e64e694fe5c6b4dd66d0"></a><!-- doxytag: member="isis_dlpi.c::open_dlpi_dev" ref="a44a3208cfbc4e64e694fe5c6b4dd66d0" args="(struct isis_circuit *circuit)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static int open_dlpi_dev </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structisis__circuit.html">isis_circuit</a> *&#160;</td>
          <td class="paramname"><em>circuit</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__dlpi_8c_source.html#l00303">303</a> of file <a class="el" href="isis__dlpi_8c_source.html">isis_dlpi.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> fd, unit, retval;
  <span class="keywordtype">char</span> devpath[MAXPATHLEN];
  dl_info_ack_t *dia = (dl_info_ack_t *)<a class="code" href="isis__dlpi_8c.html#a1aeff07baec4559bb626ac35baed866e">dlpi_ctl</a>;
  ssize_t acklen;

  <span class="comment">/* Only broadcast-type are supported at the moment */</span>
  <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a569e39bbf7fafd533eae2eeafa671b8c">circ_type</a> != <a class="code" href="isis__circuit_8h.html#a01a94c5f24c88efb64f791a749ae8f95">CIRCUIT_T_BROADCAST</a>)
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;%s: non-broadcast interface %s&quot;</span>, __func__,
    circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
      <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
    }
  
  <span class="comment">/* Try the vanity node first, if permitted */</span>
  <span class="keywordflow">if</span> (<a class="code" href="getopt_8c.html#aee28fd8a0e40b6d958f7d20348e45368">getenv</a>(<span class="stringliteral">&quot;DLPI_DEVONLY&quot;</span>) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
      (void) <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a> (devpath, <span class="keyword">sizeof</span>(devpath), <span class="stringliteral">&quot;/dev/net/%s&quot;</span>,
                      circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
      fd = <a class="code" href="isis__dlpi_8c.html#a270ce846ed003f419a712643f200ff0a">dlpiopen</a> (devpath, &amp;acklen);
    }
  
  <span class="comment">/* Now try as an ordinary Style 1 node */</span>
  <span class="keywordflow">if</span> (fd == -1)
    {
      (void) <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a> (devpath, <span class="keyword">sizeof</span> (devpath), <span class="stringliteral">&quot;/dev/%s&quot;</span>,
                      circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
      unit = -1;
      fd = <a class="code" href="isis__dlpi_8c.html#a270ce846ed003f419a712643f200ff0a">dlpiopen</a> (devpath, &amp;acklen);
    }

  <span class="comment">/* If that fails, try again as Style 2 */</span>
  <span class="keywordflow">if</span> (fd == -1)
    {
      <span class="keywordtype">char</span> *cp;

      cp = devpath + strlen (devpath);
      <span class="keywordflow">while</span> (--cp &gt;= devpath &amp;&amp; isdigit(*cp))
    ;
      unit = strtol(cp, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0);
      *cp = <span class="charliteral">&#39;\0&#39;</span>;
      fd = <a class="code" href="isis__dlpi_8c.html#a270ce846ed003f419a712643f200ff0a">dlpiopen</a> (devpath, &amp;acklen);

      <span class="comment">/* If that too fails, then the device really doesn&#39;t exist */</span>
      <span class="keywordflow">if</span> (fd == -1)
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;%s: unknown interface %s&quot;</span>, __func__,
        circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
      <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
    }

      <span class="comment">/* Double check the DLPI style */</span>
      <span class="keywordflow">if</span> (dia-&gt;dl_provider_style != DL_STYLE2)
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;open_dlpi_dev(): interface %s: %s is not style 2&quot;</span>,
        circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, devpath);
      close (fd);
      <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
    }

      <span class="comment">/* If it succeeds, then we need to attach to the unit specified */</span>
      <a class="code" href="isis__dlpi_8c.html#a3de314a03340559f710d2a07b14e9c11">dlpiattach</a> (fd, unit);

      <span class="comment">/* Reget the information, as it may be different per node */</span>
      <span class="keywordflow">if</span> ((acklen = <a class="code" href="isis__dlpi_8c.html#a41ce606f13167bcb5e76124b70f6f7fc">dlpiinfo</a> (fd)) == -1)
    {
      close (fd);
      <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
    }
    }
  <span class="keywordflow">else</span>
    {
      <span class="comment">/* Double check the DLPI style */</span>
      <span class="keywordflow">if</span> (dia-&gt;dl_provider_style != DL_STYLE1)
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;open_dlpi_dev(): interface %s: %s is not style 1&quot;</span>,
        circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, devpath);
      close (fd);
      <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
    }
    }

  <span class="comment">/* Check that the interface we&#39;ve got is the kind we expect */</span>
  <span class="keywordflow">if</span> ((dia-&gt;dl_sap_length != 2 &amp;&amp; dia-&gt;dl_sap_length != -2) ||
    dia-&gt;dl_service_mode != DL_CLDLS || dia-&gt;dl_addr_length != ETHERADDRL + 2 ||
    dia-&gt;dl_brdcst_addr_length != ETHERADDRL)
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;%s: unsupported interface type for %s&quot;</span>, __func__,
    circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
      close (fd);
      <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
    }
  <span class="keywordflow">switch</span> (dia-&gt;dl_mac_type)
    {
    <span class="keywordflow">case</span> DL_CSMACD:
    <span class="keywordflow">case</span> DL_ETHER:
    <span class="keywordflow">case</span> DL_100VG:
    <span class="keywordflow">case</span> DL_100VGTPR:
    <span class="keywordflow">case</span> DL_ETH_CSMA:
    <span class="keywordflow">case</span> DL_100BT:
      <span class="keywordflow">break</span>;
    <span class="keywordflow">default</span>:
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;%s: unexpected mac type on %s: %d&quot;</span>, __func__,
    circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, dia-&gt;dl_mac_type);
      close (fd);
      <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
    }

  circuit-&gt;<a class="code" href="structisis__circuit.html#a19e0eff1c7b91727cd7bf76f204425c4">sap_length</a> = dia-&gt;dl_sap_length;

  <span class="comment">/*</span>
<span class="comment">   * The local hardware address is something that should be provided by way of</span>
<span class="comment">   * sockaddr_dl for the interface, but isn&#39;t on Solaris.  We set it here based</span>
<span class="comment">   * on DLPI&#39;s reported address to avoid roto-tilling the world.</span>
<span class="comment">   * (Note that isis_circuit_if_add on Solaris doesn&#39;t set the snpa.)</span>
<span class="comment">   *</span>
<span class="comment">   * Unfortunately, GLD is broken and doesn&#39;t provide the address after attach,</span>
<span class="comment">   * so we need to be careful and use DL_PHYS_ADDR_REQ instead.</span>
<span class="comment">   */</span>
  <span class="keywordflow">if</span> (<a class="code" href="isis__dlpi_8c.html#afd8267e7cc94901c5f0a8eda64df79dc">dlpiaddr</a> (fd, circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#ac7adabf9b24b03c93e73bb9b03c2192b">snpa</a>) == -1)
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;open_dlpi_dev(): interface %s: unable to get MAC address&quot;</span>,
    circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
      close (fd);
      <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
    }

  <span class="comment">/* Now bind to SAP 0.  This gives us 802-type traffic. */</span>
  <span class="keywordflow">if</span> (<a class="code" href="isis__dlpi_8c.html#acb6ea6addb4a634c7bcc4c8fa8a7a7c2">dlpibind</a> (fd) == -1)
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;%s: cannot bind SAP 0 on %s&quot;</span>, __func__,
    circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
      close (fd);
      <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
    }

  <span class="comment">/*</span>
<span class="comment">   * Join to multicast groups according to</span>
<span class="comment">   * 8.4.2 - Broadcast subnetwork IIH PDUs</span>
<span class="comment">   */</span>
  retval = 0;
  <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#ab222d6d0b054faa159d72bcb9768b3fb">circuit_is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>)
    {
      retval |= <a class="code" href="isis__dlpi_8c.html#a6a8a477b6d7f04d954bfc5c8e0a80715">dlpimcast</a> (fd, <a class="code" href="isis__bpf_8c.html#a564f249d5a142831ee4e6f6cd2ecc396">ALL_L1_ISS</a>);
      retval |= <a class="code" href="isis__dlpi_8c.html#a6a8a477b6d7f04d954bfc5c8e0a80715">dlpimcast</a> (fd, <a class="code" href="isis__bpf_8c.html#a0a18f0f862f0a8eed7bf2b6e59483166">ALL_ISS</a>);
    }
  <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#ab222d6d0b054faa159d72bcb9768b3fb">circuit_is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a9daa7fbf09b604c718f3bbe189aedd1a">IS_LEVEL_2</a>)
    retval |= <a class="code" href="isis__dlpi_8c.html#a6a8a477b6d7f04d954bfc5c8e0a80715">dlpimcast</a> (fd, <a class="code" href="isis__bpf_8c.html#a7b5f2cee21b83e1734bd7203f23262aa">ALL_L2_ISS</a>);

  <span class="keywordflow">if</span> (retval != 0)
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;%s: unable to join multicast on %s&quot;</span>, __func__,
    circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
      close (fd);
      <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
    }

  <span class="comment">/* Push on the packet filter to avoid stray 802 packets */</span>
  <span class="keywordflow">if</span> (ioctl (fd, I_PUSH, <span class="stringliteral">&quot;pfmod&quot;</span>) == 0)
    {
      <span class="keyword">struct </span>packetfilt pfil;
      <span class="keyword">struct </span>strioctl sioc;

      pfil.Pf_Priority = 0;
      pfil.Pf_FilterLen = <span class="keyword">sizeof</span> (<a class="code" href="isis__dlpi_8c.html#aa0aac14020dff7c0c13453d62b55d6b4">pf_filter</a>) / <span class="keyword">sizeof</span> (u_short);
      <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (pfil.Pf_Filter, <a class="code" href="isis__dlpi_8c.html#aa0aac14020dff7c0c13453d62b55d6b4">pf_filter</a>, sizeof (<a class="code" href="isis__dlpi_8c.html#aa0aac14020dff7c0c13453d62b55d6b4">pf_filter</a>));
      <span class="comment">/* pfmod does not support transparent ioctls */</span>
      sioc.ic_cmd = PFIOCSETF;
      sioc.ic_timout = 5;
      sioc.ic_len = <span class="keyword">sizeof</span> (<span class="keyword">struct </span>packetfilt);
      sioc.ic_dp = (<span class="keywordtype">char</span> *)&amp;pfil;
      <span class="keywordflow">if</span> (ioctl (fd, I_STR, &amp;sioc) == -1)
         <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a>(<span class="stringliteral">&quot;%s: could not perform PF_IOCSETF on %s&quot;</span>,
           __func__, circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>); 
    }

  circuit-&gt;<a class="code" href="structisis__circuit.html#a2fa1849a71a356f206776c2329f27dbc">fd</a> = fd;

  <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
}
</pre></div>
</div>
</div>
<hr/><h2>Variable Documentation</h2>
<a class="anchor" id="a5e7d2a4d58b2c7dfb7242f15ca442246"></a><!-- doxytag: member="isis_dlpi.c::ALL_ESS" ref="a5e7d2a4d58b2c7dfb7242f15ca442246" args="[6]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">u_char <a class="el" href="isis__pfpacket_8c.html#a5e7d2a4d58b2c7dfb7242f15ca442246">ALL_ESS</a>[6] = { 0x09, 0x00, 0x2B, 0x00, 0x00, 0x04 }</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__dlpi_8c_source.html#l00062">62</a> of file <a class="el" href="isis__dlpi_8c_source.html">isis_dlpi.c</a>.</p>

</div>
</div>
<a class="anchor" id="a0a18f0f862f0a8eed7bf2b6e59483166"></a><!-- doxytag: member="isis_dlpi.c::ALL_ISS" ref="a0a18f0f862f0a8eed7bf2b6e59483166" args="[6]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">u_char <a class="el" href="isis__pfpacket_8c.html#a0a18f0f862f0a8eed7bf2b6e59483166">ALL_ISS</a>[6] = { 0x09, 0x00, 0x2B, 0x00, 0x00, 0x05 }</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__dlpi_8c_source.html#l00061">61</a> of file <a class="el" href="isis__dlpi_8c_source.html">isis_dlpi.c</a>.</p>

</div>
</div>
<a class="anchor" id="a564f249d5a142831ee4e6f6cd2ecc396"></a><!-- doxytag: member="isis_dlpi.c::ALL_L1_ISS" ref="a564f249d5a142831ee4e6f6cd2ecc396" args="[6]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">u_char <a class="el" href="isis__pfpacket_8c.html#a564f249d5a142831ee4e6f6cd2ecc396">ALL_L1_ISS</a>[6] = { 0x01, 0x80, 0xC2, 0x00, 0x00, 0x14 }</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__dlpi_8c_source.html#l00059">59</a> of file <a class="el" href="isis__dlpi_8c_source.html">isis_dlpi.c</a>.</p>

</div>
</div>
<a class="anchor" id="a7b5f2cee21b83e1734bd7203f23262aa"></a><!-- doxytag: member="isis_dlpi.c::ALL_L2_ISS" ref="a7b5f2cee21b83e1734bd7203f23262aa" args="[6]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">u_char <a class="el" href="isis__pfpacket_8c.html#a7b5f2cee21b83e1734bd7203f23262aa">ALL_L2_ISS</a>[6] = { 0x01, 0x80, 0xC2, 0x00, 0x00, 0x15 }</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__dlpi_8c_source.html#l00060">60</a> of file <a class="el" href="isis__dlpi_8c_source.html">isis_dlpi.c</a>.</p>

</div>
</div>
<a class="anchor" id="a1aeff07baec4559bb626ac35baed866e"></a><!-- doxytag: member="isis_dlpi.c::dlpi_ctl" ref="a1aeff07baec4559bb626ac35baed866e" args="[1024]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">t_uscalar_t <a class="el" href="isis__dlpi_8c.html#a1aeff07baec4559bb626ac35baed866e">dlpi_ctl</a>[1024]<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__dlpi_8c_source.html#l00052">52</a> of file <a class="el" href="isis__dlpi_8c_source.html">isis_dlpi.c</a>.</p>

</div>
</div>
<a class="anchor" id="a4af776b1b8693eb5cb5d20b25abb4680"></a><!-- doxytag: member="isis_dlpi.c::isisd_privs" ref="a4af776b1b8693eb5cb5d20b25abb4680" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structzebra__privs__t.html">zebra_privs_t</a> <a class="el" href="isis__pfpacket_8c.html#a4af776b1b8693eb5cb5d20b25abb4680">isisd_privs</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__main_8c_source.html#l00058">58</a> of file <a class="el" href="isis__main_8c_source.html">isis_main.c</a>.</p>

</div>
</div>
<a class="anchor" id="aa0aac14020dff7c0c13453d62b55d6b4"></a><!-- doxytag: member="isis_dlpi.c::pf_filter" ref="aa0aac14020dff7c0c13453d62b55d6b4" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">u_short <a class="el" href="isis__dlpi_8c.html#aa0aac14020dff7c0c13453d62b55d6b4">pf_filter</a>[]<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment">
{
  ENF_PUSHWORD + 0,     
  ENF_PUSHLIT | ENF_CAND,   
  <a class="code" href="isis__constants_8h.html#a7dc7c0809fa809eb5774a4356c1368db">ISO_SAP</a> | (<a class="code" href="isis__constants_8h.html#a7dc7c0809fa809eb5774a4356c1368db">ISO_SAP</a> &lt;&lt; 8),
  ENF_PUSHWORD + 1,     
  ENF_PUSHLIT | ENF_AND,    



  0x00FF,

  ENF_PUSHLIT | ENF_CAND,   



  0x0003

}
</pre></div>
<p>Definition at line <a class="el" href="isis__dlpi_8c_source.html#l00066">66</a> of file <a class="el" href="isis__dlpi_8c_source.html">isis_dlpi.c</a>.</p>

</div>
</div>
<a class="anchor" id="a94d3ca3033149dd40c1a9b1eeedf79c7"></a><!-- doxytag: member="isis_dlpi.c::sock_buff" ref="a94d3ca3033149dd40c1a9b1eeedf79c7" args="[8192]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">u_char <a class="el" href="isis__pfpacket_8c.html#a23dc4e080e0af80df140a0a1b993598e">sock_buff</a>[8192]<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="isis__dlpi_8c_source.html#l00064">64</a> of file <a class="el" href="isis__dlpi_8c_source.html">isis_dlpi.c</a>.</p>

</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="isis__dlpi_8c.html">isis_dlpi.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:20 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
