<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: lib/sockunion.h File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('sockunion_8h.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Defines</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">lib/sockunion.h File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><img src="sockunion_8h__dep__incl.png" border="0" usemap="#lib_2sockunion_8hdep" alt=""/></div>
<map name="lib_2sockunion_8hdep" id="lib_2sockunion_8hdep">
<area shape="rect" id="node3" href="bgp__debug_8c.html" title="bgpd/bgp_debug.c" alt="" coords="1120,155,1259,181"/><area shape="rect" id="node5" href="bgp__dump_8c.html" title="bgpd/bgp_dump.c" alt="" coords="1283,155,1416,181"/><area shape="rect" id="node7" href="bgp__fsm_8c.html" title="bgpd/bgp_fsm.c" alt="" coords="5,155,125,181"/><area shape="rect" id="node9" href="bgp__network_8c.html" title="bgpd/bgp_network.c" alt="" coords="2701,155,2848,181"/><area shape="rect" id="node11" href="bgp__packet_8c.html" title="bgpd/bgp_packet.c" alt="" coords="150,155,289,181"/><area shape="rect" id="node13" href="bgpd_8h.html" title="bgpd/bgpd.h" alt="" coords="1477,80,1576,107"/><area shape="rect" id="node36" href="bgp__route_8c.html" title="bgpd/bgp_route.c" alt="" coords="629,155,760,181"/><area shape="rect" id="node38" href="bgp__routemap_8c.html" title="bgpd/bgp_routemap.c" alt="" coords="784,155,941,181"/><area shape="rect" id="node40" href="bgp__table_8c.html" title="bgpd/bgp_table.c" alt="" coords="965,155,1096,181"/><area shape="rect" id="node42" href="bgp__zebra_8c.html" title="bgpd/bgp_zebra.c" alt="" coords="2421,155,2552,181"/><area shape="rect" id="node44" href="bgpd_8c.html" title="bgpd/bgpd.c" alt="" coords="2577,155,2676,181"/><area shape="rect" id="node51" href="prefix_8h.html" title="lib/prefix.h" alt="" coords="3400,80,3485,107"/><area shape="rect" id="node69" href="filter_8c.html" title="lib/filter.c" alt="" coords="2873,155,2951,181"/><area shape="rect" id="node71" href="if_8c.html" title="lib/if.c" alt="" coords="2975,155,3032,181"/><area shape="rect" id="node73" href="plist_8c.html" title="lib/plist.c" alt="" coords="3057,155,3132,181"/><area shape="rect" id="node75" href="prefix_8c.html" title="lib/prefix.c" alt="" coords="3157,155,3243,181"/><area shape="rect" id="node77" href="sockunion_8c.html" title="lib/sockunion.c" alt="" coords="3267,155,3377,181"/><area shape="rect" id="node79" href="table_8c.html" title="lib/table.c" alt="" coords="3402,155,3483,181"/><area shape="rect" id="node81" href="vty_8c.html" title="lib/vty.c" alt="" coords="3508,155,3577,181"/><area shape="rect" id="node83" href="ospf__lsa_8c.html" title="ospfd/ospf_lsa.c" alt="" coords="3601,155,3724,181"/><area shape="rect" id="node85" href="ospf__network_8c.html" title="ospfd/ospf_network.c" alt="" coords="5767,155,5921,181"/><area shape="rect" id="node87" href="ospf__packet_8c.html" title="ospfd/ospf_packet.c" alt="" coords="5945,155,6092,181"/><area shape="rect" id="node89" href="ospf__route_8c.html" title="ospfd/ospf_route.c" alt="" coords="3749,155,3885,181"/><area shape="rect" id="node91" href="ospf__spf_8c.html" title="ospfd/ospf_spf.c" alt="" coords="3910,155,4033,181"/><area shape="rect" id="node93" href="ospfd_8c.html" title="ospfd/ospfd.c" alt="" coords="6116,155,6223,181"/><area shape="rect" id="node95" href="rip__interface_8c.html" title="ripd/rip_interface.c" alt="" coords="6247,155,6381,181"/><area shape="rect" id="node97" href="rip__routemap_8c.html" title="ripd/rip_routemap.c" alt="" coords="4059,155,4197,181"/><area shape="rect" id="node99" href="ripd_8c.html" title="ripd/ripd.c" alt="" coords="6407,155,6489,181"/><area shape="rect" id="node101" href="ripng__routemap_8c.html" title="ripngd/ripng_routemap.c" alt="" coords="4222,155,4391,181"/><area shape="rect" id="node103" href="if__ioctl_8c.html" title="zebra/if_ioctl.c" alt="" coords="4416,155,4525,181"/><area shape="rect" id="node105" href="if__ioctl__solaris_8c.html" title="zebra/if_ioctl_solaris.c" alt="" coords="4549,155,4704,181"/><area shape="rect" id="node107" href="if__sysctl_8c.html" title="zebra/if_sysctl.c" alt="" coords="4729,155,4847,181"/><area shape="rect" id="node109" href="interface_8c.html" title="zebra/interface.c" alt="" coords="4872,155,4995,181"/><area shape="rect" id="node111" href="kernel__socket_8c.html" title="zebra/kernel_socket.c" alt="" coords="5019,155,5172,181"/><area shape="rect" id="node113" href="router-id_8c.html" title="zebra/router&#45;id.c" alt="" coords="5197,155,5317,181"/><area shape="rect" id="node115" href="rt__socket_8c.html" title="zebra/rt_socket.c" alt="" coords="5342,155,5468,181"/><area shape="rect" id="node117" href="zebra__rib_8c.html" title="zebra/zebra_rib.c" alt="" coords="5493,155,5616,181"/><area shape="rect" id="node119" href="zserv_8c.html" title="zebra/zserv.c" alt="" coords="5641,155,5743,181"/><area shape="rect" id="node125" href="sockopt_8h.html" title="lib/sockopt.h" alt="" coords="6120,80,6219,107"/><area shape="rect" id="node128" href="sockopt_8c.html" title="lib/sockopt.c" alt="" coords="6513,155,6612,181"/><area shape="rect" id="node130" href="ospf6__network_8c.html" title="ospf6d/ospf6_network.c" alt="" coords="6636,155,6804,181"/><area shape="rect" id="node15" href="bgp__advertise_8c.html" title="bgpd/bgp_advertise.c" alt="" coords="1789,155,1944,181"/><area shape="rect" id="node17" href="bgp__aspath_8c.html" title="bgpd/bgp_aspath.c" alt="" coords="314,155,453,181"/><area shape="rect" id="node19" href="bgp__attr_8c.html" title="bgpd/bgp_attr.c" alt="" coords="1969,155,2089,181"/><area shape="rect" id="node21" href="bgp__clist_8c.html" title="bgpd/bgp_clist.c" alt="" coords="2114,155,2237,181"/><area shape="rect" id="node23" href="bgp__damp_8c.html" title="bgpd/bgp_damp.c" alt="" coords="2263,155,2396,181"/><area shape="rect" id="node27" href="bgp__ecommunity_8c.html" title="bgpd/bgp_ecommunity.c" alt="" coords="1440,155,1613,181"/><area shape="rect" id="node29" href="bgp__filter_8c.html" title="bgpd/bgp_filter.c" alt="" coords="478,155,604,181"/><area shape="rect" id="node32" href="bgp__main_8c.html" title="bgpd/bgp_main.c" alt="" coords="1638,155,1764,181"/></map>
</div>
</div>
<p><a href="sockunion_8h_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">union &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="unionsockunion.html">sockunion</a></td></tr>
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#a38959c7052325dcfdae19df19cd215f6">AF_INET_UNION</a>&#160;&#160;&#160;AF_INET</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#acdf2761ecf6723841896a77e9059e810">SU_ADDRSTRLEN</a>&#160;&#160;&#160;46</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#a054cf6fda7e526f269ca64bb1002c067">IN6_LINKLOCAL_IFINDEX</a>(a)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#ac5e492dc1d10f95eb64eaac05ec9bab0">SET_IN6_LINKLOCAL_IFINDEX</a>(a, <a class="el" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#a096b51451081d362cec7ec3ed47793ba">sock2ip</a>(<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)&#160;&#160;&#160;(((struct sockaddr_in *)(<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>))-&gt;sin_addr.s_addr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#ac361ce9c3dca3e5b0e903c2c4fcc300c">sockunion_family</a>(<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)&#160;&#160;&#160;(<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)-&gt;sa.sa_family</td></tr>
<tr><td colspan="2"><h2><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#ab1d3499888de36b96c23f98e283c1b6e">connect_result</a> { <a class="el" href="sockunion_8h.html#ab1d3499888de36b96c23f98e283c1b6ea047b71b6325b28f03d8ac558983d7e88">connect_error</a>, 
<a class="el" href="sockunion_8h.html#ab1d3499888de36b96c23f98e283c1b6ea851cdcb3c5b666dc182f4b6136a6fe7d">connect_success</a>, 
<a class="el" href="sockunion_8h.html#ab1d3499888de36b96c23f98e283c1b6eaefd11a166b80dff3244284fa5ece9d28">connect_in_progress</a>
 }</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#aa2fe8be1262f1a777e63630b484a16e9">str2sockunion</a> (const char *, union <a class="el" href="unionsockunion.html">sockunion</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#a7854c1915abe2dec3dc19430fe94db3f">sockunion2str</a> (union <a class="el" href="unionsockunion.html">sockunion</a> *, char *, size_t)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#a8bfcd6479085cafb7c0a5e95295a77ae">sockunion_cmp</a> (union <a class="el" href="unionsockunion.html">sockunion</a> *, union <a class="el" href="unionsockunion.html">sockunion</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#aea4c9e99cb8b9151e70156e81d27afcd">sockunion_same</a> (union <a class="el" href="unionsockunion.html">sockunion</a> *, union <a class="el" href="unionsockunion.html">sockunion</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#a81204a150d1d4f669bb69fdb0915a727">sockunion_su2str</a> (union <a class="el" href="unionsockunion.html">sockunion</a> *su)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">union <a class="el" href="unionsockunion.html">sockunion</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#a3dffcd96d7fff7136a7a35d44727ca0d">sockunion_str2su</a> (const char *<a class="el" href="ripng__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct in_addr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#a6c86d86e2130d06c82ea70994c9b1edd">sockunion_get_in_addr</a> (union <a class="el" href="unionsockunion.html">sockunion</a> *su)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#a125386b8951d21cb8b31fec8d20db227">sockunion_accept</a> (int sock, union <a class="el" href="unionsockunion.html">sockunion</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#a037dc60d4372c5d30407dacd7a64604c">sockunion_stream_socket</a> (union <a class="el" href="unionsockunion.html">sockunion</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#a5b63ed0335c4a3129bf04afe304d0d7a">sockopt_reuseaddr</a> (int)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#a9388885893d2dd27e8666c70d42904e2">sockopt_reuseport</a> (int)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#a5727a843b18313ae5834935819864404">sockunion_bind</a> (int sock, union <a class="el" href="unionsockunion.html">sockunion</a> *, unsigned short, union <a class="el" href="unionsockunion.html">sockunion</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#abaf662d1724513469c375f264ccb4668">sockopt_ttl</a> (int family, int sock, int ttl)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#a75e4776386c27ca33e5c5d86eafd4b99">sockunion_socket</a> (union <a class="el" href="unionsockunion.html">sockunion</a> *su)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#ab068bf6434ba4369835fe41ab4848f66">inet_sutop</a> (union <a class="el" href="unionsockunion.html">sockunion</a> *su, char *<a class="el" href="ripng__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum <a class="el" href="sockunion_8h.html#ab1d3499888de36b96c23f98e283c1b6e">connect_result</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#a4bc2d6c6a31d6799763a90fe9d6b9d02">sockunion_connect</a> (int fd, union <a class="el" href="unionsockunion.html">sockunion</a> *su, unsigned short port, unsigned int)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">union <a class="el" href="unionsockunion.html">sockunion</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#aae3ab4f46478d71d0793590049c49001">sockunion_getsockname</a> (int)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">union <a class="el" href="unionsockunion.html">sockunion</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#abc69d0f910e8c668273510885241e5fc">sockunion_getpeername</a> (int)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">union <a class="el" href="unionsockunion.html">sockunion</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#a04fe5a597afbb156389445e8e77b6c27">sockunion_dup</a> (union <a class="el" href="unionsockunion.html">sockunion</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#a052220433fece5546a7ba08c97ddc8b7">sockunion_free</a> (union <a class="el" href="unionsockunion.html">sockunion</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#a5bfb767e8fa3f9ff5d2a1e19d71791f4">inet_ntop</a> (int family, const void *addrptr, char *strptr, size_t len)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#ac13c2042641ea5031bc7e244e8061b84">inet_pton</a> (int family, const char *strptr, void *addrptr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sockunion_8h.html#a4203367afaacee3fa5cc1626b2ef63c0">inet_aton</a> (const char *cp, struct in_addr *inaddr)</td></tr>
</table>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="a38959c7052325dcfdae19df19cd215f6"></a><!-- doxytag: member="sockunion.h::AF_INET_UNION" ref="a38959c7052325dcfdae19df19cd215f6" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define AF_INET_UNION&#160;&#160;&#160;AF_INET</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8h_source.html#l00061">61</a> of file <a class="el" href="sockunion_8h_source.html">sockunion.h</a>.</p>

</div>
</div>
<a class="anchor" id="a054cf6fda7e526f269ca64bb1002c067"></a><!-- doxytag: member="sockunion.h::IN6_LINKLOCAL_IFINDEX" ref="a054cf6fda7e526f269ca64bb1002c067" args="(a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IN6_LINKLOCAL_IFINDEX</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8h_source.html#l00077">77</a> of file <a class="el" href="sockunion_8h_source.html">sockunion.h</a>.</p>

</div>
</div>
<a class="anchor" id="ac5e492dc1d10f95eb64eaac05ec9bab0"></a><!-- doxytag: member="sockunion.h::SET_IN6_LINKLOCAL_IFINDEX" ref="ac5e492dc1d10f95eb64eaac05ec9bab0" args="(a, i)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SET_IN6_LINKLOCAL_IFINDEX</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8h_source.html#l00078">78</a> of file <a class="el" href="sockunion_8h_source.html">sockunion.h</a>.</p>

</div>
</div>
<a class="anchor" id="a096b51451081d362cec7ec3ed47793ba"></a><!-- doxytag: member="sockunion.h::sock2ip" ref="a096b51451081d362cec7ec3ed47793ba" args="(X)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define sock2ip</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a></td><td>)</td>
          <td>&#160;&#160;&#160;(((struct sockaddr_in *)(<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>))-&gt;sin_addr.s_addr)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8h_source.html#l00082">82</a> of file <a class="el" href="sockunion_8h_source.html">sockunion.h</a>.</p>

</div>
</div>
<a class="anchor" id="ac361ce9c3dca3e5b0e903c2c4fcc300c"></a><!-- doxytag: member="sockunion.h::sockunion_family" ref="ac361ce9c3dca3e5b0e903c2c4fcc300c" args="(X)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define sockunion_family</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a></td><td>)</td>
          <td>&#160;&#160;&#160;(<a class="el" href="spgrid_8c.html#a90fd6c5f495a36ebf73ab5d2f1c21b47">X</a>)-&gt;sa.sa_family</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8h_source.html#l00087">87</a> of file <a class="el" href="sockunion_8h_source.html">sockunion.h</a>.</p>

</div>
</div>
<a class="anchor" id="acdf2761ecf6723841896a77e9059e810"></a><!-- doxytag: member="sockunion.h::SU_ADDRSTRLEN" ref="acdf2761ecf6723841896a77e9059e810" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SU_ADDRSTRLEN&#160;&#160;&#160;46</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8h_source.html#l00065">65</a> of file <a class="el" href="sockunion_8h_source.html">sockunion.h</a>.</p>

</div>
</div>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="ab1d3499888de36b96c23f98e283c1b6e"></a><!-- doxytag: member="sockunion.h::connect_result" ref="ab1d3499888de36b96c23f98e283c1b6e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="sockunion_8h.html#ab1d3499888de36b96c23f98e283c1b6e">connect_result</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="ab1d3499888de36b96c23f98e283c1b6ea047b71b6325b28f03d8ac558983d7e88"></a><!-- doxytag: member="connect_error" ref="ab1d3499888de36b96c23f98e283c1b6ea047b71b6325b28f03d8ac558983d7e88" args="" -->connect_error</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ab1d3499888de36b96c23f98e283c1b6ea851cdcb3c5b666dc182f4b6136a6fe7d"></a><!-- doxytag: member="connect_success" ref="ab1d3499888de36b96c23f98e283c1b6ea851cdcb3c5b666dc182f4b6136a6fe7d" args="" -->connect_success</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ab1d3499888de36b96c23f98e283c1b6eaefd11a166b80dff3244284fa5ece9d28"></a><!-- doxytag: member="connect_in_progress" ref="ab1d3499888de36b96c23f98e283c1b6eaefd11a166b80dff3244284fa5ece9d28" args="" -->connect_in_progress</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="sockunion_8h_source.html#l00050">50</a> of file <a class="el" href="sockunion_8h_source.html">sockunion.h</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="sockunion_8h.html#ab1d3499888de36b96c23f98e283c1b6ea047b71b6325b28f03d8ac558983d7e88">connect_error</a>,
  <a class="code" href="sockunion_8h.html#ab1d3499888de36b96c23f98e283c1b6ea851cdcb3c5b666dc182f4b6136a6fe7d">connect_success</a>,
  <a class="code" href="sockunion_8h.html#ab1d3499888de36b96c23f98e283c1b6eaefd11a166b80dff3244284fa5ece9d28">connect_in_progress</a>
};
</pre></div>
</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a4203367afaacee3fa5cc1626b2ef63c0"></a><!-- doxytag: member="sockunion.h::inet_aton" ref="a4203367afaacee3fa5cc1626b2ef63c0" args="(const char *cp, struct in_addr *inaddr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int inet_aton </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>cp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct in_addr *&#160;</td>
          <td class="paramname"><em>inaddr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8c_source.html#l00033">33</a> of file <a class="el" href="sockunion_8c_source.html">sockunion.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> dots = 0;
  <span class="keyword">register</span> u_long addr = 0;
  <span class="keyword">register</span> u_long <a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a> = 0, base = 10;

  <span class="keywordflow">do</span>
    {
      <span class="keyword">register</span> <span class="keywordtype">char</span> c = *cp;

      <span class="keywordflow">switch</span> (c)
    {
    <span class="keywordflow">case</span> <span class="charliteral">&#39;0&#39;</span>: <span class="keywordflow">case</span> <span class="charliteral">&#39;1&#39;</span>: <span class="keywordflow">case</span> <span class="charliteral">&#39;2&#39;</span>: <span class="keywordflow">case</span> <span class="charliteral">&#39;3&#39;</span>: <span class="keywordflow">case</span> <span class="charliteral">&#39;4&#39;</span>: <span class="keywordflow">case</span> <span class="charliteral">&#39;5&#39;</span>:
    <span class="keywordflow">case</span> <span class="charliteral">&#39;6&#39;</span>: <span class="keywordflow">case</span> <span class="charliteral">&#39;7&#39;</span>: <span class="keywordflow">case</span> <span class="charliteral">&#39;8&#39;</span>: <span class="keywordflow">case</span> <span class="charliteral">&#39;9&#39;</span>:
      val = (val * base) + (c - <span class="charliteral">&#39;0&#39;</span>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <span class="charliteral">&#39;.&#39;</span>:
      <span class="keywordflow">if</span> (++dots &gt; 3)
        <span class="keywordflow">return</span> 0;
    <span class="keywordflow">case</span> <span class="charliteral">&#39;\0&#39;</span>:
      <span class="keywordflow">if</span> (val &gt; 255)
        <span class="keywordflow">return</span> 0;
      addr = addr &lt;&lt; 8 | <a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>;
      val = 0;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">default</span>:
      <span class="keywordflow">return</span> 0;
    }
    } <span class="keywordflow">while</span> (*cp++) ;

  <span class="keywordflow">if</span> (dots &lt; 3)
    addr &lt;&lt;= 8 * (3 - dots);
  <span class="keywordflow">if</span> (inaddr)
    inaddr-&gt;s_addr = htonl (addr);
  <span class="keywordflow">return</span> 1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5bfb767e8fa3f9ff5d2a1e19d71791f4"></a><!-- doxytag: member="sockunion.h::inet_ntop" ref="a5bfb767e8fa3f9ff5d2a1e19d71791f4" args="(int family, const void *addrptr, char *strptr, size_t len)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* inet_ntop </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>family</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>addrptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>strptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8c_source.html#l00094">94</a> of file <a class="el" href="sockunion_8c_source.html">sockunion.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a> = (<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *) addrptr;

  <span class="keywordflow">if</span> (family == AF_INET) 
    {
      <span class="keywordtype">char</span> temp[<a class="code" href="prefix_8h.html#a93b37007689284fd9c4bde1a8f4b9199">INET_ADDRSTRLEN</a>];

      <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a>(temp, <span class="keyword">sizeof</span>(temp), <span class="stringliteral">&quot;%d.%d.%d.%d&quot;</span>, p[0], p[1], p[2], p[3]);

      <span class="keywordflow">if</span> (strlen(temp) &gt;= len) 
    {
      errno = ENOSPC;
      <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }
      strcpy(strptr, temp);
      <span class="keywordflow">return</span> strptr;
    }

  errno = EAFNOSUPPORT;
  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ac13c2042641ea5031bc7e244e8061b84"></a><!-- doxytag: member="sockunion.h::inet_pton" ref="ac13c2042641ea5031bc7e244e8061b84" args="(int family, const char *strptr, void *addrptr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int inet_pton </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>family</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>strptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>addrptr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8c_source.html#l00074">74</a> of file <a class="el" href="sockunion_8c_source.html">sockunion.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (family == AF_INET)
    {
      <span class="keyword">struct </span>in_addr in_val;

      <span class="keywordflow">if</span> (<a class="code" href="sockunion_8c.html#a4203367afaacee3fa5cc1626b2ef63c0">inet_aton</a> (strptr, &amp;in_val))
    {
      <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (addrptr, &amp;in_val, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> in_addr));
      <span class="keywordflow">return</span> 1;
    }
      <span class="keywordflow">return</span> 0;
    }
  errno = EAFNOSUPPORT;
  <span class="keywordflow">return</span> -1;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ab068bf6434ba4369835fe41ab4848f66"></a><!-- doxytag: member="sockunion.h::inet_sutop" ref="ab068bf6434ba4369835fe41ab4848f66" args="(union sockunion *su, char *str)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* inet_sutop </td>
          <td>(</td>
          <td class="paramtype">union <a class="el" href="unionsockunion.html">sockunion</a> *&#160;</td>
          <td class="paramname"><em>su</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>str</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8c_source.html#l00119">119</a> of file <a class="el" href="sockunion_8c_source.html">sockunion.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">switch</span> (su-&gt;<a class="code" href="unionsockunion.html#a696d7d44e90274cc3bb86231cd51cfd4">sa</a>.sa_family)
    {
    <span class="keywordflow">case</span> AF_INET:
      <a class="code" href="sockunion_8c.html#a5bfb767e8fa3f9ff5d2a1e19d71791f4">inet_ntop</a> (AF_INET, &amp;su-&gt;<a class="code" href="unionsockunion.html#a50fab1a37b798a49a085f78351680ab7">sin</a>.sin_addr, <a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, <a class="code" href="prefix_8h.html#a93b37007689284fd9c4bde1a8f4b9199">INET_ADDRSTRLEN</a>);
      <span class="keywordflow">break</span>;
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>    <span class="keywordflow">case</span> AF_INET6:
      <a class="code" href="sockunion_8c.html#a5bfb767e8fa3f9ff5d2a1e19d71791f4">inet_ntop</a> (AF_INET6, &amp;su-&gt;sin6.sin6_addr, <a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, <a class="code" href="prefix_8h.html#af776b22a727aae7c9f4d869d50df47e8">INET6_ADDRSTRLEN</a>);
      <span class="keywordflow">break</span>;
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
    }
  <span class="keywordflow">return</span> <a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5b63ed0335c4a3129bf04afe304d0d7a"></a><!-- doxytag: member="sockunion.h::sockopt_reuseaddr" ref="a5b63ed0335c4a3129bf04afe304d0d7a" args="(int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int sockopt_reuseaddr </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8c_source.html#l00456">456</a> of file <a class="el" href="sockunion_8c_source.html">sockunion.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret;
  <span class="keywordtype">int</span> on = 1;

  ret = setsockopt (sock, SOL_SOCKET, SO_REUSEADDR, 
            (<span class="keywordtype">void</span> *) &amp;on, <span class="keyword">sizeof</span> (on));
  <span class="keywordflow">if</span> (ret &lt; 0)
    {
      <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_WARNING, <span class="stringliteral">&quot;can&#39;t set sockopt SO_REUSEADDR to socket %d&quot;</span>, sock);
      <span class="keywordflow">return</span> -1;
    }
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9388885893d2dd27e8666c70d42904e2"></a><!-- doxytag: member="sockunion.h::sockopt_reuseport" ref="a9388885893d2dd27e8666c70d42904e2" args="(int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int sockopt_reuseport </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8c_source.html#l00489">489</a> of file <a class="el" href="sockunion_8c_source.html">sockunion.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="abaf662d1724513469c375f264ccb4668"></a><!-- doxytag: member="sockunion.h::sockopt_ttl" ref="abaf662d1724513469c375f264ccb4668" args="(int family, int sock, int ttl)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int sockopt_ttl </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>family</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ttl</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8c_source.html#l00496">496</a> of file <a class="el" href="sockunion_8c_source.html">sockunion.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret;

<span class="preprocessor">#ifdef IP_TTL</span>
<span class="preprocessor"></span>  <span class="keywordflow">if</span> (family == AF_INET)
    {
      ret = setsockopt (sock, IPPROTO_IP, IP_TTL, 
            (<span class="keywordtype">void</span> *) &amp;ttl, <span class="keyword">sizeof</span> (<span class="keywordtype">int</span>));
      <span class="keywordflow">if</span> (ret &lt; 0)
    {
      <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_WARNING, <span class="stringliteral">&quot;can&#39;t set sockopt IP_TTL %d to socket %d&quot;</span>, ttl, sock);
      <span class="keywordflow">return</span> -1;
    }
      <span class="keywordflow">return</span> 0;
    }
<span class="preprocessor">#endif </span><span class="comment">/* IP_TTL */</span>
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <span class="keywordflow">if</span> (family == AF_INET6)
    {
      ret = setsockopt (sock, IPPROTO_IPV6, IPV6_UNICAST_HOPS, 
            (<span class="keywordtype">void</span> *) &amp;ttl, <span class="keyword">sizeof</span> (<span class="keywordtype">int</span>));
      <span class="keywordflow">if</span> (ret &lt; 0)
    {
      <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_WARNING, <span class="stringliteral">&quot;can&#39;t set sockopt IPV6_UNICAST_HOPS %d to socket %d&quot;</span>,
            ttl, sock);
      <span class="keywordflow">return</span> -1;
    }
      <span class="keywordflow">return</span> 0;
    }
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a7854c1915abe2dec3dc19430fe94db3f"></a><!-- doxytag: member="sockunion.h::sockunion2str" ref="a7854c1915abe2dec3dc19430fe94db3f" args="(union sockunion *, char *, size_t)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* sockunion2str </td>
          <td>(</td>
          <td class="paramtype">union <a class="el" href="unionsockunion.html">sockunion</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8c_source.html#l00166">166</a> of file <a class="el" href="sockunion_8c_source.html">sockunion.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span>  (su-&gt;sa.sa_family == AF_INET)
    <span class="keywordflow">return</span> <a class="code" href="sockunion_8c.html#a5bfb767e8fa3f9ff5d2a1e19d71791f4">inet_ntop</a> (AF_INET, &amp;su-&gt;sin.sin_addr, buf, len);
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (su-&gt;sa.sa_family == AF_INET6)
    <span class="keywordflow">return</span> <a class="code" href="sockunion_8c.html#a5bfb767e8fa3f9ff5d2a1e19d71791f4">inet_ntop</a> (AF_INET6, &amp;su-&gt;sin6.sin6_addr, buf, len);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a125386b8951d21cb8b31fec8d20db227"></a><!-- doxytag: member="sockunion.h::sockunion_accept" ref="a125386b8951d21cb8b31fec8d20db227" args="(int sock, union sockunion *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int sockunion_accept </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">union <a class="el" href="unionsockunion.html">sockunion</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8c_source.html#l00266">266</a> of file <a class="el" href="sockunion_8c_source.html">sockunion.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="zebra_8h.html#a6b82106923cc13b3a9734520ecc29514">socklen_t</a> len;
  <span class="keywordtype">int</span> client_sock;

  len = <span class="keyword">sizeof</span> (<span class="keyword">union </span><a class="code" href="unionsockunion.html">sockunion</a>);
  client_sock = accept (sock, (<span class="keyword">struct</span> sockaddr *) su, &amp;len);
  
  <a class="code" href="sockunion_8c.html#a0ff4c72dee88c4c28b9705fe5fd64e73">sockunion_normalise_mapped</a> (su);
  <span class="keywordflow">return</span> client_sock;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a5727a843b18313ae5834935819864404"></a><!-- doxytag: member="sockunion.h::sockunion_bind" ref="a5727a843b18313ae5834935819864404" args="(int sock, union sockunion *, unsigned short, union sockunion *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int sockunion_bind </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>sock</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">union <a class="el" href="unionsockunion.html">sockunion</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>short</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">union <a class="el" href="unionsockunion.html">sockunion</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8c_source.html#l00412">412</a> of file <a class="el" href="sockunion_8c_source.html">sockunion.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> size = 0;
  <span class="keywordtype">int</span> ret;

  <span class="keywordflow">if</span> (su-&gt;sa.sa_family == AF_INET)
    {
      size = <span class="keyword">sizeof</span> (<span class="keyword">struct </span>sockaddr_in);
      su-&gt;sin.sin_port = htons (port);
<span class="preprocessor">#ifdef HAVE_STRUCT_SOCKADDR_IN_SIN_LEN</span>
<span class="preprocessor"></span>      su-&gt;sin.sin_len = size;
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_STRUCT_SOCKADDR_IN_SIN_LEN */</span>
      <span class="keywordflow">if</span> (su_addr == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    su-&gt;sin.sin_addr.s_addr = htonl (INADDR_ANY);
    }
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (su-&gt;sa.sa_family == AF_INET6)
    {
      size = <span class="keyword">sizeof</span> (<span class="keyword">struct </span>sockaddr_in6);
      su-&gt;sin6.sin6_port = htons (port);
<span class="preprocessor">#ifdef SIN6_LEN</span>
<span class="preprocessor"></span>      su-&gt;sin6.sin6_len = size;
<span class="preprocessor">#endif </span><span class="comment">/* SIN6_LEN */</span>
      <span class="keywordflow">if</span> (su_addr == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
    {
<span class="preprocessor">#if defined(LINUX_IPV6) || defined(NRL)</span>
<span class="preprocessor"></span>      memset (&amp;su-&gt;sin6.sin6_addr, 0, sizeof (<span class="keyword">struct</span> in6_addr));
<span class="preprocessor">#else</span>
<span class="preprocessor"></span>      su-&gt;sin6.sin6_addr = in6addr_any;
<span class="preprocessor">#endif </span><span class="comment">/* LINUX_IPV6 */</span>
    }
    }
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
  

  ret = bind (sock, (<span class="keyword">struct</span> sockaddr *)su, size);
  <span class="keywordflow">if</span> (ret &lt; 0)
    <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_WARNING, <span class="stringliteral">&quot;can&#39;t bind socket : %s&quot;</span>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));

  <span class="keywordflow">return</span> ret;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a8bfcd6479085cafb7c0a5e95295a77ae"></a><!-- doxytag: member="sockunion.h::sockunion_cmp" ref="a8bfcd6479085cafb7c0a5e95295a77ae" args="(union sockunion *, union sockunion *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int sockunion_cmp </td>
          <td>(</td>
          <td class="paramtype">union <a class="el" href="unionsockunion.html">sockunion</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">union <a class="el" href="unionsockunion.html">sockunion</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8c_source.html#l00710">710</a> of file <a class="el" href="sockunion_8c_source.html">sockunion.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (su1-&gt;sa.sa_family &gt; su2-&gt;sa.sa_family)
    <span class="keywordflow">return</span> 1;
  <span class="keywordflow">if</span> (su1-&gt;sa.sa_family &lt; su2-&gt;sa.sa_family)
    <span class="keywordflow">return</span> -1;

  <span class="keywordflow">if</span> (su1-&gt;sa.sa_family == AF_INET)
    {
      <span class="keywordflow">if</span> (ntohl (su1-&gt;sin.sin_addr.s_addr) == ntohl (su2-&gt;sin.sin_addr.s_addr))
    <span class="keywordflow">return</span> 0;
      <span class="keywordflow">if</span> (ntohl (su1-&gt;sin.sin_addr.s_addr) &gt; ntohl (su2-&gt;sin.sin_addr.s_addr))
    <span class="keywordflow">return</span> 1;
      <span class="keywordflow">else</span>
    <span class="keywordflow">return</span> -1;
    }
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <span class="keywordflow">if</span> (su1-&gt;sa.sa_family == AF_INET6)
    <span class="keywordflow">return</span> in6addr_cmp (&amp;su1-&gt;sin6.sin6_addr, &amp;su2-&gt;sin6.sin6_addr);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
  <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4bc2d6c6a31d6799763a90fe9d6b9d02"></a><!-- doxytag: member="sockunion.h::sockunion_connect" ref="a4bc2d6c6a31d6799763a90fe9d6b9d02" args="(int fd, union sockunion *su, unsigned short port, unsigned int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="sockunion_8h.html#ab1d3499888de36b96c23f98e283c1b6e">connect_result</a> sockunion_connect </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>fd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">union <a class="el" href="unionsockunion.html">sockunion</a> *&#160;</td>
          <td class="paramname"><em>su</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>int</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8c_source.html#l00328">328</a> of file <a class="el" href="sockunion_8c_source.html">sockunion.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret;
  <span class="keywordtype">int</span> <a class="code" href="prefix_8h.html#a43e03366be2dd9176e91229d76541ce9">val</a>;
  <span class="keyword">union </span><a class="code" href="unionsockunion.html">sockunion</a> su;

  <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;su, peersu, <span class="keyword">sizeof</span> (<span class="keyword">union</span> <a class="code" href="unionsockunion.html">sockunion</a>));

  <span class="keywordflow">switch</span> (su.<a class="code" href="unionsockunion.html#a696d7d44e90274cc3bb86231cd51cfd4">sa</a>.sa_family)
    {
    <span class="keywordflow">case</span> AF_INET:
      su.<a class="code" href="unionsockunion.html#a50fab1a37b798a49a085f78351680ab7">sin</a>.sin_port = port;
      <span class="keywordflow">break</span>;
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>    <span class="keywordflow">case</span> AF_INET6:
      su.sin6.sin6_port  = port;
<span class="preprocessor">#ifdef KAME</span>
<span class="preprocessor"></span>      <span class="keywordflow">if</span> (IN6_IS_ADDR_LINKLOCAL(&amp;su.sin6.sin6_addr) &amp;&amp; ifindex)
    {
<span class="preprocessor">#ifdef HAVE_STRUCT_SOCKADDR_IN6_SIN6_SCOPE_ID</span>
<span class="preprocessor"></span>      <span class="comment">/* su.sin6.sin6_scope_id = ifindex; */</span>
<span class="preprocessor">#ifdef MUSICA</span>
<span class="preprocessor"></span>      su.sin6.sin6_scope_id = ifindex; 
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span><span class="preprocessor">#endif </span><span class="comment">/* HAVE_STRUCT_SOCKADDR_IN6_SIN6_SCOPE_ID */</span>
<span class="preprocessor">#ifndef MUSICA</span>
<span class="preprocessor"></span>      <a class="code" href="sockunion_8h.html#ac5e492dc1d10f95eb64eaac05ec9bab0">SET_IN6_LINKLOCAL_IFINDEX</a> (su.sin6.sin6_addr, ifindex);
<span class="preprocessor">#endif</span>
<span class="preprocessor"></span>    }
<span class="preprocessor">#endif </span><span class="comment">/* KAME */</span>
      <span class="keywordflow">break</span>;
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
    }      

  <span class="comment">/* Make socket non-block. */</span>
  val = fcntl (fd, F_GETFL, 0);
  fcntl (fd, F_SETFL, val|O_NONBLOCK);

  <span class="comment">/* Call connect function. */</span>
  ret = connect (fd, (<span class="keyword">struct</span> sockaddr *) &amp;su, <a class="code" href="sockunion_8c.html#a3015c52e7879749b10e5ab42778f61fd">sockunion_sizeof</a> (&amp;su));

  <span class="comment">/* Immediate success */</span>
  <span class="keywordflow">if</span> (ret == 0)
    {
      fcntl (fd, F_SETFL, val);
      <span class="keywordflow">return</span> <a class="code" href="sockunion_8h.html#ab1d3499888de36b96c23f98e283c1b6ea851cdcb3c5b666dc182f4b6136a6fe7d">connect_success</a>;
    }

  <span class="comment">/* If connect is in progress then return 1 else it&#39;s real error. */</span>
  <span class="keywordflow">if</span> (ret &lt; 0)
    {
      <span class="keywordflow">if</span> (errno != EINPROGRESS)
    {
      <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;can&#39;t connect to %s fd %d : %s&quot;</span>,
             <a class="code" href="sockunion_8c.html#a47180330e14c36dad089da56df04bde9">sockunion_log</a> (&amp;su), fd, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
      <span class="keywordflow">return</span> <a class="code" href="sockunion_8h.html#ab1d3499888de36b96c23f98e283c1b6ea047b71b6325b28f03d8ac558983d7e88">connect_error</a>;
    }
    }

  fcntl (fd, F_SETFL, val);

  <span class="keywordflow">return</span> <a class="code" href="sockunion_8h.html#ab1d3499888de36b96c23f98e283c1b6eaefd11a166b80dff3244284fa5ece9d28">connect_in_progress</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a04fe5a597afbb156389445e8e77b6c27"></a><!-- doxytag: member="sockunion.h::sockunion_dup" ref="a04fe5a597afbb156389445e8e77b6c27" args="(union sockunion *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">union <a class="el" href="unionsockunion.html">sockunion</a>* sockunion_dup </td>
          <td>(</td>
          <td class="paramtype">union <a class="el" href="unionsockunion.html">sockunion</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [write]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8c_source.html#l00735">735</a> of file <a class="el" href="sockunion_8c_source.html">sockunion.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">union </span><a class="code" href="unionsockunion.html">sockunion</a> *dup = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba8f1a56e7700f20a190aaf7fc965e2386">MTYPE_SOCKUNION</a>, <span class="keyword">sizeof</span> (<span class="keyword">union</span> <a class="code" href="unionsockunion.html">sockunion</a>));
  <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (dup, su, <span class="keyword">sizeof</span> (<span class="keyword">union</span> <a class="code" href="unionsockunion.html">sockunion</a>));
  <span class="keywordflow">return</span> dup;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a052220433fece5546a7ba08c97ddc8b7"></a><!-- doxytag: member="sockunion.h::sockunion_free" ref="a052220433fece5546a7ba08c97ddc8b7" args="(union sockunion *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sockunion_free </td>
          <td>(</td>
          <td class="paramtype">union <a class="el" href="unionsockunion.html">sockunion</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8c_source.html#l00743">743</a> of file <a class="el" href="sockunion_8c_source.html">sockunion.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba8f1a56e7700f20a190aaf7fc965e2386">MTYPE_SOCKUNION</a>, su);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a6c86d86e2130d06c82ea70994c9b1edd"></a><!-- doxytag: member="sockunion.h::sockunion_get_in_addr" ref="a6c86d86e2130d06c82ea70994c9b1edd" args="(union sockunion *su)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct in_addr sockunion_get_in_addr </td>
          <td>(</td>
          <td class="paramtype">union <a class="el" href="unionsockunion.html">sockunion</a> *&#160;</td>
          <td class="paramname"><em>su</em></td><td>)</td>
          <td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="abc69d0f910e8c668273510885241e5fc"></a><!-- doxytag: member="sockunion.h::sockunion_getpeername" ref="abc69d0f910e8c668273510885241e5fc" args="(int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">union <a class="el" href="unionsockunion.html">sockunion</a>* sockunion_getpeername </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [write]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8c_source.html#l00606">606</a> of file <a class="el" href="sockunion_8c_source.html">sockunion.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret;
  <a class="code" href="zebra_8h.html#a6b82106923cc13b3a9734520ecc29514">socklen_t</a> len;
  <span class="keyword">union</span>
  {
    <span class="keyword">struct </span>sockaddr sa;
    <span class="keyword">struct </span>sockaddr_in sin;
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>    <span class="keyword">struct </span>sockaddr_in6 sin6;
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
    <span class="keywordtype">char</span> tmp_buffer[128];
  } <a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>;
  <span class="keyword">union </span><a class="code" href="unionsockunion.html">sockunion</a> *su;

  memset (&amp;<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, 0, <span class="keyword">sizeof</span> <a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>);
  len = <span class="keyword">sizeof</span> <a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>;
  ret = getpeername (fd, (<span class="keyword">struct</span> sockaddr *)&amp;<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, &amp;len);
  <span class="keywordflow">if</span> (ret &lt; 0)
    {
      <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_WARNING, <span class="stringliteral">&quot;Can&#39;t get remote address and port: %s&quot;</span>,
        <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
      <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }

  <span class="keywordflow">if</span> (<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>.sa.sa_family == AF_INET)
    {
      su = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba8f1a56e7700f20a190aaf7fc965e2386">MTYPE_SOCKUNION</a>, <span class="keyword">sizeof</span> (<span class="keyword">union</span> <a class="code" href="unionsockunion.html">sockunion</a>));
      <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (su, &amp;<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> sockaddr_in));
      <span class="keywordflow">return</span> su;
    }
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <span class="keywordflow">if</span> (<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>.sa.sa_family == AF_INET6)
    {
      su = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba8f1a56e7700f20a190aaf7fc965e2386">MTYPE_SOCKUNION</a>, <span class="keyword">sizeof</span> (<span class="keyword">union</span> <a class="code" href="unionsockunion.html">sockunion</a>));
      <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (su, &amp;<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> sockaddr_in6));
      <a class="code" href="sockunion_8c.html#a0ff4c72dee88c4c28b9705fe5fd64e73">sockunion_normalise_mapped</a> (su);
      <span class="keywordflow">return</span> su;
    }
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aae3ab4f46478d71d0793590049c49001"></a><!-- doxytag: member="sockunion.h::sockunion_getsockname" ref="aae3ab4f46478d71d0793590049c49001" args="(int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">union <a class="el" href="unionsockunion.html">sockunion</a>* sockunion_getsockname </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [write]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8c_source.html#l00560">560</a> of file <a class="el" href="sockunion_8c_source.html">sockunion.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret;
  <a class="code" href="zebra_8h.html#a6b82106923cc13b3a9734520ecc29514">socklen_t</a> len;
  <span class="keyword">union</span>
  {
    <span class="keyword">struct </span>sockaddr sa;
    <span class="keyword">struct </span>sockaddr_in sin;
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>    <span class="keyword">struct </span>sockaddr_in6 sin6;
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
    <span class="keywordtype">char</span> tmp_buffer[128];
  } <a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>;
  <span class="keyword">union </span><a class="code" href="unionsockunion.html">sockunion</a> *su;

  memset (&amp;<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, 0, <span class="keyword">sizeof</span> <a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>);
  len = <span class="keyword">sizeof</span> <a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>;

  ret = getsockname (fd, (<span class="keyword">struct</span> sockaddr *)&amp;<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, &amp;len);
  <span class="keywordflow">if</span> (ret &lt; 0)
    {
      <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;Can&#39;t get local address and port by getsockname: %s&quot;</span>,
         <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
      <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
    }

  <span class="keywordflow">if</span> (<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>.sa.sa_family == AF_INET)
    {
      su = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba8f1a56e7700f20a190aaf7fc965e2386">MTYPE_SOCKUNION</a>, <span class="keyword">sizeof</span> (<span class="keyword">union</span> <a class="code" href="unionsockunion.html">sockunion</a>));
      <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (su, &amp;<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> sockaddr_in));
      <span class="keywordflow">return</span> su;
    }
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <span class="keywordflow">if</span> (<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>.sa.sa_family == AF_INET6)
    {
      su = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba8f1a56e7700f20a190aaf7fc965e2386">MTYPE_SOCKUNION</a>, <span class="keyword">sizeof</span> (<span class="keyword">union</span> <a class="code" href="unionsockunion.html">sockunion</a>));
      <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (su, &amp;<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> sockaddr_in6));
      <a class="code" href="sockunion_8c.html#a0ff4c72dee88c4c28b9705fe5fd64e73">sockunion_normalise_mapped</a> (su);
      <span class="keywordflow">return</span> su;
    }
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="aea4c9e99cb8b9151e70156e81d27afcd"></a><!-- doxytag: member="sockunion.h::sockunion_same" ref="aea4c9e99cb8b9151e70156e81d27afcd" args="(union sockunion *, union sockunion *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int sockunion_same </td>
          <td>(</td>
          <td class="paramtype">union <a class="el" href="unionsockunion.html">sockunion</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">union <a class="el" href="unionsockunion.html">sockunion</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8c_source.html#l00532">532</a> of file <a class="el" href="sockunion_8c_source.html">sockunion.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret = 0;

  <span class="keywordflow">if</span> (su1-&gt;sa.sa_family != su2-&gt;sa.sa_family)
    <span class="keywordflow">return</span> 0;

  <span class="keywordflow">switch</span> (su1-&gt;sa.sa_family)
    {
    <span class="keywordflow">case</span> AF_INET:
      ret = <a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (&amp;su1-&gt;sin.sin_addr, &amp;su2-&gt;sin.sin_addr,
            sizeof (<span class="keyword">struct</span> in_addr));
      <span class="keywordflow">break</span>;
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>    <span class="keywordflow">case</span> AF_INET6:
      ret = <a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (&amp;su1-&gt;sin6.sin6_addr, &amp;su2-&gt;sin6.sin6_addr,
            sizeof (<span class="keyword">struct</span> in6_addr));
      <span class="keywordflow">break</span>;
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
    }
  <span class="keywordflow">if</span> (ret == 0)
    <span class="keywordflow">return</span> 1;
  <span class="keywordflow">else</span>
    <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a75e4776386c27ca33e5c5d86eafd4b99"></a><!-- doxytag: member="sockunion.h::sockunion_socket" ref="a75e4776386c27ca33e5c5d86eafd4b99" args="(union sockunion *su)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int sockunion_socket </td>
          <td>(</td>
          <td class="paramtype">union <a class="el" href="unionsockunion.html">sockunion</a> *&#160;</td>
          <td class="paramname"><em>su</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8c_source.html#l00250">250</a> of file <a class="el" href="sockunion_8c_source.html">sockunion.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> sock;

  sock = socket (su-&gt;<a class="code" href="unionsockunion.html#a696d7d44e90274cc3bb86231cd51cfd4">sa</a>.sa_family, SOCK_STREAM, 0);
  <span class="keywordflow">if</span> (sock &lt; 0)
    {
      <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_WARNING, <span class="stringliteral">&quot;Can&#39;t make socket : %s&quot;</span>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
      <span class="keywordflow">return</span> -1;
    }

  <span class="keywordflow">return</span> sock;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3dffcd96d7fff7136a7a35d44727ca0d"></a><!-- doxytag: member="sockunion.h::sockunion_str2su" ref="a3dffcd96d7fff7136a7a35d44727ca0d" args="(const char *str)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">union <a class="el" href="unionsockunion.html">sockunion</a>* sockunion_str2su </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td><code> [write]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8c_source.html#l00178">178</a> of file <a class="el" href="sockunion_8c_source.html">sockunion.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret;
  <span class="keyword">union </span><a class="code" href="unionsockunion.html">sockunion</a> *su;

  su = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba8f1a56e7700f20a190aaf7fc965e2386">MTYPE_SOCKUNION</a>, <span class="keyword">sizeof</span> (<span class="keyword">union</span> <a class="code" href="unionsockunion.html">sockunion</a>));

  ret = <a class="code" href="sockunion_8c.html#ac13c2042641ea5031bc7e244e8061b84">inet_pton</a> (AF_INET, <a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, &amp;su-&gt;<a class="code" href="unionsockunion.html#a50fab1a37b798a49a085f78351680ab7">sin</a>.sin_addr);
  <span class="keywordflow">if</span> (ret &gt; 0)          <span class="comment">/* Valid IPv4 address format. */</span>
    {
      su-&gt;<a class="code" href="unionsockunion.html#a50fab1a37b798a49a085f78351680ab7">sin</a>.sin_family = AF_INET;
<span class="preprocessor">#ifdef HAVE_STRUCT_SOCKADDR_IN_SIN_LEN</span>
<span class="preprocessor"></span>      su-&gt;<a class="code" href="unionsockunion.html#a50fab1a37b798a49a085f78351680ab7">sin</a>.sin_len = <span class="keyword">sizeof</span>(<span class="keyword">struct </span>sockaddr_in);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_STRUCT_SOCKADDR_IN_SIN_LEN */</span>
      <span class="keywordflow">return</span> su;
    }
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  ret = <a class="code" href="sockunion_8c.html#ac13c2042641ea5031bc7e244e8061b84">inet_pton</a> (AF_INET6, <a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, &amp;su-&gt;sin6.sin6_addr);
  <span class="keywordflow">if</span> (ret &gt; 0)          <span class="comment">/* Valid IPv6 address format. */</span>
    {
      su-&gt;sin6.sin6_family = AF_INET6;
<span class="preprocessor">#ifdef SIN6_LEN</span>
<span class="preprocessor"></span>      su-&gt;sin6.sin6_len = <span class="keyword">sizeof</span>(<span class="keyword">struct </span>sockaddr_in6);
<span class="preprocessor">#endif </span><span class="comment">/* SIN6_LEN */</span>
      <span class="keywordflow">return</span> su;
    }
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>

  <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba8f1a56e7700f20a190aaf7fc965e2386">MTYPE_SOCKUNION</a>, su);
  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a037dc60d4372c5d30407dacd7a64604c"></a><!-- doxytag: member="sockunion.h::sockunion_stream_socket" ref="a037dc60d4372c5d30407dacd7a64604c" args="(union sockunion *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int sockunion_stream_socket </td>
          <td>(</td>
          <td class="paramtype">union <a class="el" href="unionsockunion.html">sockunion</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8c_source.html#l00395">395</a> of file <a class="el" href="sockunion_8c_source.html">sockunion.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> sock;

  <span class="keywordflow">if</span> (su-&gt;sa.sa_family == 0)
    su-&gt;sa.sa_family = <a class="code" href="sockunion_8h.html#a38959c7052325dcfdae19df19cd215f6">AF_INET_UNION</a>;

  sock = socket (su-&gt;sa.sa_family, SOCK_STREAM, 0);

  <span class="keywordflow">if</span> (sock &lt; 0)
    <a class="code" href="log_8c.html#a34f80af784b8ec394e7a7154a7ec7364">zlog</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, LOG_WARNING, <span class="stringliteral">&quot;can&#39;t make socket sockunion_stream_socket&quot;</span>);

  <span class="keywordflow">return</span> sock;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a81204a150d1d4f669bb69fdb0915a727"></a><!-- doxytag: member="sockunion.h::sockunion_su2str" ref="a81204a150d1d4f669bb69fdb0915a727" args="(union sockunion *su)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* sockunion_su2str </td>
          <td>(</td>
          <td class="paramtype">union <a class="el" href="unionsockunion.html">sockunion</a> *&#160;</td>
          <td class="paramname"><em>su</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8c_source.html#l00211">211</a> of file <a class="el" href="sockunion_8c_source.html">sockunion.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">char</span> <a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>[<a class="code" href="sockunion_8h.html#acdf2761ecf6723841896a77e9059e810">SU_ADDRSTRLEN</a>];

  <span class="keywordflow">switch</span> (su-&gt;<a class="code" href="unionsockunion.html#a696d7d44e90274cc3bb86231cd51cfd4">sa</a>.sa_family)
    {
    <span class="keywordflow">case</span> AF_INET:
      <a class="code" href="sockunion_8c.html#a5bfb767e8fa3f9ff5d2a1e19d71791f4">inet_ntop</a> (AF_INET, &amp;su-&gt;<a class="code" href="unionsockunion.html#a50fab1a37b798a49a085f78351680ab7">sin</a>.sin_addr, str, sizeof (str));
      <span class="keywordflow">break</span>;
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>    <span class="keywordflow">case</span> AF_INET6:
      <a class="code" href="sockunion_8c.html#a5bfb767e8fa3f9ff5d2a1e19d71791f4">inet_ntop</a> (AF_INET6, &amp;su-&gt;sin6.sin6_addr, str, sizeof (str));
      <span class="keywordflow">break</span>;
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
    }
  <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#aa7c561b5824edc16351f22b8df155c0e">XSTRDUP</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba563963518edb70d4cd7492b06f48106e">MTYPE_TMP</a>, str);
}
</pre></div>
</div>
</div>
<a class="anchor" id="aa2fe8be1262f1a777e63630b484a16e9"></a><!-- doxytag: member="sockunion.h::str2sockunion" ref="aa2fe8be1262f1a777e63630b484a16e9" args="(const char *, union sockunion *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int str2sockunion </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">union <a class="el" href="unionsockunion.html">sockunion</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="sockunion_8c_source.html#l00136">136</a> of file <a class="el" href="sockunion_8c_source.html">sockunion.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordtype">int</span> ret;

  memset (su, 0, <span class="keyword">sizeof</span> (<span class="keyword">union</span> <a class="code" href="unionsockunion.html">sockunion</a>));

  ret = <a class="code" href="sockunion_8c.html#ac13c2042641ea5031bc7e244e8061b84">inet_pton</a> (AF_INET, <a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, &amp;su-&gt;sin.sin_addr);
  <span class="keywordflow">if</span> (ret &gt; 0)          <span class="comment">/* Valid IPv4 address format. */</span>
    {
      su-&gt;sin.sin_family = AF_INET;
<span class="preprocessor">#ifdef HAVE_STRUCT_SOCKADDR_IN_SIN_LEN</span>
<span class="preprocessor"></span>      su-&gt;sin.sin_len = <span class="keyword">sizeof</span>(<span class="keyword">struct </span>sockaddr_in);
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_STRUCT_SOCKADDR_IN_SIN_LEN */</span>
      <span class="keywordflow">return</span> 0;
    }
<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  ret = <a class="code" href="sockunion_8c.html#ac13c2042641ea5031bc7e244e8061b84">inet_pton</a> (AF_INET6, <a class="code" href="rip__zebra_8c.html#af25d6dc49269fa2003ac7c7fa6f13915">str</a>, &amp;su-&gt;sin6.sin6_addr);
  <span class="keywordflow">if</span> (ret &gt; 0)          <span class="comment">/* Valid IPv6 address format. */</span>
    {
      su-&gt;sin6.sin6_family = AF_INET6;
<span class="preprocessor">#ifdef SIN6_LEN</span>
<span class="preprocessor"></span>      su-&gt;sin6.sin6_len = <span class="keyword">sizeof</span>(<span class="keyword">struct </span>sockaddr_in6);
<span class="preprocessor">#endif </span><span class="comment">/* SIN6_LEN */</span>
      <span class="keywordflow">return</span> 0;
    }
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
  <span class="keywordflow">return</span> -1;
}
</pre></div>
</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="sockunion_8h.html">sockunion.h</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:24 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
