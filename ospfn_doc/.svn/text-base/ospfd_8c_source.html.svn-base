<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: ospfd/ospfd.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('ospfd_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">ospfd/ospfd.c</div>  </div>
</div>
<div class="contents">
<a href="ospfd_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* OSPF version 2 daemon program.</span>
<a name="l00002"></a>00002 <span class="comment">   Copyright (C) 1999, 2000 Toshiaki Takada</span>
<a name="l00003"></a>00003 <span class="comment"></span>
<a name="l00004"></a>00004 <span class="comment">This file is part of GNU Zebra.</span>
<a name="l00005"></a>00005 <span class="comment"></span>
<a name="l00006"></a>00006 <span class="comment">GNU Zebra is free software; you can redistribute it and/or modify it</span>
<a name="l00007"></a>00007 <span class="comment">under the terms of the GNU General Public License as published by the</span>
<a name="l00008"></a>00008 <span class="comment">Free Software Foundation; either version 2, or (at your option) any</span>
<a name="l00009"></a>00009 <span class="comment">later version.</span>
<a name="l00010"></a>00010 <span class="comment"></span>
<a name="l00011"></a>00011 <span class="comment">GNU Zebra is distributed in the hope that it will be useful, but</span>
<a name="l00012"></a>00012 <span class="comment">WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00014"></a>00014 <span class="comment">General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"></span>
<a name="l00016"></a>00016 <span class="comment">You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment">along with GNU Zebra; see the file COPYING.  If not, write to the Free</span>
<a name="l00018"></a>00018 <span class="comment">Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA</span>
<a name="l00019"></a>00019 <span class="comment">02111-1307, USA.  */</span>
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 <span class="preprocessor">#include &lt;<a class="code" href="zebra_8h.html">zebra.h</a>&gt;</span>
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="preprocessor">#include &quot;<a class="code" href="thread_8h.html">thread.h</a>&quot;</span>
<a name="l00024"></a>00024 <span class="preprocessor">#include &quot;<a class="code" href="vty_8h.html">vty.h</a>&quot;</span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="command_8h.html">command.h</a>&quot;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="linklist_8h.html">linklist.h</a>&quot;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="prefix_8h.html">prefix.h</a>&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="table_8h.html">table.h</a>&quot;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="if_8h.html">if.h</a>&quot;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="memory_8h.html">memory.h</a>&quot;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &quot;<a class="code" href="stream_8h.html">stream.h</a>&quot;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="log_8h.html">log.h</a>&quot;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &quot;<a class="code" href="sockunion_8h.html">sockunion.h</a>&quot;</span>          <span class="comment">/* for inet_aton () */</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &quot;<a class="code" href="zclient_8h.html">zclient.h</a>&quot;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &quot;<a class="code" href="plist_8h.html">plist.h</a>&quot;</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include &quot;<a class="code" href="sockopt_8h.html">sockopt.h</a>&quot;</span>
<a name="l00037"></a>00037 
<a name="l00038"></a>00038 <span class="preprocessor">#include &quot;<a class="code" href="ospfd_8h.html">ospfd/ospfd.h</a>&quot;</span>
<a name="l00039"></a>00039 <span class="preprocessor">#include &quot;<a class="code" href="ospf__network_8h.html">ospfd/ospf_network.h</a>&quot;</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include &quot;<a class="code" href="ospf__interface_8h.html">ospfd/ospf_interface.h</a>&quot;</span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &quot;<a class="code" href="ospf__ism_8h.html">ospfd/ospf_ism.h</a>&quot;</span>
<a name="l00042"></a>00042 <span class="preprocessor">#include &quot;<a class="code" href="ospf__asbr_8h.html">ospfd/ospf_asbr.h</a>&quot;</span>
<a name="l00043"></a>00043 <span class="preprocessor">#include &quot;<a class="code" href="ospf__lsa_8h.html">ospfd/ospf_lsa.h</a>&quot;</span>
<a name="l00044"></a>00044 <span class="preprocessor">#include &quot;<a class="code" href="ospf__lsdb_8h.html">ospfd/ospf_lsdb.h</a>&quot;</span>
<a name="l00045"></a>00045 <span class="preprocessor">#include &quot;<a class="code" href="ospf__neighbor_8h.html">ospfd/ospf_neighbor.h</a>&quot;</span>
<a name="l00046"></a>00046 <span class="preprocessor">#include &quot;<a class="code" href="ospf__nsm_8h.html">ospfd/ospf_nsm.h</a>&quot;</span>
<a name="l00047"></a>00047 <span class="preprocessor">#include &quot;<a class="code" href="ospf__spf_8h.html">ospfd/ospf_spf.h</a>&quot;</span>
<a name="l00048"></a>00048 <span class="preprocessor">#include &quot;<a class="code" href="ospf__packet_8h.html">ospfd/ospf_packet.h</a>&quot;</span>
<a name="l00049"></a>00049 <span class="preprocessor">#include &quot;<a class="code" href="ospf__dump_8h.html">ospfd/ospf_dump.h</a>&quot;</span>
<a name="l00050"></a>00050 <span class="preprocessor">#include &quot;<a class="code" href="ospf__zebra_8h.html">ospfd/ospf_zebra.h</a>&quot;</span>
<a name="l00051"></a>00051 <span class="preprocessor">#include &quot;<a class="code" href="ospf__abr_8h.html">ospfd/ospf_abr.h</a>&quot;</span>
<a name="l00052"></a>00052 <span class="preprocessor">#include &quot;<a class="code" href="ospf__flood_8h.html">ospfd/ospf_flood.h</a>&quot;</span>
<a name="l00053"></a>00053 <span class="preprocessor">#include &quot;<a class="code" href="ospf__route_8h.html">ospfd/ospf_route.h</a>&quot;</span>
<a name="l00054"></a>00054 <span class="preprocessor">#include &quot;<a class="code" href="ospf__ase_8h.html">ospfd/ospf_ase.h</a>&quot;</span>
<a name="l00055"></a>00055 
<a name="l00056"></a>00056 
<a name="l00057"></a>00057 
<a name="l00058"></a>00058 <span class="comment">/* OSPF process wide configuration. */</span>
<a name="l00059"></a><a class="code" href="ospfd_8c.html#a33a7fa52c2e4612ed7c43602d9520db1">00059</a> <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structospf__master.html">ospf_master</a> <a class="code" href="structospf__master.html">ospf_master</a>;
<a name="l00060"></a>00060 
<a name="l00061"></a>00061 <span class="comment">/* OSPF process wide configuration pointer to export. */</span>
<a name="l00062"></a><a class="code" href="ospfd_8h.html#a00fd6054739908ab616f0bacdc6d0f64">00062</a> <span class="keyword">struct </span><a class="code" href="structospf__master.html">ospf_master</a> *<a class="code" href="ospfd_8c.html#a00fd6054739908ab616f0bacdc6d0f64">om</a>;
<a name="l00063"></a>00063 
<a name="l00064"></a>00064 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structzclient.html">zclient</a> *<a class="code" href="bgp__zebra_8c.html#abe1502972ba9aa40adc080e419c496bf">zclient</a>;
<a name="l00065"></a>00065 <span class="keyword">extern</span> <span class="keyword">struct </span>in_addr <a class="code" href="bgp__vty_8c.html#a5ff73fe88ce576fe7fc3877984367add">router_id_zebra</a>;
<a name="l00066"></a>00066 
<a name="l00067"></a>00067 
<a name="l00068"></a>00068 <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="ospfd_8c.html#a18ae69cd8ada47780d2abe5cf46aef7c">ospf_remove_vls_through_area</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *, <span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *);
<a name="l00069"></a>00069 <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="ospfd_8c.html#a187d0469588c7386421e07eb4f65e344">ospf_network_free</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *, <span class="keyword">struct</span> <a class="code" href="structospf__network.html">ospf_network</a> *);
<a name="l00070"></a>00070 <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="ospfd_8c.html#a764d9b44ff909f4260cf83bf516b8d0e">ospf_area_free</a> (<span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *);
<a name="l00071"></a>00071 <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="ospfd_8c.html#a9ff9167ef11494a725578e5705632d84">ospf_network_run</a> (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *, <span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *);
<a name="l00072"></a>00072 <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="ospfd_8c.html#a7818e64451ad531aed1fa0aeb35ec4c6">ospf_network_run_interface</a> (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *, <span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *,
<a name="l00073"></a>00073                                         <span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *);
<a name="l00074"></a>00074 <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="ospfd_8c.html#ae8c350ba65c0ae238fa093a24a67bfa0">ospf_network_match_iface</a> (<span class="keyword">const</span> <span class="keyword">struct</span> <a class="code" href="structconnected.html">connected</a> *,
<a name="l00075"></a>00075                      <span class="keyword">const</span> <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *);
<a name="l00076"></a>00076 <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="ospfd_8c.html#a3246e8a54ca10359cd606959b7b29622">ospf_finish_final</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *);
<a name="l00077"></a>00077 
<a name="l00078"></a><a class="code" href="ospfd_8c.html#a3a6a94df5a2cf791d4c26bc0b1334df8">00078</a> <span class="preprocessor">#define OSPF_EXTERNAL_LSA_ORIGINATE_DELAY 1</span>
<a name="l00079"></a>00079 <span class="preprocessor"></span>
<a name="l00080"></a>00080 <span class="keywordtype">void</span>
<a name="l00081"></a><a class="code" href="ospfd_8h.html#a0d1cbe02041ecd44cfc37a94718ca69a">00081</a> <a class="code" href="ospfd_8c.html#a0d1cbe02041ecd44cfc37a94718ca69a">ospf_router_id_update</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>)
<a name="l00082"></a>00082 {
<a name="l00083"></a>00083   <span class="keyword">struct </span>in_addr router_id, router_id_old;
<a name="l00084"></a>00084   <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
<a name="l00085"></a>00085   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l00086"></a>00086   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00087"></a>00087 
<a name="l00088"></a>00088   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00089"></a>00089     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Router-ID[OLD:%s]: Update&quot;</span>, inet_ntoa (ospf-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>));
<a name="l00090"></a>00090 
<a name="l00091"></a>00091   router_id_old = ospf-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>;
<a name="l00092"></a>00092 
<a name="l00093"></a>00093   <span class="comment">/* Select the router ID based on these priorities:</span>
<a name="l00094"></a>00094 <span class="comment">       1. Statically assigned router ID is always the first choice.</span>
<a name="l00095"></a>00095 <span class="comment">       2. If there is no statically assigned router ID, then try to stick</span>
<a name="l00096"></a>00096 <span class="comment">          with the most recent value, since changing router ID&#39;s is very</span>
<a name="l00097"></a>00097 <span class="comment">      disruptive.</span>
<a name="l00098"></a>00098 <span class="comment">       3. Last choice: just go with whatever the zebra daemon recommends.</span>
<a name="l00099"></a>00099 <span class="comment">  */</span>
<a name="l00100"></a>00100   <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#a442dcdca0018ce74dfaf7b81d1b6878a">router_id_static</a>.s_addr != 0)
<a name="l00101"></a>00101     router_id = ospf-&gt;<a class="code" href="structospf.html#a442dcdca0018ce74dfaf7b81d1b6878a">router_id_static</a>;
<a name="l00102"></a>00102   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>.s_addr != 0)
<a name="l00103"></a>00103     router_id = ospf-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>;
<a name="l00104"></a>00104   <span class="keywordflow">else</span>
<a name="l00105"></a>00105     router_id = <a class="code" href="bgp__vty_8c.html#a5ff73fe88ce576fe7fc3877984367add">router_id_zebra</a>;
<a name="l00106"></a>00106 
<a name="l00107"></a>00107   ospf-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a> = router_id;
<a name="l00108"></a>00108   
<a name="l00109"></a>00109   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00110"></a>00110     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Router-ID[NEW:%s]: Update&quot;</span>, inet_ntoa (ospf-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>));
<a name="l00111"></a>00111 
<a name="l00112"></a>00112   <span class="keywordflow">if</span> (!<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;router_id_old, &amp;router_id))
<a name="l00113"></a>00113     {
<a name="l00114"></a>00114       <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a977d3608343fe5db7900ec646880cb6a">oiflist</a>, node, oi))
<a name="l00115"></a>00115         <span class="comment">/* Update self-neighbor&#39;s router_id. */</span>
<a name="l00116"></a>00116         oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#a2257238c9040a76e9de9a78cf95bae0d">router_id</a> = router_id;
<a name="l00117"></a>00117 
<a name="l00118"></a>00118       <span class="comment">/* If AS-external-LSA is queued, then flush those LSAs. */</span>
<a name="l00119"></a>00119       <span class="keywordflow">if</span> (router_id_old.s_addr == 0 &amp;&amp; ospf-&gt;<a class="code" href="structospf.html#a4e2d4fb95c750aeddee77669b7073e86">external_origin</a>)
<a name="l00120"></a>00120     {
<a name="l00121"></a>00121       <span class="keywordtype">int</span> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>;
<a name="l00122"></a>00122       <span class="comment">/* Originate each redistributed external route. */</span>
<a name="l00123"></a>00123       <span class="keywordflow">for</span> (type = 0; type &lt; <a class="code" href="zebra_8h.html#aec97442680d773fd62f9af5c9426b842">ZEBRA_ROUTE_MAX</a>; type++)
<a name="l00124"></a>00124         <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#a4e2d4fb95c750aeddee77669b7073e86">external_origin</a> &amp; (1 &lt;&lt; type))
<a name="l00125"></a>00125           <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf__lsa_8c.html#a3e9dc40b309b42e40bf32b5ec06fd3f8">ospf_external_lsa_originate_timer</a>,
<a name="l00126"></a>00126                 ospf, type);
<a name="l00127"></a>00127       <span class="comment">/* Originate Deafult. */</span>
<a name="l00128"></a>00128       <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#a4e2d4fb95c750aeddee77669b7073e86">external_origin</a> &amp; (1 &lt;&lt; ZEBRA_ROUTE_MAX))
<a name="l00129"></a>00129         <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf__lsa_8c.html#ab2bcb8bca8aa169076de0505e3ddad72">ospf_default_originate_timer</a>, ospf, 0);
<a name="l00130"></a>00130 
<a name="l00131"></a>00131       ospf-&gt;<a class="code" href="structospf.html#a4e2d4fb95c750aeddee77669b7073e86">external_origin</a> = 0;
<a name="l00132"></a>00132     }
<a name="l00133"></a>00133 
<a name="l00134"></a>00134       <a class="code" href="ospfd_8h.html#af55bc6c498265fffa9294d0f1b952267">OSPF_TIMER_ON</a> (ospf-&gt;<a class="code" href="structospf.html#a94a369b811b335e1d05e1dab77096606">t_router_lsa_update</a>,
<a name="l00135"></a>00135              <a class="code" href="ospf__lsa_8c.html#a4db40452defbd5304d698f8d0cc855d1">ospf_router_lsa_update_timer</a>, <a class="code" href="ospf__lsa_8h.html#a40abe6153ff06321e030f48daccf4966">OSPF_LSA_UPDATE_DELAY</a>);
<a name="l00136"></a>00136       
<a name="l00137"></a>00137       <span class="comment">/* update ospf_interface&#39;s */</span>
<a name="l00138"></a>00138       <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (om-&gt;<a class="code" href="structospf__master.html#a03ff051ede9d089f9ca6cfc6262a5634">iflist</a>, node, ifp))
<a name="l00139"></a>00139         <a class="code" href="ospfd_8c.html#a9d40c9fe8a5fd9ec7add909556c5bd3f">ospf_if_update</a> (ospf, ifp);
<a name="l00140"></a>00140     }
<a name="l00141"></a>00141 }
<a name="l00142"></a>00142 
<a name="l00143"></a>00143 <span class="comment">/* For OSPF area sort by area id. */</span>
<a name="l00144"></a>00144 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00145"></a><a class="code" href="ospfd_8c.html#a6d4e4f9edd42c089df786b0df096cfbc">00145</a> <a class="code" href="ospfd_8c.html#a6d4e4f9edd42c089df786b0df096cfbc">ospf_area_id_cmp</a> (<span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *a1, <span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *a2)
<a name="l00146"></a>00146 {
<a name="l00147"></a>00147   <span class="keywordflow">if</span> (ntohl (a1-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>.s_addr) &gt; ntohl (a2-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>.s_addr))
<a name="l00148"></a>00148     <span class="keywordflow">return</span> 1;
<a name="l00149"></a>00149   <span class="keywordflow">if</span> (ntohl (a1-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>.s_addr) &lt; ntohl (a2-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>.s_addr))
<a name="l00150"></a>00150     <span class="keywordflow">return</span> -1;
<a name="l00151"></a>00151   <span class="keywordflow">return</span> 0;
<a name="l00152"></a>00152 }
<a name="l00153"></a>00153 
<a name="l00154"></a>00154 <span class="comment">/* Allocate new ospf structure. */</span>
<a name="l00155"></a>00155 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structospf.html">ospf</a> *
<a name="l00156"></a><a class="code" href="ospfd_8c.html#a61a47474abcb16fd62d9ad0dc0bb08c0">00156</a> <a class="code" href="ospfd_8c.html#a61a47474abcb16fd62d9ad0dc0bb08c0">ospf_new</a> (<span class="keywordtype">void</span>)
<a name="l00157"></a>00157 {
<a name="l00158"></a>00158   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l00159"></a>00159 
<a name="l00160"></a>00160   <span class="keyword">struct </span><a class="code" href="structospf.html">ospf</a> *<span class="keyword">new</span> = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba0ad9117251a05de9c1c0e34cb4b08914">MTYPE_OSPF_TOP</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a>));
<a name="l00161"></a>00161 
<a name="l00162"></a>00162   <span class="keyword">new</span>-&gt;router_id.s_addr = htonl (0);
<a name="l00163"></a>00163   <span class="keyword">new</span>-&gt;router_id_static.s_addr = htonl (0);
<a name="l00164"></a>00164 
<a name="l00165"></a>00165   <span class="keyword">new</span>-&gt;abr_type = <a class="code" href="ospfd_8h.html#a1d46d0a6078d76cbba23dd6c61d2cea7">OSPF_ABR_DEFAULT</a>;
<a name="l00166"></a>00166   <span class="keyword">new</span>-&gt;oiflist = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l00167"></a>00167   <span class="keyword">new</span>-&gt;vlinks = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l00168"></a>00168   <span class="keyword">new</span>-&gt;areas = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l00169"></a>00169   <span class="keyword">new</span>-&gt;areas-&gt;cmp = (int (*)(<span class="keywordtype">void</span> *, <span class="keywordtype">void</span> *)) <a class="code" href="ospfd_8c.html#a6d4e4f9edd42c089df786b0df096cfbc">ospf_area_id_cmp</a>;
<a name="l00170"></a>00170   <span class="keyword">new</span>-&gt;networks = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();
<a name="l00171"></a>00171   <span class="keyword">new</span>-&gt;nbr_nbma = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();
<a name="l00172"></a>00172 
<a name="l00173"></a>00173   <span class="keyword">new</span>-&gt;lsdb = <a class="code" href="ospf__lsdb_8c.html#a897e69e3ce0ff001f40e3cd8ed4e0cdf">ospf_lsdb_new</a> ();
<a name="l00174"></a>00174 
<a name="l00175"></a>00175   <span class="keyword">new</span>-&gt;default_originate = <a class="code" href="ospfd_8h.html#a2cb5991aff286dfe8d5b67d9730e0c81">DEFAULT_ORIGINATE_NONE</a>;
<a name="l00176"></a>00176 
<a name="l00177"></a>00177   <span class="keyword">new</span>-&gt;passive_interface_default = <a class="code" href="ospf__interface_8h.html#aa8ac4964fabc3508563c253b72158fad">OSPF_IF_ACTIVE</a>;
<a name="l00178"></a>00178   
<a name="l00179"></a>00179   <span class="keyword">new</span>-&gt;new_external_route = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();
<a name="l00180"></a>00180   <span class="keyword">new</span>-&gt;old_external_route = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();
<a name="l00181"></a>00181   <span class="keyword">new</span>-&gt;external_lsas = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();
<a name="l00182"></a>00182   
<a name="l00183"></a>00183   <span class="keyword">new</span>-&gt;stub_router_startup_time = <a class="code" href="ospfd_8h.html#a4a68456603adc72536dfd42656a45bce">OSPF_STUB_ROUTER_UNCONFIGURED</a>;
<a name="l00184"></a>00184   <span class="keyword">new</span>-&gt;stub_router_shutdown_time = <a class="code" href="ospfd_8h.html#a4a68456603adc72536dfd42656a45bce">OSPF_STUB_ROUTER_UNCONFIGURED</a>;
<a name="l00185"></a>00185   
<a name="l00186"></a>00186   <span class="comment">/* Distribute parameter init. */</span>
<a name="l00187"></a>00187   <span class="keywordflow">for</span> (i = 0; i &lt;= <a class="code" href="zebra_8h.html#aec97442680d773fd62f9af5c9426b842">ZEBRA_ROUTE_MAX</a>; i++)
<a name="l00188"></a>00188     {
<a name="l00189"></a>00189       <span class="keyword">new</span>-&gt;dmetric[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].type = -1;
<a name="l00190"></a>00190       <span class="keyword">new</span>-&gt;dmetric[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].value = -1;
<a name="l00191"></a>00191     }
<a name="l00192"></a>00192   <span class="keyword">new</span>-&gt;default_metric = -1;
<a name="l00193"></a>00193   <span class="keyword">new</span>-&gt;ref_bandwidth = <a class="code" href="ospfd_8h.html#a56009c5c20deb6a5237f6b857c6bc668">OSPF_DEFAULT_REF_BANDWIDTH</a>;
<a name="l00194"></a>00194 
<a name="l00195"></a>00195   <span class="comment">/* SPF timer value init. */</span>
<a name="l00196"></a>00196   <span class="keyword">new</span>-&gt;spf_delay = <a class="code" href="ospfd_8h.html#a526b860b84f7ae9952acf311162eb104">OSPF_SPF_DELAY_DEFAULT</a>;
<a name="l00197"></a>00197   <span class="keyword">new</span>-&gt;spf_holdtime = <a class="code" href="ospfd_8h.html#add7b22e7946b05c1aa37a570db429736">OSPF_SPF_HOLDTIME_DEFAULT</a>;
<a name="l00198"></a>00198   <span class="keyword">new</span>-&gt;spf_max_holdtime = <a class="code" href="ospfd_8h.html#a57b95380bd44139d2d717d583ce33362">OSPF_SPF_MAX_HOLDTIME_DEFAULT</a>;
<a name="l00199"></a>00199   <span class="keyword">new</span>-&gt;spf_hold_multiplier = 1;
<a name="l00200"></a>00200 
<a name="l00201"></a>00201   <span class="comment">/* MaxAge init. */</span>
<a name="l00202"></a>00202   <span class="keyword">new</span>-&gt;maxage_lsa = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l00203"></a>00203   <span class="keyword">new</span>-&gt;t_maxage_walker =
<a name="l00204"></a>00204     <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf__lsa_8c.html#a4069275df453331e7b1c742d1aa7e2e1">ospf_lsa_maxage_walker</a>,
<a name="l00205"></a>00205                       <span class="keyword">new</span>, <a class="code" href="ospfd_8h.html#a5344576f6e042edd999d545d7b530aa3">OSPF_LSA_MAXAGE_CHECK_INTERVAL</a>);
<a name="l00206"></a>00206 
<a name="l00207"></a>00207   <span class="comment">/* Distance table init. */</span>
<a name="l00208"></a>00208   <span class="keyword">new</span>-&gt;distance_table = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();
<a name="l00209"></a>00209 
<a name="l00210"></a>00210   <span class="keyword">new</span>-&gt;lsa_refresh_queue.index = 0;
<a name="l00211"></a>00211   <span class="keyword">new</span>-&gt;lsa_refresh_interval = <a class="code" href="ospfd_8h.html#ad8b9f18664f98ee8d1c70e483e738469">OSPF_LSA_REFRESH_INTERVAL_DEFAULT</a>;
<a name="l00212"></a>00212   <span class="keyword">new</span>-&gt;t_lsa_refresher = <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf__lsa_8c.html#aba5248867f4c5f9ca904d27b89482c20">ospf_lsa_refresh_walker</a>,
<a name="l00213"></a>00213                        <span class="keyword">new</span>, new-&gt;lsa_refresh_interval);
<a name="l00214"></a>00214   <span class="keyword">new</span>-&gt;lsa_refresher_started = <a class="code" href="thread_8c.html#acbaf2206b84f93fbe18f33483bf101d2">quagga_time</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l00215"></a>00215 
<a name="l00216"></a>00216   <span class="keywordflow">if</span> ((new-&gt;fd = <a class="code" href="ospf__network_8c.html#a738c77f48af1d1af2c0e616ba9710bc2">ospf_sock_init</a>()) &lt; 0)
<a name="l00217"></a>00217     {
<a name="l00218"></a>00218       <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a>(<span class="stringliteral">&quot;ospf_new: fatal error: ospf_sock_init was unable to open &quot;</span>
<a name="l00219"></a>00219            <span class="stringliteral">&quot;a socket&quot;</span>);
<a name="l00220"></a>00220       <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a>(1);
<a name="l00221"></a>00221     }
<a name="l00222"></a>00222   <span class="keyword">new</span>-&gt;maxsndbuflen = <a class="code" href="sockopt_8c.html#aae8ed164606b3d56b05af0e09730a554">getsockopt_so_sendbuf</a> (new-&gt;fd);
<a name="l00223"></a>00223   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a065e478fcd8bd7a409804fc9e9e67e70">IS_DEBUG_OSPF</a> (<a class="code" href="bgp__debug_8c.html#aacd09dfe4b60fac4ec1c5e2895066f07">zebra</a>, ZEBRA_INTERFACE))
<a name="l00224"></a>00224     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;%s: starting with OSPF send buffer size %d&quot;</span>,
<a name="l00225"></a>00225       __func__, new-&gt;maxsndbuflen);
<a name="l00226"></a>00226   <span class="keywordflow">if</span> ((new-&gt;ibuf = <a class="code" href="stream_8c.html#a7117cdad9fa5e5ae633e0cf08d047459">stream_new</a>(<a class="code" href="ospf__packet_8h.html#a931e4cc5c8888b6cf1d91636fd4340a6">OSPF_MAX_PACKET_SIZE</a>+1)) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00227"></a>00227     {
<a name="l00228"></a>00228       <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a>(<span class="stringliteral">&quot;ospf_new: fatal error: stream_new(%u) failed allocating ibuf&quot;</span>,
<a name="l00229"></a>00229            <a class="code" href="ospf__packet_8h.html#a931e4cc5c8888b6cf1d91636fd4340a6">OSPF_MAX_PACKET_SIZE</a>+1);
<a name="l00230"></a>00230       <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a>(1);
<a name="l00231"></a>00231     }
<a name="l00232"></a>00232   <span class="keyword">new</span>-&gt;t_read = <a class="code" href="thread_8h.html#abd1714f11834a150c84b040c0c69b620">thread_add_read</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf__packet_8c.html#a6327e5b8ab0bf00617153a9e6225ec2b">ospf_read</a>, <span class="keyword">new</span>, new-&gt;fd);
<a name="l00233"></a>00233   <span class="keyword">new</span>-&gt;oi_write_q = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l00234"></a>00234   
<a name="l00235"></a>00235   <span class="keywordflow">return</span> <span class="keyword">new</span>;
<a name="l00236"></a>00236 }
<a name="l00237"></a>00237 
<a name="l00238"></a>00238 <span class="keyword">struct </span><a class="code" href="structospf.html">ospf</a> *
<a name="l00239"></a><a class="code" href="ospfd_8h.html#a8983c703b5f60a7b9cf0c7ff42e62ac0">00239</a> <a class="code" href="ospfd_8c.html#a8ea0c935a4862c1469bc962e93fee74b">ospf_lookup</a> ()
<a name="l00240"></a>00240 {
<a name="l00241"></a>00241   <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (om-&gt;<a class="code" href="structospf__master.html#a2f5e0a5ef79f97d68abef8515b41a740">ospf</a>) == 0)
<a name="l00242"></a>00242     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00243"></a>00243 
<a name="l00244"></a>00244   <span class="keywordflow">return</span> <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (<a class="code" href="linklist_8h.html#a3d4492ca03b023aeecd4d6b0cdaa16fb">listhead</a> (om-&gt;<a class="code" href="structospf__master.html#a2f5e0a5ef79f97d68abef8515b41a740">ospf</a>));
<a name="l00245"></a>00245 }
<a name="l00246"></a>00246 
<a name="l00247"></a>00247 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00248"></a><a class="code" href="ospfd_8c.html#a0e0d305f56ff1fe9eaa0c06d56dcf7fa">00248</a> <a class="code" href="ospfd_8c.html#a0e0d305f56ff1fe9eaa0c06d56dcf7fa">ospf_add</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>)
<a name="l00249"></a>00249 {
<a name="l00250"></a>00250   <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (om-&gt;<a class="code" href="structospf__master.html#a2f5e0a5ef79f97d68abef8515b41a740">ospf</a>, ospf);
<a name="l00251"></a>00251 }
<a name="l00252"></a>00252 
<a name="l00253"></a>00253 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00254"></a><a class="code" href="ospfd_8c.html#add2572d0e80de2650e7f4ddef690e83e">00254</a> <a class="code" href="ospfd_8c.html#add2572d0e80de2650e7f4ddef690e83e">ospf_delete</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>)
<a name="l00255"></a>00255 {
<a name="l00256"></a>00256   <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (om-&gt;<a class="code" href="structospf__master.html#a2f5e0a5ef79f97d68abef8515b41a740">ospf</a>, ospf);
<a name="l00257"></a>00257 }
<a name="l00258"></a>00258 
<a name="l00259"></a>00259 <span class="keyword">struct </span><a class="code" href="structospf.html">ospf</a> *
<a name="l00260"></a><a class="code" href="ospfd_8h.html#aa95ac9f882bc74cad7b2b8c1f3687854">00260</a> <a class="code" href="ospfd_8c.html#a92d1f67d0a83fc48c3bcc4947ba0c913">ospf_get</a> ()
<a name="l00261"></a>00261 {
<a name="l00262"></a>00262   <span class="keyword">struct </span><a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>;
<a name="l00263"></a>00263 
<a name="l00264"></a>00264   ospf = <a class="code" href="ospfd_8c.html#a8ea0c935a4862c1469bc962e93fee74b">ospf_lookup</a> ();
<a name="l00265"></a>00265   <span class="keywordflow">if</span> (ospf == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00266"></a>00266     {
<a name="l00267"></a>00267       ospf = <a class="code" href="ospfd_8c.html#a61a47474abcb16fd62d9ad0dc0bb08c0">ospf_new</a> ();
<a name="l00268"></a>00268       <a class="code" href="ospfd_8c.html#a0e0d305f56ff1fe9eaa0c06d56dcf7fa">ospf_add</a> (ospf);
<a name="l00269"></a>00269 
<a name="l00270"></a>00270       <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#a442dcdca0018ce74dfaf7b81d1b6878a">router_id_static</a>.s_addr == 0)
<a name="l00271"></a>00271     <a class="code" href="ospfd_8c.html#a0d1cbe02041ecd44cfc37a94718ca69a">ospf_router_id_update</a> (ospf);
<a name="l00272"></a>00272 
<a name="l00273"></a>00273 <span class="preprocessor">#ifdef HAVE_OPAQUE_LSA</span>
<a name="l00274"></a>00274 <span class="preprocessor"></span>      <a class="code" href="ospf__opaque_8h.html#ab36bbe167f6dfaefff8cc6562088d5e8">ospf_opaque_type11_lsa_init</a> (ospf);
<a name="l00275"></a>00275 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_OPAQUE_LSA */</span>
<a name="l00276"></a>00276     }
<a name="l00277"></a>00277 
<a name="l00278"></a>00278   <span class="keywordflow">return</span> ospf;
<a name="l00279"></a>00279 }
<a name="l00280"></a>00280 
<a name="l00281"></a>00281 <span class="comment">/* Handle the second half of deferred shutdown. This is called either</span>
<a name="l00282"></a>00282 <span class="comment"> * from the deferred-shutdown timer thread, or directly through</span>
<a name="l00283"></a>00283 <span class="comment"> * ospf_deferred_shutdown_check.</span>
<a name="l00284"></a>00284 <span class="comment"> *</span>
<a name="l00285"></a>00285 <span class="comment"> * Function is to cleanup G-R state, if required then call ospf_finish_final</span>
<a name="l00286"></a>00286 <span class="comment"> * to complete shutdown of this ospf instance. Possibly exit if the</span>
<a name="l00287"></a>00287 <span class="comment"> * whole process is being shutdown and this was the last OSPF instance.</span>
<a name="l00288"></a>00288 <span class="comment"> */</span>
<a name="l00289"></a>00289 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00290"></a><a class="code" href="ospfd_8c.html#aa8a8ca3d37c7c3b883edca23fff8dc67">00290</a> <a class="code" href="ospfd_8c.html#aa8a8ca3d37c7c3b883edca23fff8dc67">ospf_deferred_shutdown_finish</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>)
<a name="l00291"></a>00291 {
<a name="l00292"></a>00292   ospf-&gt;<a class="code" href="structospf.html#a38422722427e7d694d547cec27735ab0">stub_router_shutdown_time</a> = <a class="code" href="ospfd_8h.html#a4a68456603adc72536dfd42656a45bce">OSPF_STUB_ROUTER_UNCONFIGURED</a>;  
<a name="l00293"></a>00293   <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#a11155cdc2e464fc222e65446124e26ac">t_deferred_shutdown</a>);
<a name="l00294"></a>00294   
<a name="l00295"></a>00295   <a class="code" href="ospfd_8c.html#a3246e8a54ca10359cd606959b7b29622">ospf_finish_final</a> (ospf);
<a name="l00296"></a>00296   
<a name="l00297"></a>00297   <span class="comment">/* *ospf is now invalid */</span>
<a name="l00298"></a>00298   
<a name="l00299"></a>00299   <span class="comment">/* ospfd being shut-down? If so, was this the last ospf instance? */</span>
<a name="l00300"></a>00300   <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (om-&gt;<a class="code" href="structospf__master.html#ae3feffaf85b6def6d6432d6e845d6610">options</a>, <a class="code" href="ospfd_8h.html#a9ad316e02e4cb4288126c9e88cb4730a">OSPF_MASTER_SHUTDOWN</a>)
<a name="l00301"></a>00301       &amp;&amp; (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (om-&gt;<a class="code" href="structospf__master.html#a2f5e0a5ef79f97d68abef8515b41a740">ospf</a>) == 0))
<a name="l00302"></a>00302     <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a> (0);
<a name="l00303"></a>00303 
<a name="l00304"></a>00304   <span class="keywordflow">return</span>;
<a name="l00305"></a>00305 }
<a name="l00306"></a>00306 
<a name="l00307"></a>00307 <span class="comment">/* Timer thread for G-R */</span>
<a name="l00308"></a>00308 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00309"></a><a class="code" href="ospfd_8c.html#a38fe1169fcf0756b509a8b12ada985cf">00309</a> <a class="code" href="ospfd_8c.html#a38fe1169fcf0756b509a8b12ada985cf">ospf_deferred_shutdown_timer</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>)
<a name="l00310"></a>00310 {
<a name="l00311"></a>00311   <span class="keyword">struct </span><a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a> = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a>(t);
<a name="l00312"></a>00312   
<a name="l00313"></a>00313   <a class="code" href="ospfd_8c.html#aa8a8ca3d37c7c3b883edca23fff8dc67">ospf_deferred_shutdown_finish</a> (ospf);
<a name="l00314"></a>00314   
<a name="l00315"></a>00315   <span class="keywordflow">return</span> 0;
<a name="l00316"></a>00316 }
<a name="l00317"></a>00317 
<a name="l00318"></a>00318 <span class="comment">/* Check whether deferred-shutdown must be scheduled, otherwise call</span>
<a name="l00319"></a>00319 <span class="comment"> * down directly into second-half of instance shutdown.</span>
<a name="l00320"></a>00320 <span class="comment"> */</span>
<a name="l00321"></a>00321 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00322"></a><a class="code" href="ospfd_8c.html#a3566d58661efb2cb9ee85ffa44daa06a">00322</a> <a class="code" href="ospfd_8c.html#a3566d58661efb2cb9ee85ffa44daa06a">ospf_deferred_shutdown_check</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>)
<a name="l00323"></a>00323 {
<a name="l00324"></a>00324   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> timeout;
<a name="l00325"></a>00325   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *ln;
<a name="l00326"></a>00326   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l00327"></a>00327   
<a name="l00328"></a>00328   <span class="comment">/* deferred shutdown already running? */</span>
<a name="l00329"></a>00329   <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#a11155cdc2e464fc222e65446124e26ac">t_deferred_shutdown</a>)
<a name="l00330"></a>00330     <span class="keywordflow">return</span>;
<a name="l00331"></a>00331   
<a name="l00332"></a>00332   <span class="comment">/* Should we try push out max-metric LSAs? */</span>
<a name="l00333"></a>00333   <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#a38422722427e7d694d547cec27735ab0">stub_router_shutdown_time</a> != <a class="code" href="ospfd_8h.html#a4a68456603adc72536dfd42656a45bce">OSPF_STUB_ROUTER_UNCONFIGURED</a>)
<a name="l00334"></a>00334     {
<a name="l00335"></a>00335       <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, ln, area))
<a name="l00336"></a>00336         {
<a name="l00337"></a>00337           <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (area-&gt;<a class="code" href="structospf__area.html#a867d739fef4ebeba5904af241dbcf88f">stub_router_state</a>, <a class="code" href="ospfd_8h.html#ab939bce5a7f69489b162a0304569c36e">OSPF_AREA_ADMIN_STUB_ROUTED</a>);
<a name="l00338"></a>00338           
<a name="l00339"></a>00339           <span class="keywordflow">if</span> (!<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (area-&gt;<a class="code" href="structospf__area.html#a867d739fef4ebeba5904af241dbcf88f">stub_router_state</a>, <a class="code" href="ospfd_8h.html#a11d7f12dfe50bd7cc95c7e76615cb8bc">OSPF_AREA_IS_STUB_ROUTED</a>))
<a name="l00340"></a>00340               <a class="code" href="ospf__lsa_8c.html#a66ad8a1fd151b43b11d7ec9650a644bf">ospf_router_lsa_timer_add</a> (area);
<a name="l00341"></a>00341         }
<a name="l00342"></a>00342       timeout = ospf-&gt;<a class="code" href="structospf.html#a38422722427e7d694d547cec27735ab0">stub_router_shutdown_time</a>;
<a name="l00343"></a>00343     }
<a name="l00344"></a>00344   <span class="keywordflow">else</span>
<a name="l00345"></a>00345     {
<a name="l00346"></a>00346       <span class="comment">/* No timer needed */</span>
<a name="l00347"></a>00347       <a class="code" href="ospfd_8c.html#aa8a8ca3d37c7c3b883edca23fff8dc67">ospf_deferred_shutdown_finish</a> (ospf);
<a name="l00348"></a>00348       <span class="keywordflow">return</span>;
<a name="l00349"></a>00349     }
<a name="l00350"></a>00350   
<a name="l00351"></a>00351   <a class="code" href="ospfd_8h.html#af55bc6c498265fffa9294d0f1b952267">OSPF_TIMER_ON</a> (ospf-&gt;<a class="code" href="structospf.html#a11155cdc2e464fc222e65446124e26ac">t_deferred_shutdown</a>, <a class="code" href="ospfd_8c.html#a38fe1169fcf0756b509a8b12ada985cf">ospf_deferred_shutdown_timer</a>,
<a name="l00352"></a>00352                  timeout);
<a name="l00353"></a>00353   <span class="keywordflow">return</span>;
<a name="l00354"></a>00354 }
<a name="l00355"></a>00355 
<a name="l00356"></a>00356 <span class="comment">/* Shut down the entire process */</span>
<a name="l00357"></a>00357 <span class="keywordtype">void</span>
<a name="l00358"></a><a class="code" href="ospfd_8h.html#a56662db258350b91cceee8e4ce3ed8c4">00358</a> <a class="code" href="ospfd_8c.html#a56662db258350b91cceee8e4ce3ed8c4">ospf_terminate</a> (<span class="keywordtype">void</span>)
<a name="l00359"></a>00359 {
<a name="l00360"></a>00360   <span class="keyword">struct </span><a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>;
<a name="l00361"></a>00361   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
<a name="l00362"></a>00362   
<a name="l00363"></a>00363   <span class="comment">/* shutdown already in progress */</span>
<a name="l00364"></a>00364   <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (om-&gt;<a class="code" href="structospf__master.html#ae3feffaf85b6def6d6432d6e845d6610">options</a>, <a class="code" href="ospfd_8h.html#a9ad316e02e4cb4288126c9e88cb4730a">OSPF_MASTER_SHUTDOWN</a>))
<a name="l00365"></a>00365     <span class="keywordflow">return</span>;
<a name="l00366"></a>00366   
<a name="l00367"></a>00367   <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (om-&gt;<a class="code" href="structospf__master.html#ae3feffaf85b6def6d6432d6e845d6610">options</a>, <a class="code" href="ospfd_8h.html#a9ad316e02e4cb4288126c9e88cb4730a">OSPF_MASTER_SHUTDOWN</a>);
<a name="l00368"></a>00368 
<a name="l00369"></a>00369   <span class="comment">/* exit immediately if OSPF not actually running */</span>
<a name="l00370"></a>00370   <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a>(om-&gt;<a class="code" href="structospf__master.html#a2f5e0a5ef79f97d68abef8515b41a740">ospf</a>) == 0)
<a name="l00371"></a>00371     <a class="code" href="vtysh_8c.html#afa5f6ba5518772e1487b961507e2a570">exit</a>(0);
<a name="l00372"></a>00372 
<a name="l00373"></a>00373   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (om-&gt;<a class="code" href="structospf__master.html#a2f5e0a5ef79f97d68abef8515b41a740">ospf</a>, node, nnode, ospf))
<a name="l00374"></a>00374     <a class="code" href="ospfd_8c.html#a71bfe0c0306143ad66bef9bb28c36462">ospf_finish</a> (ospf);
<a name="l00375"></a>00375 
<a name="l00376"></a>00376   <span class="comment">/* Deliberately go back up, hopefully to thread scheduler, as</span>
<a name="l00377"></a>00377 <span class="comment">   * One or more ospf_finish()&#39;s may have deferred shutdown to a timer</span>
<a name="l00378"></a>00378 <span class="comment">   * thread</span>
<a name="l00379"></a>00379 <span class="comment">   */</span>
<a name="l00380"></a>00380 }
<a name="l00381"></a>00381 
<a name="l00382"></a>00382 <span class="keywordtype">void</span>
<a name="l00383"></a><a class="code" href="ospfd_8h.html#a1bc53bd157843f0eb5df05bacfcfd3f7">00383</a> <a class="code" href="ospfd_8c.html#a71bfe0c0306143ad66bef9bb28c36462">ospf_finish</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>)
<a name="l00384"></a>00384 {
<a name="l00385"></a>00385   <span class="comment">/* let deferred shutdown decide */</span>
<a name="l00386"></a>00386   <a class="code" href="ospfd_8c.html#a3566d58661efb2cb9ee85ffa44daa06a">ospf_deferred_shutdown_check</a> (ospf);
<a name="l00387"></a>00387       
<a name="l00388"></a>00388   <span class="comment">/* if ospf_deferred_shutdown returns, then ospf_finish_final is</span>
<a name="l00389"></a>00389 <span class="comment">   * deferred to expiry of G-S timer thread. Return back up, hopefully</span>
<a name="l00390"></a>00390 <span class="comment">   * to thread scheduler.</span>
<a name="l00391"></a>00391 <span class="comment">   */</span>
<a name="l00392"></a>00392   <span class="keywordflow">return</span>;
<a name="l00393"></a>00393 }
<a name="l00394"></a>00394 
<a name="l00395"></a>00395 <span class="comment">/* Final cleanup of ospf instance */</span>
<a name="l00396"></a>00396 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00397"></a><a class="code" href="ospfd_8c.html#a3246e8a54ca10359cd606959b7b29622">00397</a> <a class="code" href="ospfd_8c.html#a3246e8a54ca10359cd606959b7b29622">ospf_finish_final</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>)
<a name="l00398"></a>00398 {
<a name="l00399"></a>00399   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00400"></a>00400   <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma;
<a name="l00401"></a>00401   <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa;
<a name="l00402"></a>00402   <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
<a name="l00403"></a>00403   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l00404"></a>00404   <span class="keyword">struct </span><a class="code" href="structospf__vl__data.html">ospf_vl_data</a> *vl_data;
<a name="l00405"></a>00405   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
<a name="l00406"></a>00406   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l00407"></a>00407 
<a name="l00408"></a>00408 <span class="preprocessor">#ifdef HAVE_OPAQUE_LSA</span>
<a name="l00409"></a>00409 <span class="preprocessor"></span>  <a class="code" href="ospf__opaque_8h.html#a585b78ae190eca243a024d1288611592">ospf_opaque_type11_lsa_term</a> (ospf);
<a name="l00410"></a>00410 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_OPAQUE_LSA */</span>
<a name="l00411"></a>00411   
<a name="l00412"></a>00412   <span class="comment">/* be nice if this worked, but it doesn&#39;t */</span>
<a name="l00413"></a>00413   <span class="comment">/*ospf_flush_self_originated_lsas_now (ospf);*/</span>
<a name="l00414"></a>00414   
<a name="l00415"></a>00415   <span class="comment">/* Unregister redistribution */</span>
<a name="l00416"></a>00416   <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="zebra_8h.html#aec97442680d773fd62f9af5c9426b842">ZEBRA_ROUTE_MAX</a>; i++)
<a name="l00417"></a>00417     <a class="code" href="ospf__zebra_8c.html#ad4e2f81ba398e7d54e102e7f8b8715be">ospf_redistribute_unset</a> (ospf, i);
<a name="l00418"></a>00418   <a class="code" href="ospf__zebra_8c.html#aed80a1c3db7d07002fce735375188fb5">ospf_redistribute_default_unset</a> (ospf);
<a name="l00419"></a>00419 
<a name="l00420"></a>00420   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, node, nnode, area))
<a name="l00421"></a>00421     <a class="code" href="ospfd_8c.html#a18ae69cd8ada47780d2abe5cf46aef7c">ospf_remove_vls_through_area</a> (ospf, area);
<a name="l00422"></a>00422   
<a name="l00423"></a>00423   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (ospf-&gt;<a class="code" href="structospf.html#acdf23576e62fa9370cc57b2384acf143">vlinks</a>, node, nnode, vl_data))
<a name="l00424"></a>00424     <a class="code" href="ospf__interface_8c.html#a9feb69dbfbf6c28344a5920b2e21e5ff">ospf_vl_delete</a> (ospf, vl_data);
<a name="l00425"></a>00425   
<a name="l00426"></a>00426   <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (ospf-&gt;<a class="code" href="structospf.html#acdf23576e62fa9370cc57b2384acf143">vlinks</a>);
<a name="l00427"></a>00427 
<a name="l00428"></a>00428   <span class="comment">/* Reset interface. */</span>
<a name="l00429"></a>00429   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (ospf-&gt;<a class="code" href="structospf.html#a977d3608343fe5db7900ec646880cb6a">oiflist</a>, node, nnode, oi))
<a name="l00430"></a>00430     <a class="code" href="ospf__interface_8c.html#aa06699fd3d9034f239d51f2ea6098b3b">ospf_if_free</a> (oi);
<a name="l00431"></a>00431 
<a name="l00432"></a>00432   <span class="comment">/* Clear static neighbors */</span>
<a name="l00433"></a>00433   <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (ospf-&gt;<a class="code" href="structospf.html#a89b824e82146fd2494b2bf596934ab57">nbr_nbma</a>); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
<a name="l00434"></a>00434     <span class="keywordflow">if</span> ((nbr_nbma = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>))
<a name="l00435"></a>00435       {
<a name="l00436"></a>00436     <a class="code" href="ospfd_8h.html#a00739e4ae75021e7e134dc6b292a9f2b">OSPF_POLL_TIMER_OFF</a> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a9aa6dd806f5903f6a4ded3ee4ca26e29">t_poll</a>);
<a name="l00437"></a>00437 
<a name="l00438"></a>00438     <span class="keywordflow">if</span> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a>)
<a name="l00439"></a>00439       {
<a name="l00440"></a>00440         nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a>-&gt;<a class="code" href="structospf__neighbor.html#a68b82493dd68fd0a271db2e168c36617">nbr_nbma</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00441"></a>00441         nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00442"></a>00442       }
<a name="l00443"></a>00443 
<a name="l00444"></a>00444     <span class="keywordflow">if</span> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a501752990df8f83d0efae32fbb9dead9">oi</a>)
<a name="l00445"></a>00445       {
<a name="l00446"></a>00446         <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a501752990df8f83d0efae32fbb9dead9">oi</a>-&gt;<a class="code" href="structospf__interface.html#a5711c57336783fe2d490c7760a4a18ed">nbr_nbma</a>, nbr_nbma);
<a name="l00447"></a>00447         nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a501752990df8f83d0efae32fbb9dead9">oi</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00448"></a>00448       }
<a name="l00449"></a>00449 
<a name="l00450"></a>00450     <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba3168b63f70b138c38a19ae6d743b77ed">MTYPE_OSPF_NEIGHBOR_STATIC</a>, nbr_nbma);
<a name="l00451"></a>00451       }
<a name="l00452"></a>00452 
<a name="l00453"></a>00453   <a class="code" href="table_8c.html#adc5ff276f1698f5bef7bb74289e3b26e">route_table_finish</a> (ospf-&gt;<a class="code" href="structospf.html#a89b824e82146fd2494b2bf596934ab57">nbr_nbma</a>);
<a name="l00454"></a>00454 
<a name="l00455"></a>00455   <span class="comment">/* Clear networks and Areas. */</span>
<a name="l00456"></a>00456   <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (ospf-&gt;<a class="code" href="structospf.html#a4f2d79a18b8a5eb9973c277282ed1b90">networks</a>); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
<a name="l00457"></a>00457     {
<a name="l00458"></a>00458       <span class="keyword">struct </span><a class="code" href="structospf__network.html">ospf_network</a> *<a class="code" href="command_8c.html#acec200f241e2d8f6b38bc83616c4c468">network</a>;
<a name="l00459"></a>00459 
<a name="l00460"></a>00460       <span class="keywordflow">if</span> ((network = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00461"></a>00461     {
<a name="l00462"></a>00462       <a class="code" href="ospfd_8c.html#a187d0469588c7386421e07eb4f65e344">ospf_network_free</a> (ospf, network);
<a name="l00463"></a>00463       rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00464"></a>00464       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00465"></a>00465     }
<a name="l00466"></a>00466     }
<a name="l00467"></a>00467 
<a name="l00468"></a>00468   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, node, nnode, area))
<a name="l00469"></a>00469     {
<a name="l00470"></a>00470       <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, area);
<a name="l00471"></a>00471       <a class="code" href="ospfd_8c.html#a764d9b44ff909f4260cf83bf516b8d0e">ospf_area_free</a> (area);
<a name="l00472"></a>00472     }
<a name="l00473"></a>00473 
<a name="l00474"></a>00474   <span class="comment">/* Cancel all timers. */</span>
<a name="l00475"></a>00475   <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#ad5e7d717716a67c3b2198f40c2bf2598">t_external_lsa</a>);
<a name="l00476"></a>00476   <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#a94a369b811b335e1d05e1dab77096606">t_router_lsa_update</a>);
<a name="l00477"></a>00477   <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#a7275a30b5634c98437fad833eee61a48">t_spf_calc</a>);
<a name="l00478"></a>00478   <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#ac589f939b5118b77086d3af51633ed3c">t_ase_calc</a>);
<a name="l00479"></a>00479   <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#ab8f18d70bc4436f4f060a328ebea77b1">t_maxage</a>);
<a name="l00480"></a>00480   <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#afc0d99523632821dde306d634e1c5ad1">t_maxage_walker</a>);
<a name="l00481"></a>00481   <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#adcdb64a50cde7f209f8c55df581d8bae">t_abr_task</a>);
<a name="l00482"></a>00482   <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#ad1f3e7eafbdb94f7c602f89f2b55450c">t_asbr_check</a>);
<a name="l00483"></a>00483   <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#abfa4d7a08ec475ecaa88449f363acd23">t_distribute_update</a>);
<a name="l00484"></a>00484   <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#a3f56b5850d9efb087ddb6d2eb79dd291">t_lsa_refresher</a>);
<a name="l00485"></a>00485   <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#ace995e4406c0eab0fcbe9353107e06f6">t_read</a>);
<a name="l00486"></a>00486   <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#a58c6957a24a39205e5a9f7aeab10e42b">t_write</a>);
<a name="l00487"></a>00487 <span class="preprocessor">#ifdef HAVE_OPAQUE_LSA</span>
<a name="l00488"></a>00488 <span class="preprocessor"></span>  <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;t_opaque_lsa_self);
<a name="l00489"></a>00489 <span class="preprocessor">#endif</span>
<a name="l00490"></a>00490 <span class="preprocessor"></span>
<a name="l00491"></a>00491   close (ospf-&gt;<a class="code" href="structospf.html#a13100b27c547a3ba3572908aa24259c5">fd</a>);
<a name="l00492"></a>00492   <a class="code" href="stream_8c.html#ac25ca0f9b32a76b4ea34ecb3c9d62481">stream_free</a>(ospf-&gt;<a class="code" href="structospf.html#a43a02c52efc45fdd5a775688aed3d66b">ibuf</a>);
<a name="l00493"></a>00493    
<a name="l00494"></a>00494 <span class="preprocessor">#ifdef HAVE_OPAQUE_LSA</span>
<a name="l00495"></a>00495 <span class="preprocessor"></span>  <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#ac7a1aa21490d2bd86999d2e494cde6d0">OPAQUE_AS_LSDB</a> (ospf), rn, lsa)
<a name="l00496"></a>00496     <a class="code" href="ospf__lsa_8c.html#ad6d5a002c1a2e4d50dfed4a627ea42a8">ospf_discard_from_db</a> (ospf, ospf-&gt;<a class="code" href="structospf.html#a2840075b79d0a04d991596028f6c2660">lsdb</a>, lsa);
<a name="l00497"></a>00497 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_OPAQUE_LSA */</span>
<a name="l00498"></a>00498   <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#ae56a8a7b638bd22caf86ea3d810fdbd9">EXTERNAL_LSDB</a> (ospf), rn, lsa)
<a name="l00499"></a>00499     <a class="code" href="ospf__lsa_8c.html#ad6d5a002c1a2e4d50dfed4a627ea42a8">ospf_discard_from_db</a> (ospf, ospf-&gt;<a class="code" href="structospf.html#a2840075b79d0a04d991596028f6c2660">lsdb</a>, lsa);
<a name="l00500"></a>00500 
<a name="l00501"></a>00501   <a class="code" href="ospf__lsdb_8c.html#aac04ea2aea1f1895b940fe30fa531a5f">ospf_lsdb_delete_all</a> (ospf-&gt;<a class="code" href="structospf.html#a2840075b79d0a04d991596028f6c2660">lsdb</a>);
<a name="l00502"></a>00502   <a class="code" href="ospf__lsdb_8c.html#ac2cd09a4c0bd7f62bc5312dc71ffde57">ospf_lsdb_free</a> (ospf-&gt;<a class="code" href="structospf.html#a2840075b79d0a04d991596028f6c2660">lsdb</a>);
<a name="l00503"></a>00503 
<a name="l00504"></a>00504   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (ospf-&gt;<a class="code" href="structospf.html#a846adae0f5fad7050467a638fc775ee1">maxage_lsa</a>, node, nnode, lsa))
<a name="l00505"></a>00505     <a class="code" href="ospf__lsa_8c.html#a268fc5c6673caf7ee94c0eaaa88455b8">ospf_lsa_unlock</a> (&amp;lsa); <span class="comment">/* maxage_lsa */</span>
<a name="l00506"></a>00506 
<a name="l00507"></a>00507   <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (ospf-&gt;<a class="code" href="structospf.html#a846adae0f5fad7050467a638fc775ee1">maxage_lsa</a>);
<a name="l00508"></a>00508 
<a name="l00509"></a>00509   <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#a295e93ba4c3d5a63e31eabb04593c8fe">old_table</a>)
<a name="l00510"></a>00510     <a class="code" href="ospf__route_8c.html#a1af9a7462973d18c31f1f610ff70e338">ospf_route_table_free</a> (ospf-&gt;<a class="code" href="structospf.html#a295e93ba4c3d5a63e31eabb04593c8fe">old_table</a>);
<a name="l00511"></a>00511   <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#a1fd3dcac2e3c565e23fce6884ffb097f">new_table</a>)
<a name="l00512"></a>00512     {
<a name="l00513"></a>00513       <a class="code" href="ospf__route_8c.html#aa7c274fb5c9182db7291a1e03aadf4c4">ospf_route_delete</a> (ospf-&gt;<a class="code" href="structospf.html#a1fd3dcac2e3c565e23fce6884ffb097f">new_table</a>);
<a name="l00514"></a>00514       <a class="code" href="ospf__route_8c.html#a1af9a7462973d18c31f1f610ff70e338">ospf_route_table_free</a> (ospf-&gt;<a class="code" href="structospf.html#a1fd3dcac2e3c565e23fce6884ffb097f">new_table</a>);
<a name="l00515"></a>00515     }
<a name="l00516"></a>00516   <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#a03ee35eed9de19693cd4aa1cfcd59daf">old_rtrs</a>)
<a name="l00517"></a>00517     <a class="code" href="ospf__spf_8c.html#a5861f43a374234df3d96fc31e6697387">ospf_rtrs_free</a> (ospf-&gt;<a class="code" href="structospf.html#a03ee35eed9de19693cd4aa1cfcd59daf">old_rtrs</a>);
<a name="l00518"></a>00518   <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#a0c2e7f55defc0862ed00e1230cd53bd4">new_rtrs</a>)
<a name="l00519"></a>00519     <a class="code" href="ospf__spf_8c.html#a5861f43a374234df3d96fc31e6697387">ospf_rtrs_free</a> (ospf-&gt;<a class="code" href="structospf.html#a0c2e7f55defc0862ed00e1230cd53bd4">new_rtrs</a>);
<a name="l00520"></a>00520   <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#a0b8f6a35ae74cd601d0a775df4d96f13">new_external_route</a>)
<a name="l00521"></a>00521     {
<a name="l00522"></a>00522       <a class="code" href="ospf__route_8c.html#aa7c274fb5c9182db7291a1e03aadf4c4">ospf_route_delete</a> (ospf-&gt;<a class="code" href="structospf.html#a0b8f6a35ae74cd601d0a775df4d96f13">new_external_route</a>);
<a name="l00523"></a>00523       <a class="code" href="ospf__route_8c.html#a1af9a7462973d18c31f1f610ff70e338">ospf_route_table_free</a> (ospf-&gt;<a class="code" href="structospf.html#a0b8f6a35ae74cd601d0a775df4d96f13">new_external_route</a>);
<a name="l00524"></a>00524     }
<a name="l00525"></a>00525   <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#aa4376d3468d1d9fd5a6ed373e149338c">old_external_route</a>)
<a name="l00526"></a>00526     {
<a name="l00527"></a>00527       <a class="code" href="ospf__route_8c.html#aa7c274fb5c9182db7291a1e03aadf4c4">ospf_route_delete</a> (ospf-&gt;<a class="code" href="structospf.html#aa4376d3468d1d9fd5a6ed373e149338c">old_external_route</a>);
<a name="l00528"></a>00528       <a class="code" href="ospf__route_8c.html#a1af9a7462973d18c31f1f610ff70e338">ospf_route_table_free</a> (ospf-&gt;<a class="code" href="structospf.html#aa4376d3468d1d9fd5a6ed373e149338c">old_external_route</a>);
<a name="l00529"></a>00529     }
<a name="l00530"></a>00530   <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#abd15a2439cc8b1e17544f8eec597c070">external_lsas</a>)
<a name="l00531"></a>00531     {
<a name="l00532"></a>00532       <a class="code" href="ospf__ase_8c.html#a42bf210bf76365af43a100923da36329">ospf_ase_external_lsas_finish</a> (ospf-&gt;<a class="code" href="structospf.html#abd15a2439cc8b1e17544f8eec597c070">external_lsas</a>);
<a name="l00533"></a>00533     }
<a name="l00534"></a>00534 
<a name="l00535"></a>00535   <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>);
<a name="l00536"></a>00536   
<a name="l00537"></a>00537   <span class="keywordflow">for</span> (i = <a class="code" href="zebra_8h.html#a650967617adbd419d14e5e05d9548108">ZEBRA_ROUTE_SYSTEM</a>; i &lt;= <a class="code" href="zebra_8h.html#aec97442680d773fd62f9af5c9426b842">ZEBRA_ROUTE_MAX</a>; i++)
<a name="l00538"></a>00538     <span class="keywordflow">if</span> (<a class="code" href="ospfd_8h.html#a9fa5e60f9244cb3ea41a0a96d3c9b85c">EXTERNAL_INFO</a> (i) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00539"></a>00539       <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (<a class="code" href="ospfd_8h.html#a9fa5e60f9244cb3ea41a0a96d3c9b85c">EXTERNAL_INFO</a> (i)); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
<a name="l00540"></a>00540     {
<a name="l00541"></a>00541       <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00542"></a>00542         <span class="keywordflow">continue</span>;
<a name="l00543"></a>00543       
<a name="l00544"></a>00544       <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba7c6beef4557d59d431c035b612b64a83">MTYPE_OSPF_EXTERNAL_INFO</a>, rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>);
<a name="l00545"></a>00545       rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00546"></a>00546       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00547"></a>00547     }
<a name="l00548"></a>00548 
<a name="l00549"></a>00549   <a class="code" href="ospf__zebra_8c.html#ae662051107e9412269a5868e5c1085d7">ospf_distance_reset</a> (ospf);
<a name="l00550"></a>00550   <a class="code" href="table_8c.html#adc5ff276f1698f5bef7bb74289e3b26e">route_table_finish</a> (ospf-&gt;<a class="code" href="structospf.html#aa0bcd2b2f2d571c795617a6ddcd0faa7">distance_table</a>);
<a name="l00551"></a>00551 
<a name="l00552"></a>00552   <a class="code" href="ospfd_8c.html#add2572d0e80de2650e7f4ddef690e83e">ospf_delete</a> (ospf);
<a name="l00553"></a>00553 
<a name="l00554"></a>00554   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba0ad9117251a05de9c1c0e34cb4b08914">MTYPE_OSPF_TOP</a>, ospf);
<a name="l00555"></a>00555 }
<a name="l00556"></a>00556 
<a name="l00557"></a>00557 
<a name="l00558"></a>00558 <span class="comment">/* allocate new OSPF Area object */</span>
<a name="l00559"></a>00559 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *
<a name="l00560"></a><a class="code" href="ospfd_8c.html#a5732953cc118f11638c13222c1c92f11">00560</a> <a class="code" href="ospfd_8c.html#a5732953cc118f11638c13222c1c92f11">ospf_area_new</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>)
<a name="l00561"></a>00561 {
<a name="l00562"></a>00562   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<span class="keyword">new</span>;
<a name="l00563"></a>00563 
<a name="l00564"></a>00564   <span class="comment">/* Allocate new config_network. */</span>
<a name="l00565"></a>00565   <span class="keyword">new</span> = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167bad6044d4348a34b266dbb18252531c7e9">MTYPE_OSPF_AREA</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a>));
<a name="l00566"></a>00566 
<a name="l00567"></a>00567   <span class="keyword">new</span>-&gt;ospf = <a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>;
<a name="l00568"></a>00568 
<a name="l00569"></a>00569   <span class="keyword">new</span>-&gt;area_id = <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>;
<a name="l00570"></a>00570 
<a name="l00571"></a>00571   <span class="keyword">new</span>-&gt;external_routing = <a class="code" href="ospfd_8h.html#a43f84c8e8584ccc8b82990d251abec4d">OSPF_AREA_DEFAULT</a>;
<a name="l00572"></a>00572   <span class="keyword">new</span>-&gt;default_cost = 1;
<a name="l00573"></a>00573   <span class="keyword">new</span>-&gt;auth_type = <a class="code" href="ospfd_8h.html#a7fed6737ae4236d1f4ac7c977844b128">OSPF_AUTH_NULL</a>;
<a name="l00574"></a>00574   
<a name="l00575"></a>00575   <span class="comment">/* New LSDB init. */</span>
<a name="l00576"></a>00576   <span class="keyword">new</span>-&gt;lsdb = <a class="code" href="ospf__lsdb_8c.html#a897e69e3ce0ff001f40e3cd8ed4e0cdf">ospf_lsdb_new</a> ();
<a name="l00577"></a>00577 
<a name="l00578"></a>00578   <span class="comment">/* Self-originated LSAs initialize. */</span>
<a name="l00579"></a>00579   <span class="keyword">new</span>-&gt;router_lsa_self = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00580"></a>00580 
<a name="l00581"></a>00581 <span class="preprocessor">#ifdef HAVE_OPAQUE_LSA</span>
<a name="l00582"></a>00582 <span class="preprocessor"></span>  <a class="code" href="ospf__opaque_8h.html#a6817ba7e55ba931f75b13f719da847b0">ospf_opaque_type10_lsa_init</a> (<span class="keyword">new</span>);
<a name="l00583"></a>00583 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_OPAQUE_LSA */</span>
<a name="l00584"></a>00584 
<a name="l00585"></a>00585   <span class="keyword">new</span>-&gt;oiflist = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l00586"></a>00586   <span class="keyword">new</span>-&gt;ranges = <a class="code" href="table_8c.html#a9b1d6d715d752d224b322da32d425046">route_table_init</a> ();
<a name="l00587"></a>00587 
<a name="l00588"></a>00588   <span class="keywordflow">if</span> (area_id.s_addr == <a class="code" href="ospfd_8h.html#a1f0c659cdd89cdac0e14ea0fdec8b7f7">OSPF_AREA_BACKBONE</a>)
<a name="l00589"></a>00589     ospf-&gt;<a class="code" href="structospf.html#af16c64964298aad9859d5b04503228bd">backbone</a> = <span class="keyword">new</span>;
<a name="l00590"></a>00590 
<a name="l00591"></a>00591   <span class="keywordflow">return</span> <span class="keyword">new</span>;
<a name="l00592"></a>00592 }
<a name="l00593"></a>00593 
<a name="l00594"></a>00594 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00595"></a><a class="code" href="ospfd_8c.html#a764d9b44ff909f4260cf83bf516b8d0e">00595</a> <a class="code" href="ospfd_8c.html#a764d9b44ff909f4260cf83bf516b8d0e">ospf_area_free</a> (<span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l00596"></a>00596 {
<a name="l00597"></a>00597   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00598"></a>00598   <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa;
<a name="l00599"></a>00599 
<a name="l00600"></a>00600   <span class="comment">/* Free LSDBs. */</span>
<a name="l00601"></a>00601   <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#a9b953d2ac1c54862e897adada93cb8a4">ROUTER_LSDB</a> (area), rn, lsa)
<a name="l00602"></a>00602     <a class="code" href="ospf__lsa_8c.html#ad6d5a002c1a2e4d50dfed4a627ea42a8">ospf_discard_from_db</a> (area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>, area-&gt;<a class="code" href="structospf__area.html#a234992a360998d34aba7b183cf2019c9">lsdb</a>, lsa);
<a name="l00603"></a>00603   <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#a73230fbde5946c52a9905d9d56f5eb0d">NETWORK_LSDB</a> (area), rn, lsa)
<a name="l00604"></a>00604     <a class="code" href="ospf__lsa_8c.html#ad6d5a002c1a2e4d50dfed4a627ea42a8">ospf_discard_from_db</a> (area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>, area-&gt;<a class="code" href="structospf__area.html#a234992a360998d34aba7b183cf2019c9">lsdb</a>, lsa);
<a name="l00605"></a>00605   <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#a58ae6df59f7476d7784e19f7ca19db1f">SUMMARY_LSDB</a> (area), rn, lsa)
<a name="l00606"></a>00606     <a class="code" href="ospf__lsa_8c.html#ad6d5a002c1a2e4d50dfed4a627ea42a8">ospf_discard_from_db</a> (area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>, area-&gt;<a class="code" href="structospf__area.html#a234992a360998d34aba7b183cf2019c9">lsdb</a>, lsa);
<a name="l00607"></a>00607   <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#a145a10afd0c8a801d2e84b26c0becbfd">ASBR_SUMMARY_LSDB</a> (area), rn, lsa)
<a name="l00608"></a>00608     <a class="code" href="ospf__lsa_8c.html#ad6d5a002c1a2e4d50dfed4a627ea42a8">ospf_discard_from_db</a> (area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>, area-&gt;<a class="code" href="structospf__area.html#a234992a360998d34aba7b183cf2019c9">lsdb</a>, lsa);
<a name="l00609"></a>00609 
<a name="l00610"></a>00610   <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#aa704d331d2ac4e4034faca5c0f177364">NSSA_LSDB</a> (area), rn, lsa)
<a name="l00611"></a>00611     <a class="code" href="ospf__lsa_8c.html#ad6d5a002c1a2e4d50dfed4a627ea42a8">ospf_discard_from_db</a> (area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>, area-&gt;<a class="code" href="structospf__area.html#a234992a360998d34aba7b183cf2019c9">lsdb</a>, lsa);
<a name="l00612"></a>00612 <span class="preprocessor">#ifdef HAVE_OPAQUE_LSA</span>
<a name="l00613"></a>00613 <span class="preprocessor"></span>  <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#aec3918874489142043aedd1ac5855f57">OPAQUE_AREA_LSDB</a> (area), rn, lsa)
<a name="l00614"></a>00614     <a class="code" href="ospf__lsa_8c.html#ad6d5a002c1a2e4d50dfed4a627ea42a8">ospf_discard_from_db</a> (area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>, area-&gt;<a class="code" href="structospf__area.html#a234992a360998d34aba7b183cf2019c9">lsdb</a>, lsa);
<a name="l00615"></a>00615   <a class="code" href="ospf__lsdb_8h.html#a3112a41cf80dfabbf2962e8df1b8504b">LSDB_LOOP</a> (<a class="code" href="ospf__lsdb_8h.html#a7b6d75a56662bb4e124777b376bb84da">OPAQUE_LINK_LSDB</a> (area), rn, lsa)
<a name="l00616"></a>00616     <a class="code" href="ospf__lsa_8c.html#ad6d5a002c1a2e4d50dfed4a627ea42a8">ospf_discard_from_db</a> (area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>, area-&gt;<a class="code" href="structospf__area.html#a234992a360998d34aba7b183cf2019c9">lsdb</a>, lsa);
<a name="l00617"></a>00617 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_OPAQUE_LSA */</span>
<a name="l00618"></a>00618 
<a name="l00619"></a>00619   <a class="code" href="ospf__lsdb_8c.html#aac04ea2aea1f1895b940fe30fa531a5f">ospf_lsdb_delete_all</a> (area-&gt;<a class="code" href="structospf__area.html#a234992a360998d34aba7b183cf2019c9">lsdb</a>);
<a name="l00620"></a>00620   <a class="code" href="ospf__lsdb_8c.html#ac2cd09a4c0bd7f62bc5312dc71ffde57">ospf_lsdb_free</a> (area-&gt;<a class="code" href="structospf__area.html#a234992a360998d34aba7b183cf2019c9">lsdb</a>);
<a name="l00621"></a>00621 
<a name="l00622"></a>00622   <a class="code" href="ospf__lsa_8c.html#a268fc5c6673caf7ee94c0eaaa88455b8">ospf_lsa_unlock</a> (&amp;area-&gt;<a class="code" href="structospf__area.html#a53c30c4d48396f97336cf4e1ae4545e2">router_lsa_self</a>);
<a name="l00623"></a>00623   
<a name="l00624"></a>00624   <a class="code" href="table_8c.html#adc5ff276f1698f5bef7bb74289e3b26e">route_table_finish</a> (area-&gt;<a class="code" href="structospf__area.html#ae4d5f7877962eb3e477299a8f93dbfff">ranges</a>);
<a name="l00625"></a>00625   <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (area-&gt;<a class="code" href="structospf__area.html#aec49fceeb655dde5648208d29dfc66a4">oiflist</a>);
<a name="l00626"></a>00626 
<a name="l00627"></a>00627   <span class="keywordflow">if</span> (<a class="code" href="ospf6__area_8h.html#a4b149526dcc0d9c5de7086d581336dcb">EXPORT_NAME</a> (area))
<a name="l00628"></a>00628     free (<a class="code" href="ospf6__area_8h.html#a4b149526dcc0d9c5de7086d581336dcb">EXPORT_NAME</a> (area));
<a name="l00629"></a>00629 
<a name="l00630"></a>00630   <span class="keywordflow">if</span> (<a class="code" href="ospf6__area_8h.html#a8f03536971036c0537f7bda3fb525b14">IMPORT_NAME</a> (area))
<a name="l00631"></a>00631     free (<a class="code" href="ospf6__area_8h.html#a8f03536971036c0537f7bda3fb525b14">IMPORT_NAME</a> (area));
<a name="l00632"></a>00632 
<a name="l00633"></a>00633   <span class="comment">/* Cancel timer. */</span>
<a name="l00634"></a>00634   <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (area-&gt;<a class="code" href="structospf__area.html#a7101904a0d8d145b671919e47eb7c107">t_router_lsa_self</a>);
<a name="l00635"></a>00635   <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (area-&gt;<a class="code" href="structospf__area.html#a92d4bf45a2078da60d208952324c868b">t_stub_router</a>);
<a name="l00636"></a>00636 <span class="preprocessor">#ifdef HAVE_OPAQUE_LSA</span>
<a name="l00637"></a>00637 <span class="preprocessor"></span>  <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (area-&gt;t_opaque_lsa_self);
<a name="l00638"></a>00638 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_OPAQUE_LSA */</span>
<a name="l00639"></a>00639   
<a name="l00640"></a>00640   <span class="keywordflow">if</span> (<a class="code" href="ospfd_8h.html#a62518cec4ea9ee2a4db410d3c42b23f7">OSPF_IS_AREA_BACKBONE</a> (area))
<a name="l00641"></a>00641     area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>-&gt;<a class="code" href="structospf.html#af16c64964298aad9859d5b04503228bd">backbone</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00642"></a>00642 
<a name="l00643"></a>00643   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167bad6044d4348a34b266dbb18252531c7e9">MTYPE_OSPF_AREA</a>, area);
<a name="l00644"></a>00644 }
<a name="l00645"></a>00645 
<a name="l00646"></a>00646 <span class="keywordtype">void</span>
<a name="l00647"></a><a class="code" href="ospfd_8h.html#af2622d4f87eaa8c0f21960175643eb1d">00647</a> <a class="code" href="ospfd_8c.html#aa12d53d797f5400a252c49e4fe12428d">ospf_area_check_free</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr area_id)
<a name="l00648"></a>00648 {
<a name="l00649"></a>00649   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l00650"></a>00650 
<a name="l00651"></a>00651   area = <a class="code" href="ospfd_8c.html#a24d6ed2a6a05e4856e6dbf5eea74f6ef">ospf_area_lookup_by_area_id</a> (ospf, area_id);
<a name="l00652"></a>00652   <span class="keywordflow">if</span> (area &amp;&amp;
<a name="l00653"></a>00653       <a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (area-&gt;<a class="code" href="structospf__area.html#aec49fceeb655dde5648208d29dfc66a4">oiflist</a>) == 0 &amp;&amp;
<a name="l00654"></a>00654       area-&gt;<a class="code" href="structospf__area.html#ae4d5f7877962eb3e477299a8f93dbfff">ranges</a>-&gt;<a class="code" href="structroute__table.html#a4d58458d9c18192cecaea1b98775f529">top</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp;
<a name="l00655"></a>00655       area-&gt;<a class="code" href="structospf__area.html#ac5b177716c810e517f0aacbdbe68a6e4">shortcut_configured</a> == <a class="code" href="ospfd_8h.html#a830dd703d89739f72962f5d4ccd8929d">OSPF_SHORTCUT_DEFAULT</a> &amp;&amp;
<a name="l00656"></a>00656       area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a> == <a class="code" href="ospfd_8h.html#a43f84c8e8584ccc8b82990d251abec4d">OSPF_AREA_DEFAULT</a> &amp;&amp;
<a name="l00657"></a>00657       area-&gt;<a class="code" href="structospf__area.html#a2a2b5634d8424e1a939836254700a8d0">no_summary</a> == 0 &amp;&amp;
<a name="l00658"></a>00658       area-&gt;<a class="code" href="structospf__area.html#a8276632b8bab54988029593bb3ebc502">default_cost</a> == 1 &amp;&amp;
<a name="l00659"></a>00659       <a class="code" href="ospf6__area_8h.html#a4b149526dcc0d9c5de7086d581336dcb">EXPORT_NAME</a> (area) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp;
<a name="l00660"></a>00660       <a class="code" href="ospf6__area_8h.html#a8f03536971036c0537f7bda3fb525b14">IMPORT_NAME</a> (area) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp;
<a name="l00661"></a>00661       area-&gt;<a class="code" href="structospf__area.html#af738a86bf7f84034a1e4d1b288a70b22">auth_type</a> == <a class="code" href="ospfd_8h.html#a7fed6737ae4236d1f4ac7c977844b128">OSPF_AUTH_NULL</a>)
<a name="l00662"></a>00662     {
<a name="l00663"></a>00663       <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, area);
<a name="l00664"></a>00664       <a class="code" href="ospfd_8c.html#a764d9b44ff909f4260cf83bf516b8d0e">ospf_area_free</a> (area);
<a name="l00665"></a>00665     }
<a name="l00666"></a>00666 }
<a name="l00667"></a>00667 
<a name="l00668"></a>00668 <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *
<a name="l00669"></a><a class="code" href="ospfd_8h.html#abdc7cc4a63a4f22416478da32e6ad301">00669</a> <a class="code" href="ospfd_8c.html#aa215da7694f647944fed0fad86df18c8">ospf_area_get</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>, <span class="keywordtype">int</span> <a class="code" href="structospf__area.html#a83fcfc9add37df9fa90e4cb142ff5b5a">format</a>)
<a name="l00670"></a>00670 {
<a name="l00671"></a>00671   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l00672"></a>00672   
<a name="l00673"></a>00673   area = <a class="code" href="ospfd_8c.html#a24d6ed2a6a05e4856e6dbf5eea74f6ef">ospf_area_lookup_by_area_id</a> (ospf, area_id);
<a name="l00674"></a>00674   <span class="keywordflow">if</span> (!area)
<a name="l00675"></a>00675     {
<a name="l00676"></a>00676       area = <a class="code" href="ospfd_8c.html#a5732953cc118f11638c13222c1c92f11">ospf_area_new</a> (ospf, area_id);
<a name="l00677"></a>00677       area-&gt;<a class="code" href="structospf__area.html#a83fcfc9add37df9fa90e4cb142ff5b5a">format</a> = <a class="code" href="structospf__area.html#a83fcfc9add37df9fa90e4cb142ff5b5a">format</a>;
<a name="l00678"></a>00678       <a class="code" href="linklist_8c.html#abfe4a1419e46dc9e1235dcbe6b52a022">listnode_add_sort</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, area);
<a name="l00679"></a>00679       <a class="code" href="ospf__abr_8c.html#aae7756099eb070db13009f36bfd7736f">ospf_check_abr_status</a> (ospf);  
<a name="l00680"></a>00680     }
<a name="l00681"></a>00681 
<a name="l00682"></a>00682   <span class="keywordflow">return</span> <a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l00683"></a>00683 }
<a name="l00684"></a>00684 
<a name="l00685"></a>00685 <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *
<a name="l00686"></a><a class="code" href="ospfd_8h.html#ac1b2b83a72dd80a3a5fb2c0d2259a1cb">00686</a> <a class="code" href="ospfd_8c.html#a24d6ed2a6a05e4856e6dbf5eea74f6ef">ospf_area_lookup_by_area_id</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>)
<a name="l00687"></a>00687 {
<a name="l00688"></a>00688   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l00689"></a>00689   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00690"></a>00690 
<a name="l00691"></a>00691   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a3f6f2d3b6f2ae9f0ad87223301d92bcc">areas</a>, node, area))
<a name="l00692"></a>00692     <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>, &amp;area_id))
<a name="l00693"></a>00693       <span class="keywordflow">return</span> <a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l00694"></a>00694 
<a name="l00695"></a>00695   <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00696"></a>00696 }
<a name="l00697"></a>00697 
<a name="l00698"></a>00698 <span class="keywordtype">void</span>
<a name="l00699"></a><a class="code" href="ospfd_8h.html#a40b3b6184ef7e77a8dae5458fdd7b5b0">00699</a> <a class="code" href="ospfd_8c.html#ab5f82e15e585aa9de10f7f426e445872">ospf_area_add_if</a> (<span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>, <span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *oi)
<a name="l00700"></a>00700 {
<a name="l00701"></a>00701   <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (area-&gt;<a class="code" href="structospf__area.html#aec49fceeb655dde5648208d29dfc66a4">oiflist</a>, oi);
<a name="l00702"></a>00702 }
<a name="l00703"></a>00703 
<a name="l00704"></a>00704 <span class="keywordtype">void</span>
<a name="l00705"></a><a class="code" href="ospfd_8h.html#a98dec61bf57663245a440fec38a4ba13">00705</a> <a class="code" href="ospfd_8c.html#a4f7456bdd0cb1c23c19a62b960cebda0">ospf_area_del_if</a> (<span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>, <span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *oi)
<a name="l00706"></a>00706 {
<a name="l00707"></a>00707   <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (area-&gt;<a class="code" href="structospf__area.html#aec49fceeb655dde5648208d29dfc66a4">oiflist</a>, oi);
<a name="l00708"></a>00708 }
<a name="l00709"></a>00709 
<a name="l00710"></a>00710 
<a name="l00711"></a>00711 <span class="comment">/* Config network statement related functions. */</span>
<a name="l00712"></a>00712 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structospf__network.html">ospf_network</a> *
<a name="l00713"></a><a class="code" href="ospfd_8c.html#a2d9e8b20aedcec6b5bafda7806c70aaf">00713</a> <a class="code" href="ospfd_8c.html#a2d9e8b20aedcec6b5bafda7806c70aaf">ospf_network_new</a> (<span class="keyword">struct</span> in_addr <a class="code" href="structospf__network.html#a9a98fa52b566fda4f48f4cd8a4b77e54">area_id</a>, <span class="keywordtype">int</span> <a class="code" href="structospf__network.html#a92a758a904ba2595a41f83d14ea80b96">format</a>)
<a name="l00714"></a>00714 {
<a name="l00715"></a>00715   <span class="keyword">struct </span><a class="code" href="structospf__network.html">ospf_network</a> *<span class="keyword">new</span>;
<a name="l00716"></a>00716   <span class="keyword">new</span> = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba01eb351c954ac7848f468b04a57eccb0">MTYPE_OSPF_NETWORK</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structospf__network.html">ospf_network</a>));
<a name="l00717"></a>00717 
<a name="l00718"></a>00718   <span class="keyword">new</span>-&gt;area_id = <a class="code" href="structospf__network.html#a9a98fa52b566fda4f48f4cd8a4b77e54">area_id</a>;
<a name="l00719"></a>00719   <span class="keyword">new</span>-&gt;format = <a class="code" href="structospf__network.html#a92a758a904ba2595a41f83d14ea80b96">format</a>;
<a name="l00720"></a>00720   
<a name="l00721"></a>00721   <span class="keywordflow">return</span> <span class="keyword">new</span>;
<a name="l00722"></a>00722 }
<a name="l00723"></a>00723 
<a name="l00724"></a>00724 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00725"></a><a class="code" href="ospfd_8c.html#a187d0469588c7386421e07eb4f65e344">00725</a> <a class="code" href="ospfd_8c.html#a187d0469588c7386421e07eb4f65e344">ospf_network_free</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> <a class="code" href="structospf__network.html">ospf_network</a> *<a class="code" href="command_8c.html#acec200f241e2d8f6b38bc83616c4c468">network</a>)
<a name="l00726"></a>00726 {
<a name="l00727"></a>00727   <a class="code" href="ospfd_8c.html#aa12d53d797f5400a252c49e4fe12428d">ospf_area_check_free</a> (ospf, network-&gt;<a class="code" href="structospf__network.html#a9a98fa52b566fda4f48f4cd8a4b77e54">area_id</a>);
<a name="l00728"></a>00728   <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (ospf);
<a name="l00729"></a>00729   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba01eb351c954ac7848f468b04a57eccb0">MTYPE_OSPF_NETWORK</a>, network);
<a name="l00730"></a>00730 }
<a name="l00731"></a>00731 
<a name="l00732"></a>00732 <span class="keywordtype">int</span>
<a name="l00733"></a><a class="code" href="ospfd_8h.html#a6d676a390e4e16c2aab0e2359b7ebc33">00733</a> <a class="code" href="ospfd_8c.html#ac39b4e35ee81faab9f177f9c4f57a9b2">ospf_network_set</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>,
<a name="l00734"></a>00734           <span class="keyword">struct</span> in_addr <a class="code" href="structospf__network.html#a9a98fa52b566fda4f48f4cd8a4b77e54">area_id</a>)
<a name="l00735"></a>00735 {
<a name="l00736"></a>00736   <span class="keyword">struct </span><a class="code" href="structospf__network.html">ospf_network</a> *<a class="code" href="command_8c.html#acec200f241e2d8f6b38bc83616c4c468">network</a>;
<a name="l00737"></a>00737   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l00738"></a>00738   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00739"></a>00739   <span class="keyword">struct </span><a class="code" href="structexternal__info.html">external_info</a> *ei;
<a name="l00740"></a>00740   <span class="keywordtype">int</span> ret = <a class="code" href="ospfd_8h.html#a4693ac54d402184ececda946d167d1ef">OSPF_AREA_ID_FORMAT_ADDRESS</a>;
<a name="l00741"></a>00741 
<a name="l00742"></a>00742   rn = <a class="code" href="table_8c.html#ac91fdff1a0b8dc3d60ebaf152caa0f80">route_node_get</a> (ospf-&gt;<a class="code" href="structospf.html#a4f2d79a18b8a5eb9973c277282ed1b90">networks</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)p);
<a name="l00743"></a>00743   <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
<a name="l00744"></a>00744     {
<a name="l00745"></a>00745       <span class="comment">/* There is already same network statement. */</span>
<a name="l00746"></a>00746       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00747"></a>00747       <span class="keywordflow">return</span> 0;
<a name="l00748"></a>00748     }
<a name="l00749"></a>00749 
<a name="l00750"></a>00750   rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = network = <a class="code" href="ospfd_8c.html#a2d9e8b20aedcec6b5bafda7806c70aaf">ospf_network_new</a> (area_id, ret);
<a name="l00751"></a>00751   area = <a class="code" href="ospfd_8c.html#aa215da7694f647944fed0fad86df18c8">ospf_area_get</a> (ospf, area_id, ret);
<a name="l00752"></a>00752 
<a name="l00753"></a>00753   <span class="comment">/* Run network config now. */</span>
<a name="l00754"></a>00754   <a class="code" href="ospfd_8c.html#a9ff9167ef11494a725578e5705632d84">ospf_network_run</a> ((<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)p, area);
<a name="l00755"></a>00755 
<a name="l00756"></a>00756   <span class="comment">/* Update connected redistribute. */</span>
<a name="l00757"></a>00757   <span class="keywordflow">if</span> (<a class="code" href="ospf__zebra_8c.html#a0b61d95e6baf19bdd9d8a7705788a226">ospf_is_type_redistributed</a> (<a class="code" href="zebra_8h.html#aee45d53cdac2bd7fe4b2ce021c9d1b30">ZEBRA_ROUTE_CONNECT</a>))
<a name="l00758"></a>00758     <span class="keywordflow">if</span> (<a class="code" href="ospfd_8h.html#a9fa5e60f9244cb3ea41a0a96d3c9b85c">EXTERNAL_INFO</a> (<a class="code" href="zebra_8h.html#aee45d53cdac2bd7fe4b2ce021c9d1b30">ZEBRA_ROUTE_CONNECT</a>))
<a name="l00759"></a>00759       <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (<a class="code" href="ospfd_8h.html#a9fa5e60f9244cb3ea41a0a96d3c9b85c">EXTERNAL_INFO</a> (<a class="code" href="zebra_8h.html#aee45d53cdac2bd7fe4b2ce021c9d1b30">ZEBRA_ROUTE_CONNECT</a>));
<a name="l00760"></a>00760        rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
<a name="l00761"></a>00761     <span class="keywordflow">if</span> ((ei = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00762"></a>00762       <span class="keywordflow">if</span> (<a class="code" href="ospf__asbr_8c.html#ad45c036a67747a7f65338b7ec6ff748d">ospf_external_info_find_lsa</a> (ospf, &amp;ei-&gt;<a class="code" href="structexternal__info.html#a15eb7ea975a1090a107d7d54b798822c">p</a>))
<a name="l00763"></a>00763         <span class="keywordflow">if</span> (!<a class="code" href="ospf__zebra_8c.html#a92dcc57e677b842ee7ce321d7cbae5e3">ospf_distribute_check_connected</a> (ospf, ei))
<a name="l00764"></a>00764           <a class="code" href="ospf__lsa_8c.html#ae6fd27bc0a44fb71638c23c3ea829905">ospf_external_lsa_flush</a> (ospf, ei-&gt;<a class="code" href="structexternal__info.html#ad815e4322555ec84d18056c00745008f">type</a>, &amp;ei-&gt;<a class="code" href="structexternal__info.html#a15eb7ea975a1090a107d7d54b798822c">p</a>,
<a name="l00765"></a>00765                        ei-&gt;<a class="code" href="structexternal__info.html#aa44606ec20e4cd877211173bceaac116">ifindex</a> <span class="comment">/*, ei-&gt;nexthop */</span>);
<a name="l00766"></a>00766 
<a name="l00767"></a>00767   <a class="code" href="ospfd_8c.html#aa12d53d797f5400a252c49e4fe12428d">ospf_area_check_free</a> (ospf, area_id);
<a name="l00768"></a>00768 
<a name="l00769"></a>00769   <span class="keywordflow">return</span> 1;
<a name="l00770"></a>00770 }
<a name="l00771"></a>00771 
<a name="l00772"></a>00772 <span class="keywordtype">int</span>
<a name="l00773"></a><a class="code" href="ospfd_8h.html#a7a62d63265a99d7a6c44b10fb22d4691">00773</a> <a class="code" href="ospfd_8c.html#a9cebab0f946b58720dafc3221f4d2f09">ospf_network_unset</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> <a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>,
<a name="l00774"></a>00774             <span class="keyword">struct</span> in_addr area_id)
<a name="l00775"></a>00775 {
<a name="l00776"></a>00776   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00777"></a>00777   <span class="keyword">struct </span><a class="code" href="structospf__network.html">ospf_network</a> *<a class="code" href="command_8c.html#acec200f241e2d8f6b38bc83616c4c468">network</a>;
<a name="l00778"></a>00778   <span class="keyword">struct </span><a class="code" href="structexternal__info.html">external_info</a> *ei;
<a name="l00779"></a>00779   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
<a name="l00780"></a>00780   <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
<a name="l00781"></a>00781 
<a name="l00782"></a>00782   rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (ospf-&gt;<a class="code" href="structospf.html#a4f2d79a18b8a5eb9973c277282ed1b90">networks</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)p);
<a name="l00783"></a>00783   <span class="keywordflow">if</span> (rn == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00784"></a>00784     <span class="keywordflow">return</span> 0;
<a name="l00785"></a>00785 
<a name="l00786"></a>00786   network = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l00787"></a>00787   <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00788"></a>00788   <span class="keywordflow">if</span> (!<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;area_id, &amp;network-&gt;<a class="code" href="structospf__network.html#a9a98fa52b566fda4f48f4cd8a4b77e54">area_id</a>))
<a name="l00789"></a>00789     <span class="keywordflow">return</span> 0;
<a name="l00790"></a>00790 
<a name="l00791"></a>00791   <a class="code" href="ospfd_8c.html#a187d0469588c7386421e07eb4f65e344">ospf_network_free</a> (ospf, rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>);
<a name="l00792"></a>00792   rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00793"></a>00793   <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);   <span class="comment">/* initial reference */</span>
<a name="l00794"></a>00794 
<a name="l00795"></a>00795   <span class="comment">/* Find interfaces that not configured already.  */</span>
<a name="l00796"></a>00796   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (ospf-&gt;<a class="code" href="structospf.html#a977d3608343fe5db7900ec646880cb6a">oiflist</a>, node, nnode, oi))
<a name="l00797"></a>00797     {
<a name="l00798"></a>00798       <span class="keywordtype">int</span> found = 0;
<a name="l00799"></a>00799       <span class="keyword">struct </span><a class="code" href="structconnected.html">connected</a> *co = oi-&gt;<a class="code" href="structospf__interface.html#a3032c9001447ca661e19323b6c59aca6">connected</a>;
<a name="l00800"></a>00800       
<a name="l00801"></a>00801       <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#a45798a2a8b566abd1907f7ae8bc0a2be">OSPF_IFTYPE_VIRTUALLINK</a>)
<a name="l00802"></a>00802         <span class="keywordflow">continue</span>;
<a name="l00803"></a>00803       
<a name="l00804"></a>00804       <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (ospf-&gt;<a class="code" href="structospf.html#a4f2d79a18b8a5eb9973c277282ed1b90">networks</a>); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
<a name="l00805"></a>00805         {
<a name="l00806"></a>00806           <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00807"></a>00807             <span class="keywordflow">continue</span>;
<a name="l00808"></a>00808           
<a name="l00809"></a>00809           <span class="keywordflow">if</span> (<a class="code" href="ospfd_8c.html#ae8c350ba65c0ae238fa093a24a67bfa0">ospf_network_match_iface</a>(co,&amp;rn-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>))
<a name="l00810"></a>00810             {
<a name="l00811"></a>00811               found = 1;
<a name="l00812"></a>00812               <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l00813"></a>00813               <span class="keywordflow">break</span>;
<a name="l00814"></a>00814             }
<a name="l00815"></a>00815         }
<a name="l00816"></a>00816 
<a name="l00817"></a>00817       <span class="keywordflow">if</span> (found == 0)
<a name="l00818"></a>00818         <a class="code" href="ospf__interface_8c.html#aa06699fd3d9034f239d51f2ea6098b3b">ospf_if_free</a> (oi);
<a name="l00819"></a>00819     }
<a name="l00820"></a>00820   
<a name="l00821"></a>00821   <span class="comment">/* Update connected redistribute. */</span>
<a name="l00822"></a>00822   <span class="keywordflow">if</span> (<a class="code" href="ospf__zebra_8c.html#a0b61d95e6baf19bdd9d8a7705788a226">ospf_is_type_redistributed</a> (<a class="code" href="zebra_8h.html#aee45d53cdac2bd7fe4b2ce021c9d1b30">ZEBRA_ROUTE_CONNECT</a>))
<a name="l00823"></a>00823     <span class="keywordflow">if</span> (<a class="code" href="ospfd_8h.html#a9fa5e60f9244cb3ea41a0a96d3c9b85c">EXTERNAL_INFO</a> (<a class="code" href="zebra_8h.html#aee45d53cdac2bd7fe4b2ce021c9d1b30">ZEBRA_ROUTE_CONNECT</a>))
<a name="l00824"></a>00824       <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (<a class="code" href="ospfd_8h.html#a9fa5e60f9244cb3ea41a0a96d3c9b85c">EXTERNAL_INFO</a> (<a class="code" href="zebra_8h.html#aee45d53cdac2bd7fe4b2ce021c9d1b30">ZEBRA_ROUTE_CONNECT</a>));
<a name="l00825"></a>00825        rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
<a name="l00826"></a>00826     <span class="keywordflow">if</span> ((ei = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00827"></a>00827       <span class="keywordflow">if</span> (!<a class="code" href="ospf__asbr_8c.html#ad45c036a67747a7f65338b7ec6ff748d">ospf_external_info_find_lsa</a> (ospf, &amp;ei-&gt;<a class="code" href="structexternal__info.html#a15eb7ea975a1090a107d7d54b798822c">p</a>))
<a name="l00828"></a>00828         <span class="keywordflow">if</span> (<a class="code" href="ospf__zebra_8c.html#a92dcc57e677b842ee7ce321d7cbae5e3">ospf_distribute_check_connected</a> (ospf, ei))
<a name="l00829"></a>00829           <a class="code" href="ospf__lsa_8c.html#a96d24d54ba0ac3adc1ff557621ff2911">ospf_external_lsa_originate</a> (ospf, ei);
<a name="l00830"></a>00830 
<a name="l00831"></a>00831   <span class="keywordflow">return</span> 1;
<a name="l00832"></a>00832 }
<a name="l00833"></a>00833 
<a name="l00834"></a>00834 <span class="comment">/* Check whether interface matches given network</span>
<a name="l00835"></a>00835 <span class="comment"> * returns: 1, true. 0, false</span>
<a name="l00836"></a>00836 <span class="comment"> */</span>
<a name="l00837"></a>00837 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00838"></a><a class="code" href="ospfd_8c.html#ae8c350ba65c0ae238fa093a24a67bfa0">00838</a> <a class="code" href="ospfd_8c.html#ae8c350ba65c0ae238fa093a24a67bfa0">ospf_network_match_iface</a>(<span class="keyword">const</span> <span class="keyword">struct</span> <a class="code" href="structconnected.html">connected</a> *co, <span class="keyword">const</span> <span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *net)
<a name="l00839"></a>00839 {
<a name="l00840"></a>00840   <span class="comment">/* new approach: more elegant and conceptually clean */</span>
<a name="l00841"></a>00841   <span class="keywordflow">return</span> <a class="code" href="prefix_8c.html#a8c5d68665a4b036a361330bee254318e">prefix_match</a>(net, <a class="code" href="if_8h.html#aab0146ae87d1ab7ec3235003ad8ae4ff">CONNECTED_PREFIX</a>(co));
<a name="l00842"></a>00842 }
<a name="l00843"></a>00843 
<a name="l00844"></a>00844 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00845"></a><a class="code" href="ospfd_8c.html#a7818e64451ad531aed1fa0aeb35ec4c6">00845</a> <a class="code" href="ospfd_8c.html#a7818e64451ad531aed1fa0aeb35ec4c6">ospf_network_run_interface</a> (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, <span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>,
<a name="l00846"></a>00846                             <span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *<a class="code" href="structconnected.html#a93c575385a71507f8c29ec26344d09d3">ifp</a>)
<a name="l00847"></a>00847 {
<a name="l00848"></a>00848   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *cnode;
<a name="l00849"></a>00849   <span class="keyword">struct </span><a class="code" href="structconnected.html">connected</a> *co;
<a name="l00850"></a>00850   
<a name="l00851"></a>00851   <span class="keywordflow">if</span> (<a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (ifp-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>, <span class="stringliteral">&quot;VLINK&quot;</span>, 5) == 0)
<a name="l00852"></a>00852     <span class="keywordflow">return</span>;
<a name="l00853"></a>00853   
<a name="l00854"></a>00854   <span class="comment">/* if interface prefix is match specified prefix,</span>
<a name="l00855"></a>00855 <span class="comment">     then create socket and join multicast group. */</span>
<a name="l00856"></a>00856   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ifp-&gt;<a class="code" href="structinterface.html#ac7c47b5cc1df81e51bf1ecea97b4d4b3">connected</a>, cnode, co))
<a name="l00857"></a>00857     {
<a name="l00858"></a>00858 
<a name="l00859"></a>00859       <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a>(co-&gt;<a class="code" href="structconnected.html#a5928e0378e95d422553fdd37c3d66519">flags</a>,<a class="code" href="if_8h.html#a87a060af9e9971eefeb1584beaceecf6">ZEBRA_IFA_SECONDARY</a>))
<a name="l00860"></a>00860         <span class="keywordflow">continue</span>;
<a name="l00861"></a>00861 
<a name="l00862"></a>00862       <span class="keywordflow">if</span> (p-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == co-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> 
<a name="l00863"></a>00863       &amp;&amp; ! <a class="code" href="ospf__interface_8c.html#ae53618182688ad96bfa2fa6813617d57">ospf_if_table_lookup</a>(ifp, co-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>)
<a name="l00864"></a>00864           &amp;&amp; <a class="code" href="ospfd_8c.html#ae8c350ba65c0ae238fa093a24a67bfa0">ospf_network_match_iface</a>(co,p))
<a name="l00865"></a>00865         {
<a name="l00866"></a>00866            <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
<a name="l00867"></a>00867             
<a name="l00868"></a>00868             oi = <a class="code" href="ospf__interface_8c.html#af4a1a23e75bb79a0feaa1c26b0b989e5">ospf_if_new</a> (area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>, ifp, co-&gt;<a class="code" href="structconnected.html#a288d9248b21b8e3999e03ceaa9bb70db">address</a>);
<a name="l00869"></a>00869             oi-&gt;<a class="code" href="structospf__interface.html#a3032c9001447ca661e19323b6c59aca6">connected</a> = co;
<a name="l00870"></a>00870             
<a name="l00871"></a>00871             oi-&gt;<a class="code" href="structospf__interface.html#a7a0df59739f1ffa31ab75ff4b9bbcd95">area</a> = <a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l00872"></a>00872 
<a name="l00873"></a>00873             oi-&gt;<a class="code" href="structospf__interface.html#abe19d62cc037130ba97d644980a90e58">params</a> = <a class="code" href="ospf__interface_8c.html#aa68e0e7a3491e05febe18ed5a1e3d8c6">ospf_lookup_if_params</a> (ifp, oi-&gt;<a class="code" href="structospf__interface.html#a43493bc2b5d951e3e38ace850332eca1">address</a>-&gt;u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>);
<a name="l00874"></a>00874             oi-&gt;<a class="code" href="structospf__interface.html#a9e3d295cb23b60bbcda26b11553a2d03">output_cost</a> = <a class="code" href="ospf__interface_8c.html#a0f57568dea03dc11f50fdb7bc9bf02f4">ospf_if_get_output_cost</a> (oi);
<a name="l00875"></a>00875             
<a name="l00876"></a>00876             <span class="comment">/* Add pseudo neighbor. */</span>
<a name="l00877"></a>00877             <a class="code" href="ospf__neighbor_8c.html#a4260a90c3eb41e2af0d60b4d2ecb3d85">ospf_nbr_add_self</a> (oi);
<a name="l00878"></a>00878 
<a name="l00879"></a>00879             <span class="comment">/* Relate ospf interface to ospf instance. */</span>
<a name="l00880"></a>00880             oi-&gt;<a class="code" href="structospf__interface.html#a159ae1c542016fc78f68c3e39a1b132e">ospf</a> = area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>;
<a name="l00881"></a>00881 
<a name="l00882"></a>00882             <span class="comment">/* update network type as interface flag */</span>
<a name="l00883"></a>00883             <span class="comment">/* If network type is specified previously,</span>
<a name="l00884"></a>00884 <span class="comment">               skip network type setting. */</span>
<a name="l00885"></a>00885             oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> = <a class="code" href="ospf__interface_8h.html#aa0b2fa68b7fc94f71356893c7e03770a">IF_DEF_PARAMS</a> (ifp)-&gt;type;
<a name="l00886"></a>00886             
<a name="l00887"></a>00887             <a class="code" href="ospfd_8c.html#ab5f82e15e585aa9de10f7f426e445872">ospf_area_add_if</a> (oi-&gt;<a class="code" href="structospf__interface.html#a7a0df59739f1ffa31ab75ff4b9bbcd95">area</a>, oi);
<a name="l00888"></a>00888             
<a name="l00889"></a>00889             <span class="comment">/* if router_id is not configured, dont bring up</span>
<a name="l00890"></a>00890 <span class="comment">             * interfaces.</span>
<a name="l00891"></a>00891 <span class="comment">             * ospf_router_id_update() will call ospf_if_update</span>
<a name="l00892"></a>00892 <span class="comment">             * whenever r-id is configured instead.</span>
<a name="l00893"></a>00893 <span class="comment">             */</span>
<a name="l00894"></a>00894             <span class="keywordflow">if</span> ((area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>.s_addr != 0)
<a name="l00895"></a>00895                 &amp;&amp; <a class="code" href="if_8c.html#a96741fba2059f7591f57d18325664b7b">if_is_operative</a> (ifp)) 
<a name="l00896"></a>00896               <a class="code" href="ospf__interface_8c.html#a5a63d5d3af1629d69c380eb09f3e8b7b">ospf_if_up</a> (oi);
<a name="l00897"></a>00897           }
<a name="l00898"></a>00898     }
<a name="l00899"></a>00899 }
<a name="l00900"></a>00900 
<a name="l00901"></a>00901 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00902"></a><a class="code" href="ospfd_8c.html#a9ff9167ef11494a725578e5705632d84">00902</a> <a class="code" href="ospfd_8c.html#a9ff9167ef11494a725578e5705632d84">ospf_network_run</a> (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>, <span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l00903"></a>00903 {
<a name="l00904"></a>00904   <span class="keyword">struct </span><a class="code" href="structinterface.html">interface</a> *ifp;
<a name="l00905"></a>00905   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00906"></a>00906 
<a name="l00907"></a>00907   <span class="comment">/* Schedule Router ID Update. */</span>
<a name="l00908"></a>00908   <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>.s_addr == 0)
<a name="l00909"></a>00909     <a class="code" href="ospfd_8c.html#a0d1cbe02041ecd44cfc37a94718ca69a">ospf_router_id_update</a> (area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>);
<a name="l00910"></a>00910   
<a name="l00911"></a>00911   <span class="comment">/* Get target interface. */</span>
<a name="l00912"></a>00912   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (om-&gt;<a class="code" href="structospf__master.html#a03ff051ede9d089f9ca6cfc6262a5634">iflist</a>, node, ifp))
<a name="l00913"></a>00913     <a class="code" href="ospfd_8c.html#a7818e64451ad531aed1fa0aeb35ec4c6">ospf_network_run_interface</a> (p, area, ifp);
<a name="l00914"></a>00914 }
<a name="l00915"></a>00915 
<a name="l00916"></a>00916 <span class="keywordtype">void</span>
<a name="l00917"></a><a class="code" href="ospfd_8h.html#a68234478a185ecf4099d49d5b0829db6">00917</a> <a class="code" href="ospfd_8c.html#a057b2c243b1406f27f8de8ddc5a48ade">ospf_ls_upd_queue_empty</a> (<span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *oi)
<a name="l00918"></a>00918 {
<a name="l00919"></a>00919   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00920"></a>00920   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
<a name="l00921"></a>00921   <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *lst;
<a name="l00922"></a>00922   <span class="keyword">struct </span><a class="code" href="structospf__lsa.html">ospf_lsa</a> *lsa;
<a name="l00923"></a>00923 
<a name="l00924"></a>00924   <span class="comment">/* empty ls update queue */</span>
<a name="l00925"></a>00925   <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (oi-&gt;<a class="code" href="structospf__interface.html#a7f9d43bd1c8bf02254ac9b17be826615">ls_upd_queue</a>); rn;
<a name="l00926"></a>00926        rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
<a name="l00927"></a>00927     <span class="keywordflow">if</span> ((lst = (<span class="keyword">struct</span> <a class="code" href="structlist.html">list</a> *) rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>))
<a name="l00928"></a>00928       {
<a name="l00929"></a>00929     <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (lst, node, nnode, lsa))
<a name="l00930"></a>00930           <a class="code" href="ospf__lsa_8c.html#a268fc5c6673caf7ee94c0eaaa88455b8">ospf_lsa_unlock</a> (&amp;lsa); <span class="comment">/* oi-&gt;ls_upd_queue */</span>
<a name="l00931"></a>00931     <a class="code" href="linklist_8c.html#a15aa9f8cf8424489adf1efd4d075aac6">list_free</a> (lst);
<a name="l00932"></a>00932     rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00933"></a>00933       }
<a name="l00934"></a>00934   
<a name="l00935"></a>00935   <span class="comment">/* remove update event */</span>
<a name="l00936"></a>00936   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#a29691bed1e0be212206bff3f4d0fc8dd">t_ls_upd_event</a>)
<a name="l00937"></a>00937     {
<a name="l00938"></a>00938       <a class="code" href="thread_8c.html#aceb89c1157b6a1d8bb3afa5021f1ab6d">thread_cancel</a> (oi-&gt;<a class="code" href="structospf__interface.html#a29691bed1e0be212206bff3f4d0fc8dd">t_ls_upd_event</a>);
<a name="l00939"></a>00939       oi-&gt;<a class="code" href="structospf__interface.html#a29691bed1e0be212206bff3f4d0fc8dd">t_ls_upd_event</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00940"></a>00940     }
<a name="l00941"></a>00941 }
<a name="l00942"></a>00942 
<a name="l00943"></a>00943 <span class="keywordtype">void</span>
<a name="l00944"></a><a class="code" href="ospfd_8h.html#a52c7e508865e5e8fa6c1660435f4e924">00944</a> <a class="code" href="ospfd_8c.html#a9d40c9fe8a5fd9ec7add909556c5bd3f">ospf_if_update</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp)
<a name="l00945"></a>00945 {
<a name="l00946"></a>00946   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l00947"></a>00947   <span class="keyword">struct </span><a class="code" href="structospf__network.html">ospf_network</a> *<a class="code" href="command_8c.html#acec200f241e2d8f6b38bc83616c4c468">network</a>;
<a name="l00948"></a>00948   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l00949"></a>00949   
<a name="l00950"></a>00950   <span class="keywordflow">if</span> (!ospf)
<a name="l00951"></a>00951     ospf = <a class="code" href="ospfd_8c.html#a8ea0c935a4862c1469bc962e93fee74b">ospf_lookup</a> ();
<a name="l00952"></a>00952 
<a name="l00953"></a>00953   <span class="comment">/* OSPF must be on and Router-ID must be configured. */</span>
<a name="l00954"></a>00954   <span class="keywordflow">if</span> (!ospf || ospf-&gt;<a class="code" href="structospf.html#acda9328f4f8627516f5c4942a45b4c25">router_id</a>.s_addr == 0)
<a name="l00955"></a>00955     <span class="keywordflow">return</span>;
<a name="l00956"></a>00956   
<a name="l00957"></a>00957   <span class="comment">/* Run each netowrk for this interface. */</span>
<a name="l00958"></a>00958   <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (ospf-&gt;<a class="code" href="structospf.html#a4f2d79a18b8a5eb9973c277282ed1b90">networks</a>); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
<a name="l00959"></a>00959     <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00960"></a>00960       {
<a name="l00961"></a>00961         network = (<span class="keyword">struct </span><a class="code" href="structospf__network.html">ospf_network</a> *) rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l00962"></a>00962         area = <a class="code" href="ospfd_8c.html#aa215da7694f647944fed0fad86df18c8">ospf_area_get</a> (ospf, network-&gt;<a class="code" href="structospf__network.html#a9a98fa52b566fda4f48f4cd8a4b77e54">area_id</a>, network-&gt;<a class="code" href="structospf__network.html#a92a758a904ba2595a41f83d14ea80b96">format</a>);
<a name="l00963"></a>00963         <a class="code" href="ospfd_8c.html#a7818e64451ad531aed1fa0aeb35ec4c6">ospf_network_run_interface</a> (&amp;rn-&gt;<a class="code" href="structroute__node.html#ae6d28f3985e8e2a761c8e22bae5767eb">p</a>, area, ifp);
<a name="l00964"></a>00964       }
<a name="l00965"></a>00965 }
<a name="l00966"></a>00966 
<a name="l00967"></a>00967 <span class="keywordtype">void</span>
<a name="l00968"></a><a class="code" href="ospfd_8c.html#a18ae69cd8ada47780d2abe5cf46aef7c">00968</a> <a class="code" href="ospfd_8c.html#a18ae69cd8ada47780d2abe5cf46aef7c">ospf_remove_vls_through_area</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l00969"></a>00969 {
<a name="l00970"></a>00970   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
<a name="l00971"></a>00971   <span class="keyword">struct </span><a class="code" href="structospf__vl__data.html">ospf_vl_data</a> *vl_data;
<a name="l00972"></a>00972 
<a name="l00973"></a>00973   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (ospf-&gt;<a class="code" href="structospf.html#acdf23576e62fa9370cc57b2384acf143">vlinks</a>, node, nnode, vl_data))
<a name="l00974"></a>00974     <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;vl_data-&gt;<a class="code" href="structospf__vl__data.html#a7d89fa86fa918d94b7b4474f93569cd9">vl_area_id</a>, &amp;area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>))
<a name="l00975"></a>00975       <a class="code" href="ospf__interface_8c.html#a9feb69dbfbf6c28344a5920b2e21e5ff">ospf_vl_delete</a> (ospf, vl_data);
<a name="l00976"></a>00976 }
<a name="l00977"></a>00977 
<a name="l00978"></a>00978 
<a name="l00979"></a><a class="code" href="ospfd_8c.html#a1d53da7b1d301ee11b1c599196fdaf47">00979</a> <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">struct </span><a class="code" href="structmessage.html">message</a> <a class="code" href="ospfd_8c.html#a1d53da7b1d301ee11b1c599196fdaf47">ospf_area_type_msg</a>[] =
<a name="l00980"></a>00980 {
<a name="l00981"></a>00981   { <a class="code" href="ospfd_8h.html#a43f84c8e8584ccc8b82990d251abec4d">OSPF_AREA_DEFAULT</a>,  <span class="stringliteral">&quot;Default&quot;</span> },
<a name="l00982"></a>00982   { <a class="code" href="ospfd_8h.html#a34e738eee2ef9dfcea3d7f31d36de08c">OSPF_AREA_STUB</a>,     <span class="stringliteral">&quot;Stub&quot;</span> },
<a name="l00983"></a>00983   { <a class="code" href="ospfd_8h.html#a871478d6ecced0907ee1f67c5dbacf99">OSPF_AREA_NSSA</a>,     <span class="stringliteral">&quot;NSSA&quot;</span> },
<a name="l00984"></a>00984 };
<a name="l00985"></a><a class="code" href="ospfd_8c.html#a7de4d698a82bc8b7f1c5b37b26a24ea2">00985</a> <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="ospfd_8c.html#a7de4d698a82bc8b7f1c5b37b26a24ea2">ospf_area_type_msg_max</a> = <a class="code" href="ospfd_8h.html#acd1fa1b30b89ecd580dc0a836ec92e4d">OSPF_AREA_TYPE_MAX</a>;
<a name="l00986"></a>00986 
<a name="l00987"></a>00987 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00988"></a><a class="code" href="ospfd_8c.html#aaf9a429fd587798097e37fea1b83b665">00988</a> <a class="code" href="ospfd_8c.html#aaf9a429fd587798097e37fea1b83b665">ospf_area_type_set</a> (<span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>, <span class="keywordtype">int</span> <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>)
<a name="l00989"></a>00989 {
<a name="l00990"></a>00990   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00991"></a>00991   <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
<a name="l00992"></a>00992 
<a name="l00993"></a>00993   <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a> == type)
<a name="l00994"></a>00994     {
<a name="l00995"></a>00995       <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l00996"></a>00996     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Area[%s]: Types are the same, ignored.&quot;</span>,
<a name="l00997"></a>00997            inet_ntoa (area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>));
<a name="l00998"></a>00998       <span class="keywordflow">return</span>;
<a name="l00999"></a>00999     }
<a name="l01000"></a>01000 
<a name="l01001"></a>01001   area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a> = <a class="code" href="bgp__open_8h.html#abbb4c0b967acba158c34c110d81b3ab4">type</a>;
<a name="l01002"></a>01002 
<a name="l01003"></a>01003   <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01004"></a>01004     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;Area[%s]: Configured as %s&quot;</span>, inet_ntoa (area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>),
<a name="l01005"></a>01005            <a class="code" href="log_8h.html#a3a4b1cad85aa6752f39580944e24a868">LOOKUP</a> (ospf_area_type_msg, type));
<a name="l01006"></a>01006 
<a name="l01007"></a>01007   <span class="keywordflow">switch</span> (area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a>)
<a name="l01008"></a>01008     {
<a name="l01009"></a>01009     <span class="keywordflow">case</span> <a class="code" href="ospfd_8h.html#a43f84c8e8584ccc8b82990d251abec4d">OSPF_AREA_DEFAULT</a>:
<a name="l01010"></a>01010       <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (area-&gt;<a class="code" href="structospf__area.html#aec49fceeb655dde5648208d29dfc66a4">oiflist</a>, node, oi))
<a name="l01011"></a>01011         <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01012"></a>01012           {
<a name="l01013"></a>01013         <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#aefbbf7455ee0d73ae283d9ab8edab4f6">options</a>, <a class="code" href="ospfd_8h.html#af9739335948debe99dd1e5e62d87c00c">OSPF_OPTION_NP</a>);
<a name="l01014"></a>01014         <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#aefbbf7455ee0d73ae283d9ab8edab4f6">options</a>, <a class="code" href="ospfd_8h.html#a0cb690faccaae5c2692a2f2c1b273720">OSPF_OPTION_E</a>);
<a name="l01015"></a>01015           }
<a name="l01016"></a>01016       <span class="keywordflow">break</span>;
<a name="l01017"></a>01017     <span class="keywordflow">case</span> <a class="code" href="ospfd_8h.html#a34e738eee2ef9dfcea3d7f31d36de08c">OSPF_AREA_STUB</a>:
<a name="l01018"></a>01018       <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (area-&gt;<a class="code" href="structospf__area.html#aec49fceeb655dde5648208d29dfc66a4">oiflist</a>, node, oi))
<a name="l01019"></a>01019         <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01020"></a>01020           {
<a name="l01021"></a>01021             <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01022"></a>01022               <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;setting options on %s accordingly&quot;</span>, <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (oi));
<a name="l01023"></a>01023             <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#aefbbf7455ee0d73ae283d9ab8edab4f6">options</a>, <a class="code" href="ospfd_8h.html#af9739335948debe99dd1e5e62d87c00c">OSPF_OPTION_NP</a>);
<a name="l01024"></a>01024             <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#aefbbf7455ee0d73ae283d9ab8edab4f6">options</a>, <a class="code" href="ospfd_8h.html#a0cb690faccaae5c2692a2f2c1b273720">OSPF_OPTION_E</a>);
<a name="l01025"></a>01025             <span class="keywordflow">if</span> (<a class="code" href="ospf__dump_8h.html#a6634b26c3071a42864be94d63bfa8d27">IS_DEBUG_OSPF_EVENT</a>)
<a name="l01026"></a>01026               <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;options set on %s: %x&quot;</span>,
<a name="l01027"></a>01027                          <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (oi), <a class="code" href="ospf__interface_8h.html#af4be2fbb5f97ac9946d943e9e4f4dec8">OPTIONS</a> (oi));
<a name="l01028"></a>01028           }
<a name="l01029"></a>01029       <span class="keywordflow">break</span>;
<a name="l01030"></a>01030     <span class="keywordflow">case</span> <a class="code" href="ospfd_8h.html#a871478d6ecced0907ee1f67c5dbacf99">OSPF_AREA_NSSA</a>:
<a name="l01031"></a>01031       <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (area-&gt;<a class="code" href="structospf__area.html#aec49fceeb655dde5648208d29dfc66a4">oiflist</a>, node, oi))
<a name="l01032"></a>01032         <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01033"></a>01033           {
<a name="l01034"></a>01034             <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;setting nssa options on %s accordingly&quot;</span>, <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (oi));
<a name="l01035"></a>01035             <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#aefbbf7455ee0d73ae283d9ab8edab4f6">options</a>, <a class="code" href="ospfd_8h.html#a0cb690faccaae5c2692a2f2c1b273720">OSPF_OPTION_E</a>);
<a name="l01036"></a>01036             <a class="code" href="zebra_8h.html#a7c593725d5bbf27a37a922ae84b02333">SET_FLAG</a> (oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#aefbbf7455ee0d73ae283d9ab8edab4f6">options</a>, <a class="code" href="ospfd_8h.html#af9739335948debe99dd1e5e62d87c00c">OSPF_OPTION_NP</a>);
<a name="l01037"></a>01037             <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;options set on %s: %x&quot;</span>, <a class="code" href="ospf__dump_8h.html#a8617b8a577debdfb2cd2f08c41066497">IF_NAME</a> (oi), <a class="code" href="ospf__interface_8h.html#af4be2fbb5f97ac9946d943e9e4f4dec8">OPTIONS</a> (oi));
<a name="l01038"></a>01038           }
<a name="l01039"></a>01039       <span class="keywordflow">break</span>;
<a name="l01040"></a>01040     <span class="keywordflow">default</span>:
<a name="l01041"></a>01041       <span class="keywordflow">break</span>;
<a name="l01042"></a>01042     }
<a name="l01043"></a>01043 
<a name="l01044"></a>01044   <a class="code" href="ospf__lsa_8c.html#a66ad8a1fd151b43b11d7ec9650a644bf">ospf_router_lsa_timer_add</a> (area);
<a name="l01045"></a>01045   <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (area-&gt;<a class="code" href="structospf__area.html#a0858934cbc3476d83ba7604309c813ad">ospf</a>);
<a name="l01046"></a>01046 }
<a name="l01047"></a>01047 
<a name="l01048"></a>01048 <span class="keywordtype">int</span>
<a name="l01049"></a><a class="code" href="ospfd_8h.html#a326b3b7559adb12c9ddf021b1d21dcf5">01049</a> <a class="code" href="ospfd_8c.html#ad167c0a42889e93f29f5f64a3ab2ddb3">ospf_area_shortcut_set</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>, <span class="keywordtype">int</span> <a class="code" href="bgp__open_8h.html#af4324da5e10e48f7970f2bc5b611e367">mode</a>)
<a name="l01050"></a>01050 {
<a name="l01051"></a>01051   <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structospf__area.html#ac5b177716c810e517f0aacbdbe68a6e4">shortcut_configured</a> == mode)
<a name="l01052"></a>01052     <span class="keywordflow">return</span> 0;
<a name="l01053"></a>01053 
<a name="l01054"></a>01054   area-&gt;<a class="code" href="structospf__area.html#ac5b177716c810e517f0aacbdbe68a6e4">shortcut_configured</a> = <a class="code" href="bgp__open_8h.html#af4324da5e10e48f7970f2bc5b611e367">mode</a>;
<a name="l01055"></a>01055   <a class="code" href="ospf__lsa_8c.html#a66ad8a1fd151b43b11d7ec9650a644bf">ospf_router_lsa_timer_add</a> (area);
<a name="l01056"></a>01056   <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (ospf);
<a name="l01057"></a>01057 
<a name="l01058"></a>01058   <a class="code" href="ospfd_8c.html#aa12d53d797f5400a252c49e4fe12428d">ospf_area_check_free</a> (ospf, area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>);
<a name="l01059"></a>01059 
<a name="l01060"></a>01060   <span class="keywordflow">return</span> 1;
<a name="l01061"></a>01061 }
<a name="l01062"></a>01062 
<a name="l01063"></a>01063 <span class="keywordtype">int</span>
<a name="l01064"></a><a class="code" href="ospfd_8h.html#aad50bdbd36fdc60daeee72a4424dad03">01064</a> <a class="code" href="ospfd_8c.html#a3ce0d51b534307c118644c4ac26b2738">ospf_area_shortcut_unset</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l01065"></a>01065 {
<a name="l01066"></a>01066   area-&gt;<a class="code" href="structospf__area.html#ac5b177716c810e517f0aacbdbe68a6e4">shortcut_configured</a> = <a class="code" href="ospfd_8h.html#a830dd703d89739f72962f5d4ccd8929d">OSPF_SHORTCUT_DEFAULT</a>;
<a name="l01067"></a>01067   <a class="code" href="ospf__lsa_8c.html#a66ad8a1fd151b43b11d7ec9650a644bf">ospf_router_lsa_timer_add</a> (area);
<a name="l01068"></a>01068   <a class="code" href="ospfd_8c.html#aa12d53d797f5400a252c49e4fe12428d">ospf_area_check_free</a> (ospf, area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>);
<a name="l01069"></a>01069   <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (ospf);
<a name="l01070"></a>01070 
<a name="l01071"></a>01071   <span class="keywordflow">return</span> 1;
<a name="l01072"></a>01072 }
<a name="l01073"></a>01073 
<a name="l01074"></a>01074 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l01075"></a><a class="code" href="ospfd_8c.html#a2ca34a3919b52cf2c97ae7183e0afdb0">01075</a> <a class="code" href="ospfd_8c.html#a2ca34a3919b52cf2c97ae7183e0afdb0">ospf_area_vlink_count</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l01076"></a>01076 {
<a name="l01077"></a>01077   <span class="keyword">struct </span><a class="code" href="structospf__vl__data.html">ospf_vl_data</a> *vl;
<a name="l01078"></a>01078   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l01079"></a>01079   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a66e3fedede6aa372e5196e55e5e8d5c1">count</a> = 0;
<a name="l01080"></a>01080 
<a name="l01081"></a>01081   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#acdf23576e62fa9370cc57b2384acf143">vlinks</a>, node, vl))
<a name="l01082"></a>01082     <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;vl-&gt;<a class="code" href="structospf__vl__data.html#a7d89fa86fa918d94b7b4474f93569cd9">vl_area_id</a>, &amp;area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>))
<a name="l01083"></a>01083       count++;
<a name="l01084"></a>01084 
<a name="l01085"></a>01085   <span class="keywordflow">return</span> <a class="code" href="spgrid_8c.html#a66e3fedede6aa372e5196e55e5e8d5c1">count</a>;
<a name="l01086"></a>01086 }
<a name="l01087"></a>01087 
<a name="l01088"></a>01088 <span class="keywordtype">int</span>
<a name="l01089"></a><a class="code" href="ospfd_8h.html#a8d15d7e48d83cf2e6c73e2df54e407e0">01089</a> <a class="code" href="ospfd_8c.html#a7d74d7fa4790235c9ca733dc8092ce2c">ospf_area_stub_set</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr area_id)
<a name="l01090"></a>01090 {
<a name="l01091"></a>01091   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01092"></a>01092   <span class="keywordtype">int</span> <a class="code" href="structospf__area.html#a83fcfc9add37df9fa90e4cb142ff5b5a">format</a> = <a class="code" href="ospfd_8h.html#a4693ac54d402184ececda946d167d1ef">OSPF_AREA_ID_FORMAT_ADDRESS</a>;
<a name="l01093"></a>01093 
<a name="l01094"></a>01094   area = <a class="code" href="ospfd_8c.html#aa215da7694f647944fed0fad86df18c8">ospf_area_get</a> (ospf, area_id, format);
<a name="l01095"></a>01095   <span class="keywordflow">if</span> (<a class="code" href="ospfd_8c.html#a2ca34a3919b52cf2c97ae7183e0afdb0">ospf_area_vlink_count</a> (ospf, area))
<a name="l01096"></a>01096     <span class="keywordflow">return</span> 0;
<a name="l01097"></a>01097 
<a name="l01098"></a>01098   <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a> != <a class="code" href="ospfd_8h.html#a34e738eee2ef9dfcea3d7f31d36de08c">OSPF_AREA_STUB</a>)
<a name="l01099"></a>01099     <a class="code" href="ospfd_8c.html#aaf9a429fd587798097e37fea1b83b665">ospf_area_type_set</a> (area, <a class="code" href="ospfd_8h.html#a34e738eee2ef9dfcea3d7f31d36de08c">OSPF_AREA_STUB</a>);
<a name="l01100"></a>01100 
<a name="l01101"></a>01101   <span class="keywordflow">return</span> 1;
<a name="l01102"></a>01102 }
<a name="l01103"></a>01103 
<a name="l01104"></a>01104 <span class="keywordtype">int</span>
<a name="l01105"></a><a class="code" href="ospfd_8h.html#a614457acdcd5fb4f20f4007eb047a008">01105</a> <a class="code" href="ospfd_8c.html#ad38a90ef491934c5dc4c3cb6dbf4c636">ospf_area_stub_unset</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>)
<a name="l01106"></a>01106 {
<a name="l01107"></a>01107   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01108"></a>01108 
<a name="l01109"></a>01109   area = <a class="code" href="ospfd_8c.html#a24d6ed2a6a05e4856e6dbf5eea74f6ef">ospf_area_lookup_by_area_id</a> (ospf, area_id);
<a name="l01110"></a>01110   <span class="keywordflow">if</span> (area == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01111"></a>01111     <span class="keywordflow">return</span> 1;
<a name="l01112"></a>01112 
<a name="l01113"></a>01113   <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a> == <a class="code" href="ospfd_8h.html#a34e738eee2ef9dfcea3d7f31d36de08c">OSPF_AREA_STUB</a>)
<a name="l01114"></a>01114     <a class="code" href="ospfd_8c.html#aaf9a429fd587798097e37fea1b83b665">ospf_area_type_set</a> (area, <a class="code" href="ospfd_8h.html#a43f84c8e8584ccc8b82990d251abec4d">OSPF_AREA_DEFAULT</a>);
<a name="l01115"></a>01115 
<a name="l01116"></a>01116   <a class="code" href="ospfd_8c.html#aa12d53d797f5400a252c49e4fe12428d">ospf_area_check_free</a> (ospf, area_id);
<a name="l01117"></a>01117 
<a name="l01118"></a>01118   <span class="keywordflow">return</span> 1;
<a name="l01119"></a>01119 }
<a name="l01120"></a>01120 
<a name="l01121"></a>01121 <span class="keywordtype">int</span>
<a name="l01122"></a><a class="code" href="ospfd_8h.html#a88e6966ede6b999e90d174a5b6a3c621">01122</a> <a class="code" href="ospfd_8c.html#a1838ae19091d12e8e5b499b499da165c">ospf_area_no_summary_set</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>)
<a name="l01123"></a>01123 {
<a name="l01124"></a>01124   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01125"></a>01125   <span class="keywordtype">int</span> <a class="code" href="structospf__area.html#a83fcfc9add37df9fa90e4cb142ff5b5a">format</a> = <a class="code" href="ospfd_8h.html#a4693ac54d402184ececda946d167d1ef">OSPF_AREA_ID_FORMAT_ADDRESS</a>;
<a name="l01126"></a>01126 
<a name="l01127"></a>01127   area = <a class="code" href="ospfd_8c.html#aa215da7694f647944fed0fad86df18c8">ospf_area_get</a> (ospf, area_id, format);
<a name="l01128"></a>01128   area-&gt;<a class="code" href="structospf__area.html#a2a2b5634d8424e1a939836254700a8d0">no_summary</a> = 1;
<a name="l01129"></a>01129 
<a name="l01130"></a>01130   <span class="keywordflow">return</span> 1;
<a name="l01131"></a>01131 }
<a name="l01132"></a>01132 
<a name="l01133"></a>01133 <span class="keywordtype">int</span>
<a name="l01134"></a><a class="code" href="ospfd_8h.html#a733c23e1bd8b08a37025f755b46132c6">01134</a> <a class="code" href="ospfd_8c.html#a6daabcb5f3e9730123f1cd8c190a7b8c">ospf_area_no_summary_unset</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>)
<a name="l01135"></a>01135 {
<a name="l01136"></a>01136   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01137"></a>01137 
<a name="l01138"></a>01138   area = <a class="code" href="ospfd_8c.html#a24d6ed2a6a05e4856e6dbf5eea74f6ef">ospf_area_lookup_by_area_id</a> (ospf, area_id);
<a name="l01139"></a>01139   <span class="keywordflow">if</span> (area == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01140"></a>01140     <span class="keywordflow">return</span> 0;
<a name="l01141"></a>01141 
<a name="l01142"></a>01142   area-&gt;<a class="code" href="structospf__area.html#a2a2b5634d8424e1a939836254700a8d0">no_summary</a> = 0;
<a name="l01143"></a>01143   <a class="code" href="ospfd_8c.html#aa12d53d797f5400a252c49e4fe12428d">ospf_area_check_free</a> (ospf, area_id);
<a name="l01144"></a>01144 
<a name="l01145"></a>01145   <span class="keywordflow">return</span> 1;
<a name="l01146"></a>01146 }
<a name="l01147"></a>01147 
<a name="l01148"></a>01148 <span class="keywordtype">int</span>
<a name="l01149"></a><a class="code" href="ospfd_8h.html#ad001dc6b540520d638446d8c36c0d5f3">01149</a> <a class="code" href="ospfd_8c.html#a78cd3687cd0064fb0f9346302f78481f">ospf_area_nssa_set</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>)
<a name="l01150"></a>01150 {
<a name="l01151"></a>01151   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01152"></a>01152   <span class="keywordtype">int</span> <a class="code" href="structospf__area.html#a83fcfc9add37df9fa90e4cb142ff5b5a">format</a> = <a class="code" href="ospfd_8h.html#a4693ac54d402184ececda946d167d1ef">OSPF_AREA_ID_FORMAT_ADDRESS</a>;
<a name="l01153"></a>01153 
<a name="l01154"></a>01154   area = <a class="code" href="ospfd_8c.html#aa215da7694f647944fed0fad86df18c8">ospf_area_get</a> (ospf, area_id, format);
<a name="l01155"></a>01155   <span class="keywordflow">if</span> (<a class="code" href="ospfd_8c.html#a2ca34a3919b52cf2c97ae7183e0afdb0">ospf_area_vlink_count</a> (ospf, area))
<a name="l01156"></a>01156     <span class="keywordflow">return</span> 0;
<a name="l01157"></a>01157 
<a name="l01158"></a>01158   <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a> != <a class="code" href="ospfd_8h.html#a871478d6ecced0907ee1f67c5dbacf99">OSPF_AREA_NSSA</a>)
<a name="l01159"></a>01159     {
<a name="l01160"></a>01160       <a class="code" href="ospfd_8c.html#aaf9a429fd587798097e37fea1b83b665">ospf_area_type_set</a> (area, <a class="code" href="ospfd_8h.html#a871478d6ecced0907ee1f67c5dbacf99">OSPF_AREA_NSSA</a>);
<a name="l01161"></a>01161       ospf-&gt;<a class="code" href="structospf.html#ad20715ef15a9c610284474aa9f1df3bc">anyNSSA</a>++;
<a name="l01162"></a>01162     }
<a name="l01163"></a>01163 
<a name="l01164"></a>01164   <span class="comment">/* set NSSA area defaults */</span>
<a name="l01165"></a>01165   area-&gt;<a class="code" href="structospf__area.html#a2a2b5634d8424e1a939836254700a8d0">no_summary</a> = 0;
<a name="l01166"></a>01166   area-&gt;<a class="code" href="structospf__area.html#a42f4ce1b9291935fc71a30d93049d588">NSSATranslatorRole</a> = <a class="code" href="ospfd_8h.html#a6421313c3b9108552cecefe06304ae1e">OSPF_NSSA_ROLE_CANDIDATE</a>;
<a name="l01167"></a>01167   area-&gt;<a class="code" href="structospf__area.html#a3956cb7dd73ce5563ae652947e12d08e">NSSATranslatorState</a> = <a class="code" href="ospfd_8h.html#a35683a93ec45417ffe36e59f8af39d4d">OSPF_NSSA_TRANSLATE_DISABLED</a>;
<a name="l01168"></a>01168   area-&gt;<a class="code" href="structospf__area.html#a16f92f69d0f498cb98f81851eb24a62b">NSSATranslatorStabilityInterval</a> = <a class="code" href="ospfd_8h.html#a3732542a0779e8f063ac02e429f26a13">OSPF_NSSA_TRANS_STABLE_DEFAULT</a>;
<a name="l01169"></a>01169 
<a name="l01170"></a>01170   <span class="keywordflow">return</span> 1;
<a name="l01171"></a>01171 }
<a name="l01172"></a>01172 
<a name="l01173"></a>01173 <span class="keywordtype">int</span>
<a name="l01174"></a><a class="code" href="ospfd_8h.html#a93b64685a715dccf85d29e26769b1a24">01174</a> <a class="code" href="ospfd_8c.html#a476165e655fbafcacbeeac92e367b210">ospf_area_nssa_unset</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>)
<a name="l01175"></a>01175 {
<a name="l01176"></a>01176   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01177"></a>01177 
<a name="l01178"></a>01178   area = <a class="code" href="ospfd_8c.html#a24d6ed2a6a05e4856e6dbf5eea74f6ef">ospf_area_lookup_by_area_id</a> (ospf, area_id);
<a name="l01179"></a>01179   <span class="keywordflow">if</span> (area == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01180"></a>01180     <span class="keywordflow">return</span> 0;
<a name="l01181"></a>01181 
<a name="l01182"></a>01182   <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structospf__area.html#ac7c3a32e77b40506f5bc26209f41ab89">external_routing</a> == <a class="code" href="ospfd_8h.html#a871478d6ecced0907ee1f67c5dbacf99">OSPF_AREA_NSSA</a>)
<a name="l01183"></a>01183     {
<a name="l01184"></a>01184       ospf-&gt;<a class="code" href="structospf.html#ad20715ef15a9c610284474aa9f1df3bc">anyNSSA</a>--;
<a name="l01185"></a>01185       <a class="code" href="ospfd_8c.html#aaf9a429fd587798097e37fea1b83b665">ospf_area_type_set</a> (area, <a class="code" href="ospfd_8h.html#a43f84c8e8584ccc8b82990d251abec4d">OSPF_AREA_DEFAULT</a>);
<a name="l01186"></a>01186     }
<a name="l01187"></a>01187 
<a name="l01188"></a>01188   <a class="code" href="ospfd_8c.html#aa12d53d797f5400a252c49e4fe12428d">ospf_area_check_free</a> (ospf, area_id);
<a name="l01189"></a>01189 
<a name="l01190"></a>01190   <span class="keywordflow">return</span> 1;
<a name="l01191"></a>01191 }
<a name="l01192"></a>01192 
<a name="l01193"></a>01193 <span class="keywordtype">int</span>
<a name="l01194"></a><a class="code" href="ospfd_8h.html#a16b200e40dbe9b1627b905bf67aea8f8">01194</a> <a class="code" href="ospfd_8c.html#ac63a090c29ecb1dae5c52afebb3e36c1">ospf_area_nssa_translator_role_set</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>,
<a name="l01195"></a>01195                     <span class="keywordtype">int</span> role)
<a name="l01196"></a>01196 {
<a name="l01197"></a>01197   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01198"></a>01198 
<a name="l01199"></a>01199   area = <a class="code" href="ospfd_8c.html#a24d6ed2a6a05e4856e6dbf5eea74f6ef">ospf_area_lookup_by_area_id</a> (ospf, area_id);
<a name="l01200"></a>01200   <span class="keywordflow">if</span> (area == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01201"></a>01201     <span class="keywordflow">return</span> 0;
<a name="l01202"></a>01202 
<a name="l01203"></a>01203   area-&gt;<a class="code" href="structospf__area.html#a42f4ce1b9291935fc71a30d93049d588">NSSATranslatorRole</a> = role;
<a name="l01204"></a>01204 
<a name="l01205"></a>01205   <span class="keywordflow">return</span> 1;
<a name="l01206"></a>01206 }
<a name="l01207"></a>01207 
<a name="l01208"></a>01208 <span class="comment">/* XXX: unused? Leave for symmetry? */</span>
<a name="l01209"></a>01209 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l01210"></a><a class="code" href="ospfd_8c.html#aaae198d1283c318ee0b0ea29028dd592">01210</a> <a class="code" href="ospfd_8c.html#aaae198d1283c318ee0b0ea29028dd592">ospf_area_nssa_translator_role_unset</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>,
<a name="l01211"></a>01211                       <span class="keyword">struct</span> in_addr <a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>)
<a name="l01212"></a>01212 {
<a name="l01213"></a>01213   <span class="keyword">struct </span><a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01214"></a>01214 
<a name="l01215"></a>01215   area = <a class="code" href="ospfd_8c.html#a24d6ed2a6a05e4856e6dbf5eea74f6ef">ospf_area_lookup_by_area_id</a> (ospf, area_id);
<a name="l01216"></a>01216   <span class="keywordflow">if</span> (area == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01217"></a>01217     <span class="keywordflow">return</span> 0;
<a name="l01218"></a>01218 
<a name="l01219"></a>01219   area-&gt;<a class="code" href="structospf__area.html#a42f4ce1b9291935fc71a30d93049d588">NSSATranslatorRole</a> = <a class="code" href="ospfd_8h.html#a6421313c3b9108552cecefe06304ae1e">OSPF_NSSA_ROLE_CANDIDATE</a>;
<a name="l01220"></a>01220 
<a name="l01221"></a>01221   <a class="code" href="ospfd_8c.html#aa12d53d797f5400a252c49e4fe12428d">ospf_area_check_free</a> (ospf, area_id);
<a name="l01222"></a>01222 
<a name="l01223"></a>01223   <span class="keywordflow">return</span> 1;
<a name="l01224"></a>01224 }
<a name="l01225"></a>01225 
<a name="l01226"></a>01226 <span class="keywordtype">int</span>
<a name="l01227"></a><a class="code" href="ospfd_8h.html#abf7439b4cd46e16fb3562062af2f7169">01227</a> <a class="code" href="ospfd_8c.html#a80a09d7b78b29d2a96e25dcb5ff34237">ospf_area_export_list_set</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>,
<a name="l01228"></a>01228                <span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>, <span class="keyword">const</span> <span class="keywordtype">char</span> *list_name)
<a name="l01229"></a>01229 {
<a name="l01230"></a>01230   <span class="keyword">struct </span><a class="code" href="structaccess__list.html">access_list</a> *<a class="code" href="structlist.html">list</a>;
<a name="l01231"></a>01231   list = <a class="code" href="filter_8c.html#a8cb65cd01015f6673c632cb5b8714b3e">access_list_lookup</a> (<a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>, list_name);
<a name="l01232"></a>01232 
<a name="l01233"></a>01233   <a class="code" href="ospf6__area_8h.html#a3b1e86d59d3641da3b6b9281a97c7927">EXPORT_LIST</a> (area) = list;
<a name="l01234"></a>01234 
<a name="l01235"></a>01235   <span class="keywordflow">if</span> (<a class="code" href="ospf6__area_8h.html#a4b149526dcc0d9c5de7086d581336dcb">EXPORT_NAME</a> (area))
<a name="l01236"></a>01236     free (<a class="code" href="ospf6__area_8h.html#a4b149526dcc0d9c5de7086d581336dcb">EXPORT_NAME</a> (area));
<a name="l01237"></a>01237 
<a name="l01238"></a>01238   <a class="code" href="ospf6__area_8h.html#a4b149526dcc0d9c5de7086d581336dcb">EXPORT_NAME</a> (area) = strdup (list_name);
<a name="l01239"></a>01239   <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (ospf);
<a name="l01240"></a>01240 
<a name="l01241"></a>01241   <span class="keywordflow">return</span> 1;
<a name="l01242"></a>01242 }
<a name="l01243"></a>01243 
<a name="l01244"></a>01244 <span class="keywordtype">int</span>
<a name="l01245"></a><a class="code" href="ospfd_8h.html#ae271a3d8268f52342252f8fcc44968c7">01245</a> <a class="code" href="ospfd_8c.html#a30ca506cd3dc07e2e67aebbc64571eea">ospf_area_export_list_unset</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> * <a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l01246"></a>01246 {
<a name="l01247"></a>01247 
<a name="l01248"></a>01248   <a class="code" href="ospf6__area_8h.html#a3b1e86d59d3641da3b6b9281a97c7927">EXPORT_LIST</a> (area) = 0;
<a name="l01249"></a>01249 
<a name="l01250"></a>01250   <span class="keywordflow">if</span> (<a class="code" href="ospf6__area_8h.html#a4b149526dcc0d9c5de7086d581336dcb">EXPORT_NAME</a> (area))
<a name="l01251"></a>01251     free (<a class="code" href="ospf6__area_8h.html#a4b149526dcc0d9c5de7086d581336dcb">EXPORT_NAME</a> (area));
<a name="l01252"></a>01252 
<a name="l01253"></a>01253   <a class="code" href="ospf6__area_8h.html#a4b149526dcc0d9c5de7086d581336dcb">EXPORT_NAME</a> (area) = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01254"></a>01254 
<a name="l01255"></a>01255   <a class="code" href="ospfd_8c.html#aa12d53d797f5400a252c49e4fe12428d">ospf_area_check_free</a> (ospf, area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>);
<a name="l01256"></a>01256   
<a name="l01257"></a>01257   <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (ospf);
<a name="l01258"></a>01258 
<a name="l01259"></a>01259   <span class="keywordflow">return</span> 1;
<a name="l01260"></a>01260 }
<a name="l01261"></a>01261 
<a name="l01262"></a>01262 <span class="keywordtype">int</span>
<a name="l01263"></a><a class="code" href="ospfd_8h.html#a04600827980f6773b2e231ae15633ee7">01263</a> <a class="code" href="ospfd_8c.html#a749e2c33ebb3d846c8ba674303699e26">ospf_area_import_list_set</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>, 
<a name="l01264"></a>01264                            <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>)
<a name="l01265"></a>01265 {
<a name="l01266"></a>01266   <span class="keyword">struct </span><a class="code" href="structaccess__list.html">access_list</a> *<a class="code" href="structlist.html">list</a>;
<a name="l01267"></a>01267   list = <a class="code" href="filter_8c.html#a8cb65cd01015f6673c632cb5b8714b3e">access_list_lookup</a> (<a class="code" href="zebra_8h.html#a192fcc8cbfb7b9d03c6562c48941a4bd">AFI_IP</a>, name);
<a name="l01268"></a>01268 
<a name="l01269"></a>01269   <a class="code" href="ospf6__area_8h.html#a8bb9cd837b1e23c12864c27e469c9575">IMPORT_LIST</a> (area) = list;
<a name="l01270"></a>01270 
<a name="l01271"></a>01271   <span class="keywordflow">if</span> (<a class="code" href="ospf6__area_8h.html#a8f03536971036c0537f7bda3fb525b14">IMPORT_NAME</a> (area))
<a name="l01272"></a>01272     free (<a class="code" href="ospf6__area_8h.html#a8f03536971036c0537f7bda3fb525b14">IMPORT_NAME</a> (area));
<a name="l01273"></a>01273 
<a name="l01274"></a>01274   <a class="code" href="ospf6__area_8h.html#a8f03536971036c0537f7bda3fb525b14">IMPORT_NAME</a> (area) = strdup (name);
<a name="l01275"></a>01275   <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (ospf);
<a name="l01276"></a>01276 
<a name="l01277"></a>01277   <span class="keywordflow">return</span> 1;
<a name="l01278"></a>01278 }
<a name="l01279"></a>01279 
<a name="l01280"></a>01280 <span class="keywordtype">int</span>
<a name="l01281"></a><a class="code" href="ospfd_8h.html#acd95c3b17ad5335b0ef426f17eca84ad">01281</a> <a class="code" href="ospfd_8c.html#a37dd160fa610a5ad3222a273744c1e7f">ospf_area_import_list_unset</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> <a class="code" href="structospf__area.html">ospf_area</a> * <a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l01282"></a>01282 {
<a name="l01283"></a>01283   <a class="code" href="ospf6__area_8h.html#a8bb9cd837b1e23c12864c27e469c9575">IMPORT_LIST</a> (area) = 0;
<a name="l01284"></a>01284 
<a name="l01285"></a>01285   <span class="keywordflow">if</span> (<a class="code" href="ospf6__area_8h.html#a8f03536971036c0537f7bda3fb525b14">IMPORT_NAME</a> (area))
<a name="l01286"></a>01286     free (<a class="code" href="ospf6__area_8h.html#a8f03536971036c0537f7bda3fb525b14">IMPORT_NAME</a> (area));
<a name="l01287"></a>01287 
<a name="l01288"></a>01288   <a class="code" href="ospf6__area_8h.html#a8f03536971036c0537f7bda3fb525b14">IMPORT_NAME</a> (area) = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01289"></a>01289   <a class="code" href="ospfd_8c.html#aa12d53d797f5400a252c49e4fe12428d">ospf_area_check_free</a> (ospf, area-&gt;<a class="code" href="structospf__area.html#af08c06866d1beb6168de552bb9855c6b">area_id</a>);
<a name="l01290"></a>01290 
<a name="l01291"></a>01291   <a class="code" href="ospf__abr_8c.html#a1ff6c727604d00c49b9c4a26131e5462">ospf_schedule_abr_task</a> (ospf);
<a name="l01292"></a>01292 
<a name="l01293"></a>01293   <span class="keywordflow">return</span> 1;
<a name="l01294"></a>01294 }
<a name="l01295"></a>01295 
<a name="l01296"></a>01296 <span class="keywordtype">int</span>
<a name="l01297"></a><a class="code" href="ospfd_8h.html#a65ca0c06e0e4b7c05bdb0975a2cca405">01297</a> <a class="code" href="ospfd_8c.html#a2b5dac7af38c281e1e0cccbf0ae23d5a">ospf_timers_refresh_set</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keywordtype">int</span> <a class="code" href="isis__circuit_8c.html#a900b5f9651c07bafd5d81cc876b93885">interval</a>)
<a name="l01298"></a>01298 {
<a name="l01299"></a>01299   <span class="keywordtype">int</span> time_left;
<a name="l01300"></a>01300 
<a name="l01301"></a>01301   <span class="keywordflow">if</span> (ospf-&gt;<a class="code" href="structospf.html#acbe4f365624a63f3ec08e10e296050a3">lsa_refresh_interval</a> == interval)
<a name="l01302"></a>01302     <span class="keywordflow">return</span> 1;
<a name="l01303"></a>01303 
<a name="l01304"></a>01304   time_left = ospf-&gt;<a class="code" href="structospf.html#acbe4f365624a63f3ec08e10e296050a3">lsa_refresh_interval</a> -
<a name="l01305"></a>01305     (<a class="code" href="thread_8c.html#acbaf2206b84f93fbe18f33483bf101d2">quagga_time</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) - ospf-&gt;<a class="code" href="structospf.html#ab5d0a648175f600f62a12444c237dd8f">lsa_refresher_started</a>);
<a name="l01306"></a>01306   
<a name="l01307"></a>01307   <span class="keywordflow">if</span> (time_left &gt; interval)
<a name="l01308"></a>01308     {
<a name="l01309"></a>01309       <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#a3f56b5850d9efb087ddb6d2eb79dd291">t_lsa_refresher</a>);
<a name="l01310"></a>01310       ospf-&gt;<a class="code" href="structospf.html#a3f56b5850d9efb087ddb6d2eb79dd291">t_lsa_refresher</a> =
<a name="l01311"></a>01311     <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf__lsa_8c.html#aba5248867f4c5f9ca904d27b89482c20">ospf_lsa_refresh_walker</a>, ospf, interval);
<a name="l01312"></a>01312     }
<a name="l01313"></a>01313   ospf-&gt;<a class="code" href="structospf.html#acbe4f365624a63f3ec08e10e296050a3">lsa_refresh_interval</a> = <a class="code" href="isis__circuit_8c.html#a900b5f9651c07bafd5d81cc876b93885">interval</a>;
<a name="l01314"></a>01314 
<a name="l01315"></a>01315   <span class="keywordflow">return</span> 1;
<a name="l01316"></a>01316 }
<a name="l01317"></a>01317 
<a name="l01318"></a>01318 <span class="keywordtype">int</span>
<a name="l01319"></a><a class="code" href="ospfd_8h.html#afbfc6bd812cee84317e5f8a5d17ea7d4">01319</a> <a class="code" href="ospfd_8c.html#a92885283cd0ebf3b388ea7ac1d40af46">ospf_timers_refresh_unset</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>)
<a name="l01320"></a>01320 {
<a name="l01321"></a>01321   <span class="keywordtype">int</span> time_left;
<a name="l01322"></a>01322 
<a name="l01323"></a>01323   time_left = ospf-&gt;<a class="code" href="structospf.html#acbe4f365624a63f3ec08e10e296050a3">lsa_refresh_interval</a> -
<a name="l01324"></a>01324     (<a class="code" href="thread_8c.html#acbaf2206b84f93fbe18f33483bf101d2">quagga_time</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) - ospf-&gt;<a class="code" href="structospf.html#ab5d0a648175f600f62a12444c237dd8f">lsa_refresher_started</a>);
<a name="l01325"></a>01325 
<a name="l01326"></a>01326   <span class="keywordflow">if</span> (time_left &gt; <a class="code" href="ospfd_8h.html#ad8b9f18664f98ee8d1c70e483e738469">OSPF_LSA_REFRESH_INTERVAL_DEFAULT</a>)
<a name="l01327"></a>01327     {
<a name="l01328"></a>01328       <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (ospf-&gt;<a class="code" href="structospf.html#a3f56b5850d9efb087ddb6d2eb79dd291">t_lsa_refresher</a>);
<a name="l01329"></a>01329       ospf-&gt;<a class="code" href="structospf.html#a3f56b5850d9efb087ddb6d2eb79dd291">t_lsa_refresher</a> =
<a name="l01330"></a>01330     <a class="code" href="thread_8h.html#aca77b3bbd166d3573de5ecd9756a590c">thread_add_timer</a> (<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>, <a class="code" href="ospf__lsa_8c.html#aba5248867f4c5f9ca904d27b89482c20">ospf_lsa_refresh_walker</a>, ospf,
<a name="l01331"></a>01331               <a class="code" href="ospfd_8h.html#ad8b9f18664f98ee8d1c70e483e738469">OSPF_LSA_REFRESH_INTERVAL_DEFAULT</a>);
<a name="l01332"></a>01332     }
<a name="l01333"></a>01333 
<a name="l01334"></a>01334   ospf-&gt;<a class="code" href="structospf.html#acbe4f365624a63f3ec08e10e296050a3">lsa_refresh_interval</a> = <a class="code" href="ospfd_8h.html#ad8b9f18664f98ee8d1c70e483e738469">OSPF_LSA_REFRESH_INTERVAL_DEFAULT</a>;
<a name="l01335"></a>01335 
<a name="l01336"></a>01336   <span class="keywordflow">return</span> 1;
<a name="l01337"></a>01337 }
<a name="l01338"></a>01338 
<a name="l01339"></a>01339 
<a name="l01340"></a>01340 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *
<a name="l01341"></a><a class="code" href="ospfd_8c.html#ab1ae8ab343ebf73396c0d0d475cbccee">01341</a> <a class="code" href="ospfd_8c.html#ab1ae8ab343ebf73396c0d0d475cbccee">ospf_nbr_nbma_new</a> (<span class="keywordtype">void</span>)
<a name="l01342"></a>01342 {
<a name="l01343"></a>01343   <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma;
<a name="l01344"></a>01344 
<a name="l01345"></a>01345   nbr_nbma = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba3168b63f70b138c38a19ae6d743b77ed">MTYPE_OSPF_NEIGHBOR_STATIC</a>,
<a name="l01346"></a>01346               <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a>));
<a name="l01347"></a>01347 
<a name="l01348"></a>01348   nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a3d452f4f0a3396d1ee21e58e9635e228">priority</a> = <a class="code" href="ospfd_8h.html#aa3181c3eedf2acddb4d5d6e820d6d710">OSPF_NEIGHBOR_PRIORITY_DEFAULT</a>;
<a name="l01349"></a>01349   nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#ac2f40d497fd994774eaa662ba7a45f9d">v_poll</a> = <a class="code" href="ospfd_8h.html#aa863216ebc7bf12bf8d0434cf9bb90d0">OSPF_POLL_INTERVAL_DEFAULT</a>;
<a name="l01350"></a>01350 
<a name="l01351"></a>01351   <span class="keywordflow">return</span> nbr_nbma;
<a name="l01352"></a>01352 }
<a name="l01353"></a>01353 
<a name="l01354"></a>01354 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01355"></a><a class="code" href="ospfd_8c.html#a61cd9b22f0bce1e670289baa7e941378">01355</a> <a class="code" href="ospfd_8c.html#a61cd9b22f0bce1e670289baa7e941378">ospf_nbr_nbma_free</a> (<span class="keyword">struct</span> <a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma)
<a name="l01356"></a>01356 {
<a name="l01357"></a>01357   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba3168b63f70b138c38a19ae6d743b77ed">MTYPE_OSPF_NEIGHBOR_STATIC</a>, nbr_nbma);
<a name="l01358"></a>01358 }
<a name="l01359"></a>01359 
<a name="l01360"></a>01360 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01361"></a><a class="code" href="ospfd_8c.html#a625f9f237c3f7a17051faac3724d651f">01361</a> <a class="code" href="ospfd_8c.html#a625f9f237c3f7a17051faac3724d651f">ospf_nbr_nbma_delete</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> <a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma)
<a name="l01362"></a>01362 {
<a name="l01363"></a>01363   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l01364"></a>01364   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> p;
<a name="l01365"></a>01365 
<a name="l01366"></a>01366   p.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
<a name="l01367"></a>01367   p.prefix = nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a5fc2a7f849288ef91acc9c055a934fe8">addr</a>;
<a name="l01368"></a>01368   p.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;
<a name="l01369"></a>01369 
<a name="l01370"></a>01370   rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (ospf-&gt;<a class="code" href="structospf.html#a89b824e82146fd2494b2bf596934ab57">nbr_nbma</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)&amp;p);
<a name="l01371"></a>01371   <span class="keywordflow">if</span> (rn)
<a name="l01372"></a>01372     {
<a name="l01373"></a>01373       <a class="code" href="ospfd_8c.html#a61cd9b22f0bce1e670289baa7e941378">ospf_nbr_nbma_free</a> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>);
<a name="l01374"></a>01374       rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01375"></a>01375       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l01376"></a>01376       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l01377"></a>01377     }
<a name="l01378"></a>01378 }
<a name="l01379"></a>01379 
<a name="l01380"></a>01380 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01381"></a><a class="code" href="ospfd_8c.html#ac7ea157858e0fc0113dbcfe4c34cc101">01381</a> <a class="code" href="ospfd_8c.html#ac7ea157858e0fc0113dbcfe4c34cc101">ospf_nbr_nbma_down</a> (<span class="keyword">struct</span> <a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma)
<a name="l01382"></a>01382 {
<a name="l01383"></a>01383   <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a9aa6dd806f5903f6a4ded3ee4ca26e29">t_poll</a>);
<a name="l01384"></a>01384 
<a name="l01385"></a>01385   <span class="keywordflow">if</span> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a>)
<a name="l01386"></a>01386     {
<a name="l01387"></a>01387       nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a>-&gt;<a class="code" href="structospf__neighbor.html#a68b82493dd68fd0a271db2e168c36617">nbr_nbma</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01388"></a>01388       <a class="code" href="ospf__nsm_8h.html#a9f4ca1bd42134b3f3c90fc8b7b4327b5">OSPF_NSM_EVENT_EXECUTE</a> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a>, <a class="code" href="ospf__nsm_8h.html#a4b7fc48119800998da7fa068062edb40">NSM_KillNbr</a>);
<a name="l01389"></a>01389     }
<a name="l01390"></a>01390 
<a name="l01391"></a>01391   <span class="keywordflow">if</span> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a501752990df8f83d0efae32fbb9dead9">oi</a>)
<a name="l01392"></a>01392     <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a501752990df8f83d0efae32fbb9dead9">oi</a>-&gt;<a class="code" href="structospf__interface.html#a5711c57336783fe2d490c7760a4a18ed">nbr_nbma</a>, nbr_nbma);
<a name="l01393"></a>01393 }
<a name="l01394"></a>01394 
<a name="l01395"></a>01395 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01396"></a><a class="code" href="ospfd_8c.html#a125985470ee6de834824ac909454204a">01396</a> <a class="code" href="ospfd_8c.html#a125985470ee6de834824ac909454204a">ospf_nbr_nbma_add</a> (<span class="keyword">struct</span> <a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma,
<a name="l01397"></a>01397            <span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *oi)
<a name="l01398"></a>01398 {
<a name="l01399"></a>01399   <span class="keyword">struct </span><a class="code" href="structospf__neighbor.html">ospf_neighbor</a> *nbr;
<a name="l01400"></a>01400   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l01401"></a>01401   <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> p;
<a name="l01402"></a>01402 
<a name="l01403"></a>01403   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> != <a class="code" href="ospf__interface_8h.html#abf2c650e64355936c071432d92dd5ecb">OSPF_IFTYPE_NBMA</a>)
<a name="l01404"></a>01404     <span class="keywordflow">return</span>;
<a name="l01405"></a>01405 
<a name="l01406"></a>01406   <span class="keywordflow">if</span> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01407"></a>01407     <span class="keywordflow">return</span>;
<a name="l01408"></a>01408 
<a name="l01409"></a>01409   <span class="keywordflow">if</span> (<a class="code" href="prefix_8h.html#a52a7c965d0b22ca60fe38fa6c404dbcc">IPV4_ADDR_SAME</a> (&amp;oi-&gt;<a class="code" href="structospf__interface.html#a6450831debea20d192ad89e650d0edab">nbr_self</a>-&gt;<a class="code" href="structospf__neighbor.html#a4be3cd4b416bc267a4e3b35b9e2b1102">address</a>.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a>, &amp;nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a5fc2a7f849288ef91acc9c055a934fe8">addr</a>))
<a name="l01410"></a>01410     <span class="keywordflow">return</span>;
<a name="l01411"></a>01411       
<a name="l01412"></a>01412   nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a501752990df8f83d0efae32fbb9dead9">oi</a> = oi;
<a name="l01413"></a>01413   <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (oi-&gt;<a class="code" href="structospf__interface.html#a5711c57336783fe2d490c7760a4a18ed">nbr_nbma</a>, nbr_nbma);
<a name="l01414"></a>01414 
<a name="l01415"></a>01415   <span class="comment">/* Get neighbor information from table. */</span>
<a name="l01416"></a>01416   p.<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> = AF_INET;
<a name="l01417"></a>01417   p.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;
<a name="l01418"></a>01418   p.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a> = nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a5fc2a7f849288ef91acc9c055a934fe8">addr</a>;
<a name="l01419"></a>01419 
<a name="l01420"></a>01420   rn = <a class="code" href="table_8c.html#ac91fdff1a0b8dc3d60ebaf152caa0f80">route_node_get</a> (oi-&gt;<a class="code" href="structospf__interface.html#aeb2e2f33698c499957bb55bfc80835d9">nbrs</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)&amp;p);
<a name="l01421"></a>01421   <span class="keywordflow">if</span> (rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
<a name="l01422"></a>01422     {
<a name="l01423"></a>01423       nbr = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l01424"></a>01424       nbr-&gt;<a class="code" href="structospf__neighbor.html#a68b82493dd68fd0a271db2e168c36617">nbr_nbma</a> = nbr_nbma;
<a name="l01425"></a>01425       nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a> = nbr;
<a name="l01426"></a>01426 
<a name="l01427"></a>01427       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l01428"></a>01428     }
<a name="l01429"></a>01429   <span class="keywordflow">else</span>
<a name="l01430"></a>01430     {
<a name="l01431"></a>01431       nbr = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = <a class="code" href="ospf__neighbor_8c.html#a77d8efb26eb88abdd8a3c0de59b1d12a">ospf_nbr_new</a> (oi);
<a name="l01432"></a>01432       nbr-&gt;<a class="code" href="structospf__neighbor.html#a07061a68f4e15effd12479e1047120c7">state</a> = <a class="code" href="ospf__nsm_8h.html#a4bdf4e7631050dcf28cbe7959f0675ce">NSM_Down</a>;
<a name="l01433"></a>01433       nbr-&gt;<a class="code" href="structospf__neighbor.html#a959c002cab5b6328120fcac7ba25fbee">src</a> = nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a5fc2a7f849288ef91acc9c055a934fe8">addr</a>;
<a name="l01434"></a>01434       nbr-&gt;<a class="code" href="structospf__neighbor.html#a68b82493dd68fd0a271db2e168c36617">nbr_nbma</a> = nbr_nbma;
<a name="l01435"></a>01435       nbr-&gt;<a class="code" href="structospf__neighbor.html#ade51baa719592185df1db62d13e9cf63">priority</a> = nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a3d452f4f0a3396d1ee21e58e9635e228">priority</a>;
<a name="l01436"></a>01436       nbr-&gt;<a class="code" href="structospf__neighbor.html#a4be3cd4b416bc267a4e3b35b9e2b1102">address</a> = <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
<a name="l01437"></a>01437 
<a name="l01438"></a>01438       nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a> = nbr;
<a name="l01439"></a>01439 
<a name="l01440"></a>01440       <a class="code" href="ospf__nsm_8h.html#a9f4ca1bd42134b3f3c90fc8b7b4327b5">OSPF_NSM_EVENT_EXECUTE</a> (nbr, <a class="code" href="ospf__nsm_8h.html#a77085480eb043970064579598496be21">NSM_Start</a>);
<a name="l01441"></a>01441     }
<a name="l01442"></a>01442 }
<a name="l01443"></a>01443 
<a name="l01444"></a>01444 <span class="keywordtype">void</span>
<a name="l01445"></a><a class="code" href="ospfd_8h.html#ae7b387543a6be9ff5c480e55ed44a0e5">01445</a> <a class="code" href="ospfd_8c.html#a053c1c99419abc1738ed63cc58a910d1">ospf_nbr_nbma_if_update</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> <a class="code" href="structospf__interface.html">ospf_interface</a> *oi)
<a name="l01446"></a>01446 {
<a name="l01447"></a>01447   <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma;
<a name="l01448"></a>01448   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l01449"></a>01449   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> p;
<a name="l01450"></a>01450 
<a name="l01451"></a>01451   <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> != <a class="code" href="ospf__interface_8h.html#abf2c650e64355936c071432d92dd5ecb">OSPF_IFTYPE_NBMA</a>)
<a name="l01452"></a>01452     <span class="keywordflow">return</span>;
<a name="l01453"></a>01453 
<a name="l01454"></a>01454   <span class="keywordflow">for</span> (rn = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (ospf-&gt;<a class="code" href="structospf.html#a89b824e82146fd2494b2bf596934ab57">nbr_nbma</a>); rn; rn = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rn))
<a name="l01455"></a>01455     <span class="keywordflow">if</span> ((nbr_nbma = rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>))
<a name="l01456"></a>01456       <span class="keywordflow">if</span> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a501752990df8f83d0efae32fbb9dead9">oi</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a83ef55950b998c17f62cf49e6d48494d">nbr</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01457"></a>01457     {
<a name="l01458"></a>01458       p.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
<a name="l01459"></a>01459       p.prefix = nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a5fc2a7f849288ef91acc9c055a934fe8">addr</a>;
<a name="l01460"></a>01460       p.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;
<a name="l01461"></a>01461 
<a name="l01462"></a>01462       <span class="keywordflow">if</span> (<a class="code" href="prefix_8c.html#a8c5d68665a4b036a361330bee254318e">prefix_match</a> (oi-&gt;<a class="code" href="structospf__interface.html#a43493bc2b5d951e3e38ace850332eca1">address</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)&amp;p))
<a name="l01463"></a>01463         <a class="code" href="ospfd_8c.html#a125985470ee6de834824ac909454204a">ospf_nbr_nbma_add</a> (nbr_nbma, oi);
<a name="l01464"></a>01464     }
<a name="l01465"></a>01465 }
<a name="l01466"></a>01466 
<a name="l01467"></a>01467 <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *
<a name="l01468"></a><a class="code" href="ospfd_8h.html#a0c2bee49869305444f843f31841a1015">01468</a> <a class="code" href="ospfd_8c.html#a5ef294b92140e69feec21601a4893b53">ospf_nbr_nbma_lookup</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr nbr_addr)
<a name="l01469"></a>01469 {
<a name="l01470"></a>01470   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l01471"></a>01471   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> p;
<a name="l01472"></a>01472 
<a name="l01473"></a>01473   p.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
<a name="l01474"></a>01474   p.prefix = nbr_addr;
<a name="l01475"></a>01475   p.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;
<a name="l01476"></a>01476 
<a name="l01477"></a>01477   rn = <a class="code" href="table_8c.html#ab99d86b40440c8f18d4f2b31b5b8f1c7">route_node_lookup</a> (ospf-&gt;<a class="code" href="structospf.html#a89b824e82146fd2494b2bf596934ab57">nbr_nbma</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)&amp;p);
<a name="l01478"></a>01478   <span class="keywordflow">if</span> (rn)
<a name="l01479"></a>01479     {
<a name="l01480"></a>01480       <a class="code" href="table_8c.html#a849965644708e01ef49c203a2e00afd4">route_unlock_node</a> (rn);
<a name="l01481"></a>01481       <span class="keywordflow">return</span> rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l01482"></a>01482     }
<a name="l01483"></a>01483   <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01484"></a>01484 }
<a name="l01485"></a>01485 
<a name="l01486"></a>01486 <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *
<a name="l01487"></a><a class="code" href="ospfd_8h.html#a341a02066e66de6b8c68cdf88b53c141">01487</a> <a class="code" href="ospfd_8c.html#af6d7c7ae754f459750fd607f1713bc3f">ospf_nbr_nbma_lookup_next</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr *<a class="code" href="structospf__nbr__nbma.html#a5fc2a7f849288ef91acc9c055a934fe8">addr</a>, <span class="keywordtype">int</span> first)
<a name="l01488"></a>01488 {
<a name="l01489"></a>01489 <span class="preprocessor">#if 0</span>
<a name="l01490"></a>01490 <span class="preprocessor"></span>  <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma;
<a name="l01491"></a>01491   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l01492"></a>01492 <span class="preprocessor">#endif</span>
<a name="l01493"></a>01493 <span class="preprocessor"></span>
<a name="l01494"></a>01494   <span class="keywordflow">if</span> (ospf == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01495"></a>01495     <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01496"></a>01496 
<a name="l01497"></a>01497 <span class="preprocessor">#if 0</span>
<a name="l01498"></a>01498 <span class="preprocessor"></span>  <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a89b824e82146fd2494b2bf596934ab57">nbr_nbma</a>, node, nbr_nbma))
<a name="l01499"></a>01499     {
<a name="l01500"></a>01500       <span class="keywordflow">if</span> (first)
<a name="l01501"></a>01501     {
<a name="l01502"></a>01502       *addr = nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a5fc2a7f849288ef91acc9c055a934fe8">addr</a>;
<a name="l01503"></a>01503       <span class="keywordflow">return</span> nbr_nbma;
<a name="l01504"></a>01504     }
<a name="l01505"></a>01505       <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ntohl (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a5fc2a7f849288ef91acc9c055a934fe8">addr</a>.s_addr) &gt; ntohl (addr-&gt;s_addr))
<a name="l01506"></a>01506     {
<a name="l01507"></a>01507       *addr = nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a5fc2a7f849288ef91acc9c055a934fe8">addr</a>;
<a name="l01508"></a>01508       <span class="keywordflow">return</span> nbr_nbma;
<a name="l01509"></a>01509     }
<a name="l01510"></a>01510     }
<a name="l01511"></a>01511 <span class="preprocessor">#endif</span>
<a name="l01512"></a>01512 <span class="preprocessor"></span>  <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01513"></a>01513 }
<a name="l01514"></a>01514 
<a name="l01515"></a>01515 <span class="keywordtype">int</span>
<a name="l01516"></a><a class="code" href="ospfd_8h.html#a9366ed0ac1297811f7e45e200159c6a3">01516</a> <a class="code" href="ospfd_8c.html#adcbe4108b4b4e19a517ce1a5a0cec71b">ospf_nbr_nbma_set</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr nbr_addr)
<a name="l01517"></a>01517 {
<a name="l01518"></a>01518   <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma;
<a name="l01519"></a>01519   <span class="keyword">struct </span><a class="code" href="structospf__interface.html">ospf_interface</a> *oi;
<a name="l01520"></a>01520   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> p;
<a name="l01521"></a>01521   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rn;
<a name="l01522"></a>01522   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l01523"></a>01523 
<a name="l01524"></a>01524   nbr_nbma = <a class="code" href="ospfd_8c.html#a5ef294b92140e69feec21601a4893b53">ospf_nbr_nbma_lookup</a> (ospf, nbr_addr);
<a name="l01525"></a>01525   <span class="keywordflow">if</span> (nbr_nbma)
<a name="l01526"></a>01526     <span class="keywordflow">return</span> 0;
<a name="l01527"></a>01527 
<a name="l01528"></a>01528   nbr_nbma = <a class="code" href="ospfd_8c.html#ab1ae8ab343ebf73396c0d0d475cbccee">ospf_nbr_nbma_new</a> ();
<a name="l01529"></a>01529   nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a5fc2a7f849288ef91acc9c055a934fe8">addr</a> = nbr_addr;
<a name="l01530"></a>01530 
<a name="l01531"></a>01531   p.<a class="code" href="structprefix__ipv4.html#a3a879ea08458c4807130156f5f23dbc7">family</a> = AF_INET;
<a name="l01532"></a>01532   p.prefix = nbr_addr;
<a name="l01533"></a>01533   p.<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a> = <a class="code" href="prefix_8h.html#a9bd48f210d9f91d189e70196918f82c6">IPV4_MAX_BITLEN</a>;
<a name="l01534"></a>01534 
<a name="l01535"></a>01535   rn = <a class="code" href="table_8c.html#ac91fdff1a0b8dc3d60ebaf152caa0f80">route_node_get</a> (ospf-&gt;<a class="code" href="structospf.html#a89b824e82146fd2494b2bf596934ab57">nbr_nbma</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)&amp;p);
<a name="l01536"></a>01536   rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> = nbr_nbma;
<a name="l01537"></a>01537 
<a name="l01538"></a>01538   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (ospf-&gt;<a class="code" href="structospf.html#a977d3608343fe5db7900ec646880cb6a">oiflist</a>, node, oi))
<a name="l01539"></a>01539     {
<a name="l01540"></a>01540       <span class="keywordflow">if</span> (oi-&gt;<a class="code" href="structospf__interface.html#adb923b0bfebf30738af57dafcf0d0d57">type</a> == <a class="code" href="ospf__interface_8h.html#abf2c650e64355936c071432d92dd5ecb">OSPF_IFTYPE_NBMA</a>)
<a name="l01541"></a>01541     <span class="keywordflow">if</span> (<a class="code" href="prefix_8c.html#a8c5d68665a4b036a361330bee254318e">prefix_match</a> (oi-&gt;<a class="code" href="structospf__interface.html#a43493bc2b5d951e3e38ace850332eca1">address</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *)&amp;p))
<a name="l01542"></a>01542       {
<a name="l01543"></a>01543         <a class="code" href="ospfd_8c.html#a125985470ee6de834824ac909454204a">ospf_nbr_nbma_add</a> (nbr_nbma, oi);
<a name="l01544"></a>01544         <span class="keywordflow">break</span>;
<a name="l01545"></a>01545       }
<a name="l01546"></a>01546     }
<a name="l01547"></a>01547 
<a name="l01548"></a>01548   <span class="keywordflow">return</span> 1;
<a name="l01549"></a>01549 }
<a name="l01550"></a>01550 
<a name="l01551"></a>01551 <span class="keywordtype">int</span>
<a name="l01552"></a><a class="code" href="ospfd_8h.html#a5a0b6fdfa6a63bc9cefd9827b299da21">01552</a> <a class="code" href="ospfd_8c.html#af9c8a93e2314bc7beda655a50cce82e6">ospf_nbr_nbma_unset</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr nbr_addr)
<a name="l01553"></a>01553 {
<a name="l01554"></a>01554   <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma;
<a name="l01555"></a>01555 
<a name="l01556"></a>01556   nbr_nbma = <a class="code" href="ospfd_8c.html#a5ef294b92140e69feec21601a4893b53">ospf_nbr_nbma_lookup</a> (ospf, nbr_addr);
<a name="l01557"></a>01557   <span class="keywordflow">if</span> (nbr_nbma == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01558"></a>01558     <span class="keywordflow">return</span> 0;
<a name="l01559"></a>01559 
<a name="l01560"></a>01560   <a class="code" href="ospfd_8c.html#ac7ea157858e0fc0113dbcfe4c34cc101">ospf_nbr_nbma_down</a> (nbr_nbma);
<a name="l01561"></a>01561   <a class="code" href="ospfd_8c.html#a625f9f237c3f7a17051faac3724d651f">ospf_nbr_nbma_delete</a> (ospf, nbr_nbma);
<a name="l01562"></a>01562 
<a name="l01563"></a>01563   <span class="keywordflow">return</span> 1;
<a name="l01564"></a>01564 }
<a name="l01565"></a>01565 
<a name="l01566"></a>01566 <span class="keywordtype">int</span>
<a name="l01567"></a><a class="code" href="ospfd_8h.html#ab9ce836900e158de0d36f76a11f9f174">01567</a> <a class="code" href="ospfd_8c.html#a3603dae65cc70ae2535765d6db428392">ospf_nbr_nbma_priority_set</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr nbr_addr,
<a name="l01568"></a>01568                 u_char <a class="code" href="structospf__nbr__nbma.html#a3d452f4f0a3396d1ee21e58e9635e228">priority</a>)
<a name="l01569"></a>01569 {
<a name="l01570"></a>01570   <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma;
<a name="l01571"></a>01571 
<a name="l01572"></a>01572   nbr_nbma = <a class="code" href="ospfd_8c.html#a5ef294b92140e69feec21601a4893b53">ospf_nbr_nbma_lookup</a> (ospf, nbr_addr);
<a name="l01573"></a>01573   <span class="keywordflow">if</span> (nbr_nbma == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01574"></a>01574     <span class="keywordflow">return</span> 0;
<a name="l01575"></a>01575 
<a name="l01576"></a>01576   <span class="keywordflow">if</span> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a3d452f4f0a3396d1ee21e58e9635e228">priority</a> != priority)
<a name="l01577"></a>01577     nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a3d452f4f0a3396d1ee21e58e9635e228">priority</a> = <a class="code" href="structospf__nbr__nbma.html#a3d452f4f0a3396d1ee21e58e9635e228">priority</a>;
<a name="l01578"></a>01578 
<a name="l01579"></a>01579   <span class="keywordflow">return</span> 1;
<a name="l01580"></a>01580 }
<a name="l01581"></a>01581 
<a name="l01582"></a>01582 <span class="keywordtype">int</span>
<a name="l01583"></a><a class="code" href="ospfd_8h.html#a940227b3dfdb427e3ab999cce9f06cd5">01583</a> <a class="code" href="ospfd_8c.html#a2fd5b5358363b213696d5d0c7a9975ca">ospf_nbr_nbma_priority_unset</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr nbr_addr)
<a name="l01584"></a>01584 {
<a name="l01585"></a>01585   <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma;
<a name="l01586"></a>01586 
<a name="l01587"></a>01587   nbr_nbma = <a class="code" href="ospfd_8c.html#a5ef294b92140e69feec21601a4893b53">ospf_nbr_nbma_lookup</a> (ospf, nbr_addr);
<a name="l01588"></a>01588   <span class="keywordflow">if</span> (nbr_nbma == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01589"></a>01589     <span class="keywordflow">return</span> 0;
<a name="l01590"></a>01590 
<a name="l01591"></a>01591   <span class="keywordflow">if</span> (nbr_nbma != <a class="code" href="ospfd_8h.html#aa3181c3eedf2acddb4d5d6e820d6d710">OSPF_NEIGHBOR_PRIORITY_DEFAULT</a>)
<a name="l01592"></a>01592     nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a3d452f4f0a3396d1ee21e58e9635e228">priority</a> = <a class="code" href="ospfd_8h.html#aa3181c3eedf2acddb4d5d6e820d6d710">OSPF_NEIGHBOR_PRIORITY_DEFAULT</a>;
<a name="l01593"></a>01593 
<a name="l01594"></a>01594   <span class="keywordflow">return</span> 1;
<a name="l01595"></a>01595 }
<a name="l01596"></a>01596 
<a name="l01597"></a>01597 <span class="keywordtype">int</span>
<a name="l01598"></a><a class="code" href="ospfd_8h.html#ace2315e00440e2c74231e189c3b8b135">01598</a> <a class="code" href="ospfd_8c.html#a13f5275e4e117d48fda7da4f92e8e462">ospf_nbr_nbma_poll_interval_set</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr nbr_addr,
<a name="l01599"></a>01599                  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="isis__circuit_8c.html#a900b5f9651c07bafd5d81cc876b93885">interval</a>)
<a name="l01600"></a>01600 {
<a name="l01601"></a>01601   <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma;
<a name="l01602"></a>01602 
<a name="l01603"></a>01603   nbr_nbma = <a class="code" href="ospfd_8c.html#a5ef294b92140e69feec21601a4893b53">ospf_nbr_nbma_lookup</a> (ospf, nbr_addr);
<a name="l01604"></a>01604   <span class="keywordflow">if</span> (nbr_nbma == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01605"></a>01605     <span class="keywordflow">return</span> 0;
<a name="l01606"></a>01606 
<a name="l01607"></a>01607   <span class="keywordflow">if</span> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#ac2f40d497fd994774eaa662ba7a45f9d">v_poll</a> != interval)
<a name="l01608"></a>01608     {
<a name="l01609"></a>01609       nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#ac2f40d497fd994774eaa662ba7a45f9d">v_poll</a> = <a class="code" href="isis__circuit_8c.html#a900b5f9651c07bafd5d81cc876b93885">interval</a>;
<a name="l01610"></a>01610       <span class="keywordflow">if</span> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a501752990df8f83d0efae32fbb9dead9">oi</a> &amp;&amp; <a class="code" href="ospf__interface_8c.html#ad3b316be3796bf94c8d30efea994e7ad">ospf_if_is_up</a> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a501752990df8f83d0efae32fbb9dead9">oi</a>))
<a name="l01611"></a>01611     {
<a name="l01612"></a>01612       <a class="code" href="ospfd_8h.html#aad5b9afadb0a72aae30f4a7e750cc66a">OSPF_TIMER_OFF</a> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a9aa6dd806f5903f6a4ded3ee4ca26e29">t_poll</a>);
<a name="l01613"></a>01613       <a class="code" href="ospfd_8h.html#ac2416fe7bfb9581d7d9c05b7326be6c1">OSPF_POLL_TIMER_ON</a> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#a9aa6dd806f5903f6a4ded3ee4ca26e29">t_poll</a>, <a class="code" href="ospf__packet_8c.html#a2232cdce5e30b12f8f9d29a49952b8f8">ospf_poll_timer</a>,
<a name="l01614"></a>01614                   nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#ac2f40d497fd994774eaa662ba7a45f9d">v_poll</a>);
<a name="l01615"></a>01615     }
<a name="l01616"></a>01616     }
<a name="l01617"></a>01617 
<a name="l01618"></a>01618   <span class="keywordflow">return</span> 1;
<a name="l01619"></a>01619 }
<a name="l01620"></a>01620 
<a name="l01621"></a>01621 <span class="keywordtype">int</span>
<a name="l01622"></a><a class="code" href="ospfd_8h.html#a4a8b0b02ecaba8d6b1a5542b7afde46b">01622</a> <a class="code" href="ospfd_8c.html#a7aa840262239aee6a4689d97661bf7fb">ospf_nbr_nbma_poll_interval_unset</a> (<span class="keyword">struct</span> <a class="code" href="structospf.html">ospf</a> *<a class="code" href="structospf.html">ospf</a>, <span class="keyword">struct</span> in_addr <a class="code" href="structospf__nbr__nbma.html#a5fc2a7f849288ef91acc9c055a934fe8">addr</a>)
<a name="l01623"></a>01623 {
<a name="l01624"></a>01624   <span class="keyword">struct </span><a class="code" href="structospf__nbr__nbma.html">ospf_nbr_nbma</a> *nbr_nbma;
<a name="l01625"></a>01625 
<a name="l01626"></a>01626   nbr_nbma = <a class="code" href="ospfd_8c.html#a5ef294b92140e69feec21601a4893b53">ospf_nbr_nbma_lookup</a> (ospf, addr);
<a name="l01627"></a>01627   <span class="keywordflow">if</span> (nbr_nbma == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01628"></a>01628     <span class="keywordflow">return</span> 0;
<a name="l01629"></a>01629 
<a name="l01630"></a>01630   <span class="keywordflow">if</span> (nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#ac2f40d497fd994774eaa662ba7a45f9d">v_poll</a> != <a class="code" href="ospfd_8h.html#aa863216ebc7bf12bf8d0434cf9bb90d0">OSPF_POLL_INTERVAL_DEFAULT</a>)
<a name="l01631"></a>01631     nbr_nbma-&gt;<a class="code" href="structospf__nbr__nbma.html#ac2f40d497fd994774eaa662ba7a45f9d">v_poll</a> = <a class="code" href="ospfd_8h.html#aa863216ebc7bf12bf8d0434cf9bb90d0">OSPF_POLL_INTERVAL_DEFAULT</a>;
<a name="l01632"></a>01632 
<a name="l01633"></a>01633   <span class="keywordflow">return</span> 1;
<a name="l01634"></a>01634 }
<a name="l01635"></a>01635 
<a name="l01636"></a>01636 <span class="keywordtype">void</span>
<a name="l01637"></a><a class="code" href="ospfd_8h.html#a74c3748fb0dea82de451c5c81c0b5112">01637</a> <a class="code" href="ospfd_8c.html#ab8024808f30d57a232e72613e0df89c3">ospf_master_init</a> ()
<a name="l01638"></a>01638 {
<a name="l01639"></a>01639   memset (&amp;<a class="code" href="structospf__master.html">ospf_master</a>, 0, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structospf__master.html">ospf_master</a>));
<a name="l01640"></a>01640 
<a name="l01641"></a>01641   om = &amp;<a class="code" href="ospfd_8c.html#a33a7fa52c2e4612ed7c43602d9520db1">ospf_master</a>;
<a name="l01642"></a>01642   om-&gt;<a class="code" href="structospf__master.html#a2f5e0a5ef79f97d68abef8515b41a740">ospf</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l01643"></a>01643   om-&gt;<a class="code" href="structospf__master.html#a39e64176c2082c5f5e5e3c324c1c5725">master</a> = <a class="code" href="thread_8c.html#a6d9de673f4874d0c6b7f6a84b2e0e9cf">thread_master_create</a> ();
<a name="l01644"></a>01644   om-&gt;<a class="code" href="structospf__master.html#aa00f5c7e4383a1787886fc2c1aefa94c">start_time</a> = <a class="code" href="thread_8c.html#acbaf2206b84f93fbe18f33483bf101d2">quagga_time</a> (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l01645"></a>01645 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="ospfd_8c.html">ospfd.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:08 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
