<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: bgpd/bgp_debug.c File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('bgp__debug_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">bgpd/bgp_debug.c File Reference</div>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="zebra_8h_source.html">zebra.h</a>&gt;</code><br/>
<code>#include &lt;<a class="el" href="version_8h_source.html">lib/version.h</a>&gt;</code><br/>
<code>#include &quot;<a class="el" href="prefix_8h_source.html">prefix.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="linklist_8h_source.html">linklist.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="stream_8h_source.html">stream.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="command_8h_source.html">command.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="str_8h_source.html">str.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="log_8h_source.html">log.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="sockunion_8h_source.html">sockunion.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="bgpd_8h_source.html">bgpd/bgpd.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="bgp__aspath_8h_source.html">bgpd/bgp_aspath.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="bgp__route_8h_source.html">bgpd/bgp_route.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="bgp__attr_8h_source.html">bgpd/bgp_attr.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="bgp__debug_8h_source.html">bgpd/bgp_debug.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="bgp__community_8h_source.html">bgpd/bgp_community.h</a>&quot;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for bgp_debug.c:</div>
<div class="dyncontent">
<div class="center"><img src="bgp__debug_8c__incl.png" border="0" usemap="#bgpd_2bgp__debug_8c" alt=""/></div>
<map name="bgpd_2bgp__debug_8c" id="bgpd_2bgp__debug_8c">
<area shape="rect" id="node3" href="zebra_8h.html" title="zebra.h" alt="" coords="1540,80,1607,107"/><area shape="rect" id="node59" href="str_8h.html" title="str.h" alt="" coords="2726,155,2775,181"/><area shape="rect" id="node61" href="version_8h.html" title="lib/version.h" alt="" coords="2607,80,2701,107"/><area shape="rect" id="node63" href="prefix_8h.html" title="prefix.h" alt="" coords="2902,155,2969,181"/><area shape="rect" id="node65" href="sockunion_8h.html" title="sockunion.h" alt="" coords="2817,229,2911,256"/><area shape="rect" id="node67" href="linklist_8h.html" title="linklist.h" alt="" coords="2902,80,2972,107"/><area shape="rect" id="node69" href="stream_8h.html" title="stream.h" alt="" coords="2997,80,3072,107"/><area shape="rect" id="node72" href="command_8h.html" title="command.h" alt="" coords="3147,80,3239,107"/><area shape="rect" id="node80" href="log_8h.html" title="log.h" alt="" coords="3271,229,3323,256"/><area shape="rect" id="node88" href="bgpd_8h.html" title="bgpd/bgpd.h" alt="" coords="2726,80,2825,107"/><area shape="rect" id="node91" href="bgp__aspath_8h.html" title="bgpd/bgp_aspath.h" alt="" coords="3315,80,3455,107"/><area shape="rect" id="node93" href="bgp__route_8h.html" title="bgpd/bgp_route.h" alt="" coords="3480,80,3611,107"/><area shape="rect" id="node97" href="bgp__attr_8h.html" title="bgpd/bgp_attr.h" alt="" coords="3697,155,3817,181"/><area shape="rect" id="node99" href="bgp__debug_8h.html" title="bgpd/bgp_debug.h" alt="" coords="3635,80,3773,107"/><area shape="rect" id="node102" href="bgp__community_8h.html" title="bgpd/bgp_community.h" alt="" coords="3848,80,4013,107"/><area shape="rect" id="node57" href="zassert_8h.html" title="zassert.h" alt="" coords="1739,155,1816,181"/><area shape="rect" id="node74" href="vector_8h.html" title="vector.h" alt="" coords="3143,155,3215,181"/><area shape="rect" id="node76" href="vty_8h.html" title="vty.h" alt="" coords="3239,155,3291,181"/><area shape="rect" id="node83" href="route__types_8h.html" title="lib/route_types.h" alt="" coords="2994,155,3117,181"/><area shape="rect" id="node78" href="thread_8h.html" title="thread.h" alt="" coords="3175,229,3247,256"/><area shape="rect" id="node95" href="bgp__table_8h.html" title="bgp_table.h" alt="" coords="3498,155,3592,181"/></map>
</div>
</div>
<p><a href="bgp__debug_8c_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a32d8ae5f48b2bf76b0a7c13182b2943f">bgp_dump_attr</a> (struct <a class="el" href="structpeer.html">peer</a> *<a class="el" href="structpeer.html">peer</a>, struct <a class="el" href="structattr.html">attr</a> *<a class="el" href="structattr.html">attr</a>, char *buf, size_t size)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a9f3092319ccb5c7d6f684dd7fda40c74">bgp_notify_print</a> (struct <a class="el" href="structpeer.html">peer</a> *<a class="el" href="structpeer.html">peer</a>, struct <a class="el" href="structbgp__notify.html">bgp_notify</a> *<a class="el" href="structbgp__notify.html">bgp_notify</a>, const char *direct)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#abc1624539747635021518178e4df5a69">debug</a> (unsigned int <a class="el" href="structoption.html">option</a>)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a3ae0723cade54f2d5167ad6fb5524969">DEFUN</a> (debug_bgp_as4, debug_bgp_as4_cmd,&quot;debug <a class="el" href="structbgp.html">bgp</a> as4&quot;, DEBUG_STR BGP_STR&quot;BGP AS4 actions\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a207d651d49085d9c3a1423e595ce7867">DEFUN</a> (no_debug_bgp_as4, no_debug_bgp_as4_cmd,&quot;no debug <a class="el" href="structbgp.html">bgp</a> as4&quot;, NO_STR DEBUG_STR BGP_STR&quot;BGP AS4 actions\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#ab00518af23b40d244ae8204d0e3e30b3">ALIAS</a> (no_debug_bgp_as4, undebug_bgp_as4_cmd,&quot;undebug <a class="el" href="structbgp.html">bgp</a> as4&quot;, UNDEBUG_STR DEBUG_STR BGP_STR&quot;BGP AS4 actions\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#af176f2162caa6957a9ca09af08276cbe">DEFUN</a> (no_debug_bgp_as4_segment, no_debug_bgp_as4_segment_cmd,&quot;no debug <a class="el" href="structbgp.html">bgp</a> as4 segment&quot;, NO_STR DEBUG_STR BGP_STR&quot;BGP AS4 <a class="el" href="structaspath.html">aspath</a> segment handling\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a3884382f05f794230ab89eef1c4f6272">ALIAS</a> (no_debug_bgp_as4_segment, undebug_bgp_as4_segment_cmd,&quot;undebug <a class="el" href="structbgp.html">bgp</a> as4 segment&quot;, UNDEBUG_STR DEBUG_STR BGP_STR&quot;BGP AS4 <a class="el" href="structaspath.html">aspath</a> segment handling\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#af03cac5bec1f007efe35e672d2544c5c">DEFUN</a> (no_debug_bgp_fsm, no_debug_bgp_fsm_cmd,&quot;no debug <a class="el" href="structbgp.html">bgp</a> fsm&quot;, NO_STR DEBUG_STR BGP_STR&quot;Finite State Machine\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a789399cc2e35b9ed72a876a45b650f2f">ALIAS</a> (no_debug_bgp_fsm, undebug_bgp_fsm_cmd,&quot;undebug <a class="el" href="structbgp.html">bgp</a> fsm&quot;, UNDEBUG_STR DEBUG_STR BGP_STR&quot;Finite State Machine\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#af913cabcd796ec544dbc13b263a3551e">DEFUN</a> (no_debug_bgp_events, no_debug_bgp_events_cmd,&quot;no debug <a class="el" href="structbgp.html">bgp</a> events&quot;, NO_STR DEBUG_STR BGP_STR&quot;BGP events\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#ad1e6bc02bf6ffb0b117745e6d41635d2">ALIAS</a> (no_debug_bgp_events, undebug_bgp_events_cmd,&quot;undebug <a class="el" href="structbgp.html">bgp</a> events&quot;, UNDEBUG_STR BGP_STR&quot;BGP events\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a667664ce640eab10cc6bc37ea1556318">DEFUN</a> (no_debug_bgp_filter, no_debug_bgp_filter_cmd,&quot;no debug <a class="el" href="structbgp.html">bgp</a> filters&quot;, NO_STR DEBUG_STR BGP_STR&quot;BGP filters\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a97528d64ce9071442b1fdefedbc8d65d">ALIAS</a> (no_debug_bgp_filter, undebug_bgp_filter_cmd,&quot;undebug <a class="el" href="structbgp.html">bgp</a> filters&quot;, UNDEBUG_STR BGP_STR&quot;BGP filters\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a17b4d2c62fe23972732e1a84c4288d02">DEFUN</a> (no_debug_bgp_keepalive, no_debug_bgp_keepalive_cmd,&quot;no debug <a class="el" href="structbgp.html">bgp</a> keepalives&quot;, NO_STR DEBUG_STR BGP_STR&quot;BGP keepalives\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a7732a3fe0a1f955496ba84d91ff1b4ab">ALIAS</a> (no_debug_bgp_keepalive, undebug_bgp_keepalive_cmd,&quot;undebug <a class="el" href="structbgp.html">bgp</a> keepalives&quot;, UNDEBUG_STR BGP_STR&quot;BGP keepalives\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a348f8393eff9f8e74e2e3bb17e02b6c7">DEFUN</a> (debug_bgp_update_direct, debug_bgp_update_direct_cmd,&quot;debug <a class="el" href="structbgp.html">bgp</a> updates (<a class="el" href="spgrid_8c.html#a89e1c555af4b92f6ee8d6f112f47ed12">in</a>|out)&quot;, DEBUG_STR BGP_STR&quot;BGP updates\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Inbound updates\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Outbound updates\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#ad15bee336d5523e8186a34f18d90ec39">DEFUN</a> (no_debug_bgp_update, no_debug_bgp_update_cmd,&quot;no debug <a class="el" href="structbgp.html">bgp</a> updates&quot;, NO_STR DEBUG_STR BGP_STR&quot;BGP updates\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#ad2eae6e00c01e79521d533ab15813747">ALIAS</a> (no_debug_bgp_update, undebug_bgp_update_cmd,&quot;undebug <a class="el" href="structbgp.html">bgp</a> updates&quot;, UNDEBUG_STR BGP_STR&quot;BGP updates\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a2d956d2bc4bb81d1d8bd41156bb4a99d">DEFUN</a> (no_debug_bgp_normal, no_debug_bgp_normal_cmd,&quot;no debug <a class="el" href="structbgp.html">bgp</a>&quot;, NO_STR DEBUG_STR BGP_STR)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a4b7222e5affedc6797983a47c66cd365">ALIAS</a> (no_debug_bgp_normal, undebug_bgp_normal_cmd,&quot;undebug <a class="el" href="structbgp.html">bgp</a>&quot;, UNDEBUG_STR BGP_STR) DEFUN(debug_bgp_zebra</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#ae12ee2ca823782d8b3ecd119184fe4e2">bgp_debug_init</a> (void)</td></tr>
<tr><td colspan="2"><h2><a name="var-members"></a>
Variables</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#abcefe0fa5fed98bbdc382027549d8bfc">conf_bgp_debug_as4</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a770281eac71ea9c3878d8d7d9332db09">conf_bgp_debug_fsm</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#aee9dca9479f574449e8296d2c123cabe">conf_bgp_debug_events</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a4d18831b12fd1b3bdbe6cf17925ec63e">conf_bgp_debug_packet</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a5c153c787e8ec7ec7dc467693e15fc57">conf_bgp_debug_filter</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a05d934f38ba61085a023655935615d8f">conf_bgp_debug_keepalive</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#aaaa6178333df4bfcc31027d84b8742ad">conf_bgp_debug_update</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a7be780bd883bb0f9b64569ab51c15a2f">conf_bgp_debug_normal</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#aef6fbd9101fbe5b4d24d97c0a69aaf62">conf_bgp_debug_zebra</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a8ec46ba4280d6580cbffb6f682a9d8fe">term_bgp_debug_as4</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#ac3e53290c7cd77c034e7567c4d45bcb2">term_bgp_debug_fsm</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a863d68a35d0a3f3a01315d47f5ade314">term_bgp_debug_events</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a8e8d6d329edb9204d53ce4cb15cd258e">term_bgp_debug_packet</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a02da3a9e078e054dbe1a1660f186ec25">term_bgp_debug_filter</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a43fefb849cadf103d01d9c9797732922">term_bgp_debug_keepalive</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#adcbb095e57771a9c92ef65691c9e4736">term_bgp_debug_update</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#abcf26a4964ebf9f35c65318137106692">term_bgp_debug_normal</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a56491200c8bff4b448e0e5b0cb8d9747">term_bgp_debug_zebra</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structmessage.html">message</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#adfa19d3216f6254be62df3c23e338ad9">bgp_status_msg</a> []</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#aff742364da11910086c4566e8e725906">bgp_status_msg_max</a> = BGP_STATUS_MAX</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#ab3ba22219d24863d590cda1738f6ec1b">bgp_type_str</a> []</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structmessage.html">message</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a19e2c720525e721e37d6907be9b06d82">bgp_notify_msg</a> []</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a355c18a43f7d5840d9240ba5ab32634c">bgp_notify_msg_max</a> = BGP_NOTIFY_MAX</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structmessage.html">message</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#ad3611fbd685248c4d2d1c1600b544cb8">bgp_notify_head_msg</a> []</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#aadadb68ba5e09115438e8a712cc29ed7">bgp_notify_head_msg_max</a> = BGP_NOTIFY_HEADER_MAX</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structmessage.html">message</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#aa5cc781f928432910abf337d9a440233">bgp_notify_open_msg</a> []</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a7b85702dae89e227ead97cc8c77b69b8">bgp_notify_open_msg_max</a> = BGP_NOTIFY_OPEN_MAX</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structmessage.html">message</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a34c90cb2707d24699fc373ea3f44ace0">bgp_notify_update_msg</a> []</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a55875d883993e2c30bd664a598fb922c">bgp_notify_update_msg_max</a> = BGP_NOTIFY_UPDATE_MAX</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structmessage.html">message</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#ae88d8ad44bfd1f998fe428e0bf8e1210">bgp_notify_cease_msg</a> []</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a1bcb36347aeace9f6f67061203806d4f">bgp_notify_cease_msg_max</a> = BGP_NOTIFY_CEASE_MAX</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static struct <a class="el" href="structmessage.html">message</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a2b66afec002c97d1eba1011b5024f6c2">bgp_notify_capability_msg</a> []</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a607fbc4e5ca88e9ede10fe2f020308b6">bgp_notify_capability_msg_max</a> = BGP_NOTIFY_CAPABILITY_MAX</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#ab1c6c37df170ace398e3657b5df5ba6f">bgp_origin_str</a> [] = {&quot;i&quot;,&quot;e&quot;,&quot;?&quot;}</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a7123f83b15faa017071a458140399e7c">bgp_origin_long_str</a> [] = {&quot;IGP&quot;,&quot;EGP&quot;,&quot;incomplete&quot;}</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#a361766b935e590f527ef2056b85c788b">bgp_debug_option</a> = 0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#ac5f1884724872ca84c29475feaf59766">debug_bgp_zebra_cmd</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">debug <a class="el" href="structbgp.html">bgp</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bgp__debug_8c.html#aacd09dfe4b60fac4ec1c5e2895066f07">zebra</a></td></tr>
</table>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ab00518af23b40d244ae8204d0e3e30b3"></a><!-- doxytag: member="bgp_debug.c::ALIAS" ref="ab00518af23b40d244ae8204d0e3e30b3" args="(no_debug_bgp_as4, undebug_bgp_as4_cmd,&quot;undebug bgp as4&quot;, UNDEBUG_STR DEBUG_STR BGP_STR&quot;BGP AS4 actions\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ALIAS </td>
          <td>(</td>
          <td class="paramtype">no_debug_bgp_as4&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">undebug_bgp_as4_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;undebug <a class="el" href="structbgp.html">bgp</a> as4&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UNDEBUG_STR DEBUG_STR BGP_STR&quot;BGP AS4 actions\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00330">330</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>)
    <a class="code" href="bgp__debug_8h.html#a06bea834e60feb9d36ade954dd239306">DEBUG_ON</a> (as4, AS4_SEGMENT);
  <span class="keywordflow">else</span>
    {
      <a class="code" href="bgp__debug_8h.html#ad0d2712d31185e54046ff6d3c7d8e2f2">TERM_DEBUG_ON</a> (as4, AS4_SEGMENT);
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;BGP as4 segment debugging is on%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    }
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3884382f05f794230ab89eef1c4f6272"></a><!-- doxytag: member="bgp_debug.c::ALIAS" ref="a3884382f05f794230ab89eef1c4f6272" args="(no_debug_bgp_as4_segment, undebug_bgp_as4_segment_cmd,&quot;undebug bgp as4 segment&quot;, UNDEBUG_STR DEBUG_STR BGP_STR&quot;BGP AS4 aspath segment handling\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ALIAS </td>
          <td>(</td>
          <td class="paramtype">no_debug_bgp_as4_segment&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">undebug_bgp_as4_segment_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;undebug <a class="el" href="structbgp.html">bgp</a> as4 segment&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UNDEBUG_STR DEBUG_STR BGP_STR&quot;BGP AS4 <a class="el" href="structaspath.html">aspath</a> segment handling\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00373">373</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>)
    <a class="code" href="bgp__debug_8h.html#a06bea834e60feb9d36ade954dd239306">DEBUG_ON</a> (fsm, <a class="code" href="bgp__fsm_8c.html#aa80c210a6930b131524d9462e32ccad4">FSM</a>);
  <span class="keywordflow">else</span>
    {
      <a class="code" href="bgp__debug_8h.html#ad0d2712d31185e54046ff6d3c7d8e2f2">TERM_DEBUG_ON</a> (fsm, <a class="code" href="bgp__fsm_8c.html#aa80c210a6930b131524d9462e32ccad4">FSM</a>);
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;BGP fsm debugging is on%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    }
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a789399cc2e35b9ed72a876a45b650f2f"></a><!-- doxytag: member="bgp_debug.c::ALIAS" ref="a789399cc2e35b9ed72a876a45b650f2f" args="(no_debug_bgp_fsm, undebug_bgp_fsm_cmd,&quot;undebug bgp fsm&quot;, UNDEBUG_STR DEBUG_STR BGP_STR&quot;Finite State Machine\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ALIAS </td>
          <td>(</td>
          <td class="paramtype">no_debug_bgp_fsm&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">undebug_bgp_fsm_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;undebug <a class="el" href="structbgp.html">bgp</a> fsm&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UNDEBUG_STR DEBUG_STR BGP_STR&quot;Finite State Machine\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00416">416</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>)
    <a class="code" href="bgp__debug_8h.html#a06bea834e60feb9d36ade954dd239306">DEBUG_ON</a> (events, EVENTS);
  <span class="keywordflow">else</span>
    {
      <a class="code" href="bgp__debug_8h.html#ad0d2712d31185e54046ff6d3c7d8e2f2">TERM_DEBUG_ON</a> (events, EVENTS);
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;BGP events debugging is on%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    }
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad1e6bc02bf6ffb0b117745e6d41635d2"></a><!-- doxytag: member="bgp_debug.c::ALIAS" ref="ad1e6bc02bf6ffb0b117745e6d41635d2" args="(no_debug_bgp_events, undebug_bgp_events_cmd,&quot;undebug bgp events&quot;, UNDEBUG_STR BGP_STR&quot;BGP events\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ALIAS </td>
          <td>(</td>
          <td class="paramtype">no_debug_bgp_events&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">undebug_bgp_events_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;undebug <a class="el" href="structbgp.html">bgp</a> events&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UNDEBUG_STR BGP_STR&quot;BGP events\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00459">459</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>)
    <a class="code" href="bgp__debug_8h.html#a06bea834e60feb9d36ade954dd239306">DEBUG_ON</a> (<a class="code" href="structfilter.html">filter</a>, FILTER);
  <span class="keywordflow">else</span>
    {
      <a class="code" href="bgp__debug_8h.html#ad0d2712d31185e54046ff6d3c7d8e2f2">TERM_DEBUG_ON</a> (<a class="code" href="structfilter.html">filter</a>, FILTER);
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;BGP filters debugging is on%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    }
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a97528d64ce9071442b1fdefedbc8d65d"></a><!-- doxytag: member="bgp_debug.c::ALIAS" ref="a97528d64ce9071442b1fdefedbc8d65d" args="(no_debug_bgp_filter, undebug_bgp_filter_cmd,&quot;undebug bgp filters&quot;, UNDEBUG_STR BGP_STR&quot;BGP filters\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ALIAS </td>
          <td>(</td>
          <td class="paramtype">no_debug_bgp_filter&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">undebug_bgp_filter_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;undebug <a class="el" href="structbgp.html">bgp</a> filters&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UNDEBUG_STR BGP_STR&quot;BGP filters\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00501">501</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>)
    <a class="code" href="bgp__debug_8h.html#a06bea834e60feb9d36ade954dd239306">DEBUG_ON</a> (keepalive, KEEPALIVE);
  <span class="keywordflow">else</span>
    {
      <a class="code" href="bgp__debug_8h.html#ad0d2712d31185e54046ff6d3c7d8e2f2">TERM_DEBUG_ON</a> (keepalive, KEEPALIVE);
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;BGP keepalives debugging is on%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    }
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a7732a3fe0a1f955496ba84d91ff1b4ab"></a><!-- doxytag: member="bgp_debug.c::ALIAS" ref="a7732a3fe0a1f955496ba84d91ff1b4ab" args="(no_debug_bgp_keepalive, undebug_bgp_keepalive_cmd,&quot;undebug bgp keepalives&quot;, UNDEBUG_STR BGP_STR&quot;BGP keepalives\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ALIAS </td>
          <td>(</td>
          <td class="paramtype">no_debug_bgp_keepalive&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">undebug_bgp_keepalive_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;undebug <a class="el" href="structbgp.html">bgp</a> keepalives&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UNDEBUG_STR BGP_STR&quot;BGP keepalives\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00543">543</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>)
    {
      <a class="code" href="bgp__debug_8h.html#a06bea834e60feb9d36ade954dd239306">DEBUG_ON</a> (update, UPDATE_IN);
      <a class="code" href="bgp__debug_8h.html#a06bea834e60feb9d36ade954dd239306">DEBUG_ON</a> (update, UPDATE_OUT);
    }
  <span class="keywordflow">else</span>
    {
      <a class="code" href="bgp__debug_8h.html#ad0d2712d31185e54046ff6d3c7d8e2f2">TERM_DEBUG_ON</a> (update, UPDATE_IN);
      <a class="code" href="bgp__debug_8h.html#ad0d2712d31185e54046ff6d3c7d8e2f2">TERM_DEBUG_ON</a> (update, UPDATE_OUT);
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;BGP updates debugging is on%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    }
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad2eae6e00c01e79521d533ab15813747"></a><!-- doxytag: member="bgp_debug.c::ALIAS" ref="ad2eae6e00c01e79521d533ab15813747" args="(no_debug_bgp_update, undebug_bgp_update_cmd,&quot;undebug bgp updates&quot;, UNDEBUG_STR BGP_STR&quot;BGP updates\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ALIAS </td>
          <td>(</td>
          <td class="paramtype">no_debug_bgp_update&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">undebug_bgp_update_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;undebug <a class="el" href="structbgp.html">bgp</a> updates&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UNDEBUG_STR BGP_STR&quot;BGP updates\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00633">633</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>)
    <a class="code" href="bgp__debug_8h.html#a06bea834e60feb9d36ade954dd239306">DEBUG_ON</a> (normal, NORMAL);
  <span class="keywordflow">else</span>
    {
      <a class="code" href="bgp__debug_8h.html#ad0d2712d31185e54046ff6d3c7d8e2f2">TERM_DEBUG_ON</a> (normal, NORMAL);
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;BGP debugging is on%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    }
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a4b7222e5affedc6797983a47c66cd365"></a><!-- doxytag: member="bgp_debug.c::ALIAS" ref="a4b7222e5affedc6797983a47c66cd365" args="(no_debug_bgp_normal, undebug_bgp_normal_cmd,&quot;undebug bgp&quot;, UNDEBUG_STR BGP_STR) DEFUN(debug_bgp_zebra" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ALIAS </td>
          <td>(</td>
          <td class="paramtype">no_debug_bgp_normal&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">undebug_bgp_normal_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;undebug <a class="el" href="structbgp.html">bgp</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">UNDEBUG_STR&#160;</td>
          <td class="paramname"><em>BGP_STR</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ae12ee2ca823782d8b3ecd119184fe4e2"></a><!-- doxytag: member="bgp_debug.c::bgp_debug_init" ref="ae12ee2ca823782d8b3ecd119184fe4e2" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bgp_debug_init </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00867">867</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <a class="code" href="command_8c.html#a7ee8a7c258e1e5a6e3ff6173dd1658e3">install_node</a> (&amp;<a class="code" href="debug_8c.html#afc175b03030abde4e5711eb89ff14067">debug_node</a>, bgp_config_write_debug);

  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;show_debugging_bgp_cmd);

  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;debug_bgp_as4_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;debug_bgp_as4_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;debug_bgp_as4_segment_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;debug_bgp_as4_segment_cmd);

  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;debug_bgp_fsm_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;debug_bgp_fsm_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;debug_bgp_events_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;debug_bgp_events_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;debug_bgp_filter_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;debug_bgp_filter_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;debug_bgp_keepalive_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;debug_bgp_keepalive_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;debug_bgp_update_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;debug_bgp_update_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;debug_bgp_update_direct_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;debug_bgp_update_direct_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;debug_bgp_normal_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;debug_bgp_normal_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;<a class="code" href="bgp__debug_8c.html#ac5f1884724872ca84c29475feaf59766">debug_bgp_zebra_cmd</a>);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;<a class="code" href="bgp__debug_8c.html#ac5f1884724872ca84c29475feaf59766">debug_bgp_zebra_cmd</a>);

  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;no_debug_bgp_as4_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;undebug_bgp_as4_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;no_debug_bgp_as4_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;no_debug_bgp_as4_segment_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;undebug_bgp_as4_segment_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;no_debug_bgp_as4_segment_cmd);

  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;no_debug_bgp_fsm_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;undebug_bgp_fsm_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;no_debug_bgp_fsm_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;no_debug_bgp_events_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;undebug_bgp_events_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;no_debug_bgp_events_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;no_debug_bgp_filter_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;undebug_bgp_filter_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;no_debug_bgp_filter_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;no_debug_bgp_keepalive_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;undebug_bgp_keepalive_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;no_debug_bgp_keepalive_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;no_debug_bgp_update_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;undebug_bgp_update_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;no_debug_bgp_update_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;no_debug_bgp_normal_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;undebug_bgp_normal_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;no_debug_bgp_normal_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;no_debug_bgp_zebra_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;undebug_bgp_zebra_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>, &amp;no_debug_bgp_zebra_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;no_debug_bgp_all_cmd);
  <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;undebug_bgp_all_cmd);
}
</pre></div>
</div>
</div>
<a class="anchor" id="a32d8ae5f48b2bf76b0a7c13182b2943f"></a><!-- doxytag: member="bgp_debug.c::bgp_dump_attr" ref="a32d8ae5f48b2bf76b0a7c13182b2943f" args="(struct peer *peer, struct attr *attr, char *buf, size_t size)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int bgp_dump_attr </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structpeer.html">peer</a> *&#160;</td>
          <td class="paramname"><em>peer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structattr.html">attr</a> *&#160;</td>
          <td class="paramname"><em>attr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00161">161</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (! attr)
    <span class="keywordflow">return</span> 0;

  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (attr-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a>, <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#a65c2bdaaa2a62a73db7f100ece5ea66f">BGP_ATTR_NEXT_HOP</a>)))
    <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a> (buf, size, <span class="stringliteral">&quot;nexthop %s&quot;</span>, inet_ntoa (attr-&gt;<a class="code" href="structattr.html#ab23f9ed5b7c55ea658ab6dc729bc9e63">nexthop</a>));

  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (attr-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a>, <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#a24a9e965d947f019719c35eb611f17dc">BGP_ATTR_ORIGIN</a>)))
    <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a> (buf + strlen (buf), size - strlen (buf), <span class="stringliteral">&quot;, origin %s&quot;</span>,
          <a class="code" href="bgp__debug_8c.html#ab1c6c37df170ace398e3657b5df5ba6f">bgp_origin_str</a>[attr-&gt;<a class="code" href="structattr.html#a17e152c15e3bd7a54475086d762e76ec">origin</a>]);

<span class="preprocessor">#ifdef HAVE_IPV6</span>
<span class="preprocessor"></span>  <span class="keywordflow">if</span> (attr-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>)
    {
      <span class="keywordtype">char</span> addrbuf[BUFSIZ];

      <span class="comment">/* Add MP case. */</span>
      <span class="keywordflow">if</span> (attr-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>-&gt;<a class="code" href="structattr__extra.html#aa9572231b6d45822cd1af557583cdba5">mp_nexthop_len</a> == 16 
          || attr-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>-&gt;<a class="code" href="structattr__extra.html#aa9572231b6d45822cd1af557583cdba5">mp_nexthop_len</a> == 32)
        <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a> (buf + strlen (buf), size - strlen (buf), <span class="stringliteral">&quot;, mp_nexthop %s&quot;</span>,
                  <a class="code" href="sockunion_8c.html#a5bfb767e8fa3f9ff5d2a1e19d71791f4">inet_ntop</a> (AF_INET6, &amp;attr-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>-&gt;mp_nexthop_global, 
                             addrbuf, BUFSIZ));

      <span class="keywordflow">if</span> (attr-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>-&gt;<a class="code" href="structattr__extra.html#aa9572231b6d45822cd1af557583cdba5">mp_nexthop_len</a> == 32)
        <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a> (buf + strlen (buf), size - strlen (buf), <span class="stringliteral">&quot;(%s)&quot;</span>,
                  <a class="code" href="sockunion_8c.html#a5bfb767e8fa3f9ff5d2a1e19d71791f4">inet_ntop</a> (AF_INET6, &amp;attr-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>-&gt;mp_nexthop_local, 
                             addrbuf, BUFSIZ));
    }
<span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>

  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (attr-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a>, <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#afb9037d30bc0d4b42c7960ffefcbd299">BGP_ATTR_LOCAL_PREF</a>)))
    <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a> (buf + strlen (buf), size - strlen (buf), <span class="stringliteral">&quot;, localpref %d&quot;</span>,
          attr-&gt;<a class="code" href="structattr.html#aa7caa960ced4e67e8aec2b0ab3d9b0b0">local_pref</a>);

  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (attr-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a>, <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#a2f0c3d68f255eba5612c46147522334e">BGP_ATTR_MULTI_EXIT_DISC</a>))) 
    <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a> (buf + strlen (buf), size - strlen (buf), <span class="stringliteral">&quot;, metric %d&quot;</span>,
          attr-&gt;<a class="code" href="structattr.html#a2dc4bc77a20816cd457a2040b05e316f">med</a>);

  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (attr-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a>, <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#aae424d4be52b9b65e6d1cb41c1145a4d">BGP_ATTR_COMMUNITIES</a>))) 
    <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a> (buf + strlen (buf), size - strlen (buf), <span class="stringliteral">&quot;, community %s&quot;</span>,
          <a class="code" href="bgp__community_8c.html#a46ddc4b676977762237ba3c27f9ff98e">community_str</a> (attr-&gt;<a class="code" href="structattr.html#ac892e1f95a0c26d39a47eb12d021072b">community</a>));

  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (attr-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a>, <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#ac9dd85ed3793e51210453da60a8734b9">BGP_ATTR_ATOMIC_AGGREGATE</a>)))
    <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a> (buf + strlen (buf), size - strlen (buf), <span class="stringliteral">&quot;, atomic-aggregate&quot;</span>);

  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (attr-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a>, <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#ae1607a30c55c82c55f3b12fdcdf1dc8c">BGP_ATTR_AGGREGATOR</a>)))
    <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a> (buf + strlen (buf), size - strlen (buf), <span class="stringliteral">&quot;, aggregated by %u %s&quot;</span>,
          attr-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>-&gt;<a class="code" href="structattr__extra.html#af91c71fee1beb30ae9f0d878f508bfbc">aggregator_as</a>,
          inet_ntoa (attr-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>-&gt;<a class="code" href="structattr__extra.html#a14c33c8295683eff20b2964e4b321622">aggregator_addr</a>));

  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (attr-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a>, <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#a4c57fcfdf8e83e8d6dce5369a9697244">BGP_ATTR_ORIGINATOR_ID</a>)))
    <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a> (buf + strlen (buf), size - strlen (buf), <span class="stringliteral">&quot;, originator %s&quot;</span>,
          inet_ntoa (attr-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>-&gt;<a class="code" href="structattr__extra.html#a2a675121474a39bf5d9f95393b00e156">originator_id</a>));

  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (attr-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a>, <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#a5dfaaa2abcc46f34a50dd1f192b1e28c">BGP_ATTR_CLUSTER_LIST</a>)))
    {
      <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;

      <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a> (buf + strlen (buf), size - strlen (buf), <span class="stringliteral">&quot;, clusterlist&quot;</span>);
      <span class="keywordflow">for</span> (i = 0; i &lt; attr-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>-&gt;<a class="code" href="structattr__extra.html#af291cf1efc95b5ed084669b9049db919">cluster</a>-&gt;<a class="code" href="structcluster__list.html#af8a1b7c942261289059011265e51db9e">length</a> / 4; i++)
    <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a> (buf + strlen (buf), size - strlen (buf), <span class="stringliteral">&quot; %s&quot;</span>,
          inet_ntoa (attr-&gt;<a class="code" href="structattr.html#a948ca8050af06bf4fda46519eb8ec179">extra</a>-&gt;<a class="code" href="structattr__extra.html#af291cf1efc95b5ed084669b9049db919">cluster</a>-&gt;<a class="code" href="structcluster__list.html#aea3d9cdf705c7c59919b77468710f359">list</a>[i]));
    }

  <span class="keywordflow">if</span> (<a class="code" href="zebra_8h.html#a9310812ac92febfb7d1eb10127aea1a8">CHECK_FLAG</a> (attr-&gt;<a class="code" href="structattr.html#aebb9bdb23b6f00d44b865ce30fac0713">flag</a>, <a class="code" href="bgp__attr_8h.html#a708b3fe5f6403a639f57da84ea7b638a">ATTR_FLAG_BIT</a> (<a class="code" href="bgpd_8h.html#aa68a316d94242e23c6b5e0c7eb0b6805">BGP_ATTR_AS_PATH</a>))) 
    <a class="code" href="str_8c.html#ad76145a6edfc98981ded8815a760e0cd">snprintf</a> (buf + strlen (buf), size - strlen (buf), <span class="stringliteral">&quot;, path %s&quot;</span>,
          <a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (attr-&gt;<a class="code" href="structattr.html#a89311608450bb3b97bccc835e9b004f0">aspath</a>));

  <span class="keywordflow">if</span> (strlen (buf) &gt; 1)
    <span class="keywordflow">return</span> 1;
  <span class="keywordflow">else</span>
    <span class="keywordflow">return</span> 0;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a9f3092319ccb5c7d6f684dd7fda40c74"></a><!-- doxytag: member="bgp_debug.c::bgp_notify_print" ref="a9f3092319ccb5c7d6f684dd7fda40c74" args="(struct peer *peer, struct bgp_notify *bgp_notify, const char *direct)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bgp_notify_print </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structpeer.html">peer</a> *&#160;</td>
          <td class="paramname"><em>peer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structbgp__notify.html">bgp_notify</a> *&#160;</td>
          <td class="paramname"><em>bgp_notify</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>direct</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00238">238</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keyword">const</span> <span class="keywordtype">char</span> *subcode_str;

  subcode_str = <span class="stringliteral">&quot;&quot;</span>;

  <span class="keywordflow">switch</span> (bgp_notify-&gt;<a class="code" href="structbgp__notify.html#ad627202af54280e7417636695f2e38b5">code</a>) 
    {
    <span class="keywordflow">case</span> <a class="code" href="bgpd_8h.html#a8a435e0e2033f183fcd82cfe4ed59443">BGP_NOTIFY_HEADER_ERR</a>:
      subcode_str = <a class="code" href="log_8h.html#a3a4b1cad85aa6752f39580944e24a868">LOOKUP</a> (<a class="code" href="bgp__debug_8c.html#ad3611fbd685248c4d2d1c1600b544cb8">bgp_notify_head_msg</a>, bgp_notify-&gt;<a class="code" href="structbgp__notify.html#acbad94da20e4f492c1115dfc9181f463">subcode</a>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="bgpd_8h.html#abf82315c6bbb82ef5704c94a34cd038f">BGP_NOTIFY_OPEN_ERR</a>:
      subcode_str = <a class="code" href="log_8h.html#a3a4b1cad85aa6752f39580944e24a868">LOOKUP</a> (<a class="code" href="bgp__debug_8c.html#aa5cc781f928432910abf337d9a440233">bgp_notify_open_msg</a>, bgp_notify-&gt;<a class="code" href="structbgp__notify.html#acbad94da20e4f492c1115dfc9181f463">subcode</a>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="bgpd_8h.html#aa66406351b4bf5ff750eda7a70dfdfcb">BGP_NOTIFY_UPDATE_ERR</a>:
      subcode_str = <a class="code" href="log_8h.html#a3a4b1cad85aa6752f39580944e24a868">LOOKUP</a> (<a class="code" href="bgp__debug_8c.html#a34c90cb2707d24699fc373ea3f44ace0">bgp_notify_update_msg</a>, bgp_notify-&gt;<a class="code" href="structbgp__notify.html#acbad94da20e4f492c1115dfc9181f463">subcode</a>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="bgpd_8h.html#a195f8a19dfb2df7c88fdefd97db486cc">BGP_NOTIFY_HOLD_ERR</a>:
      subcode_str = <span class="stringliteral">&quot;&quot;</span>;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="bgpd_8h.html#af56552e5c55a4c8733dfee55beddb2f8">BGP_NOTIFY_FSM_ERR</a>:
      subcode_str = <span class="stringliteral">&quot;&quot;</span>;
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="bgpd_8h.html#a3c020cba1f9b12568599a3eb7c979b09">BGP_NOTIFY_CEASE</a>:
      subcode_str = <a class="code" href="log_8h.html#a3a4b1cad85aa6752f39580944e24a868">LOOKUP</a> (<a class="code" href="bgp__debug_8c.html#ae88d8ad44bfd1f998fe428e0bf8e1210">bgp_notify_cease_msg</a>, bgp_notify-&gt;<a class="code" href="structbgp__notify.html#acbad94da20e4f492c1115dfc9181f463">subcode</a>);
      <span class="keywordflow">break</span>;
    <span class="keywordflow">case</span> <a class="code" href="bgpd_8h.html#a4aea308e965d3559da1e59eb459b232a">BGP_NOTIFY_CAPABILITY_ERR</a>:
      subcode_str = <a class="code" href="log_8h.html#a3a4b1cad85aa6752f39580944e24a868">LOOKUP</a> (<a class="code" href="bgp__debug_8c.html#a2b66afec002c97d1eba1011b5024f6c2">bgp_notify_capability_msg</a>, bgp_notify-&gt;<a class="code" href="structbgp__notify.html#acbad94da20e4f492c1115dfc9181f463">subcode</a>);
      <span class="keywordflow">break</span>;
    }

  <span class="keywordflow">if</span> (<a class="code" href="bgpd_8c.html#a0b3388d8ac73af2d4f4f22e46746da1e">bgp_flag_check</a> (peer-&gt;<a class="code" href="structpeer.html#aaff7e2f66146a076913d2fe3217edf2c">bgp</a>, <a class="code" href="bgpd_8h.html#a4871d191e1b11258fc7d58365a8de88b">BGP_FLAG_LOG_NEIGHBOR_CHANGES</a>))
    <a class="code" href="log_8h.html#a383184727341e7ad985deb9e4f2156c7">zlog_info</a> (<span class="stringliteral">&quot;%%NOTIFICATION: %s neighbor %s %d/%d (%s%s) %d bytes %s&quot;</span>,
              strcmp (direct, <span class="stringliteral">&quot;received&quot;</span>) == 0 ? <span class="stringliteral">&quot;received from&quot;</span> : <span class="stringliteral">&quot;sent to&quot;</span>,
              peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a>, bgp_notify-&gt;<a class="code" href="structbgp__notify.html#ad627202af54280e7417636695f2e38b5">code</a>, bgp_notify-&gt;<a class="code" href="structbgp__notify.html#acbad94da20e4f492c1115dfc9181f463">subcode</a>,
               <a class="code" href="log_8h.html#a3a4b1cad85aa6752f39580944e24a868">LOOKUP</a> (<a class="code" href="bgp__debug_8c.html#a19e2c720525e721e37d6907be9b06d82">bgp_notify_msg</a>, bgp_notify-&gt;<a class="code" href="structbgp__notify.html#ad627202af54280e7417636695f2e38b5">code</a>),
              subcode_str, bgp_notify-&gt;<a class="code" href="structbgp__notify.html#a7697d00382add47039a53555c54b3835">length</a>,
              bgp_notify-&gt;<a class="code" href="structbgp__notify.html#aae5f1fab36e60b67e64aeea7146d2364">data</a> ? bgp_notify-&gt;<a class="code" href="structbgp__notify.html#aae5f1fab36e60b67e64aeea7146d2364">data</a> : <span class="stringliteral">&quot;&quot;</span>);
  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="bgp__debug_8h.html#a3652951eb4451c498ae4be9890d4b7a4">BGP_DEBUG</a> (normal, NORMAL))
    <a class="code" href="log_8h.html#a901efa2487b25c3a74846a52de919565">plog_debug</a> (peer-&gt;<a class="code" href="structpeer.html#a8042cd53718885196f47ee66b471ec3d">log</a>, <span class="stringliteral">&quot;%s %s NOTIFICATION %d/%d (%s%s) %d bytes %s&quot;</span>,
           peer ? peer-&gt;<a class="code" href="structpeer.html#ac3e4ca25642ebcc52b2d4b2143fa74fa">host</a> : <span class="stringliteral">&quot;&quot;</span>,
           direct, bgp_notify-&gt;<a class="code" href="structbgp__notify.html#ad627202af54280e7417636695f2e38b5">code</a>, bgp_notify-&gt;<a class="code" href="structbgp__notify.html#acbad94da20e4f492c1115dfc9181f463">subcode</a>,
           <a class="code" href="log_8h.html#a3a4b1cad85aa6752f39580944e24a868">LOOKUP</a> (<a class="code" href="bgp__debug_8c.html#a19e2c720525e721e37d6907be9b06d82">bgp_notify_msg</a>, bgp_notify-&gt;<a class="code" href="structbgp__notify.html#ad627202af54280e7417636695f2e38b5">code</a>),
           subcode_str, bgp_notify-&gt;<a class="code" href="structbgp__notify.html#a7697d00382add47039a53555c54b3835">length</a>,
           bgp_notify-&gt;<a class="code" href="structbgp__notify.html#aae5f1fab36e60b67e64aeea7146d2364">data</a> ? bgp_notify-&gt;<a class="code" href="structbgp__notify.html#aae5f1fab36e60b67e64aeea7146d2364">data</a> : <span class="stringliteral">&quot;&quot;</span>);
}
</pre></div>
</div>
</div>
<a class="anchor" id="abc1624539747635021518178e4df5a69"></a><!-- doxytag: member="bgp_debug.c::debug" ref="abc1624539747635021518178e4df5a69" args="(unsigned int option)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int debug </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>option</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00290">290</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">return</span> <a class="code" href="bgp__debug_8c.html#a361766b935e590f527ef2056b85c788b">bgp_debug_option</a> &amp; <a class="code" href="structoption.html">option</a>; 
}
</pre></div>
</div>
</div>
<a class="anchor" id="a3ae0723cade54f2d5167ad6fb5524969"></a><!-- doxytag: member="bgp_debug.c::DEFUN" ref="a3ae0723cade54f2d5167ad6fb5524969" args="(debug_bgp_as4, debug_bgp_as4_cmd,&quot;debug bgp as4&quot;, DEBUG_STR BGP_STR&quot;BGP AS4 actions\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">debug_bgp_as4&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">debug_bgp_as4_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;debug <a class="el" href="structbgp.html">bgp</a> as4&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DEBUG_STR BGP_STR&quot;BGP AS4 actions\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00295">295</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>)
    <a class="code" href="bgp__debug_8h.html#a06bea834e60feb9d36ade954dd239306">DEBUG_ON</a> (as4, AS4);
  <span class="keywordflow">else</span>
    {
      <a class="code" href="bgp__debug_8h.html#ad0d2712d31185e54046ff6d3c7d8e2f2">TERM_DEBUG_ON</a> (as4, AS4);
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;BGP as4 debugging is on%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    }
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a207d651d49085d9c3a1423e595ce7867"></a><!-- doxytag: member="bgp_debug.c::DEFUN" ref="a207d651d49085d9c3a1423e595ce7867" args="(no_debug_bgp_as4, no_debug_bgp_as4_cmd,&quot;no debug bgp as4&quot;, NO_STR DEBUG_STR BGP_STR&quot;BGP AS4 actions\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_debug_bgp_as4&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_debug_bgp_as4_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no debug <a class="el" href="structbgp.html">bgp</a> as4&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR DEBUG_STR BGP_STR&quot;BGP AS4 actions\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00312">312</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>)
    <a class="code" href="bgp__debug_8h.html#a20d5e37ef8118f66255a2491fcb43efe">DEBUG_OFF</a> (as4, AS4);
  <span class="keywordflow">else</span>
    {
      <a class="code" href="bgp__debug_8h.html#ab4b83287ab9aca28d7e7fe463f7763ac">TERM_DEBUG_OFF</a> (as4, AS4);
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;BGP as4 debugging is off%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    }
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af176f2162caa6957a9ca09af08276cbe"></a><!-- doxytag: member="bgp_debug.c::DEFUN" ref="af176f2162caa6957a9ca09af08276cbe" args="(no_debug_bgp_as4_segment, no_debug_bgp_as4_segment_cmd,&quot;no debug bgp as4 segment&quot;, NO_STR DEBUG_STR BGP_STR&quot;BGP AS4 aspath segment handling\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_debug_bgp_as4_segment&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_debug_bgp_as4_segment_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no debug <a class="el" href="structbgp.html">bgp</a> as4 segment&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR DEBUG_STR BGP_STR&quot;BGP AS4 <a class="el" href="structaspath.html">aspath</a> segment handling\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00355">355</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>)
    <a class="code" href="bgp__debug_8h.html#a20d5e37ef8118f66255a2491fcb43efe">DEBUG_OFF</a> (as4, AS4_SEGMENT);
  <span class="keywordflow">else</span>
    {
      <a class="code" href="bgp__debug_8h.html#ab4b83287ab9aca28d7e7fe463f7763ac">TERM_DEBUG_OFF</a> (as4, AS4_SEGMENT);
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;BGP as4 segment debugging is off%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    }
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af03cac5bec1f007efe35e672d2544c5c"></a><!-- doxytag: member="bgp_debug.c::DEFUN" ref="af03cac5bec1f007efe35e672d2544c5c" args="(no_debug_bgp_fsm, no_debug_bgp_fsm_cmd,&quot;no debug bgp fsm&quot;, NO_STR DEBUG_STR BGP_STR&quot;Finite State Machine\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_debug_bgp_fsm&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_debug_bgp_fsm_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no debug <a class="el" href="structbgp.html">bgp</a> fsm&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR DEBUG_STR BGP_STR&quot;Finite State Machine\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00398">398</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>)
    <a class="code" href="bgp__debug_8h.html#a20d5e37ef8118f66255a2491fcb43efe">DEBUG_OFF</a> (fsm, <a class="code" href="bgp__fsm_8c.html#aa80c210a6930b131524d9462e32ccad4">FSM</a>);
  <span class="keywordflow">else</span>
    {
      <a class="code" href="bgp__debug_8h.html#ab4b83287ab9aca28d7e7fe463f7763ac">TERM_DEBUG_OFF</a> (fsm, <a class="code" href="bgp__fsm_8c.html#aa80c210a6930b131524d9462e32ccad4">FSM</a>);
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;BGP fsm debugging is off%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    }
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="af913cabcd796ec544dbc13b263a3551e"></a><!-- doxytag: member="bgp_debug.c::DEFUN" ref="af913cabcd796ec544dbc13b263a3551e" args="(no_debug_bgp_events, no_debug_bgp_events_cmd,&quot;no debug bgp events&quot;, NO_STR DEBUG_STR BGP_STR&quot;BGP events\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_debug_bgp_events&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_debug_bgp_events_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no debug <a class="el" href="structbgp.html">bgp</a> events&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR DEBUG_STR BGP_STR&quot;BGP events\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00441">441</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>)
    <a class="code" href="bgp__debug_8h.html#a20d5e37ef8118f66255a2491fcb43efe">DEBUG_OFF</a> (events, EVENTS);
  <span class="keywordflow">else</span>
    {
      <a class="code" href="bgp__debug_8h.html#ab4b83287ab9aca28d7e7fe463f7763ac">TERM_DEBUG_OFF</a> (events, EVENTS);
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;BGP events debugging is off%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    }
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a667664ce640eab10cc6bc37ea1556318"></a><!-- doxytag: member="bgp_debug.c::DEFUN" ref="a667664ce640eab10cc6bc37ea1556318" args="(no_debug_bgp_filter, no_debug_bgp_filter_cmd,&quot;no debug bgp filters&quot;, NO_STR DEBUG_STR BGP_STR&quot;BGP filters\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_debug_bgp_filter&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_debug_bgp_filter_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no debug <a class="el" href="structbgp.html">bgp</a> filters&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR DEBUG_STR BGP_STR&quot;BGP filters\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00483">483</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>)
    <a class="code" href="bgp__debug_8h.html#a20d5e37ef8118f66255a2491fcb43efe">DEBUG_OFF</a> (<a class="code" href="structfilter.html">filter</a>, FILTER);
  <span class="keywordflow">else</span>
    {
      <a class="code" href="bgp__debug_8h.html#ab4b83287ab9aca28d7e7fe463f7763ac">TERM_DEBUG_OFF</a> (<a class="code" href="structfilter.html">filter</a>, FILTER);
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;BGP filters debugging is off%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    }
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a17b4d2c62fe23972732e1a84c4288d02"></a><!-- doxytag: member="bgp_debug.c::DEFUN" ref="a17b4d2c62fe23972732e1a84c4288d02" args="(no_debug_bgp_keepalive, no_debug_bgp_keepalive_cmd,&quot;no debug bgp keepalives&quot;, NO_STR DEBUG_STR BGP_STR&quot;BGP keepalives\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_debug_bgp_keepalive&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_debug_bgp_keepalive_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no debug <a class="el" href="structbgp.html">bgp</a> keepalives&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR DEBUG_STR BGP_STR&quot;BGP keepalives\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00525">525</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>)
    <a class="code" href="bgp__debug_8h.html#a20d5e37ef8118f66255a2491fcb43efe">DEBUG_OFF</a> (keepalive, KEEPALIVE);
  <span class="keywordflow">else</span>
    {
      <a class="code" href="bgp__debug_8h.html#ab4b83287ab9aca28d7e7fe463f7763ac">TERM_DEBUG_OFF</a> (keepalive, KEEPALIVE);
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;BGP keepalives debugging is off%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    }
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a348f8393eff9f8e74e2e3bb17e02b6c7"></a><!-- doxytag: member="bgp_debug.c::DEFUN" ref="a348f8393eff9f8e74e2e3bb17e02b6c7" args="(debug_bgp_update_direct, debug_bgp_update_direct_cmd,&quot;debug bgp updates (in|out)&quot;, DEBUG_STR BGP_STR&quot;BGP updates\n&quot;&quot;Inbound updates\n&quot;&quot;Outbound updates\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">debug_bgp_update_direct&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">debug_bgp_update_direct_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;debug <a class="el" href="structbgp.html">bgp</a> updates (<a class="el" href="spgrid_8c.html#a89e1c555af4b92f6ee8d6f112f47ed12">in</a>|out)&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DEBUG_STR BGP_STR&quot;BGP updates\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Inbound updates\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&quot;Outbound updates\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00571">571</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>)
    {
      <span class="keywordflow">if</span> (strncmp (<span class="stringliteral">&quot;i&quot;</span>, argv[0], 1) == 0)
    {
      <a class="code" href="bgp__debug_8h.html#a20d5e37ef8118f66255a2491fcb43efe">DEBUG_OFF</a> (update, UPDATE_OUT);
      <a class="code" href="bgp__debug_8h.html#a06bea834e60feb9d36ade954dd239306">DEBUG_ON</a> (update, UPDATE_IN);
    }
      <span class="keywordflow">else</span>
    {   
      <a class="code" href="bgp__debug_8h.html#a20d5e37ef8118f66255a2491fcb43efe">DEBUG_OFF</a> (update, UPDATE_IN);
      <a class="code" href="bgp__debug_8h.html#a06bea834e60feb9d36ade954dd239306">DEBUG_ON</a> (update, UPDATE_OUT);
    }
    }
  <span class="keywordflow">else</span>
    {
      <span class="keywordflow">if</span> (strncmp (<span class="stringliteral">&quot;i&quot;</span>, argv[0], 1) == 0)
    {
      <a class="code" href="bgp__debug_8h.html#ab4b83287ab9aca28d7e7fe463f7763ac">TERM_DEBUG_OFF</a> (update, UPDATE_OUT);
      <a class="code" href="bgp__debug_8h.html#ad0d2712d31185e54046ff6d3c7d8e2f2">TERM_DEBUG_ON</a> (update, UPDATE_IN);
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;BGP updates debugging is on (inbound)%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    }
      <span class="keywordflow">else</span>
    {
      <a class="code" href="bgp__debug_8h.html#ab4b83287ab9aca28d7e7fe463f7763ac">TERM_DEBUG_OFF</a> (update, UPDATE_IN);
      <a class="code" href="bgp__debug_8h.html#ad0d2712d31185e54046ff6d3c7d8e2f2">TERM_DEBUG_ON</a> (update, UPDATE_OUT);
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;BGP updates debugging is on (outbound)%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    }
    }
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="ad15bee336d5523e8186a34f18d90ec39"></a><!-- doxytag: member="bgp_debug.c::DEFUN" ref="ad15bee336d5523e8186a34f18d90ec39" args="(no_debug_bgp_update, no_debug_bgp_update_cmd,&quot;no debug bgp updates&quot;, NO_STR DEBUG_STR BGP_STR&quot;BGP updates\n&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_debug_bgp_update&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_debug_bgp_update_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no debug <a class="el" href="structbgp.html">bgp</a> updates&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR DEBUG_STR BGP_STR&quot;BGP updates\<a class="el" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00611">611</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>)
    {
      <a class="code" href="bgp__debug_8h.html#a20d5e37ef8118f66255a2491fcb43efe">DEBUG_OFF</a> (update, UPDATE_IN);
      <a class="code" href="bgp__debug_8h.html#a20d5e37ef8118f66255a2491fcb43efe">DEBUG_OFF</a> (update, UPDATE_OUT);
    }
  <span class="keywordflow">else</span>
    {
      <a class="code" href="bgp__debug_8h.html#ab4b83287ab9aca28d7e7fe463f7763ac">TERM_DEBUG_OFF</a> (update, UPDATE_IN);
      <a class="code" href="bgp__debug_8h.html#ab4b83287ab9aca28d7e7fe463f7763ac">TERM_DEBUG_OFF</a> (update, UPDATE_OUT);
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;BGP updates debugging is off%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    }
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<a class="anchor" id="a2d956d2bc4bb81d1d8bd41156bb4a99d"></a><!-- doxytag: member="bgp_debug.c::DEFUN" ref="a2d956d2bc4bb81d1d8bd41156bb4a99d" args="(no_debug_bgp_normal, no_debug_bgp_normal_cmd,&quot;no debug bgp&quot;, NO_STR DEBUG_STR BGP_STR)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFUN </td>
          <td>(</td>
          <td class="paramtype">no_debug_bgp_normal&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">no_debug_bgp_normal_cmd&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;no debug <a class="el" href="structbgp.html">bgp</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">NO_STR DEBUG_STR&#160;</td>
          <td class="paramname"><em>BGP_STR</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00656">656</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>
<div class="fragment"><pre class="fragment">{
  <span class="keywordflow">if</span> (<a class="code" href="structvty.html">vty</a>-&gt;<a class="code" href="structvty.html#a9ac72abb8e0411b52a9d91d1a11aeaff">node</a> == <a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a50754044f565f7421a152eaa411eebcc">CONFIG_NODE</a>)
    <a class="code" href="bgp__debug_8h.html#a20d5e37ef8118f66255a2491fcb43efe">DEBUG_OFF</a> (normal, NORMAL);
  <span class="keywordflow">else</span>
    {
      <a class="code" href="bgp__debug_8h.html#ab4b83287ab9aca28d7e7fe463f7763ac">TERM_DEBUG_OFF</a> (normal, NORMAL);
      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;BGP debugging is off%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
    }
  <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
}
</pre></div>
</div>
</div>
<hr/><h2>Variable Documentation</h2>
<a class="anchor" id="a361766b935e590f527ef2056b85c788b"></a><!-- doxytag: member="bgp_debug.c::bgp_debug_option" ref="a361766b935e590f527ef2056b85c788b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="bgp__debug_8c.html#a361766b935e590f527ef2056b85c788b">bgp_debug_option</a> = 0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00287">287</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="a2b66afec002c97d1eba1011b5024f6c2"></a><!-- doxytag: member="bgp_debug.c::bgp_notify_capability_msg" ref="a2b66afec002c97d1eba1011b5024f6c2" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structmessage.html">message</a> <a class="el" href="bgp__debug_8c.html#a2b66afec002c97d1eba1011b5024f6c2">bgp_notify_capability_msg</a>[]<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment"> 
{
  { <a class="code" href="bgpd_8h.html#ac547db2cbd30bb622785c7f6f43771e5">BGP_NOTIFY_CAPABILITY_INVALID_ACTION</a>, <span class="stringliteral">&quot;/Invalid Action Value&quot;</span> },
  { <a class="code" href="bgpd_8h.html#a1432c94df52de091e16e61653a1cf9b3">BGP_NOTIFY_CAPABILITY_INVALID_LENGTH</a>, <span class="stringliteral">&quot;/Invalid Capability Length&quot;</span>},
  { <a class="code" href="bgpd_8h.html#a164496052662057c3190fd39d422a34b">BGP_NOTIFY_CAPABILITY_MALFORMED_CODE</a>, <span class="stringliteral">&quot;/Malformed Capability Value&quot;</span>},
}
</pre></div>
<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00147">147</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="a607fbc4e5ca88e9ede10fe2f020308b6"></a><!-- doxytag: member="bgp_debug.c::bgp_notify_capability_msg_max" ref="a607fbc4e5ca88e9ede10fe2f020308b6" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const int <a class="el" href="bgp__debug_8c.html#a607fbc4e5ca88e9ede10fe2f020308b6">bgp_notify_capability_msg_max</a> = BGP_NOTIFY_CAPABILITY_MAX<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00153">153</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="ae88d8ad44bfd1f998fe428e0bf8e1210"></a><!-- doxytag: member="bgp_debug.c::bgp_notify_cease_msg" ref="ae88d8ad44bfd1f998fe428e0bf8e1210" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structmessage.html">message</a> <a class="el" href="bgp__debug_8c.html#ae88d8ad44bfd1f998fe428e0bf8e1210">bgp_notify_cease_msg</a>[]<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment">
{
  { <a class="code" href="bgpd_8h.html#abcf95c6082bef31695fe404a22ff070c">BGP_NOTIFY_CEASE_MAX_PREFIX</a>, <span class="stringliteral">&quot;/Maximum Number of Prefixes Reached&quot;</span>},
  { <a class="code" href="bgpd_8h.html#af9421e5cbfffb8ca7839d448d1b816b0">BGP_NOTIFY_CEASE_ADMIN_SHUTDOWN</a>, <span class="stringliteral">&quot;/Administratively Shutdown&quot;</span>},
  { <a class="code" href="bgpd_8h.html#a267560bcf2267908e5d51d22d6bac5b3">BGP_NOTIFY_CEASE_PEER_UNCONFIG</a>, <span class="stringliteral">&quot;/Peer Unconfigured&quot;</span>},
  { <a class="code" href="bgpd_8h.html#ae1672a288d642f221bb61ab2cb63e354">BGP_NOTIFY_CEASE_ADMIN_RESET</a>, <span class="stringliteral">&quot;/Administratively Reset&quot;</span>},
  { <a class="code" href="bgpd_8h.html#aca678413e6c438a242f9be167636c2eb">BGP_NOTIFY_CEASE_CONNECT_REJECT</a>, <span class="stringliteral">&quot;/Connection Rejected&quot;</span>},
  { <a class="code" href="bgpd_8h.html#a4e29bf8da662691601bc94e5b9594633">BGP_NOTIFY_CEASE_CONFIG_CHANGE</a>, <span class="stringliteral">&quot;/Other Configuration Change&quot;</span>},
  { <a class="code" href="bgpd_8h.html#a1a56da3ecfc587ca3c5ccc7ce1afc88d">BGP_NOTIFY_CEASE_COLLISION_RESOLUTION</a>, <span class="stringliteral">&quot;/Connection collision resolution&quot;</span>},
  { <a class="code" href="bgpd_8h.html#ab91d5ef6210b9601134293dcfcb2b78e">BGP_NOTIFY_CEASE_OUT_OF_RESOURCE</a>, <span class="stringliteral">&quot;/Out of Resource&quot;</span>},
}
</pre></div>
<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00134">134</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="a1bcb36347aeace9f6f67061203806d4f"></a><!-- doxytag: member="bgp_debug.c::bgp_notify_cease_msg_max" ref="a1bcb36347aeace9f6f67061203806d4f" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const int <a class="el" href="bgp__debug_8c.html#a1bcb36347aeace9f6f67061203806d4f">bgp_notify_cease_msg_max</a> = BGP_NOTIFY_CEASE_MAX<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00145">145</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="ad3611fbd685248c4d2d1c1600b544cb8"></a><!-- doxytag: member="bgp_debug.c::bgp_notify_head_msg" ref="ad3611fbd685248c4d2d1c1600b544cb8" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structmessage.html">message</a> <a class="el" href="bgp__debug_8c.html#ad3611fbd685248c4d2d1c1600b544cb8">bgp_notify_head_msg</a>[]<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment"> 
{
  { <a class="code" href="bgpd_8h.html#a25225385b28d64a38e2ae07eceb4bf0d">BGP_NOTIFY_HEADER_NOT_SYNC</a>, <span class="stringliteral">&quot;/Connection Not Synchronized&quot;</span>},
  { <a class="code" href="bgpd_8h.html#af913f37e5cd1375f2f3948a2946de262">BGP_NOTIFY_HEADER_BAD_MESLEN</a>, <span class="stringliteral">&quot;/Bad Message Length&quot;</span>},
  { <a class="code" href="bgpd_8h.html#a61d92861d20bda6984fa61f01a59fb16">BGP_NOTIFY_HEADER_BAD_MESTYPE</a>, <span class="stringliteral">&quot;/Bad Message Type&quot;</span>}
}
</pre></div>
<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00098">98</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="aadadb68ba5e09115438e8a712cc29ed7"></a><!-- doxytag: member="bgp_debug.c::bgp_notify_head_msg_max" ref="aadadb68ba5e09115438e8a712cc29ed7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const int <a class="el" href="bgp__debug_8c.html#aadadb68ba5e09115438e8a712cc29ed7">bgp_notify_head_msg_max</a> = BGP_NOTIFY_HEADER_MAX<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00104">104</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="a19e2c720525e721e37d6907be9b06d82"></a><!-- doxytag: member="bgp_debug.c::bgp_notify_msg" ref="a19e2c720525e721e37d6907be9b06d82" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structmessage.html">message</a> <a class="el" href="bgp__debug_8c.html#a19e2c720525e721e37d6907be9b06d82">bgp_notify_msg</a>[]<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment"> 
{
  { <a class="code" href="bgpd_8h.html#a8a435e0e2033f183fcd82cfe4ed59443">BGP_NOTIFY_HEADER_ERR</a>, <span class="stringliteral">&quot;Message Header Error&quot;</span>},
  { <a class="code" href="bgpd_8h.html#abf82315c6bbb82ef5704c94a34cd038f">BGP_NOTIFY_OPEN_ERR</a>, <span class="stringliteral">&quot;OPEN Message Error&quot;</span>},
  { <a class="code" href="bgpd_8h.html#aa66406351b4bf5ff750eda7a70dfdfcb">BGP_NOTIFY_UPDATE_ERR</a>, <span class="stringliteral">&quot;UPDATE Message Error&quot;</span>},
  { <a class="code" href="bgpd_8h.html#a195f8a19dfb2df7c88fdefd97db486cc">BGP_NOTIFY_HOLD_ERR</a>, <span class="stringliteral">&quot;Hold Timer Expired&quot;</span>},
  { <a class="code" href="bgpd_8h.html#af56552e5c55a4c8733dfee55beddb2f8">BGP_NOTIFY_FSM_ERR</a>, <span class="stringliteral">&quot;Finite State Machine Error&quot;</span>},
  { <a class="code" href="bgpd_8h.html#a3c020cba1f9b12568599a3eb7c979b09">BGP_NOTIFY_CEASE</a>, <span class="stringliteral">&quot;Cease&quot;</span>},
  { <a class="code" href="bgpd_8h.html#a4aea308e965d3559da1e59eb459b232a">BGP_NOTIFY_CAPABILITY_ERR</a>, <span class="stringliteral">&quot;CAPABILITY Message Error&quot;</span>},
}
</pre></div>
<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00086">86</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="a355c18a43f7d5840d9240ba5ab32634c"></a><!-- doxytag: member="bgp_debug.c::bgp_notify_msg_max" ref="a355c18a43f7d5840d9240ba5ab32634c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const int <a class="el" href="bgp__debug_8c.html#a355c18a43f7d5840d9240ba5ab32634c">bgp_notify_msg_max</a> = BGP_NOTIFY_MAX<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00096">96</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="aa5cc781f928432910abf337d9a440233"></a><!-- doxytag: member="bgp_debug.c::bgp_notify_open_msg" ref="aa5cc781f928432910abf337d9a440233" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structmessage.html">message</a> <a class="el" href="bgp__debug_8c.html#aa5cc781f928432910abf337d9a440233">bgp_notify_open_msg</a>[]<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment"> 
{
  { <a class="code" href="bgpd_8h.html#ab7bf59c5dba1fe9d921cefa56b91688b">BGP_NOTIFY_OPEN_UNSUP_VERSION</a>, <span class="stringliteral">&quot;/Unsupported Version Number&quot;</span> },
  { <a class="code" href="bgpd_8h.html#a40bb6566865df4b899e2f4f271bb40f5">BGP_NOTIFY_OPEN_BAD_PEER_AS</a>, <span class="stringliteral">&quot;/Bad Peer AS&quot;</span>},
  { <a class="code" href="bgpd_8h.html#a523800f0ae18023edb46e21359fb2904">BGP_NOTIFY_OPEN_BAD_BGP_IDENT</a>, <span class="stringliteral">&quot;/Bad BGP Identifier&quot;</span>},
  { <a class="code" href="bgpd_8h.html#a2fddbc10056aaf1a667e79c2bdbeff15">BGP_NOTIFY_OPEN_UNSUP_PARAM</a>, <span class="stringliteral">&quot;/Unsupported Optional Parameter&quot;</span>},
  { <a class="code" href="bgpd_8h.html#a84cdcaced0ddcd9c02d2bcb33be39a11">BGP_NOTIFY_OPEN_AUTH_FAILURE</a>, <span class="stringliteral">&quot;/Authentication Failure&quot;</span>},
  { <a class="code" href="bgpd_8h.html#a57a9d1349581d9e93c50cc7796e31479">BGP_NOTIFY_OPEN_UNACEP_HOLDTIME</a>, <span class="stringliteral">&quot;/Unacceptable Hold Time&quot;</span>}, 
  { <a class="code" href="bgpd_8h.html#a3e65ad10d09af118ec4d892547aa3f7c">BGP_NOTIFY_OPEN_UNSUP_CAPBL</a>, <span class="stringliteral">&quot;/Unsupported Capability&quot;</span>},
}
</pre></div>
<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00106">106</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="a7b85702dae89e227ead97cc8c77b69b8"></a><!-- doxytag: member="bgp_debug.c::bgp_notify_open_msg_max" ref="a7b85702dae89e227ead97cc8c77b69b8" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const int <a class="el" href="bgp__debug_8c.html#a7b85702dae89e227ead97cc8c77b69b8">bgp_notify_open_msg_max</a> = BGP_NOTIFY_OPEN_MAX<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00116">116</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="a34c90cb2707d24699fc373ea3f44ace0"></a><!-- doxytag: member="bgp_debug.c::bgp_notify_update_msg" ref="a34c90cb2707d24699fc373ea3f44ace0" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structmessage.html">message</a> <a class="el" href="bgp__debug_8c.html#a34c90cb2707d24699fc373ea3f44ace0">bgp_notify_update_msg</a>[]<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment"> 
{
  { <a class="code" href="bgpd_8h.html#aaafff2a38a6edeb24d3a8a8032a39f86">BGP_NOTIFY_UPDATE_MAL_ATTR</a>, <span class="stringliteral">&quot;/Malformed Attribute List&quot;</span>},
  { <a class="code" href="bgpd_8h.html#a0d024c2a67a57b482ae156bb77329d89">BGP_NOTIFY_UPDATE_UNREC_ATTR</a>, <span class="stringliteral">&quot;/Unrecognized Well-known Attribute&quot;</span>},
  { <a class="code" href="bgpd_8h.html#af452ed83988422b98f2ec9c8ee97c23a">BGP_NOTIFY_UPDATE_MISS_ATTR</a>, <span class="stringliteral">&quot;/Missing Well-known Attribute&quot;</span>},
  { <a class="code" href="bgpd_8h.html#afa7bc7004c7ad468b0b924f7e8b2d549">BGP_NOTIFY_UPDATE_ATTR_FLAG_ERR</a>, <span class="stringliteral">&quot;/Attribute Flags Error&quot;</span>},
  { <a class="code" href="bgpd_8h.html#a83200fa3a4ddf129ef709b9a16feac9e">BGP_NOTIFY_UPDATE_ATTR_LENG_ERR</a>, <span class="stringliteral">&quot;/Attribute Length Error&quot;</span>},
  { <a class="code" href="bgpd_8h.html#a04d6c2468c21355ee9c5c1db6bb1cf01">BGP_NOTIFY_UPDATE_INVAL_ORIGIN</a>, <span class="stringliteral">&quot;/Invalid ORIGIN Attribute&quot;</span>},
  { <a class="code" href="bgpd_8h.html#a77f14e7b685166a99191a1f4e079f3b0">BGP_NOTIFY_UPDATE_AS_ROUTE_LOOP</a>, <span class="stringliteral">&quot;/AS Routing Loop&quot;</span>},
  { <a class="code" href="bgpd_8h.html#a0969e0729e320c0df063121136d361b6">BGP_NOTIFY_UPDATE_INVAL_NEXT_HOP</a>, <span class="stringliteral">&quot;/Invalid NEXT_HOP Attribute&quot;</span>},
  { <a class="code" href="bgpd_8h.html#a5bc01daf1178b6bd1dced55bafeb812f">BGP_NOTIFY_UPDATE_OPT_ATTR_ERR</a>, <span class="stringliteral">&quot;/Optional Attribute Error&quot;</span>},
  { <a class="code" href="bgpd_8h.html#a80701bbe52975406ae4c176b89a9c5c3">BGP_NOTIFY_UPDATE_INVAL_NETWORK</a>, <span class="stringliteral">&quot;/Invalid Network Field&quot;</span>},
  { <a class="code" href="bgpd_8h.html#a5af0f9968a9bcbff5a85b0fd86e29e2a">BGP_NOTIFY_UPDATE_MAL_AS_PATH</a>, <span class="stringliteral">&quot;/Malformed AS_PATH&quot;</span>},
}
</pre></div>
<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00118">118</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="a55875d883993e2c30bd664a598fb922c"></a><!-- doxytag: member="bgp_debug.c::bgp_notify_update_msg_max" ref="a55875d883993e2c30bd664a598fb922c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const int <a class="el" href="bgp__debug_8c.html#a55875d883993e2c30bd664a598fb922c">bgp_notify_update_msg_max</a> = BGP_NOTIFY_UPDATE_MAX<code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00132">132</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="a7123f83b15faa017071a458140399e7c"></a><!-- doxytag: member="bgp_debug.c::bgp_origin_long_str" ref="a7123f83b15faa017071a458140399e7c" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* <a class="el" href="bgp__route_8c.html#a7123f83b15faa017071a458140399e7c">bgp_origin_long_str</a>[] = {&quot;IGP&quot;,&quot;EGP&quot;,&quot;incomplete&quot;}</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00157">157</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="ab1c6c37df170ace398e3657b5df5ba6f"></a><!-- doxytag: member="bgp_debug.c::bgp_origin_str" ref="ab1c6c37df170ace398e3657b5df5ba6f" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* <a class="el" href="bgp__route_8c.html#ab1c6c37df170ace398e3657b5df5ba6f">bgp_origin_str</a>[] = {&quot;i&quot;,&quot;e&quot;,&quot;?&quot;}</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00156">156</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="adfa19d3216f6254be62df3c23e338ad9"></a><!-- doxytag: member="bgp_debug.c::bgp_status_msg" ref="adfa19d3216f6254be62df3c23e338ad9" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structmessage.html">message</a> <a class="el" href="bgp__debug_8h.html#adfa19d3216f6254be62df3c23e338ad9">bgp_status_msg</a>[]</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment"> 
{
  { <a class="code" href="bgpd_8h.html#aa87491374c5f1e04e123e51e1dfd043f">Idle</a>, <span class="stringliteral">&quot;Idle&quot;</span> },
  { <a class="code" href="bgpd_8h.html#a58672521fe155cead3bd1f0653be62ee">Connect</a>, <span class="stringliteral">&quot;Connect&quot;</span> },
  { <a class="code" href="bgpd_8h.html#a3e4aba4f7d3a690fdce5d1fe31156421">Active</a>, <span class="stringliteral">&quot;Active&quot;</span> },
  { <a class="code" href="bgpd_8h.html#a1873a46d77babce8de80c71ce1624718">OpenSent</a>, <span class="stringliteral">&quot;OpenSent&quot;</span> },
  { <a class="code" href="bgpd_8h.html#a0bf5b4ab03c60ff4c23c94a1d683b0b9">OpenConfirm</a>, <span class="stringliteral">&quot;OpenConfirm&quot;</span> },
  { <a class="code" href="bgpd_8h.html#aa87809ec7dea97b0e970e98ae6c181ea">Established</a>, <span class="stringliteral">&quot;Established&quot;</span> },
  { <a class="code" href="bgpd_8h.html#ac1826d1d659fefa5f3c15db9e57f7eb7">Clearing</a>,    <span class="stringliteral">&quot;Clearing&quot;</span>    },
  { <a class="code" href="bgpd_8h.html#a25915a470516b826a1f075280e8a3941">Deleted</a>,     <span class="stringliteral">&quot;Deleted&quot;</span>     },
}
</pre></div>
<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00060">60</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="aff742364da11910086c4566e8e725906"></a><!-- doxytag: member="bgp_debug.c::bgp_status_msg_max" ref="aff742364da11910086c4566e8e725906" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const int <a class="el" href="bgp__debug_8h.html#aff742364da11910086c4566e8e725906">bgp_status_msg_max</a> = BGP_STATUS_MAX</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00071">71</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="ab3ba22219d24863d590cda1738f6ec1b"></a><!-- doxytag: member="bgp_debug.c::bgp_type_str" ref="ab3ba22219d24863d590cda1738f6ec1b" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* <a class="el" href="bgp__debug_8h.html#ab3ba22219d24863d590cda1738f6ec1b">bgp_type_str</a>[]</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<b>Initial value:</b><div class="fragment"><pre class="fragment">
{
  <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>,
  <span class="stringliteral">&quot;OPEN&quot;</span>,
  <span class="stringliteral">&quot;UPDATE&quot;</span>,
  <span class="stringliteral">&quot;NOTIFICATION&quot;</span>,
  <span class="stringliteral">&quot;KEEPALIVE&quot;</span>,
  <span class="stringliteral">&quot;ROUTE-REFRESH&quot;</span>,
  <span class="stringliteral">&quot;CAPABILITY&quot;</span>
}
</pre></div>
<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00074">74</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="abcefe0fa5fed98bbdc382027549d8bfc"></a><!-- doxytag: member="bgp_debug.c::conf_bgp_debug_as4" ref="abcefe0fa5fed98bbdc382027549d8bfc" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="bgp__debug_8h.html#abcefe0fa5fed98bbdc382027549d8bfc">conf_bgp_debug_as4</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00039">39</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="aee9dca9479f574449e8296d2c123cabe"></a><!-- doxytag: member="bgp_debug.c::conf_bgp_debug_events" ref="aee9dca9479f574449e8296d2c123cabe" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="bgp__debug_8h.html#aee9dca9479f574449e8296d2c123cabe">conf_bgp_debug_events</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00041">41</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="a5c153c787e8ec7ec7dc467693e15fc57"></a><!-- doxytag: member="bgp_debug.c::conf_bgp_debug_filter" ref="a5c153c787e8ec7ec7dc467693e15fc57" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="bgp__debug_8h.html#a5c153c787e8ec7ec7dc467693e15fc57">conf_bgp_debug_filter</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00043">43</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="a770281eac71ea9c3878d8d7d9332db09"></a><!-- doxytag: member="bgp_debug.c::conf_bgp_debug_fsm" ref="a770281eac71ea9c3878d8d7d9332db09" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="bgp__debug_8h.html#a770281eac71ea9c3878d8d7d9332db09">conf_bgp_debug_fsm</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00040">40</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="a05d934f38ba61085a023655935615d8f"></a><!-- doxytag: member="bgp_debug.c::conf_bgp_debug_keepalive" ref="a05d934f38ba61085a023655935615d8f" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="bgp__debug_8h.html#a05d934f38ba61085a023655935615d8f">conf_bgp_debug_keepalive</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00044">44</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="a7be780bd883bb0f9b64569ab51c15a2f"></a><!-- doxytag: member="bgp_debug.c::conf_bgp_debug_normal" ref="a7be780bd883bb0f9b64569ab51c15a2f" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="bgp__debug_8h.html#a7be780bd883bb0f9b64569ab51c15a2f">conf_bgp_debug_normal</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00046">46</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="a4d18831b12fd1b3bdbe6cf17925ec63e"></a><!-- doxytag: member="bgp_debug.c::conf_bgp_debug_packet" ref="a4d18831b12fd1b3bdbe6cf17925ec63e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="bgp__debug_8h.html#a4d18831b12fd1b3bdbe6cf17925ec63e">conf_bgp_debug_packet</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00042">42</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="aaaa6178333df4bfcc31027d84b8742ad"></a><!-- doxytag: member="bgp_debug.c::conf_bgp_debug_update" ref="aaaa6178333df4bfcc31027d84b8742ad" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="bgp__debug_8h.html#aaaa6178333df4bfcc31027d84b8742ad">conf_bgp_debug_update</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00045">45</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="aef6fbd9101fbe5b4d24d97c0a69aaf62"></a><!-- doxytag: member="bgp_debug.c::conf_bgp_debug_zebra" ref="aef6fbd9101fbe5b4d24d97c0a69aaf62" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="bgp__debug_8h.html#aef6fbd9101fbe5b4d24d97c0a69aaf62">conf_bgp_debug_zebra</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00047">47</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="ac5f1884724872ca84c29475feaf59766"></a><!-- doxytag: member="bgp_debug.c::debug_bgp_zebra_cmd" ref="ac5f1884724872ca84c29475feaf59766" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="bgp__debug_8c.html#ac5f1884724872ca84c29475feaf59766">debug_bgp_zebra_cmd</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00680">680</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="a8ec46ba4280d6580cbffb6f682a9d8fe"></a><!-- doxytag: member="bgp_debug.c::term_bgp_debug_as4" ref="a8ec46ba4280d6580cbffb6f682a9d8fe" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="bgp__debug_8h.html#a8ec46ba4280d6580cbffb6f682a9d8fe">term_bgp_debug_as4</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00049">49</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="a863d68a35d0a3f3a01315d47f5ade314"></a><!-- doxytag: member="bgp_debug.c::term_bgp_debug_events" ref="a863d68a35d0a3f3a01315d47f5ade314" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="bgp__debug_8h.html#a863d68a35d0a3f3a01315d47f5ade314">term_bgp_debug_events</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00051">51</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="a02da3a9e078e054dbe1a1660f186ec25"></a><!-- doxytag: member="bgp_debug.c::term_bgp_debug_filter" ref="a02da3a9e078e054dbe1a1660f186ec25" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="bgp__debug_8h.html#a02da3a9e078e054dbe1a1660f186ec25">term_bgp_debug_filter</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00053">53</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="ac3e53290c7cd77c034e7567c4d45bcb2"></a><!-- doxytag: member="bgp_debug.c::term_bgp_debug_fsm" ref="ac3e53290c7cd77c034e7567c4d45bcb2" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="bgp__debug_8h.html#ac3e53290c7cd77c034e7567c4d45bcb2">term_bgp_debug_fsm</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00050">50</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="a43fefb849cadf103d01d9c9797732922"></a><!-- doxytag: member="bgp_debug.c::term_bgp_debug_keepalive" ref="a43fefb849cadf103d01d9c9797732922" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="bgp__debug_8h.html#a43fefb849cadf103d01d9c9797732922">term_bgp_debug_keepalive</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00054">54</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="abcf26a4964ebf9f35c65318137106692"></a><!-- doxytag: member="bgp_debug.c::term_bgp_debug_normal" ref="abcf26a4964ebf9f35c65318137106692" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="bgp__debug_8h.html#abcf26a4964ebf9f35c65318137106692">term_bgp_debug_normal</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00056">56</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="a8e8d6d329edb9204d53ce4cb15cd258e"></a><!-- doxytag: member="bgp_debug.c::term_bgp_debug_packet" ref="a8e8d6d329edb9204d53ce4cb15cd258e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="bgp__debug_8h.html#a8e8d6d329edb9204d53ce4cb15cd258e">term_bgp_debug_packet</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00052">52</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="adcbb095e57771a9c92ef65691c9e4736"></a><!-- doxytag: member="bgp_debug.c::term_bgp_debug_update" ref="adcbb095e57771a9c92ef65691c9e4736" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="bgp__debug_8h.html#adcbb095e57771a9c92ef65691c9e4736">term_bgp_debug_update</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00055">55</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="a56491200c8bff4b448e0e5b0cb8d9747"></a><!-- doxytag: member="bgp_debug.c::term_bgp_debug_zebra" ref="a56491200c8bff4b448e0e5b0cb8d9747" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="bgp__debug_8h.html#a56491200c8bff4b448e0e5b0cb8d9747">term_bgp_debug_zebra</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00057">57</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
<a class="anchor" id="aacd09dfe4b60fac4ec1c5e2895066f07"></a><!-- doxytag: member="bgp_debug.c::zebra" ref="aacd09dfe4b60fac4ec1c5e2895066f07" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">debug <a class="el" href="structbgp.html">bgp</a> <a class="el" href="bgp__debug_8c.html#aacd09dfe4b60fac4ec1c5e2895066f07">zebra</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="bgp__debug_8c_source.html#l00680">680</a> of file <a class="el" href="bgp__debug_8c_source.html">bgp_debug.c</a>.</p>

</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="bgp__debug_8c.html">bgp_debug.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:11 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
