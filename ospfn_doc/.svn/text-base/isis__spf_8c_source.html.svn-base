<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: isisd/isis_spf.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('isis__spf_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">isisd/isis_spf.c</div>  </div>
</div>
<div class="contents">
<a href="isis__spf_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * IS-IS Rout(e)ing protocol                  - isis_spf.c</span>
<a name="l00003"></a>00003 <span class="comment"> *                                              The SPT algorithm</span>
<a name="l00004"></a>00004 <span class="comment"> *</span>
<a name="l00005"></a>00005 <span class="comment"> * Copyright (C) 2001,2002   Sampo Saaristo</span>
<a name="l00006"></a>00006 <span class="comment"> *                           Tampere University of Technology      </span>
<a name="l00007"></a>00007 <span class="comment"> *                           Institute of Communications Engineering</span>
<a name="l00008"></a>00008 <span class="comment"> *</span>
<a name="l00009"></a>00009 <span class="comment"> * This program is free software; you can redistribute it and/or modify it </span>
<a name="l00010"></a>00010 <span class="comment"> * under the terms of the GNU General Public Licenseas published by the Free </span>
<a name="l00011"></a>00011 <span class="comment"> * Software Foundation; either version 2 of the License, or (at your option) </span>
<a name="l00012"></a>00012 <span class="comment"> * any later version.</span>
<a name="l00013"></a>00013 <span class="comment"> *</span>
<a name="l00014"></a>00014 <span class="comment"> * This program is distributed in the hope that it will be useful,but WITHOUT </span>
<a name="l00015"></a>00015 <span class="comment"> * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or </span>
<a name="l00016"></a>00016 <span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for </span>
<a name="l00017"></a>00017 <span class="comment"> * more details.</span>
<a name="l00018"></a>00018 <span class="comment"></span>
<a name="l00019"></a>00019 <span class="comment"> * You should have received a copy of the GNU General Public License along </span>
<a name="l00020"></a>00020 <span class="comment"> * with this program; if not, write to the Free Software Foundation, Inc., </span>
<a name="l00021"></a>00021 <span class="comment"> * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.</span>
<a name="l00022"></a>00022 <span class="comment"> */</span>
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 <span class="preprocessor">#include &lt;<a class="code" href="zebra_8h.html">zebra.h</a>&gt;</span>
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="thread_8h.html">thread.h</a>&quot;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &quot;<a class="code" href="linklist_8h.html">linklist.h</a>&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="vty_8h.html">vty.h</a>&quot;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="log_8h.html">log.h</a>&quot;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="command_8h.html">command.h</a>&quot;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &quot;<a class="code" href="memory_8h.html">memory.h</a>&quot;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="prefix_8h.html">prefix.h</a>&quot;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &quot;<a class="code" href="hash_8h.html">hash.h</a>&quot;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &quot;<a class="code" href="if_8h.html">if.h</a>&quot;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &quot;<a class="code" href="table_8h.html">table.h</a>&quot;</span>
<a name="l00036"></a>00036 
<a name="l00037"></a>00037 <span class="preprocessor">#include &quot;<a class="code" href="isis__constants_8h.html">isis_constants.h</a>&quot;</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include &quot;<a class="code" href="isis__common_8h.html">isis_common.h</a>&quot;</span>
<a name="l00039"></a>00039 <span class="preprocessor">#include &quot;<a class="code" href="dict_8h.html">dict.h</a>&quot;</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include &quot;<a class="code" href="isisd_8h.html">isisd.h</a>&quot;</span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &quot;<a class="code" href="isis__misc_8h.html">isis_misc.h</a>&quot;</span>
<a name="l00042"></a>00042 <span class="preprocessor">#include &quot;<a class="code" href="isis__adjacency_8h.html">isis_adjacency.h</a>&quot;</span>
<a name="l00043"></a>00043 <span class="preprocessor">#include &quot;<a class="code" href="isis__circuit_8h.html">isis_circuit.h</a>&quot;</span>
<a name="l00044"></a>00044 <span class="preprocessor">#include &quot;<a class="code" href="isis__tlv_8h.html">isis_tlv.h</a>&quot;</span>
<a name="l00045"></a>00045 <span class="preprocessor">#include &quot;<a class="code" href="isis__pdu_8h.html">isis_pdu.h</a>&quot;</span>
<a name="l00046"></a>00046 <span class="preprocessor">#include &quot;<a class="code" href="isis__lsp_8h.html">isis_lsp.h</a>&quot;</span>
<a name="l00047"></a>00047 <span class="preprocessor">#include &quot;<a class="code" href="isis__dynhn_8h.html">isis_dynhn.h</a>&quot;</span>
<a name="l00048"></a>00048 <span class="preprocessor">#include &quot;<a class="code" href="isis__spf_8h.html">isis_spf.h</a>&quot;</span>
<a name="l00049"></a>00049 <span class="preprocessor">#include &quot;<a class="code" href="isis__route_8h.html">isis_route.h</a>&quot;</span>
<a name="l00050"></a>00050 <span class="preprocessor">#include &quot;<a class="code" href="isis__csm_8h.html">isis_csm.h</a>&quot;</span>
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structisis.html">isis</a> *<a class="code" href="isis__adjacency_8c.html#aa8cfdc8f7777fd242bd2c45f3a48b950">isis</a>;
<a name="l00053"></a>00053 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structthread__master.html">thread_master</a> *<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a>;
<a name="l00054"></a>00054 <span class="keyword">extern</span> <span class="keyword">struct </span><a class="code" href="structhost.html">host</a> <a class="code" href="structhost.html">host</a>;
<a name="l00055"></a>00055 
<a name="l00056"></a>00056 <span class="keywordtype">int</span> <a class="code" href="isis__spf_8c.html#a4520566d073115fc9dc2f9d50ca22b69">isis_run_spf_l1</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>);
<a name="l00057"></a>00057 <span class="keywordtype">int</span> <a class="code" href="isis__spf_8c.html#a4c4facf36367a44c51978f37f2eca79f">isis_run_spf_l2</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>);
<a name="l00058"></a>00058 
<a name="l00059"></a>00059 <span class="comment">/* 7.2.7 */</span>
<a name="l00060"></a>00060 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00061"></a><a class="code" href="isis__spf_8c.html#aa8fc65e3edbbc537529f1c4b8461dcf3">00061</a> <a class="code" href="isis__spf_8c.html#aa8fc65e3edbbc537529f1c4b8461dcf3">remove_excess_adjs</a> (<span class="keyword">struct</span> <a class="code" href="structlist.html">list</a> *adjs)
<a name="l00062"></a>00062 {
<a name="l00063"></a>00063   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *excess = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00064"></a>00064   <span class="keyword">struct </span><a class="code" href="structisis__adjacency.html">isis_adjacency</a> *adj, *candidate = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00065"></a>00065   <span class="keywordtype">int</span> comp;
<a name="l00066"></a>00066 
<a name="l00067"></a>00067   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (adjs, node, adj)) 
<a name="l00068"></a>00068     {
<a name="l00069"></a>00069       <span class="keywordflow">if</span> (excess == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00070"></a>00070     excess = node;
<a name="l00071"></a>00071       candidate = <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (excess);
<a name="l00072"></a>00072 
<a name="l00073"></a>00073       <span class="keywordflow">if</span> (candidate-&gt;<a class="code" href="structisis__adjacency.html#a187eb9cdad6881ecd2735b38a47e07e3">sys_type</a> &lt; adj-&gt;<a class="code" href="structisis__adjacency.html#a187eb9cdad6881ecd2735b38a47e07e3">sys_type</a>)
<a name="l00074"></a>00074     {
<a name="l00075"></a>00075       excess = node;
<a name="l00076"></a>00076       candidate = adj;
<a name="l00077"></a>00077       <span class="keywordflow">continue</span>;
<a name="l00078"></a>00078     }
<a name="l00079"></a>00079       <span class="keywordflow">if</span> (candidate-&gt;<a class="code" href="structisis__adjacency.html#a187eb9cdad6881ecd2735b38a47e07e3">sys_type</a> &gt; adj-&gt;<a class="code" href="structisis__adjacency.html#a187eb9cdad6881ecd2735b38a47e07e3">sys_type</a>)
<a name="l00080"></a>00080     <span class="keywordflow">continue</span>;
<a name="l00081"></a>00081 
<a name="l00082"></a>00082       comp = <a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (candidate-&gt;<a class="code" href="structisis__adjacency.html#a7b23942ae5652d5cf59b263f131c2038">sysid</a>, adj-&gt;<a class="code" href="structisis__adjacency.html#a7b23942ae5652d5cf59b263f131c2038">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l00083"></a>00083       <span class="keywordflow">if</span> (comp &gt; 0)
<a name="l00084"></a>00084     {
<a name="l00085"></a>00085       excess = node;
<a name="l00086"></a>00086       candidate = adj;
<a name="l00087"></a>00087       <span class="keywordflow">continue</span>;
<a name="l00088"></a>00088     }
<a name="l00089"></a>00089       <span class="keywordflow">if</span> (comp &lt; 0)
<a name="l00090"></a>00090     <span class="keywordflow">continue</span>;
<a name="l00091"></a>00091 
<a name="l00092"></a>00092       <span class="keywordflow">if</span> (candidate-&gt;<a class="code" href="structisis__adjacency.html#a29d8beb7bedcecb2c6c2f7112ba5d072">circuit</a>-&gt;<a class="code" href="structisis__circuit.html#a10453f6bcc1e8f1cb466240a81836ba9">circuit_id</a> &gt; adj-&gt;<a class="code" href="structisis__adjacency.html#a29d8beb7bedcecb2c6c2f7112ba5d072">circuit</a>-&gt;<a class="code" href="structisis__circuit.html#a10453f6bcc1e8f1cb466240a81836ba9">circuit_id</a>)
<a name="l00093"></a>00093     {
<a name="l00094"></a>00094       excess = node;
<a name="l00095"></a>00095       candidate = adj;
<a name="l00096"></a>00096       <span class="keywordflow">continue</span>;
<a name="l00097"></a>00097     }
<a name="l00098"></a>00098 
<a name="l00099"></a>00099       <span class="keywordflow">if</span> (candidate-&gt;<a class="code" href="structisis__adjacency.html#a29d8beb7bedcecb2c6c2f7112ba5d072">circuit</a>-&gt;<a class="code" href="structisis__circuit.html#a10453f6bcc1e8f1cb466240a81836ba9">circuit_id</a> &lt; adj-&gt;<a class="code" href="structisis__adjacency.html#a29d8beb7bedcecb2c6c2f7112ba5d072">circuit</a>-&gt;<a class="code" href="structisis__circuit.html#a10453f6bcc1e8f1cb466240a81836ba9">circuit_id</a>)
<a name="l00100"></a>00100     <span class="keywordflow">continue</span>;
<a name="l00101"></a>00101 
<a name="l00102"></a>00102       comp = <a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (candidate-&gt;<a class="code" href="structisis__adjacency.html#afe4ac3bbff30ac7c5a0da09b05bf9ac0">snpa</a>, adj-&gt;<a class="code" href="structisis__adjacency.html#afe4ac3bbff30ac7c5a0da09b05bf9ac0">snpa</a>, <a class="code" href="isis__constants_8h.html#a9822d89774e0d6ddaa06503950130423">ETH_ALEN</a>);
<a name="l00103"></a>00103       <span class="keywordflow">if</span> (comp &gt; 0)
<a name="l00104"></a>00104     {
<a name="l00105"></a>00105       excess = node;
<a name="l00106"></a>00106       candidate = adj;
<a name="l00107"></a>00107       <span class="keywordflow">continue</span>;
<a name="l00108"></a>00108     }
<a name="l00109"></a>00109     }
<a name="l00110"></a>00110 
<a name="l00111"></a>00111   <a class="code" href="linklist_8c.html#a44569d4d868c60e29b21409612a5df05">list_delete_node</a> (adjs, excess);
<a name="l00112"></a>00112 
<a name="l00113"></a>00113   <span class="keywordflow">return</span>;
<a name="l00114"></a>00114 }
<a name="l00115"></a>00115 
<a name="l00116"></a>00116 <span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<a name="l00117"></a>00117 <span class="preprocessor"></span><span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> *
<a name="l00118"></a>00118 vtype2string (<span class="keyword">enum</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadc">vertextype</a> vtype)
<a name="l00119"></a>00119 {
<a name="l00120"></a>00120   <span class="keywordflow">switch</span> (vtype)
<a name="l00121"></a>00121     {
<a name="l00122"></a>00122     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcafb01d0d49c5c5472181534c92dd6f7eb">VTYPE_PSEUDO_IS</a>:
<a name="l00123"></a>00123       <span class="keywordflow">return</span> <span class="stringliteral">&quot;pseudo_IS&quot;</span>;
<a name="l00124"></a>00124       <span class="keywordflow">break</span>;
<a name="l00125"></a>00125     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca402426f39ccc62ae0920b3966eb86e03">VTYPE_PSEUDO_TE_IS</a>:
<a name="l00126"></a>00126       <span class="keywordflow">return</span> <span class="stringliteral">&quot;pseudo_TE-IS&quot;</span>;
<a name="l00127"></a>00127       <span class="keywordflow">break</span>;
<a name="l00128"></a>00128     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcab49954312767a3354f9436d9e8b55879">VTYPE_NONPSEUDO_IS</a>:
<a name="l00129"></a>00129       <span class="keywordflow">return</span> <span class="stringliteral">&quot;IS&quot;</span>;
<a name="l00130"></a>00130       <span class="keywordflow">break</span>;
<a name="l00131"></a>00131     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca1e82ec051fbdd19aaffa0360854f9b68">VTYPE_NONPSEUDO_TE_IS</a>:
<a name="l00132"></a>00132       <span class="keywordflow">return</span> <span class="stringliteral">&quot;TE-IS&quot;</span>;
<a name="l00133"></a>00133       <span class="keywordflow">break</span>;
<a name="l00134"></a>00134     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca419bd242149145636d0c8ffa096893a0">VTYPE_ES</a>:
<a name="l00135"></a>00135       <span class="keywordflow">return</span> <span class="stringliteral">&quot;ES&quot;</span>;
<a name="l00136"></a>00136       <span class="keywordflow">break</span>;
<a name="l00137"></a>00137     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca0cb69e553ae6caee606be4d93671b745">VTYPE_IPREACH_INTERNAL</a>:
<a name="l00138"></a>00138       <span class="keywordflow">return</span> <span class="stringliteral">&quot;IP internal&quot;</span>;
<a name="l00139"></a>00139       <span class="keywordflow">break</span>;
<a name="l00140"></a>00140     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcac5b5e03da1298700e72fc9b7e58bb1da">VTYPE_IPREACH_EXTERNAL</a>:
<a name="l00141"></a>00141       <span class="keywordflow">return</span> <span class="stringliteral">&quot;IP external&quot;</span>;
<a name="l00142"></a>00142       <span class="keywordflow">break</span>;
<a name="l00143"></a>00143     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcabf3d2d72b3c42d753602198f061abd53">VTYPE_IPREACH_TE</a>:
<a name="l00144"></a>00144       <span class="keywordflow">return</span> <span class="stringliteral">&quot;IP TE&quot;</span>;
<a name="l00145"></a>00145       <span class="keywordflow">break</span>;
<a name="l00146"></a>00146 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00147"></a>00147 <span class="preprocessor"></span>    <span class="keywordflow">case</span> VTYPE_IP6REACH_INTERNAL:
<a name="l00148"></a>00148       <span class="keywordflow">return</span> <span class="stringliteral">&quot;IP6 internal&quot;</span>;
<a name="l00149"></a>00149       <span class="keywordflow">break</span>;
<a name="l00150"></a>00150     <span class="keywordflow">case</span> VTYPE_IP6REACH_EXTERNAL:
<a name="l00151"></a>00151       <span class="keywordflow">return</span> <span class="stringliteral">&quot;IP6 external&quot;</span>;
<a name="l00152"></a>00152       <span class="keywordflow">break</span>;
<a name="l00153"></a>00153 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l00154"></a>00154     <span class="keywordflow">default</span>:
<a name="l00155"></a>00155       <span class="keywordflow">return</span> <span class="stringliteral">&quot;UNKNOWN&quot;</span>;
<a name="l00156"></a>00156     }
<a name="l00157"></a>00157   <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;          <span class="comment">/* Not reached */</span>
<a name="l00158"></a>00158 }
<a name="l00159"></a>00159 
<a name="l00160"></a>00160 <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> *
<a name="l00161"></a>00161 vid2string (<span class="keyword">struct</span> <a class="code" href="structisis__vertex.html">isis_vertex</a> *<a class="code" href="structvertex.html">vertex</a>, u_char * buff)
<a name="l00162"></a>00162 {
<a name="l00163"></a>00163   <span class="keywordflow">switch</span> (vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a>)
<a name="l00164"></a>00164     {
<a name="l00165"></a>00165     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcafb01d0d49c5c5472181534c92dd6f7eb">VTYPE_PSEUDO_IS</a>:
<a name="l00166"></a>00166     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca402426f39ccc62ae0920b3966eb86e03">VTYPE_PSEUDO_TE_IS</a>:
<a name="l00167"></a>00167       <span class="keywordflow">return</span> <a class="code" href="isis__misc_8c.html#a3a0e7f92008e3167e2c09b8761d06766">rawlspid_print</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>);
<a name="l00168"></a>00168       <span class="keywordflow">break</span>;
<a name="l00169"></a>00169     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcab49954312767a3354f9436d9e8b55879">VTYPE_NONPSEUDO_IS</a>:
<a name="l00170"></a>00170     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca1e82ec051fbdd19aaffa0360854f9b68">VTYPE_NONPSEUDO_TE_IS</a>:
<a name="l00171"></a>00171     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca419bd242149145636d0c8ffa096893a0">VTYPE_ES</a>:
<a name="l00172"></a>00172       <span class="keywordflow">return</span> <a class="code" href="isis__misc_8c.html#aabccf63144f92eecd0eb77f24ee98529">sysid_print</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>);
<a name="l00173"></a>00173       <span class="keywordflow">break</span>;
<a name="l00174"></a>00174     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca0cb69e553ae6caee606be4d93671b745">VTYPE_IPREACH_INTERNAL</a>:
<a name="l00175"></a>00175     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcac5b5e03da1298700e72fc9b7e58bb1da">VTYPE_IPREACH_EXTERNAL</a>:
<a name="l00176"></a>00176     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcabf3d2d72b3c42d753602198f061abd53">VTYPE_IPREACH_TE</a>:
<a name="l00177"></a>00177 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00178"></a>00178 <span class="preprocessor"></span>    <span class="keywordflow">case</span> VTYPE_IP6REACH_INTERNAL:
<a name="l00179"></a>00179     <span class="keywordflow">case</span> VTYPE_IP6REACH_EXTERNAL:
<a name="l00180"></a>00180 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l00181"></a>00181       <a class="code" href="prefix_8c.html#a8b848557695ae5694bd2282eba23e367">prefix2str</a> ((<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#adc4a56ae6383023d2654e44ef283a968">prefix</a>, (<span class="keywordtype">char</span> *) buff, BUFSIZ);
<a name="l00182"></a>00182       <span class="keywordflow">break</span>;
<a name="l00183"></a>00183     <span class="keywordflow">default</span>:
<a name="l00184"></a>00184       <span class="keywordflow">return</span> <span class="stringliteral">&quot;UNKNOWN&quot;</span>;
<a name="l00185"></a>00185     }
<a name="l00186"></a>00186 
<a name="l00187"></a>00187   <span class="keywordflow">return</span> (<span class="keywordtype">char</span> *) buff;
<a name="l00188"></a>00188 }
<a name="l00189"></a>00189 <span class="preprocessor">#endif </span><span class="comment">/* EXTREME_DEBUG */</span>
<a name="l00190"></a>00190 
<a name="l00191"></a>00191 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structisis__spftree.html">isis_spftree</a> *
<a name="l00192"></a><a class="code" href="isis__spf_8c.html#a87bc34e97dbd8394892007132903d0e8">00192</a> <a class="code" href="isis__spf_8c.html#a87bc34e97dbd8394892007132903d0e8">isis_spftree_new</a> ()
<a name="l00193"></a>00193 {
<a name="l00194"></a>00194   <span class="keyword">struct </span><a class="code" href="structisis__spftree.html">isis_spftree</a> *tree;
<a name="l00195"></a>00195 
<a name="l00196"></a>00196   tree = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba67363c12f82b6a04131c820ba0d0f097">MTYPE_ISIS_SPFTREE</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structisis__spftree.html">isis_spftree</a>));
<a name="l00197"></a>00197   <span class="keywordflow">if</span> (tree == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00198"></a>00198     {
<a name="l00199"></a>00199       <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;ISIS-Spf: isis_spftree_new Out of memory!&quot;</span>);
<a name="l00200"></a>00200       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00201"></a>00201     }
<a name="l00202"></a>00202 
<a name="l00203"></a>00203   tree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l00204"></a>00204   tree-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l00205"></a>00205   <span class="keywordflow">return</span> tree;
<a name="l00206"></a>00206 }
<a name="l00207"></a>00207 
<a name="l00208"></a>00208 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00209"></a><a class="code" href="isis__spf_8c.html#a0cd21b0d39b2dabae3d8b273a75b9fb9">00209</a> <a class="code" href="isis__spf_8c.html#a0cd21b0d39b2dabae3d8b273a75b9fb9">isis_vertex_del</a> (<span class="keyword">struct</span> <a class="code" href="structisis__vertex.html">isis_vertex</a> *vertex)
<a name="l00210"></a>00210 {
<a name="l00211"></a>00211   <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a>);
<a name="l00212"></a>00212 
<a name="l00213"></a>00213   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167bacdb37afb15c37c47ac41bb6af17edc15">MTYPE_ISIS_VERTEX</a>, vertex);
<a name="l00214"></a>00214 
<a name="l00215"></a>00215   <span class="keywordflow">return</span>;
<a name="l00216"></a>00216 }
<a name="l00217"></a>00217 
<a name="l00218"></a>00218 <span class="preprocessor">#if 0 </span><span class="comment">/* HT: Not used yet. */</span>
<a name="l00219"></a>00219 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00220"></a>00220 isis_spftree_del (<span class="keyword">struct</span> <a class="code" href="structisis__spftree.html">isis_spftree</a> *spftree)
<a name="l00221"></a>00221 {
<a name="l00222"></a>00222   spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = (void (*)(<span class="keywordtype">void</span> *)) <a class="code" href="isis__spf_8c.html#a0cd21b0d39b2dabae3d8b273a75b9fb9">isis_vertex_del</a>;
<a name="l00223"></a>00223   <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>);
<a name="l00224"></a>00224 
<a name="l00225"></a>00225   spftree-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = (void (*)(<span class="keywordtype">void</span> *)) <a class="code" href="isis__spf_8c.html#a0cd21b0d39b2dabae3d8b273a75b9fb9">isis_vertex_del</a>;
<a name="l00226"></a>00226   <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>);
<a name="l00227"></a>00227 
<a name="l00228"></a>00228   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167ba67363c12f82b6a04131c820ba0d0f097">MTYPE_ISIS_SPFTREE</a>, spftree);
<a name="l00229"></a>00229 
<a name="l00230"></a>00230   <span class="keywordflow">return</span>;
<a name="l00231"></a>00231 }
<a name="l00232"></a>00232 <span class="preprocessor">#endif </span>
<a name="l00233"></a>00233 <span class="preprocessor"></span>
<a name="l00234"></a>00234 <span class="keywordtype">void</span>
<a name="l00235"></a><a class="code" href="isis__spf_8h.html#a5e76ff990e90121ffd8e75817238607d">00235</a> <a class="code" href="isis__spf_8c.html#a5e76ff990e90121ffd8e75817238607d">spftree_area_init</a> (<span class="keyword">struct</span> <a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>)
<a name="l00236"></a>00236 {
<a name="l00237"></a>00237   <span class="keywordflow">if</span> ((area-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>) &amp;&amp; area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[0] == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00238"></a>00238     {
<a name="l00239"></a>00239       area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[0] = <a class="code" href="isis__spf_8c.html#a87bc34e97dbd8394892007132903d0e8">isis_spftree_new</a> ();
<a name="l00240"></a>00240 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00241"></a>00241 <span class="preprocessor"></span>      area-&gt;spftree6[0] = <a class="code" href="isis__spf_8c.html#a87bc34e97dbd8394892007132903d0e8">isis_spftree_new</a> ();
<a name="l00242"></a>00242 <span class="preprocessor">#endif</span>
<a name="l00243"></a>00243 <span class="preprocessor"></span>
<a name="l00244"></a>00244       <span class="comment">/*    thread_add_timer (master, isis_run_spf_l1, area, </span>
<a name="l00245"></a>00245 <span class="comment">         isis_jitter (PERIODIC_SPF_INTERVAL, 10)); */</span>
<a name="l00246"></a>00246     }
<a name="l00247"></a>00247 
<a name="l00248"></a>00248   <span class="keywordflow">if</span> ((area-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a9daa7fbf09b604c718f3bbe189aedd1a">IS_LEVEL_2</a>) &amp;&amp; area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[1] == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00249"></a>00249     {
<a name="l00250"></a>00250       area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[1] = <a class="code" href="isis__spf_8c.html#a87bc34e97dbd8394892007132903d0e8">isis_spftree_new</a> ();
<a name="l00251"></a>00251 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00252"></a>00252 <span class="preprocessor"></span>      area-&gt;spftree6[1] = <a class="code" href="isis__spf_8c.html#a87bc34e97dbd8394892007132903d0e8">isis_spftree_new</a> ();
<a name="l00253"></a>00253 <span class="preprocessor">#endif</span>
<a name="l00254"></a>00254 <span class="preprocessor"></span>      <span class="comment">/*    thread_add_timer (master, isis_run_spf_l2, area, </span>
<a name="l00255"></a>00255 <span class="comment">         isis_jitter (PERIODIC_SPF_INTERVAL, 10)); */</span>
<a name="l00256"></a>00256     }
<a name="l00257"></a>00257 
<a name="l00258"></a>00258   <span class="keywordflow">return</span>;
<a name="l00259"></a>00259 }
<a name="l00260"></a>00260 
<a name="l00261"></a>00261 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structisis__vertex.html">isis_vertex</a> *
<a name="l00262"></a><a class="code" href="isis__spf_8c.html#a951e0519c84c47d6c071824958605dde">00262</a> <a class="code" href="isis__spf_8c.html#a951e0519c84c47d6c071824958605dde">isis_vertex_new</a> (<span class="keywordtype">void</span> *<span class="keywordtype">id</span>, <span class="keyword">enum</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadc">vertextype</a> vtype)
<a name="l00263"></a>00263 {
<a name="l00264"></a>00264   <span class="keyword">struct </span><a class="code" href="structisis__vertex.html">isis_vertex</a> *vertex;
<a name="l00265"></a>00265 
<a name="l00266"></a>00266   vertex = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167bacdb37afb15c37c47ac41bb6af17edc15">MTYPE_ISIS_VERTEX</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structisis__vertex.html">isis_vertex</a>));
<a name="l00267"></a>00267   <span class="keywordflow">if</span> (vertex == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00268"></a>00268     {
<a name="l00269"></a>00269       <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;isis_vertex_new Out of memory!&quot;</span>);
<a name="l00270"></a>00270       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00271"></a>00271     }
<a name="l00272"></a>00272 
<a name="l00273"></a>00273   vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a> = vtype;
<a name="l00274"></a>00274   <span class="keywordflow">switch</span> (vtype)
<a name="l00275"></a>00275     {
<a name="l00276"></a>00276     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca419bd242149145636d0c8ffa096893a0">VTYPE_ES</a>:
<a name="l00277"></a>00277     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcab49954312767a3354f9436d9e8b55879">VTYPE_NONPSEUDO_IS</a>:
<a name="l00278"></a>00278     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca1e82ec051fbdd19aaffa0360854f9b68">VTYPE_NONPSEUDO_TE_IS</a>:
<a name="l00279"></a>00279       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>, (u_char *) <span class="keywordtype">id</span>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l00280"></a>00280       <span class="keywordflow">break</span>;
<a name="l00281"></a>00281     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcafb01d0d49c5c5472181534c92dd6f7eb">VTYPE_PSEUDO_IS</a>:
<a name="l00282"></a>00282     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca402426f39ccc62ae0920b3966eb86e03">VTYPE_PSEUDO_TE_IS</a>:
<a name="l00283"></a>00283       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>, (u_char *) <span class="keywordtype">id</span>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 1);
<a name="l00284"></a>00284       <span class="keywordflow">break</span>;
<a name="l00285"></a>00285     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca0cb69e553ae6caee606be4d93671b745">VTYPE_IPREACH_INTERNAL</a>:
<a name="l00286"></a>00286     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcac5b5e03da1298700e72fc9b7e58bb1da">VTYPE_IPREACH_EXTERNAL</a>:
<a name="l00287"></a>00287     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcabf3d2d72b3c42d753602198f061abd53">VTYPE_IPREACH_TE</a>:
<a name="l00288"></a>00288 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00289"></a>00289 <span class="preprocessor"></span>    <span class="keywordflow">case</span> VTYPE_IP6REACH_INTERNAL:
<a name="l00290"></a>00290     <span class="keywordflow">case</span> VTYPE_IP6REACH_EXTERNAL:
<a name="l00291"></a>00291 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l00292"></a>00292       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#adc4a56ae6383023d2654e44ef283a968">prefix</a>, (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) <span class="keywordtype">id</span>,
<a name="l00293"></a>00293           sizeof (<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a>));
<a name="l00294"></a>00294       <span class="keywordflow">break</span>;
<a name="l00295"></a>00295     <span class="keywordflow">default</span>:
<a name="l00296"></a>00296       <a class="code" href="log_8h.html#aaf50b52a949696adb9e77153b08545ad">zlog_err</a> (<span class="stringliteral">&quot;WTF!&quot;</span>);
<a name="l00297"></a>00297     }
<a name="l00298"></a>00298 
<a name="l00299"></a>00299   vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a> = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l00300"></a>00300 
<a name="l00301"></a>00301   <span class="keywordflow">return</span> vertex;
<a name="l00302"></a>00302 }
<a name="l00303"></a>00303 
<a name="l00304"></a>00304 <span class="comment">/*</span>
<a name="l00305"></a>00305 <span class="comment"> * Add this IS to the root of SPT</span>
<a name="l00306"></a>00306 <span class="comment"> */</span>
<a name="l00307"></a>00307 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00308"></a><a class="code" href="isis__spf_8c.html#ace8c6b0e2357a48767ca25194ef20295">00308</a> <a class="code" href="isis__spf_8c.html#ace8c6b0e2357a48767ca25194ef20295">isis_spf_add_self</a> (<span class="keyword">struct</span> <a class="code" href="structisis__spftree.html">isis_spftree</a> *spftree, <span class="keyword">struct</span> <a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>,
<a name="l00309"></a>00309            <span class="keywordtype">int</span> level)
<a name="l00310"></a>00310 {
<a name="l00311"></a>00311   <span class="keyword">struct </span><a class="code" href="structisis__vertex.html">isis_vertex</a> *vertex;
<a name="l00312"></a>00312   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
<a name="l00313"></a>00313   u_char <a class="code" href="isis__misc_8c.html#ac0016d3200b8885e05d151ca16ef4315">lspid</a>[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 2];
<a name="l00314"></a>00314 <span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<a name="l00315"></a>00315 <span class="preprocessor"></span>  u_char buff[BUFSIZ];
<a name="l00316"></a>00316 <span class="preprocessor">#endif </span><span class="comment">/* EXTREME_DEBUG */</span>
<a name="l00317"></a>00317   <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (lspid, isis-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l00318"></a>00318   <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (lspid) = 0;
<a name="l00319"></a>00319   <a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (lspid) = 0;
<a name="l00320"></a>00320 
<a name="l00321"></a>00321   lsp = <a class="code" href="isis__lsp_8c.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (lspid, area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level - 1]);
<a name="l00322"></a>00322 
<a name="l00323"></a>00323   <span class="keywordflow">if</span> (lsp == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00324"></a>00324     <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;ISIS-Spf: could not find own l%d LSP!&quot;</span>, level);
<a name="l00325"></a>00325 
<a name="l00326"></a>00326   <span class="keywordflow">if</span> (!area-&gt;<a class="code" href="structisis__area.html#ab59df347846030a9825a908f8fa1a4ae">oldmetric</a>)
<a name="l00327"></a>00327     vertex = <a class="code" href="isis__spf_8c.html#a951e0519c84c47d6c071824958605dde">isis_vertex_new</a> (isis-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca1e82ec051fbdd19aaffa0360854f9b68">VTYPE_NONPSEUDO_TE_IS</a>);
<a name="l00328"></a>00328   <span class="keywordflow">else</span>
<a name="l00329"></a>00329     vertex = <a class="code" href="isis__spf_8c.html#a951e0519c84c47d6c071824958605dde">isis_vertex_new</a> (isis-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcab49954312767a3354f9436d9e8b55879">VTYPE_NONPSEUDO_IS</a>);
<a name="l00330"></a>00330 
<a name="l00331"></a>00331   vertex-&gt;<a class="code" href="structisis__vertex.html#a2016ca40d855164587629d620530ec1b">lsp</a> = lsp;
<a name="l00332"></a>00332 
<a name="l00333"></a>00333   <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>, vertex);
<a name="l00334"></a>00334 
<a name="l00335"></a>00335 <span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<a name="l00336"></a>00336 <span class="preprocessor"></span>  <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Spf: added this IS  %s %s depth %d dist %d to PATHS&quot;</span>,
<a name="l00337"></a>00337           vtype2string (vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a>), vid2string (vertex, buff),
<a name="l00338"></a>00338           vertex-&gt;<a class="code" href="structisis__vertex.html#a54212ccd6e7b1ca331f190fa4e252735">depth</a>, vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>);
<a name="l00339"></a>00339 <span class="preprocessor">#endif </span><span class="comment">/* EXTREME_DEBUG */</span>
<a name="l00340"></a>00340 
<a name="l00341"></a>00341   <span class="keywordflow">return</span>;
<a name="l00342"></a>00342 }
<a name="l00343"></a>00343 
<a name="l00344"></a>00344 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structisis__vertex.html">isis_vertex</a> *
<a name="l00345"></a><a class="code" href="isis__spf_8c.html#a2518d1c61e9645d59df254f0d1e57c98">00345</a> <a class="code" href="isis__spf_8c.html#a2518d1c61e9645d59df254f0d1e57c98">isis_find_vertex</a> (<span class="keyword">struct</span> <a class="code" href="structlist.html">list</a> *<a class="code" href="structlist.html">list</a>, <span class="keywordtype">void</span> *<span class="keywordtype">id</span>, <span class="keyword">enum</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadc">vertextype</a> vtype)
<a name="l00346"></a>00346 {
<a name="l00347"></a>00347   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00348"></a>00348   <span class="keyword">struct </span><a class="code" href="structisis__vertex.html">isis_vertex</a> *vertex;
<a name="l00349"></a>00349   <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> *p1, *p2;
<a name="l00350"></a>00350 
<a name="l00351"></a>00351   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (list, node, vertex))
<a name="l00352"></a>00352     {
<a name="l00353"></a>00353       <span class="keywordflow">if</span> (vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a> != vtype)
<a name="l00354"></a>00354     <span class="keywordflow">continue</span>;
<a name="l00355"></a>00355       <span class="keywordflow">switch</span> (vtype)
<a name="l00356"></a>00356     {
<a name="l00357"></a>00357     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca419bd242149145636d0c8ffa096893a0">VTYPE_ES</a>:
<a name="l00358"></a>00358     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcab49954312767a3354f9436d9e8b55879">VTYPE_NONPSEUDO_IS</a>:
<a name="l00359"></a>00359     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca1e82ec051fbdd19aaffa0360854f9b68">VTYPE_NONPSEUDO_TE_IS</a>:
<a name="l00360"></a>00360       <span class="keywordflow">if</span> (<a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> ((u_char *) <span class="keywordtype">id</span>, vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>) == 0)
<a name="l00361"></a>00361         <span class="keywordflow">return</span> vertex;
<a name="l00362"></a>00362       <span class="keywordflow">break</span>;
<a name="l00363"></a>00363     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcafb01d0d49c5c5472181534c92dd6f7eb">VTYPE_PSEUDO_IS</a>:
<a name="l00364"></a>00364     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca402426f39ccc62ae0920b3966eb86e03">VTYPE_PSEUDO_TE_IS</a>:
<a name="l00365"></a>00365       <span class="keywordflow">if</span> (<a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> ((u_char *) <span class="keywordtype">id</span>, vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 1) == 0)
<a name="l00366"></a>00366         <span class="keywordflow">return</span> vertex;
<a name="l00367"></a>00367       <span class="keywordflow">break</span>;
<a name="l00368"></a>00368     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca0cb69e553ae6caee606be4d93671b745">VTYPE_IPREACH_INTERNAL</a>:
<a name="l00369"></a>00369     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcac5b5e03da1298700e72fc9b7e58bb1da">VTYPE_IPREACH_EXTERNAL</a>:
<a name="l00370"></a>00370     <span class="keywordflow">case</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcabf3d2d72b3c42d753602198f061abd53">VTYPE_IPREACH_TE</a>:
<a name="l00371"></a>00371 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00372"></a>00372 <span class="preprocessor"></span>    <span class="keywordflow">case</span> VTYPE_IP6REACH_INTERNAL:
<a name="l00373"></a>00373     <span class="keywordflow">case</span> VTYPE_IP6REACH_EXTERNAL:
<a name="l00374"></a>00374 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l00375"></a>00375       p1 = (<span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> *) <span class="keywordtype">id</span>;
<a name="l00376"></a>00376       p2 = (<span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> *) &amp;vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>;
<a name="l00377"></a>00377       if (p1-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> == p2-&gt;<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> &amp;&amp; p1-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> == p2-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> &amp;&amp;
<a name="l00378"></a>00378           <a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (&amp;p1-&gt;u.<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>, &amp;p2-&gt;u.<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>,
<a name="l00379"></a>00379               <a class="code" href="bgpd_8h.html#a472145011d944606a257487e80cc3ace">PSIZE</a> (p1-&gt;<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a>)) == 0)
<a name="l00380"></a>00380         <span class="keywordflow">return</span> vertex;
<a name="l00381"></a>00381       <span class="keywordflow">break</span>;
<a name="l00382"></a>00382     }
<a name="l00383"></a>00383     }
<a name="l00384"></a>00384 
<a name="l00385"></a>00385   <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00386"></a>00386 }
<a name="l00387"></a>00387 
<a name="l00388"></a>00388 <span class="comment">/*</span>
<a name="l00389"></a>00389 <span class="comment"> * Add a vertex to TENT sorted by cost and by vertextype on tie break situation</span>
<a name="l00390"></a>00390 <span class="comment"> */</span>
<a name="l00391"></a>00391 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structisis__vertex.html">isis_vertex</a> *
<a name="l00392"></a><a class="code" href="isis__spf_8c.html#a675ae1b4432f4b54c3e01f9010f14772">00392</a> <a class="code" href="isis__spf_8c.html#a675ae1b4432f4b54c3e01f9010f14772">isis_spf_add2tent</a> (<span class="keyword">struct</span> <a class="code" href="structisis__spftree.html">isis_spftree</a> *spftree, <span class="keyword">enum</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadc">vertextype</a> vtype,
<a name="l00393"></a>00393            <span class="keywordtype">void</span> *<span class="keywordtype">id</span>, <span class="keyword">struct</span> <a class="code" href="structisis__adjacency.html">isis_adjacency</a> *adj, u_int32_t cost,
<a name="l00394"></a>00394            <span class="keywordtype">int</span> <a class="code" href="structisis__vertex.html#a54212ccd6e7b1ca331f190fa4e252735">depth</a>, <span class="keywordtype">int</span> family)
<a name="l00395"></a>00395 {
<a name="l00396"></a>00396   <span class="keyword">struct </span><a class="code" href="structisis__vertex.html">isis_vertex</a> *vertex, *v;
<a name="l00397"></a>00397   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00398"></a>00398 <span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<a name="l00399"></a>00399 <span class="preprocessor"></span>  u_char buff[BUFSIZ];
<a name="l00400"></a>00400 <span class="preprocessor">#endif</span>
<a name="l00401"></a>00401 <span class="preprocessor"></span>
<a name="l00402"></a>00402   vertex = <a class="code" href="isis__spf_8c.html#a951e0519c84c47d6c071824958605dde">isis_vertex_new</a> (<span class="keywordtype">id</span>, vtype);
<a name="l00403"></a>00403   vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a> = cost;
<a name="l00404"></a>00404   vertex-&gt;<a class="code" href="structisis__vertex.html#a54212ccd6e7b1ca331f190fa4e252735">depth</a> = depth;
<a name="l00405"></a>00405 
<a name="l00406"></a>00406   <span class="keywordflow">if</span> (adj)
<a name="l00407"></a>00407     <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a>, adj);
<a name="l00408"></a>00408 <span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<a name="l00409"></a>00409 <span class="preprocessor"></span>  <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Spf: add to TENT  %s %s depth %d dist %d&quot;</span>,
<a name="l00410"></a>00410           vtype2string (vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a>), vid2string (vertex, buff),
<a name="l00411"></a>00411           vertex-&gt;<a class="code" href="structisis__vertex.html#a54212ccd6e7b1ca331f190fa4e252735">depth</a>, vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>);
<a name="l00412"></a>00412 <span class="preprocessor">#endif </span><span class="comment">/* EXTREME_DEBUG */</span>
<a name="l00413"></a>00413   <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, vertex);
<a name="l00414"></a>00414   <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a6076d643ed23a6095c7821ddf52d3f47">list_isempty</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>))
<a name="l00415"></a>00415     {
<a name="l00416"></a>00416       <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, vertex);
<a name="l00417"></a>00417       <span class="keywordflow">return</span> vertex;
<a name="l00418"></a>00418     }
<a name="l00419"></a>00419   
<a name="l00420"></a>00420   <span class="comment">/* XXX: This cant use the standard ALL_LIST_ELEMENT macro */</span>
<a name="l00421"></a>00421   <span class="keywordflow">for</span> (node = <a class="code" href="linklist_8h.html#a3d4492ca03b023aeecd4d6b0cdaa16fb">listhead</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>); node; node = <a class="code" href="linklist_8h.html#ad3f7fe9d8d096c4afc1bdd5b1f46c5bb">listnextnode</a> (node))
<a name="l00422"></a>00422     {
<a name="l00423"></a>00423       v = <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (node);
<a name="l00424"></a>00424       <span class="keywordflow">if</span> (v-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a> &gt; vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>)
<a name="l00425"></a>00425     {
<a name="l00426"></a>00426       <a class="code" href="linklist_8c.html#ae1c29615b6d8dc3eda9042c95c666abb">list_add_node_prev</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, node, vertex);
<a name="l00427"></a>00427       <span class="keywordflow">break</span>;
<a name="l00428"></a>00428     }
<a name="l00429"></a>00429       <span class="keywordflow">else</span> <span class="keywordflow">if</span> (v-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a> == vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>)
<a name="l00430"></a>00430     {
<a name="l00431"></a>00431       <span class="comment">/*  Tie break, add according to type */</span>
<a name="l00432"></a>00432       <span class="keywordflow">while</span> (v &amp;&amp; v-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a> == vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a> &amp;&amp; v-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a> &gt; vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a>)
<a name="l00433"></a>00433         {
<a name="l00434"></a>00434           <span class="keywordflow">if</span> (v-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a> &gt; vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a>)
<a name="l00435"></a>00435         {
<a name="l00436"></a>00436           <span class="keywordflow">break</span>;
<a name="l00437"></a>00437         }
<a name="l00438"></a>00438               <span class="comment">/* XXX: this seems dubious, node is the loop iterator */</span>
<a name="l00439"></a>00439           node = <a class="code" href="linklist_8h.html#ad3f7fe9d8d096c4afc1bdd5b1f46c5bb">listnextnode</a> (node);
<a name="l00440"></a>00440           (node) ? (v = <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (node)) : (v = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l00441"></a>00441         }
<a name="l00442"></a>00442       <a class="code" href="linklist_8c.html#ae1c29615b6d8dc3eda9042c95c666abb">list_add_node_prev</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, node, vertex);
<a name="l00443"></a>00443       <span class="keywordflow">break</span>;
<a name="l00444"></a>00444     }
<a name="l00445"></a>00445       <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node-&gt;<a class="code" href="structlistnode.html#a13db6e09ac9e7200657130783e8e4131">next</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00446"></a>00446     {
<a name="l00447"></a>00447       <a class="code" href="linklist_8c.html#ad0ed9efa84ffffcd32334a48dfed446f">list_add_node_next</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, node, vertex);
<a name="l00448"></a>00448       <span class="keywordflow">break</span>;
<a name="l00449"></a>00449     }
<a name="l00450"></a>00450     }
<a name="l00451"></a>00451   <span class="keywordflow">return</span> vertex;
<a name="l00452"></a>00452 }
<a name="l00453"></a>00453 
<a name="l00454"></a>00454 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structisis__vertex.html">isis_vertex</a> *
<a name="l00455"></a><a class="code" href="isis__spf_8c.html#acf6df462d44d1eaca9a45ff3faf500e7">00455</a> <a class="code" href="isis__spf_8c.html#acf6df462d44d1eaca9a45ff3faf500e7">isis_spf_add_local</a> (<span class="keyword">struct</span> <a class="code" href="structisis__spftree.html">isis_spftree</a> *spftree, <span class="keyword">enum</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadc">vertextype</a> vtype,
<a name="l00456"></a>00456             <span class="keywordtype">void</span> *<span class="keywordtype">id</span>, <span class="keyword">struct</span> <a class="code" href="structisis__adjacency.html">isis_adjacency</a> *adj, u_int32_t cost,
<a name="l00457"></a>00457             <span class="keywordtype">int</span> family)
<a name="l00458"></a>00458 {
<a name="l00459"></a>00459   <span class="keyword">struct </span><a class="code" href="structisis__vertex.html">isis_vertex</a> *vertex;
<a name="l00460"></a>00460 
<a name="l00461"></a>00461   vertex = <a class="code" href="isis__spf_8c.html#a2518d1c61e9645d59df254f0d1e57c98">isis_find_vertex</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, <span class="keywordtype">id</span>, vtype);
<a name="l00462"></a>00462 
<a name="l00463"></a>00463   <span class="keywordflow">if</span> (vertex)
<a name="l00464"></a>00464     {
<a name="l00465"></a>00465       <span class="comment">/* C.2.5   c) */</span>
<a name="l00466"></a>00466       <span class="keywordflow">if</span> (vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a> == cost)
<a name="l00467"></a>00467     {
<a name="l00468"></a>00468       <span class="keywordflow">if</span> (adj)
<a name="l00469"></a>00469         <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a>, adj);
<a name="l00470"></a>00470       <span class="comment">/*       d) */</span>
<a name="l00471"></a>00471       <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a>) &gt; <a class="code" href="isis__constants_8h.html#afe8d4a9891abc5f7beba26a54d41ae41">ISIS_MAX_PATH_SPLITS</a>)
<a name="l00472"></a>00472         <a class="code" href="isis__spf_8c.html#aa8fc65e3edbbc537529f1c4b8461dcf3">remove_excess_adjs</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a>);
<a name="l00473"></a>00473     }
<a name="l00474"></a>00474       <span class="comment">/*         f) */</span>
<a name="l00475"></a>00475       <span class="keywordflow">else</span> <span class="keywordflow">if</span> (vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a> &gt; cost)
<a name="l00476"></a>00476     {
<a name="l00477"></a>00477       <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, vertex);
<a name="l00478"></a>00478       <span class="keywordflow">goto</span> add2tent;
<a name="l00479"></a>00479     }
<a name="l00480"></a>00480       <span class="comment">/*       e) do nothing */</span>
<a name="l00481"></a>00481       <span class="keywordflow">return</span> vertex;
<a name="l00482"></a>00482     }
<a name="l00483"></a>00483 
<a name="l00484"></a>00484 add2tent:
<a name="l00485"></a>00485   <span class="keywordflow">return</span> <a class="code" href="isis__spf_8c.html#a675ae1b4432f4b54c3e01f9010f14772">isis_spf_add2tent</a> (spftree, vtype, <span class="keywordtype">id</span>, adj, cost, 1, family);
<a name="l00486"></a>00486 }
<a name="l00487"></a>00487 
<a name="l00488"></a>00488 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00489"></a><a class="code" href="isis__spf_8c.html#a8ce1d0bc17c2992001e52e80072c23b6">00489</a> <a class="code" href="isis__spf_8c.html#a8ce1d0bc17c2992001e52e80072c23b6">process_N</a> (<span class="keyword">struct</span> <a class="code" href="structisis__spftree.html">isis_spftree</a> *spftree, <span class="keyword">enum</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadc">vertextype</a> vtype, <span class="keywordtype">void</span> *<span class="keywordtype">id</span>,
<a name="l00490"></a>00490        u_int16_t dist, u_int16_t <a class="code" href="structisis__vertex.html#a54212ccd6e7b1ca331f190fa4e252735">depth</a>, <span class="keyword">struct</span> <a class="code" href="structisis__adjacency.html">isis_adjacency</a> *adj,
<a name="l00491"></a>00491        <span class="keywordtype">int</span> family)
<a name="l00492"></a>00492 {
<a name="l00493"></a>00493   <span class="keyword">struct </span><a class="code" href="structisis__vertex.html">isis_vertex</a> *vertex;
<a name="l00494"></a>00494 <span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<a name="l00495"></a>00495 <span class="preprocessor"></span>  u_char buff[255];
<a name="l00496"></a>00496 <span class="preprocessor">#endif</span>
<a name="l00497"></a>00497 <span class="preprocessor"></span>
<a name="l00498"></a>00498   <span class="comment">/* C.2.6 b)    */</span>
<a name="l00499"></a>00499   <span class="keywordflow">if</span> (dist &gt; <a class="code" href="isis__constants_8h.html#a4940cf4053bca603237d171727ad875f">MAX_PATH_METRIC</a>)
<a name="l00500"></a>00500     <span class="keywordflow">return</span>;
<a name="l00501"></a>00501   <span class="comment">/*       c)    */</span>
<a name="l00502"></a>00502   vertex = <a class="code" href="isis__spf_8c.html#a2518d1c61e9645d59df254f0d1e57c98">isis_find_vertex</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>, <span class="keywordtype">id</span>, vtype);
<a name="l00503"></a>00503   <span class="keywordflow">if</span> (vertex)
<a name="l00504"></a>00504     {
<a name="l00505"></a>00505 <span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<a name="l00506"></a>00506 <span class="preprocessor"></span>      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Spf: process_N  %s %s dist %d already found from PATH&quot;</span>,
<a name="l00507"></a>00507           vtype2string (vtype), vid2string (vertex, buff), dist);
<a name="l00508"></a>00508 <span class="preprocessor">#endif </span><span class="comment">/* EXTREME_DEBUG */</span>
<a name="l00509"></a>00509       <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (dist &gt;= vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>);
<a name="l00510"></a>00510       <span class="keywordflow">return</span>;
<a name="l00511"></a>00511     }
<a name="l00512"></a>00512 
<a name="l00513"></a>00513   vertex = <a class="code" href="isis__spf_8c.html#a2518d1c61e9645d59df254f0d1e57c98">isis_find_vertex</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, <span class="keywordtype">id</span>, vtype);
<a name="l00514"></a>00514   <span class="comment">/*       d)    */</span>
<a name="l00515"></a>00515   <span class="keywordflow">if</span> (vertex)
<a name="l00516"></a>00516     {
<a name="l00517"></a>00517       <span class="comment">/*        1) */</span>
<a name="l00518"></a>00518 <span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<a name="l00519"></a>00519 <span class="preprocessor"></span>      <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Spf: process_N  %s %s dist %d&quot;</span>,
<a name="l00520"></a>00520           vtype2string (vtype), vid2string (vertex, buff), dist);
<a name="l00521"></a>00521 <span class="preprocessor">#endif </span><span class="comment">/* EXTREME_DEBUG */</span>
<a name="l00522"></a>00522       <span class="keywordflow">if</span> (vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a> == dist)
<a name="l00523"></a>00523     {
<a name="l00524"></a>00524       <span class="keywordflow">if</span> (adj)
<a name="l00525"></a>00525         <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a>, adj);
<a name="l00526"></a>00526       <span class="comment">/*      2) */</span>
<a name="l00527"></a>00527       <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a>) &gt; <a class="code" href="isis__constants_8h.html#afe8d4a9891abc5f7beba26a54d41ae41">ISIS_MAX_PATH_SPLITS</a>)
<a name="l00528"></a>00528         <a class="code" href="isis__spf_8c.html#aa8fc65e3edbbc537529f1c4b8461dcf3">remove_excess_adjs</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a>);
<a name="l00529"></a>00529       <span class="comment">/*      3) */</span>
<a name="l00530"></a>00530       <span class="keywordflow">return</span>;
<a name="l00531"></a>00531     }
<a name="l00532"></a>00532       <span class="keywordflow">else</span> <span class="keywordflow">if</span> (vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a> &lt; dist)
<a name="l00533"></a>00533     {
<a name="l00534"></a>00534       <span class="keywordflow">return</span>;
<a name="l00535"></a>00535       <span class="comment">/*      4) */</span>
<a name="l00536"></a>00536     }
<a name="l00537"></a>00537       <span class="keywordflow">else</span>
<a name="l00538"></a>00538     {
<a name="l00539"></a>00539       <a class="code" href="linklist_8c.html#a8cbdaa18db1ceacaadbc457a0c634e02">listnode_delete</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, vertex);
<a name="l00540"></a>00540     }
<a name="l00541"></a>00541     }
<a name="l00542"></a>00542 
<a name="l00543"></a>00543   <a class="code" href="isis__spf_8c.html#a675ae1b4432f4b54c3e01f9010f14772">isis_spf_add2tent</a> (spftree, vtype, <span class="keywordtype">id</span>, adj, dist, depth, family);
<a name="l00544"></a>00544   <span class="keywordflow">return</span>;
<a name="l00545"></a>00545 }
<a name="l00546"></a>00546 
<a name="l00547"></a>00547 <span class="comment">/*</span>
<a name="l00548"></a>00548 <span class="comment"> * C.2.6 Step 1</span>
<a name="l00549"></a>00549 <span class="comment"> */</span>
<a name="l00550"></a>00550 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00551"></a><a class="code" href="isis__spf_8c.html#a9af0930aa8513cf3ca85deab22e1a2b3">00551</a> <a class="code" href="isis__spf_8c.html#a9af0930aa8513cf3ca85deab22e1a2b3">isis_spf_process_lsp</a> (<span class="keyword">struct</span> <a class="code" href="structisis__spftree.html">isis_spftree</a> *spftree, <span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a> *<a class="code" href="structisis__vertex.html#a2016ca40d855164587629d620530ec1b">lsp</a>,
<a name="l00552"></a>00552               uint32_t cost, uint16_t <a class="code" href="structisis__vertex.html#a54212ccd6e7b1ca331f190fa4e252735">depth</a>, <span class="keywordtype">int</span> family)
<a name="l00553"></a>00553 {
<a name="l00554"></a>00554   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *fragnode = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00555"></a>00555   u_int16_t dist;
<a name="l00556"></a>00556   <span class="keyword">struct </span><a class="code" href="structis__neigh.html">is_neigh</a> *<a class="code" href="structis__neigh.html">is_neigh</a>;
<a name="l00557"></a>00557   <span class="keyword">struct </span><a class="code" href="structte__is__neigh.html">te_is_neigh</a> *<a class="code" href="structte__is__neigh.html">te_is_neigh</a>;
<a name="l00558"></a>00558   <span class="keyword">struct </span><a class="code" href="structipv4__reachability.html">ipv4_reachability</a> *ipreach;
<a name="l00559"></a>00559   <span class="keyword">struct </span><a class="code" href="structte__ipv4__reachability.html">te_ipv4_reachability</a> *te_ipv4_reach;
<a name="l00560"></a>00560   <span class="keyword">enum</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadc">vertextype</a> vtype;
<a name="l00561"></a>00561   <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> prefix;
<a name="l00562"></a>00562 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00563"></a>00563 <span class="preprocessor"></span>  <span class="keyword">struct </span>ipv6_reachability *ip6reach;
<a name="l00564"></a>00564 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l00565"></a>00565 
<a name="l00566"></a>00566 
<a name="l00567"></a>00567   <span class="keywordflow">if</span> (!lsp-&gt;<a class="code" href="structisis__lsp.html#a4481c48a70a19d351802ee561729fce3">adj</a>)
<a name="l00568"></a>00568     <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
<a name="l00569"></a>00569   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> || !<a class="code" href="isis__misc_8c.html#a8ede5433e1d31781300c8d5d123844f2">speaks</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a1e64fb03a35dacd896393c5a3fc06db1">nlpids</a>, family))
<a name="l00570"></a>00570     <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
<a name="l00571"></a>00571 
<a name="l00572"></a>00572 lspfragloop:
<a name="l00573"></a>00573   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a> == 0)
<a name="l00574"></a>00574     {
<a name="l00575"></a>00575       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;isis_spf_process_lsp(): lsp with 0 seq_num&quot;</span>
<a name="l00576"></a>00576          <span class="stringliteral">&quot; - do not process&quot;</span>);
<a name="l00577"></a>00577       <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
<a name="l00578"></a>00578     }
<a name="l00579"></a>00579 
<a name="l00580"></a>00580   <span class="keywordflow">if</span> (!<a class="code" href="isis__constants_8h.html#a639588aea28dd1c81a81576d97df28cb">ISIS_MASK_LSP_OL_BIT</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a405c4b662dc97846dcca65f5c851f485">lsp_bits</a>))
<a name="l00581"></a>00581     {
<a name="l00582"></a>00582       <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>)
<a name="l00583"></a>00583     {
<a name="l00584"></a>00584           <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>, node, is_neigh))
<a name="l00585"></a>00585         {
<a name="l00586"></a>00586           <span class="comment">/* C.2.6 a) */</span>
<a name="l00587"></a>00587           <span class="comment">/* Two way connectivity */</span>
<a name="l00588"></a>00588           <span class="keywordflow">if</span> (!<a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>, isis-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>))
<a name="l00589"></a>00589         <span class="keywordflow">continue</span>;
<a name="l00590"></a>00590           dist = cost + is_neigh-&gt;<a class="code" href="structis__neigh.html#a89a2c799e58b8ab95549581a06f2a53a">metrics</a>.<a class="code" href="structmetric.html#ae927ddb546511096f632820b678d73bf">metric_default</a>;
<a name="l00591"></a>00591           vtype = <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>) ? <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcafb01d0d49c5c5472181534c92dd6f7eb">VTYPE_PSEUDO_IS</a>
<a name="l00592"></a>00592         : <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcab49954312767a3354f9436d9e8b55879">VTYPE_NONPSEUDO_IS</a>;
<a name="l00593"></a>00593           <a class="code" href="isis__spf_8c.html#a8ce1d0bc17c2992001e52e80072c23b6">process_N</a> (spftree, vtype, (<span class="keywordtype">void</span> *) is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>, dist,
<a name="l00594"></a>00594              depth + 1, lsp-&gt;<a class="code" href="structisis__lsp.html#a4481c48a70a19d351802ee561729fce3">adj</a>, family);
<a name="l00595"></a>00595         }
<a name="l00596"></a>00596     }
<a name="l00597"></a>00597       <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>)
<a name="l00598"></a>00598     {
<a name="l00599"></a>00599       <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>, node,
<a name="l00600"></a>00600                      te_is_neigh))
<a name="l00601"></a>00601         {
<a name="l00602"></a>00602           uint32_t <a class="code" href="structmetric.html">metric</a>;
<a name="l00603"></a>00603           <span class="keywordflow">if</span> (!<a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>, isis-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>))
<a name="l00604"></a>00604         <span class="keywordflow">continue</span>;
<a name="l00605"></a>00605           <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;metric, te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#a7158aa6efe17579d240123affa0a543c">te_metric</a>, 3);
<a name="l00606"></a>00606           dist = cost + ntohl (metric &lt;&lt; 8);
<a name="l00607"></a>00607           vtype = <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>) ? <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca402426f39ccc62ae0920b3966eb86e03">VTYPE_PSEUDO_TE_IS</a>
<a name="l00608"></a>00608         : <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca1e82ec051fbdd19aaffa0360854f9b68">VTYPE_NONPSEUDO_TE_IS</a>;
<a name="l00609"></a>00609           <a class="code" href="isis__spf_8c.html#a8ce1d0bc17c2992001e52e80072c23b6">process_N</a> (spftree, vtype, (<span class="keywordtype">void</span> *) te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>, dist,
<a name="l00610"></a>00610              depth + 1, lsp-&gt;<a class="code" href="structisis__lsp.html#a4481c48a70a19d351802ee561729fce3">adj</a>, family);
<a name="l00611"></a>00611         }
<a name="l00612"></a>00612     }
<a name="l00613"></a>00613       <span class="keywordflow">if</span> (family == AF_INET &amp;&amp; lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a202838cf00b9aeb6f746c11c8a421642">ipv4_int_reachs</a>)
<a name="l00614"></a>00614     {
<a name="l00615"></a>00615       prefix.<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> = AF_INET;
<a name="l00616"></a>00616           <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a202838cf00b9aeb6f746c11c8a421642">ipv4_int_reachs</a>, 
<a name="l00617"></a>00617                                      node, ipreach))
<a name="l00618"></a>00618         {
<a name="l00619"></a>00619           dist = cost + ipreach-&gt;<a class="code" href="structipv4__reachability.html#a9fb77b6ac90d3fc4f7bfbd7f4843543a">metrics</a>.<a class="code" href="structmetric.html#ae927ddb546511096f632820b678d73bf">metric_default</a>;
<a name="l00620"></a>00620           vtype = <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca0cb69e553ae6caee606be4d93671b745">VTYPE_IPREACH_INTERNAL</a>;
<a name="l00621"></a>00621           prefix.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a> = ipreach-&gt;<a class="code" href="structipv4__reachability.html#a7ae516558fddb6aca89c864bd2d23d30">prefix</a>;
<a name="l00622"></a>00622           prefix.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> = <a class="code" href="prefix_8c.html#ab83ffad6b766ddd0ef87e4da228c322d">ip_masklen</a> (ipreach-&gt;<a class="code" href="structipv4__reachability.html#a229b4c7635d0a94d260c0929125399ee">mask</a>);
<a name="l00623"></a>00623           <a class="code" href="isis__spf_8c.html#a8ce1d0bc17c2992001e52e80072c23b6">process_N</a> (spftree, vtype, (<span class="keywordtype">void</span> *) &amp;prefix, dist, depth + 1,
<a name="l00624"></a>00624              lsp-&gt;<a class="code" href="structisis__lsp.html#a4481c48a70a19d351802ee561729fce3">adj</a>, family);
<a name="l00625"></a>00625         }
<a name="l00626"></a>00626     }
<a name="l00627"></a>00627 
<a name="l00628"></a>00628       <span class="keywordflow">if</span> (family == AF_INET &amp;&amp; lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a24de94a53f11ec8f24e9f133ba2f63c3">ipv4_ext_reachs</a>)
<a name="l00629"></a>00629     {
<a name="l00630"></a>00630       prefix.<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> = AF_INET;
<a name="l00631"></a>00631           <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a24de94a53f11ec8f24e9f133ba2f63c3">ipv4_ext_reachs</a>,
<a name="l00632"></a>00632                                      node, ipreach))
<a name="l00633"></a>00633         {
<a name="l00634"></a>00634           dist = cost + ipreach-&gt;<a class="code" href="structipv4__reachability.html#a9fb77b6ac90d3fc4f7bfbd7f4843543a">metrics</a>.<a class="code" href="structmetric.html#ae927ddb546511096f632820b678d73bf">metric_default</a>;
<a name="l00635"></a>00635           vtype = <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcac5b5e03da1298700e72fc9b7e58bb1da">VTYPE_IPREACH_EXTERNAL</a>;
<a name="l00636"></a>00636           prefix.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a> = ipreach-&gt;<a class="code" href="structipv4__reachability.html#a7ae516558fddb6aca89c864bd2d23d30">prefix</a>;
<a name="l00637"></a>00637           prefix.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> = <a class="code" href="prefix_8c.html#ab83ffad6b766ddd0ef87e4da228c322d">ip_masklen</a> (ipreach-&gt;<a class="code" href="structipv4__reachability.html#a229b4c7635d0a94d260c0929125399ee">mask</a>);
<a name="l00638"></a>00638           <a class="code" href="isis__spf_8c.html#a8ce1d0bc17c2992001e52e80072c23b6">process_N</a> (spftree, vtype, (<span class="keywordtype">void</span> *) &amp;prefix, dist, depth + 1,
<a name="l00639"></a>00639              lsp-&gt;<a class="code" href="structisis__lsp.html#a4481c48a70a19d351802ee561729fce3">adj</a>, family);
<a name="l00640"></a>00640         }
<a name="l00641"></a>00641     }
<a name="l00642"></a>00642       <span class="keywordflow">if</span> (family == AF_INET &amp;&amp; lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac827f5db217d1de5cc2a58c9b5a9cf81">te_ipv4_reachs</a>)
<a name="l00643"></a>00643     {
<a name="l00644"></a>00644       prefix.<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> = AF_INET;
<a name="l00645"></a>00645       <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ac827f5db217d1de5cc2a58c9b5a9cf81">te_ipv4_reachs</a>,
<a name="l00646"></a>00646                      node, te_ipv4_reach))
<a name="l00647"></a>00647         {
<a name="l00648"></a>00648           dist = cost + ntohl (te_ipv4_reach-&gt;<a class="code" href="structte__ipv4__reachability.html#a9704689f0bbfff1997a158427765060e">te_metric</a>);
<a name="l00649"></a>00649           vtype = <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcabf3d2d72b3c42d753602198f061abd53">VTYPE_IPREACH_TE</a>;
<a name="l00650"></a>00650           prefix.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a> = <a class="code" href="isis__misc_8c.html#af795aa21c24ab7f8e6e942be669bfc34">newprefix2inaddr</a> (&amp;te_ipv4_reach-&gt;<a class="code" href="structte__ipv4__reachability.html#ad50dc67e9a53223f8083d85cbb727bfa">prefix_start</a>,
<a name="l00651"></a>00651                            te_ipv4_reach-&gt;<a class="code" href="structte__ipv4__reachability.html#ab886131ddaf522d8bc34610687a79309">control</a>);
<a name="l00652"></a>00652           prefix.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> = (te_ipv4_reach-&gt;<a class="code" href="structte__ipv4__reachability.html#ab886131ddaf522d8bc34610687a79309">control</a> &amp; 0x3F);
<a name="l00653"></a>00653           <a class="code" href="isis__spf_8c.html#a8ce1d0bc17c2992001e52e80072c23b6">process_N</a> (spftree, vtype, (<span class="keywordtype">void</span> *) &amp;prefix, dist, depth + 1,
<a name="l00654"></a>00654              lsp-&gt;<a class="code" href="structisis__lsp.html#a4481c48a70a19d351802ee561729fce3">adj</a>, family);
<a name="l00655"></a>00655         }
<a name="l00656"></a>00656     }
<a name="l00657"></a>00657 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00658"></a>00658 <span class="preprocessor"></span>      <span class="keywordflow">if</span> (family == AF_INET6 &amp;&amp; lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.ipv6_reachs)
<a name="l00659"></a>00659     {
<a name="l00660"></a>00660       prefix.<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> = AF_INET6;
<a name="l00661"></a>00661           <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.ipv6_reachs, 
<a name="l00662"></a>00662                                      node, ip6reach))
<a name="l00663"></a>00663         {
<a name="l00664"></a>00664           dist = cost + ip6reach-&gt;metric;
<a name="l00665"></a>00665           vtype = (ip6reach-&gt;control_info &amp; <a class="code" href="isis__tlv_8h.html#a8cdce234e266e12e1ee3f3f232a4d6c1">CTRL_INFO_DISTRIBUTION</a>) ?
<a name="l00666"></a>00666         VTYPE_IP6REACH_EXTERNAL : VTYPE_IP6REACH_INTERNAL;
<a name="l00667"></a>00667           prefix.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> = ip6reach-&gt;prefix_len;
<a name="l00668"></a>00668           <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;prefix.u.prefix6.s6_addr, ip6reach-&gt;<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>,
<a name="l00669"></a>00669               <a class="code" href="bgpd_8h.html#a472145011d944606a257487e80cc3ace">PSIZE</a> (ip6reach-&gt;prefix_len));
<a name="l00670"></a>00670           <a class="code" href="isis__spf_8c.html#a8ce1d0bc17c2992001e52e80072c23b6">process_N</a> (spftree, vtype, (<span class="keywordtype">void</span> *) &amp;prefix, dist, depth + 1,
<a name="l00671"></a>00671              lsp-&gt;<a class="code" href="structisis__lsp.html#a4481c48a70a19d351802ee561729fce3">adj</a>, family);
<a name="l00672"></a>00672         }
<a name="l00673"></a>00673     }
<a name="l00674"></a>00674 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l00675"></a>00675     }
<a name="l00676"></a>00676 
<a name="l00677"></a>00677   <span class="keywordflow">if</span> (fragnode == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00678"></a>00678     fragnode = <a class="code" href="linklist_8h.html#a3d4492ca03b023aeecd4d6b0cdaa16fb">listhead</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a>);
<a name="l00679"></a>00679   <span class="keywordflow">else</span>
<a name="l00680"></a>00680     fragnode = <a class="code" href="linklist_8h.html#ad3f7fe9d8d096c4afc1bdd5b1f46c5bb">listnextnode</a> (fragnode);
<a name="l00681"></a>00681 
<a name="l00682"></a>00682   <span class="keywordflow">if</span> (fragnode)
<a name="l00683"></a>00683     {
<a name="l00684"></a>00684       lsp = <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (fragnode);
<a name="l00685"></a>00685       <span class="keywordflow">goto</span> lspfragloop;
<a name="l00686"></a>00686     }
<a name="l00687"></a>00687 
<a name="l00688"></a>00688   <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
<a name="l00689"></a>00689 }
<a name="l00690"></a>00690 
<a name="l00691"></a>00691 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00692"></a><a class="code" href="isis__spf_8c.html#ac2123d57c5010928d7a3685589d0eac9">00692</a> <a class="code" href="isis__spf_8c.html#ac2123d57c5010928d7a3685589d0eac9">isis_spf_process_pseudo_lsp</a> (<span class="keyword">struct</span> <a class="code" href="structisis__spftree.html">isis_spftree</a> *spftree,
<a name="l00693"></a>00693                  <span class="keyword">struct</span> <a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp, uint16_t cost,
<a name="l00694"></a>00694                  uint16_t depth, <span class="keywordtype">int</span> family)
<a name="l00695"></a>00695 {
<a name="l00696"></a>00696   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *fragnode = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00697"></a>00697   <span class="keyword">struct </span><a class="code" href="structis__neigh.html">is_neigh</a> *<a class="code" href="structis__neigh.html">is_neigh</a>;
<a name="l00698"></a>00698   <span class="keyword">struct </span><a class="code" href="structte__is__neigh.html">te_is_neigh</a> *<a class="code" href="structte__is__neigh.html">te_is_neigh</a>;
<a name="l00699"></a>00699   <span class="keyword">enum</span> <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadc">vertextype</a> vtype;
<a name="l00700"></a>00700 
<a name="l00701"></a>00701 pseudofragloop:
<a name="l00702"></a>00702 
<a name="l00703"></a>00703   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a10657aa355e049b928c9b1cea37bd9d9">seq_num</a> == 0)
<a name="l00704"></a>00704     {
<a name="l00705"></a>00705       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;isis_spf_process_pseudo_lsp(): lsp with 0 seq_num&quot;</span>
<a name="l00706"></a>00706          <span class="stringliteral">&quot; - do not process&quot;</span>);
<a name="l00707"></a>00707       <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
<a name="l00708"></a>00708     }
<a name="l00709"></a>00709 
<a name="l00710"></a>00710   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>)
<a name="l00711"></a>00711     <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#a571d587f344a492326654832d513f63a">is_neighs</a>, node, is_neigh))
<a name="l00712"></a>00712       {
<a name="l00713"></a>00713     vtype = <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>) ? <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcafb01d0d49c5c5472181534c92dd6f7eb">VTYPE_PSEUDO_IS</a>
<a name="l00714"></a>00714       : <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcab49954312767a3354f9436d9e8b55879">VTYPE_NONPSEUDO_IS</a>;
<a name="l00715"></a>00715     <span class="comment">/* Two way connectivity */</span>
<a name="l00716"></a>00716     <span class="keywordflow">if</span> (!<a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>, isis-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>))
<a name="l00717"></a>00717       <span class="keywordflow">continue</span>;
<a name="l00718"></a>00718     <span class="keywordflow">if</span> (<a class="code" href="isis__spf_8c.html#a2518d1c61e9645d59df254f0d1e57c98">isis_find_vertex</a>
<a name="l00719"></a>00719         (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, (<span class="keywordtype">void</span> *) is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>, vtype) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>
<a name="l00720"></a>00720         &amp;&amp; <a class="code" href="isis__spf_8c.html#a2518d1c61e9645d59df254f0d1e57c98">isis_find_vertex</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>, (<span class="keywordtype">void</span> *) is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>,
<a name="l00721"></a>00721                    vtype) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00722"></a>00722       {
<a name="l00723"></a>00723         <span class="comment">/* C.2.5 i) */</span>
<a name="l00724"></a>00724         <a class="code" href="isis__spf_8c.html#a675ae1b4432f4b54c3e01f9010f14772">isis_spf_add2tent</a> (spftree, vtype, is_neigh-&gt;<a class="code" href="structis__neigh.html#a133612c7ce92a57c785bbc2cbe1d0ec7">neigh_id</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a4481c48a70a19d351802ee561729fce3">adj</a>,
<a name="l00725"></a>00725                  cost, depth, family);
<a name="l00726"></a>00726       }
<a name="l00727"></a>00727       }
<a name="l00728"></a>00728   <span class="keywordflow">if</span> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>)
<a name="l00729"></a>00729     <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#a06afb4b2fda4fb75a8f4c6b536f9c42d">tlv_data</a>.<a class="code" href="structtlvs.html#ae29c0c82bc5fb058e1d72eb55d1c76ac">te_is_neighs</a>, node, te_is_neigh))
<a name="l00730"></a>00730       {
<a name="l00731"></a>00731     vtype = <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>) ? <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca402426f39ccc62ae0920b3966eb86e03">VTYPE_PSEUDO_TE_IS</a>
<a name="l00732"></a>00732       : <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca1e82ec051fbdd19aaffa0360854f9b68">VTYPE_NONPSEUDO_TE_IS</a>;
<a name="l00733"></a>00733     <span class="comment">/* Two way connectivity */</span>
<a name="l00734"></a>00734     <span class="keywordflow">if</span> (!<a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>, isis-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>))
<a name="l00735"></a>00735       <span class="keywordflow">continue</span>;
<a name="l00736"></a>00736     <span class="keywordflow">if</span> (<a class="code" href="isis__spf_8c.html#a2518d1c61e9645d59df254f0d1e57c98">isis_find_vertex</a>
<a name="l00737"></a>00737         (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, (<span class="keywordtype">void</span> *) te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>, vtype) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>
<a name="l00738"></a>00738         &amp;&amp; <a class="code" href="isis__spf_8c.html#a2518d1c61e9645d59df254f0d1e57c98">isis_find_vertex</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>, (<span class="keywordtype">void</span> *) te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>,
<a name="l00739"></a>00739                  vtype) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00740"></a>00740       {
<a name="l00741"></a>00741         <span class="comment">/* C.2.5 i) */</span>
<a name="l00742"></a>00742         <a class="code" href="isis__spf_8c.html#a675ae1b4432f4b54c3e01f9010f14772">isis_spf_add2tent</a> (spftree, vtype, te_is_neigh-&gt;<a class="code" href="structte__is__neigh.html#aeac52df557a764c20753943d4f475203">neigh_id</a>, lsp-&gt;<a class="code" href="structisis__lsp.html#a4481c48a70a19d351802ee561729fce3">adj</a>,
<a name="l00743"></a>00743                    cost, depth, family);
<a name="l00744"></a>00744       }
<a name="l00745"></a>00745       }
<a name="l00746"></a>00746 
<a name="l00747"></a>00747   <span class="keywordflow">if</span> (fragnode == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00748"></a>00748     fragnode = <a class="code" href="linklist_8h.html#a3d4492ca03b023aeecd4d6b0cdaa16fb">listhead</a> (lsp-&gt;<a class="code" href="structisis__lsp.html#aaee1ddd81507d4a129711c6385e32c3e">lspu</a>.<a class="code" href="structisis__lsp.html#acca312187c5812b70485d18fdc60b986">frags</a>);
<a name="l00749"></a>00749   <span class="keywordflow">else</span>
<a name="l00750"></a>00750     fragnode = <a class="code" href="linklist_8h.html#ad3f7fe9d8d096c4afc1bdd5b1f46c5bb">listnextnode</a> (fragnode);
<a name="l00751"></a>00751 
<a name="l00752"></a>00752   <span class="keywordflow">if</span> (fragnode)
<a name="l00753"></a>00753     {
<a name="l00754"></a>00754       lsp = <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (fragnode);
<a name="l00755"></a>00755       <span class="keywordflow">goto</span> pseudofragloop;
<a name="l00756"></a>00756     }
<a name="l00757"></a>00757 
<a name="l00758"></a>00758   <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
<a name="l00759"></a>00759 }
<a name="l00760"></a>00760 
<a name="l00761"></a>00761 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00762"></a><a class="code" href="isis__spf_8c.html#af0dd2970c85e1c26cabf64504256b664">00762</a> <a class="code" href="isis__spf_8c.html#af0dd2970c85e1c26cabf64504256b664">isis_spf_preload_tent</a> (<span class="keyword">struct</span> <a class="code" href="structisis__spftree.html">isis_spftree</a> *spftree,
<a name="l00763"></a>00763                <span class="keyword">struct</span> <a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>, <span class="keywordtype">int</span> level, <span class="keywordtype">int</span> family)
<a name="l00764"></a>00764 {
<a name="l00765"></a>00765   <span class="keyword">struct </span><a class="code" href="structisis__vertex.html">isis_vertex</a> *vertex;
<a name="l00766"></a>00766   <span class="keyword">struct </span><a class="code" href="structisis__circuit.html">isis_circuit</a> *circuit;
<a name="l00767"></a>00767   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *cnode, *anode, *ipnode;
<a name="l00768"></a>00768   <span class="keyword">struct </span><a class="code" href="structisis__adjacency.html">isis_adjacency</a> *adj;
<a name="l00769"></a>00769   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
<a name="l00770"></a>00770   <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *adj_list;
<a name="l00771"></a>00771   <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *adjdb;
<a name="l00772"></a>00772   <span class="keyword">struct </span><a class="code" href="structprefix__ipv4.html">prefix_ipv4</a> *ipv4;
<a name="l00773"></a>00773   <span class="keyword">struct </span><a class="code" href="structprefix.html">prefix</a> prefix;
<a name="l00774"></a>00774   <span class="keywordtype">int</span> retval = <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
<a name="l00775"></a>00775   u_char <a class="code" href="isis__pdu_8h.html#a2991a019d1da82fb5406bff5ab46dcf6">lsp_id</a>[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 2];
<a name="l00776"></a>00776 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00777"></a>00777 <span class="preprocessor"></span>  <span class="keyword">struct </span>prefix_ipv6 *ipv6;
<a name="l00778"></a>00778 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l00779"></a>00779 
<a name="l00780"></a>00780   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (area-&gt;<a class="code" href="structisis__area.html#a1ef8753b22245b7d8fff0331deef3b21">circuit_list</a>, cnode, circuit))
<a name="l00781"></a>00781     {
<a name="l00782"></a>00782       <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a7491f48eafb46ce87d7041bd7959633b">state</a> != <a class="code" href="isis__csm_8h.html#a65d367a002446ae64678b4586f5e2cc5">C_STATE_UP</a>)
<a name="l00783"></a>00783     <span class="keywordflow">continue</span>;
<a name="l00784"></a>00784       <span class="keywordflow">if</span> (!(circuit-&gt;<a class="code" href="structisis__circuit.html#ab222d6d0b054faa159d72bcb9768b3fb">circuit_is_type</a> &amp; level))
<a name="l00785"></a>00785     <span class="keywordflow">continue</span>;
<a name="l00786"></a>00786       <span class="keywordflow">if</span> (family == AF_INET &amp;&amp; !circuit-&gt;<a class="code" href="structisis__circuit.html#a9dbb2266ee5b76604a27fd0855e910f5">ip_router</a>)
<a name="l00787"></a>00787     <span class="keywordflow">continue</span>;
<a name="l00788"></a>00788 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00789"></a>00789 <span class="preprocessor"></span>      <span class="keywordflow">if</span> (family == AF_INET6 &amp;&amp; !circuit-&gt;ipv6_router)
<a name="l00790"></a>00790     <span class="keywordflow">continue</span>;
<a name="l00791"></a>00791 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l00792"></a>00792       <span class="comment">/* </span>
<a name="l00793"></a>00793 <span class="comment">       * Add IP(v6) addresses of this circuit</span>
<a name="l00794"></a>00794 <span class="comment">       */</span>
<a name="l00795"></a>00795       <span class="keywordflow">if</span> (family == AF_INET)
<a name="l00796"></a>00796     {
<a name="l00797"></a>00797       prefix.<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> = AF_INET;
<a name="l00798"></a>00798           <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (circuit-&gt;<a class="code" href="structisis__circuit.html#adcde796f44a1e725abe092f95a6cb075">ip_addrs</a>, ipnode, ipv4))
<a name="l00799"></a>00799         {
<a name="l00800"></a>00800           prefix.u.<a class="code" href="structprefix.html#ab37b8922554b41b7dc2417d8f37e7829">prefix4</a> = ipv4-&gt;prefix;
<a name="l00801"></a>00801           prefix.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> = ipv4-&gt;<a class="code" href="structprefix__ipv4.html#ab96da4bf1eb37195bd564bcf1126a16a">prefixlen</a>;
<a name="l00802"></a>00802           <a class="code" href="isis__spf_8c.html#acf6df462d44d1eaca9a45ff3faf500e7">isis_spf_add_local</a> (spftree, <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca0cb69e553ae6caee606be4d93671b745">VTYPE_IPREACH_INTERNAL</a>, &amp;prefix,
<a name="l00803"></a>00803                   <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0, family);
<a name="l00804"></a>00804         }
<a name="l00805"></a>00805     }
<a name="l00806"></a>00806 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00807"></a>00807 <span class="preprocessor"></span>      <span class="keywordflow">if</span> (family == AF_INET6)
<a name="l00808"></a>00808     {
<a name="l00809"></a>00809       prefix.<a class="code" href="structprefix.html#a3848d44348192dc4de7ac89e317399bd">family</a> = AF_INET6;
<a name="l00810"></a>00810       <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (circuit-&gt;ipv6_non_link, ipnode, ipv6))
<a name="l00811"></a>00811         {
<a name="l00812"></a>00812           prefix.<a class="code" href="structprefix.html#aae8dafba4797d25cf1d141780d87ff02">prefixlen</a> = ipv6-&gt;prefixlen;
<a name="l00813"></a>00813           prefix.u.prefix6 = ipv6-&gt;<a class="code" href="structprefix.html#af508982a05429729278c96708bd9e337">prefix</a>;
<a name="l00814"></a>00814           <a class="code" href="isis__spf_8c.html#acf6df462d44d1eaca9a45ff3faf500e7">isis_spf_add_local</a> (spftree, VTYPE_IP6REACH_INTERNAL,
<a name="l00815"></a>00815                   &amp;prefix, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0, family);
<a name="l00816"></a>00816         }
<a name="l00817"></a>00817     }
<a name="l00818"></a>00818 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l00819"></a>00819       <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a569e39bbf7fafd533eae2eeafa671b8c">circ_type</a> == <a class="code" href="isis__circuit_8h.html#a01a94c5f24c88efb64f791a749ae8f95">CIRCUIT_T_BROADCAST</a>)
<a name="l00820"></a>00820     {
<a name="l00821"></a>00821       <span class="comment">/*</span>
<a name="l00822"></a>00822 <span class="comment">       * Add the adjacencies</span>
<a name="l00823"></a>00823 <span class="comment">       */</span>
<a name="l00824"></a>00824       adj_list = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a> ();
<a name="l00825"></a>00825       adjdb = circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#ada9bf2584373a37aed06b2e4c9e796f9">adjdb</a>[level - 1];
<a name="l00826"></a>00826       <a class="code" href="isis__adjacency_8c.html#abcdb7608e2eb77b6e5f5bcc273c7c265">isis_adj_build_up_list</a> (adjdb, adj_list);
<a name="l00827"></a>00827       <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (adj_list) == 0)
<a name="l00828"></a>00828         {
<a name="l00829"></a>00829           <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (adj_list);
<a name="l00830"></a>00830           <span class="keywordflow">if</span> (isis-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#ae2c9cda71363e7c1ac3c8113551539b6">DEBUG_SPF_EVENTS</a>)
<a name="l00831"></a>00831         <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Spf: no L%d adjacencies on circuit %s&quot;</span>,
<a name="l00832"></a>00832                 level, circuit-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>);
<a name="l00833"></a>00833           <span class="keywordflow">continue</span>;
<a name="l00834"></a>00834         }
<a name="l00835"></a>00835       anode = <a class="code" href="linklist_8h.html#a3d4492ca03b023aeecd4d6b0cdaa16fb">listhead</a> (adj_list);
<a name="l00836"></a>00836       <span class="keywordflow">while</span> (anode)
<a name="l00837"></a>00837         {
<a name="l00838"></a>00838           adj = <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (anode);
<a name="l00839"></a>00839           <span class="keywordflow">if</span> (!<a class="code" href="isis__misc_8c.html#a8ede5433e1d31781300c8d5d123844f2">speaks</a> (&amp;adj-&gt;<a class="code" href="structisis__adjacency.html#a1c8f17ff6b70d8c457e8d2860909312c">nlpids</a>, family))
<a name="l00840"></a>00840         {
<a name="l00841"></a>00841           anode = <a class="code" href="linklist_8h.html#ad3f7fe9d8d096c4afc1bdd5b1f46c5bb">listnextnode</a> (anode);
<a name="l00842"></a>00842           <span class="keywordflow">continue</span>;
<a name="l00843"></a>00843         }
<a name="l00844"></a>00844           <span class="keywordflow">switch</span> (adj-&gt;<a class="code" href="structisis__adjacency.html#a187eb9cdad6881ecd2735b38a47e07e3">sys_type</a>)
<a name="l00845"></a>00845         {
<a name="l00846"></a>00846         <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4da0b5dc35b6ff6333177392a069af08ce1">ISIS_SYSTYPE_ES</a>:
<a name="l00847"></a>00847           <a class="code" href="isis__spf_8c.html#acf6df462d44d1eaca9a45ff3faf500e7">isis_spf_add_local</a> (spftree, <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca419bd242149145636d0c8ffa096893a0">VTYPE_ES</a>, adj-&gt;<a class="code" href="structisis__adjacency.html#a7b23942ae5652d5cf59b263f131c2038">sysid</a>, adj,
<a name="l00848"></a>00848                       circuit-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>[level - 1], family);
<a name="l00849"></a>00849           <span class="keywordflow">break</span>;
<a name="l00850"></a>00850         <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4da200778581ea795c59c48b27748eae10e">ISIS_SYSTYPE_IS</a>:
<a name="l00851"></a>00851         <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4daddebdf6ea1f78c8503dd520854310078">ISIS_SYSTYPE_L1_IS</a>:
<a name="l00852"></a>00852         <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4da615d7aa9f3d08cd8360e1b04a0b8806b">ISIS_SYSTYPE_L2_IS</a>:
<a name="l00853"></a>00853           vertex =
<a name="l00854"></a>00854             <a class="code" href="isis__spf_8c.html#acf6df462d44d1eaca9a45ff3faf500e7">isis_spf_add_local</a> (spftree, <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcab49954312767a3354f9436d9e8b55879">VTYPE_NONPSEUDO_IS</a>,
<a name="l00855"></a>00855                     adj-&gt;<a class="code" href="structisis__adjacency.html#a7b23942ae5652d5cf59b263f131c2038">sysid</a>, adj,
<a name="l00856"></a>00856                     circuit-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>[level - 1], family);
<a name="l00857"></a>00857           <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (lsp_id, adj-&gt;<a class="code" href="structisis__adjacency.html#a7b23942ae5652d5cf59b263f131c2038">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>);
<a name="l00858"></a>00858           <a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (lsp_id) = 0;
<a name="l00859"></a>00859           <a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (lsp_id) = 0;
<a name="l00860"></a>00860           lsp = <a class="code" href="isis__lsp_8c.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (lsp_id, area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level - 1]);
<a name="l00861"></a>00861           <span class="keywordflow">if</span> (!lsp)
<a name="l00862"></a>00862             <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;No lsp found for IS adjacency&quot;</span>);
<a name="l00863"></a>00863           <span class="comment">/*          else {</span>
<a name="l00864"></a>00864 <span class="comment">             isis_spf_process_lsp (spftree, lsp, vertex-&gt;d_N, 1, family);</span>
<a name="l00865"></a>00865 <span class="comment">             } */</span>
<a name="l00866"></a>00866           <span class="keywordflow">break</span>;
<a name="l00867"></a>00867         <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4da1d20bc4d429708dd9bc81735bd176618">ISIS_SYSTYPE_UNKNOWN</a>:
<a name="l00868"></a>00868         <span class="keywordflow">default</span>:
<a name="l00869"></a>00869           <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;isis_spf_preload_tent unknow adj type&quot;</span>);
<a name="l00870"></a>00870         }
<a name="l00871"></a>00871           anode = <a class="code" href="linklist_8h.html#ad3f7fe9d8d096c4afc1bdd5b1f46c5bb">listnextnode</a> (anode);
<a name="l00872"></a>00872         }
<a name="l00873"></a>00873       <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a> (adj_list);
<a name="l00874"></a>00874       <span class="comment">/*</span>
<a name="l00875"></a>00875 <span class="comment">       * Add the pseudonode </span>
<a name="l00876"></a>00876 <span class="comment">       */</span>
<a name="l00877"></a>00877       <span class="keywordflow">if</span> (level == 1)
<a name="l00878"></a>00878         <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (lsp_id, circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a015b72bf5854d99b722f9f599b9eb158">l1_desig_is</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 1);
<a name="l00879"></a>00879       <span class="keywordflow">else</span>
<a name="l00880"></a>00880         <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (lsp_id, circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#a2bde5462284eb2b294ed998fb5907de8">l2_desig_is</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 1);
<a name="l00881"></a>00881       lsp = <a class="code" href="isis__lsp_8c.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (lsp_id, area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level - 1]);
<a name="l00882"></a>00882       adj = <a class="code" href="isis__adjacency_8c.html#af928a678a2e0e3296d688be2a4d8e7ac">isis_adj_lookup</a> (lsp_id, adjdb);
<a name="l00883"></a>00883       <span class="comment">/* if no adj, we are the dis or error */</span>
<a name="l00884"></a>00884       <span class="keywordflow">if</span> (!adj &amp;&amp; !circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a921ef29acc454e98615e0269f3bc926e">bc</a>.<a class="code" href="structisis__bcast__info.html#adb24376d01beb41cab0ed0c49c3a214c">is_dr</a>[level - 1])
<a name="l00885"></a>00885         {
<a name="l00886"></a>00886           <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;ISIS-Spf: No adjacency found for DR&quot;</span>);
<a name="l00887"></a>00887         }
<a name="l00888"></a>00888       <span class="keywordflow">if</span> (lsp == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> || lsp-&gt;<a class="code" href="structisis__lsp.html#a3e4328d15b43f9023fee75d60f08aca0">lsp_header</a>-&gt;<a class="code" href="structisis__link__state__hdr.html#a21ef956c03ac1cb9f67cbef6faa12052">rem_lifetime</a> == 0)
<a name="l00889"></a>00889         {
<a name="l00890"></a>00890           <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;ISIS-Spf: No lsp found for DR&quot;</span>);
<a name="l00891"></a>00891         }
<a name="l00892"></a>00892       <span class="keywordflow">else</span>
<a name="l00893"></a>00893         {
<a name="l00894"></a>00894           <a class="code" href="isis__spf_8c.html#ac2123d57c5010928d7a3685589d0eac9">isis_spf_process_pseudo_lsp</a> (spftree, lsp,
<a name="l00895"></a>00895                   circuit-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>[level - 1], 0, family);
<a name="l00896"></a>00896 
<a name="l00897"></a>00897         }
<a name="l00898"></a>00898     }
<a name="l00899"></a>00899       <span class="keywordflow">else</span> <span class="keywordflow">if</span> (circuit-&gt;<a class="code" href="structisis__circuit.html#a569e39bbf7fafd533eae2eeafa671b8c">circ_type</a> == <a class="code" href="isis__circuit_8h.html#aa2113a49e7c75a5d4997d59df0530726">CIRCUIT_T_P2P</a>)
<a name="l00900"></a>00900     {
<a name="l00901"></a>00901       adj = circuit-&gt;<a class="code" href="structisis__circuit.html#a054734bc8d5a177c375cd28ab313dfc4">u</a>.<a class="code" href="structisis__circuit.html#a15852a59ea8be80680abac2070659440">p2p</a>.<a class="code" href="structisis__p2p__info.html#a17d32289e6648b9855b93482cd7c45a5">neighbor</a>;
<a name="l00902"></a>00902       <span class="keywordflow">if</span> (!adj)
<a name="l00903"></a>00903         <span class="keywordflow">continue</span>;
<a name="l00904"></a>00904       <span class="keywordflow">switch</span> (adj-&gt;<a class="code" href="structisis__adjacency.html#a187eb9cdad6881ecd2735b38a47e07e3">sys_type</a>)
<a name="l00905"></a>00905         {
<a name="l00906"></a>00906         <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4da0b5dc35b6ff6333177392a069af08ce1">ISIS_SYSTYPE_ES</a>:
<a name="l00907"></a>00907           <a class="code" href="isis__spf_8c.html#acf6df462d44d1eaca9a45ff3faf500e7">isis_spf_add_local</a> (spftree, <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca419bd242149145636d0c8ffa096893a0">VTYPE_ES</a>, adj-&gt;<a class="code" href="structisis__adjacency.html#a7b23942ae5652d5cf59b263f131c2038">sysid</a>, adj,
<a name="l00908"></a>00908                   circuit-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>[level - 1], family);
<a name="l00909"></a>00909           <span class="keywordflow">break</span>;
<a name="l00910"></a>00910         <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4da200778581ea795c59c48b27748eae10e">ISIS_SYSTYPE_IS</a>:
<a name="l00911"></a>00911         <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4daddebdf6ea1f78c8503dd520854310078">ISIS_SYSTYPE_L1_IS</a>:
<a name="l00912"></a>00912         <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4da615d7aa9f3d08cd8360e1b04a0b8806b">ISIS_SYSTYPE_L2_IS</a>:
<a name="l00913"></a>00913           <span class="keywordflow">if</span> (<a class="code" href="isis__misc_8c.html#a8ede5433e1d31781300c8d5d123844f2">speaks</a> (&amp;adj-&gt;<a class="code" href="structisis__adjacency.html#a1c8f17ff6b70d8c457e8d2860909312c">nlpids</a>, family))
<a name="l00914"></a>00914         <a class="code" href="isis__spf_8c.html#acf6df462d44d1eaca9a45ff3faf500e7">isis_spf_add_local</a> (spftree, <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcab49954312767a3354f9436d9e8b55879">VTYPE_NONPSEUDO_IS</a>, adj-&gt;<a class="code" href="structisis__adjacency.html#a7b23942ae5652d5cf59b263f131c2038">sysid</a>,
<a name="l00915"></a>00915                     adj, circuit-&gt;<a class="code" href="structisis__circuit.html#abf3f18b710cf84b23e7005c08e6594b2">te_metric</a>[level - 1],
<a name="l00916"></a>00916                     family);
<a name="l00917"></a>00917           <span class="keywordflow">break</span>;
<a name="l00918"></a>00918         <span class="keywordflow">case</span> <a class="code" href="isis__adjacency_8h.html#ad310c3cfba255c6c6dda415939268b4da1d20bc4d429708dd9bc81735bd176618">ISIS_SYSTYPE_UNKNOWN</a>:
<a name="l00919"></a>00919         <span class="keywordflow">default</span>:
<a name="l00920"></a>00920           <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;isis_spf_preload_tent unknow adj type&quot;</span>);
<a name="l00921"></a>00921           <span class="keywordflow">break</span>;
<a name="l00922"></a>00922         }
<a name="l00923"></a>00923     }
<a name="l00924"></a>00924       <span class="keywordflow">else</span>
<a name="l00925"></a>00925     {
<a name="l00926"></a>00926       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;isis_spf_preload_tent unsupported media&quot;</span>);
<a name="l00927"></a>00927       retval = <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
<a name="l00928"></a>00928     }
<a name="l00929"></a>00929 
<a name="l00930"></a>00930     }
<a name="l00931"></a>00931 
<a name="l00932"></a>00932   <span class="keywordflow">return</span> retval;
<a name="l00933"></a>00933 }
<a name="l00934"></a>00934 
<a name="l00935"></a>00935 <span class="comment">/*</span>
<a name="l00936"></a>00936 <span class="comment"> * The parent(s) for vertex is set when added to TENT list</span>
<a name="l00937"></a>00937 <span class="comment"> * now we just put the child pointer(s) in place</span>
<a name="l00938"></a>00938 <span class="comment"> */</span>
<a name="l00939"></a>00939 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00940"></a><a class="code" href="isis__spf_8c.html#a033281371ca01881f57ba7f61a29dc04">00940</a> <a class="code" href="isis__spf_8c.html#a033281371ca01881f57ba7f61a29dc04">add_to_paths</a> (<span class="keyword">struct</span> <a class="code" href="structisis__spftree.html">isis_spftree</a> *spftree, <span class="keyword">struct</span> <a class="code" href="structisis__vertex.html">isis_vertex</a> *vertex,
<a name="l00941"></a>00941           <span class="keyword">struct</span> <a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>, <span class="keywordtype">int</span> level)
<a name="l00942"></a>00942 {
<a name="l00943"></a>00943 <span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<a name="l00944"></a>00944 <span class="preprocessor"></span>  u_char buff[BUFSIZ];
<a name="l00945"></a>00945 <span class="preprocessor">#endif </span><span class="comment">/* EXTREME_DEBUG */</span>
<a name="l00946"></a>00946   <a class="code" href="linklist_8c.html#adb2a0478aba995441aaf691d1f6fe5db">listnode_add</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>, vertex);
<a name="l00947"></a>00947 
<a name="l00948"></a>00948 <span class="preprocessor">#ifdef EXTREME_DEBUG</span>
<a name="l00949"></a>00949 <span class="preprocessor"></span>  <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Spf: added  %s %s depth %d dist %d to PATHS&quot;</span>,
<a name="l00950"></a>00950           vtype2string (vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a>), vid2string (vertex, buff),
<a name="l00951"></a>00951           vertex-&gt;<a class="code" href="structisis__vertex.html#a54212ccd6e7b1ca331f190fa4e252735">depth</a>, vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>);
<a name="l00952"></a>00952 <span class="preprocessor">#endif </span><span class="comment">/* EXTREME_DEBUG */</span>
<a name="l00953"></a>00953   <span class="keywordflow">if</span> (vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a> &gt; <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadca419bd242149145636d0c8ffa096893a0">VTYPE_ES</a>)
<a name="l00954"></a>00954     {
<a name="l00955"></a>00955       <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a>) &gt; 0)
<a name="l00956"></a>00956     <a class="code" href="isis__route_8c.html#aab9698edd234fa804e2ad73832f36e54">isis_route_create</a> ((<span class="keyword">struct</span> <a class="code" href="structprefix.html">prefix</a> *) &amp;vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#adc4a56ae6383023d2654e44ef283a968">prefix</a>, vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>,
<a name="l00957"></a>00957                vertex-&gt;<a class="code" href="structisis__vertex.html#a54212ccd6e7b1ca331f190fa4e252735">depth</a>, vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a>, area, level);
<a name="l00958"></a>00958       <span class="keywordflow">else</span> <span class="keywordflow">if</span> (isis-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#ae2c9cda71363e7c1ac3c8113551539b6">DEBUG_SPF_EVENTS</a>)
<a name="l00959"></a>00959     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Spf: no adjacencies do not install route&quot;</span>);
<a name="l00960"></a>00960     }
<a name="l00961"></a>00961 
<a name="l00962"></a>00962   <span class="keywordflow">return</span>;
<a name="l00963"></a>00963 }
<a name="l00964"></a>00964 
<a name="l00965"></a>00965 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00966"></a><a class="code" href="isis__spf_8c.html#aab44d009968d88ebde5ea447a8bb91a6">00966</a> <a class="code" href="isis__spf_8c.html#aab44d009968d88ebde5ea447a8bb91a6">init_spt</a> (<span class="keyword">struct</span> <a class="code" href="structisis__spftree.html">isis_spftree</a> *spftree)
<a name="l00967"></a>00967 {
<a name="l00968"></a>00968   spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = spftree-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = (void (*)(<span class="keywordtype">void</span> *)) <a class="code" href="isis__spf_8c.html#a0cd21b0d39b2dabae3d8b273a75b9fb9">isis_vertex_del</a>;
<a name="l00969"></a>00969   <a class="code" href="linklist_8c.html#acd6daa4be8ab3f175376e63c9d9c9500">list_delete_all_node</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>);
<a name="l00970"></a>00970   <a class="code" href="linklist_8c.html#acd6daa4be8ab3f175376e63c9d9c9500">list_delete_all_node</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>);
<a name="l00971"></a>00971   spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = spftree-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00972"></a>00972 
<a name="l00973"></a>00973   <span class="keywordflow">return</span>;
<a name="l00974"></a>00974 }
<a name="l00975"></a>00975 
<a name="l00976"></a>00976 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00977"></a><a class="code" href="isis__spf_8c.html#add02c502bceaaadcb051fb31c84e215f">00977</a> <a class="code" href="isis__spf_8c.html#add02c502bceaaadcb051fb31c84e215f">isis_run_spf</a> (<span class="keyword">struct</span> <a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>, <span class="keywordtype">int</span> level, <span class="keywordtype">int</span> family)
<a name="l00978"></a>00978 {
<a name="l00979"></a>00979   <span class="keywordtype">int</span> retval = <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
<a name="l00980"></a>00980   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l00981"></a>00981   <span class="keyword">struct </span><a class="code" href="structisis__vertex.html">isis_vertex</a> *vertex;
<a name="l00982"></a>00982   <span class="keyword">struct </span><a class="code" href="structisis__spftree.html">isis_spftree</a> *spftree = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00983"></a>00983   u_char <a class="code" href="isis__pdu_8h.html#a2991a019d1da82fb5406bff5ab46dcf6">lsp_id</a>[<a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 2];
<a name="l00984"></a>00984   <span class="keyword">struct </span><a class="code" href="structisis__lsp.html">isis_lsp</a> *lsp;
<a name="l00985"></a>00985   <span class="keyword">struct </span><a class="code" href="structroute__table.html">route_table</a> *table = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00986"></a>00986   <span class="keyword">struct </span><a class="code" href="structroute__node.html">route_node</a> *rode;
<a name="l00987"></a>00987   <span class="keyword">struct </span><a class="code" href="structisis__route__info.html">isis_route_info</a> *rinfo;
<a name="l00988"></a>00988 
<a name="l00989"></a>00989   <span class="keywordflow">if</span> (family == AF_INET)
<a name="l00990"></a>00990     spftree = area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[level - 1];
<a name="l00991"></a>00991 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l00992"></a>00992 <span class="preprocessor"></span>  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (family == AF_INET6)
<a name="l00993"></a>00993     spftree = area-&gt;spftree6[level - 1];
<a name="l00994"></a>00994 <span class="preprocessor">#endif</span>
<a name="l00995"></a>00995 <span class="preprocessor"></span>
<a name="l00996"></a>00996   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (spftree);
<a name="l00997"></a>00997 
<a name="l00998"></a>00998   <span class="comment">/* Make all routes in current route table inactive. */</span>
<a name="l00999"></a>00999   <span class="keywordflow">if</span> (family == AF_INET)
<a name="l01000"></a>01000     table = area-&gt;<a class="code" href="structisis__area.html#aeb827fc46b0685e063fc0049183a17cb">route_table</a>[level - 1];
<a name="l01001"></a>01001 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l01002"></a>01002 <span class="preprocessor"></span>  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (family == AF_INET6)
<a name="l01003"></a>01003     table = area-&gt;route_table6[level - 1];
<a name="l01004"></a>01004 <span class="preprocessor">#endif</span>
<a name="l01005"></a>01005 <span class="preprocessor"></span>
<a name="l01006"></a>01006   <span class="keywordflow">for</span> (rode = <a class="code" href="table_8c.html#aee1d06c531794df326d946bdac647fb2">route_top</a> (table); rode; rode = <a class="code" href="table_8c.html#ad2addc694ecf6cd0cce57cb3a7d96902">route_next</a> (rode))
<a name="l01007"></a>01007     {
<a name="l01008"></a>01008       <span class="keywordflow">if</span> (rode-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l01009"></a>01009         <span class="keywordflow">continue</span>;
<a name="l01010"></a>01010       rinfo = rode-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>;
<a name="l01011"></a>01011 
<a name="l01012"></a>01012       <a class="code" href="zebra_8h.html#ab1ec1b6701a70280e13876cf1f6ae51d">UNSET_FLAG</a> (rinfo-&gt;<a class="code" href="structisis__route__info.html#ae301bfed55067a97479929d4d206e711">flag</a>, <a class="code" href="isis__route_8h.html#ad8a8597e10122462fa10436974565796">ISIS_ROUTE_FLAG_ACTIVE</a>);
<a name="l01013"></a>01013     }
<a name="l01014"></a>01014 
<a name="l01015"></a>01015   <span class="comment">/*</span>
<a name="l01016"></a>01016 <span class="comment">   * C.2.5 Step 0</span>
<a name="l01017"></a>01017 <span class="comment">   */</span>
<a name="l01018"></a>01018   <a class="code" href="isis__spf_8c.html#aab44d009968d88ebde5ea447a8bb91a6">init_spt</a> (spftree);
<a name="l01019"></a>01019   <span class="comment">/*              a) */</span>
<a name="l01020"></a>01020   <a class="code" href="isis__spf_8c.html#ace8c6b0e2357a48767ca25194ef20295">isis_spf_add_self</a> (spftree, area, level);
<a name="l01021"></a>01021   <span class="comment">/*              b) */</span>
<a name="l01022"></a>01022   retval = <a class="code" href="isis__spf_8c.html#af0dd2970c85e1c26cabf64504256b664">isis_spf_preload_tent</a> (spftree, area, level, family);
<a name="l01023"></a>01023 
<a name="l01024"></a>01024   <span class="comment">/*</span>
<a name="l01025"></a>01025 <span class="comment">   * C.2.7 Step 2</span>
<a name="l01026"></a>01026 <span class="comment">   */</span>
<a name="l01027"></a>01027   <span class="keywordflow">if</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>) == 0)
<a name="l01028"></a>01028     {
<a name="l01029"></a>01029       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;ISIS-Spf: TENT is empty&quot;</span>);
<a name="l01030"></a>01030       <span class="keywordflow">goto</span> out;
<a name="l01031"></a>01031     }
<a name="l01032"></a>01032 
<a name="l01033"></a>01033   <span class="keywordflow">while</span> (<a class="code" href="linklist_8h.html#a0429e6385b31a314cc64432a906201e5">listcount</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>) &gt; 0)
<a name="l01034"></a>01034     {
<a name="l01035"></a>01035       node = <a class="code" href="linklist_8h.html#a3d4492ca03b023aeecd4d6b0cdaa16fb">listhead</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>);
<a name="l01036"></a>01036       vertex = <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (node);
<a name="l01037"></a>01037       <span class="comment">/* Remove from tent list */</span>
<a name="l01038"></a>01038       <a class="code" href="linklist_8c.html#a44569d4d868c60e29b21409612a5df05">list_delete_node</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#aca985b91000f7eb8c2593a92f6bfe642">tents</a>, node);
<a name="l01039"></a>01039       <span class="keywordflow">if</span> (<a class="code" href="isis__spf_8c.html#a2518d1c61e9645d59df254f0d1e57c98">isis_find_vertex</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>, vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>, vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a>))
<a name="l01040"></a>01040     <span class="keywordflow">continue</span>;
<a name="l01041"></a>01041       <a class="code" href="isis__spf_8c.html#a033281371ca01881f57ba7f61a29dc04">add_to_paths</a> (spftree, vertex, area, level);
<a name="l01042"></a>01042       <span class="keywordflow">if</span> (vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a> == <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcafb01d0d49c5c5472181534c92dd6f7eb">VTYPE_PSEUDO_IS</a> ||
<a name="l01043"></a>01043       vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a> == <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcab49954312767a3354f9436d9e8b55879">VTYPE_NONPSEUDO_IS</a>)
<a name="l01044"></a>01044     {
<a name="l01045"></a>01045       <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (lsp_id, vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a> + 1);
<a name="l01046"></a>01046       <a class="code" href="isis__lsp_8h.html#a3d17e3f51a6b45aa8a777ec4b9ec3100">LSP_FRAGMENT</a> (lsp_id) = 0;
<a name="l01047"></a>01047       lsp = <a class="code" href="isis__lsp_8c.html#a3859237ab43b147f4520d060439ca002">lsp_search</a> (lsp_id, area-&gt;<a class="code" href="structisis__area.html#a2e85d570b957a6f8fc47dc4db6fa8f4e">lspdb</a>[level - 1]);
<a name="l01048"></a>01048       <span class="keywordflow">if</span> (lsp)
<a name="l01049"></a>01049         {
<a name="l01050"></a>01050           <span class="keywordflow">if</span> (<a class="code" href="isis__lsp_8h.html#a15ad7ce72dee875930a28bec035f7b71">LSP_PSEUDO_ID</a> (lsp_id))
<a name="l01051"></a>01051         {
<a name="l01052"></a>01052           <a class="code" href="isis__spf_8c.html#ac2123d57c5010928d7a3685589d0eac9">isis_spf_process_pseudo_lsp</a> (spftree, lsp, vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>,
<a name="l01053"></a>01053                            vertex-&gt;<a class="code" href="structisis__vertex.html#a54212ccd6e7b1ca331f190fa4e252735">depth</a>, family);
<a name="l01054"></a>01054 
<a name="l01055"></a>01055         }
<a name="l01056"></a>01056           <span class="keywordflow">else</span>
<a name="l01057"></a>01057         {
<a name="l01058"></a>01058           <a class="code" href="isis__spf_8c.html#a9af0930aa8513cf3ca85deab22e1a2b3">isis_spf_process_lsp</a> (spftree, lsp, vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>,
<a name="l01059"></a>01059                     vertex-&gt;<a class="code" href="structisis__vertex.html#a54212ccd6e7b1ca331f190fa4e252735">depth</a>, family);
<a name="l01060"></a>01060         }
<a name="l01061"></a>01061         }
<a name="l01062"></a>01062       <span class="keywordflow">else</span>
<a name="l01063"></a>01063         {
<a name="l01064"></a>01064           <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;ISIS-Spf: No LSP found for %s&quot;</span>,
<a name="l01065"></a>01065              <a class="code" href="isis__misc_8c.html#a3a0e7f92008e3167e2c09b8761d06766">rawlspid_print</a> (lsp_id));
<a name="l01066"></a>01066         }
<a name="l01067"></a>01067     }
<a name="l01068"></a>01068     }
<a name="l01069"></a>01069 
<a name="l01070"></a>01070 out:
<a name="l01071"></a>01071   <a class="code" href="thread_8h.html#a1067157ad59ad46f29bf87158dffc3de">thread_add_event</a> (master, <a class="code" href="isis__route_8c.html#acadb8339673b222300db8a8368aabb9a">isis_route_validate</a>, area, 0);
<a name="l01072"></a>01072   spftree-&gt;<a class="code" href="structisis__spftree.html#afaabe4a89270604118fb57db2eed62d0">lastrun</a> = time (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l01073"></a>01073   spftree-&gt;<a class="code" href="structisis__spftree.html#aa76c26c3083f8fe0179b98b7dc162287">pending</a> = 0;
<a name="l01074"></a>01074 
<a name="l01075"></a>01075   <span class="keywordflow">return</span> retval;
<a name="l01076"></a>01076 }
<a name="l01077"></a>01077 
<a name="l01078"></a>01078 <span class="keywordtype">int</span>
<a name="l01079"></a><a class="code" href="isis__spf_8c.html#a4520566d073115fc9dc2f9d50ca22b69">01079</a> <a class="code" href="isis__spf_8c.html#a4520566d073115fc9dc2f9d50ca22b69">isis_run_spf_l1</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l01080"></a>01080 {
<a name="l01081"></a>01081   <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01082"></a>01082   <span class="keywordtype">int</span> retval = <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
<a name="l01083"></a>01083 
<a name="l01084"></a>01084   area = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l01085"></a>01085   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (area);
<a name="l01086"></a>01086 
<a name="l01087"></a>01087   area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[0]-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01088"></a>01088 
<a name="l01089"></a>01089   <span class="keywordflow">if</span> (!(area-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>))
<a name="l01090"></a>01090     {
<a name="l01091"></a>01091       <span class="keywordflow">if</span> (isis-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#ae2c9cda71363e7c1ac3c8113551539b6">DEBUG_SPF_EVENTS</a>)
<a name="l01092"></a>01092     <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;ISIS-SPF (%s) area does not share level&quot;</span>,
<a name="l01093"></a>01093            area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>);
<a name="l01094"></a>01094       <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
<a name="l01095"></a>01095     }
<a name="l01096"></a>01096 
<a name="l01097"></a>01097   <span class="keywordflow">if</span> (isis-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#ae2c9cda71363e7c1ac3c8113551539b6">DEBUG_SPF_EVENTS</a>)
<a name="l01098"></a>01098     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Spf (%s) L1 SPF needed, periodic SPF&quot;</span>, area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>);
<a name="l01099"></a>01099 
<a name="l01100"></a>01100   <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a0b7b9b7b8a3eb903a0deb5c20791d761">ip_circuits</a>)
<a name="l01101"></a>01101     retval = <a class="code" href="isis__spf_8c.html#add02c502bceaaadcb051fb31c84e215f">isis_run_spf</a> (area, 1, AF_INET);
<a name="l01102"></a>01102 
<a name="l01103"></a>01103   <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[0]-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>, <a class="code" href="isis__spf_8c.html#a4520566d073115fc9dc2f9d50ca22b69">isis_run_spf_l1</a>, area,
<a name="l01104"></a>01104            <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (<a class="code" href="isis__constants_8h.html#aebbd3eae79162a9064e2487b56291ed7">PERIODIC_SPF_INTERVAL</a>, 10));
<a name="l01105"></a>01105 
<a name="l01106"></a>01106   <span class="keywordflow">return</span> retval;
<a name="l01107"></a>01107 }
<a name="l01108"></a>01108 
<a name="l01109"></a>01109 <span class="keywordtype">int</span>
<a name="l01110"></a><a class="code" href="isis__spf_8c.html#a4c4facf36367a44c51978f37f2eca79f">01110</a> <a class="code" href="isis__spf_8c.html#a4c4facf36367a44c51978f37f2eca79f">isis_run_spf_l2</a> (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l01111"></a>01111 {
<a name="l01112"></a>01112   <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01113"></a>01113   <span class="keywordtype">int</span> retval = <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
<a name="l01114"></a>01114 
<a name="l01115"></a>01115   area = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l01116"></a>01116   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (area);
<a name="l01117"></a>01117 
<a name="l01118"></a>01118   area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[1]-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01119"></a>01119 
<a name="l01120"></a>01120   <span class="keywordflow">if</span> (!(area-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a9daa7fbf09b604c718f3bbe189aedd1a">IS_LEVEL_2</a>))
<a name="l01121"></a>01121     {
<a name="l01122"></a>01122       <span class="keywordflow">if</span> (isis-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#ae2c9cda71363e7c1ac3c8113551539b6">DEBUG_SPF_EVENTS</a>)
<a name="l01123"></a>01123     <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;ISIS-SPF (%s) area does not share level&quot;</span>, area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>);
<a name="l01124"></a>01124       <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
<a name="l01125"></a>01125     }
<a name="l01126"></a>01126 
<a name="l01127"></a>01127   <span class="keywordflow">if</span> (isis-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#ae2c9cda71363e7c1ac3c8113551539b6">DEBUG_SPF_EVENTS</a>)
<a name="l01128"></a>01128     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Spf (%s) L2 SPF needed, periodic SPF&quot;</span>, area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>);
<a name="l01129"></a>01129 
<a name="l01130"></a>01130   <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a0b7b9b7b8a3eb903a0deb5c20791d761">ip_circuits</a>)
<a name="l01131"></a>01131     retval = <a class="code" href="isis__spf_8c.html#add02c502bceaaadcb051fb31c84e215f">isis_run_spf</a> (area, 2, AF_INET);
<a name="l01132"></a>01132 
<a name="l01133"></a>01133   <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[1]-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>, <a class="code" href="isis__spf_8c.html#a4c4facf36367a44c51978f37f2eca79f">isis_run_spf_l2</a>, area,
<a name="l01134"></a>01134            <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (<a class="code" href="isis__constants_8h.html#aebbd3eae79162a9064e2487b56291ed7">PERIODIC_SPF_INTERVAL</a>, 10));
<a name="l01135"></a>01135 
<a name="l01136"></a>01136   <span class="keywordflow">return</span> retval;
<a name="l01137"></a>01137 }
<a name="l01138"></a>01138 
<a name="l01139"></a>01139 <span class="keywordtype">int</span>
<a name="l01140"></a><a class="code" href="isis__spf_8h.html#a07d72d64d2b651d969695c1f26031678">01140</a> <a class="code" href="isis__spf_8c.html#a07d72d64d2b651d969695c1f26031678">isis_spf_schedule</a> (<span class="keyword">struct</span> <a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>, <span class="keywordtype">int</span> level)
<a name="l01141"></a>01141 {
<a name="l01142"></a>01142   <span class="keywordtype">int</span> retval = <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
<a name="l01143"></a>01143   <span class="keyword">struct </span><a class="code" href="structisis__spftree.html">isis_spftree</a> *spftree = area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[level - 1];
<a name="l01144"></a>01144   time_t diff, now = time (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l01145"></a>01145 
<a name="l01146"></a>01146   <span class="keywordflow">if</span> (spftree-&gt;<a class="code" href="structisis__spftree.html#aa76c26c3083f8fe0179b98b7dc162287">pending</a>)
<a name="l01147"></a>01147     <span class="keywordflow">return</span> retval;
<a name="l01148"></a>01148 
<a name="l01149"></a>01149   diff = now - spftree-&gt;<a class="code" href="structisis__spftree.html#afaabe4a89270604118fb57db2eed62d0">lastrun</a>;
<a name="l01150"></a>01150 
<a name="l01151"></a>01151   <span class="comment">/* FIXME: let&#39;s wait a minute before doing the SPF */</span>
<a name="l01152"></a>01152   <span class="keywordflow">if</span> (now - isis-&gt;<a class="code" href="structisis.html#a7560c4f290c42705c28c09f6268dfe39">uptime</a> &lt; 60 || isis-&gt;<a class="code" href="structisis.html#a7560c4f290c42705c28c09f6268dfe39">uptime</a> == 0)
<a name="l01153"></a>01153     {
<a name="l01154"></a>01154       <span class="keywordflow">if</span> (level == 1)
<a name="l01155"></a>01155     <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, spftree-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>, <a class="code" href="isis__spf_8c.html#a4520566d073115fc9dc2f9d50ca22b69">isis_run_spf_l1</a>, area, 60);
<a name="l01156"></a>01156       <span class="keywordflow">else</span>
<a name="l01157"></a>01157     <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, spftree-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>, <a class="code" href="isis__spf_8c.html#a4c4facf36367a44c51978f37f2eca79f">isis_run_spf_l2</a>, area, 60);
<a name="l01158"></a>01158 
<a name="l01159"></a>01159       spftree-&gt;<a class="code" href="structisis__spftree.html#aa76c26c3083f8fe0179b98b7dc162287">pending</a> = 1;
<a name="l01160"></a>01160       <span class="keywordflow">return</span> retval;
<a name="l01161"></a>01161     }
<a name="l01162"></a>01162 
<a name="l01163"></a>01163   <a class="code" href="thread_8h.html#ae1dfd3f5f643212148d60a41d9f2192a">THREAD_TIMER_OFF</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>);
<a name="l01164"></a>01164 
<a name="l01165"></a>01165   <span class="keywordflow">if</span> (diff &lt; <a class="code" href="isis__constants_8h.html#ad60624c29b72fad88c9709bba9748163">MINIMUM_SPF_INTERVAL</a>)
<a name="l01166"></a>01166     {
<a name="l01167"></a>01167       <span class="keywordflow">if</span> (level == 1)
<a name="l01168"></a>01168     <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, spftree-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>, <a class="code" href="isis__spf_8c.html#a4520566d073115fc9dc2f9d50ca22b69">isis_run_spf_l1</a>, area,
<a name="l01169"></a>01169              <a class="code" href="isis__constants_8h.html#ad60624c29b72fad88c9709bba9748163">MINIMUM_SPF_INTERVAL</a> - diff);
<a name="l01170"></a>01170       <span class="keywordflow">else</span>
<a name="l01171"></a>01171     <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, spftree-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>, <a class="code" href="isis__spf_8c.html#a4c4facf36367a44c51978f37f2eca79f">isis_run_spf_l2</a>, area,
<a name="l01172"></a>01172              <a class="code" href="isis__constants_8h.html#ad60624c29b72fad88c9709bba9748163">MINIMUM_SPF_INTERVAL</a> - diff);
<a name="l01173"></a>01173 
<a name="l01174"></a>01174       spftree-&gt;<a class="code" href="structisis__spftree.html#aa76c26c3083f8fe0179b98b7dc162287">pending</a> = 1;
<a name="l01175"></a>01175     }
<a name="l01176"></a>01176   <span class="keywordflow">else</span>
<a name="l01177"></a>01177     {
<a name="l01178"></a>01178       spftree-&gt;<a class="code" href="structisis__spftree.html#aa76c26c3083f8fe0179b98b7dc162287">pending</a> = 0;
<a name="l01179"></a>01179       retval = <a class="code" href="isis__spf_8c.html#add02c502bceaaadcb051fb31c84e215f">isis_run_spf</a> (area, level, AF_INET);
<a name="l01180"></a>01180       <span class="keywordflow">if</span> (level == 1)
<a name="l01181"></a>01181     <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, spftree-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>, <a class="code" href="isis__spf_8c.html#a4520566d073115fc9dc2f9d50ca22b69">isis_run_spf_l1</a>, area,
<a name="l01182"></a>01182              <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (<a class="code" href="isis__constants_8h.html#aebbd3eae79162a9064e2487b56291ed7">PERIODIC_SPF_INTERVAL</a>, 10));
<a name="l01183"></a>01183       <span class="keywordflow">else</span>
<a name="l01184"></a>01184     <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, spftree-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>, <a class="code" href="isis__spf_8c.html#a4c4facf36367a44c51978f37f2eca79f">isis_run_spf_l2</a>, area,
<a name="l01185"></a>01185              <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (<a class="code" href="isis__constants_8h.html#aebbd3eae79162a9064e2487b56291ed7">PERIODIC_SPF_INTERVAL</a>, 10));
<a name="l01186"></a>01186     }
<a name="l01187"></a>01187 
<a name="l01188"></a>01188   <span class="keywordflow">return</span> retval;
<a name="l01189"></a>01189 }
<a name="l01190"></a>01190 
<a name="l01191"></a>01191 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l01192"></a>01192 <span class="preprocessor"></span><span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l01193"></a>01193 isis_run_spf6_l1 (<span class="keyword">struct</span> <a class="code" href="structthread.html">thread</a> *<a class="code" href="structthread.html">thread</a>)
<a name="l01194"></a>01194 {
<a name="l01195"></a>01195   <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01196"></a>01196   <span class="keywordtype">int</span> retval = <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
<a name="l01197"></a>01197 
<a name="l01198"></a>01198   area = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l01199"></a>01199   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (area);
<a name="l01200"></a>01200 
<a name="l01201"></a>01201   area-&gt;spftree6[0]-&gt;t_spf = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01202"></a>01202 
<a name="l01203"></a>01203   <span class="keywordflow">if</span> (!(area-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a4806dbcd4c094ef55cecd6aca29520d7">IS_LEVEL_1</a>))
<a name="l01204"></a>01204     {
<a name="l01205"></a>01205       <span class="keywordflow">if</span> (isis-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#ae2c9cda71363e7c1ac3c8113551539b6">DEBUG_SPF_EVENTS</a>)
<a name="l01206"></a>01206     <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;ISIS-SPF (%s) area does not share level&quot;</span>, area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>);
<a name="l01207"></a>01207       <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
<a name="l01208"></a>01208     }
<a name="l01209"></a>01209 
<a name="l01210"></a>01210   <span class="keywordflow">if</span> (isis-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#ae2c9cda71363e7c1ac3c8113551539b6">DEBUG_SPF_EVENTS</a>)
<a name="l01211"></a>01211     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Spf (%s) L1 SPF needed, periodic SPF&quot;</span>, area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>);
<a name="l01212"></a>01212 
<a name="l01213"></a>01213   <span class="keywordflow">if</span> (area-&gt;ipv6_circuits)
<a name="l01214"></a>01214     retval = <a class="code" href="isis__spf_8c.html#add02c502bceaaadcb051fb31c84e215f">isis_run_spf</a> (area, 1, AF_INET6);
<a name="l01215"></a>01215 
<a name="l01216"></a>01216   <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, area-&gt;spftree6[0]-&gt;t_spf, isis_run_spf6_l1, area,
<a name="l01217"></a>01217            <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (<a class="code" href="isis__constants_8h.html#aebbd3eae79162a9064e2487b56291ed7">PERIODIC_SPF_INTERVAL</a>, 10));
<a name="l01218"></a>01218 
<a name="l01219"></a>01219   <span class="keywordflow">return</span> retval;
<a name="l01220"></a>01220 }
<a name="l01221"></a>01221 
<a name="l01222"></a>01222 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l01223"></a>01223 isis_run_spf6_l2 (<span class="keyword">struct</span> thread *thread)
<a name="l01224"></a>01224 {
<a name="l01225"></a>01225   <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01226"></a>01226   <span class="keywordtype">int</span> retval = <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
<a name="l01227"></a>01227 
<a name="l01228"></a>01228   area = <a class="code" href="thread_8h.html#a78f2ae47a7a334f7f74bfed7fda48e5a">THREAD_ARG</a> (thread);
<a name="l01229"></a>01229   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (area);
<a name="l01230"></a>01230 
<a name="l01231"></a>01231   area-&gt;spftree6[1]-&gt;t_spf = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01232"></a>01232 
<a name="l01233"></a>01233   <span class="keywordflow">if</span> (!(area-&gt;<a class="code" href="structisis__area.html#a81021eb6fb20d16db0d13c335baecdae">is_type</a> &amp; <a class="code" href="isis__constants_8h.html#a9daa7fbf09b604c718f3bbe189aedd1a">IS_LEVEL_2</a>))
<a name="l01234"></a>01234     {
<a name="l01235"></a>01235       <span class="keywordflow">if</span> (isis-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#ae2c9cda71363e7c1ac3c8113551539b6">DEBUG_SPF_EVENTS</a>)
<a name="l01236"></a>01236         <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;ISIS-SPF (%s) area does not share level&quot;</span>, area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>);
<a name="l01237"></a>01237       <span class="keywordflow">return</span> <a class="code" href="isis__constants_8h.html#a58479855936d63f1609867e2732ccb09">ISIS_WARNING</a>;
<a name="l01238"></a>01238     }
<a name="l01239"></a>01239 
<a name="l01240"></a>01240   <span class="keywordflow">if</span> (isis-&gt;<a class="code" href="structisis.html#a6e64127e274c1aa6a52cb0f4b541dfaa">debugs</a> &amp; <a class="code" href="isisd_8h.html#ae2c9cda71363e7c1ac3c8113551539b6">DEBUG_SPF_EVENTS</a>)
<a name="l01241"></a>01241     <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;ISIS-Spf (%s) L2 SPF needed, periodic SPF.&quot;</span>, area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a>);
<a name="l01242"></a>01242 
<a name="l01243"></a>01243   <span class="keywordflow">if</span> (area-&gt;ipv6_circuits)
<a name="l01244"></a>01244     retval = <a class="code" href="isis__spf_8c.html#add02c502bceaaadcb051fb31c84e215f">isis_run_spf</a> (area, 2, AF_INET6);
<a name="l01245"></a>01245 
<a name="l01246"></a>01246   <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, area-&gt;spftree6[1]-&gt;t_spf, isis_run_spf6_l2, area,
<a name="l01247"></a>01247            <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (<a class="code" href="isis__constants_8h.html#aebbd3eae79162a9064e2487b56291ed7">PERIODIC_SPF_INTERVAL</a>, 10));
<a name="l01248"></a>01248 
<a name="l01249"></a>01249   <span class="keywordflow">return</span> retval;
<a name="l01250"></a>01250 }
<a name="l01251"></a>01251 
<a name="l01252"></a>01252 <span class="keywordtype">int</span>
<a name="l01253"></a>01253 isis_spf_schedule6 (<span class="keyword">struct</span> <a class="code" href="structisis__area.html">isis_area</a> *area, <span class="keywordtype">int</span> level)
<a name="l01254"></a>01254 {
<a name="l01255"></a>01255   <span class="keywordtype">int</span> retval = <a class="code" href="isis__constants_8h.html#aeece0df48a5b652b227aeaeab5eef2f7">ISIS_OK</a>;
<a name="l01256"></a>01256   <span class="keyword">struct </span><a class="code" href="structisis__spftree.html">isis_spftree</a> *spftree = area-&gt;spftree6[level - 1];
<a name="l01257"></a>01257   time_t diff, now = time (<a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>);
<a name="l01258"></a>01258 
<a name="l01259"></a>01259   <span class="keywordflow">if</span> (spftree-&gt;<a class="code" href="structisis__spftree.html#aa76c26c3083f8fe0179b98b7dc162287">pending</a>)
<a name="l01260"></a>01260     <span class="keywordflow">return</span> retval;
<a name="l01261"></a>01261 
<a name="l01262"></a>01262   diff = now - spftree-&gt;<a class="code" href="structisis__spftree.html#afaabe4a89270604118fb57db2eed62d0">lastrun</a>;
<a name="l01263"></a>01263 
<a name="l01264"></a>01264   <span class="comment">/* FIXME: let&#39;s wait a minute before doing the SPF */</span>
<a name="l01265"></a>01265   <span class="keywordflow">if</span> (now - isis-&gt;<a class="code" href="structisis.html#a7560c4f290c42705c28c09f6268dfe39">uptime</a> &lt; 60 || isis-&gt;<a class="code" href="structisis.html#a7560c4f290c42705c28c09f6268dfe39">uptime</a> == 0)
<a name="l01266"></a>01266     {
<a name="l01267"></a>01267       <span class="keywordflow">if</span> (level == 1)
<a name="l01268"></a>01268     <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, spftree-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>, isis_run_spf6_l1, area, 60);
<a name="l01269"></a>01269       <span class="keywordflow">else</span>
<a name="l01270"></a>01270     <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, spftree-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>, isis_run_spf6_l2, area, 60);
<a name="l01271"></a>01271 
<a name="l01272"></a>01272       spftree-&gt;<a class="code" href="structisis__spftree.html#aa76c26c3083f8fe0179b98b7dc162287">pending</a> = 1;
<a name="l01273"></a>01273       <span class="keywordflow">return</span> retval;
<a name="l01274"></a>01274     }
<a name="l01275"></a>01275   
<a name="l01276"></a>01276   <a class="code" href="thread_8h.html#ae1dfd3f5f643212148d60a41d9f2192a">THREAD_TIMER_OFF</a> (spftree-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>);
<a name="l01277"></a>01277 
<a name="l01278"></a>01278   <span class="keywordflow">if</span> (diff &lt; <a class="code" href="isis__constants_8h.html#ad60624c29b72fad88c9709bba9748163">MINIMUM_SPF_INTERVAL</a>)
<a name="l01279"></a>01279     {
<a name="l01280"></a>01280       <span class="keywordflow">if</span> (level == 1)
<a name="l01281"></a>01281     <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, spftree-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>, isis_run_spf6_l1, area,
<a name="l01282"></a>01282              <a class="code" href="isis__constants_8h.html#ad60624c29b72fad88c9709bba9748163">MINIMUM_SPF_INTERVAL</a> - diff);
<a name="l01283"></a>01283       <span class="keywordflow">else</span>
<a name="l01284"></a>01284     <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, spftree-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>, isis_run_spf6_l2, area,
<a name="l01285"></a>01285              <a class="code" href="isis__constants_8h.html#ad60624c29b72fad88c9709bba9748163">MINIMUM_SPF_INTERVAL</a> - diff);
<a name="l01286"></a>01286 
<a name="l01287"></a>01287       spftree-&gt;<a class="code" href="structisis__spftree.html#aa76c26c3083f8fe0179b98b7dc162287">pending</a> = 1;
<a name="l01288"></a>01288     }
<a name="l01289"></a>01289   <span class="keywordflow">else</span>
<a name="l01290"></a>01290     {
<a name="l01291"></a>01291       spftree-&gt;<a class="code" href="structisis__spftree.html#aa76c26c3083f8fe0179b98b7dc162287">pending</a> = 0;
<a name="l01292"></a>01292       retval = <a class="code" href="isis__spf_8c.html#add02c502bceaaadcb051fb31c84e215f">isis_run_spf</a> (area, level, AF_INET6);
<a name="l01293"></a>01293 
<a name="l01294"></a>01294       <span class="keywordflow">if</span> (level == 1)
<a name="l01295"></a>01295     <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, spftree-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>, isis_run_spf6_l1, area,
<a name="l01296"></a>01296              <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (<a class="code" href="isis__constants_8h.html#aebbd3eae79162a9064e2487b56291ed7">PERIODIC_SPF_INTERVAL</a>, 10));
<a name="l01297"></a>01297       <span class="keywordflow">else</span>
<a name="l01298"></a>01298     <a class="code" href="thread_8h.html#a898ebeae19eb435889cbf53ea8b5120e">THREAD_TIMER_ON</a> (master, spftree-&gt;<a class="code" href="structisis__spftree.html#a53e79cdfdbaf858188df969e6d4cd704">t_spf</a>, isis_run_spf6_l2, area,
<a name="l01299"></a>01299              <a class="code" href="isis__misc_8c.html#a177a75676b1916fefb4eb7275911fb6e">isis_jitter</a> (<a class="code" href="isis__constants_8h.html#aebbd3eae79162a9064e2487b56291ed7">PERIODIC_SPF_INTERVAL</a>, 10));
<a name="l01300"></a>01300     }
<a name="l01301"></a>01301 
<a name="l01302"></a>01302   <span class="keywordflow">return</span> retval;
<a name="l01303"></a>01303 }
<a name="l01304"></a>01304 <span class="preprocessor">#endif</span>
<a name="l01305"></a>01305 <span class="preprocessor"></span>
<a name="l01306"></a>01306 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l01307"></a><a class="code" href="isis__spf_8c.html#a9eb38ec938541e088807bc46ba6558d1">01307</a> <a class="code" href="isis__spf_8c.html#a9eb38ec938541e088807bc46ba6558d1">isis_print_paths</a> (<span class="keyword">struct</span> <a class="code" href="structvty.html">vty</a> *<a class="code" href="structvty.html">vty</a>, <span class="keyword">struct</span> <a class="code" href="structlist.html">list</a> *<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>)
<a name="l01308"></a>01308 {
<a name="l01309"></a>01309   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l01310"></a>01310   <span class="keyword">struct </span><a class="code" href="structisis__vertex.html">isis_vertex</a> *vertex;
<a name="l01311"></a>01311   <span class="keyword">struct </span><a class="code" href="structisis__dynhn.html">isis_dynhn</a> *dyn, *nh_dyn = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l01312"></a>01312   <span class="keyword">struct </span><a class="code" href="structisis__adjacency.html">isis_adjacency</a> *adj;
<a name="l01313"></a>01313 <span class="preprocessor">#if 0</span>
<a name="l01314"></a>01314 <span class="preprocessor"></span>  u_char buff[255];
<a name="l01315"></a>01315 <span class="preprocessor">#endif </span><span class="comment">/* 0 */</span>
<a name="l01316"></a>01316 
<a name="l01317"></a>01317   <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;System Id            Metric     Next-Hop&quot;</span>
<a name="l01318"></a>01318        <span class="stringliteral">&quot;             Interface   SNPA%s&quot;</span>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01319"></a>01319 
<a name="l01320"></a>01320   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (paths, node, vertex))
<a name="l01321"></a>01321     {
<a name="l01322"></a>01322       <span class="keywordflow">if</span> (vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a> != <a class="code" href="isis__spf_8h.html#ac147b1907eb66e88db3e1c89dbc3aadcab49954312767a3354f9436d9e8b55879">VTYPE_NONPSEUDO_IS</a>)
<a name="l01323"></a>01323     <span class="keywordflow">continue</span>;
<a name="l01324"></a>01324       <span class="keywordflow">if</span> (<a class="code" href="regex_8c.html#a98d0dff0c7366f08562d8e8583df9bb9">memcmp</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>, isis-&gt;<a class="code" href="structisis.html#a769d4d051a0f424e8c0568b4eeef748e">sysid</a>, <a class="code" href="isis__constants_8h.html#aeda8abfdcc24dfb0ab327ea79ce453fc">ISIS_SYS_ID_LEN</a>) == 0)
<a name="l01325"></a>01325     {
<a name="l01326"></a>01326       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s             --%s&quot;</span>, <a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#ae29a96977a9350ec0d4323ccd38ebc9b">name</a>?<a class="code" href="structhost.html">host</a>.<a class="code" href="structhost.html#ae29a96977a9350ec0d4323ccd38ebc9b">name</a>:<span class="stringliteral">&quot;&quot;</span>,
<a name="l01327"></a>01327            <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01328"></a>01328     }
<a name="l01329"></a>01329       <span class="keywordflow">else</span>
<a name="l01330"></a>01330     {
<a name="l01331"></a>01331       dyn = <a class="code" href="isis__dynhn_8c.html#af341024c92c783b9493cc98f7f04ec28">dynhn_find_by_id</a> ((u_char *) vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>);
<a name="l01332"></a>01332       adj = <a class="code" href="linklist_8h.html#a574f1b7acbcea848771bd5ddc61e430a">listgetdata</a> (<a class="code" href="linklist_8h.html#a3d4492ca03b023aeecd4d6b0cdaa16fb">listhead</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#a92b117f38d6653ed629d3bc7a73086e4">Adj_N</a>));
<a name="l01333"></a>01333       <span class="keywordflow">if</span> (adj)
<a name="l01334"></a>01334         {
<a name="l01335"></a>01335           nh_dyn = <a class="code" href="isis__dynhn_8c.html#af341024c92c783b9493cc98f7f04ec28">dynhn_find_by_id</a> (adj-&gt;<a class="code" href="structisis__adjacency.html#a7b23942ae5652d5cf59b263f131c2038">sysid</a>);
<a name="l01336"></a>01336           <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%-20s %-10u %-20s %-11s %-5s%s&quot;</span>,
<a name="l01337"></a>01337                (dyn != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) ? dyn-&gt;<a class="code" href="structisis__dynhn.html#a96fbe0fb7c4de340a9ed9f191859ac34">name</a>.<a class="code" href="structhostname.html#a0a14b55c4a1b6d672adfaa81b95936f3">name</a> :
<a name="l01338"></a>01338                (<span class="keyword">const</span> u_char *)<a class="code" href="isis__misc_8c.html#a3a0e7f92008e3167e2c09b8761d06766">rawlspid_print</a> ((u_char *) vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>),
<a name="l01339"></a>01339                vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>, (nh_dyn != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>) ? nh_dyn-&gt;<a class="code" href="structisis__dynhn.html#a96fbe0fb7c4de340a9ed9f191859ac34">name</a>.<a class="code" href="structhostname.html#a0a14b55c4a1b6d672adfaa81b95936f3">name</a> :
<a name="l01340"></a>01340                (<span class="keyword">const</span> u_char *)<a class="code" href="isis__misc_8c.html#a3a0e7f92008e3167e2c09b8761d06766">rawlspid_print</a> (adj-&gt;<a class="code" href="structisis__adjacency.html#a7b23942ae5652d5cf59b263f131c2038">sysid</a>),
<a name="l01341"></a>01341                adj-&gt;<a class="code" href="structisis__adjacency.html#a29d8beb7bedcecb2c6c2f7112ba5d072">circuit</a>-&gt;<a class="code" href="structisis__circuit.html#ab03cac6463284a4ce8c1eb19e49f3b6d">interface</a>-&gt;<a class="code" href="structinterface.html#a98cadce768ec5aacb4c5fc4ca2c3eaa8">name</a>,
<a name="l01342"></a>01342                <a class="code" href="isis__misc_8c.html#a9ff6d4a3900eef27814548c4c5357090">snpa_print</a> (adj-&gt;<a class="code" href="structisis__adjacency.html#afe4ac3bbff30ac7c5a0da09b05bf9ac0">snpa</a>), <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01343"></a>01343         }
<a name="l01344"></a>01344       <span class="keywordflow">else</span>
<a name="l01345"></a>01345         {
<a name="l01346"></a>01346           <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s              %u %s&quot;</span>, dyn ? dyn-&gt;<a class="code" href="structisis__dynhn.html#a96fbe0fb7c4de340a9ed9f191859ac34">name</a>.<a class="code" href="structhostname.html#a0a14b55c4a1b6d672adfaa81b95936f3">name</a> :
<a name="l01347"></a>01347                (<span class="keyword">const</span> u_char *) <a class="code" href="isis__misc_8c.html#a3a0e7f92008e3167e2c09b8761d06766">rawlspid_print</a> (vertex-&gt;<a class="code" href="structisis__vertex.html#af7dda829757b3f14a5097797cece37b6">N</a>.<a class="code" href="structisis__vertex.html#a0599788ffc9cf10b1446295df0616128">id</a>),
<a name="l01348"></a>01348                vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01349"></a>01349         }
<a name="l01350"></a>01350     }
<a name="l01351"></a>01351 <span class="preprocessor">#if 0</span>
<a name="l01352"></a>01352 <span class="preprocessor"></span>      <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (vty, <span class="stringliteral">&quot;%s %s %u %s&quot;</span>, vtype2string (vertex-&gt;<a class="code" href="structisis__vertex.html#a112430e112aa8a2a84a4631bd9fe3f54">type</a>),
<a name="l01353"></a>01353            vid2string (vertex, buff), vertex-&gt;<a class="code" href="structisis__vertex.html#afff52de89a149969f3ba9f0fcc01d7d5">d_N</a>, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01354"></a>01354 <span class="preprocessor">#endif</span>
<a name="l01355"></a>01355 <span class="preprocessor"></span>    }
<a name="l01356"></a>01356 }
<a name="l01357"></a>01357 
<a name="l01358"></a><a class="code" href="isis__spf_8c.html#abf6ddc8d1d60c8bf903b9c6f2222d8a2">01358</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (show_isis_topology,
<a name="l01359"></a>01359        show_isis_topology_cmd,
<a name="l01360"></a>01360        <span class="stringliteral">&quot;show isis topology&quot;</span>,
<a name="l01361"></a>01361        <a class="code" href="command_8h.html#aa19b6d5257cb6f7622eb6b3da8966b32">SHOW_STR</a>
<a name="l01362"></a>01362        <span class="stringliteral">&quot;IS-IS information\n&quot;</span>
<a name="l01363"></a>01363        <span class="stringliteral">&quot;IS-IS paths to Intermediate Systems\n&quot;</span>)
<a name="l01364"></a>01364 {
<a name="l01365"></a>01365   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l01366"></a>01366   <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01367"></a>01367   <span class="keywordtype">int</span> level;
<a name="l01368"></a>01368 
<a name="l01369"></a>01369   <span class="keywordflow">if</span> (!isis-&gt;<a class="code" href="structisis.html#a0898d0cb839d3d63fc69f5a4cd02e512">area_list</a> || isis-&gt;<a class="code" href="structisis.html#a0898d0cb839d3d63fc69f5a4cd02e512">area_list</a>-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a> == 0)
<a name="l01370"></a>01370     <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01371"></a>01371 
<a name="l01372"></a>01372   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (isis-&gt;<a class="code" href="structisis.html#a0898d0cb839d3d63fc69f5a4cd02e512">area_list</a>, node, area))
<a name="l01373"></a>01373     {
<a name="l01374"></a>01374       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Area %s:%s&quot;</span>, area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a> ? area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a> : <span class="stringliteral">&quot;null&quot;</span>,
<a name="l01375"></a>01375            <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01376"></a>01376 
<a name="l01377"></a>01377       <span class="keywordflow">for</span> (level = 0; level &lt; <a class="code" href="isis__constants_8h.html#a75b03ae2a0d626c94fe847f7d790f4af">ISIS_LEVELS</a>; level++)
<a name="l01378"></a>01378     {
<a name="l01379"></a>01379       <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a0b7b9b7b8a3eb903a0deb5c20791d761">ip_circuits</a> &gt; 0 &amp;&amp; area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[level]
<a name="l01380"></a>01380           &amp;&amp; area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[level]-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a> &gt; 0)
<a name="l01381"></a>01381         {
<a name="l01382"></a>01382           <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;IS-IS paths to level-%d routers that speak IP%s&quot;</span>,
<a name="l01383"></a>01383                level + 1, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01384"></a>01384           <a class="code" href="isis__spf_8c.html#a9eb38ec938541e088807bc46ba6558d1">isis_print_paths</a> (<a class="code" href="structvty.html">vty</a>, area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[level]-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>);
<a name="l01385"></a>01385         }
<a name="l01386"></a>01386 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l01387"></a>01387 <span class="preprocessor"></span>      <span class="keywordflow">if</span> (area-&gt;ipv6_circuits &gt; 0 &amp;&amp; area-&gt;spftree6[level]
<a name="l01388"></a>01388           &amp;&amp; area-&gt;spftree6[level]-&gt;paths-&gt;count &gt; 0)
<a name="l01389"></a>01389         {
<a name="l01390"></a>01390           <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>,
<a name="l01391"></a>01391                <span class="stringliteral">&quot;IS-IS paths to level-%d routers that speak IPv6%s&quot;</span>,
<a name="l01392"></a>01392                level + 1, <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01393"></a>01393           <a class="code" href="isis__spf_8c.html#a9eb38ec938541e088807bc46ba6558d1">isis_print_paths</a> (<a class="code" href="structvty.html">vty</a>, area-&gt;spftree6[level]-&gt;paths);
<a name="l01394"></a>01394         }
<a name="l01395"></a>01395 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l01396"></a>01396     }
<a name="l01397"></a>01397     }
<a name="l01398"></a>01398 
<a name="l01399"></a>01399   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01400"></a>01400 }
<a name="l01401"></a>01401 
<a name="l01402"></a><a class="code" href="isis__spf_8c.html#a9a221a046894931a8bc9f6c7c96c6dd7">01402</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (show_isis_topology_l1,
<a name="l01403"></a>01403        show_isis_topology_l1_cmd,
<a name="l01404"></a>01404        <span class="stringliteral">&quot;show isis topology level-1&quot;</span>,
<a name="l01405"></a>01405        <a class="code" href="command_8h.html#aa19b6d5257cb6f7622eb6b3da8966b32">SHOW_STR</a>
<a name="l01406"></a>01406        <span class="stringliteral">&quot;IS-IS information\n&quot;</span>
<a name="l01407"></a>01407        <span class="stringliteral">&quot;IS-IS paths to Intermediate Systems\n&quot;</span>
<a name="l01408"></a>01408        <span class="stringliteral">&quot;Paths to all level-1 routers in the area\n&quot;</span>)
<a name="l01409"></a>01409 {
<a name="l01410"></a>01410   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l01411"></a>01411   <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01412"></a>01412 
<a name="l01413"></a>01413   <span class="keywordflow">if</span> (!isis-&gt;<a class="code" href="structisis.html#a0898d0cb839d3d63fc69f5a4cd02e512">area_list</a> || isis-&gt;<a class="code" href="structisis.html#a0898d0cb839d3d63fc69f5a4cd02e512">area_list</a>-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a> == 0)
<a name="l01414"></a>01414     <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01415"></a>01415 
<a name="l01416"></a>01416   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (isis-&gt;<a class="code" href="structisis.html#a0898d0cb839d3d63fc69f5a4cd02e512">area_list</a>, node, area))
<a name="l01417"></a>01417     {
<a name="l01418"></a>01418       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Area %s:%s&quot;</span>, area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a> ? area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a> : <span class="stringliteral">&quot;null&quot;</span>,
<a name="l01419"></a>01419            <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01420"></a>01420 
<a name="l01421"></a>01421       <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a0b7b9b7b8a3eb903a0deb5c20791d761">ip_circuits</a> &gt; 0 &amp;&amp; area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[0]
<a name="l01422"></a>01422       &amp;&amp; area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[0]-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a> &gt; 0)
<a name="l01423"></a>01423     {
<a name="l01424"></a>01424       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;IS-IS paths to level-1 routers that speak IP%s&quot;</span>,
<a name="l01425"></a>01425            <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01426"></a>01426       <a class="code" href="isis__spf_8c.html#a9eb38ec938541e088807bc46ba6558d1">isis_print_paths</a> (<a class="code" href="structvty.html">vty</a>, area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[0]-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>);
<a name="l01427"></a>01427     }
<a name="l01428"></a>01428 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l01429"></a>01429 <span class="preprocessor"></span>      <span class="keywordflow">if</span> (area-&gt;ipv6_circuits &gt; 0 &amp;&amp; area-&gt;spftree6[0]
<a name="l01430"></a>01430       &amp;&amp; area-&gt;spftree6[0]-&gt;paths-&gt;count &gt; 0)
<a name="l01431"></a>01431     {
<a name="l01432"></a>01432       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;IS-IS paths to level-1 routers that speak IPv6%s&quot;</span>,
<a name="l01433"></a>01433            <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01434"></a>01434       <a class="code" href="isis__spf_8c.html#a9eb38ec938541e088807bc46ba6558d1">isis_print_paths</a> (<a class="code" href="structvty.html">vty</a>, area-&gt;spftree6[0]-&gt;paths);
<a name="l01435"></a>01435     }
<a name="l01436"></a>01436 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l01437"></a>01437     }
<a name="l01438"></a>01438 
<a name="l01439"></a>01439   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01440"></a>01440 }
<a name="l01441"></a>01441 
<a name="l01442"></a><a class="code" href="isis__spf_8c.html#a432b30b15f54719de05c1cdeda446aeb">01442</a> <a class="code" href="command_8h.html#acc29190d35966eddbcfeceed3aab6d25">DEFUN</a> (show_isis_topology_l2,
<a name="l01443"></a>01443        show_isis_topology_l2_cmd,
<a name="l01444"></a>01444        <span class="stringliteral">&quot;show isis topology level-2&quot;</span>,
<a name="l01445"></a>01445        <a class="code" href="command_8h.html#aa19b6d5257cb6f7622eb6b3da8966b32">SHOW_STR</a>
<a name="l01446"></a>01446        <span class="stringliteral">&quot;IS-IS information\n&quot;</span>
<a name="l01447"></a>01447        <span class="stringliteral">&quot;IS-IS paths to Intermediate Systems\n&quot;</span>
<a name="l01448"></a>01448        <span class="stringliteral">&quot;Paths to all level-2 routers in the domain\n&quot;</span>)
<a name="l01449"></a>01449 {
<a name="l01450"></a>01450   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node;
<a name="l01451"></a>01451   <span class="keyword">struct </span><a class="code" href="structisis__area.html">isis_area</a> *<a class="code" href="ospf__vty_8c.html#a7030c85f46deeffac793079c664c14ce">area</a>;
<a name="l01452"></a>01452 
<a name="l01453"></a>01453   <span class="keywordflow">if</span> (!isis-&gt;<a class="code" href="structisis.html#a0898d0cb839d3d63fc69f5a4cd02e512">area_list</a> || isis-&gt;<a class="code" href="structisis.html#a0898d0cb839d3d63fc69f5a4cd02e512">area_list</a>-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a> == 0)
<a name="l01454"></a>01454     <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01455"></a>01455 
<a name="l01456"></a>01456   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a> (isis-&gt;<a class="code" href="structisis.html#a0898d0cb839d3d63fc69f5a4cd02e512">area_list</a>, node, area))
<a name="l01457"></a>01457     {
<a name="l01458"></a>01458       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;Area %s:%s&quot;</span>, area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a> ? area-&gt;<a class="code" href="structisis__area.html#aef5ef529e28214a477a6a7c2fe03c350">area_tag</a> : <span class="stringliteral">&quot;null&quot;</span>,
<a name="l01459"></a>01459            <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01460"></a>01460 
<a name="l01461"></a>01461       <span class="keywordflow">if</span> (area-&gt;<a class="code" href="structisis__area.html#a0b7b9b7b8a3eb903a0deb5c20791d761">ip_circuits</a> &gt; 0 &amp;&amp; area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[1]
<a name="l01462"></a>01462       &amp;&amp; area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[1]-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>-&gt;<a class="code" href="structlist.html#ac9c4d4d7c65e726bd9ee0c8884b6349b">count</a> &gt; 0)
<a name="l01463"></a>01463     {
<a name="l01464"></a>01464       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;IS-IS paths to level-2 routers that speak IP%s&quot;</span>,
<a name="l01465"></a>01465            <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01466"></a>01466       <a class="code" href="isis__spf_8c.html#a9eb38ec938541e088807bc46ba6558d1">isis_print_paths</a> (<a class="code" href="structvty.html">vty</a>, area-&gt;<a class="code" href="structisis__area.html#a0d8fca9e86d8b583076e2402a5338fd5">spftree</a>[1]-&gt;<a class="code" href="structisis__spftree.html#a9111a9bd2f74c8c8555e68c43a2eae03">paths</a>);
<a name="l01467"></a>01467     }
<a name="l01468"></a>01468 <span class="preprocessor">#ifdef HAVE_IPV6</span>
<a name="l01469"></a>01469 <span class="preprocessor"></span>      <span class="keywordflow">if</span> (area-&gt;ipv6_circuits &gt; 0 &amp;&amp; area-&gt;spftree6[1]
<a name="l01470"></a>01470       &amp;&amp; area-&gt;spftree6[1]-&gt;paths-&gt;count &gt; 0)
<a name="l01471"></a>01471     {
<a name="l01472"></a>01472       <a class="code" href="vty_8c.html#a3725db0ec6ad3ffdd31f68abc807ee34">vty_out</a> (<a class="code" href="structvty.html">vty</a>, <span class="stringliteral">&quot;IS-IS paths to level-2 routers that speak IPv6%s&quot;</span>,
<a name="l01473"></a>01473            <a class="code" href="vty_8h.html#a3be8ca867e2953936a95c68dc64824b6">VTY_NEWLINE</a>);
<a name="l01474"></a>01474       <a class="code" href="isis__spf_8c.html#a9eb38ec938541e088807bc46ba6558d1">isis_print_paths</a> (<a class="code" href="structvty.html">vty</a>, area-&gt;spftree6[1]-&gt;paths);
<a name="l01475"></a>01475     }
<a name="l01476"></a>01476 <span class="preprocessor">#endif </span><span class="comment">/* HAVE_IPV6 */</span>
<a name="l01477"></a>01477     }
<a name="l01478"></a>01478 
<a name="l01479"></a>01479   <span class="keywordflow">return</span> <a class="code" href="command_8h.html#aa2008c1bc36d9ef42571a6ec52516d02">CMD_SUCCESS</a>;
<a name="l01480"></a>01480 }
<a name="l01481"></a>01481 
<a name="l01482"></a>01482 <span class="keywordtype">void</span>
<a name="l01483"></a><a class="code" href="isis__spf_8h.html#ade1efe874743710b587e5d8fbd8986a8">01483</a> <a class="code" href="isis__spf_8c.html#af3ff241b5c3bf5bdee6f7cc9374e52d2">isis_spf_cmds_init</a> ()
<a name="l01484"></a>01484 {
<a name="l01485"></a>01485   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;show_isis_topology_cmd);
<a name="l01486"></a>01486   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;show_isis_topology_l1_cmd);
<a name="l01487"></a>01487   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682acfdc7d342a9640147533988ace5fac24">VIEW_NODE</a>, &amp;show_isis_topology_l2_cmd);
<a name="l01488"></a>01488 
<a name="l01489"></a>01489   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;show_isis_topology_cmd);
<a name="l01490"></a>01490   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;show_isis_topology_l1_cmd);
<a name="l01491"></a>01491   <a class="code" href="command_8c.html#af8546e314a1538d53ef78e4b02804f40">install_element</a> (<a class="code" href="command_8h.html#a6a276b85e2da28c5f9c3dbce61c55682a8eeaebd59fec75e66abd261377c21a2d">ENABLE_NODE</a>, &amp;show_isis_topology_l2_cmd);
<a name="l01492"></a>01492 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="isis__spf_8c.html">isis_spf.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:04 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
