<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: ripngd/ripng_nexthop.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('ripng__nexthop_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">ripngd/ripng_nexthop.c</div>  </div>
</div>
<div class="contents">
<a href="ripng__nexthop_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* RIPngd Zebra</span>
<a name="l00002"></a>00002 <span class="comment"> * Copyright (C) 2002 6WIND &lt;vincent.jardin@6wind.com&gt;</span>
<a name="l00003"></a>00003 <span class="comment"> *</span>
<a name="l00004"></a>00004 <span class="comment"> * This file is part of GNU Zebra.</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * GNU Zebra is free software; you can redistribute it and/or modify it</span>
<a name="l00007"></a>00007 <span class="comment"> * under the terms of the GNU General Public License as published by the</span>
<a name="l00008"></a>00008 <span class="comment"> * Free Software Foundation; either version 2, or (at your option) any</span>
<a name="l00009"></a>00009 <span class="comment"> * later version.</span>
<a name="l00010"></a>00010 <span class="comment"> *</span>
<a name="l00011"></a>00011 <span class="comment"> * GNU Zebra is distributed in the hope that it will be useful, but</span>
<a name="l00012"></a>00012 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00014"></a>00014 <span class="comment"> * General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment"> * along with GNU Zebra; see the file COPYING.  If not, write to the Free</span>
<a name="l00018"></a>00018 <span class="comment"> * Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA</span>
<a name="l00019"></a>00019 <span class="comment"> * 02111-1307, USA.  </span>
<a name="l00020"></a>00020 <span class="comment"> */</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="comment">/* This file is required in order to support properly the RIPng nexthop</span>
<a name="l00023"></a>00023 <span class="comment"> * feature.</span>
<a name="l00024"></a>00024 <span class="comment"> */</span>
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 <span class="preprocessor">#include &lt;<a class="code" href="zebra_8h.html">zebra.h</a>&gt;</span>
<a name="l00027"></a>00027 
<a name="l00028"></a>00028 <span class="comment">/* For struct udphdr. */</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;netinet/udp.h&gt;</span>
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 <span class="preprocessor">#include &quot;<a class="code" href="linklist_8h.html">linklist.h</a>&quot;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="stream_8h.html">stream.h</a>&quot;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &quot;<a class="code" href="log_8h.html">log.h</a>&quot;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &quot;<a class="code" href="memory_8h.html">memory.h</a>&quot;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &quot;<a class="code" href="vty_8h.html">vty.h</a>&quot;</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include &quot;<a class="code" href="if_8h.html">if.h</a>&quot;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#include &quot;<a class="code" href="prefix_8h.html">prefix.h</a>&quot;</span>
<a name="l00038"></a>00038 
<a name="l00039"></a>00039 <span class="preprocessor">#include &quot;<a class="code" href="ripngd_8h.html">ripngd/ripngd.h</a>&quot;</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include &quot;<a class="code" href="ripng__debug_8h.html">ripngd/ripng_debug.h</a>&quot;</span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &quot;<a class="code" href="ripng__nexthop_8h.html">ripngd/ripng_nexthop.h</a>&quot;</span>
<a name="l00042"></a>00042 
<a name="l00043"></a><a class="code" href="ripng__nexthop_8c.html#ad72dbcf6d0153db1b8d8a58001feed83">00043</a> <span class="preprocessor">#define DEBUG 1</span>
<a name="l00044"></a>00044 <span class="preprocessor"></span>
<a name="l00045"></a><a class="code" href="ripng__nexthop_8c.html#ac6afabdc09a49a433ee19d8a9486056d">00045</a> <span class="preprocessor">#define min(a, b) ((a) &lt; (b) ? (a) : (b))</span>
<a name="l00046"></a>00046 <span class="preprocessor"></span>
<a name="l00047"></a><a class="code" href="structripng__rte__data.html">00047</a> <span class="keyword">struct </span><a class="code" href="structripng__rte__data.html">ripng_rte_data</a> {
<a name="l00048"></a><a class="code" href="structripng__rte__data.html#a92c1997918b52e252f2ac4c2686126ac">00048</a>   <span class="keyword">struct </span>prefix_ipv6 *<a class="code" href="structripng__rte__data.html#a92c1997918b52e252f2ac4c2686126ac">p</a>;
<a name="l00049"></a><a class="code" href="structripng__rte__data.html#ac9598c201cd87f0d893d5e9f8df771c6">00049</a>   <span class="keyword">struct </span><a class="code" href="structripng__info.html">ripng_info</a> *<a class="code" href="structripng__rte__data.html#ac9598c201cd87f0d893d5e9f8df771c6">rinfo</a>;
<a name="l00050"></a><a class="code" href="structripng__rte__data.html#ac0603d5a5eaa682e360056583048e54e">00050</a>   <span class="keyword">struct </span><a class="code" href="structripng__aggregate.html">ripng_aggregate</a> *<a class="code" href="structripng__rte__data.html#ac0603d5a5eaa682e360056583048e54e">aggregate</a>;
<a name="l00051"></a>00051 };
<a name="l00052"></a>00052 
<a name="l00053"></a>00053 <span class="keywordtype">void</span> <a class="code" href="ripng__nexthop_8c.html#aa9eb0397fdb28cc90688da9fd0c8934e">_ripng_rte_del</a>(<span class="keyword">struct</span> <a class="code" href="structripng__rte__data.html">ripng_rte_data</a> *<a class="code" href="random_8c.html#a955f504eccf76b4eb2489c0adab03121">A</a>);
<a name="l00054"></a>00054 <span class="keywordtype">int</span> <a class="code" href="ripng__nexthop_8c.html#a226aa0a3e2585d46a0d4c0335d206127">_ripng_rte_cmp</a>(<span class="keyword">struct</span> <a class="code" href="structripng__rte__data.html">ripng_rte_data</a> *<a class="code" href="random_8c.html#a955f504eccf76b4eb2489c0adab03121">A</a>, <span class="keyword">struct</span> <a class="code" href="structripng__rte__data.html">ripng_rte_data</a> *<a class="code" href="random_8c.html#a111da81ae5883147168bbb8366377b10">B</a>);
<a name="l00055"></a>00055 
<a name="l00056"></a><a class="code" href="ripng__nexthop_8c.html#a4c7830c66e2b125e6801a2e693e38457">00056</a> <span class="preprocessor">#define METRIC_OUT(a) \</span>
<a name="l00057"></a>00057 <span class="preprocessor">    ((a)-&gt;rinfo ?  (a)-&gt;rinfo-&gt;metric_out : (a)-&gt;aggregate-&gt;metric_out)</span>
<a name="l00058"></a><a class="code" href="ripng__nexthop_8c.html#a499ea65fee059ad666c780180e1d233a">00058</a> <span class="preprocessor"></span><span class="preprocessor">#define NEXTHOP_OUT_PTR(a) \</span>
<a name="l00059"></a>00059 <span class="preprocessor">    ((a)-&gt;rinfo ?  &amp;((a)-&gt;rinfo-&gt;nexthop_out) : &amp;((a)-&gt;aggregate-&gt;nexthop_out))</span>
<a name="l00060"></a><a class="code" href="ripng__nexthop_8c.html#a90af802fbe0a512048c799485d6b965e">00060</a> <span class="preprocessor"></span><span class="preprocessor">#define TAG_OUT(a) \</span>
<a name="l00061"></a>00061 <span class="preprocessor">    ((a)-&gt;rinfo ?  (a)-&gt;rinfo-&gt;tag_out : (a)-&gt;aggregate-&gt;tag_out)</span>
<a name="l00062"></a>00062 <span class="preprocessor"></span>
<a name="l00063"></a>00063 <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *
<a name="l00064"></a><a class="code" href="ripng__nexthop_8h.html#a2bbaf1fdfe59c0ed137ef6c1a1f54ea4">00064</a> <a class="code" href="ripng__nexthop_8c.html#a2bbaf1fdfe59c0ed137ef6c1a1f54ea4">ripng_rte_new</a>(<span class="keywordtype">void</span>) {
<a name="l00065"></a>00065   <span class="keyword">struct </span><a class="code" href="structlist.html">list</a> *<a class="code" href="structrte.html">rte</a>;
<a name="l00066"></a>00066 
<a name="l00067"></a>00067   rte = <a class="code" href="linklist_8c.html#af156f4ae343ef4a625f75b6c38845aef">list_new</a>();
<a name="l00068"></a>00068   rte-&gt;<a class="code" href="structlist.html#af19c9d07985ca8f95f0098bb0ef98f66">cmp</a> = (int (*)(<span class="keywordtype">void</span> *, <span class="keywordtype">void</span> *)) <a class="code" href="ripng__nexthop_8c.html#a226aa0a3e2585d46a0d4c0335d206127">_ripng_rte_cmp</a>;
<a name="l00069"></a>00069   rte-&gt;<a class="code" href="structlist.html#ac4fd9a331fe65f4c0891aa35bf84a6f5">del</a> = (void (*)(<span class="keywordtype">void</span> *)) <a class="code" href="ripng__nexthop_8c.html#aa9eb0397fdb28cc90688da9fd0c8934e">_ripng_rte_del</a>;
<a name="l00070"></a>00070 
<a name="l00071"></a>00071   <span class="keywordflow">return</span> rte;
<a name="l00072"></a>00072 }
<a name="l00073"></a>00073 
<a name="l00074"></a>00074 <span class="keywordtype">void</span>
<a name="l00075"></a><a class="code" href="ripng__nexthop_8h.html#a4cb0a5161e0b2e9295556de274d609c9">00075</a> <a class="code" href="ripng__nexthop_8c.html#a4cb0a5161e0b2e9295556de274d609c9">ripng_rte_free</a>(<span class="keyword">struct</span> <a class="code" href="structlist.html">list</a> *ripng_rte_list) {
<a name="l00076"></a>00076   <a class="code" href="linklist_8c.html#ab5fdf1a904264be077ce19a432b1b119">list_delete</a>(ripng_rte_list);
<a name="l00077"></a>00077 }
<a name="l00078"></a>00078 
<a name="l00079"></a>00079 <span class="comment">/* Delete RTE */</span>
<a name="l00080"></a>00080 <span class="keywordtype">void</span>
<a name="l00081"></a><a class="code" href="ripng__nexthop_8c.html#aa9eb0397fdb28cc90688da9fd0c8934e">00081</a> <a class="code" href="ripng__nexthop_8c.html#aa9eb0397fdb28cc90688da9fd0c8934e">_ripng_rte_del</a>(<span class="keyword">struct</span> <a class="code" href="structripng__rte__data.html">ripng_rte_data</a> *<a class="code" href="random_8c.html#a955f504eccf76b4eb2489c0adab03121">A</a>) {
<a name="l00082"></a>00082   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a>(<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167baa0f6aebb2ce12057e261b51dd4014dd2">MTYPE_RIPNG_RTE_DATA</a>, A);
<a name="l00083"></a>00083 }
<a name="l00084"></a>00084 
<a name="l00085"></a>00085 <span class="comment">/* Compare RTE:</span>
<a name="l00086"></a>00086 <span class="comment"> *  return +  if A &gt; B</span>
<a name="l00087"></a>00087 <span class="comment"> *         0  if A = B</span>
<a name="l00088"></a>00088 <span class="comment"> *         -  if A &lt; B</span>
<a name="l00089"></a>00089 <span class="comment"> */</span>
<a name="l00090"></a>00090 <span class="keywordtype">int</span>
<a name="l00091"></a><a class="code" href="ripng__nexthop_8c.html#a226aa0a3e2585d46a0d4c0335d206127">00091</a> <a class="code" href="ripng__nexthop_8c.html#a226aa0a3e2585d46a0d4c0335d206127">_ripng_rte_cmp</a>(<span class="keyword">struct</span> <a class="code" href="structripng__rte__data.html">ripng_rte_data</a> *<a class="code" href="random_8c.html#a955f504eccf76b4eb2489c0adab03121">A</a>, <span class="keyword">struct</span> <a class="code" href="structripng__rte__data.html">ripng_rte_data</a> *<a class="code" href="random_8c.html#a111da81ae5883147168bbb8366377b10">B</a>) {
<a name="l00092"></a>00092   <span class="keywordflow">return</span> <a class="code" href="ripng__nexthop_8h.html#ab3a3ba08113b69b7744a216a47b1ede7">addr6_cmp</a>(<a class="code" href="ripng__nexthop_8c.html#a499ea65fee059ad666c780180e1d233a">NEXTHOP_OUT_PTR</a>(A), <a class="code" href="ripng__nexthop_8c.html#a499ea65fee059ad666c780180e1d233a">NEXTHOP_OUT_PTR</a>(B));
<a name="l00093"></a>00093 }
<a name="l00094"></a>00094 
<a name="l00095"></a>00095 <span class="comment">/* Add routing table entry */</span>
<a name="l00096"></a>00096 <span class="keywordtype">void</span>
<a name="l00097"></a><a class="code" href="ripng__nexthop_8h.html#a95e799318ab5a7a4ee80a44e1ab32276">00097</a> <a class="code" href="ripng__nexthop_8c.html#a95e799318ab5a7a4ee80a44e1ab32276">ripng_rte_add</a>(<span class="keyword">struct</span> <a class="code" href="structlist.html">list</a> *ripng_rte_list, <span class="keyword">struct</span> prefix_ipv6 *<a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>,
<a name="l00098"></a>00098               <span class="keyword">struct</span> <a class="code" href="structripng__info.html">ripng_info</a> *rinfo, <span class="keyword">struct</span> <a class="code" href="structripng__aggregate.html">ripng_aggregate</a> *aggregate) {
<a name="l00099"></a>00099 
<a name="l00100"></a>00100   <span class="keyword">struct </span><a class="code" href="structripng__rte__data.html">ripng_rte_data</a> *<a class="code" href="dict_8c.html#a43a278d13284fb3412e9eee1db1d967e">data</a>;
<a name="l00101"></a>00101 
<a name="l00102"></a>00102   <span class="comment">/* At least one should not be null */</span>
<a name="l00103"></a>00103   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a>(!rinfo || !aggregate);
<a name="l00104"></a>00104 
<a name="l00105"></a>00105   data = <a class="code" href="memory_8h.html#a6491adf46c1d769b529a8f2f7d75f2fe">XMALLOC</a>(<a class="code" href="memtypes_8h.html#a7ff5f2dff38e7639981794c43dc9167baa0f6aebb2ce12057e261b51dd4014dd2">MTYPE_RIPNG_RTE_DATA</a>, <span class="keyword">sizeof</span>(*data));
<a name="l00106"></a>00106   data-&gt;<a class="code" href="structripng__rte__data.html#a92c1997918b52e252f2ac4c2686126ac">p</a>     = <a class="code" href="spgrid_8c.html#a931bc2aa940ac2a4d1601cf842336926">p</a>;
<a name="l00107"></a>00107   data-&gt;<a class="code" href="structripng__rte__data.html#ac9598c201cd87f0d893d5e9f8df771c6">rinfo</a> = <a class="code" href="structripng__rte__data.html#ac9598c201cd87f0d893d5e9f8df771c6">rinfo</a>;
<a name="l00108"></a>00108   data-&gt;<a class="code" href="structripng__rte__data.html#ac0603d5a5eaa682e360056583048e54e">aggregate</a> = <a class="code" href="structripng__rte__data.html#ac0603d5a5eaa682e360056583048e54e">aggregate</a>;
<a name="l00109"></a>00109 
<a name="l00110"></a>00110   <a class="code" href="linklist_8c.html#abfe4a1419e46dc9e1235dcbe6b52a022">listnode_add_sort</a>(ripng_rte_list, data);
<a name="l00111"></a>00111 } 
<a name="l00112"></a>00112 
<a name="l00113"></a>00113 <span class="comment">/* Send the RTE with the nexthop support</span>
<a name="l00114"></a>00114 <span class="comment"> */</span>
<a name="l00115"></a>00115 <span class="keywordtype">void</span>
<a name="l00116"></a><a class="code" href="ripng__nexthop_8h.html#ae916e82287005ce5a64bc1ebf39fa810">00116</a> <a class="code" href="ripng__nexthop_8c.html#ae916e82287005ce5a64bc1ebf39fa810">ripng_rte_send</a>(<span class="keyword">struct</span> <a class="code" href="structlist.html">list</a> *ripng_rte_list, <span class="keyword">struct</span> <a class="code" href="structinterface.html">interface</a> *ifp,
<a name="l00117"></a>00117                <span class="keyword">struct</span> sockaddr_in6 *to) {
<a name="l00118"></a>00118 
<a name="l00119"></a>00119   <span class="keyword">struct </span><a class="code" href="structripng__rte__data.html">ripng_rte_data</a> *<a class="code" href="dict_8c.html#a43a278d13284fb3412e9eee1db1d967e">data</a>;
<a name="l00120"></a>00120   <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *nnode;
<a name="l00121"></a>00121 
<a name="l00122"></a>00122   <span class="keyword">struct </span>in6_addr last_nexthop;
<a name="l00123"></a>00123   <span class="keyword">struct </span>in6_addr myself_nexthop;
<a name="l00124"></a>00124 
<a name="l00125"></a>00125   <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>;
<a name="l00126"></a>00126   <span class="keywordtype">int</span> <a class="code" href="bgp__open_8h.html#ab4570498c4316aa5f7b4852c778b3320">num</a>;
<a name="l00127"></a>00127   <span class="keywordtype">int</span> mtu;
<a name="l00128"></a>00128   <span class="keywordtype">int</span> rtemax;
<a name="l00129"></a>00129   <span class="keywordtype">int</span> ret;
<a name="l00130"></a>00130 
<a name="l00131"></a>00131   <span class="comment">/* Most of the time, there is no nexthop */</span>
<a name="l00132"></a>00132   memset(&amp;last_nexthop, 0, <span class="keyword">sizeof</span>(last_nexthop));
<a name="l00133"></a>00133 
<a name="l00134"></a>00134   <span class="comment">/* Use myself_nexthop if the nexthop is not a link-local address, because</span>
<a name="l00135"></a>00135 <span class="comment">   * we remain a right path without beeing the optimal one.</span>
<a name="l00136"></a>00136 <span class="comment">   */</span>
<a name="l00137"></a>00137   memset(&amp;myself_nexthop, 0, <span class="keyword">sizeof</span>(myself_nexthop));
<a name="l00138"></a>00138 
<a name="l00139"></a>00139   <span class="comment">/* Output stream get from ripng structre.  XXX this should be</span>
<a name="l00140"></a>00140 <span class="comment">     interface structure. */</span>
<a name="l00141"></a>00141   s = <a class="code" href="structripng.html">ripng</a>-&gt;<a class="code" href="structripng.html#a7a37c00ce5964003f19897768bcd61df">obuf</a>;
<a name="l00142"></a>00142 
<a name="l00143"></a>00143   <span class="comment">/* Reset stream and RTE counter. */</span>
<a name="l00144"></a>00144   <a class="code" href="stream_8c.html#aee8fd31485ebc2f0a556a6a5d5c2d1e6">stream_reset</a> (s);
<a name="l00145"></a>00145   num = 0;
<a name="l00146"></a>00146 
<a name="l00147"></a>00147   mtu = ifp-&gt;<a class="code" href="structinterface.html#a75a892a4df0f60191a13ca07b6625cb1">mtu6</a>;
<a name="l00148"></a>00148   <span class="keywordflow">if</span> (mtu &lt; 0)
<a name="l00149"></a>00149     mtu = <a class="code" href="ripngd_8h.html#a3f7f5a1b357f9db1e73a553a410ab77b">IFMINMTU</a>;
<a name="l00150"></a>00150 
<a name="l00151"></a>00151   rtemax = (<a class="code" href="ripng__nexthop_8c.html#ac6afabdc09a49a433ee19d8a9486056d">min</a> (mtu, <a class="code" href="ripngd_8h.html#ab899e2e565c4cfce969f490a569488d9">RIPNG_MAX_PACKET_SIZE</a>) -
<a name="l00152"></a>00152         <a class="code" href="ripngd_8h.html#adc89068941cad99253dd340352bb82ed">IPV6_HDRLEN</a> - 
<a name="l00153"></a>00153         <span class="keyword">sizeof</span> (<span class="keyword">struct </span>udphdr) -
<a name="l00154"></a>00154         sizeof (struct ripng_packet) +
<a name="l00155"></a>00155         sizeof (struct rte)) / sizeof (struct rte);
<a name="l00156"></a>00156 
<a name="l00157"></a>00157   <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a71512a873b8f0e2b4c84d3c949a9bbaf">ALL_LIST_ELEMENTS</a> (ripng_rte_list, node, nnode, data)) {
<a name="l00158"></a>00158     <span class="comment">/* (2.1) Next hop support */</span>
<a name="l00159"></a>00159     <span class="keywordflow">if</span> (!<a class="code" href="prefix_8h.html#a5f1eaa85b153050a498dacc958ab8283">IPV6_ADDR_SAME</a>(&amp;last_nexthop, <a class="code" href="ripng__nexthop_8c.html#a499ea65fee059ad666c780180e1d233a">NEXTHOP_OUT_PTR</a>(data))) {
<a name="l00160"></a>00160 
<a name="l00161"></a>00161       <span class="comment">/* A nexthop entry should be at least followed by 1 RTE */</span>
<a name="l00162"></a>00162       <span class="keywordflow">if</span> (num == (rtemax-1)) {
<a name="l00163"></a>00163     ret = <a class="code" href="ripngd_8c.html#a0d2737d5d5dcd2d0fcb60ebd037f0004">ripng_send_packet</a> ((caddr_t) <a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (s), <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a> (s),
<a name="l00164"></a>00164                  to, ifp);
<a name="l00165"></a>00165 
<a name="l00166"></a>00166         <span class="keywordflow">if</span> (ret &gt;= 0 &amp;&amp; <a class="code" href="ripng__debug_8h.html#a31e214a9e1772e5c1775f81166f2b322">IS_RIPNG_DEBUG_SEND</a>)
<a name="l00167"></a>00167           <a class="code" href="ripngd_8c.html#a0d7f74786282b1676f0508b2f0c636c1">ripng_packet_dump</a>((<span class="keyword">struct</span> ripng_packet *)<a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (s),
<a name="l00168"></a>00168                 <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a>(s), <span class="stringliteral">&quot;SEND&quot;</span>);
<a name="l00169"></a>00169         num = 0;
<a name="l00170"></a>00170         <a class="code" href="stream_8c.html#aee8fd31485ebc2f0a556a6a5d5c2d1e6">stream_reset</a> (s);
<a name="l00171"></a>00171       }
<a name="l00172"></a>00172 
<a name="l00173"></a>00173       <span class="comment">/* Add the nexthop (2.1) */</span>
<a name="l00174"></a>00174 
<a name="l00175"></a>00175       <span class="comment">/* If the received next hop address is not a link-local address,</span>
<a name="l00176"></a>00176 <span class="comment">       * it should be treated as 0:0:0:0:0:0:0:0.</span>
<a name="l00177"></a>00177 <span class="comment">       */</span>
<a name="l00178"></a>00178       <span class="keywordflow">if</span> (!IN6_IS_ADDR_LINKLOCAL(<a class="code" href="ripng__nexthop_8c.html#a499ea65fee059ad666c780180e1d233a">NEXTHOP_OUT_PTR</a>(data)))
<a name="l00179"></a>00179         last_nexthop = myself_nexthop;
<a name="l00180"></a>00180       <span class="keywordflow">else</span>
<a name="l00181"></a>00181     last_nexthop = *<a class="code" href="ripng__nexthop_8c.html#a499ea65fee059ad666c780180e1d233a">NEXTHOP_OUT_PTR</a>(data);
<a name="l00182"></a>00182 
<a name="l00183"></a>00183       num = <a class="code" href="ripngd_8c.html#a2df121efc44d079712a814a74e304fb9">ripng_write_rte</a>(num, s, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, &amp;last_nexthop, 0, <a class="code" href="ripngd_8h.html#abf008d76fd54560aa51e1016ceee8c77">RIPNG_METRIC_NEXTHOP</a>);
<a name="l00184"></a>00184     } <span class="keywordflow">else</span> {
<a name="l00185"></a>00185       <span class="comment">/* Rewrite the nexthop for each new packet */</span>
<a name="l00186"></a>00186       <span class="keywordflow">if</span> ((num == 0) &amp;&amp; !<a class="code" href="prefix_8h.html#a5f1eaa85b153050a498dacc958ab8283">IPV6_ADDR_SAME</a>(&amp;last_nexthop, &amp;myself_nexthop))
<a name="l00187"></a>00187         num = <a class="code" href="ripngd_8c.html#a2df121efc44d079712a814a74e304fb9">ripng_write_rte</a>(num, s, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, &amp;last_nexthop, 0, <a class="code" href="ripngd_8h.html#abf008d76fd54560aa51e1016ceee8c77">RIPNG_METRIC_NEXTHOP</a>);
<a name="l00188"></a>00188     }
<a name="l00189"></a>00189     num = <a class="code" href="ripngd_8c.html#a2df121efc44d079712a814a74e304fb9">ripng_write_rte</a>(num, s, data-&gt;<a class="code" href="structripng__rte__data.html#a92c1997918b52e252f2ac4c2686126ac">p</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>,
<a name="l00190"></a>00190               <a class="code" href="ripng__nexthop_8c.html#a90af802fbe0a512048c799485d6b965e">TAG_OUT</a>(data), <a class="code" href="ripng__nexthop_8c.html#a4c7830c66e2b125e6801a2e693e38457">METRIC_OUT</a>(data));
<a name="l00191"></a>00191 
<a name="l00192"></a>00192     <span class="keywordflow">if</span> (num == rtemax) {
<a name="l00193"></a>00193       ret = <a class="code" href="ripngd_8c.html#a0d2737d5d5dcd2d0fcb60ebd037f0004">ripng_send_packet</a> ((caddr_t) <a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (s), <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a> (s),
<a name="l00194"></a>00194                    to, ifp);
<a name="l00195"></a>00195 
<a name="l00196"></a>00196       <span class="keywordflow">if</span> (ret &gt;= 0 &amp;&amp; <a class="code" href="ripng__debug_8h.html#a31e214a9e1772e5c1775f81166f2b322">IS_RIPNG_DEBUG_SEND</a>)
<a name="l00197"></a>00197         <a class="code" href="ripngd_8c.html#a0d7f74786282b1676f0508b2f0c636c1">ripng_packet_dump</a>((<span class="keyword">struct</span> ripng_packet *)<a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (s),
<a name="l00198"></a>00198               <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a>(s), <span class="stringliteral">&quot;SEND&quot;</span>);
<a name="l00199"></a>00199       num = 0;
<a name="l00200"></a>00200       <a class="code" href="stream_8c.html#aee8fd31485ebc2f0a556a6a5d5c2d1e6">stream_reset</a> (s);
<a name="l00201"></a>00201     }
<a name="l00202"></a>00202   }
<a name="l00203"></a>00203 
<a name="l00204"></a>00204   <span class="comment">/* If unwritten RTE exist, flush it. */</span>
<a name="l00205"></a>00205   <span class="keywordflow">if</span> (num != 0) {
<a name="l00206"></a>00206     ret = <a class="code" href="ripngd_8c.html#a0d2737d5d5dcd2d0fcb60ebd037f0004">ripng_send_packet</a> ((caddr_t) <a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (s), <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a> (s),
<a name="l00207"></a>00207                  to, ifp);
<a name="l00208"></a>00208 
<a name="l00209"></a>00209     <span class="keywordflow">if</span> (ret &gt;= 0 &amp;&amp; <a class="code" href="ripng__debug_8h.html#a31e214a9e1772e5c1775f81166f2b322">IS_RIPNG_DEBUG_SEND</a>)
<a name="l00210"></a>00210       <a class="code" href="ripngd_8c.html#a0d7f74786282b1676f0508b2f0c636c1">ripng_packet_dump</a> ((<span class="keyword">struct</span> ripng_packet *)<a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (s),
<a name="l00211"></a>00211              <a class="code" href="stream_8c.html#ac1d2c72755840ea194301a5447ff721a">stream_get_endp</a> (s), <span class="stringliteral">&quot;SEND&quot;</span>);
<a name="l00212"></a>00212     num = 0;
<a name="l00213"></a>00213     <a class="code" href="stream_8c.html#aee8fd31485ebc2f0a556a6a5d5c2d1e6">stream_reset</a> (s);
<a name="l00214"></a>00214   }
<a name="l00215"></a>00215 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="ripng__nexthop_8c.html">ripng_nexthop.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:08 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
