<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: tests/aspath_test.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('aspath__test_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">tests/aspath_test.c</div>  </div>
</div>
<div class="contents">
<a href="aspath__test_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="preprocessor">#include &lt;<a class="code" href="zebra_8h.html">zebra.h</a>&gt;</span>
<a name="l00002"></a>00002 
<a name="l00003"></a>00003 <span class="preprocessor">#include &quot;<a class="code" href="vty_8h.html">vty.h</a>&quot;</span>
<a name="l00004"></a>00004 <span class="preprocessor">#include &quot;<a class="code" href="stream_8h.html">stream.h</a>&quot;</span>
<a name="l00005"></a>00005 <span class="preprocessor">#include &quot;<a class="code" href="privs_8h.html">privs.h</a>&quot;</span>
<a name="l00006"></a>00006 
<a name="l00007"></a>00007 <span class="preprocessor">#include &quot;<a class="code" href="bgpd_8h.html">bgpd/bgpd.h</a>&quot;</span>
<a name="l00008"></a>00008 <span class="preprocessor">#include &quot;<a class="code" href="bgp__aspath_8h.html">bgpd/bgp_aspath.h</a>&quot;</span>
<a name="l00009"></a>00009 
<a name="l00010"></a><a class="code" href="aspath__test_8c.html#a7ad4ab58f02912d2bc7e3650291075d6">00010</a> <span class="preprocessor">#define VT100_RESET &quot;\x1b[0m&quot;</span>
<a name="l00011"></a><a class="code" href="aspath__test_8c.html#a411151080b9459214992a70d32b8d88c">00011</a> <span class="preprocessor"></span><span class="preprocessor">#define VT100_RED &quot;\x1b[31m&quot;</span>
<a name="l00012"></a><a class="code" href="aspath__test_8c.html#a3a1365446cc4931c92c556bf69ee0e14">00012</a> <span class="preprocessor"></span><span class="preprocessor">#define VT100_GREEN &quot;\x1b[32m&quot;</span>
<a name="l00013"></a><a class="code" href="aspath__test_8c.html#acf9043eb0733f63a14fb04f9e016f5ea">00013</a> <span class="preprocessor"></span><span class="preprocessor">#define VT100_YELLOW &quot;\x1b[33m&quot;</span>
<a name="l00014"></a><a class="code" href="aspath__test_8c.html#aba51915c87d64af47fb1cc59348961c9">00014</a> <span class="preprocessor"></span><span class="preprocessor">#define OK VT100_GREEN &quot;OK&quot; VT100_RESET</span>
<a name="l00015"></a><a class="code" href="aspath__test_8c.html#a681680feae4df4182d532564c42fa1fc">00015</a> <span class="preprocessor"></span><span class="preprocessor">#define FAILED VT100_RED &quot;failed&quot; VT100_RESET</span>
<a name="l00016"></a>00016 <span class="preprocessor"></span>
<a name="l00017"></a>00017 <span class="comment">/* need these to link in libbgp */</span>
<a name="l00018"></a><a class="code" href="aspath__test_8c.html#aedaa2650b5e24bd10ce066e022858877">00018</a> <span class="keyword">struct </span><a class="code" href="structzebra__privs__t.html">zebra_privs_t</a> *<a class="code" href="bgp__main_8c.html#a9120cbf0c7555febc6bce222b5a38d42">bgpd_privs</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00019"></a><a class="code" href="aspath__test_8c.html#af7f9077bc08df049beb65a1c09cde5fa">00019</a> <span class="keyword">struct </span><a class="code" href="structthread__master.html">thread_master</a> *<a class="code" href="bgp__main_8c.html#af7f9077bc08df049beb65a1c09cde5fa">master</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00020"></a>00020 
<a name="l00021"></a><a class="code" href="aspath__test_8c.html#ad4ec5aab9b62fbbe9b8fc2d8ac0a5989">00021</a> <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="aspath__test_8c.html#ad4ec5aab9b62fbbe9b8fc2d8ac0a5989">failed</a> = 0;
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="comment">/* specification for a test - what the results should be */</span>
<a name="l00024"></a><a class="code" href="structtest__spec.html">00024</a> <span class="keyword">struct </span><a class="code" href="structtest__spec.html">test_spec</a> 
<a name="l00025"></a>00025 {
<a name="l00026"></a><a class="code" href="structtest__spec.html#a2eb0ac4de4590460526ff41c43b664c9">00026</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structtest__spec.html#a2eb0ac4de4590460526ff41c43b664c9">shouldbe</a>; <span class="comment">/* the string the path should parse to */</span>
<a name="l00027"></a><a class="code" href="structtest__spec.html#ac41569f24493df6c959f4658aba11f00">00027</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structtest__spec.html#ac41569f24493df6c959f4658aba11f00">shouldbe_delete_confed</a>; <span class="comment">/* ditto, but once confeds are deleted */</span>
<a name="l00028"></a><a class="code" href="structtest__spec.html#af0db615126b91ae525c29ad29e68623f">00028</a>   <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structtest__spec.html#af0db615126b91ae525c29ad29e68623f">hops</a>; <span class="comment">/* aspath_count_hops result */</span>
<a name="l00029"></a><a class="code" href="structtest__spec.html#a80c9f70ca6d4e7d6c02f8b97fbea49b1">00029</a>   <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structtest__spec.html#a80c9f70ca6d4e7d6c02f8b97fbea49b1">confeds</a>; <span class="comment">/* aspath_count_confeds */</span>
<a name="l00030"></a><a class="code" href="structtest__spec.html#a1e7d302696d26728c37fa5c776be351a">00030</a>   <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="structtest__spec.html#a1e7d302696d26728c37fa5c776be351a">private_as</a>; <span class="comment">/* whether the private_as check should pass or fail */</span>
<a name="l00031"></a><a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">00031</a> <span class="preprocessor">#define NOT_ALL_PRIVATE 0</span>
<a name="l00032"></a><a class="code" href="aspath__test_8c.html#a290f263c8da182c9494f9325c7c2a96f">00032</a> <span class="preprocessor"></span><span class="preprocessor">#define ALL_PRIVATE 1</span>
<a name="l00033"></a><a class="code" href="structtest__spec.html#add5530fb487a9c8303630fbfa4555e38">00033</a> <span class="preprocessor"></span>  <span class="keyword">const</span> <a class="code" href="bgpd_8h.html#ae54756b75cc699532543e4e2214c1c57">as_t</a> <a class="code" href="structtest__spec.html#add5530fb487a9c8303630fbfa4555e38">does_loop</a>; <span class="comment">/* an ASN which should trigger loop-check */</span>
<a name="l00034"></a><a class="code" href="structtest__spec.html#ad36a95dce2160851f702bb30559a0690">00034</a>   <span class="keyword">const</span> <a class="code" href="bgpd_8h.html#ae54756b75cc699532543e4e2214c1c57">as_t</a> <a class="code" href="structtest__spec.html#ad36a95dce2160851f702bb30559a0690">doesnt_loop</a>; <span class="comment">/* one which should not */</span>
<a name="l00035"></a><a class="code" href="structtest__spec.html#a3d644bb1c3a265912fa3fcc7279fc239">00035</a>   <span class="keyword">const</span> <a class="code" href="bgpd_8h.html#ae54756b75cc699532543e4e2214c1c57">as_t</a> <a class="code" href="structtest__spec.html#a3d644bb1c3a265912fa3fcc7279fc239">first</a>; <span class="comment">/* the first ASN, if there is one */</span>
<a name="l00036"></a><a class="code" href="aspath__test_8c.html#a5b186fff0ea4104d059228ef623bc461">00036</a> <span class="preprocessor">#define NULL_ASN 0</span>
<a name="l00037"></a>00037 <span class="preprocessor"></span>};
<a name="l00038"></a>00038 
<a name="l00039"></a>00039 
<a name="l00040"></a>00040 <span class="comment">/* test segments to parse and validate, and use for other tests */</span>
<a name="l00041"></a><a class="code" href="structtest__segment.html">00041</a> <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structtest__segment.html">test_segment</a> {
<a name="l00042"></a><a class="code" href="structtest__segment.html#aafa6de67016b06ae43ef95d9148776ca">00042</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structtest__segment.html#aafa6de67016b06ae43ef95d9148776ca">name</a>;
<a name="l00043"></a><a class="code" href="structtest__segment.html#ae7e9205b13ccc44263f7a42847bef847">00043</a>   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structtest__segment.html#ae7e9205b13ccc44263f7a42847bef847">desc</a>;
<a name="l00044"></a><a class="code" href="structtest__segment.html#ad2b4899e4219ecf54f65af3640cbd890">00044</a>   <span class="keyword">const</span> u_char <a class="code" href="structtest__segment.html#ad2b4899e4219ecf54f65af3640cbd890">asdata</a>[1024];
<a name="l00045"></a><a class="code" href="structtest__segment.html#a7508591adaa363fa0f2cda46893fbb6d">00045</a>   <span class="keywordtype">int</span> <a class="code" href="structtest__segment.html#a7508591adaa363fa0f2cda46893fbb6d">len</a>;
<a name="l00046"></a><a class="code" href="structtest__segment.html#a973b8ffe4f03407241c74272624c909f">00046</a>   <span class="keyword">struct </span><a class="code" href="structtest__spec.html">test_spec</a> <a class="code" href="structtest__segment.html#a973b8ffe4f03407241c74272624c909f">sp</a>;
<a name="l00047"></a>00047 } <a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a> [] = 
<a name="l00048"></a>00048 {
<a name="l00049"></a>00049   { <span class="comment">/* 0 */</span> 
<a name="l00050"></a>00050     <span class="stringliteral">&quot;seq1&quot;</span>,
<a name="l00051"></a>00051     <span class="stringliteral">&quot;seq(8466,3,52737,4096)&quot;</span>,
<a name="l00052"></a>00052     { 0x2,0x4, 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00 },
<a name="l00053"></a>00053     10,
<a name="l00054"></a>00054     { <span class="stringliteral">&quot;8466 3 52737 4096&quot;</span>,
<a name="l00055"></a>00055       <span class="stringliteral">&quot;8466 3 52737 4096&quot;</span>,
<a name="l00056"></a>00056       4, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 4096, 4, 8466 },
<a name="l00057"></a>00057   },
<a name="l00058"></a>00058   { <span class="comment">/* 1 */</span>
<a name="l00059"></a>00059     <span class="stringliteral">&quot;seq2&quot;</span>,
<a name="l00060"></a>00060     <span class="stringliteral">&quot;seq(8722) seq(4)&quot;</span>,
<a name="l00061"></a>00061     { 0x2,0x1, 0x22,0x12,
<a name="l00062"></a>00062       0x2,0x1, 0x00,0x04 },
<a name="l00063"></a>00063     8,
<a name="l00064"></a>00064     { <span class="stringliteral">&quot;8722 4&quot;</span>,
<a name="l00065"></a>00065       <span class="stringliteral">&quot;8722 4&quot;</span>,
<a name="l00066"></a>00066       2, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 4, 5, 8722, },
<a name="l00067"></a>00067   },
<a name="l00068"></a>00068   { <span class="comment">/* 2 */</span>
<a name="l00069"></a>00069     <span class="stringliteral">&quot;seq3&quot;</span>,
<a name="l00070"></a>00070     <span class="stringliteral">&quot;seq(8466,3,52737,4096,8722,4)&quot;</span>,
<a name="l00071"></a>00071     { 0x2,0x6, 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 
<a name="l00072"></a>00072                0x22,0x12, 0x00,0x04},
<a name="l00073"></a>00073     14,
<a name="l00074"></a>00074     { <span class="stringliteral">&quot;8466 3 52737 4096 8722 4&quot;</span>,
<a name="l00075"></a>00075       <span class="stringliteral">&quot;8466 3 52737 4096 8722 4&quot;</span>,
<a name="l00076"></a>00076        6, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 3, 5, 8466 },
<a name="l00077"></a>00077   },
<a name="l00078"></a>00078   { <span class="comment">/* 3 */</span>
<a name="l00079"></a>00079     <span class="stringliteral">&quot;seqset&quot;</span>,
<a name="l00080"></a>00080     <span class="stringliteral">&quot;seq(8482,51457) set(5204)&quot;</span>,
<a name="l00081"></a>00081     { 0x2,0x2, 0x21,0x22, 0xc9,0x01,
<a name="l00082"></a>00082       0x1,0x1, 0x14,0x54 },
<a name="l00083"></a>00083     10,
<a name="l00084"></a>00084     { <span class="stringliteral">&quot;8482 51457 {5204}&quot;</span>,
<a name="l00085"></a>00085       <span class="stringliteral">&quot;8482 51457 {5204}&quot;</span>,
<a name="l00086"></a>00086       3, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 5204, 51456, 8482},
<a name="l00087"></a>00087   },
<a name="l00088"></a>00088   { <span class="comment">/* 4 */</span>
<a name="l00089"></a>00089     <span class="stringliteral">&quot;seqset2&quot;</span>,
<a name="l00090"></a>00090     <span class="stringliteral">&quot;seq(8467, 59649) set(4196,48658) set(17322,30745)&quot;</span>,
<a name="l00091"></a>00091     { 0x2,0x2, 0x21,0x13, 0xe9,0x01,
<a name="l00092"></a>00092       0x1,0x2, 0x10,0x64, 0xbe,0x12,
<a name="l00093"></a>00093       0x1,0x2, 0x43,0xaa, 0x78,0x19 },    
<a name="l00094"></a>00094     18,
<a name="l00095"></a>00095     { <span class="stringliteral">&quot;8467 59649 {4196,48658} {17322,30745}&quot;</span>,
<a name="l00096"></a>00096       <span class="stringliteral">&quot;8467 59649 {4196,48658} {17322,30745}&quot;</span>,
<a name="l00097"></a>00097       4, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 48658, 1, 8467},
<a name="l00098"></a>00098   },
<a name="l00099"></a>00099   { <span class="comment">/* 5 */</span>
<a name="l00100"></a>00100     <span class="stringliteral">&quot;multi&quot;</span>,
<a name="l00101"></a>00101     <span class="stringliteral">&quot;seq(6435,59408,21665) set(2457,61697,4369), seq(1842,41590,51793)&quot;</span>,
<a name="l00102"></a>00102     { 0x2,0x3, 0x19,0x23, 0xe8,0x10, 0x54,0xa1,
<a name="l00103"></a>00103       0x1,0x3, 0x09,0x99, 0xf1,0x01, 0x11,0x11,
<a name="l00104"></a>00104       0x2,0x3, 0x07,0x32, 0xa2,0x76, 0xca,0x51 },
<a name="l00105"></a>00105     24,
<a name="l00106"></a>00106     { <span class="stringliteral">&quot;6435 59408 21665 {2457,4369,61697} 1842 41590 51793&quot;</span>,
<a name="l00107"></a>00107       <span class="stringliteral">&quot;6435 59408 21665 {2457,4369,61697} 1842 41590 51793&quot;</span>,
<a name="l00108"></a>00108       7, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 51793, 1, 6435 },
<a name="l00109"></a>00109   },
<a name="l00110"></a>00110   { <span class="comment">/* 6 */</span>
<a name="l00111"></a>00111     <span class="stringliteral">&quot;confed&quot;</span>,
<a name="l00112"></a>00112     <span class="stringliteral">&quot;confseq(123,456,789)&quot;</span>,
<a name="l00113"></a>00113     { 0x3,0x3, 0x00,0x7b, 0x01,0xc8, 0x03,0x15 },
<a name="l00114"></a>00114     8,
<a name="l00115"></a>00115     { <span class="stringliteral">&quot;(123 456 789)&quot;</span>,
<a name="l00116"></a>00116       <span class="stringliteral">&quot;&quot;</span>,
<a name="l00117"></a>00117       0, 3, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 789, 1, <a class="code" href="aspath__test_8c.html#a5b186fff0ea4104d059228ef623bc461">NULL_ASN</a> },
<a name="l00118"></a>00118   },
<a name="l00119"></a>00119   { <span class="comment">/* 7 */</span>
<a name="l00120"></a>00120     <span class="stringliteral">&quot;confed2&quot;</span>,
<a name="l00121"></a>00121     <span class="stringliteral">&quot;confseq(123,456,789) confseq(111,222)&quot;</span>,
<a name="l00122"></a>00122     { 0x3,0x3, 0x00,0x7b, 0x01,0xc8, 0x03,0x15,
<a name="l00123"></a>00123       0x3,0x2, 0x00,0x6f, 0x00,0xde },
<a name="l00124"></a>00124     14,
<a name="l00125"></a>00125     { <span class="stringliteral">&quot;(123 456 789) (111 222)&quot;</span>,
<a name="l00126"></a>00126       <span class="stringliteral">&quot;&quot;</span>,
<a name="l00127"></a>00127       0, 5, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 111, 1, <a class="code" href="aspath__test_8c.html#a5b186fff0ea4104d059228ef623bc461">NULL_ASN</a> },
<a name="l00128"></a>00128   },
<a name="l00129"></a>00129   { <span class="comment">/* 8 */</span>
<a name="l00130"></a>00130     <span class="stringliteral">&quot;confset&quot;</span>,
<a name="l00131"></a>00131     <span class="stringliteral">&quot;confset(456,123,789)&quot;</span>,
<a name="l00132"></a>00132     { 0x4,0x3, 0x01,0xc8, 0x00,0x7b, 0x03,0x15 },
<a name="l00133"></a>00133     8,
<a name="l00134"></a>00134     { <span class="stringliteral">&quot;[123,456,789]&quot;</span>,
<a name="l00135"></a>00135       <span class="stringliteral">&quot;[123,456,789]&quot;</span>,
<a name="l00136"></a>00136       0, 1, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 123, 1, <a class="code" href="aspath__test_8c.html#a5b186fff0ea4104d059228ef623bc461">NULL_ASN</a> },
<a name="l00137"></a>00137   },
<a name="l00138"></a>00138   { <span class="comment">/* 9 */</span>
<a name="l00139"></a>00139     <span class="stringliteral">&quot;confmulti&quot;</span>,
<a name="l00140"></a>00140     <span class="stringliteral">&quot;confseq(123,456,789) confset(222,111) seq(8722) set(4196,48658)&quot;</span>,
<a name="l00141"></a>00141     { 0x3,0x3, 0x00,0x7b, 0x01,0xc8, 0x03,0x15,
<a name="l00142"></a>00142       0x4,0x2, 0x00,0xde, 0x00,0x6f,
<a name="l00143"></a>00143       0x2,0x1, 0x22,0x12,
<a name="l00144"></a>00144       0x1,0x2, 0x10,0x64, 0xbe,0x12 },
<a name="l00145"></a>00145     24,
<a name="l00146"></a>00146     { <span class="stringliteral">&quot;(123 456 789) [111,222] 8722 {4196,48658}&quot;</span>,
<a name="l00147"></a>00147       <span class="stringliteral">&quot;8722 {4196,48658}&quot;</span>,
<a name="l00148"></a>00148       2, 4, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 123, 1, <a class="code" href="aspath__test_8c.html#a5b186fff0ea4104d059228ef623bc461">NULL_ASN</a> },
<a name="l00149"></a>00149   },
<a name="l00150"></a>00150   { <span class="comment">/* 10 */</span>
<a name="l00151"></a>00151     <span class="stringliteral">&quot;seq4&quot;</span>,
<a name="l00152"></a>00152     <span class="stringliteral">&quot;seq(8466,2,52737,4096,8722,4)&quot;</span>,
<a name="l00153"></a>00153     { 0x2,0x6, 0x21,0x12, 0x00,0x02, 0xce,0x01, 0x10,0x00, 
<a name="l00154"></a>00154                0x22,0x12, 0x00,0x04},
<a name="l00155"></a>00155     14,
<a name="l00156"></a>00156     { <span class="stringliteral">&quot;8466 2 52737 4096 8722 4&quot;</span>,
<a name="l00157"></a>00157       <span class="stringliteral">&quot;8466 2 52737 4096 8722 4&quot;</span>,
<a name="l00158"></a>00158       6, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 4096, 1, 8466 },
<a name="l00159"></a>00159   },
<a name="l00160"></a>00160   { <span class="comment">/* 11 */</span>
<a name="l00161"></a>00161     <span class="stringliteral">&quot;tripleseq1&quot;</span>,
<a name="l00162"></a>00162     <span class="stringliteral">&quot;seq(8466,2,52737) seq(4096,8722,4) seq(8722)&quot;</span>,
<a name="l00163"></a>00163     { 0x2,0x3, 0x21,0x12, 0x00,0x02, 0xce,0x01, 
<a name="l00164"></a>00164       0x2,0x3, 0x10,0x00, 0x22,0x12, 0x00,0x04,
<a name="l00165"></a>00165       0x2,0x1, 0x22,0x12},
<a name="l00166"></a>00166     20,
<a name="l00167"></a>00167     { <span class="stringliteral">&quot;8466 2 52737 4096 8722 4 8722&quot;</span>,
<a name="l00168"></a>00168       <span class="stringliteral">&quot;8466 2 52737 4096 8722 4 8722&quot;</span>,
<a name="l00169"></a>00169       7, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 4096, 1, 8466 },
<a name="l00170"></a>00170   },
<a name="l00171"></a>00171   { <span class="comment">/* 12 */</span> 
<a name="l00172"></a>00172     <span class="stringliteral">&quot;someprivate&quot;</span>,
<a name="l00173"></a>00173     <span class="stringliteral">&quot;seq(8466,64512,52737,65535)&quot;</span>,
<a name="l00174"></a>00174     { 0x2,0x4, 0x21,0x12, 0xfc,0x00, 0xce,0x01, 0xff,0xff },
<a name="l00175"></a>00175     10,
<a name="l00176"></a>00176     { <span class="stringliteral">&quot;8466 64512 52737 65535&quot;</span>,
<a name="l00177"></a>00177       <span class="stringliteral">&quot;8466 64512 52737 65535&quot;</span>,
<a name="l00178"></a>00178       4, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 65535, 4, 8466 },
<a name="l00179"></a>00179   },
<a name="l00180"></a>00180   { <span class="comment">/* 13 */</span> 
<a name="l00181"></a>00181     <span class="stringliteral">&quot;allprivate&quot;</span>,
<a name="l00182"></a>00182     <span class="stringliteral">&quot;seq(65534,64512,64513,65535)&quot;</span>,
<a name="l00183"></a>00183     { 0x2,0x4, 0xff,0xfe, 0xfc,0x00, 0xfc,0x01, 0xff,0xff },
<a name="l00184"></a>00184     10,
<a name="l00185"></a>00185     { <span class="stringliteral">&quot;65534 64512 64513 65535&quot;</span>,
<a name="l00186"></a>00186       <span class="stringliteral">&quot;65534 64512 64513 65535&quot;</span>,
<a name="l00187"></a>00187       4, 0, <a class="code" href="aspath__test_8c.html#a290f263c8da182c9494f9325c7c2a96f">ALL_PRIVATE</a>, 65534, 4, 65534 },
<a name="l00188"></a>00188   },
<a name="l00189"></a>00189   { <span class="comment">/* 14 */</span> 
<a name="l00190"></a>00190     <span class="stringliteral">&quot;long&quot;</span>,
<a name="l00191"></a>00191     <span class="stringliteral">&quot;seq(8466,3,52737,4096,34285,&lt;repeated 49 more times&gt;)&quot;</span>,
<a name="l00192"></a>00192     { 0x2,0xfa, 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00193"></a>00193                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00194"></a>00194                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00195"></a>00195                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00196"></a>00196                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00197"></a>00197                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00198"></a>00198                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00199"></a>00199                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00200"></a>00200                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00201"></a>00201                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00202"></a>00202                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00203"></a>00203                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00204"></a>00204                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00205"></a>00205                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00206"></a>00206                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00207"></a>00207                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00208"></a>00208                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00209"></a>00209                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00210"></a>00210                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00211"></a>00211                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00212"></a>00212                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00213"></a>00213                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00214"></a>00214                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00215"></a>00215                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00216"></a>00216                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00217"></a>00217                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00218"></a>00218                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00219"></a>00219                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00220"></a>00220                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00221"></a>00221                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00222"></a>00222                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00223"></a>00223                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00224"></a>00224                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00225"></a>00225                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00226"></a>00226                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00227"></a>00227                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00228"></a>00228                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00229"></a>00229                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00230"></a>00230                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00231"></a>00231                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00232"></a>00232                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00233"></a>00233                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00234"></a>00234                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00235"></a>00235                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00236"></a>00236                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00237"></a>00237                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00238"></a>00238                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00239"></a>00239                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00240"></a>00240                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed,
<a name="l00241"></a>00241                 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x85,0xed, },
<a name="l00242"></a>00242     502,
<a name="l00243"></a>00243     { <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00244"></a>00244       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00245"></a>00245       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00246"></a>00246       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00247"></a>00247       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00248"></a>00248       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00249"></a>00249       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00250"></a>00250       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00251"></a>00251       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00252"></a>00252       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00253"></a>00253       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00254"></a>00254       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00255"></a>00255       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00256"></a>00256       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00257"></a>00257       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00258"></a>00258       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00259"></a>00259       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00260"></a>00260       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00261"></a>00261       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00262"></a>00262       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00263"></a>00263       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00264"></a>00264       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00265"></a>00265       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00266"></a>00266       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00267"></a>00267       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285&quot;</span>,
<a name="l00268"></a>00268       
<a name="l00269"></a>00269       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00270"></a>00270       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00271"></a>00271       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00272"></a>00272       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00273"></a>00273       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00274"></a>00274       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00275"></a>00275       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00276"></a>00276       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00277"></a>00277       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00278"></a>00278       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00279"></a>00279       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00280"></a>00280       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00281"></a>00281       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00282"></a>00282       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00283"></a>00283       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00284"></a>00284       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00285"></a>00285       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00286"></a>00286       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00287"></a>00287       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00288"></a>00288       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00289"></a>00289       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00290"></a>00290       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00291"></a>00291       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00292"></a>00292       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00293"></a>00293       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285&quot;</span>,
<a name="l00294"></a>00294       250, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 4096, 4, 8466 },
<a name="l00295"></a>00295   },
<a name="l00296"></a>00296   { <span class="comment">/* 15 */</span> 
<a name="l00297"></a>00297     <span class="stringliteral">&quot;seq1extra&quot;</span>,
<a name="l00298"></a>00298     <span class="stringliteral">&quot;seq(8466,3,52737,4096,3456)&quot;</span>,
<a name="l00299"></a>00299     { 0x2,0x5, 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x0d,0x80 },
<a name="l00300"></a>00300     12,
<a name="l00301"></a>00301     { <span class="stringliteral">&quot;8466 3 52737 4096 3456&quot;</span>,
<a name="l00302"></a>00302       <span class="stringliteral">&quot;8466 3 52737 4096 3456&quot;</span>,
<a name="l00303"></a>00303       5, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 4096, 4, 8466 },
<a name="l00304"></a>00304   },
<a name="l00305"></a>00305   { <span class="comment">/* 16 */</span>
<a name="l00306"></a>00306     <span class="stringliteral">&quot;empty&quot;</span>,
<a name="l00307"></a>00307     <span class="stringliteral">&quot;&lt;empty&gt;&quot;</span>,
<a name="l00308"></a>00308     {},
<a name="l00309"></a>00309     0,
<a name="l00310"></a>00310     { <span class="stringliteral">&quot;&quot;</span>, <span class="stringliteral">&quot;&quot;</span>, 0, 0, 0, 0, 0, 0 },
<a name="l00311"></a>00311   },
<a name="l00312"></a>00312   { <span class="comment">/* 17 */</span> 
<a name="l00313"></a>00313     <span class="stringliteral">&quot;redundantset&quot;</span>,
<a name="l00314"></a>00314     <span class="stringliteral">&quot;seq(8466,3,52737,4096,3456) set(7099,8153,8153,8153)&quot;</span>,
<a name="l00315"></a>00315     { 0x2,0x5, 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x0d,0x80,
<a name="l00316"></a>00316       0x1,0x4, 0x1b,0xbb, 0x1f,0xd9, 0x1f,0xd9, 0x1f,0xd9 },
<a name="l00317"></a>00317     22,
<a name="l00318"></a>00318     {
<a name="l00319"></a>00319      <span class="comment">/* We shouldn&#39;t ever /generate/ such paths. However, we should</span>
<a name="l00320"></a>00320 <span class="comment">      * cope with them fine.</span>
<a name="l00321"></a>00321 <span class="comment">      */</span>
<a name="l00322"></a>00322      <span class="stringliteral">&quot;8466 3 52737 4096 3456 {7099,8153}&quot;</span>,
<a name="l00323"></a>00323       <span class="stringliteral">&quot;8466 3 52737 4096 3456 {7099,8153}&quot;</span>,
<a name="l00324"></a>00324       6, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 4096, 4, 8466 },
<a name="l00325"></a>00325   },
<a name="l00326"></a>00326   { <span class="comment">/* 18 */</span>
<a name="l00327"></a>00327     <span class="stringliteral">&quot;reconcile_lead_asp&quot;</span>,
<a name="l00328"></a>00328     <span class="stringliteral">&quot;seq(6435,59408,21665) set(23456,23456,23456), seq(23456,23456,23456)&quot;</span>,
<a name="l00329"></a>00329     { 0x2,0x3, 0x19,0x23, 0xe8,0x10, 0x54,0xa1,
<a name="l00330"></a>00330       0x1,0x3, 0x5b,0xa0, 0x5b,0xa0, 0x5b,0xa0,
<a name="l00331"></a>00331       0x2,0x3, 0x5b,0xa0, 0x5b,0xa0, 0x5b,0xa0 },
<a name="l00332"></a>00332     24,
<a name="l00333"></a>00333     { <span class="stringliteral">&quot;6435 59408 21665 {23456} 23456 23456 23456&quot;</span>,
<a name="l00334"></a>00334       <span class="stringliteral">&quot;6435 59408 21665 {23456} 23456 23456 23456&quot;</span>,
<a name="l00335"></a>00335       7, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 23456, 1, 6435 },
<a name="l00336"></a>00336   },
<a name="l00337"></a>00337   { <span class="comment">/* 19 */</span>
<a name="l00338"></a>00338     <span class="stringliteral">&quot;reconcile_new_asp&quot;</span>,
<a name="l00339"></a>00339     <span class="stringliteral">&quot;set(2457,61697,4369), seq(1842,41591,51793)&quot;</span>,
<a name="l00340"></a>00340     { 
<a name="l00341"></a>00341       0x1,0x3, 0x09,0x99, 0xf1,0x01, 0x11,0x11,
<a name="l00342"></a>00342       0x2,0x3, 0x07,0x32, 0xa2,0x77, 0xca,0x51 },
<a name="l00343"></a>00343     16,
<a name="l00344"></a>00344     { <span class="stringliteral">&quot;{2457,4369,61697} 1842 41591 51793&quot;</span>,
<a name="l00345"></a>00345       <span class="stringliteral">&quot;{2457,4369,61697} 1842 41591 51793&quot;</span>,
<a name="l00346"></a>00346       4, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 51793, 1, 2457 },
<a name="l00347"></a>00347   },
<a name="l00348"></a>00348   { <span class="comment">/* 20 */</span>
<a name="l00349"></a>00349     <span class="stringliteral">&quot;reconcile_confed&quot;</span>,
<a name="l00350"></a>00350     <span class="stringliteral">&quot;confseq(123,456,789) confset(456,124,788) seq(6435,59408,21665)&quot;</span>
<a name="l00351"></a>00351     <span class="stringliteral">&quot; set(23456,23456,23456), seq(23456,23456,23456)&quot;</span>,
<a name="l00352"></a>00352     { 0x3,0x3, 0x00,0x7b, 0x01,0xc8, 0x03,0x15,
<a name="l00353"></a>00353       0x4,0x3, 0x01,0xc8, 0x00,0x7c, 0x03,0x14,
<a name="l00354"></a>00354       0x2,0x3, 0x19,0x23, 0xe8,0x10, 0x54,0xa1,
<a name="l00355"></a>00355       0x1,0x3, 0x5b,0xa0, 0x5b,0xa0, 0x5b,0xa0,
<a name="l00356"></a>00356       0x2,0x3, 0x5b,0xa0, 0x5b,0xa0, 0x5b,0xa0 },
<a name="l00357"></a>00357     40,
<a name="l00358"></a>00358     { <span class="stringliteral">&quot;(123 456 789) [124,456,788] 6435 59408 21665&quot;</span>
<a name="l00359"></a>00359       <span class="stringliteral">&quot; {23456} 23456 23456 23456&quot;</span>,
<a name="l00360"></a>00360       <span class="stringliteral">&quot;6435 59408 21665 {23456} 23456 23456 23456&quot;</span>,
<a name="l00361"></a>00361       7, 4, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 23456, 1, 6435 },
<a name="l00362"></a>00362   },
<a name="l00363"></a>00363   { <span class="comment">/* 21 */</span>
<a name="l00364"></a>00364     <span class="stringliteral">&quot;reconcile_start_trans&quot;</span>,
<a name="l00365"></a>00365     <span class="stringliteral">&quot;seq(23456,23456,23456) seq(6435,59408,21665)&quot;</span>,
<a name="l00366"></a>00366     { 0x2,0x3, 0x5b,0xa0, 0x5b,0xa0, 0x5b,0xa0,
<a name="l00367"></a>00367       0x2,0x3, 0x19,0x23, 0xe8,0x10, 0x54,0xa1, },
<a name="l00368"></a>00368     16,
<a name="l00369"></a>00369     { <span class="stringliteral">&quot;23456 23456 23456 6435 59408 21665&quot;</span>,
<a name="l00370"></a>00370       <span class="stringliteral">&quot;23456 23456 23456 6435 59408 21665&quot;</span>,
<a name="l00371"></a>00371       6, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 21665, 1, 23456 },
<a name="l00372"></a>00372   },
<a name="l00373"></a>00373   { <span class="comment">/* 22 */</span>
<a name="l00374"></a>00374     <span class="stringliteral">&quot;reconcile_start_trans4&quot;</span>,
<a name="l00375"></a>00375     <span class="stringliteral">&quot;seq(1842,41591,51793) seq(6435,59408,21665)&quot;</span>,
<a name="l00376"></a>00376     { 0x2,0x3, 0x07,0x32, 0xa2,0x77, 0xca,0x51,
<a name="l00377"></a>00377       0x2,0x3, 0x19,0x23, 0xe8,0x10, 0x54,0xa1, },
<a name="l00378"></a>00378     16,
<a name="l00379"></a>00379     { <span class="stringliteral">&quot;1842 41591 51793 6435 59408 21665&quot;</span>,
<a name="l00380"></a>00380       <span class="stringliteral">&quot;1842 41591 51793 6435 59408 21665&quot;</span>,
<a name="l00381"></a>00381       6, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 41591, 1, 1842 },
<a name="l00382"></a>00382   },
<a name="l00383"></a>00383   { <span class="comment">/* 23 */</span>
<a name="l00384"></a>00384     <span class="stringliteral">&quot;reconcile_start_trans_error&quot;</span>,
<a name="l00385"></a>00385     <span class="stringliteral">&quot;seq(23456,23456,23456) seq(6435,59408)&quot;</span>,
<a name="l00386"></a>00386     { 0x2,0x3, 0x5b,0xa0, 0x5b,0xa0, 0x5b,0xa0,
<a name="l00387"></a>00387       0x2,0x2, 0x19,0x23, 0xe8,0x10, },
<a name="l00388"></a>00388     14,
<a name="l00389"></a>00389     { <span class="stringliteral">&quot;23456 23456 23456 6435 59408&quot;</span>,
<a name="l00390"></a>00390       <span class="stringliteral">&quot;23456 23456 23456 6435 59408&quot;</span>,
<a name="l00391"></a>00391       5, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 59408, 1, 23456 },
<a name="l00392"></a>00392   },
<a name="l00393"></a>00393   { <span class="comment">/* 24 */</span> 
<a name="l00394"></a>00394     <span class="stringliteral">&quot;redundantset2&quot;</span>,
<a name="l00395"></a>00395     <span class="stringliteral">&quot;seq(8466,3,52737,4096,3456) set(7099,8153,8153,8153,7099)&quot;</span>,
<a name="l00396"></a>00396     { 0x2,0x5, 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x0d,0x80,
<a name="l00397"></a>00397       0x1,0x5, 0x1b,0xbb, 0x1f,0xd9, 0x1f,0xd9, 0x1f,0xd9, 0x1b,0xbb,},
<a name="l00398"></a>00398     24,
<a name="l00399"></a>00399     {
<a name="l00400"></a>00400      <span class="comment">/* We should weed out duplicate set members. */</span>
<a name="l00401"></a>00401      <span class="stringliteral">&quot;8466 3 52737 4096 3456 {7099,8153}&quot;</span>,
<a name="l00402"></a>00402       <span class="stringliteral">&quot;8466 3 52737 4096 3456 {7099,8153}&quot;</span>,
<a name="l00403"></a>00403       6, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 4096, 4, 8466 },
<a name="l00404"></a>00404   },
<a name="l00405"></a>00405   { <span class="comment">/* 25 */</span> 
<a name="l00406"></a>00406     <span class="stringliteral">&quot;zero-size overflow&quot;</span>,
<a name="l00407"></a>00407     <span class="stringliteral">&quot;#ASNs = 0, data = seq(8466 3 52737 4096 3456)&quot;</span>,
<a name="l00408"></a>00408     { 0x2,0x0, 0x21,0x12, 0x00,0x03, 0xce,0x01, 0x10,0x00, 0x0d,0x80 },
<a name="l00409"></a>00409     12,
<a name="l00410"></a>00410     { <span class="stringliteral">&quot;&quot;</span>, <span class="stringliteral">&quot;&quot;</span>,
<a name="l00411"></a>00411       0, 0, 0, 0, 0, 0 },
<a name="l00412"></a>00412   },
<a name="l00413"></a>00413   { <span class="comment">/* 26  */</span> 
<a name="l00414"></a>00414     <span class="stringliteral">&quot;zero-size overflow + valid segment&quot;</span>,
<a name="l00415"></a>00415     <span class="stringliteral">&quot;seq(#AS=0:8466 3 52737),seq(4096 3456)&quot;</span>,
<a name="l00416"></a>00416     { 0x2,0x0, 0x21,0x12, 0x00,0x03, 0xce,0x01, 
<a name="l00417"></a>00417       0x2,0x2, 0x10,0x00, 0x0d,0x80 },
<a name="l00418"></a>00418     14
<a name="l00419"></a>00419     ,
<a name="l00420"></a>00420     { <span class="stringliteral">&quot;&quot;</span>, <span class="stringliteral">&quot;&quot;</span>,
<a name="l00421"></a>00421       0, 0, 0, 0, 0, 0 },
<a name="l00422"></a>00422   },
<a name="l00423"></a>00423   { <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, {0}, 0, { <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0, 0 } }
<a name="l00424"></a>00424 };
<a name="l00425"></a>00425 
<a name="l00426"></a>00426 <span class="comment">/* prepending tests */</span>
<a name="l00427"></a><a class="code" href="structtests.html">00427</a> <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structtests.html">tests</a> {
<a name="l00428"></a><a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">00428</a>   <span class="keyword">const</span> <span class="keyword">struct </span><a class="code" href="structtest__segment.html">test_segment</a> *<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>;
<a name="l00429"></a><a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">00429</a>   <span class="keyword">const</span> <span class="keyword">struct </span><a class="code" href="structtest__segment.html">test_segment</a> *<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>;
<a name="l00430"></a><a class="code" href="structtests.html#a62193cefad2a26922a1db10be65d9644">00430</a>   <span class="keyword">struct </span><a class="code" href="structtest__spec.html">test_spec</a> <a class="code" href="structtests.html#a62193cefad2a26922a1db10be65d9644">sp</a>;
<a name="l00431"></a>00431 } <a class="code" href="aspath__test_8c.html#abad2f044fa19335311b056f120c477bd">prepend_tests</a>[] = 
<a name="l00432"></a>00432 {
<a name="l00433"></a>00433   { &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[0], &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[1],
<a name="l00434"></a>00434     { <span class="stringliteral">&quot;8466 3 52737 4096 8722 4&quot;</span>,
<a name="l00435"></a>00435       <span class="stringliteral">&quot;8466 3 52737 4096 8722 4&quot;</span>,
<a name="l00436"></a>00436       6, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 4096, 1, 8466 },
<a name="l00437"></a>00437   },
<a name="l00438"></a>00438   { &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[1], &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[3],
<a name="l00439"></a>00439     { <span class="stringliteral">&quot;8722 4 8482 51457 {5204}&quot;</span>,
<a name="l00440"></a>00440       <span class="stringliteral">&quot;8722 4 8482 51457 {5204}&quot;</span>,
<a name="l00441"></a>00441       5, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 5204, 1, 8722 }
<a name="l00442"></a>00442   },
<a name="l00443"></a>00443   { &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[3], &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[4],
<a name="l00444"></a>00444     { <span class="stringliteral">&quot;8482 51457 {5204} 8467 59649 {4196,48658} {17322,30745}&quot;</span>,
<a name="l00445"></a>00445       <span class="stringliteral">&quot;8482 51457 {5204} 8467 59649 {4196,48658} {17322,30745}&quot;</span>,
<a name="l00446"></a>00446       7, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 5204, 1, 8482 },
<a name="l00447"></a>00447   },
<a name="l00448"></a>00448   { &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[4], &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[5],
<a name="l00449"></a>00449     { <span class="stringliteral">&quot;8467 59649 {4196,48658} {17322,30745} 6435 59408 21665&quot;</span>
<a name="l00450"></a>00450       <span class="stringliteral">&quot; {2457,4369,61697} 1842 41590 51793&quot;</span>,
<a name="l00451"></a>00451       <span class="stringliteral">&quot;8467 59649 {4196,48658} {17322,30745} 6435 59408 21665&quot;</span>
<a name="l00452"></a>00452       <span class="stringliteral">&quot; {2457,4369,61697} 1842 41590 51793&quot;</span>,
<a name="l00453"></a>00453       11, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 61697, 1, 8467 }
<a name="l00454"></a>00454   },
<a name="l00455"></a>00455   { &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[5], &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[6],
<a name="l00456"></a>00456     { <span class="stringliteral">&quot;6435 59408 21665 {2457,4369,61697} 1842 41590 51793 (123 456 789)&quot;</span>,
<a name="l00457"></a>00457       <span class="stringliteral">&quot;6435 59408 21665 {2457,4369,61697} 1842 41590 51793 (123 456 789)&quot;</span>,
<a name="l00458"></a>00458       7, 3, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 123, 1, 6435 },
<a name="l00459"></a>00459   },
<a name="l00460"></a>00460   { &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[6], &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[7],
<a name="l00461"></a>00461     { <span class="stringliteral">&quot;(123 456 789) (123 456 789) (111 222)&quot;</span>,
<a name="l00462"></a>00462       <span class="stringliteral">&quot;&quot;</span>,
<a name="l00463"></a>00463       0, 8, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 111, 1, 0 }
<a name="l00464"></a>00464   },
<a name="l00465"></a>00465   { &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[7], &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[8],
<a name="l00466"></a>00466     { <span class="stringliteral">&quot;(123 456 789) (111 222) [123,456,789]&quot;</span>,
<a name="l00467"></a>00467       <span class="stringliteral">&quot;&quot;</span>,
<a name="l00468"></a>00468       0, 6, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 111, 1, 0 }
<a name="l00469"></a>00469   },
<a name="l00470"></a>00470   { &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[8], &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[9],
<a name="l00471"></a>00471     { <span class="stringliteral">&quot;[123,456,789] (123 456 789) [111,222] 8722 {4196,48658}&quot;</span>,
<a name="l00472"></a>00472       <span class="stringliteral">&quot;[123,456,789] (123 456 789) [111,222] 8722 {4196,48658}&quot;</span>,
<a name="l00473"></a>00473       2, 5, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 456, 1, <a class="code" href="aspath__test_8c.html#a5b186fff0ea4104d059228ef623bc461">NULL_ASN</a> },
<a name="l00474"></a>00474   },
<a name="l00475"></a>00475   { &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[9], &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[8],
<a name="l00476"></a>00476     { <span class="stringliteral">&quot;(123 456 789) [111,222] 8722 {4196,48658} [123,456,789]&quot;</span>,
<a name="l00477"></a>00477       <span class="stringliteral">&quot;8722 {4196,48658} [123,456,789]&quot;</span>,
<a name="l00478"></a>00478       2, 5, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 48658, 1, <a class="code" href="aspath__test_8c.html#a5b186fff0ea4104d059228ef623bc461">NULL_ASN</a> },
<a name="l00479"></a>00479   },
<a name="l00480"></a>00480   { &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[14], &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[11],
<a name="l00481"></a>00481     { <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00482"></a>00482       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00483"></a>00483       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00484"></a>00484       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00485"></a>00485       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00486"></a>00486       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00487"></a>00487       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00488"></a>00488       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00489"></a>00489       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00490"></a>00490       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00491"></a>00491       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00492"></a>00492       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00493"></a>00493       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00494"></a>00494       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00495"></a>00495       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00496"></a>00496       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00497"></a>00497       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00498"></a>00498       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00499"></a>00499       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00500"></a>00500       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00501"></a>00501       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00502"></a>00502       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00503"></a>00503       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00504"></a>00504       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00505"></a>00505       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00506"></a>00506       <span class="stringliteral">&quot;8466 2 52737 4096 8722 4 8722&quot;</span>,
<a name="l00507"></a>00507       
<a name="l00508"></a>00508       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00509"></a>00509       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00510"></a>00510       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00511"></a>00511       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00512"></a>00512       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00513"></a>00513       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00514"></a>00514       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00515"></a>00515       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00516"></a>00516       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00517"></a>00517       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00518"></a>00518       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00519"></a>00519       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00520"></a>00520       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00521"></a>00521       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00522"></a>00522       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00523"></a>00523       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00524"></a>00524       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00525"></a>00525       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00526"></a>00526       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00527"></a>00527       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00528"></a>00528       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00529"></a>00529       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00530"></a>00530       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00531"></a>00531       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00532"></a>00532       <span class="stringliteral">&quot;8466 3 52737 4096 34285 8466 3 52737 4096 34285 &quot;</span>
<a name="l00533"></a>00533       <span class="stringliteral">&quot;8466 2 52737 4096 8722 4 8722&quot;</span>,
<a name="l00534"></a>00534       257, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 4096, 1000, 8466 },
<a name="l00535"></a>00535   },
<a name="l00536"></a>00536   { <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, { <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0, 0, 0, 0, 0, 0, } },
<a name="l00537"></a>00537 };
<a name="l00538"></a>00538 
<a name="l00539"></a><a class="code" href="aspath__test_8c.html#a9e351ac640403971252bf832343756d7">00539</a> <span class="keyword">struct </span><a class="code" href="structtests.html">tests</a> <a class="code" href="aspath__test_8c.html#a9e351ac640403971252bf832343756d7">reconcile_tests</a>[] =
<a name="l00540"></a>00540 {
<a name="l00541"></a>00541   { &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[18], &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[19],
<a name="l00542"></a>00542     { <span class="stringliteral">&quot;6435 59408 21665 {2457,4369,61697} 1842 41591 51793&quot;</span>,
<a name="l00543"></a>00543       <span class="stringliteral">&quot;6435 59408 21665 {2457,4369,61697} 1842 41591 51793&quot;</span>,
<a name="l00544"></a>00544       7, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 51793, 1, 6435 },
<a name="l00545"></a>00545   },
<a name="l00546"></a>00546   { &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[19], &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[18],
<a name="l00547"></a>00547     <span class="comment">/* AS_PATH (19) has more hops than NEW_AS_PATH,</span>
<a name="l00548"></a>00548 <span class="comment">     * so just AS_PATH should be used (though, this practice</span>
<a name="l00549"></a>00549 <span class="comment">     * is bad imho).</span>
<a name="l00550"></a>00550 <span class="comment">     */</span>
<a name="l00551"></a>00551     { <span class="stringliteral">&quot;{2457,4369,61697} 1842 41591 51793 6435 59408 21665 {23456} 23456 23456 23456&quot;</span>,
<a name="l00552"></a>00552       <span class="stringliteral">&quot;{2457,4369,61697} 1842 41591 51793 6435 59408 21665 {23456} 23456 23456 23456&quot;</span>,
<a name="l00553"></a>00553       11, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 51793, 1, 6435 },
<a name="l00554"></a>00554   },
<a name="l00555"></a>00555   { &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[20], &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[19],
<a name="l00556"></a>00556     { <span class="stringliteral">&quot;(123 456 789) [124,456,788] 6435 59408 21665&quot;</span>
<a name="l00557"></a>00557       <span class="stringliteral">&quot; {2457,4369,61697} 1842 41591 51793&quot;</span>,
<a name="l00558"></a>00558       <span class="stringliteral">&quot;6435 59408 21665 {2457,4369,61697} 1842 41591 51793&quot;</span>,
<a name="l00559"></a>00559       7, 4, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 51793, 1, 6435 },
<a name="l00560"></a>00560   },
<a name="l00561"></a>00561   { &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[21], &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[22],
<a name="l00562"></a>00562     { <span class="stringliteral">&quot;1842 41591 51793 6435 59408 21665&quot;</span>,
<a name="l00563"></a>00563       <span class="stringliteral">&quot;1842 41591 51793 6435 59408 21665&quot;</span>,
<a name="l00564"></a>00564       6, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 51793, 1, 1842 },
<a name="l00565"></a>00565   },
<a name="l00566"></a>00566   { &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[23], &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[22],
<a name="l00567"></a>00567     { <span class="stringliteral">&quot;23456 23456 23456 6435 59408 1842 41591 51793 6435 59408 21665&quot;</span>,
<a name="l00568"></a>00568       <span class="stringliteral">&quot;23456 23456 23456 6435 59408 1842 41591 51793 6435 59408 21665&quot;</span>,
<a name="l00569"></a>00569       11, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 51793, 1, 1842 },
<a name="l00570"></a>00570   },
<a name="l00571"></a>00571   { <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, { <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0, 0, 0, 0, 0, 0, } },
<a name="l00572"></a>00572 };
<a name="l00573"></a>00573   
<a name="l00574"></a><a class="code" href="aspath__test_8c.html#a9b85d4110efd0617d6e3af74fc5dffca">00574</a> <span class="keyword">struct </span><a class="code" href="structtests.html">tests</a> <a class="code" href="aspath__test_8c.html#a9b85d4110efd0617d6e3af74fc5dffca">aggregate_tests</a>[] =
<a name="l00575"></a>00575 {
<a name="l00576"></a>00576   { &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[0], &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[2],
<a name="l00577"></a>00577     { <span class="stringliteral">&quot;8466 3 52737 4096 {4,8722}&quot;</span>,
<a name="l00578"></a>00578       <span class="stringliteral">&quot;8466 3 52737 4096 {4,8722}&quot;</span>,
<a name="l00579"></a>00579       5, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 4, 1, 8466 },
<a name="l00580"></a>00580   },
<a name="l00581"></a>00581   { &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[2], &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[0],
<a name="l00582"></a>00582     { <span class="stringliteral">&quot;8466 3 52737 4096 {4,8722}&quot;</span>,
<a name="l00583"></a>00583       <span class="stringliteral">&quot;8466 3 52737 4096 {4,8722}&quot;</span>,
<a name="l00584"></a>00584       5, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 8722, 1, 8466 },
<a name="l00585"></a>00585   },
<a name="l00586"></a>00586   { &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[2], &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[10],
<a name="l00587"></a>00587     { <span class="stringliteral">&quot;8466 {2,3,4,4096,8722,52737}&quot;</span>,
<a name="l00588"></a>00588       <span class="stringliteral">&quot;8466 {2,3,4,4096,8722,52737}&quot;</span>,
<a name="l00589"></a>00589       2, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 8722, 5, 8466 },
<a name="l00590"></a>00590   },
<a name="l00591"></a>00591   { &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[10], &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[2],
<a name="l00592"></a>00592     { <span class="stringliteral">&quot;8466 {2,3,4,4096,8722,52737}&quot;</span>,
<a name="l00593"></a>00593       <span class="stringliteral">&quot;8466 {2,3,4,4096,8722,52737}&quot;</span>,
<a name="l00594"></a>00594       2, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 2, 20000, 8466 },
<a name="l00595"></a>00595   },
<a name="l00596"></a>00596 
<a name="l00597"></a>00597   { &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[5], &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[18],
<a name="l00598"></a>00598     { <span class="stringliteral">&quot;6435 59408 21665 {1842,2457,4369,23456,41590,51793,61697}&quot;</span>,
<a name="l00599"></a>00599       <span class="stringliteral">&quot;6435 59408 21665 {1842,2457,4369,23456,41590,51793,61697}&quot;</span>,
<a name="l00600"></a>00600       4, 0, <a class="code" href="aspath__test_8c.html#a74aaf5c2b09864e695a5c1e743fa2659">NOT_ALL_PRIVATE</a>, 41590, 1, 6435 },
<a name="l00601"></a>00601   },
<a name="l00602"></a>00602 
<a name="l00603"></a>00603   { <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, { <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>, 0, 0}  },
<a name="l00604"></a>00604 };
<a name="l00605"></a>00605 
<a name="l00606"></a><a class="code" href="structcompare__tests.html">00606</a> <span class="keyword">struct </span><a class="code" href="structcompare__tests.html">compare_tests</a> 
<a name="l00607"></a>00607 {
<a name="l00608"></a><a class="code" href="structcompare__tests.html#a41bff5b405b062610fe202513279711b">00608</a>   <span class="keywordtype">int</span> <a class="code" href="structcompare__tests.html#a41bff5b405b062610fe202513279711b">test_index1</a>;
<a name="l00609"></a><a class="code" href="structcompare__tests.html#a70ea8ed378cc6bb82f2e395c2b292dcf">00609</a>   <span class="keywordtype">int</span> <a class="code" href="structcompare__tests.html#a70ea8ed378cc6bb82f2e395c2b292dcf">test_index2</a>;
<a name="l00610"></a><a class="code" href="aspath__test_8c.html#a20db74eb8b66f06d57b3202db8d9b769">00610</a> <span class="preprocessor">#define CMP_RES_YES 1</span>
<a name="l00611"></a><a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">00611</a> <span class="preprocessor"></span><span class="preprocessor">#define CMP_RES_NO 0</span>
<a name="l00612"></a><a class="code" href="structcompare__tests.html#acad5f207b12f286db2e1b0ccfd81f878">00612</a> <span class="preprocessor"></span>  <span class="keywordtype">char</span> <a class="code" href="structcompare__tests.html#acad5f207b12f286db2e1b0ccfd81f878">shouldbe_cmp</a>;
<a name="l00613"></a><a class="code" href="structcompare__tests.html#a6fe84ac245defa35393d4a22a0b75713">00613</a>   <span class="keywordtype">char</span> <a class="code" href="structcompare__tests.html#a6fe84ac245defa35393d4a22a0b75713">shouldbe_confed</a>;
<a name="l00614"></a>00614 } <a class="code" href="aspath__test_8c.html#ac4902a861de8936a2d35014cc21c1f3a">left_compare</a> [] =
<a name="l00615"></a>00615 {
<a name="l00616"></a>00616   { 0, 1, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a>, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a> },
<a name="l00617"></a>00617   { 0, 2, <a class="code" href="aspath__test_8c.html#a20db74eb8b66f06d57b3202db8d9b769">CMP_RES_YES</a>, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a> },
<a name="l00618"></a>00618   { 0, 11, <a class="code" href="aspath__test_8c.html#a20db74eb8b66f06d57b3202db8d9b769">CMP_RES_YES</a>, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a> },
<a name="l00619"></a>00619   { 0, 15, <a class="code" href="aspath__test_8c.html#a20db74eb8b66f06d57b3202db8d9b769">CMP_RES_YES</a>, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a> },
<a name="l00620"></a>00620   { 0, 16, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a>, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a> },
<a name="l00621"></a>00621   { 1, 11, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a>, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a> },
<a name="l00622"></a>00622   { 6, 7, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a>, <a class="code" href="aspath__test_8c.html#a20db74eb8b66f06d57b3202db8d9b769">CMP_RES_YES</a> },
<a name="l00623"></a>00623   { 6, 8, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a>, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a> },
<a name="l00624"></a>00624   { 7, 8, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a>, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a> },
<a name="l00625"></a>00625   { 1, 9, <a class="code" href="aspath__test_8c.html#a20db74eb8b66f06d57b3202db8d9b769">CMP_RES_YES</a>, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a> },
<a name="l00626"></a>00626   { 0, 9, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a>, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a> },
<a name="l00627"></a>00627   { 3, 9, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a>, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a> },
<a name="l00628"></a>00628   { 0, 6, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a>, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a> },
<a name="l00629"></a>00629   { 1, 6, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a>, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a> },
<a name="l00630"></a>00630   { 0, 8, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a>, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a> },
<a name="l00631"></a>00631   { 1, 8, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a>, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a> },
<a name="l00632"></a>00632   { 11, 6, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a>, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a> },
<a name="l00633"></a>00633   { 11, 7, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a>, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a> },
<a name="l00634"></a>00634   { 11, 8, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a>, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a> },
<a name="l00635"></a>00635   { 9, 6, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a>, <a class="code" href="aspath__test_8c.html#a20db74eb8b66f06d57b3202db8d9b769">CMP_RES_YES</a> },
<a name="l00636"></a>00636   { 9, 7, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a>, <a class="code" href="aspath__test_8c.html#a20db74eb8b66f06d57b3202db8d9b769">CMP_RES_YES</a> },
<a name="l00637"></a>00637   { 9, 8, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a>, <a class="code" href="aspath__test_8c.html#a4d779c1734a5009c0311792ab92feecb">CMP_RES_NO</a> },
<a name="l00638"></a>00638 };
<a name="l00639"></a>00639 
<a name="l00640"></a>00640 <span class="comment">/* make an aspath from a data stream */</span>
<a name="l00641"></a>00641 <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *
<a name="l00642"></a><a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">00642</a> <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (<span class="keyword">const</span> u_char *<a class="code" href="dict_8c.html#a43a278d13284fb3412e9eee1db1d967e">data</a>, <span class="keywordtype">size_t</span> len, <span class="keywordtype">int</span> use32bit)
<a name="l00643"></a>00643 {
<a name="l00644"></a>00644   <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00645"></a>00645   <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *as;
<a name="l00646"></a>00646   
<a name="l00647"></a>00647   <span class="keywordflow">if</span> (len)
<a name="l00648"></a>00648     {
<a name="l00649"></a>00649       s = <a class="code" href="stream_8c.html#a7117cdad9fa5e5ae633e0cf08d047459">stream_new</a> (len);
<a name="l00650"></a>00650       <a class="code" href="stream_8c.html#a2f540a71efdf46e8c3a923f73e9f3b73">stream_put</a> (s, data, len);
<a name="l00651"></a>00651     }
<a name="l00652"></a>00652   as = <a class="code" href="bgp__aspath_8c.html#ac9e8aff45338b803e560318286e3f2af">aspath_parse</a> (s, len, use32bit, 0);
<a name="l00653"></a>00653   
<a name="l00654"></a>00654   <span class="keywordflow">if</span> (s)
<a name="l00655"></a>00655     <a class="code" href="stream_8c.html#ac25ca0f9b32a76b4ea34ecb3c9d62481">stream_free</a> (s);
<a name="l00656"></a>00656   
<a name="l00657"></a>00657   <span class="keywordflow">return</span> as;
<a name="l00658"></a>00658 }
<a name="l00659"></a>00659 
<a name="l00660"></a>00660 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00661"></a><a class="code" href="aspath__test_8c.html#a9dda9defba22f8bf925582c0c0a00c2a">00661</a> <a class="code" href="aspath__test_8c.html#a9dda9defba22f8bf925582c0c0a00c2a">printbytes</a> (<span class="keyword">const</span> u_char *bytes, <span class="keywordtype">int</span> len)
<a name="l00662"></a>00662 {
<a name="l00663"></a>00663   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a> = 0;
<a name="l00664"></a>00664   <span class="keywordflow">while</span> (i &lt; len)
<a name="l00665"></a>00665     {
<a name="l00666"></a>00666       <span class="keywordflow">if</span> (i % 2)
<a name="l00667"></a>00667         printf (<span class="stringliteral">&quot;%02hhx%s&quot;</span>, bytes[i], <span class="stringliteral">&quot; &quot;</span>);
<a name="l00668"></a>00668       <span class="keywordflow">else</span>
<a name="l00669"></a>00669         printf (<span class="stringliteral">&quot;0x%02hhx&quot;</span>, bytes[i]);
<a name="l00670"></a>00670       i++;
<a name="l00671"></a>00671     }
<a name="l00672"></a>00672   printf (<span class="stringliteral">&quot;\n&quot;</span>);
<a name="l00673"></a>00673 }  
<a name="l00674"></a>00674 
<a name="l00675"></a>00675 <span class="comment">/* validate the given aspath */</span>
<a name="l00676"></a>00676 <span class="keyword">static</span> <span class="keywordtype">int</span>
<a name="l00677"></a><a class="code" href="aspath__test_8c.html#a2be8f4ecae883a2b486e6b1cd7bafe73">00677</a> <a class="code" href="aspath__test_8c.html#a2be8f4ecae883a2b486e6b1cd7bafe73">validate</a> (<span class="keyword">struct</span> <a class="code" href="structaspath.html">aspath</a> *as, <span class="keyword">const</span> <span class="keyword">struct</span> <a class="code" href="structtest__spec.html">test_spec</a> *sp)
<a name="l00678"></a>00678 {
<a name="l00679"></a>00679   <span class="keywordtype">size_t</span> bytes, bytes4;
<a name="l00680"></a>00680   <span class="keywordtype">int</span> fails = 0;
<a name="l00681"></a>00681   <span class="keyword">const</span> u_char *out;
<a name="l00682"></a>00682   <span class="keyword">static</span> <span class="keyword">struct </span><a class="code" href="structstream.html">stream</a> *<a class="code" href="spgrid_8c.html#a5d97d3b42a0d6c9ec9a3e56f2616a6a5">s</a>;
<a name="l00683"></a>00683   <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *asinout, *asconfeddel, *asstr, *as4;
<a name="l00684"></a>00684   
<a name="l00685"></a>00685   out = <a class="code" href="bgp__aspath_8c.html#a46008828118eb829c4f5b010175de9ab">aspath_snmp_pathseg</a> (as, &amp;bytes);
<a name="l00686"></a>00686   asinout = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (out, bytes, 0);
<a name="l00687"></a>00687   
<a name="l00688"></a>00688   <span class="comment">/* Excercise AS4 parsing a bit, with a dogfood test */</span>
<a name="l00689"></a>00689   <span class="keywordflow">if</span> (!s)
<a name="l00690"></a>00690     s = <a class="code" href="stream_8c.html#a7117cdad9fa5e5ae633e0cf08d047459">stream_new</a> (4096);
<a name="l00691"></a>00691   bytes4 = <a class="code" href="bgp__aspath_8c.html#a716059e44a39a56b3e05020bec13872e">aspath_put</a> (s, as, 1);
<a name="l00692"></a>00692   as4 = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (<a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a>(s), bytes4, 1);
<a name="l00693"></a>00693   
<a name="l00694"></a>00694   asstr = <a class="code" href="bgp__aspath_8c.html#aa2514807244e353a19d3f48316cc7885">aspath_str2aspath</a> (sp-&gt;<a class="code" href="structtest__spec.html#a2eb0ac4de4590460526ff41c43b664c9">shouldbe</a>);
<a name="l00695"></a>00695   
<a name="l00696"></a>00696   asconfeddel = <a class="code" href="bgp__aspath_8c.html#a3a932cff645a730d2e5d9aeec874e127">aspath_delete_confed_seq</a> (<a class="code" href="bgp__aspath_8c.html#a2de7834df2eead0bfa5a117ce265e6ca">aspath_dup</a> (asinout));
<a name="l00697"></a>00697   
<a name="l00698"></a>00698   printf (<span class="stringliteral">&quot;got: %s\n&quot;</span>, <a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a>(as));
<a name="l00699"></a>00699   
<a name="l00700"></a>00700   <span class="comment">/* the parsed path should match the specified &#39;shouldbe&#39; string.</span>
<a name="l00701"></a>00701 <span class="comment">   * We should pass the &quot;eat our own dog food&quot; test, be able to output</span>
<a name="l00702"></a>00702 <span class="comment">   * this path and then input it again. Ie the path resulting from:</span>
<a name="l00703"></a>00703 <span class="comment">   *</span>
<a name="l00704"></a>00704 <span class="comment">   *   aspath_parse(aspath_put(as)) </span>
<a name="l00705"></a>00705 <span class="comment">   *</span>
<a name="l00706"></a>00706 <span class="comment">   * should:</span>
<a name="l00707"></a>00707 <span class="comment">   *</span>
<a name="l00708"></a>00708 <span class="comment">   * - also match the specified &#39;shouldbe&#39; value</span>
<a name="l00709"></a>00709 <span class="comment">   * - hash to same value as original path</span>
<a name="l00710"></a>00710 <span class="comment">   * - have same hops and confed counts as original, and as the</span>
<a name="l00711"></a>00711 <span class="comment">   *   the specified counts</span>
<a name="l00712"></a>00712 <span class="comment">   *</span>
<a name="l00713"></a>00713 <span class="comment">   * aspath_str2aspath() and shouldbe should match</span>
<a name="l00714"></a>00714 <span class="comment">   *</span>
<a name="l00715"></a>00715 <span class="comment">   * We do the same for:</span>
<a name="l00716"></a>00716 <span class="comment">   *</span>
<a name="l00717"></a>00717 <span class="comment">   *   aspath_parse(aspath_put(as,USE32BIT))</span>
<a name="l00718"></a>00718 <span class="comment">   *</span>
<a name="l00719"></a>00719 <span class="comment">   * Confederation related tests: </span>
<a name="l00720"></a>00720 <span class="comment">   * - aspath_delete_confed_seq(aspath) should match shouldbe_confed</span>
<a name="l00721"></a>00721 <span class="comment">   * - aspath_delete_confed_seq should be idempotent.</span>
<a name="l00722"></a>00722 <span class="comment">   */</span>
<a name="l00723"></a>00723   <span class="keywordflow">if</span> (strcmp(<a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (as), sp-&gt;<a class="code" href="structtest__spec.html#a2eb0ac4de4590460526ff41c43b664c9">shouldbe</a>)
<a name="l00724"></a>00724          <span class="comment">/* hash validation */</span>
<a name="l00725"></a>00725       || (<a class="code" href="bgp__aspath_8c.html#a0ff2c762b3aea1084db8500839a8d314">aspath_key_make</a> (as) != <a class="code" href="bgp__aspath_8c.html#a0ff2c762b3aea1084db8500839a8d314">aspath_key_make</a> (asinout))
<a name="l00726"></a>00726          <span class="comment">/* by string */</span>
<a name="l00727"></a>00727       || strcmp(<a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asinout), sp-&gt;<a class="code" href="structtest__spec.html#a2eb0ac4de4590460526ff41c43b664c9">shouldbe</a>)
<a name="l00728"></a>00728          <span class="comment">/* By 4-byte parsing */</span>
<a name="l00729"></a>00729       || strcmp(<a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (as4), sp-&gt;<a class="code" href="structtest__spec.html#a2eb0ac4de4590460526ff41c43b664c9">shouldbe</a>)
<a name="l00730"></a>00730          <span class="comment">/* by various path counts */</span>
<a name="l00731"></a>00731       || (<a class="code" href="bgp__aspath_8c.html#ae0142a952a7219bbe0244f266ab0f0f5">aspath_count_hops</a> (as) != sp-&gt;<a class="code" href="structtest__spec.html#af0db615126b91ae525c29ad29e68623f">hops</a>)
<a name="l00732"></a>00732       || (<a class="code" href="bgp__aspath_8c.html#a8638c553cd3d2c87161aa489ea0a45d7">aspath_count_confeds</a> (as) != sp-&gt;<a class="code" href="structtest__spec.html#a80c9f70ca6d4e7d6c02f8b97fbea49b1">confeds</a>)
<a name="l00733"></a>00733       || (<a class="code" href="bgp__aspath_8c.html#ae0142a952a7219bbe0244f266ab0f0f5">aspath_count_hops</a> (asinout) != sp-&gt;<a class="code" href="structtest__spec.html#af0db615126b91ae525c29ad29e68623f">hops</a>)
<a name="l00734"></a>00734       || (<a class="code" href="bgp__aspath_8c.html#a8638c553cd3d2c87161aa489ea0a45d7">aspath_count_confeds</a> (asinout) != sp-&gt;<a class="code" href="structtest__spec.html#a80c9f70ca6d4e7d6c02f8b97fbea49b1">confeds</a>))
<a name="l00735"></a>00735     {
<a name="l00736"></a>00736       <a class="code" href="aspath__test_8c.html#ad4ec5aab9b62fbbe9b8fc2d8ac0a5989">failed</a>++;
<a name="l00737"></a>00737       fails++;
<a name="l00738"></a>00738       printf (<span class="stringliteral">&quot;shouldbe:\n%s\n&quot;</span>, sp-&gt;<a class="code" href="structtest__spec.html#a2eb0ac4de4590460526ff41c43b664c9">shouldbe</a>);
<a name="l00739"></a>00739       printf (<span class="stringliteral">&quot;as4:\n%s\n&quot;</span>, <a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (as4));
<a name="l00740"></a>00740       printf (<span class="stringliteral">&quot;hash keys: in: %d out-&gt;in: %d\n&quot;</span>, 
<a name="l00741"></a>00741               <a class="code" href="bgp__aspath_8c.html#a0ff2c762b3aea1084db8500839a8d314">aspath_key_make</a> (as), <a class="code" href="bgp__aspath_8c.html#a0ff2c762b3aea1084db8500839a8d314">aspath_key_make</a> (asinout));
<a name="l00742"></a>00742       printf (<span class="stringliteral">&quot;hops: %d, counted %d %d\n&quot;</span>, sp-&gt;<a class="code" href="structtest__spec.html#af0db615126b91ae525c29ad29e68623f">hops</a>, 
<a name="l00743"></a>00743               <a class="code" href="bgp__aspath_8c.html#ae0142a952a7219bbe0244f266ab0f0f5">aspath_count_hops</a> (as),
<a name="l00744"></a>00744               <a class="code" href="bgp__aspath_8c.html#ae0142a952a7219bbe0244f266ab0f0f5">aspath_count_hops</a> (asinout) );
<a name="l00745"></a>00745       printf (<span class="stringliteral">&quot;confeds: %d, counted %d %d\n&quot;</span>, sp-&gt;<a class="code" href="structtest__spec.html#a80c9f70ca6d4e7d6c02f8b97fbea49b1">confeds</a>,
<a name="l00746"></a>00746               <a class="code" href="bgp__aspath_8c.html#a8638c553cd3d2c87161aa489ea0a45d7">aspath_count_confeds</a> (as),
<a name="l00747"></a>00747               <a class="code" href="bgp__aspath_8c.html#a8638c553cd3d2c87161aa489ea0a45d7">aspath_count_confeds</a> (asinout));
<a name="l00748"></a>00748       printf (<span class="stringliteral">&quot;out-&gt;in:\n%s\nbytes: &quot;</span>, <a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a>(asinout));
<a name="l00749"></a>00749       <a class="code" href="aspath__test_8c.html#a9dda9defba22f8bf925582c0c0a00c2a">printbytes</a> (out, bytes);
<a name="l00750"></a>00750     }
<a name="l00751"></a>00751          <span class="comment">/* basic confed related tests */</span>
<a name="l00752"></a>00752   <span class="keywordflow">if</span> ((<a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asconfeddel) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> 
<a name="l00753"></a>00753           &amp;&amp; sp-&gt;<a class="code" href="structtest__spec.html#ac41569f24493df6c959f4658aba11f00">shouldbe_delete_confed</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00754"></a>00754       || (<a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asconfeddel) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> 
<a name="l00755"></a>00755           &amp;&amp; sp-&gt;<a class="code" href="structtest__spec.html#ac41569f24493df6c959f4658aba11f00">shouldbe_delete_confed</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00756"></a>00756       || strcmp(<a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asconfeddel), sp-&gt;<a class="code" href="structtest__spec.html#ac41569f24493df6c959f4658aba11f00">shouldbe_delete_confed</a>)
<a name="l00757"></a>00757          <span class="comment">/* delete_confed_seq should be idempotent */</span>
<a name="l00758"></a>00758       || (<a class="code" href="bgp__aspath_8c.html#a0ff2c762b3aea1084db8500839a8d314">aspath_key_make</a> (asconfeddel) 
<a name="l00759"></a>00759           != <a class="code" href="bgp__aspath_8c.html#a0ff2c762b3aea1084db8500839a8d314">aspath_key_make</a> (<a class="code" href="bgp__aspath_8c.html#a3a932cff645a730d2e5d9aeec874e127">aspath_delete_confed_seq</a> (asconfeddel))))
<a name="l00760"></a>00760     {
<a name="l00761"></a>00761       <a class="code" href="aspath__test_8c.html#ad4ec5aab9b62fbbe9b8fc2d8ac0a5989">failed</a>++;
<a name="l00762"></a>00762       fails++;
<a name="l00763"></a>00763       printf (<span class="stringliteral">&quot;confed_del: %s\n&quot;</span>, <a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asconfeddel));
<a name="l00764"></a>00764       printf (<span class="stringliteral">&quot;should be: %s\n&quot;</span>, sp-&gt;<a class="code" href="structtest__spec.html#ac41569f24493df6c959f4658aba11f00">shouldbe_delete_confed</a>);
<a name="l00765"></a>00765     }
<a name="l00766"></a>00766       <span class="comment">/* aspath_str2aspath test */</span>
<a name="l00767"></a>00767   <span class="keywordflow">if</span> ((<a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asstr) == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; sp-&gt;<a class="code" href="structtest__spec.html#a2eb0ac4de4590460526ff41c43b664c9">shouldbe</a> != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00768"></a>00768       || (<a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asstr) != <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a> &amp;&amp; sp-&gt;<a class="code" href="structtest__spec.html#a2eb0ac4de4590460526ff41c43b664c9">shouldbe</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00769"></a>00769       || strcmp(<a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asstr), sp-&gt;<a class="code" href="structtest__spec.html#a2eb0ac4de4590460526ff41c43b664c9">shouldbe</a>))
<a name="l00770"></a>00770     {
<a name="l00771"></a>00771       <a class="code" href="aspath__test_8c.html#ad4ec5aab9b62fbbe9b8fc2d8ac0a5989">failed</a>++;
<a name="l00772"></a>00772       fails++;
<a name="l00773"></a>00773       printf (<span class="stringliteral">&quot;asstr: %s\n&quot;</span>, <a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asstr));
<a name="l00774"></a>00774     }
<a name="l00775"></a>00775   
<a name="l00776"></a>00776     <span class="comment">/* loop, private and first as checks */</span>
<a name="l00777"></a>00777   <span class="keywordflow">if</span> ((sp-&gt;<a class="code" href="structtest__spec.html#add5530fb487a9c8303630fbfa4555e38">does_loop</a> &amp;&amp; <a class="code" href="bgp__aspath_8c.html#a09c83e4313915a5191a19439186f2280">aspath_loop_check</a> (as, sp-&gt;<a class="code" href="structtest__spec.html#add5530fb487a9c8303630fbfa4555e38">does_loop</a>) == 0)
<a name="l00778"></a>00778       || (sp-&gt;<a class="code" href="structtest__spec.html#ad36a95dce2160851f702bb30559a0690">doesnt_loop</a> &amp;&amp; <a class="code" href="bgp__aspath_8c.html#a09c83e4313915a5191a19439186f2280">aspath_loop_check</a> (as, sp-&gt;<a class="code" href="structtest__spec.html#ad36a95dce2160851f702bb30559a0690">doesnt_loop</a>) != 0)
<a name="l00779"></a>00779       || (<a class="code" href="bgp__aspath_8c.html#a808020dd81343ccfb8f4cf5f50f5f11c">aspath_private_as_check</a> (as) != sp-&gt;<a class="code" href="structtest__spec.html#a1e7d302696d26728c37fa5c776be351a">private_as</a>)
<a name="l00780"></a>00780       || (<a class="code" href="bgp__aspath_8c.html#a9ed7eb61027a6f70bb24f3ffc5cc399f">aspath_firstas_check</a> (as,sp-&gt;<a class="code" href="structtest__spec.html#a3d644bb1c3a265912fa3fcc7279fc239">first</a>)
<a name="l00781"></a>00781           &amp;&amp; sp-&gt;<a class="code" href="structtest__spec.html#a3d644bb1c3a265912fa3fcc7279fc239">first</a> == 0))
<a name="l00782"></a>00782     {
<a name="l00783"></a>00783       <a class="code" href="aspath__test_8c.html#ad4ec5aab9b62fbbe9b8fc2d8ac0a5989">failed</a>++;
<a name="l00784"></a>00784       fails++;
<a name="l00785"></a>00785       printf (<span class="stringliteral">&quot;firstas: %d,  got %d\n&quot;</span>, sp-&gt;<a class="code" href="structtest__spec.html#a3d644bb1c3a265912fa3fcc7279fc239">first</a>,
<a name="l00786"></a>00786               <a class="code" href="bgp__aspath_8c.html#a9ed7eb61027a6f70bb24f3ffc5cc399f">aspath_firstas_check</a> (as,sp-&gt;<a class="code" href="structtest__spec.html#a3d644bb1c3a265912fa3fcc7279fc239">first</a>));
<a name="l00787"></a>00787       printf (<span class="stringliteral">&quot;loop does: %d %d, doesnt: %d %d\n&quot;</span>,
<a name="l00788"></a>00788               sp-&gt;<a class="code" href="structtest__spec.html#add5530fb487a9c8303630fbfa4555e38">does_loop</a>, <a class="code" href="bgp__aspath_8c.html#a09c83e4313915a5191a19439186f2280">aspath_loop_check</a> (as, sp-&gt;<a class="code" href="structtest__spec.html#add5530fb487a9c8303630fbfa4555e38">does_loop</a>),
<a name="l00789"></a>00789               sp-&gt;<a class="code" href="structtest__spec.html#ad36a95dce2160851f702bb30559a0690">doesnt_loop</a>, <a class="code" href="bgp__aspath_8c.html#a09c83e4313915a5191a19439186f2280">aspath_loop_check</a> (as, sp-&gt;<a class="code" href="structtest__spec.html#ad36a95dce2160851f702bb30559a0690">doesnt_loop</a>));
<a name="l00790"></a>00790       printf (<span class="stringliteral">&quot;private check: %d %d\n&quot;</span>, sp-&gt;<a class="code" href="structtest__spec.html#a1e7d302696d26728c37fa5c776be351a">private_as</a>,
<a name="l00791"></a>00791               <a class="code" href="bgp__aspath_8c.html#a808020dd81343ccfb8f4cf5f50f5f11c">aspath_private_as_check</a> (as));
<a name="l00792"></a>00792     }
<a name="l00793"></a>00793   <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asinout);
<a name="l00794"></a>00794   <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (as4);
<a name="l00795"></a>00795   
<a name="l00796"></a>00796   <a class="code" href="bgp__aspath_8c.html#af8db79f3e25ae5a01dfec9070557c21a">aspath_free</a> (asconfeddel);
<a name="l00797"></a>00797   <a class="code" href="bgp__aspath_8c.html#af8db79f3e25ae5a01dfec9070557c21a">aspath_free</a> (asstr);
<a name="l00798"></a>00798   <a class="code" href="stream_8c.html#aee8fd31485ebc2f0a556a6a5d5c2d1e6">stream_reset</a> (s);
<a name="l00799"></a>00799   
<a name="l00800"></a>00800   <span class="keywordflow">return</span> fails;
<a name="l00801"></a>00801 }
<a name="l00802"></a>00802 
<a name="l00803"></a>00803 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00804"></a><a class="code" href="aspath__test_8c.html#af469fbbb5488f58abd7af612fa7fd558">00804</a> <a class="code" href="aspath__test_8c.html#af469fbbb5488f58abd7af612fa7fd558">empty_get_test</a> ()
<a name="l00805"></a>00805 {
<a name="l00806"></a>00806   <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *as = <a class="code" href="bgp__aspath_8c.html#aa737121f7df6f3e64869fc9a6c330b2f">aspath_empty_get</a> ();
<a name="l00807"></a>00807   <span class="keyword">struct </span><a class="code" href="structtest__spec.html">test_spec</a> sp = { <span class="stringliteral">&quot;&quot;</span>, <span class="stringliteral">&quot;&quot;</span>, 0, 0, 0, 0, 0, 0 };
<a name="l00808"></a>00808 
<a name="l00809"></a>00809   printf (<span class="stringliteral">&quot;empty_get_test, as: %s\n&quot;</span>,<a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (as));
<a name="l00810"></a>00810   <span class="keywordflow">if</span> (!<a class="code" href="aspath__test_8c.html#a2be8f4ecae883a2b486e6b1cd7bafe73">validate</a> (as, &amp;sp))
<a name="l00811"></a>00811     printf (<span class="stringliteral">&quot;%s\n&quot;</span>, <a class="code" href="aspath__test_8c.html#aba51915c87d64af47fb1cc59348961c9">OK</a>);
<a name="l00812"></a>00812   <span class="keywordflow">else</span>
<a name="l00813"></a>00813     printf (<span class="stringliteral">&quot;%s!\n&quot;</span>, <a class="code" href="aspath__test_8c.html#a681680feae4df4182d532564c42fa1fc">FAILED</a>);
<a name="l00814"></a>00814   
<a name="l00815"></a>00815   printf (<span class="stringliteral">&quot;\n&quot;</span>);
<a name="l00816"></a>00816   
<a name="l00817"></a>00817   <a class="code" href="bgp__aspath_8c.html#af8db79f3e25ae5a01dfec9070557c21a">aspath_free</a> (as);
<a name="l00818"></a>00818 }
<a name="l00819"></a>00819 
<a name="l00820"></a>00820 <span class="comment">/* basic parsing test */</span>
<a name="l00821"></a>00821 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00822"></a><a class="code" href="aspath__test_8c.html#a281fc4418b741bf17dff0594d83c13f7">00822</a> <a class="code" href="aspath__test_8c.html#a281fc4418b741bf17dff0594d83c13f7">parse_test</a> (<span class="keyword">struct</span> <a class="code" href="structtest__segment.html">test_segment</a> *<a class="code" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>)
<a name="l00823"></a>00823 {
<a name="l00824"></a>00824   <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *asp;
<a name="l00825"></a>00825   
<a name="l00826"></a>00826   printf (<span class="stringliteral">&quot;%s: %s\n&quot;</span>, t-&gt;<a class="code" href="structtest__segment.html#aafa6de67016b06ae43ef95d9148776ca">name</a>, t-&gt;<a class="code" href="structtest__segment.html#ae7e9205b13ccc44263f7a42847bef847">desc</a>);
<a name="l00827"></a>00827 
<a name="l00828"></a>00828   asp = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (t-&gt;<a class="code" href="structtest__segment.html#ad2b4899e4219ecf54f65af3640cbd890">asdata</a>, t-&gt;<a class="code" href="structtest__segment.html#a7508591adaa363fa0f2cda46893fbb6d">len</a>, 0);
<a name="l00829"></a>00829 
<a name="l00830"></a>00830   printf (<span class="stringliteral">&quot;aspath: %s\nvalidating...:\n&quot;</span>, <a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asp));
<a name="l00831"></a>00831 
<a name="l00832"></a>00832   <span class="keywordflow">if</span> (!<a class="code" href="aspath__test_8c.html#a2be8f4ecae883a2b486e6b1cd7bafe73">validate</a> (asp, &amp;t-&gt;<a class="code" href="structtest__segment.html#a973b8ffe4f03407241c74272624c909f">sp</a>))
<a name="l00833"></a>00833     printf (<a class="code" href="aspath__test_8c.html#aba51915c87d64af47fb1cc59348961c9">OK</a> <span class="stringliteral">&quot;\n&quot;</span>);
<a name="l00834"></a>00834   <span class="keywordflow">else</span>
<a name="l00835"></a>00835     printf (<a class="code" href="aspath__test_8c.html#a681680feae4df4182d532564c42fa1fc">FAILED</a> <span class="stringliteral">&quot;\n&quot;</span>);
<a name="l00836"></a>00836   
<a name="l00837"></a>00837   printf (<span class="stringliteral">&quot;\n&quot;</span>);
<a name="l00838"></a>00838   <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asp);
<a name="l00839"></a>00839 }
<a name="l00840"></a>00840 
<a name="l00841"></a>00841 <span class="comment">/* prepend testing */</span>
<a name="l00842"></a>00842 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00843"></a><a class="code" href="aspath__test_8c.html#a3620ec4b829b159d7e07477fcb560ff2">00843</a> <a class="code" href="aspath__test_8c.html#a3620ec4b829b159d7e07477fcb560ff2">prepend_test</a> (<span class="keyword">struct</span> <a class="code" href="structtests.html">tests</a> *<a class="code" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>)
<a name="l00844"></a>00844 {
<a name="l00845"></a>00845   <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *asp1, *asp2, *ascratch;
<a name="l00846"></a>00846   
<a name="l00847"></a>00847   printf (<span class="stringliteral">&quot;prepend %s: %s\n&quot;</span>, t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#aafa6de67016b06ae43ef95d9148776ca">name</a>, t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#ae7e9205b13ccc44263f7a42847bef847">desc</a>);
<a name="l00848"></a>00848   printf (<span class="stringliteral">&quot;to %s: %s\n&quot;</span>, t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#aafa6de67016b06ae43ef95d9148776ca">name</a>, t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#ae7e9205b13ccc44263f7a42847bef847">desc</a>);
<a name="l00849"></a>00849   
<a name="l00850"></a>00850   asp1 = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#ad2b4899e4219ecf54f65af3640cbd890">asdata</a>, t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#a7508591adaa363fa0f2cda46893fbb6d">len</a>, 0);
<a name="l00851"></a>00851   asp2 = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#ad2b4899e4219ecf54f65af3640cbd890">asdata</a>, t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#a7508591adaa363fa0f2cda46893fbb6d">len</a>, 0);
<a name="l00852"></a>00852   
<a name="l00853"></a>00853   ascratch = <a class="code" href="bgp__aspath_8c.html#a2de7834df2eead0bfa5a117ce265e6ca">aspath_dup</a> (asp2);
<a name="l00854"></a>00854   <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asp2);
<a name="l00855"></a>00855   
<a name="l00856"></a>00856   asp2 = <a class="code" href="bgp__aspath_8c.html#a042b5a8463ffb3adedffa05e69640726">aspath_prepend</a> (asp1, ascratch);
<a name="l00857"></a>00857   
<a name="l00858"></a>00858   printf (<span class="stringliteral">&quot;aspath: %s\n&quot;</span>, <a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asp2));
<a name="l00859"></a>00859   
<a name="l00860"></a>00860   <span class="keywordflow">if</span> (!<a class="code" href="aspath__test_8c.html#a2be8f4ecae883a2b486e6b1cd7bafe73">validate</a> (asp2, &amp;t-&gt;<a class="code" href="structtests.html#a62193cefad2a26922a1db10be65d9644">sp</a>))
<a name="l00861"></a>00861     printf (<span class="stringliteral">&quot;%s\n&quot;</span>, <a class="code" href="aspath__test_8c.html#aba51915c87d64af47fb1cc59348961c9">OK</a>);
<a name="l00862"></a>00862   <span class="keywordflow">else</span>
<a name="l00863"></a>00863     printf (<span class="stringliteral">&quot;%s!\n&quot;</span>, <a class="code" href="aspath__test_8c.html#a681680feae4df4182d532564c42fa1fc">FAILED</a>);
<a name="l00864"></a>00864   
<a name="l00865"></a>00865   printf (<span class="stringliteral">&quot;\n&quot;</span>);
<a name="l00866"></a>00866   <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asp1);
<a name="l00867"></a>00867   <a class="code" href="bgp__aspath_8c.html#af8db79f3e25ae5a01dfec9070557c21a">aspath_free</a> (asp2);
<a name="l00868"></a>00868 }
<a name="l00869"></a>00869 
<a name="l00870"></a>00870 <span class="comment">/* empty-prepend testing */</span>
<a name="l00871"></a>00871 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00872"></a><a class="code" href="aspath__test_8c.html#a6e4af653066fa0503b0d04545ab5a1c3">00872</a> <a class="code" href="aspath__test_8c.html#a6e4af653066fa0503b0d04545ab5a1c3">empty_prepend_test</a> (<span class="keyword">struct</span> <a class="code" href="structtest__segment.html">test_segment</a> *<a class="code" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>)
<a name="l00873"></a>00873 {
<a name="l00874"></a>00874   <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *asp1, *asp2, *ascratch;
<a name="l00875"></a>00875   
<a name="l00876"></a>00876   printf (<span class="stringliteral">&quot;empty prepend %s: %s\n&quot;</span>, t-&gt;<a class="code" href="structtest__segment.html#aafa6de67016b06ae43ef95d9148776ca">name</a>, t-&gt;<a class="code" href="structtest__segment.html#ae7e9205b13ccc44263f7a42847bef847">desc</a>);
<a name="l00877"></a>00877   
<a name="l00878"></a>00878   asp1 = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (t-&gt;<a class="code" href="structtest__segment.html#ad2b4899e4219ecf54f65af3640cbd890">asdata</a>, t-&gt;<a class="code" href="structtest__segment.html#a7508591adaa363fa0f2cda46893fbb6d">len</a>, 0);
<a name="l00879"></a>00879   asp2 = <a class="code" href="bgp__aspath_8c.html#aadc92a26e3c657307be1c2057b187cda">aspath_empty</a> ();
<a name="l00880"></a>00880   
<a name="l00881"></a>00881   ascratch = <a class="code" href="bgp__aspath_8c.html#a2de7834df2eead0bfa5a117ce265e6ca">aspath_dup</a> (asp2);
<a name="l00882"></a>00882   <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asp2);
<a name="l00883"></a>00883   
<a name="l00884"></a>00884   asp2 = <a class="code" href="bgp__aspath_8c.html#a042b5a8463ffb3adedffa05e69640726">aspath_prepend</a> (asp1, ascratch);
<a name="l00885"></a>00885   
<a name="l00886"></a>00886   printf (<span class="stringliteral">&quot;aspath: %s\n&quot;</span>, <a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asp2));
<a name="l00887"></a>00887   
<a name="l00888"></a>00888   <span class="keywordflow">if</span> (!<a class="code" href="aspath__test_8c.html#a2be8f4ecae883a2b486e6b1cd7bafe73">validate</a> (asp2, &amp;t-&gt;<a class="code" href="structtest__segment.html#a973b8ffe4f03407241c74272624c909f">sp</a>))
<a name="l00889"></a>00889     printf (<a class="code" href="aspath__test_8c.html#aba51915c87d64af47fb1cc59348961c9">OK</a> <span class="stringliteral">&quot;\n&quot;</span>);
<a name="l00890"></a>00890   <span class="keywordflow">else</span>
<a name="l00891"></a>00891     printf (<a class="code" href="aspath__test_8c.html#a681680feae4df4182d532564c42fa1fc">FAILED</a> <span class="stringliteral">&quot;!\n&quot;</span>);
<a name="l00892"></a>00892   
<a name="l00893"></a>00893   printf (<span class="stringliteral">&quot;\n&quot;</span>);
<a name="l00894"></a>00894   <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asp1);
<a name="l00895"></a>00895   <a class="code" href="bgp__aspath_8c.html#af8db79f3e25ae5a01dfec9070557c21a">aspath_free</a> (asp2);
<a name="l00896"></a>00896 }
<a name="l00897"></a>00897 
<a name="l00898"></a>00898 <span class="comment">/* as2+as4 reconciliation testing */</span>
<a name="l00899"></a>00899 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00900"></a><a class="code" href="aspath__test_8c.html#ae39c18dbcf182cc47306199e3b78d27a">00900</a> <a class="code" href="aspath__test_8c.html#ae39c18dbcf182cc47306199e3b78d27a">as4_reconcile_test</a> (<span class="keyword">struct</span> <a class="code" href="structtests.html">tests</a> *<a class="code" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>)
<a name="l00901"></a>00901 {
<a name="l00902"></a>00902   <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *asp1, *asp2, *ascratch;
<a name="l00903"></a>00903   
<a name="l00904"></a>00904   printf (<span class="stringliteral">&quot;reconciling %s:\n  %s\n&quot;</span>, t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#aafa6de67016b06ae43ef95d9148776ca">name</a>, t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#ae7e9205b13ccc44263f7a42847bef847">desc</a>);
<a name="l00905"></a>00905   printf (<span class="stringliteral">&quot;with %s:\n  %s\n&quot;</span>, t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#aafa6de67016b06ae43ef95d9148776ca">name</a>, t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#ae7e9205b13ccc44263f7a42847bef847">desc</a>);
<a name="l00906"></a>00906   
<a name="l00907"></a>00907   asp1 = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#ad2b4899e4219ecf54f65af3640cbd890">asdata</a>, t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#a7508591adaa363fa0f2cda46893fbb6d">len</a>, 0);
<a name="l00908"></a>00908   asp2 = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#ad2b4899e4219ecf54f65af3640cbd890">asdata</a>, t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#a7508591adaa363fa0f2cda46893fbb6d">len</a>, 0);
<a name="l00909"></a>00909   
<a name="l00910"></a>00910   ascratch = <a class="code" href="bgp__aspath_8c.html#a1a485a8779fb5fcf0ac2efeb2bdc204d">aspath_reconcile_as4</a> (asp1, asp2);
<a name="l00911"></a>00911   
<a name="l00912"></a>00912   <span class="keywordflow">if</span> (!<a class="code" href="aspath__test_8c.html#a2be8f4ecae883a2b486e6b1cd7bafe73">validate</a> (ascratch, &amp;t-&gt;<a class="code" href="structtests.html#a62193cefad2a26922a1db10be65d9644">sp</a>))
<a name="l00913"></a>00913     printf (<a class="code" href="aspath__test_8c.html#aba51915c87d64af47fb1cc59348961c9">OK</a> <span class="stringliteral">&quot;\n&quot;</span>);
<a name="l00914"></a>00914   <span class="keywordflow">else</span>
<a name="l00915"></a>00915     printf (<a class="code" href="aspath__test_8c.html#a681680feae4df4182d532564c42fa1fc">FAILED</a> <span class="stringliteral">&quot;!\n&quot;</span>);
<a name="l00916"></a>00916   
<a name="l00917"></a>00917   printf (<span class="stringliteral">&quot;\n&quot;</span>);
<a name="l00918"></a>00918   <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asp1);
<a name="l00919"></a>00919   <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asp2);
<a name="l00920"></a>00920   <a class="code" href="bgp__aspath_8c.html#af8db79f3e25ae5a01dfec9070557c21a">aspath_free</a> (ascratch);
<a name="l00921"></a>00921 }
<a name="l00922"></a>00922 
<a name="l00923"></a>00923 
<a name="l00924"></a>00924 <span class="comment">/* aggregation testing */</span>
<a name="l00925"></a>00925 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00926"></a><a class="code" href="aspath__test_8c.html#aa064753241609ff2054f1b997d06670c">00926</a> <a class="code" href="aspath__test_8c.html#aa064753241609ff2054f1b997d06670c">aggregate_test</a> (<span class="keyword">struct</span> <a class="code" href="structtests.html">tests</a> *<a class="code" href="test-sig_8c.html#ab4ed0bba3292270af8ad67b45a21280d">t</a>)
<a name="l00927"></a>00927 {
<a name="l00928"></a>00928   <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *asp1, *asp2, *ascratch;
<a name="l00929"></a>00929   
<a name="l00930"></a>00930   printf (<span class="stringliteral">&quot;aggregate %s: %s\n&quot;</span>, t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#aafa6de67016b06ae43ef95d9148776ca">name</a>, t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#ae7e9205b13ccc44263f7a42847bef847">desc</a>);
<a name="l00931"></a>00931   printf (<span class="stringliteral">&quot;with %s: %s\n&quot;</span>, t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#aafa6de67016b06ae43ef95d9148776ca">name</a>, t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#ae7e9205b13ccc44263f7a42847bef847">desc</a>);
<a name="l00932"></a>00932   
<a name="l00933"></a>00933   asp1 = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#ad2b4899e4219ecf54f65af3640cbd890">asdata</a>, t-&gt;<a class="code" href="structtests.html#a20c826cb5c69f814369f7c90afc9f83c">test1</a>-&gt;<a class="code" href="structtest__segment.html#a7508591adaa363fa0f2cda46893fbb6d">len</a>, 0);
<a name="l00934"></a>00934   asp2 = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#ad2b4899e4219ecf54f65af3640cbd890">asdata</a>, t-&gt;<a class="code" href="structtests.html#a2ab2b1f4a6048576259229b656f68b2a">test2</a>-&gt;<a class="code" href="structtest__segment.html#a7508591adaa363fa0f2cda46893fbb6d">len</a>, 0);
<a name="l00935"></a>00935   
<a name="l00936"></a>00936   ascratch = <a class="code" href="bgp__aspath_8c.html#a615342ae906f2fd579780ce7eda4ff6a">aspath_aggregate</a> (asp1, asp2);
<a name="l00937"></a>00937   
<a name="l00938"></a>00938   <span class="keywordflow">if</span> (!<a class="code" href="aspath__test_8c.html#a2be8f4ecae883a2b486e6b1cd7bafe73">validate</a> (ascratch, &amp;t-&gt;<a class="code" href="structtests.html#a62193cefad2a26922a1db10be65d9644">sp</a>))
<a name="l00939"></a>00939     printf (<a class="code" href="aspath__test_8c.html#aba51915c87d64af47fb1cc59348961c9">OK</a> <span class="stringliteral">&quot;\n&quot;</span>);
<a name="l00940"></a>00940   <span class="keywordflow">else</span>
<a name="l00941"></a>00941     printf (<a class="code" href="aspath__test_8c.html#a681680feae4df4182d532564c42fa1fc">FAILED</a> <span class="stringliteral">&quot;!\n&quot;</span>);
<a name="l00942"></a>00942   
<a name="l00943"></a>00943   printf (<span class="stringliteral">&quot;\n&quot;</span>);
<a name="l00944"></a>00944   <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asp1);
<a name="l00945"></a>00945   <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asp2);
<a name="l00946"></a>00946   <a class="code" href="bgp__aspath_8c.html#af8db79f3e25ae5a01dfec9070557c21a">aspath_free</a> (ascratch);
<a name="l00947"></a>00947 <span class="comment">/*  aspath_unintern (ascratch);*/</span>
<a name="l00948"></a>00948 }
<a name="l00949"></a>00949 
<a name="l00950"></a>00950 <span class="comment">/* cmp_left tests  */</span>
<a name="l00951"></a>00951 <span class="keyword">static</span> <span class="keywordtype">void</span>
<a name="l00952"></a><a class="code" href="aspath__test_8c.html#a6f7819438e9edd995b707192ab2920a1">00952</a> <a class="code" href="aspath__test_8c.html#a6f7819438e9edd995b707192ab2920a1">cmp_test</a> ()
<a name="l00953"></a>00953 {
<a name="l00954"></a>00954   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l00955"></a>00955 <span class="preprocessor">#define CMP_TESTS_MAX \</span>
<a name="l00956"></a>00956 <span class="preprocessor">  (sizeof(left_compare) / sizeof (struct compare_tests))</span>
<a name="l00957"></a>00957 <span class="preprocessor"></span>
<a name="l00958"></a>00958   <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="aspath__test_8c.html#a5e9dc8d941f2a9ea3275b87a2db490d9">CMP_TESTS_MAX</a>; i++)
<a name="l00959"></a>00959     {
<a name="l00960"></a>00960       <span class="keyword">struct </span><a class="code" href="structtest__segment.html">test_segment</a> *t1 = &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[<a class="code" href="aspath__test_8c.html#ac4902a861de8936a2d35014cc21c1f3a">left_compare</a>[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].<a class="code" href="structcompare__tests.html#a41bff5b405b062610fe202513279711b">test_index1</a>];
<a name="l00961"></a>00961       <span class="keyword">struct </span><a class="code" href="structtest__segment.html">test_segment</a> *t2 = &amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[left_compare[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].test_index2];
<a name="l00962"></a>00962       <span class="keyword">struct </span><a class="code" href="structaspath.html">aspath</a> *asp1, *asp2;
<a name="l00963"></a>00963       
<a name="l00964"></a>00964       printf (<span class="stringliteral">&quot;left cmp %s: %s\n&quot;</span>, t1-&gt;<a class="code" href="structtest__segment.html#aafa6de67016b06ae43ef95d9148776ca">name</a>, t1-&gt;<a class="code" href="structtest__segment.html#ae7e9205b13ccc44263f7a42847bef847">desc</a>);
<a name="l00965"></a>00965       printf (<span class="stringliteral">&quot;and %s: %s\n&quot;</span>, t2-&gt;<a class="code" href="structtest__segment.html#aafa6de67016b06ae43ef95d9148776ca">name</a>, t2-&gt;<a class="code" href="structtest__segment.html#ae7e9205b13ccc44263f7a42847bef847">desc</a>);
<a name="l00966"></a>00966       
<a name="l00967"></a>00967       asp1 = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (t1-&gt;<a class="code" href="structtest__segment.html#ad2b4899e4219ecf54f65af3640cbd890">asdata</a>, t1-&gt;<a class="code" href="structtest__segment.html#a7508591adaa363fa0f2cda46893fbb6d">len</a>, 0);
<a name="l00968"></a>00968       asp2 = <a class="code" href="aspath__test_8c.html#a3be07c933aa7e5a32f9d99ebfda58f42">make_aspath</a> (t2-&gt;<a class="code" href="structtest__segment.html#ad2b4899e4219ecf54f65af3640cbd890">asdata</a>, t2-&gt;<a class="code" href="structtest__segment.html#a7508591adaa363fa0f2cda46893fbb6d">len</a>, 0);
<a name="l00969"></a>00969       
<a name="l00970"></a>00970       <span class="keywordflow">if</span> (<a class="code" href="bgp__aspath_8c.html#a5f979a1ff3bc3908684e4592e5c383eb">aspath_cmp_left</a> (asp1, asp2) != left_compare[i].shouldbe_cmp
<a name="l00971"></a>00971           || <a class="code" href="bgp__aspath_8c.html#a5f979a1ff3bc3908684e4592e5c383eb">aspath_cmp_left</a> (asp2, asp1) != left_compare[i].shouldbe_cmp
<a name="l00972"></a>00972           || <a class="code" href="bgp__aspath_8c.html#ace7eb37e6ea088fb0ea82c9ae4c58375">aspath_cmp_left_confed</a> (asp1, asp2) 
<a name="l00973"></a>00973                != left_compare[i].shouldbe_confed
<a name="l00974"></a>00974           || <a class="code" href="bgp__aspath_8c.html#ace7eb37e6ea088fb0ea82c9ae4c58375">aspath_cmp_left_confed</a> (asp2, asp1) 
<a name="l00975"></a>00975                != left_compare[i].shouldbe_confed)
<a name="l00976"></a>00976         {
<a name="l00977"></a>00977           <a class="code" href="aspath__test_8c.html#ad4ec5aab9b62fbbe9b8fc2d8ac0a5989">failed</a>++;
<a name="l00978"></a>00978           printf (<a class="code" href="aspath__test_8c.html#a681680feae4df4182d532564c42fa1fc">FAILED</a> <span class="stringliteral">&quot;\n&quot;</span>);
<a name="l00979"></a>00979           printf (<span class="stringliteral">&quot;result should be: cmp: %d, confed: %d\n&quot;</span>, 
<a name="l00980"></a>00980                   left_compare[i].shouldbe_cmp,
<a name="l00981"></a>00981                   left_compare[i].shouldbe_confed);
<a name="l00982"></a>00982           printf (<span class="stringliteral">&quot;got: cmp %d, cmp_confed: %d\n&quot;</span>,
<a name="l00983"></a>00983                   <a class="code" href="bgp__aspath_8c.html#a5f979a1ff3bc3908684e4592e5c383eb">aspath_cmp_left</a> (asp1, asp2),
<a name="l00984"></a>00984                   <a class="code" href="bgp__aspath_8c.html#ace7eb37e6ea088fb0ea82c9ae4c58375">aspath_cmp_left_confed</a> (asp1, asp2));
<a name="l00985"></a>00985           printf(<span class="stringliteral">&quot;path1: %s\npath2: %s\n&quot;</span>, <a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asp1),
<a name="l00986"></a>00986                  <a class="code" href="bgp__aspath_8c.html#ac20fd0ca4085890de5bd9ea6a6d41e8e">aspath_print</a> (asp2));
<a name="l00987"></a>00987         }
<a name="l00988"></a>00988       <span class="keywordflow">else</span>
<a name="l00989"></a>00989         printf (<a class="code" href="aspath__test_8c.html#aba51915c87d64af47fb1cc59348961c9">OK</a> <span class="stringliteral">&quot;\n&quot;</span>);
<a name="l00990"></a>00990       
<a name="l00991"></a>00991       printf (<span class="stringliteral">&quot;\n&quot;</span>);
<a name="l00992"></a>00992       <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asp1);
<a name="l00993"></a>00993       <a class="code" href="bgp__aspath_8c.html#a414aa289179196886d9f059bdd41e81c">aspath_unintern</a> (asp2);
<a name="l00994"></a>00994     }
<a name="l00995"></a>00995 }
<a name="l00996"></a>00996      
<a name="l00997"></a>00997 <span class="keywordtype">int</span>
<a name="l00998"></a><a class="code" href="aspath__test_8c.html#a840291bc02cba5474a4cb46a9b9566fe">00998</a> <a class="code" href="bgp__main_8c.html#a3c04138a5bfe5d72780bb7e82a18e627">main</a> (<span class="keywordtype">void</span>)
<a name="l00999"></a>00999 {
<a name="l01000"></a>01000   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a> = 0;
<a name="l01001"></a>01001   <a class="code" href="bgp__aspath_8c.html#a34b9f56e53531a0e4ceedcb31d59e027">aspath_init</a>();
<a name="l01002"></a>01002   <span class="keywordflow">while</span> (<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[i].<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>)
<a name="l01003"></a>01003     {
<a name="l01004"></a>01004       <a class="code" href="aspath__test_8c.html#a281fc4418b741bf17dff0594d83c13f7">parse_test</a> (&amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[i]);
<a name="l01005"></a>01005       <a class="code" href="aspath__test_8c.html#a6e4af653066fa0503b0d04545ab5a1c3">empty_prepend_test</a> (&amp;<a class="code" href="aspath__test_8c.html#a1b87c36a5cb9fea0a6957dbdfe16f875">test_segments</a>[i++]);
<a name="l01006"></a>01006     }
<a name="l01007"></a>01007   
<a name="l01008"></a>01008   i = 0;
<a name="l01009"></a>01009   <span class="keywordflow">while</span> (<a class="code" href="aspath__test_8c.html#abad2f044fa19335311b056f120c477bd">prepend_tests</a>[i].test1)
<a name="l01010"></a>01010     <a class="code" href="aspath__test_8c.html#a3620ec4b829b159d7e07477fcb560ff2">prepend_test</a> (&amp;<a class="code" href="aspath__test_8c.html#abad2f044fa19335311b056f120c477bd">prepend_tests</a>[i++]);
<a name="l01011"></a>01011   
<a name="l01012"></a>01012   i = 0;
<a name="l01013"></a>01013   <span class="keywordflow">while</span> (aggregate_tests[i].test1)
<a name="l01014"></a>01014     <a class="code" href="aspath__test_8c.html#aa064753241609ff2054f1b997d06670c">aggregate_test</a> (&amp;aggregate_tests[i++]);
<a name="l01015"></a>01015   
<a name="l01016"></a>01016   i = 0;
<a name="l01017"></a>01017   
<a name="l01018"></a>01018   <span class="keywordflow">while</span> (reconcile_tests[i].test1)
<a name="l01019"></a>01019     <a class="code" href="aspath__test_8c.html#ae39c18dbcf182cc47306199e3b78d27a">as4_reconcile_test</a> (&amp;reconcile_tests[i++]);
<a name="l01020"></a>01020   
<a name="l01021"></a>01021   i = 0;
<a name="l01022"></a>01022   
<a name="l01023"></a>01023   <a class="code" href="aspath__test_8c.html#a6f7819438e9edd995b707192ab2920a1">cmp_test</a>();
<a name="l01024"></a>01024   
<a name="l01025"></a>01025   i = 0;
<a name="l01026"></a>01026   
<a name="l01027"></a>01027   <a class="code" href="aspath__test_8c.html#af469fbbb5488f58abd7af612fa7fd558">empty_get_test</a>();
<a name="l01028"></a>01028   
<a name="l01029"></a>01029   printf (<span class="stringliteral">&quot;failures: %d\n&quot;</span>, <a class="code" href="aspath__test_8c.html#ad4ec5aab9b62fbbe9b8fc2d8ac0a5989">failed</a>);
<a name="l01030"></a>01030   printf (<span class="stringliteral">&quot;aspath count: %ld\n&quot;</span>, <a class="code" href="bgp__aspath_8c.html#ad62e86fb815f7395ccd758f5fe5bf2cb">aspath_count</a>());
<a name="l01031"></a>01031   
<a name="l01032"></a>01032   <span class="keywordflow">return</span> (<a class="code" href="aspath__test_8c.html#ad4ec5aab9b62fbbe9b8fc2d8ac0a5989">failed</a> + <a class="code" href="bgp__aspath_8c.html#ad62e86fb815f7395ccd758f5fe5bf2cb">aspath_count</a>());
<a name="l01033"></a>01033 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="aspath__test_8c.html">aspath_test.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:08 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
