<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>OSPFN: ospfd/ospf_api.c Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>


</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">OSPFN
   &#160;<span id="projectnumber">1.1</span>
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('ospf__api_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">ospfd/ospf_api.c</div>  </div>
</div>
<div class="contents">
<a href="ospf__api_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * API message handling module for OSPF daemon and client.</span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2001, 2002 Ralph Keller</span>
<a name="l00004"></a>00004 <span class="comment"> *</span>
<a name="l00005"></a>00005 <span class="comment"> * This file is part of GNU Zebra.</span>
<a name="l00006"></a>00006 <span class="comment"> * </span>
<a name="l00007"></a>00007 <span class="comment"> * GNU Zebra is free software; you can redistribute it and/or modify</span>
<a name="l00008"></a>00008 <span class="comment"> * it under the terms of the GNU General Public License as published</span>
<a name="l00009"></a>00009 <span class="comment"> * by the Free Software Foundation; either version 2, or (at your</span>
<a name="l00010"></a>00010 <span class="comment"> * option) any later version.</span>
<a name="l00011"></a>00011 <span class="comment"> *</span>
<a name="l00012"></a>00012 <span class="comment"> * GNU Zebra is distributed in the hope that it will be useful, but</span>
<a name="l00013"></a>00013 <span class="comment"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00014"></a>00014 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00015"></a>00015 <span class="comment"> * General Public License for more details.</span>
<a name="l00016"></a>00016 <span class="comment"> *</span>
<a name="l00017"></a>00017 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00018"></a>00018 <span class="comment"> * along with GNU Zebra; see the file COPYING.  If not, write to the</span>
<a name="l00019"></a>00019 <span class="comment"> * Free Software Foundation, Inc., 59 Temple Place - Suite 330,</span>
<a name="l00020"></a>00020 <span class="comment"> * Boston, MA 02111-1307, USA.</span>
<a name="l00021"></a>00021 <span class="comment"> */</span>
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;<a class="code" href="zebra_8h.html">zebra.h</a>&gt;</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="preprocessor">#ifdef SUPPORT_OSPF_API</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span><span class="preprocessor">#ifndef HAVE_OPAQUE_LSA</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span><span class="preprocessor">#error &quot;Core Opaque-LSA module must be configured.&quot;</span>
<a name="l00028"></a>00028 <span class="preprocessor"></span><span class="preprocessor">#endif </span><span class="comment">/* HAVE_OPAQUE_LSA */</span>
<a name="l00029"></a>00029 
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="linklist_8h.html">linklist.h</a>&quot;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &quot;<a class="code" href="prefix_8h.html">prefix.h</a>&quot;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="if_8h.html">if.h</a>&quot;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &quot;<a class="code" href="table_8h.html">table.h</a>&quot;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &quot;<a class="code" href="memory_8h.html">memory.h</a>&quot;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &quot;<a class="code" href="command_8h.html">command.h</a>&quot;</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include &quot;<a class="code" href="vty_8h.html">vty.h</a>&quot;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#include &quot;<a class="code" href="stream_8h.html">stream.h</a>&quot;</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include &quot;<a class="code" href="log_8h.html">log.h</a>&quot;</span>
<a name="l00039"></a>00039 <span class="preprocessor">#include &quot;<a class="code" href="thread_8h.html">thread.h</a>&quot;</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include &quot;<a class="code" href="hash_8h.html">hash.h</a>&quot;</span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &quot;<a class="code" href="sockunion_8h.html">sockunion.h</a>&quot;</span>      <span class="comment">/* for inet_aton() */</span>
<a name="l00042"></a>00042 <span class="preprocessor">#include &quot;<a class="code" href="buffer_8h.html">buffer.h</a>&quot;</span>
<a name="l00043"></a>00043 <span class="preprocessor">#include &quot;<a class="code" href="network_8h.html">network.h</a>&quot;</span>
<a name="l00044"></a>00044 
<a name="l00045"></a>00045 <span class="preprocessor">#include &quot;<a class="code" href="ospfd_8h.html">ospfd/ospfd.h</a>&quot;</span>
<a name="l00046"></a>00046 <span class="preprocessor">#include &quot;<a class="code" href="ospf__interface_8h.html">ospfd/ospf_interface.h</a>&quot;</span>
<a name="l00047"></a>00047 <span class="preprocessor">#include &quot;<a class="code" href="ospf__ism_8h.html">ospfd/ospf_ism.h</a>&quot;</span>
<a name="l00048"></a>00048 <span class="preprocessor">#include &quot;<a class="code" href="ospf__asbr_8h.html">ospfd/ospf_asbr.h</a>&quot;</span>
<a name="l00049"></a>00049 <span class="preprocessor">#include &quot;<a class="code" href="ospf__lsa_8h.html">ospfd/ospf_lsa.h</a>&quot;</span>
<a name="l00050"></a>00050 <span class="preprocessor">#include &quot;<a class="code" href="ospf__lsdb_8h.html">ospfd/ospf_lsdb.h</a>&quot;</span>
<a name="l00051"></a>00051 <span class="preprocessor">#include &quot;<a class="code" href="ospf__neighbor_8h.html">ospfd/ospf_neighbor.h</a>&quot;</span>
<a name="l00052"></a>00052 <span class="preprocessor">#include &quot;<a class="code" href="ospf__nsm_8h.html">ospfd/ospf_nsm.h</a>&quot;</span>
<a name="l00053"></a>00053 <span class="preprocessor">#include &quot;<a class="code" href="ospf__flood_8h.html">ospfd/ospf_flood.h</a>&quot;</span>
<a name="l00054"></a>00054 <span class="preprocessor">#include &quot;<a class="code" href="ospf__packet_8h.html">ospfd/ospf_packet.h</a>&quot;</span>
<a name="l00055"></a>00055 <span class="preprocessor">#include &quot;<a class="code" href="ospf__spf_8h.html">ospfd/ospf_spf.h</a>&quot;</span>
<a name="l00056"></a>00056 <span class="preprocessor">#include &quot;<a class="code" href="ospf__dump_8h.html">ospfd/ospf_dump.h</a>&quot;</span>
<a name="l00057"></a>00057 <span class="preprocessor">#include &quot;<a class="code" href="ospf__route_8h.html">ospfd/ospf_route.h</a>&quot;</span>
<a name="l00058"></a>00058 <span class="preprocessor">#include &quot;<a class="code" href="ospf__ase_8h.html">ospfd/ospf_ase.h</a>&quot;</span>
<a name="l00059"></a>00059 <span class="preprocessor">#include &quot;<a class="code" href="ospf__zebra_8h.html">ospfd/ospf_zebra.h</a>&quot;</span>
<a name="l00060"></a>00060 
<a name="l00061"></a>00061 <span class="preprocessor">#include &quot;<a class="code" href="ospf__api_8h.html">ospfd/ospf_api.h</a>&quot;</span>
<a name="l00062"></a>00062 
<a name="l00063"></a>00063 
<a name="l00064"></a>00064 <span class="comment">/* For debugging only, will be removed */</span>
<a name="l00065"></a>00065 <span class="keywordtype">void</span>
<a name="l00066"></a>00066 <a class="code" href="ospf__api_8h.html#a1021979b62e403625abbc05840e47982">api_opaque_lsa_print</a> (<span class="keyword">struct</span> <a class="code" href="structlsa__header.html">lsa_header</a> *<a class="code" href="dict_8c.html#a43a278d13284fb3412e9eee1db1d967e">data</a>)
<a name="l00067"></a>00067 {
<a name="l00068"></a>00068   <span class="keyword">struct </span>opaque_lsa
<a name="l00069"></a>00069   {
<a name="l00070"></a>00070     <span class="keyword">struct </span><a class="code" href="structlsa__header.html">lsa_header</a> header;
<a name="l00071"></a>00071     u_char mydata[];
<a name="l00072"></a>00072   };
<a name="l00073"></a>00073 
<a name="l00074"></a>00074   <span class="keyword">struct </span>opaque_lsa *olsa;
<a name="l00075"></a>00075   <span class="keywordtype">int</span> opaquelen;
<a name="l00076"></a>00076   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>;
<a name="l00077"></a>00077 
<a name="l00078"></a>00078   <a class="code" href="ospf__dump_8c.html#a9f6f89130826976cb32a15187c88a397">ospf_lsa_header_dump</a> (data);
<a name="l00079"></a>00079 
<a name="l00080"></a>00080   olsa = (<span class="keyword">struct </span>opaque_lsa *) data;
<a name="l00081"></a>00081 
<a name="l00082"></a>00082   opaquelen = ntohs (data-&gt;<a class="code" href="structlsa__header.html#afdc4c3f29adf98aa83bbef468b8baede">length</a>) - <a class="code" href="ospf__lsa_8h.html#a7cf423b6ef1c2152b96c88e36593bec4">OSPF_LSA_HEADER_SIZE</a>;
<a name="l00083"></a>00083   <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;apiserver_lsa_print: opaquelen=%d\n&quot;</span>, opaquelen);
<a name="l00084"></a>00084 
<a name="l00085"></a>00085   <span class="keywordflow">for</span> (i = 0; i &lt; opaquelen; i++)
<a name="l00086"></a>00086     {
<a name="l00087"></a>00087       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;0x%x &quot;</span>, olsa-&gt;mydata[i]);
<a name="l00088"></a>00088     }
<a name="l00089"></a>00089   <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;\n&quot;</span>);
<a name="l00090"></a>00090 }
<a name="l00091"></a>00091 
<a name="l00092"></a>00092 <span class="comment">/* -----------------------------------------------------------</span>
<a name="l00093"></a>00093 <span class="comment"> * Generic messages</span>
<a name="l00094"></a>00094 <span class="comment"> * -----------------------------------------------------------</span>
<a name="l00095"></a>00095 <span class="comment"> */</span>
<a name="l00096"></a>00096 
<a name="l00097"></a>00097 <span class="keyword">struct </span><a class="code" href="structmsg.html">msg</a> *
<a name="l00098"></a>00098 <a class="code" href="ospf__api_8h.html#a6972a68916d0733da78e8a9c3ee4ab18">msg_new</a> (u_char msgtype, <span class="keywordtype">void</span> *msgbody, u_int32_t seqnum, u_int16_t msglen)
<a name="l00099"></a>00099 {
<a name="l00100"></a>00100   <span class="keyword">struct </span><a class="code" href="structmsg.html">msg</a> *<span class="keyword">new</span>;
<a name="l00101"></a>00101 
<a name="l00102"></a>00102   <span class="keyword">new</span> = <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="ospf__api_8h.html#a1050d40137c415a2ecf54b1d2f224bc6">MTYPE_OSPF_API_MSG</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structmsg.html">msg</a>));
<a name="l00103"></a>00103 
<a name="l00104"></a>00104   <span class="keyword">new</span>-&gt;hdr.version = <a class="code" href="ospf__api_8h.html#a04e9eedb0831540b9e375c473fb13912">OSPF_API_VERSION</a>;
<a name="l00105"></a>00105   <span class="keyword">new</span>-&gt;hdr.msgtype = msgtype;
<a name="l00106"></a>00106   <span class="keyword">new</span>-&gt;hdr.msglen = htons (msglen);
<a name="l00107"></a>00107   <span class="keyword">new</span>-&gt;hdr.msgseq = htonl (seqnum);
<a name="l00108"></a>00108 
<a name="l00109"></a>00109   <span class="keyword">new</span>-&gt;s = <a class="code" href="stream_8c.html#a7117cdad9fa5e5ae633e0cf08d047459">stream_new</a> (msglen);
<a name="l00110"></a>00110   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (new-&gt;s);
<a name="l00111"></a>00111   <a class="code" href="stream_8c.html#a2f540a71efdf46e8c3a923f73e9f3b73">stream_put</a> (new-&gt;s, msgbody, msglen);
<a name="l00112"></a>00112 
<a name="l00113"></a>00113   <span class="keywordflow">return</span> <span class="keyword">new</span>;
<a name="l00114"></a>00114 }
<a name="l00115"></a>00115 
<a name="l00116"></a>00116 
<a name="l00117"></a>00117 <span class="comment">/* Duplicate a message by copying content. */</span>
<a name="l00118"></a>00118 <span class="keyword">struct </span><a class="code" href="structmsg.html">msg</a> *
<a name="l00119"></a>00119 <a class="code" href="ospf__api_8h.html#af5dd20a4036a803146f854aa2f7ecaf9">msg_dup</a> (<span class="keyword">struct</span> <a class="code" href="structmsg.html">msg</a> *<a class="code" href="structmsg.html">msg</a>)
<a name="l00120"></a>00120 {
<a name="l00121"></a>00121   <span class="keyword">struct </span>msg *<span class="keyword">new</span>;
<a name="l00122"></a>00122 
<a name="l00123"></a>00123   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (msg);
<a name="l00124"></a>00124 
<a name="l00125"></a>00125   <span class="keyword">new</span> = <a class="code" href="ospf__api_8h.html#a6972a68916d0733da78e8a9c3ee4ab18">msg_new</a> (msg-&gt;<a class="code" href="structmsg.html#a9ef890b979c0de3cff56d826fb7f420a">hdr</a>.<a class="code" href="structapimsghdr.html#a35e2f4e6a683dbaebaeb9f3e67af99ec">msgtype</a>, <a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (msg-&gt;<a class="code" href="structmsg.html#ac61803aa3ad22d2088fc4b7c6bea1f90">s</a>),
<a name="l00126"></a>00126          ntohl (msg-&gt;<a class="code" href="structmsg.html#a9ef890b979c0de3cff56d826fb7f420a">hdr</a>.<a class="code" href="structapimsghdr.html#ab33edf5f9a0ca13f4c5843ef0dd7f512">msgseq</a>), ntohs (msg-&gt;<a class="code" href="structmsg.html#a9ef890b979c0de3cff56d826fb7f420a">hdr</a>.<a class="code" href="structapimsghdr.html#ab996c656f7e483bef6eb17bd783856b6">msglen</a>));
<a name="l00127"></a>00127   <span class="keywordflow">return</span> <span class="keyword">new</span>;
<a name="l00128"></a>00128 }
<a name="l00129"></a>00129 
<a name="l00130"></a>00130 
<a name="l00131"></a>00131 <span class="comment">/* XXX only for testing, will be removed */</span>
<a name="l00132"></a>00132 
<a name="l00133"></a>00133 <span class="keyword">struct </span>nametab {
<a name="l00134"></a>00134   <span class="keywordtype">int</span> value;
<a name="l00135"></a>00135   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a>;
<a name="l00136"></a>00136 };
<a name="l00137"></a>00137 
<a name="l00138"></a>00138 <span class="keyword">const</span> <span class="keywordtype">char</span> *
<a name="l00139"></a>00139 <a class="code" href="ospf__api_8h.html#a388ccbdb97bb55d075116814bb95e5af">ospf_api_typename</a> (<span class="keywordtype">int</span> msgtype)
<a name="l00140"></a>00140 {
<a name="l00141"></a>00141   <span class="keyword">struct </span>nametab NameTab[] = {
<a name="l00142"></a>00142     { <a class="code" href="ospf__api_8h.html#afd4d65279b73195de60c2fb8230d094b">MSG_REGISTER_OPAQUETYPE</a>,   <span class="stringliteral">&quot;Register opaque-type&quot;</span>,   },
<a name="l00143"></a>00143     { <a class="code" href="ospf__api_8h.html#a0eb7b3bc33dfb03d89a42e652751a314">MSG_UNREGISTER_OPAQUETYPE</a>, <span class="stringliteral">&quot;Unregister opaque-type&quot;</span>, },
<a name="l00144"></a>00144     { <a class="code" href="ospf__api_8h.html#aaa6a48a1b4677111398fc37d67d50834">MSG_REGISTER_EVENT</a>,        <span class="stringliteral">&quot;Register event&quot;</span>,         },
<a name="l00145"></a>00145     { <a class="code" href="ospf__api_8h.html#a8301e8cea06bc27867c4039d20ad0815">MSG_SYNC_LSDB</a>,             <span class="stringliteral">&quot;Sync LSDB&quot;</span>,              },
<a name="l00146"></a>00146     { <a class="code" href="ospf__api_8h.html#a5c05569b108e082bdb5812792e6f3074">MSG_ORIGINATE_REQUEST</a>,     <span class="stringliteral">&quot;Originate request&quot;</span>,      },
<a name="l00147"></a>00147     { <a class="code" href="ospf__api_8h.html#a554226c7de6f87396ad8fcb1c455e260">MSG_DELETE_REQUEST</a>,        <span class="stringliteral">&quot;Delete request&quot;</span>,         },
<a name="l00148"></a>00148     <span class="comment">/* 08/25/2011 yic+ */</span>
<a name="l00149"></a>00149     { <a class="code" href="ospf__api_8h.html#a1643b497beb967b812a6d7ceebff75e1">MSG_GET_ROUTER_NEXTHOPS_REQUEST</a>, <span class="stringliteral">&quot;Get router nexthop&quot;</span>,},
<a name="l00150"></a>00150     { <a class="code" href="ospf__api_8h.html#a42316d489e809e8faf0bf766fe7a1039">MSG_REPLY</a>,                 <span class="stringliteral">&quot;Reply&quot;</span>,                  },
<a name="l00151"></a>00151     { <a class="code" href="ospf__api_8h.html#abe9771bd26557ef17744ac5073363c21">MSG_READY_NOTIFY</a>,          <span class="stringliteral">&quot;Ready notify&quot;</span>,           },
<a name="l00152"></a>00152     { <a class="code" href="ospf__api_8h.html#a34895bb3424e37147e7383859e77bae2">MSG_LSA_UPDATE_NOTIFY</a>,     <span class="stringliteral">&quot;LSA update notify&quot;</span>,      },
<a name="l00153"></a>00153     { <a class="code" href="ospf__api_8h.html#a9081acc8815e23c6c0b6c53d811f82e0">MSG_LSA_DELETE_NOTIFY</a>,     <span class="stringliteral">&quot;LSA delete notify&quot;</span>,      },
<a name="l00154"></a>00154     { <a class="code" href="ospf__api_8h.html#af0d534b9546638d59f2e4c9c0edcbcdf">MSG_NEW_IF</a>,                <span class="stringliteral">&quot;New interface&quot;</span>,          },
<a name="l00155"></a>00155     { <a class="code" href="ospf__api_8h.html#a9c8256a08f0095d27f738aefb4f8a5db">MSG_DEL_IF</a>,                <span class="stringliteral">&quot;Del interface&quot;</span>,          },
<a name="l00156"></a>00156     { <a class="code" href="ospf__api_8h.html#abe2abd233ea2ab4e2fff482d4e377d96">MSG_ISM_CHANGE</a>,            <span class="stringliteral">&quot;ISM change&quot;</span>,             },
<a name="l00157"></a>00157     { <a class="code" href="ospf__api_8h.html#aedb910a97bec22fdc4eb5858d558fa7b">MSG_NSM_CHANGE</a>,            <span class="stringliteral">&quot;NSM change&quot;</span>,             },
<a name="l00158"></a>00158     <span class="comment">/* 08/25/2011 yic+ */</span>
<a name="l00159"></a>00159     { <a class="code" href="ospf__api_8h.html#af61980ebf7c4e41d70378e90dca524f7">MSG_ROUTER_ROUTING_TABLE_CHANGE</a>, <span class="stringliteral">&quot;Router routing table change&quot;</span>,},
<a name="l00160"></a>00160   };
<a name="l00161"></a>00161 
<a name="l00162"></a>00162   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>, <a class="code" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a> = <span class="keyword">sizeof</span> (NameTab) / <span class="keyword">sizeof</span> (NameTab[0]);
<a name="l00163"></a>00163   <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="memory_8c.html#a5ac083a645d964373f022d03df4849c8">name</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00164"></a>00164 
<a name="l00165"></a>00165   <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>; i++)
<a name="l00166"></a>00166     {
<a name="l00167"></a>00167       <span class="keywordflow">if</span> (NameTab[i].value == msgtype)
<a name="l00168"></a>00168         {
<a name="l00169"></a>00169           name = NameTab[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].name;
<a name="l00170"></a>00170           <span class="keywordflow">break</span>;
<a name="l00171"></a>00171         }
<a name="l00172"></a>00172     }
<a name="l00173"></a>00173 
<a name="l00174"></a>00174   <span class="keywordflow">return</span> name ? name : <span class="stringliteral">&quot;?&quot;</span>;
<a name="l00175"></a>00175 }
<a name="l00176"></a>00176 
<a name="l00177"></a>00177 <span class="keyword">const</span> <span class="keywordtype">char</span> *
<a name="l00178"></a>00178 <a class="code" href="ospf__api_8h.html#abdbd569dc223bf339575e4002c4550db">ospf_api_errname</a> (<span class="keywordtype">int</span> errcode)
<a name="l00179"></a>00179 {
<a name="l00180"></a>00180   <span class="keyword">struct </span>nametab NameTab[] = {
<a name="l00181"></a>00181     { <a class="code" href="ospf__api_8h.html#a9c5d529782dfc28b70a1220d66d6feff">OSPF_API_OK</a>,                      <span class="stringliteral">&quot;OK&quot;</span>,                         },
<a name="l00182"></a>00182     { <a class="code" href="ospf__api_8h.html#a767ae316dc58ea02681629f6d72f592d">OSPF_API_NOSUCHINTERFACE</a>,         <span class="stringliteral">&quot;No such interface&quot;</span>,          },
<a name="l00183"></a>00183     { <a class="code" href="ospf__api_8h.html#aec75de3c6e1fcbb822778e5401cbdb9c">OSPF_API_NOSUCHAREA</a>,              <span class="stringliteral">&quot;No such area&quot;</span>,               },
<a name="l00184"></a>00184     { <a class="code" href="ospf__api_8h.html#ab40435dc59d4c91a15aa61108d9a7cfb">OSPF_API_NOSUCHLSA</a>,               <span class="stringliteral">&quot;No such LSA&quot;</span>,                },
<a name="l00185"></a>00185     { <a class="code" href="ospf__api_8h.html#a7c12e94786a0ed5da29c40d4c92a162b">OSPF_API_ILLEGALLSATYPE</a>,          <span class="stringliteral">&quot;Illegal LSA type&quot;</span>,           },
<a name="l00186"></a>00186     { <a class="code" href="ospf__api_8h.html#a7362bb3171c33eebb02b2e95ce2802a5">OSPF_API_OPAQUETYPEINUSE</a>,         <span class="stringliteral">&quot;Opaque type in use&quot;</span>,         },
<a name="l00187"></a>00187     { <a class="code" href="ospf__api_8h.html#ae4119af801c1e6feeb30376e0073596e">OSPF_API_OPAQUETYPENOTREGISTERED</a>, <span class="stringliteral">&quot;Opaque type not registered&quot;</span>, },
<a name="l00188"></a>00188     { <a class="code" href="ospf__api_8h.html#a46c79ee5f50db68c60e7be5b44481605">OSPF_API_NOTREADY</a>,                <span class="stringliteral">&quot;Not ready&quot;</span>,                  },
<a name="l00189"></a>00189     { <a class="code" href="ospf__api_8h.html#a49a52186a0e297706895dd5ccac9f585">OSPF_API_NOMEMORY</a>,                <span class="stringliteral">&quot;No memory&quot;</span>,                  },
<a name="l00190"></a>00190     { <a class="code" href="ospf__api_8h.html#a6b8317b5f12e49ea14bb4db2ff6ddb6f">OSPF_API_ERROR</a>,                   <span class="stringliteral">&quot;Other error&quot;</span>,                },
<a name="l00191"></a>00191     { <a class="code" href="ospf__api_8h.html#a5e5a02e32fe43a6da0e77f6e6e783c5b">OSPF_API_UNDEF</a>,                   <span class="stringliteral">&quot;Undefined&quot;</span>,                  },
<a name="l00192"></a>00192   };
<a name="l00193"></a>00193 
<a name="l00194"></a>00194   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>, n = <span class="keyword">sizeof</span> (NameTab) / <span class="keyword">sizeof</span> (NameTab[0]);
<a name="l00195"></a>00195   <span class="keyword">const</span> <span class="keywordtype">char</span> *name = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00196"></a>00196 
<a name="l00197"></a>00197   <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="spgrid_8c.html#abe63e991a7bf5d666068b15c9064428d">n</a>; i++)
<a name="l00198"></a>00198     {
<a name="l00199"></a>00199       <span class="keywordflow">if</span> (NameTab[i].value == errcode)
<a name="l00200"></a>00200         {
<a name="l00201"></a>00201           name = NameTab[<a class="code" href="spgrid_8c.html#a139066bd9e344a8daae82c5ca919fffe">i</a>].name;
<a name="l00202"></a>00202           <span class="keywordflow">break</span>;
<a name="l00203"></a>00203         }
<a name="l00204"></a>00204     }
<a name="l00205"></a>00205 
<a name="l00206"></a>00206   <span class="keywordflow">return</span> name ? name : <span class="stringliteral">&quot;?&quot;</span>;
<a name="l00207"></a>00207 }
<a name="l00208"></a>00208 
<a name="l00209"></a>00209 <span class="keywordtype">void</span>
<a name="l00210"></a>00210 <a class="code" href="ospf__api_8h.html#a0924319147ae6620db0a65150299f6b2">msg_print</a> (<span class="keyword">struct</span> msg *msg)
<a name="l00211"></a>00211 {
<a name="l00212"></a>00212   <span class="keywordflow">if</span> (!msg)
<a name="l00213"></a>00213     {
<a name="l00214"></a>00214       <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a> (<span class="stringliteral">&quot;msg_print msg=NULL!\n&quot;</span>);
<a name="l00215"></a>00215       <span class="keywordflow">return</span>;
<a name="l00216"></a>00216     }
<a name="l00217"></a>00217 
<a name="l00218"></a>00218 <span class="preprocessor">#ifdef ORIGINAL_CODING</span>
<a name="l00219"></a>00219 <span class="preprocessor"></span>  <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a>
<a name="l00220"></a>00220     (<span class="stringliteral">&quot;msg=%p msgtype=%d msglen=%d msgseq=%d streamdata=%p streamsize=%lu\n&quot;</span>,
<a name="l00221"></a>00221      msg, msg-&gt;<a class="code" href="structmsg.html#a9ef890b979c0de3cff56d826fb7f420a">hdr</a>.<a class="code" href="structapimsghdr.html#a35e2f4e6a683dbaebaeb9f3e67af99ec">msgtype</a>, ntohs (msg-&gt;<a class="code" href="structmsg.html#a9ef890b979c0de3cff56d826fb7f420a">hdr</a>.<a class="code" href="structapimsghdr.html#ab996c656f7e483bef6eb17bd783856b6">msglen</a>), ntohl (msg-&gt;<a class="code" href="structmsg.html#a9ef890b979c0de3cff56d826fb7f420a">hdr</a>.<a class="code" href="structapimsghdr.html#ab33edf5f9a0ca13f4c5843ef0dd7f512">msgseq</a>),
<a name="l00222"></a>00222      <a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (msg-&gt;<a class="code" href="structmsg.html#ac61803aa3ad22d2088fc4b7c6bea1f90">s</a>), <a class="code" href="stream_8h.html#a6e3b6e25ed5cfa2faea8485414a0c1a4">STREAM_SIZE</a> (msg-&gt;<a class="code" href="structmsg.html#ac61803aa3ad22d2088fc4b7c6bea1f90">s</a>));
<a name="l00223"></a>00223 <span class="preprocessor">#else </span><span class="comment">/* ORIGINAL_CODING */</span>
<a name="l00224"></a>00224   <span class="comment">/* API message common header part. */</span>
<a name="l00225"></a>00225   <a class="code" href="log_8h.html#af1f70c8ab8e089840180553abf361296">zlog_debug</a>
<a name="l00226"></a>00226     (<span class="stringliteral">&quot;API-msg [%s]: type(%d),len(%d),seq(%lu),data(%p),size(%lu)&quot;</span>,
<a name="l00227"></a>00227      <a class="code" href="ospf__api_8h.html#a388ccbdb97bb55d075116814bb95e5af">ospf_api_typename</a> (msg-&gt;<a class="code" href="structmsg.html#a9ef890b979c0de3cff56d826fb7f420a">hdr</a>.<a class="code" href="structapimsghdr.html#a35e2f4e6a683dbaebaeb9f3e67af99ec">msgtype</a>), msg-&gt;<a class="code" href="structmsg.html#a9ef890b979c0de3cff56d826fb7f420a">hdr</a>.<a class="code" href="structapimsghdr.html#a35e2f4e6a683dbaebaeb9f3e67af99ec">msgtype</a>, 
<a name="l00228"></a>00228      ntohs (msg-&gt;<a class="code" href="structmsg.html#a9ef890b979c0de3cff56d826fb7f420a">hdr</a>.<a class="code" href="structapimsghdr.html#ab996c656f7e483bef6eb17bd783856b6">msglen</a>), (<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>) ntohl (msg-&gt;<a class="code" href="structmsg.html#a9ef890b979c0de3cff56d826fb7f420a">hdr</a>.<a class="code" href="structapimsghdr.html#ab33edf5f9a0ca13f4c5843ef0dd7f512">msgseq</a>),
<a name="l00229"></a>00229      <a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (msg-&gt;<a class="code" href="structmsg.html#ac61803aa3ad22d2088fc4b7c6bea1f90">s</a>), <a class="code" href="stream_8h.html#a6e3b6e25ed5cfa2faea8485414a0c1a4">STREAM_SIZE</a> (msg-&gt;<a class="code" href="structmsg.html#ac61803aa3ad22d2088fc4b7c6bea1f90">s</a>));
<a name="l00230"></a>00230 
<a name="l00231"></a>00231   <span class="comment">/* API message body part. */</span>
<a name="l00232"></a>00232 <span class="preprocessor">#ifdef ndef</span>
<a name="l00233"></a>00233 <span class="preprocessor"></span>  <span class="comment">/* Generic Hex/Ascii dump */</span>
<a name="l00234"></a>00234   DumpBuf (<a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (msg-&gt;<a class="code" href="structmsg.html#ac61803aa3ad22d2088fc4b7c6bea1f90">s</a>), <a class="code" href="stream_8h.html#a6e3b6e25ed5cfa2faea8485414a0c1a4">STREAM_SIZE</a> (msg-&gt;<a class="code" href="structmsg.html#ac61803aa3ad22d2088fc4b7c6bea1f90">s</a>)); <span class="comment">/* Sorry, deleted! */</span>
<a name="l00235"></a>00235 <span class="preprocessor">#else </span><span class="comment">/* ndef */</span>
<a name="l00236"></a>00236   <span class="comment">/* Message-type dependent dump function. */</span>
<a name="l00237"></a>00237 <span class="preprocessor">#endif </span><span class="comment">/* ndef */</span>
<a name="l00238"></a>00238 
<a name="l00239"></a>00239   <span class="keywordflow">return</span>;
<a name="l00240"></a>00240 <span class="preprocessor">#endif </span><span class="comment">/* ORIGINAL_CODING */</span>
<a name="l00241"></a>00241 }
<a name="l00242"></a>00242 
<a name="l00243"></a>00243 <span class="keywordtype">void</span>
<a name="l00244"></a>00244 <a class="code" href="ospf__api_8h.html#a073ed64ba5287c503ce8187c2915222b">msg_free</a> (<span class="keyword">struct</span> msg *msg)
<a name="l00245"></a>00245 {
<a name="l00246"></a>00246   <span class="keywordflow">if</span> (msg-&gt;<a class="code" href="structmsg.html#ac61803aa3ad22d2088fc4b7c6bea1f90">s</a>)
<a name="l00247"></a>00247     <a class="code" href="stream_8c.html#ac25ca0f9b32a76b4ea34ecb3c9d62481">stream_free</a> (msg-&gt;<a class="code" href="structmsg.html#ac61803aa3ad22d2088fc4b7c6bea1f90">s</a>);
<a name="l00248"></a>00248 
<a name="l00249"></a>00249   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="ospf__api_8h.html#a1050d40137c415a2ecf54b1d2f224bc6">MTYPE_OSPF_API_MSG</a>, msg);
<a name="l00250"></a>00250 }
<a name="l00251"></a>00251 
<a name="l00252"></a>00252 
<a name="l00253"></a>00253 <span class="comment">/* Set sequence number of message */</span>
<a name="l00254"></a>00254 <span class="keywordtype">void</span>
<a name="l00255"></a>00255 <a class="code" href="ospf__api_8h.html#a21633133b3d5a3437aa22b914f6d3cd4">msg_set_seq</a> (<span class="keyword">struct</span> msg *msg, u_int32_t seqnr)
<a name="l00256"></a>00256 {
<a name="l00257"></a>00257   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (msg);
<a name="l00258"></a>00258   msg-&gt;<a class="code" href="structmsg.html#a9ef890b979c0de3cff56d826fb7f420a">hdr</a>.<a class="code" href="structapimsghdr.html#ab33edf5f9a0ca13f4c5843ef0dd7f512">msgseq</a> = htonl (seqnr);
<a name="l00259"></a>00259 }
<a name="l00260"></a>00260 
<a name="l00261"></a>00261 <span class="comment">/* Get sequence number of message */</span>
<a name="l00262"></a>00262 u_int32_t
<a name="l00263"></a>00263 <a class="code" href="ospf__api_8h.html#a2ff0457183106c8a6a5a0291a23d4d02">msg_get_seq</a> (<span class="keyword">struct</span> msg *msg)
<a name="l00264"></a>00264 {
<a name="l00265"></a>00265   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (msg);
<a name="l00266"></a>00266   <span class="keywordflow">return</span> ntohl (msg-&gt;<a class="code" href="structmsg.html#a9ef890b979c0de3cff56d826fb7f420a">hdr</a>.<a class="code" href="structapimsghdr.html#ab33edf5f9a0ca13f4c5843ef0dd7f512">msgseq</a>);
<a name="l00267"></a>00267 }
<a name="l00268"></a>00268 
<a name="l00269"></a>00269 <span class="comment">/* -----------------------------------------------------------</span>
<a name="l00270"></a>00270 <span class="comment"> * Message fifo queues</span>
<a name="l00271"></a>00271 <span class="comment"> * -----------------------------------------------------------</span>
<a name="l00272"></a>00272 <span class="comment"> */</span>
<a name="l00273"></a>00273 
<a name="l00274"></a>00274 <span class="keyword">struct </span><a class="code" href="structmsg__fifo.html">msg_fifo</a> *
<a name="l00275"></a>00275 <a class="code" href="ospf__api_8h.html#a1b949415dd81706ea60ed526b986a62a">msg_fifo_new</a> ()
<a name="l00276"></a>00276 {
<a name="l00277"></a>00277   <span class="keywordflow">return</span> <a class="code" href="memory_8h.html#a7826e4ed1d152cad0666dcf43f11f663">XCALLOC</a> (<a class="code" href="ospf__api_8h.html#ac04d03abc7defe87863578a1933b484f">MTYPE_OSPF_API_FIFO</a>, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structmsg__fifo.html">msg_fifo</a>));
<a name="l00278"></a>00278 }
<a name="l00279"></a>00279 
<a name="l00280"></a>00280 <span class="comment">/* Add new message to fifo. */</span>
<a name="l00281"></a>00281 <span class="keywordtype">void</span>
<a name="l00282"></a>00282 <a class="code" href="ospf__api_8h.html#a1e03daeae9e6467d6698198be38c492e">msg_fifo_push</a> (<span class="keyword">struct</span> <a class="code" href="structmsg__fifo.html">msg_fifo</a> *<a class="code" href="structfifo.html">fifo</a>, <span class="keyword">struct</span> msg *msg)
<a name="l00283"></a>00283 {
<a name="l00284"></a>00284   <span class="keywordflow">if</span> (fifo-&gt;<a class="code" href="structmsg__fifo.html#abfdb8afcb2365b72c85c8a0cb762b74d">tail</a>)
<a name="l00285"></a>00285     fifo-&gt;<a class="code" href="structmsg__fifo.html#abfdb8afcb2365b72c85c8a0cb762b74d">tail</a>-&gt;<a class="code" href="structmsg.html#a1f62dc1f252c5dd90aeb4a8063b2b068">next</a> = msg;
<a name="l00286"></a>00286   <span class="keywordflow">else</span>
<a name="l00287"></a>00287     fifo-&gt;<a class="code" href="structmsg__fifo.html#ab51c12a50427bc42d0e6c6763e87b029">head</a> = msg;
<a name="l00288"></a>00288 
<a name="l00289"></a>00289   fifo-&gt;<a class="code" href="structmsg__fifo.html#abfdb8afcb2365b72c85c8a0cb762b74d">tail</a> = msg;
<a name="l00290"></a>00290   fifo-&gt;<a class="code" href="structmsg__fifo.html#a35fcd0d38b4bae9e5fdae9a0c0dcaaa5">count</a>++;
<a name="l00291"></a>00291 }
<a name="l00292"></a>00292 
<a name="l00293"></a>00293 
<a name="l00294"></a>00294 <span class="comment">/* Remove first message from fifo. */</span>
<a name="l00295"></a>00295 <span class="keyword">struct </span>msg *
<a name="l00296"></a>00296 <a class="code" href="ospf__api_8h.html#a97dae62ffcd1031cec5dd14dfe990040">msg_fifo_pop</a> (<span class="keyword">struct</span> <a class="code" href="structmsg__fifo.html">msg_fifo</a> *fifo)
<a name="l00297"></a>00297 {
<a name="l00298"></a>00298   <span class="keyword">struct </span>msg *msg;
<a name="l00299"></a>00299 
<a name="l00300"></a>00300   msg = fifo-&gt;<a class="code" href="structmsg__fifo.html#ab51c12a50427bc42d0e6c6763e87b029">head</a>;
<a name="l00301"></a>00301   <span class="keywordflow">if</span> (msg)
<a name="l00302"></a>00302     {
<a name="l00303"></a>00303       fifo-&gt;<a class="code" href="structmsg__fifo.html#ab51c12a50427bc42d0e6c6763e87b029">head</a> = msg-&gt;<a class="code" href="structmsg.html#a1f62dc1f252c5dd90aeb4a8063b2b068">next</a>;
<a name="l00304"></a>00304 
<a name="l00305"></a>00305       <span class="keywordflow">if</span> (fifo-&gt;<a class="code" href="structmsg__fifo.html#ab51c12a50427bc42d0e6c6763e87b029">head</a> == <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>)
<a name="l00306"></a>00306     fifo-&gt;<a class="code" href="structmsg__fifo.html#abfdb8afcb2365b72c85c8a0cb762b74d">tail</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00307"></a>00307 
<a name="l00308"></a>00308       fifo-&gt;<a class="code" href="structmsg__fifo.html#a35fcd0d38b4bae9e5fdae9a0c0dcaaa5">count</a>--;
<a name="l00309"></a>00309     }
<a name="l00310"></a>00310   <span class="keywordflow">return</span> msg;
<a name="l00311"></a>00311 }
<a name="l00312"></a>00312 
<a name="l00313"></a>00313 <span class="comment">/* Return first fifo entry but do not remove it. */</span>
<a name="l00314"></a>00314 <span class="keyword">struct </span>msg *
<a name="l00315"></a>00315 <a class="code" href="ospf__api_8h.html#a35634b9e9775136e52985e5a29924b42">msg_fifo_head</a> (<span class="keyword">struct</span> <a class="code" href="structmsg__fifo.html">msg_fifo</a> *fifo)
<a name="l00316"></a>00316 {
<a name="l00317"></a>00317   <span class="keywordflow">return</span> fifo-&gt;<a class="code" href="structmsg__fifo.html#ab51c12a50427bc42d0e6c6763e87b029">head</a>;
<a name="l00318"></a>00318 }
<a name="l00319"></a>00319 
<a name="l00320"></a>00320 <span class="comment">/* Flush message fifo. */</span>
<a name="l00321"></a>00321 <span class="keywordtype">void</span>
<a name="l00322"></a>00322 <a class="code" href="ospf__api_8h.html#a7186cb2b3859179f9294dd008f1db249">msg_fifo_flush</a> (<span class="keyword">struct</span> <a class="code" href="structmsg__fifo.html">msg_fifo</a> *fifo)
<a name="l00323"></a>00323 {
<a name="l00324"></a>00324   <span class="keyword">struct </span>msg *op;
<a name="l00325"></a>00325   <span class="keyword">struct </span>msg *<a class="code" href="structmsg.html#a1f62dc1f252c5dd90aeb4a8063b2b068">next</a>;
<a name="l00326"></a>00326 
<a name="l00327"></a>00327   <span class="keywordflow">for</span> (op = fifo-&gt;<a class="code" href="structmsg__fifo.html#ab51c12a50427bc42d0e6c6763e87b029">head</a>; op; op = next)
<a name="l00328"></a>00328     {
<a name="l00329"></a>00329       next = op-&gt;<a class="code" href="structmsg.html#a1f62dc1f252c5dd90aeb4a8063b2b068">next</a>;
<a name="l00330"></a>00330       <a class="code" href="ospf__api_8h.html#a073ed64ba5287c503ce8187c2915222b">msg_free</a> (op);
<a name="l00331"></a>00331     }
<a name="l00332"></a>00332 
<a name="l00333"></a>00333   fifo-&gt;<a class="code" href="structmsg__fifo.html#ab51c12a50427bc42d0e6c6763e87b029">head</a> = fifo-&gt;<a class="code" href="structmsg__fifo.html#abfdb8afcb2365b72c85c8a0cb762b74d">tail</a> = <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00334"></a>00334   fifo-&gt;<a class="code" href="structmsg__fifo.html#a35fcd0d38b4bae9e5fdae9a0c0dcaaa5">count</a> = 0;
<a name="l00335"></a>00335 }
<a name="l00336"></a>00336 
<a name="l00337"></a>00337 <span class="comment">/* Free API message fifo. */</span>
<a name="l00338"></a>00338 <span class="keywordtype">void</span>
<a name="l00339"></a>00339 <a class="code" href="ospf__api_8h.html#ab57b21ede92934ea7be7293ee4a235cf">msg_fifo_free</a> (<span class="keyword">struct</span> <a class="code" href="structmsg__fifo.html">msg_fifo</a> *fifo)
<a name="l00340"></a>00340 {
<a name="l00341"></a>00341   <a class="code" href="ospf__api_8h.html#a7186cb2b3859179f9294dd008f1db249">msg_fifo_flush</a> (fifo);
<a name="l00342"></a>00342 
<a name="l00343"></a>00343   <a class="code" href="memory_8h.html#a29f1ce2c850a3163cd6b1b0bd460705d">XFREE</a> (<a class="code" href="ospf__api_8h.html#ac04d03abc7defe87863578a1933b484f">MTYPE_OSPF_API_FIFO</a>, fifo);
<a name="l00344"></a>00344 }
<a name="l00345"></a>00345 
<a name="l00346"></a>00346 <span class="keyword">struct </span>msg *
<a name="l00347"></a>00347 <a class="code" href="ospf__api_8h.html#ac1363ce9f59f760478f42991585ec26a">msg_read</a> (<span class="keywordtype">int</span> fd)
<a name="l00348"></a>00348 {
<a name="l00349"></a>00349   <span class="keyword">struct </span>msg *msg;
<a name="l00350"></a>00350   <span class="keyword">struct </span><a class="code" href="structapimsghdr.html">apimsghdr</a> hdr;
<a name="l00351"></a>00351   u_char buf[<a class="code" href="ospf__api_8h.html#ae1cfde6e2a151d918e70a78788ab75c7">OSPF_API_MAX_MSG_SIZE</a>];
<a name="l00352"></a>00352   <span class="keywordtype">int</span> bodylen;
<a name="l00353"></a>00353   <span class="keywordtype">int</span> rlen;
<a name="l00354"></a>00354 
<a name="l00355"></a>00355   <span class="comment">/* Read message header */</span>
<a name="l00356"></a>00356   rlen = <a class="code" href="network_8c.html#a27ff66fccade32a3132023bce0f74e23">readn</a> (fd, (u_char *) &amp;hdr, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structapimsghdr.html">apimsghdr</a>));
<a name="l00357"></a>00357 
<a name="l00358"></a>00358   <span class="keywordflow">if</span> (rlen &lt; 0)
<a name="l00359"></a>00359     {
<a name="l00360"></a>00360       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;msg_read: readn %s&quot;</span>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
<a name="l00361"></a>00361       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00362"></a>00362     }
<a name="l00363"></a>00363   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (rlen == 0)
<a name="l00364"></a>00364     {
<a name="l00365"></a>00365       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;msg_read: Connection closed by peer&quot;</span>);
<a name="l00366"></a>00366       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00367"></a>00367     }
<a name="l00368"></a>00368   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (rlen != <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structapimsghdr.html">apimsghdr</a>))
<a name="l00369"></a>00369     {
<a name="l00370"></a>00370       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;msg_read: Cannot read message header!&quot;</span>);
<a name="l00371"></a>00371       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00372"></a>00372     }
<a name="l00373"></a>00373 
<a name="l00374"></a>00374   <span class="comment">/* Check version of API protocol */</span>
<a name="l00375"></a>00375   <span class="keywordflow">if</span> (hdr.version != <a class="code" href="ospf__api_8h.html#a04e9eedb0831540b9e375c473fb13912">OSPF_API_VERSION</a>)
<a name="l00376"></a>00376     {
<a name="l00377"></a>00377       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;msg_read: OSPF API protocol version mismatch&quot;</span>);
<a name="l00378"></a>00378       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00379"></a>00379     }
<a name="l00380"></a>00380 
<a name="l00381"></a>00381   <span class="comment">/* Determine body length. */</span>
<a name="l00382"></a>00382   bodylen = ntohs (hdr.msglen);
<a name="l00383"></a>00383   <span class="keywordflow">if</span> (bodylen &gt; 0)
<a name="l00384"></a>00384     {
<a name="l00385"></a>00385 
<a name="l00386"></a>00386       <span class="comment">/* Read message body */</span>
<a name="l00387"></a>00387       rlen = <a class="code" href="network_8c.html#a27ff66fccade32a3132023bce0f74e23">readn</a> (fd, buf, bodylen);
<a name="l00388"></a>00388       <span class="keywordflow">if</span> (rlen &lt; 0)
<a name="l00389"></a>00389     {
<a name="l00390"></a>00390       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;msg_read: readn %s&quot;</span>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
<a name="l00391"></a>00391       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00392"></a>00392     }
<a name="l00393"></a>00393       <span class="keywordflow">else</span> <span class="keywordflow">if</span> (rlen == 0)
<a name="l00394"></a>00394     {
<a name="l00395"></a>00395       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;msg_read: Connection closed by peer&quot;</span>);
<a name="l00396"></a>00396       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00397"></a>00397     }
<a name="l00398"></a>00398       <span class="keywordflow">else</span> <span class="keywordflow">if</span> (rlen != bodylen)
<a name="l00399"></a>00399     {
<a name="l00400"></a>00400       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;msg_read: Cannot read message body!&quot;</span>);
<a name="l00401"></a>00401       <span class="keywordflow">return</span> <a class="code" href="getopt1_8c.html#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>;
<a name="l00402"></a>00402     }
<a name="l00403"></a>00403     }
<a name="l00404"></a>00404 
<a name="l00405"></a>00405   <span class="comment">/* Allocate new message */</span>
<a name="l00406"></a>00406   msg = <a class="code" href="ospf__api_8h.html#a6972a68916d0733da78e8a9c3ee4ab18">msg_new</a> (hdr.msgtype, buf, ntohl (hdr.msgseq), ntohs (hdr.msglen));
<a name="l00407"></a>00407 
<a name="l00408"></a>00408   <span class="keywordflow">return</span> msg;
<a name="l00409"></a>00409 }
<a name="l00410"></a>00410 
<a name="l00411"></a>00411 <span class="keywordtype">int</span>
<a name="l00412"></a>00412 <a class="code" href="ospf__api_8h.html#af1b5579675baac54931e5fa78b98d02e">msg_write</a> (<span class="keywordtype">int</span> fd, <span class="keyword">struct</span> msg *msg)
<a name="l00413"></a>00413 {
<a name="l00414"></a>00414   u_char buf[<a class="code" href="ospf__api_8h.html#ae1cfde6e2a151d918e70a78788ab75c7">OSPF_API_MAX_MSG_SIZE</a>];
<a name="l00415"></a>00415   <span class="keywordtype">int</span> <a class="code" href="spgrid_8c.html#a92119ef27b84f1e2e15792d7ea360ba4">l</a>;
<a name="l00416"></a>00416   <span class="keywordtype">int</span> wlen;
<a name="l00417"></a>00417 
<a name="l00418"></a>00418   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (msg);
<a name="l00419"></a>00419   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (msg-&gt;<a class="code" href="structmsg.html#ac61803aa3ad22d2088fc4b7c6bea1f90">s</a>);
<a name="l00420"></a>00420 
<a name="l00421"></a>00421   <span class="comment">/* Length of message including header */</span>
<a name="l00422"></a>00422   l = <span class="keyword">sizeof</span> (<span class="keyword">struct </span><a class="code" href="structapimsghdr.html">apimsghdr</a>) + ntohs (msg-&gt;hdr.msglen);
<a name="l00423"></a>00423 
<a name="l00424"></a>00424   <span class="comment">/* Make contiguous memory buffer for message */</span>
<a name="l00425"></a>00425   <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (buf, &amp;msg-&gt;<a class="code" href="structmsg.html#a9ef890b979c0de3cff56d826fb7f420a">hdr</a>, sizeof (<span class="keyword">struct</span> <a class="code" href="structapimsghdr.html">apimsghdr</a>));
<a name="l00426"></a>00426   <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (buf + <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structapimsghdr.html">apimsghdr</a>), <a class="code" href="stream_8h.html#afde5f5db208a43da6faf7b830f26d7fc">STREAM_DATA</a> (msg-&gt;<a class="code" href="structmsg.html#ac61803aa3ad22d2088fc4b7c6bea1f90">s</a>),
<a name="l00427"></a>00427       ntohs (msg-&gt;<a class="code" href="structmsg.html#a9ef890b979c0de3cff56d826fb7f420a">hdr</a>.<a class="code" href="structapimsghdr.html#ab996c656f7e483bef6eb17bd783856b6">msglen</a>));
<a name="l00428"></a>00428 
<a name="l00429"></a>00429   wlen = <a class="code" href="network_8c.html#ae7fc0505143ee1a9a30340c4863a6ea6">writen</a> (fd, buf, l);
<a name="l00430"></a>00430   <span class="keywordflow">if</span> (wlen &lt; 0)
<a name="l00431"></a>00431     {
<a name="l00432"></a>00432       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;msg_write: writen %s&quot;</span>, <a class="code" href="log_8c.html#a5292a9aa20fcddbb3998241685e18279">safe_strerror</a> (errno));
<a name="l00433"></a>00433       <span class="keywordflow">return</span> -1;
<a name="l00434"></a>00434     }
<a name="l00435"></a>00435   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (wlen == 0)
<a name="l00436"></a>00436     {
<a name="l00437"></a>00437       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;msg_write: Connection closed by peer&quot;</span>);
<a name="l00438"></a>00438       <span class="keywordflow">return</span> -1;
<a name="l00439"></a>00439     }
<a name="l00440"></a>00440   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (wlen != l)
<a name="l00441"></a>00441     {
<a name="l00442"></a>00442       <a class="code" href="log_8h.html#a4a2ed409bf1559d9ea3c664f70420df7">zlog_warn</a> (<span class="stringliteral">&quot;msg_write: Cannot write API message&quot;</span>);
<a name="l00443"></a>00443       <span class="keywordflow">return</span> -1;
<a name="l00444"></a>00444     }
<a name="l00445"></a>00445   <span class="keywordflow">return</span> 0;
<a name="l00446"></a>00446 }
<a name="l00447"></a>00447 
<a name="l00448"></a>00448 <span class="comment">/* -----------------------------------------------------------</span>
<a name="l00449"></a>00449 <span class="comment"> * Specific messages</span>
<a name="l00450"></a>00450 <span class="comment"> * -----------------------------------------------------------</span>
<a name="l00451"></a>00451 <span class="comment"> */</span>
<a name="l00452"></a>00452 
<a name="l00453"></a>00453 <span class="keyword">struct </span>msg *
<a name="l00454"></a>00454 <a class="code" href="ospf__api_8h.html#af55da8db27db315b6fe34227a04d0cb8">new_msg_register_opaque_type</a> (u_int32_t seqnum, u_char ltype, u_char otype)
<a name="l00455"></a>00455 {
<a name="l00456"></a>00456   <span class="keyword">struct </span><a class="code" href="structmsg__register__opaque__type.html">msg_register_opaque_type</a> rmsg;
<a name="l00457"></a>00457 
<a name="l00458"></a>00458   rmsg.<a class="code" href="structmsg__register__opaque__type.html#a4912d73338b6f0e25792d1ebd71adae6">lsatype</a> = ltype;
<a name="l00459"></a>00459   rmsg.opaquetype = otype;
<a name="l00460"></a>00460   memset (&amp;rmsg.pad, 0, sizeof (rmsg.pad));
<a name="l00461"></a>00461 
<a name="l00462"></a>00462   <span class="keywordflow">return</span> <a class="code" href="ospf__api_8h.html#a6972a68916d0733da78e8a9c3ee4ab18">msg_new</a> (<a class="code" href="ospf__api_8h.html#afd4d65279b73195de60c2fb8230d094b">MSG_REGISTER_OPAQUETYPE</a>, &amp;rmsg, seqnum,
<a name="l00463"></a>00463           <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structmsg__register__opaque__type.html">msg_register_opaque_type</a>));
<a name="l00464"></a>00464 }
<a name="l00465"></a>00465 
<a name="l00466"></a>00466 <span class="keyword">struct </span>msg *
<a name="l00467"></a>00467 <a class="code" href="ospf__api_8h.html#accbf7c0b47a47147f26b0deb89a6adfc">new_msg_register_event</a> (u_int32_t seqnum, <span class="keyword">struct</span> <a class="code" href="structlsa__filter__type.html">lsa_filter_type</a> *<a class="code" href="structfilter.html">filter</a>)
<a name="l00468"></a>00468 {
<a name="l00469"></a>00469   u_char buf[<a class="code" href="ospf__api_8h.html#ae1cfde6e2a151d918e70a78788ab75c7">OSPF_API_MAX_MSG_SIZE</a>];
<a name="l00470"></a>00470   <span class="keyword">struct </span><a class="code" href="structmsg__register__event.html">msg_register_event</a> *emsg;
<a name="l00471"></a>00471   <span class="keywordtype">int</span> len;
<a name="l00472"></a>00472 
<a name="l00473"></a>00473   emsg = (<span class="keyword">struct </span><a class="code" href="structmsg__register__event.html">msg_register_event</a> *) buf;
<a name="l00474"></a>00474   len = <span class="keyword">sizeof</span> (<span class="keyword">struct </span><a class="code" href="structmsg__register__event.html">msg_register_event</a>) +
<a name="l00475"></a>00475     filter-&gt;num_areas * <span class="keyword">sizeof</span> (<span class="keyword">struct </span>in_addr);
<a name="l00476"></a>00476   emsg-&gt;<a class="code" href="structmsg__register__event.html#a0b9e5295c6abadf43d443b42add1a0ba">filter</a>.<a class="code" href="structlsa__filter__type.html#aa5fe7d15c2a49cf18a2bb996e4d07459">typemask</a> = htons (filter-&gt;<a class="code" href="structlsa__filter__type.html#aa5fe7d15c2a49cf18a2bb996e4d07459">typemask</a>);
<a name="l00477"></a>00477   emsg-&gt;<a class="code" href="structmsg__register__event.html#a0b9e5295c6abadf43d443b42add1a0ba">filter</a>.<a class="code" href="structlsa__filter__type.html#abfc879daf7d68e4e3e7e9f6ef6d425c1">origin</a> = filter-&gt;<a class="code" href="structlsa__filter__type.html#abfc879daf7d68e4e3e7e9f6ef6d425c1">origin</a>;
<a name="l00478"></a>00478   emsg-&gt;<a class="code" href="structmsg__register__event.html#a0b9e5295c6abadf43d443b42add1a0ba">filter</a>.<a class="code" href="structlsa__filter__type.html#a122e6de12b070f0a38d9d1a2b5199a9d">num_areas</a> = filter-&gt;<a class="code" href="structlsa__filter__type.html#a122e6de12b070f0a38d9d1a2b5199a9d">num_areas</a>;
<a name="l00479"></a>00479   <span class="keywordflow">return</span> <a class="code" href="ospf__api_8h.html#a6972a68916d0733da78e8a9c3ee4ab18">msg_new</a> (<a class="code" href="ospf__api_8h.html#aaa6a48a1b4677111398fc37d67d50834">MSG_REGISTER_EVENT</a>, emsg, seqnum, len);
<a name="l00480"></a>00480 }
<a name="l00481"></a>00481 
<a name="l00482"></a>00482 <span class="keyword">struct </span>msg *
<a name="l00483"></a>00483 <a class="code" href="ospf__api_8h.html#ac5c333f3291f1678f62c8e1cc34800c0">new_msg_sync_lsdb</a> (u_int32_t seqnum, <span class="keyword">struct</span> <a class="code" href="structlsa__filter__type.html">lsa_filter_type</a> *<a class="code" href="structfilter.html">filter</a>)
<a name="l00484"></a>00484 {
<a name="l00485"></a>00485   u_char buf[<a class="code" href="ospf__api_8h.html#ae1cfde6e2a151d918e70a78788ab75c7">OSPF_API_MAX_MSG_SIZE</a>];
<a name="l00486"></a>00486   <span class="keyword">struct </span><a class="code" href="structmsg__sync__lsdb.html">msg_sync_lsdb</a> *smsg;
<a name="l00487"></a>00487   <span class="keywordtype">int</span> len;
<a name="l00488"></a>00488 
<a name="l00489"></a>00489   smsg = (<span class="keyword">struct </span><a class="code" href="structmsg__sync__lsdb.html">msg_sync_lsdb</a> *) buf;
<a name="l00490"></a>00490   len = <span class="keyword">sizeof</span> (<span class="keyword">struct </span><a class="code" href="structmsg__sync__lsdb.html">msg_sync_lsdb</a>) +
<a name="l00491"></a>00491     filter-&gt;num_areas * <span class="keyword">sizeof</span> (<span class="keyword">struct </span>in_addr);
<a name="l00492"></a>00492   smsg-&gt;<a class="code" href="structmsg__sync__lsdb.html#a7861ca76e91851759107ebfc64c24691">filter</a>.<a class="code" href="structlsa__filter__type.html#aa5fe7d15c2a49cf18a2bb996e4d07459">typemask</a> = htons (filter-&gt;<a class="code" href="structlsa__filter__type.html#aa5fe7d15c2a49cf18a2bb996e4d07459">typemask</a>);
<a name="l00493"></a>00493   smsg-&gt;<a class="code" href="structmsg__sync__lsdb.html#a7861ca76e91851759107ebfc64c24691">filter</a>.<a class="code" href="structlsa__filter__type.html#abfc879daf7d68e4e3e7e9f6ef6d425c1">origin</a> = filter-&gt;<a class="code" href="structlsa__filter__type.html#abfc879daf7d68e4e3e7e9f6ef6d425c1">origin</a>;
<a name="l00494"></a>00494   smsg-&gt;<a class="code" href="structmsg__sync__lsdb.html#a7861ca76e91851759107ebfc64c24691">filter</a>.<a class="code" href="structlsa__filter__type.html#a122e6de12b070f0a38d9d1a2b5199a9d">num_areas</a> = filter-&gt;<a class="code" href="structlsa__filter__type.html#a122e6de12b070f0a38d9d1a2b5199a9d">num_areas</a>;
<a name="l00495"></a>00495   <span class="keywordflow">return</span> <a class="code" href="ospf__api_8h.html#a6972a68916d0733da78e8a9c3ee4ab18">msg_new</a> (<a class="code" href="ospf__api_8h.html#a8301e8cea06bc27867c4039d20ad0815">MSG_SYNC_LSDB</a>, smsg, seqnum, len);
<a name="l00496"></a>00496 }
<a name="l00497"></a>00497 
<a name="l00498"></a>00498 
<a name="l00499"></a>00499 <span class="keyword">struct </span>msg *
<a name="l00500"></a>00500 <a class="code" href="ospf__api_8h.html#aded7b8a69fee3be63a7a85276eea1dc6">new_msg_originate_request</a> (u_int32_t seqnum,
<a name="l00501"></a>00501                <span class="keyword">struct</span> in_addr ifaddr,
<a name="l00502"></a>00502                <span class="keyword">struct</span> in_addr area_id, <span class="keyword">struct</span> <a class="code" href="structlsa__header.html">lsa_header</a> *data)
<a name="l00503"></a>00503 {
<a name="l00504"></a>00504   <span class="keyword">struct </span><a class="code" href="structmsg__originate__request.html">msg_originate_request</a> *omsg;
<a name="l00505"></a>00505   <span class="keywordtype">int</span> omsglen;
<a name="l00506"></a>00506   <span class="keywordtype">char</span> buf[<a class="code" href="ospf__api_8h.html#ae1cfde6e2a151d918e70a78788ab75c7">OSPF_API_MAX_MSG_SIZE</a>];
<a name="l00507"></a>00507 
<a name="l00508"></a>00508   omsglen = <span class="keyword">sizeof</span> (<span class="keyword">struct </span><a class="code" href="structmsg__originate__request.html">msg_originate_request</a>) - sizeof (struct <a class="code" href="structlsa__header.html">lsa_header</a>)
<a name="l00509"></a>00509     + ntohs (data-&gt;<a class="code" href="isis__pdu_8h.html#a64ed70bbcb4536e2af22a1aaf5209d18">length</a>);
<a name="l00510"></a>00510 
<a name="l00511"></a>00511   omsg = (<span class="keyword">struct </span><a class="code" href="structmsg__originate__request.html">msg_originate_request</a> *) buf;
<a name="l00512"></a>00512   omsg-&gt;<a class="code" href="structmsg__originate__request.html#a6866d890e0aad9b1848efb4652ba57c0">ifaddr</a> = <a class="code" href="structmsg__originate__request.html#a6866d890e0aad9b1848efb4652ba57c0">ifaddr</a>;
<a name="l00513"></a>00513   omsg-&gt;area_id = <a class="code" href="structmsg__originate__request.html#a78e6cc044adcb012f5a44cc5d7794ff5">area_id</a>;
<a name="l00514"></a>00514   <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;omsg-&gt;data, data, ntohs (data-&gt;<a class="code" href="structlsa__header.html#afdc4c3f29adf98aa83bbef468b8baede">length</a>));
<a name="l00515"></a>00515 
<a name="l00516"></a>00516   <span class="keywordflow">return</span> <a class="code" href="ospf__api_8h.html#a6972a68916d0733da78e8a9c3ee4ab18">msg_new</a> (<a class="code" href="ospf__api_8h.html#a5c05569b108e082bdb5812792e6f3074">MSG_ORIGINATE_REQUEST</a>, omsg, seqnum, omsglen);
<a name="l00517"></a>00517 }
<a name="l00518"></a>00518 
<a name="l00519"></a>00519 <span class="keyword">struct </span>msg *
<a name="l00520"></a>00520 <a class="code" href="ospf__api_8h.html#a3536518a5cb4ebe87ea20cc9efb184ff">new_msg_delete_request</a> (u_int32_t seqnum,
<a name="l00521"></a>00521             <span class="keyword">struct</span> in_addr area_id, u_char lsa_type,
<a name="l00522"></a>00522             u_char opaque_type, u_int32_t opaque_id)
<a name="l00523"></a>00523 {
<a name="l00524"></a>00524   <span class="keyword">struct </span><a class="code" href="structmsg__delete__request.html">msg_delete_request</a> dmsg;
<a name="l00525"></a>00525   dmsg.<a class="code" href="structmsg__delete__request.html#a809cf697318e7b2fccdc47a57b2b4292">area_id</a> = <a class="code" href="structmsg__delete__request.html#a809cf697318e7b2fccdc47a57b2b4292">area_id</a>;
<a name="l00526"></a>00526   dmsg.lsa_type = <a class="code" href="structmsg__delete__request.html#a60db552c89429929b677b191bee7f8b8">lsa_type</a>;
<a name="l00527"></a>00527   dmsg.opaque_type = <a class="code" href="structmsg__delete__request.html#abb94165a2f6daf772dcc234c72ccaabb">opaque_type</a>;
<a name="l00528"></a>00528   dmsg.opaque_id = htonl (opaque_id);
<a name="l00529"></a>00529   memset (&amp;dmsg.pad, 0, sizeof (dmsg.pad));
<a name="l00530"></a>00530 
<a name="l00531"></a>00531   <span class="keywordflow">return</span> <a class="code" href="ospf__api_8h.html#a6972a68916d0733da78e8a9c3ee4ab18">msg_new</a> (<a class="code" href="ospf__api_8h.html#a554226c7de6f87396ad8fcb1c455e260">MSG_DELETE_REQUEST</a>, &amp;dmsg, seqnum,
<a name="l00532"></a>00532           <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structmsg__delete__request.html">msg_delete_request</a>));
<a name="l00533"></a>00533 }
<a name="l00534"></a>00534 
<a name="l00535"></a>00535 <span class="comment">/* 08/25/2011 yic+ */</span>
<a name="l00536"></a>00536 <span class="keyword">struct </span>msg *<a class="code" href="ospf__api_8h.html#ac045ac91e0c109c61669e3e120989cd7">new_msg_get_router_nexthops_request</a>(u_int32_t seqnum, <span class="keyword">struct</span> in_addr router_id)
<a name="l00537"></a>00537 {
<a name="l00538"></a>00538     <span class="keyword">struct </span><a class="code" href="structmsg__get__router__nexthops__request.html">msg_get_router_nexthops_request</a> rmsg;
<a name="l00539"></a>00539     rmsg.<a class="code" href="structmsg__get__router__nexthops__request.html#a309918698a9acd11f793c5cc25ec4fb7">router_id</a> = <a class="code" href="structmsg__get__router__nexthops__request.html#a309918698a9acd11f793c5cc25ec4fb7">router_id</a>;
<a name="l00540"></a>00540     <span class="keywordflow">return</span> <a class="code" href="ospf__api_8h.html#a6972a68916d0733da78e8a9c3ee4ab18">msg_new</a>(<a class="code" href="ospf__api_8h.html#a1643b497beb967b812a6d7ceebff75e1">MSG_GET_ROUTER_NEXTHOPS_REQUEST</a>, &amp;rmsg, seqnum, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> <a class="code" href="structmsg__get__router__nexthops__request.html">msg_get_router_nexthops_request</a>));
<a name="l00541"></a>00541 }
<a name="l00542"></a>00542 
<a name="l00543"></a>00543 <span class="keyword">struct </span>msg *
<a name="l00544"></a>00544 <a class="code" href="ospf__api_8h.html#ae3ab41503af92e8986d779a04254bd5f">new_msg_reply</a> (u_int32_t seqnr, u_char rc)
<a name="l00545"></a>00545 {
<a name="l00546"></a>00546   <span class="keyword">struct </span>msg *msg;
<a name="l00547"></a>00547   <span class="keyword">struct </span><a class="code" href="structmsg__reply.html">msg_reply</a> rmsg;
<a name="l00548"></a>00548 
<a name="l00549"></a>00549   <span class="comment">/* Set return code */</span>
<a name="l00550"></a>00550   rmsg.<a class="code" href="structmsg__reply.html#a6de590104ab2ee9d2d23d73857a8c1c1">errcode</a> = rc;
<a name="l00551"></a>00551   memset (&amp;rmsg.pad, 0, sizeof (rmsg.pad));
<a name="l00552"></a>00552 
<a name="l00553"></a>00553   msg = <a class="code" href="ospf__api_8h.html#a6972a68916d0733da78e8a9c3ee4ab18">msg_new</a> (<a class="code" href="ospf__api_8h.html#a42316d489e809e8faf0bf766fe7a1039">MSG_REPLY</a>, &amp;rmsg, seqnr, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structmsg__reply.html">msg_reply</a>));
<a name="l00554"></a>00554 
<a name="l00555"></a>00555   <span class="keywordflow">return</span> msg;
<a name="l00556"></a>00556 }
<a name="l00557"></a>00557 
<a name="l00558"></a>00558 <span class="keyword">struct </span>msg *
<a name="l00559"></a>00559 <a class="code" href="ospf__api_8h.html#a9b1826ea0a95c24e33a435557f1c8384">new_msg_ready_notify</a> (u_int32_t seqnr, u_char lsa_type,
<a name="l00560"></a>00560               u_char opaque_type, <span class="keyword">struct</span> in_addr addr)
<a name="l00561"></a>00561 {
<a name="l00562"></a>00562   <span class="keyword">struct </span><a class="code" href="structmsg__ready__notify.html">msg_ready_notify</a> rmsg;
<a name="l00563"></a>00563 
<a name="l00564"></a>00564   rmsg.<a class="code" href="structmsg__ready__notify.html#aed1056e5f8525b55f3123730c60c6154">lsa_type</a> = <a class="code" href="structmsg__ready__notify.html#aed1056e5f8525b55f3123730c60c6154">lsa_type</a>;
<a name="l00565"></a>00565   rmsg.opaque_type = <a class="code" href="structmsg__ready__notify.html#a3f4dd1cfaa2e006b3c32ccb5b5982164">opaque_type</a>;
<a name="l00566"></a>00566   memset (&amp;rmsg.pad, 0, sizeof (rmsg.pad));
<a name="l00567"></a>00567   rmsg.addr = <a class="code" href="structmsg__ready__notify.html#abb1e2a3d37f8350bf352a8704cffa2c1">addr</a>;
<a name="l00568"></a>00568 
<a name="l00569"></a>00569   <span class="keywordflow">return</span> <a class="code" href="ospf__api_8h.html#a6972a68916d0733da78e8a9c3ee4ab18">msg_new</a> (<a class="code" href="ospf__api_8h.html#abe9771bd26557ef17744ac5073363c21">MSG_READY_NOTIFY</a>, &amp;rmsg, seqnr,
<a name="l00570"></a>00570           <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structmsg__ready__notify.html">msg_ready_notify</a>));
<a name="l00571"></a>00571 }
<a name="l00572"></a>00572 
<a name="l00573"></a>00573 <span class="keyword">struct </span>msg *
<a name="l00574"></a>00574 <a class="code" href="ospf__api_8h.html#ad6377589d902e778937fe17c44c6ad19">new_msg_new_if</a> (u_int32_t seqnr,
<a name="l00575"></a>00575         <span class="keyword">struct</span> in_addr ifaddr, <span class="keyword">struct</span> in_addr area_id)
<a name="l00576"></a>00576 {
<a name="l00577"></a>00577   <span class="keyword">struct </span><a class="code" href="structmsg__new__if.html">msg_new_if</a> nmsg;
<a name="l00578"></a>00578 
<a name="l00579"></a>00579   nmsg.<a class="code" href="structmsg__new__if.html#ab07fe09972befc9c888cdb83a7d92cd2">ifaddr</a> = <a class="code" href="structmsg__new__if.html#ab07fe09972befc9c888cdb83a7d92cd2">ifaddr</a>;
<a name="l00580"></a>00580   nmsg.area_id = <a class="code" href="structmsg__new__if.html#a484d3dbefaea24641f4a3e6bba7ff59b">area_id</a>;
<a name="l00581"></a>00581 
<a name="l00582"></a>00582   <span class="keywordflow">return</span> <a class="code" href="ospf__api_8h.html#a6972a68916d0733da78e8a9c3ee4ab18">msg_new</a> (<a class="code" href="ospf__api_8h.html#af0d534b9546638d59f2e4c9c0edcbcdf">MSG_NEW_IF</a>, &amp;nmsg, seqnr, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structmsg__new__if.html">msg_new_if</a>));
<a name="l00583"></a>00583 }
<a name="l00584"></a>00584 
<a name="l00585"></a>00585 <span class="keyword">struct </span>msg *
<a name="l00586"></a>00586 <a class="code" href="ospf__api_8h.html#a75d62dede811ddca3198205fd9246f6c">new_msg_del_if</a> (u_int32_t seqnr, <span class="keyword">struct</span> in_addr ifaddr)
<a name="l00587"></a>00587 {
<a name="l00588"></a>00588   <span class="keyword">struct </span><a class="code" href="structmsg__del__if.html">msg_del_if</a> dmsg;
<a name="l00589"></a>00589 
<a name="l00590"></a>00590   dmsg.<a class="code" href="structmsg__del__if.html#a425e8d6db676ed1e55b73635b8ce016b">ifaddr</a> = <a class="code" href="structmsg__del__if.html#a425e8d6db676ed1e55b73635b8ce016b">ifaddr</a>;
<a name="l00591"></a>00591 
<a name="l00592"></a>00592   <span class="keywordflow">return</span> <a class="code" href="ospf__api_8h.html#a6972a68916d0733da78e8a9c3ee4ab18">msg_new</a> (<a class="code" href="ospf__api_8h.html#a9c8256a08f0095d27f738aefb4f8a5db">MSG_DEL_IF</a>, &amp;dmsg, seqnr, <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structmsg__del__if.html">msg_del_if</a>));
<a name="l00593"></a>00593 }
<a name="l00594"></a>00594 
<a name="l00595"></a>00595 <span class="keyword">struct </span>msg *
<a name="l00596"></a>00596 <a class="code" href="ospf__api_8h.html#a4ca66249c497e61d5feecc741b46fd88">new_msg_ism_change</a> (u_int32_t seqnr, <span class="keyword">struct</span> in_addr ifaddr,
<a name="l00597"></a>00597             <span class="keyword">struct</span> in_addr area_id, u_char status)
<a name="l00598"></a>00598 {
<a name="l00599"></a>00599   <span class="keyword">struct </span><a class="code" href="structmsg__ism__change.html">msg_ism_change</a> imsg;
<a name="l00600"></a>00600 
<a name="l00601"></a>00601   imsg.<a class="code" href="structmsg__ism__change.html#a7b19087e579447788834bcd09c19a6cb">ifaddr</a> = <a class="code" href="structmsg__ism__change.html#a7b19087e579447788834bcd09c19a6cb">ifaddr</a>;
<a name="l00602"></a>00602   imsg.area_id = <a class="code" href="structmsg__ism__change.html#afebcc898dfae3fce3d2da97eb36d3e0f">area_id</a>;
<a name="l00603"></a>00603   imsg.status = <a class="code" href="structmsg__ism__change.html#a6a63caf8b3d86cc2cb9caa26368fcf37">status</a>;
<a name="l00604"></a>00604   memset (&amp;imsg.pad, 0, sizeof (imsg.pad));
<a name="l00605"></a>00605 
<a name="l00606"></a>00606   <span class="keywordflow">return</span> <a class="code" href="ospf__api_8h.html#a6972a68916d0733da78e8a9c3ee4ab18">msg_new</a> (<a class="code" href="ospf__api_8h.html#abe2abd233ea2ab4e2fff482d4e377d96">MSG_ISM_CHANGE</a>, &amp;imsg, seqnr,
<a name="l00607"></a>00607           <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structmsg__ism__change.html">msg_ism_change</a>));
<a name="l00608"></a>00608 }
<a name="l00609"></a>00609 
<a name="l00610"></a>00610 <span class="keyword">struct </span>msg *
<a name="l00611"></a>00611 <a class="code" href="ospf__api_8h.html#a4e76eb48e52763e5f327aa25ce91556c">new_msg_nsm_change</a> (u_int32_t seqnr, <span class="keyword">struct</span> in_addr ifaddr,
<a name="l00612"></a>00612             <span class="keyword">struct</span> in_addr nbraddr,
<a name="l00613"></a>00613             <span class="keyword">struct</span> in_addr router_id, u_char status)
<a name="l00614"></a>00614 {
<a name="l00615"></a>00615   <span class="keyword">struct </span><a class="code" href="structmsg__nsm__change.html">msg_nsm_change</a> nmsg;
<a name="l00616"></a>00616 
<a name="l00617"></a>00617   nmsg.<a class="code" href="structmsg__nsm__change.html#a0d7f33b61f76e9851ea5a9241e3a8f96">ifaddr</a> = <a class="code" href="structmsg__nsm__change.html#a0d7f33b61f76e9851ea5a9241e3a8f96">ifaddr</a>;
<a name="l00618"></a>00618   nmsg.nbraddr = <a class="code" href="structmsg__nsm__change.html#ae8dfe8a742b57d47e6cb37a8496caa9f">nbraddr</a>;
<a name="l00619"></a>00619   nmsg.router_id = <a class="code" href="structmsg__nsm__change.html#a7fe0c434888bcc9db5bccee878f3d8e9">router_id</a>;
<a name="l00620"></a>00620   nmsg.status = <a class="code" href="structmsg__nsm__change.html#affffb2df5df9b1660e1df5944e46f1ec">status</a>;
<a name="l00621"></a>00621   memset (&amp;nmsg.pad, 0, sizeof (nmsg.pad));
<a name="l00622"></a>00622 
<a name="l00623"></a>00623   <span class="keywordflow">return</span> <a class="code" href="ospf__api_8h.html#a6972a68916d0733da78e8a9c3ee4ab18">msg_new</a> (<a class="code" href="ospf__api_8h.html#aedb910a97bec22fdc4eb5858d558fa7b">MSG_NSM_CHANGE</a>, &amp;nmsg, seqnr,
<a name="l00624"></a>00624           <span class="keyword">sizeof</span> (<span class="keyword">struct</span> <a class="code" href="structmsg__nsm__change.html">msg_nsm_change</a>));
<a name="l00625"></a>00625 }
<a name="l00626"></a>00626 
<a name="l00627"></a>00627 <span class="keyword">struct </span>msg *
<a name="l00628"></a>00628 <a class="code" href="ospf__api_8h.html#afb4b60754cabab3068ae629ef115f61b">new_msg_lsa_change_notify</a> (u_char msgtype,
<a name="l00629"></a>00629                u_int32_t seqnum,
<a name="l00630"></a>00630                <span class="keyword">struct</span> in_addr ifaddr,
<a name="l00631"></a>00631                <span class="keyword">struct</span> in_addr area_id,
<a name="l00632"></a>00632                u_char is_self_originated, <span class="keyword">struct</span> <a class="code" href="structlsa__header.html">lsa_header</a> *data)
<a name="l00633"></a>00633 {
<a name="l00634"></a>00634   u_char buf[<a class="code" href="ospf__api_8h.html#ae1cfde6e2a151d918e70a78788ab75c7">OSPF_API_MAX_MSG_SIZE</a>];
<a name="l00635"></a>00635   <span class="keyword">struct </span><a class="code" href="structmsg__lsa__change__notify.html">msg_lsa_change_notify</a> *nmsg;
<a name="l00636"></a>00636   <span class="keywordtype">int</span> len;
<a name="l00637"></a>00637 
<a name="l00638"></a>00638   <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a> (data);
<a name="l00639"></a>00639 
<a name="l00640"></a>00640   nmsg = (<span class="keyword">struct </span><a class="code" href="structmsg__lsa__change__notify.html">msg_lsa_change_notify</a> *) buf;
<a name="l00641"></a>00641   len = ntohs (data-&gt;<a class="code" href="structlsa__header.html#afdc4c3f29adf98aa83bbef468b8baede">length</a>) + <span class="keyword">sizeof</span> (<span class="keyword">struct </span><a class="code" href="structmsg__lsa__change__notify.html">msg_lsa_change_notify</a>)
<a name="l00642"></a>00642     - sizeof (struct <a class="code" href="structlsa__header.html">lsa_header</a>);
<a name="l00643"></a>00643   nmsg-&gt;<a class="code" href="structmsg__lsa__change__notify.html#a7b460cf42694451565db194e3fe250ad">ifaddr</a> = <a class="code" href="structmsg__lsa__change__notify.html#a7b460cf42694451565db194e3fe250ad">ifaddr</a>;
<a name="l00644"></a>00644   nmsg-&gt;<a class="code" href="structmsg__lsa__change__notify.html#a9be8a196b739bb879fb18c0503a23a35">area_id</a> = <a class="code" href="structmsg__lsa__change__notify.html#a9be8a196b739bb879fb18c0503a23a35">area_id</a>;
<a name="l00645"></a>00645   nmsg-&gt;<a class="code" href="structmsg__lsa__change__notify.html#af267d46cf19476332978ef9c7eb30181">is_self_originated</a> = <a class="code" href="structmsg__lsa__change__notify.html#af267d46cf19476332978ef9c7eb30181">is_self_originated</a>;
<a name="l00646"></a>00646   memset (&amp;nmsg-&gt;<a class="code" href="structmsg__lsa__change__notify.html#ade1169c98a7731a8fe98537ff8a5de54">pad</a>, 0, sizeof (nmsg-&gt;<a class="code" href="structmsg__lsa__change__notify.html#ade1169c98a7731a8fe98537ff8a5de54">pad</a>));
<a name="l00647"></a>00647   <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a> (&amp;nmsg-&gt;<a class="code" href="structmsg__lsa__change__notify.html#a41d054ddd981ab0b718ca93cf366407f">data</a>, data, ntohs (data-&gt;<a class="code" href="structlsa__header.html#afdc4c3f29adf98aa83bbef468b8baede">length</a>));
<a name="l00648"></a>00648 
<a name="l00649"></a>00649   <span class="keywordflow">return</span> <a class="code" href="ospf__api_8h.html#a6972a68916d0733da78e8a9c3ee4ab18">msg_new</a> (msgtype, nmsg, seqnum, len);
<a name="l00650"></a>00650 }
<a name="l00651"></a>00651 
<a name="l00652"></a>00652 <span class="comment">/* 08/24/2011 yic+ */</span>
<a name="l00653"></a>00653 <span class="keyword">struct </span>msg *<a class="code" href="ospf__api_8h.html#af7ea77ff791554b2924e3782c1213e51">new_msg_router_routing_table_change</a>(u_int32_t seqnr,
<a name="l00654"></a>00654         <span class="keyword">struct</span> in_addr router_id, <span class="keyword">struct</span> <a class="code" href="structroute__node.html">route_node</a> *rn)
<a name="l00655"></a>00655 {
<a name="l00656"></a>00656     <span class="keyword">struct </span><a class="code" href="structmsg__router__routing__table__change.html">msg_router_routing_table_change</a> *nmsg, *tmsg;
<a name="l00657"></a>00657     <span class="keyword">struct </span>msg *result;
<a name="l00658"></a>00658     <span class="keyword">struct </span><a class="code" href="structlistnode.html">listnode</a> *node, *pnode;
<a name="l00659"></a>00659     <span class="keyword">struct </span><a class="code" href="structospf__route.html">ospf_route</a> *or;
<a name="l00660"></a>00660     <span class="keyword">struct </span><a class="code" href="structospf__path.html">ospf_path</a> *path;
<a name="l00661"></a>00661     <span class="keywordtype">int</span> size;
<a name="l00662"></a>00662 
<a name="l00663"></a>00663     size = <span class="keyword">sizeof</span>(<span class="keyword">struct </span><a class="code" href="structmsg__router__routing__table__change.html">msg_router_routing_table_change</a>) - sizeof(struct in_addr);
<a name="l00664"></a>00664     nmsg = <a class="code" href="regex_8c.html#ab7e36af3707843f77cc5b4e831c2fa6d">malloc</a>(size);
<a name="l00665"></a>00665     nmsg-&gt;router_id = <a class="code" href="structmsg__router__routing__table__change.html#a4e24e8a4ee6a3b9f6c1c4d74236b7f95">router_id</a>;
<a name="l00666"></a>00666     nmsg-&gt;nexthop_count = 0;
<a name="l00667"></a>00667 
<a name="l00668"></a>00668     <span class="keywordflow">if</span> (rn &amp;&amp; rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>)
<a name="l00669"></a>00669     {
<a name="l00670"></a>00670         <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a>((<span class="keyword">struct</span> <a class="code" href="structlist.html">list</a> *)rn-&gt;<a class="code" href="structroute__node.html#a20aabb1a6fbe9de363a1c57fe3124c87">info</a>, node, or))
<a name="l00671"></a>00671         {
<a name="l00672"></a>00672             <span class="keywordflow">for</span> (<a class="code" href="linklist_8h.html#a80a3f4035be83abbb709d17412993226">ALL_LIST_ELEMENTS_RO</a>(or-&gt;<a class="code" href="structospf__route.html#af687c07f0e39d7c3a29813777032b075">paths</a>, pnode, path))
<a name="l00673"></a>00673             {
<a name="l00674"></a>00674                 size += <span class="keyword">sizeof</span>(<span class="keyword">struct </span>in_addr);
<a name="l00675"></a>00675                 tmsg = <a class="code" href="regex_8c.html#a3d4d6185d412b00bc3def2b58b2898cc">realloc</a>(nmsg, size);
<a name="l00676"></a>00676                 <a class="code" href="regex_8c.html#ad6d5aaa966ca7424f7cb9bd01f2c838b">assert</a>(tmsg);
<a name="l00677"></a>00677                 nmsg = tmsg;
<a name="l00678"></a>00678                 <a class="code" href="regex_8c.html#aed653b4838032a2c5ce8960421c8cfd7">memcpy</a>(&amp;nmsg-&gt;nexthops[nmsg-&gt;nexthop_count], &amp;path-&gt;<a class="code" href="structospf__path.html#a01fa8433844b50cd272e6e082114c257">nexthop</a>, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> in_addr));
<a name="l00679"></a>00679                 nmsg-&gt;nexthop_count ++;
<a name="l00680"></a>00680             }
<a name="l00681"></a>00681         }
<a name="l00682"></a>00682     }
<a name="l00683"></a>00683 
<a name="l00684"></a>00684     nmsg-&gt;nexthop_count = htonl(nmsg-&gt;nexthop_count);
<a name="l00685"></a>00685 
<a name="l00686"></a>00686     result = <a class="code" href="ospf__api_8h.html#a6972a68916d0733da78e8a9c3ee4ab18">msg_new</a>(<a class="code" href="ospf__api_8h.html#af61980ebf7c4e41d70378e90dca524f7">MSG_ROUTER_ROUTING_TABLE_CHANGE</a>, nmsg, seqnr, size);
<a name="l00687"></a>00687     free(nmsg);
<a name="l00688"></a>00688     <span class="keywordflow">return</span> result;
<a name="l00689"></a>00689 }
<a name="l00690"></a>00690 
<a name="l00691"></a>00691 <span class="preprocessor">#endif </span><span class="comment">/* SUPPORT_OSPF_API */</span>
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="ospf__api_8c.html">ospf_api.c</a>      </li>

    <li class="footer">Generated on Tue Apr 24 2012 10:41:06 for OSPFN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.5.1 </li>
   </ul>
 </div>


</body>
</html>
